{
  List<SNode> nodes=new ArrayList<SNode>();
  SModule module=SNodeOperations.getModel(node).getModule();
  if (!((module instanceof Language))) {
    return nodes;
  }
  SModel aspectModel=SModuleOperations.getAspect(module,"dataFlow");
  if (aspectModel == null) {
    return nodes;
  }
  ListSequence.fromList(nodes).addSequence(Sequence.fromIterable(((Iterable<SNode>)BHReflection.invoke(node,SMethodTrimmedId.create("findConceptAspects",MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"),"4G9PD8$NvPM"),aspectModel))));
  return nodes;
}
