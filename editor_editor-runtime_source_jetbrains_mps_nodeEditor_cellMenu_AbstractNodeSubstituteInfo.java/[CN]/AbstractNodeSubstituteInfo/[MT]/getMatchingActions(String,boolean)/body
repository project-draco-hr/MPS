{
  return ModelAccess.instance().runReadAction(new Computable<List<INodeSubstituteAction>>(){
    public List<INodeSubstituteAction> compute(){
      List<INodeSubstituteAction> actionsFromCache=getActionsFromCache(pattern,strictMatching);
      ArrayList<INodeSubstituteAction> result=new ArrayList<INodeSubstituteAction>(actionsFromCache.size());
      for (      INodeSubstituteAction item : actionsFromCache) {
        if (strictMatching ? item.canSubstituteStrictly(pattern) : item.canSubstitute(pattern)) {
          result.add(item);
        }
      }
      putActionsToCache(pattern,strictMatching,result);
      result.trimToSize();
      return result;
    }
  }
);
}
