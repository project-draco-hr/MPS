{
  ourModelForTypechecking=TemporaryModels.getInstance().create(false,false,TempModuleOptions.forDefaultModule());
  for (  SModuleReference l : SModelOperations.getAllImportedLanguages(getEditorContext().getModel())) {
    ((SModelBase)ourModelForTypechecking).getSModel().addLanguage(l);
  }
  try {
    final InequalitySystem inequalitiesSystem=getInequalitiesSystem(contextCell);
    List<SubstituteAction> substituteActionList=getMatchingActions(pattern,strictMatching);
    if (inequalitiesSystem == null)     return substituteActionList;
    List<SubstituteAction> result=new ArrayList<SubstituteAction>();
    for (    SubstituteAction nodeSubstituteAction : substituteActionList) {
      SNode type=nodeSubstituteAction.getActionType(pattern);
      if (type != null && inequalitiesSystem.satisfies(type)) {
        result.add(nodeSubstituteAction);
      }
    }
    return result;
  }
  finally {
    TemporaryModels.getInstance().dispose(ourModelForTypechecking);
    ourModelForTypechecking=null;
  }
}
