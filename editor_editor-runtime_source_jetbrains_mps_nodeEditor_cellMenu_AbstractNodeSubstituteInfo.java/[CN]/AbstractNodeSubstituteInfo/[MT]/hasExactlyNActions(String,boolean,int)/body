{
  return ModelAccess.instance().runReadAction(new Computable<Boolean>(){
    public Boolean compute(){
      Pair<String,List<INodeSubstituteAction>> pair=getPatternAndActions(pattern,strictMatching);
      List<INodeSubstituteAction> result=pair.o2;
      int count=0;
      for (      INodeSubstituteAction action : result) {
        if (strictMatching) {
          if (action.canSubstituteStrictly(pattern)) {
            count++;
          }
        }
 else {
          if (action.canSubstitute(pattern)) {
            count++;
          }
        }
        if (count > n)         return false;
      }
      return n == count;
    }
  }
);
}
