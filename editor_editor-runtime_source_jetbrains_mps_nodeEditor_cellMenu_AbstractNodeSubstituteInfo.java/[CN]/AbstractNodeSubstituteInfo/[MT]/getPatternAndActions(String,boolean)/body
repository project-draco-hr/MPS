{
  String smallPattern=pattern;
  List<INodeSubstituteAction> result=null;
  if (!strictMatching) {
    if (smallPattern != null) {
      while (smallPattern.length() > 0) {
        if (myPatternsToActionListsCache.containsKey(smallPattern)) {
          result=new ArrayList<INodeSubstituteAction>();
          result.addAll(myPatternsToActionListsCache.get(smallPattern));
          break;
        }
 else {
          smallPattern=smallPattern.substring(0,smallPattern.length() - 1);
        }
      }
    }
  }
 else {
    if (myStrictPatternsToActionListsCache.containsKey(smallPattern)) {
      result=new ArrayList<INodeSubstituteAction>();
      result.addAll(myStrictPatternsToActionListsCache.get(smallPattern));
    }
 else     if (myPatternsToActionListsCache.containsKey(smallPattern)) {
      result=new ArrayList<INodeSubstituteAction>();
      result.addAll(myPatternsToActionListsCache.get(smallPattern));
    }
  }
  if (result == null) {
    result=new ArrayList<INodeSubstituteAction>(getActions());
  }
  return new Pair<String,List<INodeSubstituteAction>>(smallPattern,result);
}
