{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("property",new BaseReferenceConstraintsDescriptor("property",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          SNode ot=TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(SNodeOperations.as(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true));
{
            IMatchingPattern pattern_vhbj14_b0a0=HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.ui.structure.UIObjectType");
            SNode coercedNode_vhbj14_b0a0=TypeChecker.getInstance().getRuntimeSupport().coerce_(ot,pattern_vhbj14_b0a0);
            if (coercedNode_vhbj14_b0a0 != null) {
              return Sequence.fromIterable(UIObject_Behavior.call_allExtends_8115675450774407592(SLinkOperations.getTarget(coercedNode_vhbj14_b0a0,"uiObject",false))).translate(new ITranslator2<SNode,SNode>(){
                public Iterable<SNode> translate(                SNode uio){
                  return SLinkOperations.getTargets(uio,"property",true);
                }
              }
);
            }
 else {
              return (Iterable<SNode>)null;
            }
          }
        }
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_vhbj14_a0a1a0a0a1a0b0a1a0;
        }
      }
;
    }
  }
);
  return references;
}
