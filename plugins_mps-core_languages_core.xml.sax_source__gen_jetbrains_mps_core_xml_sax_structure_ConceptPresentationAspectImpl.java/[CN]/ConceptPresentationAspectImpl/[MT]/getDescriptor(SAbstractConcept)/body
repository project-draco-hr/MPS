{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)LanguageRegistry.getInstance().getLanguage(MetaAdapterFactory.getLanguage(SLanguageId.deserialize("dcb5a83a-19a8-44ff-a4cb-fc7d324ecc63"),"jetbrains.mps.core.xml.sax")).getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case 0:
    return props_XMLSAXAttributeHandler;
case 1:
  return props_XMLSAXAttributeHandler_value;
case 2:
return props_XMLSAXAttributeReference;
case 3:
return props_XMLSAXAttributeRule;
case 4:
return props_XMLSAXBreakStatement;
case 5:
return props_XMLSAXChildHandler;
case 6:
return props_XMLSAXChildHandler_childObject;
case 7:
return props_XMLSAXChildRule;
case 8:
return props_XMLSAXChildRuleCondition;
case 9:
return props_XMLSAXDefaultChildHandler;
case 10:
return props_XMLSAXDefaultChildHandler_tagName;
case 11:
return props_XMLSAXDefaultChildRule;
case 12:
return props_XMLSAXFieldDeclaration;
case 13:
return props_XMLSAXFieldReference;
case 14:
return props_XMLSAXHandlerFunction;
case 15:
return props_XMLSAXHandler_resultObject;
case 16:
return props_XMLSAXLocatorExpression;
case 17:
return props_XMLSAXNodeCreator;
case 18:
return props_XMLSAXNodeRule;
case 19:
return props_XMLSAXNodeRuleParam;
case 20:
return props_XMLSAXNodeRuleParamRef;
case 21:
return props_XMLSAXNodeValidator;
case 22:
return props_XMLSAXParser;
case 23:
return props_XMLSAXTextHandler;
case 24:
return props_XMLSAXTextHandler_value;
case 25:
return props_XMLSAXTextRule;
}
throw new IllegalStateException();
}
