{
  if (SNodeOperations.isInstanceOf(Sequence.<SNode>fromIterable(parameterTypes).last(),"jetbrains.mps.baseLanguage.structure.VariableArityType")) {
    if (Sequence.<SNode>fromIterable(parameterTypes).count() - 1 > ListSequence.<SNode>fromList(arguments).count()) {
      return false;
    }
    SNode lastArgument=ListSequence.<SNode>fromList(arguments).last();
    SNode varArgType=SNodeOperations.cast(Sequence.<SNode>fromIterable(parameterTypes).last(),"jetbrains.mps.baseLanguage.structure.VariableArityType");
    Iterator<SNode> pTypesItr=Sequence.<SNode>fromIterable(parameterTypes).iterator();
    Iterator<SNode> argumentsItr=ListSequence.<SNode>fromList(arguments).iterator();
    while (pTypesItr.hasNext()) {
      SNode parameterType=pTypesItr.next();
      SNode argument=(argumentsItr.hasNext() ? argumentsItr.next() : null);
      if (parameterType == varArgType) {
        if (argument == null) {
          return true;
        }
        SNode mayBeLastArgumentType=TypeChecker.getInstance().getTypeOf(argument);
        SNode varArgComponentType=SLinkOperations.getTarget(varArgType,"componentType",true);
        if ((lastArgument == argument) && SNodeOperations.isInstanceOf(mayBeLastArgumentType,"jetbrains.mps.baseLanguage.structure.ArrayType") && TypeChecker.getInstance().getSubtypingManager().isSubtype(SLinkOperations.getTarget(SNodeOperations.cast(mayBeLastArgumentType,"jetbrains.mps.baseLanguage.structure.ArrayType"),"componentType",true),varArgComponentType)) {
          return true;
        }
 else {
          while (argument != null) {
            if (!(TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(argument),varArgComponentType))) {
              return false;
            }
            argument=(argumentsItr.hasNext() ? argumentsItr.next() : null);
          }
          return true;
        }
      }
 else       if (!(TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(argument),parameterType))) {
        return false;
      }
    }
    return true;
  }
 else   if (Sequence.<SNode>fromIterable(parameterTypes).count() == ListSequence.<SNode>fromList(arguments).count()) {
{
      SNode parameterType;
      SNode argument;
      Iterator<SNode> parameterType_iterator=Sequence.<SNode>fromIterable(parameterTypes).iterator();
      Iterator<SNode> argument_iterator=ListSequence.<SNode>fromList(arguments).iterator();
      while (true) {
        if (!(parameterType_iterator.hasNext())) {
          break;
        }
        if (!(argument_iterator.hasNext())) {
          break;
        }
        parameterType=parameterType_iterator.next();
        argument=argument_iterator.next();
        if (!(TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(argument),parameterType))) {
          return false;
        }
      }
    }
    return true;
  }
 else {
    return false;
  }
}
