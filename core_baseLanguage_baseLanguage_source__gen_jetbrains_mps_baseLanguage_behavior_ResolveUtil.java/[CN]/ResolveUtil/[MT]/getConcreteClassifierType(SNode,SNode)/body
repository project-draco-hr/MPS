{
  SNode result=SNodeOperations.copyNode(typeWithVars);
  List<SNode> varRefs=SNodeOperations.getDescendants(result,"jetbrains.mps.baseLanguage.structure.TypeVariableReference",false,new String[]{});
  List<SNode> params=ListSequence.<SNode>fromList(SLinkOperations.getTargets(classifierSubtype,"parameter",true)).toListSequence();
  if (ListSequence.<SNode>fromList(params).count() == ListSequence.<SNode>fromList(varRefs).count()) {
    for (    SNode varRef : varRefs) {
      SNodeOperations.replaceWithAnother(varRef,SNodeOperations.copyNode(ListSequence.<SNode>fromList(params).getElement(SNodeOperations.getIndexInParent(SLinkOperations.getTarget(varRef,"typeVariableDeclaration",false)))));
    }
  }
 else {
    for (    SNode varRef : varRefs) {
      SNodeOperations.replaceWithAnother(varRef,TypeVariableDeclaration_Behavior.call_getConcreteUpperBound_4346214032091509920(SLinkOperations.getTarget(varRef,"typeVariableDeclaration",false)));
    }
  }
  return result;
}
