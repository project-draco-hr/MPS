{
  SNode method=SLinkOperations.getTarget(methodCall,"baseMethodDeclaration",false);
  SNode classifier=SNodeOperations.cast(SNodeOperations.getParent(method),"jetbrains.mps.baseLanguage.structure.IMemberContainer");
  List<SNode> members;
  if (SNodeOperations.isInstanceOf(methodCall,"jetbrains.mps.baseLanguage.structure.Classifier")) {
    members=Classifier_Behavior.call_getVisibleMembers_1213877306257(SNodeOperations.cast(classifier,"jetbrains.mps.baseLanguage.structure.Classifier"),methodCall,IClassifiersSearchScope.ANYTHING);
  }
 else {
    members=IMemberContainer_Behavior.call_getMembers_1213877531970(classifier);
  }
  List<SNode> methodsToShow=new ArrayList<SNode>();
  for (  SNode member : ListSequence.<SNode>fromList(members)) {
    if (SNodeOperations.isInstanceOf(member,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration") && eq_bha4h6_a0a0a5a0(SPropertyOperations.getString(SNodeOperations.cast(member,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"),"name"),SPropertyOperations.getString(method,"name"))) {
      ListSequence.<SNode>fromList(methodsToShow).addElement(SNodeOperations.cast(member,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"));
    }
  }
  return methodsToShow;
}
