{
  textGen.indentBuffer();
  textGen.append("/**");
  textGen.appendNewLine();
  DocCommentTextGen.javadocIndent(textGen);
  if (ListSequence.fromList(SLinkOperations.getTargets(node,"body",true)).isNotEmpty()) {
    for (    SNode item : SLinkOperations.getTargets(node,"body",true)) {
      TextGenManager.instance().appendNodeText(textGen.getContext(),textGen.getBuffer(),item,textGen.getSNode());
    }
  }
  if (!(BehaviorReflection.invokeVirtual(Boolean.TYPE,node,"virtual_isTagSectionEmpty_8465538089690623795",new Object[]{}))) {
    textGen.appendNewLine();
    DocCommentTextGen.javadocIndent(textGen);
  }
  if (ListSequence.fromList(SLinkOperations.getTargets(node,"author",true)).isNotEmpty()) {
    for (    SNode item : SLinkOperations.getTargets(node,"author",true)) {
      TextGenManager.instance().appendNodeText(textGen.getContext(),textGen.getBuffer(),item,textGen.getSNode());
    }
  }
  if (ListSequence.fromList(SLinkOperations.getTargets(node,"since",true)).isNotEmpty()) {
    for (    SNode item : SLinkOperations.getTargets(node,"since",true)) {
      TextGenManager.instance().appendNodeText(textGen.getContext(),textGen.getBuffer(),item,textGen.getSNode());
    }
  }
  if (ListSequence.fromList(SLinkOperations.getTargets(node,"version",true)).isNotEmpty()) {
    for (    SNode item : SLinkOperations.getTargets(node,"version",true)) {
      TextGenManager.instance().appendNodeText(textGen.getContext(),textGen.getBuffer(),item,textGen.getSNode());
    }
  }
  if (ListSequence.fromList(SLinkOperations.getTargets(node,"see",true)).isNotEmpty()) {
    for (    SNode item : SLinkOperations.getTargets(node,"see",true)) {
      TextGenManager.instance().appendNodeText(textGen.getContext(),textGen.getBuffer(),item,textGen.getSNode());
    }
  }
}
