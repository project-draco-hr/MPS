{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(childConcept,NameUtil.nodeFQName(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          SNode behavior=SNodeOperations.getNodeAncestor(_context.getParentNode(),MetaAdapterFactory.getConcept(new UUID(-5808042798135555774l,-8657779246725685839l),1225194240794l,"jetbrains.mps.lang.behavior.structure.ConceptBehavior"),true,false);
          return AbstractConceptDeclaration_Behavior.call_getAvailableConceptMethods_1213877394200(SLinkOperations.getTarget(behavior,MetaAdapterFactory.getReferenceLink(new UUID(-5808042798135555774l,-8657779246725685839l),1225194240794l,1225194240799l,"concept")),_context.getParentNode());
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SNode expr=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.DotExpression",null);
              SNodeFactoryOperations.setNewChild(expr,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1197027756228l,1197027771414l,"operand"),"jetbrains.mps.lang.behavior.structure.ThisNodeExpression");
              SNode call=SNodeFactoryOperations.createNewNode("jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall",null);
              SLinkOperations.setTarget(call,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141037l,"baseMethodDeclaration"),(item));
              SLinkOperations.setTarget(expr,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1197027756228l,1197027833540l,"operation"),call);
              return expr;
            }
          }
);
        }
      }
    }
  }
  return result;
}
