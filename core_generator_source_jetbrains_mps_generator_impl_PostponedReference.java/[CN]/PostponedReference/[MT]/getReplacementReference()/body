{
  if (myReplacementReference != null) {
    return myReplacementReference;
  }
  if (myReferenceInfo == null) {
    return null;
  }
  String role=myReferenceInfo.getReferenceRole();
  SNode outputSourceNode=myReferenceInfo.getOutputSourceNode();
  SModelReference targetModelReference=myReferenceInfo.getTargetModelReference(myGenerator);
  SNode outputTargetNode=myReferenceInfo.doResolve_Straightforward(myGenerator);
  if (outputTargetNode != null) {
    myReplacementReference=new StaticReference(role,outputSourceNode,outputTargetNode);
  }
 else   if (SReferenceUtil.isDynamicResolve(role,outputSourceNode)) {
    myReplacementReference=new DynamicReference(role,outputSourceNode,targetModelReference,myReferenceInfo.getResolveInfoForDynamicResolve());
  }
 else {
    outputTargetNode=myReferenceInfo.doResolve_Tricky(myGenerator);
    if (outputTargetNode != null) {
      if (checkResolvedTarget(outputSourceNode,role,outputTargetNode)) {
        myReplacementReference=new StaticReference(role,outputSourceNode,outputTargetNode);
      }
 else {
        myReplacementReference=new StaticReference(role,outputSourceNode,targetModelReference,null,myReferenceInfo.getResolveInfoForNothing());
      }
    }
 else     if (myReferenceInfo.isRequired()) {
      myGenerator.getLogger().error(myReferenceInfo.getOutputSourceNode(),"cannot resolve required reference; role: '" + myReferenceInfo.getReferenceRole() + "' in output node "+ myReferenceInfo.getOutputSourceNode().getDebugText(),myReferenceInfo.getErrorDescriptions());
      myReplacementReference=new StaticReference(role,outputSourceNode,targetModelReference,null,myReferenceInfo.getResolveInfoForNothing());
    }
 else {
    }
  }
  myReferenceInfo=null;
  return myReplacementReference;
}
