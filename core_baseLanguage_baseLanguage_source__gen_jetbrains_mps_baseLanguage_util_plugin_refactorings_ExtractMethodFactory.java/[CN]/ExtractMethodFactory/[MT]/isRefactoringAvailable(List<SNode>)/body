{
  SNode first=ListSequence.<SNode>fromList(nodes).first();
  boolean hasProperContainer=(SNodeOperations.getAncestor(first,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration",false,false) != null) || (SNodeOperations.getAncestor(first,"jetbrains.mps.baseLanguage.structure.ConceptFunction",false,false) != null);
  return ((ListSequence.<SNode>fromList(nodes).count() == 1 && SNodeOperations.isInstanceOf(first,"jetbrains.mps.baseLanguage.structure.Expression")) || SNodeOperations.isInstanceOf(first,"jetbrains.mps.baseLanguage.structure.Statement")) && hasProperContainer;
}
