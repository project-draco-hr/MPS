{
  List<ScriptApplied.ScriptAppliedReference> result=ListSequence.fromList(new ArrayList<ScriptApplied.ScriptAppliedReference>());
  for (  SLanguage lang : SetSequence.fromSet(getUsedLanguages(module))) {
    int currentLangVersion=lang.getLanguageVersion();
    int ver=module.getUsedLanguageVersion(lang);
    ver=Math.max(ver,0);
    currentLangVersion=Math.max(currentLangVersion,0);
    for (int i=ver; i < currentLangVersion; i++) {
      ListSequence.fromList(result).addElement(new MigrationScriptApplied.MigrationScriptAppliedReference(new MigrationScriptReference(lang,i),module));
    }
  }
  for (  SModule dep : SetSequence.fromSet(getModuleDependencies(module))) {
    int currentDepVersion=((AbstractModule)dep).getModuleVersion();
    int ver=((AbstractModule)module).getDependencyVersion(dep);
    ver=Math.max(ver,0);
    currentDepVersion=Math.max(currentDepVersion,0);
    for (int i=ver; i < currentDepVersion; i++) {
      ListSequence.fromList(result).addElement(new RefactoringLogApplied.RefactoringLogAppliedReference(new RefactoringLogReference(dep,i),module));
    }
  }
  return result;
}
