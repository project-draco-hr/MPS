{
  module.validateLanguageVersions();
  List<Tuples._3<SModule,Integer,Integer>> result=ListSequence.fromList(new ArrayList<Tuples._3<SModule,Integer,Integer>>());
  for (  SLanguage lang : SetSequence.fromSet(module.getUsedLanguages())) {
    Integer ver=module.getModuleDescriptor().getLanguageVersions().get(lang);
    if (ver == null) {
      if (LOG.isEnabledFor(Level.WARN)) {
        LOG.warn("no version for language " + lang.getQualifiedName() + " in "+ module.getModuleName());
      }
    }
 else {
      if (ver != lang.getLanguageVersion()) {
        ListSequence.fromList(result).addElement(MultiTuple.<SModule,Integer,Integer>from(lang.getSourceModule(),ver,as_7hm1hv_a0c0a0a0a0a1a2a2(lang.getSourceModule(),Language.class).getLanguageVersion()));
      }
    }
  }
  return result;
}
