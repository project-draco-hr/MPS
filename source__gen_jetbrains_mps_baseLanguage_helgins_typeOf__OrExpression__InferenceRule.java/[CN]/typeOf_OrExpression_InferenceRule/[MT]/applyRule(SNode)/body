{
  TypeChecker.getInstance().getRuntimeSupport().createLessThanInequation(TypeChecker.getInstance().getRuntimeSupport().typeOf(SLinkOperations.getTarget(argument,"leftExpression",true)),new QuotationClass_37().createNode(),SLinkOperations.getTarget(argument,"leftExpression",true));
  TypeChecker.getInstance().getRuntimeSupport().createLessThanInequation(TypeChecker.getInstance().getRuntimeSupport().typeOf(SLinkOperations.getTarget(argument,"rightExpression",true)),new QuotationClass_38().createNode(),SLinkOperations.getTarget(argument,"rightExpression",true));
  TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_39().createNode(),argument);
}
