{
  if (ApplicationManager.getApplication().isUnitTestMode() || myProject.isDefault()) {
    return;
  }
  final MergeDriverNotification mergeDriverNotification=MergeDriverNotification.getInstance(myProject);
  mergeDriverNotification.showNotificationIfNeeded();
  myMessageBusConnection=myProject.getMessageBus().connect();
  VcsListener vcsListener=new VcsListener(){
    public void directoryMappingChanged(){
      mergeDriverNotification.showNotificationIfNeeded();
    }
  }
;
  myMessageBusConnection.subscribe(ProjectLevelVcsManager.VCS_CONFIGURATION_CHANGED,vcsListener);
  DiskMemoryConflictResolver.setResolver(new DiskMemoryConflictResolver(){
    public boolean resolveDiskMemoryConflict(    IFile file,    SModel model){
      return VcsHelper.resolveDiskMemoryConflict(file,model);
    }
  }
);
  if (InternalFlag.isInternalMode()) {
    SourceRevision.setProvider(new MPSSourceRevision());
  }
}
