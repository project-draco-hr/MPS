{
  if (!(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(localMethodCall,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbbebabf0aL,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration")))) {
    return;
  }
  List<SNode> containers=SNodeOperations.getNodeAncestors(localMethodCall,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"),false);
  Set<SNode> containersAndParentClasses=SetSequence.fromSet(new HashSet<SNode>());
  for (  SNode classConcept : containers) {
    List<SNode> classifiers=new ClassifierAndSuperClassifiersScope(classConcept).getClassifiers();
    for (    SNode classifier : classifiers) {
      SetSequence.fromSet(containersAndParentClasses).addElement(classifier);
    }
  }
  if (!(SetSequence.fromSet(containersAndParentClasses).contains(SNodeOperations.getParent(SLinkOperations.getTarget(localMethodCall,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration")))))) {
  }
}
