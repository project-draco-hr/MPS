{
  EditorCell_Property editorCell=EditorCell_Property.create(editorContext,new ModelAccessor(){
    public String getText(){
      return (SPropertyOperations.getString(node,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1133920641626l,1156235010670l,"alias")) != null ? SPropertyOperations.getString(node,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1133920641626l,1156235010670l,"alias")) : SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(node),MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1169125787135l,5092175715804935370l,"conceptAlias")));
    }
    public void setText(    String s){
    }
    public boolean isValidText(    String s){
      return EqualUtil.equals(s,getText());
    }
  }
,node);
  editorCell.setAction(CellActionType.DELETE,EmptyCellAction.getInstance());
  editorCell.setAction(CellActionType.BACKSPACE,EmptyCellAction.getInstance());
  editorCell.setSubstituteInfo(new CompositeSubstituteInfo(editorContext,new BasicCellContext(node),new SubstituteInfoPartExt[]{new AbstractContainerCreator_Component.ReplaceWith_AbstractContainerCreator_cellMenu_jky4mt_a0a0()}));
  editorCell.setCellId("ReadOnlyModelAccessor_jky4mt_a0");
  Style style=new StyleImpl();
  BaseLanguageStyle_StyleSheet.apply_KeyWord(style,editorCell);
  style.set(StyleAttributes.PADDING_RIGHT,0,new Padding(0.0,Measure.SPACES));
  style.set(StyleAttributes.RT_ANCHOR_TAG,0,"ext_1_RTransform");
  editorCell.getStyle().putAll(style);
  return editorCell;
}
