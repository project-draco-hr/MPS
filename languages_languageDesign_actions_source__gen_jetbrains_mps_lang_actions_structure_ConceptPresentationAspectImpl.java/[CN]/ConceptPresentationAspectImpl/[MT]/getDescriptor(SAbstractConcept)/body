{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)LanguageRegistry.getInstance().getLanguage(MetaAdapterFactory.getLanguage(SLanguageId.deserialize("aee9cad2-acd4-4608-aef2-0004f6a1cdbd"),"jetbrains.mps.lang.actions")).getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case 0:
    return props_AddMenuPart;
case 1:
  return props_ConceptFunctionParameter_EditorCell;
case 2:
return props_ConceptFunctionParameter_OperationContext;
case 3:
return props_ConceptFunctionParameter_childConcept;
case 4:
return props_ConceptFunctionParameter_childSetter;
case 5:
return props_ConceptFunctionParameter_concept;
case 6:
return props_ConceptFunctionParameter_createdNode;
case 7:
return props_ConceptFunctionParameter_currentTargetNode;
case 8:
return props_ConceptFunctionParameter_link;
case 9:
return props_ConceptFunctionParameter_nodeToCopyPreProcess;
case 10:
return props_ConceptFunctionParameter_nodeToCopyPreProcessOriginal;
case 11:
return props_ConceptFunctionParameter_nodeToPastePostProcess;
case 12:
return props_ConceptFunctionParameter_nodeToPasteWrap;
case 13:
return props_ConceptFunctionParameter_nodeToWrap;
case 14:
return props_ConceptFunctionParameter_parameterObject;
case 15:
return props_ConceptFunctionParameter_parentNode;
case 16:
return props_ConceptFunctionParameter_pattern;
case 17:
return props_ConceptFunctionParameter_result;
case 18:
return props_ConceptFunctionParameter_sourceNode;
case 19:
return props_ConceptFunctionParameter_strictly;
case 20:
return props_ConceptFunctionParameter_targetNode;
case 21:
return props_ConceptFunctionParameter_wrapped;
case 22:
return props_ConceptPart;
case 23:
return props_ConceptRightTransformPart;
case 24:
return props_ConceptSubstitutePart;
case 25:
return props_ConceptsSubstituteMenuPart;
case 26:
return props_CopyPasteHandlers;
case 27:
return props_CopyPreProcessFunction;
case 28:
return props_CopyPreProcessor;
case 29:
return props_ExecuteSmartActionFunction;
case 30:
return props_GenerateCodeAction;
case 31:
return props_GenericSubstituteMenuPart;
case 32:
return props_GetActionUIFunction;
case 33:
return props_ISideTransform_String;
case 34:
return props_ISubstitute_String;
case 35:
return props_IncludeRightTransformForNodePart;
case 36:
return props_IsSmartActionApplicableFunction;
case 37:
return props_MenuPart;
case 38:
return props_MigrateManuallyAnnotation;
case 39:
return props_MigratedToAnnotation;
case 40:
return props_NF_Concept_NewInstance;
case 41:
return props_NF_LinkList_AddNewChildOperation;
case 42:
return props_NF_Link_SetNewChildOperation;
case 43:
return props_NF_Model_CreateNewNodeOperation;
case 44:
return props_NF_Model_CreateNewRootNodeOperation;
case 45:
return props_NF_Node_InsertNewNextSiblingOperation;
case 46:
return props_NF_Node_InsertNewPrevSiblingOperation;
case 47:
return props_NF_Node_ReplaceWithNewOperation;
case 48:
return props_NodeFactories;
case 49:
return props_NodeFactory;
case 50:
return props_NodeSetupFunction;
case 51:
return props_NodeSetupFunction_EnclosingNode;
case 52:
return props_NodeSetupFunction_NewNode;
case 53:
return props_NodeSetupFunction_SampleNode;
case 54:
return props_NodeSubstituteActions;
case 55:
return props_NodeSubstituteActionsBuilder;
case 56:
return props_NodeSubstituteMenuBuilderPart;
case 57:
return props_NodeSubstitutePreconditionFunction;
case 58:
return props_ParameterizedSideTransformMenuPart;
case 59:
return props_ParameterizedSubstituteMenuPart;
case 60:
return props_PastePostProcessFunction;
case 61:
return props_PastePostProcessor;
case 62:
return props_PasteWrapper;
case 63:
return props_PasteWrappers;
case 64:
return props_QueryFunction_ActionType;
case 65:
return props_QueryFunction_CanSubstitute;
case 66:
return props_QueryFunction_GenericSubstituteMenuPart;
case 67:
return props_QueryFunction_IconNode;
case 68:
return props_QueryFunction_ParameterizedSideTransform_Handler;
case 69:
return props_QueryFunction_ParameterizedSideTransform_Query;
case 70:
return props_QueryFunction_ParameterizedSubstitute_Handler;
case 71:
return props_QueryFunction_ParameterizedSubstitute_Icon;
case 72:
return props_QueryFunction_ParameterizedSubstitute_Query;
case 73:
return props_QueryFunction_ParameterizedSubstitute_String;
case 74:
return props_QueryFunction_PasteWrapper;
case 75:
return props_QueryFunction_RemoveBy_Condition;
case 76:
return props_QueryFunction_ReturnSmallPart;
case 77:
return props_QueryFunction_STVariableInitializer;
case 78:
return props_QueryFunction_ST_CommonInitializer;
case 79:
return props_QueryFunction_ST_RemoveBy_Condition;
case 80:
return props_QueryFunction_SideTransform_ConceptHandler;
case 81:
return props_QueryFunction_SideTransform_Handler;
case 82:
return props_QueryFunction_SideTransform_Icon;
case 83:
return props_QueryFunction_SideTransform_NodeQuery;
case 84:
return props_QueryFunction_SideTransform_String;
case 85:
return props_QueryFunction_SubstituteIcon;
case 86:
return props_QueryFunction_SubstituteString;
case 87:
return props_QueryFunction_SubstituteVariableInitializer;
case 88:
return props_QueryFunction_SubstituteWrapper;
case 89:
return props_QueryFunction_Substitute_CommonInitializer;
case 90:
return props_QueryFunction_Substitute_Handler;
case 91:
return props_QueryFunction_Substitute_SelectionHandler;
case 92:
return props_RemoveByConditionPart;
case 93:
return props_RemoveDefaultsPart;
case 94:
return props_RemovePart;
case 95:
return props_RemoveSTByConditionPart;
case 96:
return props_SNodeCreatorAndInitializer;
case 97:
return props_SideTransformHintSubstituteActions;
case 98:
return props_SideTransformHintSubstituteActionsBuilder;
case 99:
return props_SideTransformHintSubstitutePreconditionFunction;
case 100:
return props_SideTransformMenuBuilderPart;
case 101:
return props_SideTransformMenuPart;
case 102:
return props_SideTransformVariableDeclaration;
case 103:
return props_SideTransformVariableReference;
case 104:
return props_SideTransform_SimpleString;
case 105:
return props_SimpleItemSubstitutePart;
case 106:
return props_SimpleSideTransformMenuPart;
case 107:
return props_SmartActionParameter;
case 108:
return props_SmartActionParameterReference;
case 109:
return props_SmartEditorActions;
case 110:
return props_SubstituteMenuPart;
case 111:
return props_SubstituteNodeBuilderVariableDeclaration;
case 112:
return props_SubstituteNodeBuilderVariableReference;
case 113:
return props_Substitute_SimpleString;
case 114:
return props_SurroundWithAction;
case 115:
return props_WrapperSubstituteMenuPart;
}
throw new IllegalStateException();
}
