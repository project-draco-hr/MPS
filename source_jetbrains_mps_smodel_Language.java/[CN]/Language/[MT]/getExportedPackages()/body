{
  List<String> result=new ArrayList<String>(super.getExportedPackages());
  List<String> aspects=new ArrayList<String>();
  if (!BootstrapLanguages.getInstance().getLanguagesUsedInCore().contains(this)) {
    aspects.add(".structure");
  }
  aspects.addAll(CollectionUtil.asList(".editor",".actions",".constraints",".intentions",".builder",".scripts",".helgins",".plugin",".textGen",".textPresentation",".design",".util",".runtime",".cfa"));
  result.add(getModuleUID());
  for (  String aspect : aspects) {
    result.add(getModuleUID() + aspect);
  }
  for (  Model m : getLanguageDescriptor().getAccessoryModels()) {
    result.add(m.getName());
  }
  result.add(getModuleUID() + ".generator.baseLanguage.template.main");
  result.addAll(getGeneratorsPacks());
  return result;
}
