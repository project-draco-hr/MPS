{
  Set<ILoggableRefactoring> result=new HashSet<ILoggableRefactoring>();
  SModelDescriptor scriptsModelDescriptor=getScriptsModelDescriptor();
  if (scriptsModelDescriptor == null) {
    return result;
  }
  SModel scriptsModel=scriptsModelDescriptor.getSModel();
  String packageName=scriptsModel.getLongName();
  for (  Refactoring refactoring : scriptsModel.allAdapters(Refactoring.class)) {
    try {
      Class<ILoggableRefactoring> cls=(Class<ILoggableRefactoring>)Class.forName(packageName + "." + refactoring.getName(),false,ClassLoaderManager.getInstance().getClassLoader());
      result.add(cls.getConstructor().newInstance());
    }
 catch (    ClassNotFoundException e) {
      LOG.error("Can't find a class : " + e.getMessage());
    }
catch (    Throwable t) {
      LOG.error(t);
    }
  }
  return result;
}
