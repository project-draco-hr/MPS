{
  List<PropertyDeclaration> allProperties=new ArrayList<PropertyDeclaration>();
  myProperties=new ArrayList<PropertyDeclaration>();
  myPropertyByName=new HashMap<String,PropertyDeclaration>();
  List<AbstractConceptDeclaration> concepts=((ConceptAndSuperConceptsCache)getOwnerCache()).getConcepts();
  for (int i=concepts.size() - 1; i >= 0; i--) {
    List<PropertyDeclaration> props=concepts.get(i).getPropertyDeclarations();
    for (    PropertyDeclaration prop : props) {
      allProperties.add(prop);
      String name=prop.getName();
      if (name == null) {
        continue;
      }
      if (myPropertyByName.containsKey(name)) {
        continue;
      }
      myProperties.add(prop);
      myPropertyByName.put(name,prop);
    }
  }
  myDependsOnNodes=new HashSet<SNode>();
  for (  AbstractConceptDeclaration concept : concepts) {
    myDependsOnNodes.add(concept.getNode());
  }
  for (  PropertyDeclaration prop : allProperties) {
    myDependsOnNodes.add(prop.getNode());
  }
}
