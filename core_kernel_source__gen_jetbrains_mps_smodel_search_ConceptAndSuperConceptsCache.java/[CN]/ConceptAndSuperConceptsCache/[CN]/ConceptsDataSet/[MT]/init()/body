{
  Set<AbstractConceptDeclaration> result=new LinkedHashSet<AbstractConceptDeclaration>();
  ConceptAndSuperConceptsCache.collectImplementedAndExtended(myTopConcept,result);
  result.add(SModelUtil_new.getBaseConcept());
  myConcepts=new ArrayList<AbstractConceptDeclaration>(result);
  myDependsOnNodes=new HashSet<SNode>();
  for (  AbstractConceptDeclaration concept : myConcepts) {
    myDependsOnNodes.add(concept.getNode());
    if (concept instanceof InterfaceConceptDeclaration) {
      for (      InterfaceConceptReference i : ((InterfaceConceptDeclaration)concept).getExtendses()) {
        myDependsOnNodes.add(i.getNode());
      }
    }
    if (concept instanceof ConceptDeclaration) {
      for (      InterfaceConceptReference i : ((ConceptDeclaration)concept).getImplementses()) {
        myDependsOnNodes.add(i.getNode());
      }
    }
  }
}
