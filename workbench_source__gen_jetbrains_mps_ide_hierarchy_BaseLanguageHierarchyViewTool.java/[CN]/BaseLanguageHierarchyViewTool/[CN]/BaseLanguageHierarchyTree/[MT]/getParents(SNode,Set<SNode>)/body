{
  HashSet<SNode> result=new HashSet<SNode>();
  if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.structure.ClassConcept")) {
    SNode classConcept=SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.ClassConcept");
    SNode classifierType=SLinkOperations.getTarget(classConcept,"superclass",true);
    if (classifierType != null) {
      SNode classifier=SLinkOperations.getTarget(classifierType,"classifier",false);
      if (SNodeOperations.isInstanceOf(classifier,"jetbrains.mps.baseLanguage.structure.ClassConcept")) {
        result.add(classifier);
      }
    }
    for (    SNode interfaceType : SLinkOperations.getTargets(classConcept,"implementedInterface",true)) {
      SNode interfaceClassifier=SLinkOperations.getTarget(interfaceType,"classifier",false);
      if (SNodeOperations.isInstanceOf(interfaceClassifier,"jetbrains.mps.baseLanguage.structure.Interface")) {
        result.add(interfaceClassifier);
      }
    }
  }
 else   if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.structure.Interface")) {
    SNode anInterface=SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.Interface");
    for (    SNode interfaceType : SLinkOperations.getTargets(anInterface,"extendedInterface",true)) {
      SNode interfaceClassifier=SLinkOperations.getTarget(interfaceType,"classifier",false);
      if (SNodeOperations.isInstanceOf(interfaceClassifier,"jetbrains.mps.baseLanguage.structure.Interface")) {
        result.add(interfaceClassifier);
      }
    }
  }
  return result;
}
