{
  super("Show getters for name property");
  this.addRefactoring(new AbstractMigrationRefactoring(){
    @Override public String getName(){
      return "Show getters for name property";
    }
    @Override public String getAdditionalInfo(){
      return "Show getters for name property";
    }
    @Override public SAbstractConcept getApplicableConcept(){
      return MetaAdapterFactory.getConcept(0x3f4bc5f5c6c14a28L,0x8b10c83066ffa4a1L,0x10b2a5eaa48L,"jetbrains.mps.lang.constraints.structure.NodePropertyConstraint");
    }
    @Override public boolean isApplicableInstanceNode(    SNode node){
      return eq_th6w08_a0a0d0a0a0a0b0a(SPropertyOperations.getString(SLinkOperations.getTarget(node,MetaAdapterFactory.getReferenceLink(0x3f4bc5f5c6c14a28L,0x8b10c83066ffa4a1L,0x10b2a5eaa48L,0x10b2a61697bL,"applicableProperty")),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")),"name");
    }
    @Override public void doUpdateInstanceNode(    SNode node){
    }
    @Override public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
