{
  if (CellLayout_Indent_Old.DO_INDENT_EVERYWHERE) {
    CellLayout_Indent_Old._doLayout(editorCells);
    return;
  }
  Iterable<EditorCell> cells=editorCells.getContentCells();
  final int x=editorCells.getX();
  final int y=editorCells.getY();
  int width;
  int height;
  int floor1=0;
  int floor2=0;
  int floor3=0;
  int floor1x=x;
  int floor2x=x;
  int floor3x=x;
  applyScaling(editorCells);
  for (  EditorCell cell : cells) {
    cell.relayout();
    ScriptKind skind=APIStyleAdapter.getStyleAttribute(cell,StyleAttributes.SCRIPT_KIND);
    int cellHeight=cell.getHeight();
switch (skind) {
case NORMAL:
      floor2=Math.max(floor2,cellHeight);
    break;
case SUBSCRIPT:
  floor1=Math.max(floor1,cellHeight);
break;
case SUPERSCRIPT:
floor3=Math.max(floor3,cellHeight);
break;
}
}
for (EditorCell cell : cells) {
ScriptKind skind=APIStyleAdapter.getStyleAttribute(cell,StyleAttributes.SCRIPT_KIND);
switch (skind) {
case NORMAL:
floor2x=Math.max(floor2x,Math.max(floor1x,floor3x));
cell.setY(y + floor3);
cell.setX(floor2x);
floor2x+=cell.getWidth();
floor3x=floor2x;
floor1x=floor2x;
break;
case SUBSCRIPT:
cell.setX(floor1x);
cell.setY(y + floor2 + floor3);
floor1x+=cell.getWidth();
break;
case SUPERSCRIPT:
cell.setX(floor3x);
cell.setY(y);
floor3x+=cell.getWidth();
break;
}
}
width=Math.max(floor2x,Math.max(floor1x,floor3x)) - x;
height=floor1 + floor2 + floor3;
editorCells.setWidth(width);
editorCells.setHeight(height);
}
