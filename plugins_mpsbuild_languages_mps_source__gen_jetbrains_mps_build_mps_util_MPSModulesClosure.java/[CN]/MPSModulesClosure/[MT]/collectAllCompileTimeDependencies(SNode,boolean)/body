{
  modules.add(module);
  for (  SNode m : getDependencies(module,reexportOnly)) {
    if (!(modules.contains(m))) {
      collectAllCompileTimeDependencies(m,true);
    }
  }
  if (reexportOnly) {
    return;
  }
  for (  SNode language : getUsedLanguages(module)) {
    boolean hasRuntime=false;
    for (    SNode rdep : SLinkOperations.getTargets(language,"runtime",true)) {
      if (!(SNodeOperations.isInstanceOf(rdep,"jetbrains.mps.build.mps.structure.BuildMps_ModuleSolutionRuntime"))) {
        hasRuntime=true;
        continue;
      }
      SNode runtimeSolution=SNodeOperations.as(toOriginal(SLinkOperations.getTarget(SNodeOperations.cast(rdep,"jetbrains.mps.build.mps.structure.BuildMps_ModuleSolutionRuntime"),"solution",false)),"jetbrains.mps.build.mps.structure.BuildMps_Solution");
      if (!(modules.contains(runtimeSolution))) {
        collectAllCompileTimeDependencies(runtimeSolution,true);
      }
    }
    if (hasRuntime) {
      languagesWithRuntime.add(language);
    }
  }
}
