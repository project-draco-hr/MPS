{
  long start=System.currentTimeMillis();
  final int reps=150000 / maxThreads;
  final List<int[]> list=Collections.synchronizedList(new ArrayList<int[]>());
  runInParallel(maxThreads,new Runnable(){
    public void run(){
      Random rnd=new Random();
      for (int count=reps; count > 0; --count) {
        int size=Math.max(20,Math.min(70,(int)(rnd.nextGaussian() * 10. + 50)));
        list.add(new int[size]);
      }
    }
  }
);
  long alloc=-start + (start=System.currentTimeMillis());
  runInParallel(maxThreads,new Runnable(){
    public void run(){
      Random rnd=new Random();
      for (      int[] iarr : list) {
        for (int i=0; i < iarr.length; ++i) {
          iarr[i]=rnd.nextInt();
        }
      }
    }
  }
);
  long filled=-start + (start=System.currentTimeMillis());
  list.clear();
  System.gc();
  System.gc();
  try {
    Thread.sleep(100);
  }
 catch (  InterruptedException e) {
  }
  System.gc();
  return alloc + filled;
}
