{
  IModule module=model.getModule();
  if (module == null)   return Collections.emptyList();
  List<SModelDescriptor> result=new ArrayList<SModelDescriptor>();
  ModelGenerationStatusManager statusManager=ModelGenerationStatusManager.getInstance();
  for (  Generator g : GenerationPartitioningUtil.getAllPossiblyEngagedGenerators(model.getSModel(),module.getScope())) {
    for (    SModelDescriptor sm : g.getOwnModelDescriptors()) {
      if (SModelStereotype.isUserModel(sm) && statusManager.generationRequired(sm,ProjectOperationContext.get(project))) {
        result.add(sm);
      }
    }
    for (    SModelDescriptor sm : g.getSourceLanguage().getAspectModelDescriptors()) {
      if (statusManager.generationRequired(sm,ProjectOperationContext.get(project))) {
        result.add(sm);
      }
    }
  }
  return result;
}
