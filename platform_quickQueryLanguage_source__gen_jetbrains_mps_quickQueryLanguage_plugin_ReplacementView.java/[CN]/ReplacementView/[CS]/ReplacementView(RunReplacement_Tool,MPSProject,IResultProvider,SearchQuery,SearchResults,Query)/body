{
  this.myTool=tool;
  this.myUsagesView=new UsagesView(project,new ViewOptions()){
    public void close(){
      ReplacementView.this.myTool.closeTab(ReplacementView.this);
    }
  }
;
  JPanel buttonPanel=new JPanel(new FlowLayout(FlowLayout.LEFT));
  this.myButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent event){
      final List<SNode> replaceNodes=ReplacementView.this.getExecuteResult(results);
      ModelAccess.instance().runWriteActionInCommand(new Runnable(){
        public void run(){
          try {
            for (            SNode node : replaceNodes) {
              query.doReplace(node);
              JOptionPane.showMessageDialog(null,"Replacement completed successfully","Information",JOptionPane.INFORMATION_MESSAGE);
            }
          }
 catch (          Throwable t) {
            JOptionPane.showMessageDialog(null,"Replacement completed with error","Error",JOptionPane.ERROR_MESSAGE);
          }
        }
      }
);
    }
  }
);
  this.myUsagesView.setRunOptions(provider,searchQuery,new UsagesView.ButtonConfiguration(true,true,true),results);
  buttonPanel.add(this.myButton);
  this.myMainPanel.add(buttonPanel,BorderLayout.SOUTH);
  this.myMainPanel.add(this.myUsagesView.getComponent(),BorderLayout.CENTER);
}
