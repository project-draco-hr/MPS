{
  Iterable<SNode> operators=ListSequence.<SNode>fromList(SModelOperations.getRootsIncludingImported(_context.getOriginalInputModel(),_context.getScope(),"jetbrains.mps.baseLanguage.overloadedOperators.structure.OverloadedOperatorContainer")).<SNode>translate(new ITranslator2<SNode,SNode>(){
    public Iterable<SNode> translate(    SNode it){
      return SLinkOperations.getTargets(it,"operators",true);
    }
  }
);
  return BinaryOperationUtil.hasOverloadedOperators(_context.getNode(),TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(),"leftExpression",true)),TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(),"rightExpression",true)),Sequence.<SNode>fromIterable(operators).toListSequence());
}
