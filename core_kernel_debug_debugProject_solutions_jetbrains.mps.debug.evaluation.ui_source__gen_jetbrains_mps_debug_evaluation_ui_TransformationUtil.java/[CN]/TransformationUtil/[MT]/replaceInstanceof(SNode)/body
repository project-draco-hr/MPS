{
  List<SNode> instanceofs=SNodeOperations.getDescendants(evaluateMethod,"jetbrains.mps.baseLanguage.structure.InstanceOfExpression",false,new String[]{});
  for (  SNode instanceofExpression : ListSequence.fromList(instanceofs)) {
    if (TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(instanceofExpression,"leftExpression",true)),new TransformationUtil.QuotationClass_crriw5_a1a0a0b0l().createNode())) {
      SNodeOperations.replaceWithAnother(instanceofExpression,new TransformationUtil.QuotationClass_crriw5_a0a0a0a0b0l().createNode(createStringLiteral(getJniSignatureFromType(SLinkOperations.getTarget(instanceofExpression,"classType",true))),SLinkOperations.getTarget(instanceofExpression,"leftExpression",true)));
    }
  }
}
