{
  for (  SNode thisExpression : ListSequence.fromList(SNodeOperations.getDescendants(evaluateMethod,"jetbrains.mps.baseLanguage.structure.IThisExpression",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return isUnprocessed(it);
    }
  }
)) {
    SNodeOperations.replaceWithAnother(thisExpression,createThisNodeReplacement());
  }
  for (  SNode thisExpression : ListSequence.fromList(SNodeOperations.getDescendants(evaluateMethod,"jetbrains.mps.debug.evaluation.structure.EvaluatorsThisExpression",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return isUnprocessed(it);
    }
  }
)) {
    SNodeOperations.replaceWithAnother(thisExpression,createThisNodeReplacement());
  }
  for (  SNode thisExpression : ListSequence.fromList(SNodeOperations.getDescendants(evaluateMethod,"jetbrains.mps.baseLanguageInternal.structure.InternalThisExpression",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return isUnprocessed(it);
    }
  }
)) {
    SNodeOperations.replaceWithAnother(thisExpression,createThisNodeReplacement());
  }
}
