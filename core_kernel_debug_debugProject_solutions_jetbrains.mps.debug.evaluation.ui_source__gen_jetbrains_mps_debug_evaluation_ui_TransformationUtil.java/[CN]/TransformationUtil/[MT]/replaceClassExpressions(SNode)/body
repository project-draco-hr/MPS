{
  for (  SNode classifierClassExpression : ListSequence.fromList(SNodeOperations.getDescendants(whatToEvaluate,"jetbrains.mps.baseLanguage.structure.ClassifierClassExpression",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return isUnprocessed(it);
    }
  }
)) {
    SNodeOperations.replaceWithAnother(classifierClassExpression,new TransformationUtil.QuotationClass_crriw5_a0a0a0a0p().createNode(createClassFqNameNode(SNodeOperations.getModel(whatToEvaluate),SLinkOperations.getTarget(classifierClassExpression,"classifier",false))));
  }
}
