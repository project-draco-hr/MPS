{
  if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type,new TransformationUtil.QuotationClass_crriw5_a1a0a0y().createNode())) {
    return "Z";
  }
 else   if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type,new TransformationUtil.QuotationClass_crriw5_a1a0a0a42().createNode())) {
    return "B";
  }
 else   if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type,new TransformationUtil.QuotationClass_crriw5_a1a0b0a42().createNode())) {
    return "C";
  }
 else   if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type,new TransformationUtil.QuotationClass_crriw5_a1a0c0a42().createNode())) {
    return "S";
  }
 else   if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type,new TransformationUtil.QuotationClass_crriw5_a1a0d0a42().createNode())) {
    return "I";
  }
 else   if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type,new TransformationUtil.QuotationClass_crriw5_a1a0e0a42().createNode())) {
    return "J";
  }
 else   if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type,new TransformationUtil.QuotationClass_crriw5_a1a0f0a42().createNode())) {
    return "F";
  }
 else   if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type,new TransformationUtil.QuotationClass_crriw5_a1a0g0a42().createNode())) {
    return "D";
  }
 else   if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type,new TransformationUtil.QuotationClass_crriw5_a1a0h0a42().createNode())) {
    return "V";
  }
 else   if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.ArrayType")) {
    return "[" + getJniSignatureFromType(SLinkOperations.getTarget(SNodeOperations.cast(type,"jetbrains.mps.baseLanguage.structure.ArrayType"),"componentType",true));
  }
 else   if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.ClassifierType")) {
    SNode typeCopy=SNodeOperations.copyNode(type);
    SNode classifier=SLinkOperations.getTarget(SNodeOperations.cast(typeCopy,"jetbrains.mps.baseLanguage.structure.ClassifierType"),"classifier",false);
    if (classifier == null) {
      SReference ref=SNodeOperations.getReference(SNodeOperations.cast(typeCopy,"jetbrains.mps.baseLanguage.structure.ClassifierType"),SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType","classifier"));
      String modelName=ref.getTargetSModelReference().getSModelFqName().getLongName();
      SModelReference stubModel=StubHelper.uidForPackageInStubs(modelName,AllMembersJavaStubs.DEBUG_JAVA_ID);
      ref.setTargetSModelReference(stubModel);
      classifier=SLinkOperations.getTarget(SNodeOperations.cast(typeCopy,"jetbrains.mps.baseLanguage.structure.ClassifierType"),"classifier",false);
    }
    return "L" + (INamedConcept_Behavior.call_getFqName_1213877404258(classifier).replace(".","/")) + ";";
  }
 else   if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.TypeVariableReference")) {
    return getJniSignatureFromType(Type_Behavior.call_getJavaType_1213877337345(SNodeOperations.cast(type,"jetbrains.mps.baseLanguage.structure.TypeVariableReference")));
  }
 else {
    LOG.error("Unknown type, assuming it's void",type);
  }
  return "V";
}
