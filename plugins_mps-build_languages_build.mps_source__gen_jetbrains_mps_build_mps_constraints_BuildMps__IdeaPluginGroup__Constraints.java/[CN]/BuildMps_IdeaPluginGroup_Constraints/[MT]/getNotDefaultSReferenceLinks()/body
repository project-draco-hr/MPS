{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(0xcf935df46994e9cL,0xa132fa109541cba3L,0x5b7be37b4deb1201L,0x5b7be37b4deb1202L),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xcf935df46994e9cL,0xa132fa109541cba3L,0x5b7be37b4deb1201L,0x5b7be37b4deb1202L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public boolean hasPresentation(){
          return true;
        }
        @Override public String getPresentation(        final IOperationContext operationContext,        final ReferencePresentationContext _context){
          if (SNodeOperations.getContainingRoot(_context.getParameterNode()) != SNodeOperations.getContainingRoot(_context.getContextNode())) {
            SNode proj=SNodeOperations.as(SNodeOperations.getContainingRoot(_context.getParameterNode()),MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,"jetbrains.mps.build.structure.BuildProject"));
            if (proj != null) {
              return SPropertyOperations.getString(proj,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")) + "/" + SPropertyOperations.getString(_context.getParameterNode(),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
            }
          }
          return SPropertyOperations.getString(_context.getParameterNode(),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_h6r07b_a0a2a0a0a1a0b0a1a1;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
{
            Scope scope=Scope.getScope(_context.getContextNode(),_context.getContextRole(),_context.getPosition(),(SNode)SConceptOperations.findConceptDeclaration("jetbrains.mps.build.mps.structure.BuildMps_Group"));
            return (scope == null ? new EmptyScope() : scope);
          }
        }
      }
;
    }
  }
);
  return references;
}
