{
  if (myProject == null || myProject.isDisposed()) {
    return new TextTreeNode("Empty");
  }
  MPSProject project=myProject.getComponent(MPSProject.class);
  ProjectTreeNode root=new ProjectTreeNode(project);
  List<MPSTreeNode> moduleNodes=new ArrayList<MPSTreeNode>();
  for (  Class<? extends IModule> cl : new Class[]{Solution.class,Language.class,Library.class,DevKit.class}) {
    for (    IModule module : project.getProjectModules(cl)) {
      moduleNodes.add(ProjectModuleTreeNode.createFor(project,module,false));
    }
  }
  ModulesNamespaceTreeBuilder builder=new ModulesNamespaceTreeBuilder(project);
  for (  MPSTreeNode mtn : moduleNodes) {
    builder.addNode(mtn);
  }
  builder.fillNode(root);
  myModulesPoolTreeNode=new ProjectModulesPoolTreeNode(project);
  root.add(myModulesPoolTreeNode);
  for (  TransientModelsModule module : myProject.getComponent(TransientModelsComponent.class).getModules()) {
    root.add(new TransientModelsTreeNode(myProject,module));
  }
  return root;
}
