{
  List<Edge> edges=graph.getEdges();
  EdgesHistoryManager manager=new EdgesHistoryManager(graph);
  EmbeddedGraph embeddedGraph=new ClusteredGraphEmbeddingFinder().find(graph);
  System.out.println(graph.getEdges());
  for (  Edge edge : ListSequence.fromList(edges)) {
    System.out.println("" + edge + ": "+ manager.getHistory(edge));
  }
  System.out.println("before: " + embeddedGraph);
  CheckEmbeddedGraph.checkEmbeddedGraph(embeddedGraph,false);
  CheckEmbeddedGraph.checkFull(embeddedGraph);
  Set<Edge> newEdges=BiconnectAugmentation.smartMakeBiconnected(graph);
  for (  Edge edge : SetSequence.fromSet(newEdges)) {
    graph.removeEdge(edge);
  }
  for (  Edge edge : SetSequence.fromSet(newEdges)) {
    ShortestPathEmbeddingFinder.restoreEdge(embeddedGraph,edge,false);
  }
  System.out.println("after: " + embeddedGraph);
  CheckEmbeddedGraph.checkEmbeddedGraph(embeddedGraph,false);
  CheckEmbeddedGraph.checkFull(embeddedGraph);
}
