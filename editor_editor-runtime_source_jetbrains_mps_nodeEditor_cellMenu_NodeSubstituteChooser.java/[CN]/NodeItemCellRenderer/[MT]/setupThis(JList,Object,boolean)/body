{
  SubstituteAction action=(SubstituteAction)value;
  String pattern=getPatternEditor().getPattern();
  if (!myLightweightMode) {
    try {
      Icon icon=null;
      if (action instanceof INodeSubstituteAction) {
        icon=((INodeSubstituteAction)action).getIconFor(pattern);
      }
      if (icon == null) {
        SNode iconNode=action.getIconNode(pattern);
        if (iconNode != null) {
          icon=(SNodeUtil.isInstanceOfConceptDeclaration(iconNode) && !(action.isReferentPresentation())) ? IconManager.getIconForConceptFQName(NameUtil.nodeFQName(iconNode)) : IconManager.getIconFor(iconNode);
        }
 else {
          icon=IdeIcons.DEFAULT_ICON;
        }
      }
      myLeft.setIcon(icon);
    }
 catch (    Throwable t) {
      LOG.error(t);
    }
  }
  try {
    int style;
    if (action.getParameterObject() instanceof SNode) {
      style=NodePresentationUtil.getFontStyle(action.getSourceNode(),(SNode)action.getParameterObject());
    }
 else {
      style=Font.PLAIN;
    }
    int oldStyle=myLeft.getFont().getStyle();
    if (oldStyle != style) {
      myLeft.setFont(myLeft.getFont().deriveFont(style));
      myRight.setFont(myRight.getFont().deriveFont(style));
    }
  }
 catch (  Throwable t) {
    LOG.error(t);
  }
  try {
    myLeft.setText(action.getVisibleMatchingText(pattern));
  }
 catch (  Throwable t) {
    myLeft.setText("!Exception was thrown!");
    LOG.error(t);
  }
  try {
    myRight.setText(action.getDescriptionText(pattern));
  }
 catch (  Throwable t) {
    myRight.setText("!Exception was thrown!");
    LOG.error(t);
  }
  if (isSelected) {
    setBackground(list.getSelectionBackground());
    setForeground(list.getSelectionForeground());
    myLeft.setForeground(list.getSelectionForeground());
    myRight.setForeground(list.getSelectionForeground());
  }
 else {
    setBackground(list.getBackground());
    setForeground(list.getForeground());
    myLeft.setForeground(list.getForeground());
    myRight.setForeground(list.getForeground());
  }
  myLeft.setPreferredSize(null);
  Dimension oldPreferredSize=myLeft.getPreferredSize();
  myLeft.setPreferredSize(new Dimension(oldPreferredSize.width + 1,oldPreferredSize.height));
}
