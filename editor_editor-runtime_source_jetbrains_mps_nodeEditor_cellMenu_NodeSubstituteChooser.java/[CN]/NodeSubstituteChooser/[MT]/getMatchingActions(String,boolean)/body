{
  return TypeContextManager.getInstance().runTypeCheckingComputation(myEditorComponent,myEditorComponent.getEditedNode(),new Computation<List<INodeSubstituteAction>>(){
    @Override public List<INodeSubstituteAction> compute(    TypeCheckingContext context){
      if (myIsSmart) {
        return myNodeSubstituteInfo.getSmartMatchingActions(pattern,strictMatching,myContextCell);
      }
 else {
        return myNodeSubstituteInfo.getMatchingActions(pattern,strictMatching);
      }
    }
  }
);
}
