{
  Class[] classes=new Class[]{BaseMethodDeclaration.class,Closure.class};
  INodeAdapter enclosingNode=nodeInsideClosure.getAdapter().findFirstParent(classes);
  if (enclosingNode instanceof InstanceMethodDeclaration || enclosingNode instanceof ConstructorDeclaration) {
    ThisExpression thisExpr=ThisExpression.newInstance(generator.getTargetModel());
    SNode enclosingClass=SNodeOperations.getAncestor(nodeInsideClosure,"jetbrains.mps.baseLanguage.structure.ClassConcept",false,false);
    if (enclosingClass == null) {
      ClassConcept adapter=(ClassConcept)SModelUtil_new.findNodeByFQName("java.lang.Object",ClassConcept.class,generator.getScope());
      enclosingClass=adapter.getNode();
    }
    thisExpr.setClassConcept((ClassConcept)enclosingClass.getAdapter());
    return thisExpr.getNode();
  }
  if (enclosingNode instanceof Closure) {
    SNode closureAdapterClass_output=generator.findOutputNodeByInputNodeAndMappingName(enclosingNode.getNode(),ClosuresMappingId.CLOSURE__ADAPTER_CLASS);
    ClassConcept closureAdapterClass_output_=(ClassConcept)closureAdapterClass_output.getAdapter();
    FieldDeclaration field=JavaModelUtil_new.findField(closureAdapterClass_output_,ClosuresMappingId.NAME__CLOSURE_ADAPTER__ENCLOSING_CLASS_FIELD);
    FieldReference fieldRef=FieldReference.newInstance(generator.getTargetModel());
    fieldRef.setInstance(ThisExpression.newInstance(generator.getTargetModel()));
    fieldRef.setFieldDeclaration(field);
    return BaseAdapter.fromAdapter(fieldRef);
  }
  return NullLiteral.newInstance(generator.getTargetModel()).getNode();
}
