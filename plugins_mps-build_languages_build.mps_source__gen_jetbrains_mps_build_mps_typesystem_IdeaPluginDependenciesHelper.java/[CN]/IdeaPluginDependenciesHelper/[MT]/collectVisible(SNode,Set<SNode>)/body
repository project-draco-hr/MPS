{
  if (!(seen.add(plugin))) {
    return;
  }
  visible.addAll(ListSequence.fromList(SLinkOperations.getTargets(plugin,"content",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginModule");
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginModule"),"target",false);
    }
  }
).toListSequence());
  visible.addAll(ListSequence.fromList(SLinkOperations.getTargets(plugin,"content",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginGroup");
    }
  }
).translate(new ITranslator2<SNode,SNode>(){
    public Iterable<SNode> translate(    SNode it){
      return SLinkOperations.getTargets(SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginGroup"),"group",false),"modules",true);
    }
  }
).toListSequence());
  for (  SNode dep : ListSequence.fromList(SLinkOperations.getTargets(plugin,"dependencies",true))) {
    collectVisible(SLinkOperations.getTarget(dep,"target",false),seen);
  }
}
