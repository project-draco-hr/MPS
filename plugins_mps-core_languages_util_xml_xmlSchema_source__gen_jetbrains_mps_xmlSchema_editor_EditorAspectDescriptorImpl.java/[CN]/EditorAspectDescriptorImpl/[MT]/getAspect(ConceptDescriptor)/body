{
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a,descriptor.getConceptFqName())) {
case 0:
    return new AttributeDeclaration_Editor();
case 1:
  return new AttributeExpression_Editor();
case 2:
return new AttributeGroup_Editor();
case 3:
return new AttributeGroupReference_Editor();
case 4:
return new BooleanSchemaType_Editor();
case 5:
return new BoundExpression_Editor();
case 6:
return new Choice_Editor();
case 7:
return new ComplexContent_Editor();
case 8:
return new ComplexType_Editor();
case 9:
return new ComplexTypeReference_Editor();
case 10:
return new ContentItem_Editor();
case 11:
return new Declaration_Editor();
case 12:
return new DeclarationBlock_Editor();
case 13:
return new ElementReference_Editor();
case 14:
return new ElementWithContent_Editor();
case 15:
return new ElementWithType_Editor();
case 16:
return new EntityBlock_Editor();
case 17:
return new EntityDeclaration_Editor();
case 18:
return new EntityLine_Editor();
case 19:
return new EntitySet_Editor();
case 20:
return new Extension_Editor();
case 21:
return new GroupDeclaration_Editor();
case 22:
return new GroupExpression_Editor();
case 23:
return new GroupReference_Editor();
case 24:
return new IntegerSchemaType_Editor();
case 25:
return new MaxOccursExpression_Editor();
case 26:
return new MixedAttribute_Editor();
case 27:
return new NamespaceDeclaration_Editor();
case 28:
return new OccursAttribute_Editor();
case 29:
return new Schema_Editor();
case 30:
return new SchemaComment_Editor();
case 31:
return new SchemaType_Editor();
case 32:
return new Sequence_Editor();
case 33:
return new SimpleContent_Editor();
case 34:
return new StringSchemaType_Editor();
case 35:
return new TextLine_Editor();
case 36:
return new TypeExpression_Editor();
case 37:
return new TypeExpressionList_Editor();
case 38:
return new UnboundExpression_Editor();
case 39:
return new UseAttribute_Editor();
default :
}
return null;
}
