{
  EditorCell_Property editorCell=EditorCell_Property.create(editorContext,new ModelAccessor(){
    public String getText(){
      StringBuilder result=new StringBuilder();
      if (BehaviorReflection.invokeVirtualStatic(Boolean.TYPE,SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SNodeOperations.getConceptDeclaration(node))),"virtual_showName_1262430001741498082",new Object[]{})) {
        result.append(BehaviorReflection.invokeVirtual(String.class,node,"virtual_getName_1216468837268",new Object[]{}));
      }
      result.append("(");
      List<SNode> parameters=BehaviorReflection.invokeVirtual((Class<List<SNode>>)((Class)Object.class),node,"virtual_getParameters_1213877374450",new Object[]{});
      boolean isFirst=true;
      for (      SNode cfp : parameters) {
        if (!(isFirst)) {
          result.append(", ");
        }
        isFirst=false;
        result.append(SPropertyOperations.getString(cfp,"conceptAlias"));
      }
      result.append(")->");
      SNode expectedReturnType=TypeChecker.getInstance().getTypeOf(node);
      if (expectedReturnType != null) {
        result.append(expectedReturnType.getPresentation());
      }
      return result.toString();
    }
    public void setText(    String s){
    }
    public boolean isValidText(    String s){
      return EqualUtil.equals(s,getText());
    }
  }
,node);
  editorCell.setAction(CellActionType.DELETE,EmptyCellAction.getInstance());
  editorCell.setCellId("ReadOnlyModelAccessor_1uc7g2_a0");
  Style style=new StyleImpl();
  style.set(StyleAttributes.SELECTABLE,true);
  style.set(StyleAttributes.EDITABLE,false);
  style.set(StyleAttributes.TEXT_COLOR,MPSColors.DARK_BLUE);
  editorCell.getStyle().putAll(style);
  return editorCell;
}
