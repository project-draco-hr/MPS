{
  if (n == ListSequence.<SNode>fromList(components).count()) {
    final SNode T_typevar_757772128652074250=typeCheckingContext.createNewRuntimeTypesVariable();
    int s=0;
    int f=0;
    boolean cbd=true;
    boolean cbc=true;
    for (    SNode type : ListSequence.<SNode>fromList(types)) {
{
        SNode matchedNode_48zlf8_a0f0a0a=type;
{
          boolean matches_48zlf8_a0a5a0a0=false;
{
            SNode matchingNode_48zlf8_a0a5a0a0=type;
            if (matchingNode_48zlf8_a0a5a0a0 != null) {
              matches_48zlf8_a0a5a0a0=SModelUtil_new.isAssignableConcept(matchingNode_48zlf8_a0a5a0a0.getConceptFqName(),"jetbrains.mps.baseLanguage.math.structure.MatrixType");
            }
          }
          if (matches_48zlf8_a0a5a0a0) {
            if (row) {
              if (SPropertyOperations.getInteger(matchedNode_48zlf8_a0f0a0a,"rows") == 0) {
                cbd=false;
              }
              if (SPropertyOperations.getInteger(matchedNode_48zlf8_a0f0a0a,"columns") == 0) {
                cbc=false;
              }
              if (cbd && f != 0 && f != SPropertyOperations.getInteger(matchedNode_48zlf8_a0f0a0a,"rows")) {
                reportError(typeCheckingContext,node);
              }
              if (f == 0) {
                f=SPropertyOperations.getInteger(matchedNode_48zlf8_a0f0a0a,"rows");
              }
              if (s == 0) {
                s=SPropertyOperations.getInteger(matchedNode_48zlf8_a0f0a0a,"columns");
              }
 else {
                s+=SPropertyOperations.getInteger(matchedNode_48zlf8_a0f0a0a,"columns");
              }
            }
 else {
              if (SPropertyOperations.getInteger(matchedNode_48zlf8_a0f0a0a,"columns") == 0) {
                cbd=false;
              }
              if (SPropertyOperations.getInteger(matchedNode_48zlf8_a0f0a0a,"rows") == 0) {
                cbc=false;
              }
              if (cbd && f != 0 && f != SPropertyOperations.getInteger(matchedNode_48zlf8_a0f0a0a,"columns")) {
                reportError(typeCheckingContext,node);
              }
              if (f == 0) {
                f=SPropertyOperations.getInteger(matchedNode_48zlf8_a0f0a0a,"columns");
              }
              if (s == 0) {
                s=SPropertyOperations.getInteger(matchedNode_48zlf8_a0f0a0a,"rows");
              }
 else {
                s+=SPropertyOperations.getInteger(matchedNode_48zlf8_a0f0a0a,"rows");
              }
            }
{
              SNode _nodeToCheck_1029348928467=null;
              EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)","757772128652074322",0,null);
              typeCheckingContext.createLessThanInequality((SNode)SLinkOperations.getTarget(matchedNode_48zlf8_a0f0a0a,"elementType",true),(SNode)typeCheckingContext.getRepresentative(T_typevar_757772128652074250),false,true,_info_12389875345);
            }
          }
 else {
            boolean matches_48zlf8_b0a5a0a0=false;
{
              SNode matchingNode_48zlf8_b0a5a0a0=type;
              if (matchingNode_48zlf8_b0a5a0a0 != null) {
                matches_48zlf8_b0a5a0a0=SModelUtil_new.isAssignableConcept(matchingNode_48zlf8_b0a5a0a0.getConceptFqName(),"jetbrains.mps.baseLanguage.math.structure.VectorType");
              }
            }
            if (matches_48zlf8_b0a5a0a0) {
              if (row) {
                if (SPropertyOperations.getInteger(matchedNode_48zlf8_a0f0a0a,"height") == 0) {
                  cbd=false;
                }
                if (cbd && f != 0 && f != SPropertyOperations.getInteger(matchedNode_48zlf8_a0f0a0a,"height")) {
                  reportError(typeCheckingContext,node);
                }
                if (f == 0) {
                  f=SPropertyOperations.getInteger(matchedNode_48zlf8_a0f0a0a,"height");
                }
                if (s == 0) {
                  s=1;
                }
 else {
                  s+=1;
                }
              }
 else {
                if (SPropertyOperations.getInteger(matchedNode_48zlf8_a0f0a0a,"height") == 0) {
                  cbc=false;
                }
                if (cbd && f != 0 && f != 1) {
                  reportError(typeCheckingContext,node);
                }
                if (f == 0) {
                  f=1;
                }
                if (s == 0) {
                  s=SPropertyOperations.getInteger(matchedNode_48zlf8_a0f0a0a,"height");
                }
 else {
                  s+=SPropertyOperations.getInteger(matchedNode_48zlf8_a0f0a0a,"height");
                }
              }
{
                SNode _nodeToCheck_1029348928467=null;
                EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)","757772128652075446",0,null);
                typeCheckingContext.createLessThanInequality((SNode)SLinkOperations.getTarget(matchedNode_48zlf8_a0f0a0a,"elementType",true),(SNode)typeCheckingContext.getRepresentative(T_typevar_757772128652074250),false,true,_info_12389875345);
              }
            }
 else {
{
                SNode _nodeToCheck_1029348928467=null;
                EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)","757772128652104638",0,null);
                typeCheckingContext.createLessThanInequality((SNode)type,(SNode)typeCheckingContext.getRepresentative(T_typevar_757772128652074250),false,true,_info_12389875345);
              }
              if (row) {
                if (cbd && f != 0 && f != 1) {
                  reportError(typeCheckingContext,node);
                }
                if (f == 0) {
                  f=1;
                }
                if (s == 0) {
                  s=1;
                }
 else {
                  s+=1;
                }
              }
 else {
                if (cbd && f != 0 && f != 1) {
                  reportError(typeCheckingContext,node);
                }
                if (f == 0) {
                  f=1;
                }
                if (s == 0) {
                  s=1;
                }
 else {
                  s+=1;
                }
              }
            }
          }
        }
      }
    }
    SNode result=MathTypeUtil.qMatrix(typeCheckingContext.getRepresentative(T_typevar_757772128652074250));
    if (row) {
      if (cbc) {
        SPropertyOperations.set(result,"columns","" + s);
      }
      if (cbd) {
        SPropertyOperations.set(result,"rows","" + f);
      }
    }
 else {
      if (cbc) {
        SPropertyOperations.set(result,"rows","" + s);
      }
      if (cbd) {
        SPropertyOperations.set(result,"columns","" + f);
      }
    }
    if (SPropertyOperations.getInteger(result,"columns") == 1) {
{
        SNode _nodeToCheck_1029348928467=node;
        EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)","6389121991274973498",0,null);
        typeCheckingContext.createEquation((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467,"r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)","6389121991274973494",true),(SNode)new DimensionUtil.QuotationClass_48zlf8_a0a0a8a0a0().createNode(typeCheckingContext.getRepresentative(T_typevar_757772128652074250),"" + SPropertyOperations.getInteger(result,"rows"),typeCheckingContext),_info_12389875345);
      }
    }
 else {
{
        SNode _nodeToCheck_1029348928467=node;
        EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)","6389121991274973487",0,null);
        typeCheckingContext.createEquation((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467,"r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)","6389121991274973491",true),(SNode)result,_info_12389875345);
      }
    }
  }
 else {
{
      final SNode t1=typeCheckingContext.typeOf(ListSequence.<SNode>fromList(components).getElement(n),"r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)","757772128652013457",true);
      typeCheckingContext.whenConcrete(t1,new Runnable(){
        public void run(){
          List<SNode> types2=new ArrayList<SNode>();
          ListSequence.<SNode>fromList(types2).addSequence(ListSequence.<SNode>fromList(types));
          ListSequence.<SNode>fromList(types2).addElement(typeCheckingContext.getRepresentative(t1));
          checkDim(typeCheckingContext,components,n + 1,types2,row,node);
        }
      }
,"r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)","757772128651891776",false,false);
    }
  }
}
