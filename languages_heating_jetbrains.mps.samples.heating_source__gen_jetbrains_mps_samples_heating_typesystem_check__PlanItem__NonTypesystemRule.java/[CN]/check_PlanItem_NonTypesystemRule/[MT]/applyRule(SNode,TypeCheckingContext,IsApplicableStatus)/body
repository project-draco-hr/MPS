{
  SNode prev=SNodeOperations.cast(SNodeOperations.getPrevSibling(planItem),"jetbrains.mps.samples.heating.structure.PlanItem");
  if ((prev != null)) {
    if (!(SPropertyOperations.getInteger(prev,"start") < SPropertyOperations.getInteger(planItem,"start"))) {
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(planItem,"The event should be scheduled after the one above it","r:6d78acb4-911e-4959-8535-0a1b3e5c1b7e(jetbrains.mps.samples.heating.typesystem)","5063359128233240887",null,errorTarget);
    }
    if (SPropertyOperations.getInteger(prev,"temperature") == SPropertyOperations.getInteger(planItem,"temperature")) {
{
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportWarning(planItem,"This event is not changing the temperature.","r:6d78acb4-911e-4959-8535-0a1b3e5c1b7e(jetbrains.mps.samples.heating.typesystem)","4664795093170882120",null,errorTarget);
{
          BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.samples.heating.typesystem.RemovePlanItem_QuickFix",false);
          _reporter_2309309498.addIntentionProvider(intentionProvider);
        }
      }
    }
  }
}
