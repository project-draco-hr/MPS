{
  Group mainGroup=new Group(KeyMapBundle.message("all.actions.group.title"),null,null);
  mainGroup.addGroup(createEditorActionsGroup(filtered));
  mainGroup.addGroup(createMainMenuGroup(filtered));
  for (  KeymapExtension extension : Extensions.getExtensions(KeymapExtension.EXTENSION_POINT_NAME)) {
    final Group group=createExtensionGroup(filtered,project,extension);
    if (group != null) {
      mainGroup.addGroup(group);
    }
  }
  KeymapManagerEx keymapManager=KeymapManagerEx.getInstanceEx();
  ActionManagerEx managerEx=ActionManagerEx.getInstanceEx();
  IdeaPluginDescriptor[] plugins=ApplicationManager.getApplication().getPlugins();
  final List<AnAction> actions=new ArrayList<AnAction>();
  for (  IdeaPluginDescriptor plugin : plugins) {
    final String[] pluginActions=managerEx.getPluginActions(plugin.getPluginId());
    if (pluginActions == null || pluginActions.length == 0) {
      continue;
    }
    for (    String pluginAction : pluginActions) {
      if (keymapManager.getBoundActions().contains(pluginAction))       continue;
      final AnAction anAction=managerEx.getActionOrStub(pluginAction);
      actions.add(anAction);
    }
  }
  Group otherGroup=createOtherGroup(new Condition<AnAction>(){
    public boolean value(    AnAction anAction){
      if (filtered != null && !filtered.value(anAction))       return false;
      if (!actions.contains(anAction))       return false;
      if (anAction == null)       return false;
      if (anAction.getTemplatePresentation() == null)       return false;
      if (anAction.getTemplatePresentation().getText() == null)       return false;
      return true;
    }
  }
,mainGroup,keymap);
  mainGroup.addGroup(createPluginsActionsGroup(filtered,otherGroup));
  mainGroup.addGroup(otherGroup);
  if (filter != null || filtered != null) {
    final ArrayList list=mainGroup.getChildren();
    for (Iterator i=list.iterator(); i.hasNext(); ) {
      final Object o=i.next();
      if (o instanceof Group) {
        final Group group=(Group)o;
        if (group.getSize() == 0) {
          i.remove();
        }
      }
    }
  }
  return mainGroup;
}
