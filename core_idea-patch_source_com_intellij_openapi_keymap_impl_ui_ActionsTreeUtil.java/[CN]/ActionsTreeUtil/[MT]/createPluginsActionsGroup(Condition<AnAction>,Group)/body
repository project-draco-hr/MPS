{
  Group pluginsGroup=new Group(KeyMapBundle.message("plugins.group.title"),null,null);
  final KeymapManagerEx keymapManager=KeymapManagerEx.getInstanceEx();
  ActionManagerEx managerEx=ActionManagerEx.getInstanceEx();
  final IdeaPluginDescriptor[] plugins=ApplicationManager.getApplication().getPlugins();
  List<PluginId> collected=new ArrayList<PluginId>();
  for (  IdeaPluginDescriptor plugin : plugins) {
    collected.add(plugin.getPluginId());
    Group pluginGroup;
    if (plugin.getName().equals("IDEA CORE")) {
      pluginGroup=otherGroup;
    }
 else {
      pluginGroup=new Group(plugin.getName(),null,null);
    }
    final String[] pluginActions=managerEx.getPluginActions(plugin.getPluginId());
    if (pluginActions == null || pluginActions.length == 0) {
      continue;
    }
    for (    String pluginAction : pluginActions) {
      if (keymapManager.getBoundActions().contains(pluginAction))       continue;
      final AnAction anAction=managerEx.getActionOrStub(pluginAction);
      if (filtered == null || filtered.value(anAction)) {
        pluginGroup.addActionId(pluginAction);
      }
    }
    if (pluginGroup.getSize() > 0 && pluginGroup != otherGroup) {
      pluginsGroup.addGroup(pluginGroup);
    }
  }
  for (  PluginId pluginId : PluginId.getRegisteredIds().values()) {
    if (collected.contains(pluginId))     continue;
    Group pluginGroup=new Group(pluginId.getIdString(),null,null);
    final String[] pluginActions=managerEx.getPluginActions(pluginId);
    if (pluginActions == null || pluginActions.length == 0) {
      continue;
    }
    for (    String pluginAction : pluginActions) {
      if (keymapManager.getBoundActions().contains(pluginAction))       continue;
      final AnAction anAction=managerEx.getActionOrStub(pluginAction);
      if (filtered == null || filtered.value(anAction)) {
        pluginGroup.addActionId(pluginAction);
      }
    }
    if (pluginGroup.getSize() > 0) {
      pluginsGroup.addGroup(pluginGroup);
    }
  }
  return pluginsGroup;
}
