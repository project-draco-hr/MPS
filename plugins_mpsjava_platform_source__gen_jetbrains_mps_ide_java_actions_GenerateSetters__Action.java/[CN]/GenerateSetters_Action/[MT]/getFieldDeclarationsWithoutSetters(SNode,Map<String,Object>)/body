{
  final Project project=((EditorContext)MapSequence.fromMap(_params).get("editorContext")).getOperationContext().getProject();
  Iterable<SNode> fields=BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),classConcept,"jetbrains.mps.baseLanguage.structure.ClassConcept","call_fields_5292274854859383272",new Object[]{});
  Iterable<SNode> staticFields=BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),classConcept,"jetbrains.mps.baseLanguage.structure.Classifier","call_staticFields_5292274854859223538",new Object[]{});
  return Sequence.fromIterable(fields).union(Sequence.fromIterable(staticFields)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode field){
      final String setterName=GenerateGettersAndSettersUtil.getFieldSetterName(field,project);
      Iterable<SNode> methods=BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),classConcept,"jetbrains.mps.baseLanguage.structure.Classifier","call_methods_5292274854859311639",new Object[]{});
      Iterable<SNode> statMethods=BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),classConcept,"jetbrains.mps.baseLanguage.structure.ClassConcept","call_staticMethods_5292274854859435867",new Object[]{});
      return !(Sequence.fromIterable(methods).union(Sequence.fromIterable(statMethods)).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode method){
          return setterName.equals(SPropertyOperations.getString(method,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"))) && ListSequence.fromList(SLinkOperations.getChildren(method,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123134l,"parameter"))).count() == 1;
        }
      }
));
    }
  }
);
}
