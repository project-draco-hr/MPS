{
  SModelReference ref=jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getModel(targetNode).getReference();
  boolean isClassifier=jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.isInstanceOf(targetNode,"jetbrains.mps.baseLanguage.structure.Classifier");
  boolean isConstructor=jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.isInstanceOf(targetNode,"jetbrains.mps.baseLanguage.structure.ConstructorDeclaration");
  boolean isMethod=jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.isInstanceOf(targetNode,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration") && jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.isInstanceOf(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getParent(targetNode),"jetbrains.mps.baseLanguage.structure.Classifier");
  boolean isField=(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.isInstanceOf(targetNode,"jetbrains.mps.baseLanguage.structure.FieldDeclaration") || jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.isInstanceOf(targetNode,"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration")) && jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.isInstanceOf(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getParent(targetNode),"jetbrains.mps.baseLanguage.structure.Classifier");
  if (!((isClassifier || isConstructor || isMethod|| isField))) {
    return false;
  }
  if (isClassifier) {
    String fqName=SModelStereotype.withoutStereotype(ref.getModelName()) + "." + SPropertyOperations.getString(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.cast(targetNode,"jetbrains.mps.baseLanguage.structure.Classifier"),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"));
    for (    NavigationProvider np : NavigationProvider.EP_NAME.getExtensions()) {
      if (np.openClass(projectPath,fqName)) {
        return true;
      }
    }
  }
 else   if (isConstructor) {
    String classifierName=GoByCurrentReferenceToIDEA_Action.this.getClassifierName(targetNode,ref,_params);
    int paramCount=ListSequence.fromList(SLinkOperations.getChildren(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.cast(targetNode,"jetbrains.mps.baseLanguage.structure.ConstructorDeclaration"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123134l,"parameter"))).count();
    for (    NavigationProvider np : NavigationProvider.EP_NAME.getExtensions()) {
      if (np.openClass(projectPath,classifierName)) {
        if (np.openConstructor(projectPath,classifierName,paramCount)) {
          return true;
        }
      }
    }
  }
 else   if (isMethod) {
    String classifierName=GoByCurrentReferenceToIDEA_Action.this.getClassifierName(targetNode,ref,_params);
    SNode method=jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.cast(targetNode,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration");
    for (    NavigationProvider np : NavigationProvider.EP_NAME.getExtensions()) {
      if (np.openMethod(projectPath,classifierName,SPropertyOperations.getString(method,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")),ListSequence.fromList(SLinkOperations.getChildren(method,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123134l,"parameter"))).count())) {
        return true;
      }
    }
  }
 else {
    String classifierName=GoByCurrentReferenceToIDEA_Action.this.getClassifierName(targetNode,ref,_params);
    for (    NavigationProvider np : NavigationProvider.EP_NAME.getExtensions()) {
      if (np.openField(projectPath,classifierName,targetNode.getName())) {
        return true;
      }
    }
  }
  return false;
}
