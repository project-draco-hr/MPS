{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("indexRef",new BaseReferenceConstraintsDescriptor("indexRef",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          SNode ms=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.math.structure.MathSymbol",true,false);
          List<SNode> msi=MathSymbol_Behavior.call_getEmptyIndexList_1237828382992(ms);
          MathSymbol_Behavior.call_getVisibleIndices_1236440390782(ms,_context.getEnclosingNode(),msi);
          return msi;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_cdbkmw_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
