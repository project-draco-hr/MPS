{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("indexRef",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      SNode ms=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.math.structure.MathSymbol",true,false);
      List<SNode> msi=MathSymbol_Behavior.call_getEmptyIndexList_1237828382992(ms);
      MathSymbol_Behavior.call_getVisibleIndices_1236440390782(ms,_context.getEnclosingNode(),msi);
      return msi;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:d37b3f1e-89c7-4936-a6de-207bf5ae7643(jetbrains.mps.baseLanguage.math.constraints)","1237825752099");
    }
  }
);
  return result;
}
