{
  SNode node=SModelUtil.instantiateConceptDeclaration(concept,model);
  Class factoryClass=getFactoryClass(concept);
  if (factoryClass == null) {
    return node;
  }
  Method method=getSetupMethod_new(factoryClass,node);
  if (method != null) {
    try {
      method.invoke(null,node,sample);
    }
 catch (    IllegalAccessException e) {
      e.printStackTrace();
    }
catch (    InvocationTargetException e) {
      e.printStackTrace();
    }
    return node;
  }
  method=getSetupMethod_old(factoryClass,node);
  if (method != null) {
    try {
      method.invoke(null,node);
    }
 catch (    IllegalAccessException e) {
      e.printStackTrace();
    }
catch (    InvocationTargetException e) {
      e.printStackTrace();
    }
  }
  return node;
}
