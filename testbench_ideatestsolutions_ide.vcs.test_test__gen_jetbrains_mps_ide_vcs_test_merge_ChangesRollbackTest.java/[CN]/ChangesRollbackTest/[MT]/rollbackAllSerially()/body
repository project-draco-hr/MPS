{
  makeChanges();
  final SModel model=getTestModel();
  List<ModelChange> changes=ListSequence.fromListWithValues(new ArrayList<ModelChange>(),myDiff.getChangeSet().getModelChanges());
  ListSequence.fromList(changes).reversedList().visitAll(new IVisitor<ModelChange>(){
    public void visit(    final ModelChange change){
      testChanges(new Runnable(){
        public void run(){
          change.getOppositeChange().apply(model,new NodeCopier(model));
        }
      }
);
    }
  }
);
  checkRootStatuses();
  Assert.assertTrue(ListSequence.fromList(myDiff.getChangeSet().getModelChanges()).isEmpty());
}
