{
  tracer.track(module);
  try {
    if (dependencies.contains(module))     return;
    dependencies.add(module);
    for (    IModule m : ModuleUtil.getDependencies(module)) {
      collectAllCompileTimeDependencies(m,dependencies,languagesWithRuntime,tracer);
    }
    for (    Language language : ModuleUtil.getUsedLanguages(module)) {
      if (language.getRuntimeModulesReferences() != null) {
        tracer.track(language);
        for (        ModuleReference dep : language.getRuntimeModulesReferences()) {
          IModule m=MPSModuleRepository.getInstance().getModule(dep);
          if (m == null)           continue;
          collectAllCompileTimeDependencies(m,dependencies,languagesWithRuntime,tracer);
        }
        if (!languagesWithRuntime.contains(language)) {
          if (!language.getRuntimeStubPaths().isEmpty()) {
            languagesWithRuntime.add(language);
          }
        }
        tracer.unTrack();
      }
    }
  }
  finally {
    tracer.unTrack();
  }
}
