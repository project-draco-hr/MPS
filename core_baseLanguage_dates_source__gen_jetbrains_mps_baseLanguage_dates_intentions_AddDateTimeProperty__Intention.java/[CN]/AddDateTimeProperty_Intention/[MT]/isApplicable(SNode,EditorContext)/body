{
  return TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(node,"leftExpression",true)),new _Quotations.QuotationClass_1().createNode(),false) && TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(node,"rightExpression",true)),new _Quotations.QuotationClass_0().createNode(),false);
}
