{
  return (SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.structure.BinaryCompareOperation") || SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.structure.EqualsExpression") || SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.structure.NotEqualsExpression")) && ((TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(node,"leftExpression",true)),new _Quotations.QuotationClass_1().createNode(),false) && TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(node,"rightExpression",true)),new _Quotations.QuotationClass_2().createNode(),false)) || (TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(node,"rightExpression",true)),new _Quotations.QuotationClass_3().createNode(),false) && TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(node,"rightExpression",true)),new _Quotations.QuotationClass_4().createNode(),false)));
}
