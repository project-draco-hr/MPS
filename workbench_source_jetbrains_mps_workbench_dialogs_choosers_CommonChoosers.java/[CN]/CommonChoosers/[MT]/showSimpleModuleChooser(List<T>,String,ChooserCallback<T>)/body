{
  DataContext dataContext=DataManager.getInstance().getDataContext();
  final Project project=MPSDataKeys.PROJECT.getData(dataContext);
  final MPSProject mpsProject=MPSDataKeys.MPS_PROJECT.getData(dataContext);
  BaseMPSChooseModel<T> goToModuleModel=new BaseMPSChooseModel<T>(mpsProject){
    public String doGetFullName(    Object element){
      return ((BaseModuleItem)element).getModule().getModuleUID();
    }
    public String doGetObjectName(    T module){
      return module.getModuleFqName();
    }
    public String getCheckBoxName(){
      return "Include non-project " + NameUtil.pluralize(entityString);
    }
    public String getNotInMessage(){
      return "no " + NameUtil.pluralize(entityString) + " found in project";
    }
    public String getNotFoundMessage(){
      return "no mathches found";
    }
    public NavigationItem doGetNavigationItem(    final T module){
      return new BaseModuleItem(module){
        public void navigate(        boolean requestFocus){
          callback.execute((T)module);
        }
      }
;
    }
    public T[] find(    IScope scope){
      return (T[])modules.toArray();
    }
    @Nullable public String getPromptText(){
      return NameUtil.capitalize(entityString) + " name:";
    }
  }
;
  ChooseByNamePopup popup=ChooseByNamePopup.createPopup(project,goToModuleModel,new FakePsiContext());
  popup.invoke(new ChooseByNamePopupComponent.Callback(){
    public void onClose(){
    }
    public void elementChosen(    Object element){
      ((NavigationItem)element).navigate(true);
    }
  }
,ModalityState.current(),true);
}
