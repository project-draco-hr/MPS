{
  if (!status.isOk())   return false;
  final AtomicReference<List<TextGenerationResult>> result=new AtomicReference<List<TextGenerationResult>>();
  if (status.getOutputModel() != null) {
    TextGeneratorEngine engine=new TextGeneratorEngine(myGenerateDebugInfo,myFailIfNoTextgen);
    try {
      engine.generateModels(Collections.singletonList(status.getOutputModel()),new GenerateCallback(){
        @Override public void modelGenerated(        SModel model,        List<TextGenerationResult> results){
          result.set(results);
        }
      }
);
    }
  finally {
      engine.shutdown();
    }
  }
 else {
    result.set(Collections.<TextGenerationResult>emptyList());
  }
  myTextGenProblems=jetbrains.mps.generator.textGen.TextGenerator.handleTextGenResults(status,result.get(),myGenerateDebugInfo,myStreamHandler,myCacheGenerators);
  return myTextGenProblems.isEmpty();
}
