{
  boolean hasErrors=false;
  ModelDependencies dependRoot=new ModelDependencies();
  DebugInfo info=new DebugInfo();
  status.setDebugInfo(info);
  status.setBLDependencies(dependRoot);
  SModel outputModel=status.getOutputModel();
  if (outputModel == null)   return !hasErrors;
  for (  SNode outputNode : outputModel.roots()) {
    try {
      TextGenerationResult result=TextGenerationUtil.generateText(context,outputNode);
      hasErrors|=result.hasErrors();
      if (result.hasErrors()) {
        myTextGenErrors.addAll(result.errors());
      }
 else {
        String fileName=outputNode.getName() + "." + TextGenManager.instance().getExtension(outputNode);
        fillDebugInfo(info,fileName,result);
        fillDependencies(dependRoot,outputNode,fileName,result);
        outputNodeContents.put(outputNode,result.getResult());
      }
    }
  finally {
      TextGenManager.reset();
    }
  }
  return !hasErrors;
}
