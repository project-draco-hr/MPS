{
  final Wrappers._T<List<SNode>> affNodes=new Wrappers._T<List<SNode>>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      affNodes.value=Sequence.fromIterable(DeleteNode_Action.this.getAffectedNodes(_params)).toListSequence();
    }
  }
);
  final DeleteNodesHelper helper=new DeleteNodesHelper(affNodes.value,((MPSProject)MapSequence.fromMap(_params).get("project")));
  final Wrappers._boolean dialogNeeded=new Wrappers._boolean(false);
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      dialogNeeded.value=helper.hasOptions();
    }
  }
);
  DeleteDialog.DeleteOption safeOption=new DeleteDialog.DeleteOption("Safe Delete",false,true);
  DeleteDialog.DeleteOption aspectsOption=new DeleteDialog.DeleteOption("Delete Aspects",true,true);
  if (dialogNeeded.value) {
    DeleteDialog dialog=new DeleteDialog(((MPSProject)MapSequence.fromMap(_params).get("project")),"Delete Node","Are you sure you want to delete selected node?",safeOption,aspectsOption);
    dialog.show();
    if (!(dialog.isOK())) {
      return;
    }
  }
  helper.deleteNodes(safeOption.selected,aspectsOption.selected,true);
}
