{
  if ("jetbrains.mps.ui.structure.UIObjectStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new UIObjectStatement_Constraints());
  }
  if ("jetbrains.mps.ui.structure.View".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.View"));
  }
  if ("jetbrains.mps.ui.structure.Controller".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.Controller"));
  }
  if ("jetbrains.mps.ui.structure.Validator".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.Validator"));
  }
  if ("jetbrains.mps.ui.structure.BeanPropertyView".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new BeanPropertyView_Constraints());
  }
  if ("jetbrains.mps.ui.structure.ValidateBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.ValidateBlock"));
  }
  if ("jetbrains.mps.ui.structure.ValidatingView".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.ValidatingView"));
  }
  if ("jetbrains.mps.ui.structure.ViewBinding".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ViewBinding_Constraints());
  }
  if ("jetbrains.mps.ui.structure.ExpressionView".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.ExpressionView"));
  }
  if ("jetbrains.mps.ui.structure.ControllerBinding".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.ControllerBinding"));
  }
  if ("jetbrains.mps.ui.structure.InlineController".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.InlineController"));
  }
  if ("jetbrains.mps.ui.structure.EventHandingBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.EventHandingBlock"));
  }
  if ("jetbrains.mps.ui.structure.FunctionParameterDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.FunctionParameterDeclaration"));
  }
  if ("jetbrains.mps.ui.structure.EventType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EventType_Constraints());
  }
  if ("jetbrains.mps.ui.structure.EventPropertyAccessOp".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EventPropertyAccessOp_Constraints());
  }
  if ("jetbrains.mps.ui.structure.ContainerCompartment".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ContainerCompartment_Constraints());
  }
  if ("jetbrains.mps.ui.structure.UIObjectType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.UIObjectType"));
  }
  if ("jetbrains.mps.ui.structure.ChildAspect".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ChildAspect_Constraints());
  }
  if ("jetbrains.mps.ui.structure.ContainerType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ContainerType_Constraints());
  }
  if ("jetbrains.mps.ui.structure.EnclosingContextCompartmentExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EnclosingContextCompartmentExpression_Constraints());
  }
  if ("jetbrains.mps.ui.structure.CompartmentReferenceExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.CompartmentReferenceExpression"));
  }
  if ("jetbrains.mps.ui.structure.CompartmentProviderStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.CompartmentProviderStatement"));
  }
  if ("jetbrains.mps.ui.structure.IUIObjectContextProvider".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.IUIObjectContextProvider"));
  }
  if ("jetbrains.mps.ui.structure.IterateContentsStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.IterateContentsStatement"));
  }
  if ("jetbrains.mps.ui.structure.IterateContentsVariable".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.IterateContentsVariable"));
  }
  if ("jetbrains.mps.ui.structure.RemoveUIObjectStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.RemoveUIObjectStatement"));
  }
  if ("jetbrains.mps.ui.structure.IterateContentsVariableReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.IterateContentsVariableReference"));
  }
  if ("jetbrains.mps.ui.structure.ClearCompartmentStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.ClearCompartmentStatement"));
  }
  if ("jetbrains.mps.ui.structure.AppendUIObjectStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.AppendUIObjectStatement"));
  }
  if ("jetbrains.mps.ui.structure.InsertUIObjectStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.InsertUIObjectStatement"));
  }
  if ("jetbrains.mps.ui.structure.ForceLayoutStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.ForceLayoutStatement"));
  }
  if ("jetbrains.mps.ui.structure.UIObjectProviderStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.UIObjectProviderStatement"));
  }
  if ("jetbrains.mps.ui.structure.CreateUIObjectStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.CreateUIObjectStatement"));
  }
  if ("jetbrains.mps.ui.structure.CallUIActionOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new CallUIActionOperation_Constraints());
  }
  if ("jetbrains.mps.ui.structure.AccessUIPropertyOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AccessUIPropertyOperation_Constraints());
  }
  if ("jetbrains.mps.ui.structure.IUIObjectDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.structure.IUIObjectDeclaration"));
  }
  if ("jetbrains.mps.ui.structure.UIObjectReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new UIObjectReference_Constraints());
  }
  return null;
}
