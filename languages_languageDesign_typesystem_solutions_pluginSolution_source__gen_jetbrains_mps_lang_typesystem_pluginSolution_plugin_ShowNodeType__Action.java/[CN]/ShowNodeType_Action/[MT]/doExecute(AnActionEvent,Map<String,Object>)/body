{
  try {
    final Wrappers._T<TypeCheckingContext> typeCheckingContext=new Wrappers._T<TypeCheckingContext>();
    final Wrappers._T<IErrorReporter> reporter=new Wrappers._T<IErrorReporter>();
    final Wrappers._T<SNode> type=new Wrappers._T<SNode>();
    try {
      ModelAccess.instance().runWriteAction(new Runnable(){
        public void run(){
          typeCheckingContext.value=((EditorComponent)MapSequence.fromMap(_params).get("editorComponent")).getTypeCheckingContext();
          type.value=typeCheckingContext.value.getTypeDontCheck(((SNode)MapSequence.fromMap(_params).get("node")));
          reporter.value=typeCheckingContext.value.getTypeMessageDontCheck(((SNode)MapSequence.fromMap(_params).get("node")));
          if (type.value != null) {
            SModel auxModel=AuxilaryRuntimeModel.getDescriptor().getSModel();
            auxModel.addRoot(type.value);
          }
        }
      }
);
      if (type.value == null) {
        JOptionPane.showMessageDialog(((Frame)MapSequence.fromMap(_params).get("frame")),"no type");
        return;
      }
      new MyBaseNodeDialog(((IOperationContext)MapSequence.fromMap(_params).get("context")),((SNode)MapSequence.fromMap(_params).get("node")),type.value,reporter.value).showDialog();
    }
  finally {
      if (type.value != null) {
        SModel auxModel=AuxilaryRuntimeModel.getDescriptor().getSModel();
        auxModel.removeRoot(type.value);
      }
    }
  }
 catch (  Throwable t) {
    if (log.isErrorEnabled()) {
      log.error("User's action execute method failed. Action:" + "ShowNodeType",t);
    }
  }
}
