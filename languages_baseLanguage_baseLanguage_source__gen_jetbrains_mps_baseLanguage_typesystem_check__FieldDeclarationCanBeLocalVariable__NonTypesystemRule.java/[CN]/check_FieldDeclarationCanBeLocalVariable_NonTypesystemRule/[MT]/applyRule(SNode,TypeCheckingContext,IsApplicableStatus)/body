{
  if (!(SNodeOperations.isInstanceOf(variableDeclaration,"jetbrains.mps.baseLanguage.structure.FieldDeclaration")) && !(SNodeOperations.isInstanceOf(variableDeclaration,"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration"))) {
    return;
  }
  if (!(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(variableDeclaration,"jetbrains.mps.baseLanguage.structure.IVisible"),"visibility",true),"jetbrains.mps.baseLanguage.structure.PrivateVisibility"))) {
    return;
  }
  Iterable<SNode> refs=ListSequence.fromList(SNodeOperations.getDescendants(SNodeOperations.getContainingRoot(variableDeclaration),"jetbrains.mps.baseLanguage.structure.VariableReference",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SLinkOperations.getTarget(it,"variableDeclaration",false) == variableDeclaration;
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (SNodeOperations.getAncestor(it,"jetbrains.mps.baseLanguage.structure.SingleLineComment",false,false) == null);
    }
  }
);
  if (Sequence.fromIterable(refs).isEmpty()) {
    return;
  }
  if (Sequence.fromIterable(refs).any(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (SNodeOperations.getAncestor(it,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration",false,false) == null);
    }
  }
)) {
    return;
  }
  final Iterable<SNode> methods=Sequence.fromIterable(refs).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.getAncestor(it,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration",false,false);
    }
  }
);
  if (Sequence.fromIterable(methods).all(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return eq_pk5n8v_a0a0a0a0a0h0b(it,Sequence.fromIterable(methods).first());
    }
  }
)) {
    SNode method=Sequence.fromIterable(methods).first();
    Program program=DataFlowManager.getInstance().buildProgramFor(SLinkOperations.getTarget(method,"body",true));
    boolean uninitializedRead=ListSequence.fromList(ListSequence.fromListWithValues(new ArrayList<ReadInstruction>(),program.getUninitializedReads())).any(new IWhereFilter<ReadInstruction>(){
      public boolean accept(      ReadInstruction it){
        return eq_pk5n8v_a0a0a0a0a0a4a7a1(it.getVariable(),variableDeclaration);
      }
    }
);
    if (!(uninitializedRead)) {
{
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportWarning(variableDeclaration,"Field can be converted into a local variable","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","6640766779592666289",null,errorTarget);
{
          BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.baseLanguage.typesystem.ConvertFieldToLocalVariable_QuickFix",false);
          intentionProvider.putArgument("method",Sequence.fromIterable(methods).first());
          intentionProvider.putArgument("refs",refs);
          _reporter_2309309498.addIntentionProvider(intentionProvider);
        }
      }
    }
  }
}
