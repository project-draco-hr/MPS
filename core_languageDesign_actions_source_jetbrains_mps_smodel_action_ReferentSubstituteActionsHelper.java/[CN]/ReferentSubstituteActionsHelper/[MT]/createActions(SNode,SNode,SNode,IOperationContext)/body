{
  IScope scope=context.getScope();
  SNode referenceNodeConcept=referenceNode.getConceptDeclarationNode();
  Language primaryLanguage=SModelUtil.getDeclaringLanguage(referenceNodeConcept);
  if (primaryLanguage == null) {
    LOG.error("Couldn't build actions : couldn't get declaring language for concept " + referenceNodeConcept.getDebugText());
    return new LinkedList<INodeSubstituteAction>();
  }
  SearchScopeStatus status=ModelConstraintsUtil.getSearchScope(referenceNode.getParent(),referenceNode,referenceNodeConcept,linkDeclaration,context);
  if (status.isError()) {
    LOG.error("Couldn't create referent search scope : " + status.getMessage());
    return new LinkedList<INodeSubstituteAction>();
  }
  ISearchScope searchScope=status.getSearchScope();
  IReferencePresentation presentation=status.getPresentation();
  return createActions(referenceNode,currentReferent,linkDeclaration,searchScope,presentation,scope);
}
