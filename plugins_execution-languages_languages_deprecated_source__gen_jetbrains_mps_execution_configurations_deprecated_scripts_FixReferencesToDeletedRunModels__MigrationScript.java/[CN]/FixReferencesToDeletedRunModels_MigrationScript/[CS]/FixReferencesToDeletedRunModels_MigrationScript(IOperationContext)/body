{
  super("Fix References to Deleted Run Models");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Fix References To Deleted BaseLanguage Run Model";
    }
    public String getAdditionalInfo(){
      return "Fix References To Deleted BaseLanguage Run Model";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.core.structure.BaseConcept";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SNodeOperations.isRoot(node) && Sequence.fromIterable(ScriptsUtil.getImports(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getModel(node),"jetbrains.mps.baseLanguage.util.plugin.run")).isNotEmpty();
    }
    public void doUpdateInstanceNode(    SNode node){
      ScriptsUtil.updateReferencesToModel(node,"jetbrains.mps.baseLanguage.util.plugin.run",jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getModel(SLinkOperations.getTarget(new FixReferencesToDeletedRunModels_MigrationScript.QuotationClass_s5mt6f_a0a0a2a0a4a0a0a0a1a0().createNode(),"classifier",false)).getSModelReference());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Fix References To Deleted Plugin Run Model";
    }
    public String getAdditionalInfo(){
      return "Fix References To Deleted Plugin Run Model";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.core.structure.BaseConcept";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      final SModel model=jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getModel(node);
      return SNodeOperations.isRoot(node) && Sequence.fromIterable(Sequence.fromClosure(new ISequenceClosure<SModel.ImportElement>(){
        public Iterable<SModel.ImportElement> iterable(){
          return model.importedModels();
        }
      }
)).where(new IWhereFilter<SModel.ImportElement>(){
        public boolean accept(        SModel.ImportElement it){
          return it.getModelReference().getLongName().equals("jetbrains.mps.lang.plugin.run");
        }
      }
).isNotEmpty();
    }
    public void doUpdateInstanceNode(    SNode node){
      ScriptsUtil.updateReferencesToModel(node,"jetbrains.mps.lang.plugin.run",jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getModel(SLinkOperations.getTarget(new FixReferencesToDeletedRunModels_MigrationScript.QuotationClass_s5mt6f_a0a0a2a0a4a0a0a0a2a0().createNode(),"classifier",false)).getSModelReference());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
