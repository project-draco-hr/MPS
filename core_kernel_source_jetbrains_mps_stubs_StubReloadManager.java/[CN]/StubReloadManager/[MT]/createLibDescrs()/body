{
  List<BaseLibStubDescriptor> result=new ArrayList<BaseLibStubDescriptor>();
  List<Language> languages=this.myRepos.getAllLanguages();
  for (  Language l : languages) {
    SModelDescriptor descriptor=LanguageAspect.STUBS.get(l);
    if (descriptor == null)     continue;
    Condition<SNode> cond=new Condition<SNode>(){
      public boolean met(      SNode node){
        return node.getConceptFqName().equals(LibraryStubDescriptor.concept);
      }
    }
;
    Iterable<SNode> iterable=new ConditionalIterable<SNode>(descriptor.getSModel().roots(),cond);
    for (    SNode node : iterable) {
      Class descrClass=l.getClass(l.getModuleFqName() + "." + LanguageAspect.STUBS.getName()+ "."+ node.getPersistentProperty(SNodeUtil.property_INamedConcept_name)+ "_StubDescriptor");
      if (descrClass == null)       continue;
      try {
        BaseLibStubDescriptor descr=(BaseLibStubDescriptor)descrClass.newInstance();
        result.add(descr);
      }
 catch (      Throwable t) {
        LOG.error(t);
      }
    }
  }
  return result;
}
