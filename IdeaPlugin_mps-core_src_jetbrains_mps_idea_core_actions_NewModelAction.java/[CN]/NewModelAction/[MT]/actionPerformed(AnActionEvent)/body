{
  CreateFromTemplateDialog dialog=new CreateFromTemplateDialog(myProject){
    @Override protected void doOKAction(){
      final ModelTemplates template=ModelTemplates.valueOf(getKindCombo().getSelectedName());
      final String modelName=getNameField().getText().trim();
      if (!isModelNameValid(modelName)) {
        return;
      }
      SModel newModelDescriptor=ModelAccess.instance().runWriteActionInCommand(new Computable<SModel>(){
        @Override public SModel compute(){
          EditableSModel descriptor=SModuleOperations.createModelWithAdjustments(modelName,myModelRoot);
          template.preConfigure(descriptor,mySolution);
          descriptor.save();
          return descriptor;
        }
      }
,ProjectHelper.toMPSProject(myProject));
      if (newModelDescriptor == null) {
        return;
      }
      processDoNotAskOnOk(OK_EXIT_CODE);
      if (getOKAction().isEnabled()) {
        close(OK_EXIT_CODE);
      }
    }
    private boolean isModelNameValid(    String modelName){
      if (modelName.length() == 0) {
        showError(MPSBundle.message("create.new.model.dialog.error.empty.name"));
        return false;
      }
      if (SModelRepository.getInstance().getModelDescriptor(modelName) != null) {
        showError(MPSBundle.message("create.new.model.dialog.error.model.exists",modelName));
        return false;
      }
      if (modelName.endsWith(".")) {
        showError(MPSBundle.message("create.new.model.dialog.error.empty.short.name"));
        return false;
      }
      if (!(SourceVersion.isName(SModelStereotype.withoutStereotype(modelName)))) {
        showError(MPSBundle.message("create.new.model.dialog.error.invalid.java",modelName));
        return false;
      }
      return true;
    }
  }
;
  dialog.setTitle(MPSBundle.message("create.new.model.dialog.title"));
  for (  ModelTemplates template : ModelTemplates.values()) {
    dialog.getKindCombo().addItem(template.getPresentation(),template.getIcon(),template.name());
  }
  dialog.getNameField().setText(myModelPrefix);
  dialog.show();
}
