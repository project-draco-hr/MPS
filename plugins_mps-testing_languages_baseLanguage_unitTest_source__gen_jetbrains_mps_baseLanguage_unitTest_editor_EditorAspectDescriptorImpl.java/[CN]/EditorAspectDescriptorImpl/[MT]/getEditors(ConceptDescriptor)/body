{
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a,descriptor.getConceptFqName())) {
case 0:
    return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new AssertEquals_Editor()));
case 1:
  return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new AssertFalse_Editor()));
case 2:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new AssertInNotNull_Editor()));
case 3:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new AssertIsNull_Editor()));
case 4:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new AssertSame_Editor()));
case 5:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new AssertThrows_Editor()));
case 6:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new AssertTrue_Editor()));
case 7:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BTestCase_Editor()));
case 8:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new Fail_Editor()));
case 9:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new Message_Editor()));
case 10:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new PrepareMethod_Editor()));
case 11:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new TestMethod_Editor()));
case 12:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new TestMethodList_Editor()));
default :
}
return Collections.<ConceptEditor>emptyList();
}
