{
  sb.append("<");
  sb.append(SPropertyOperations.getString(element,"tagName"));
  if (ListSequence.fromList(SLinkOperations.getTargets(element,"attributes",true)).isNotEmpty()) {
    for (    SNode attr : SLinkOperations.getTargets(element,"attributes",true)) {
      if (SNodeOperations.isInstanceOf(attr,"jetbrains.mps.core.xml.structure.XmlAttribute")) {
        sb.append(" ");
        addAttribute(SNodeOperations.cast(attr,"jetbrains.mps.core.xml.structure.XmlAttribute"));
      }
 else {
        hasErrors=true;
      }
    }
  }
  if (ListSequence.fromList(SLinkOperations.getTargets(element,"content",true)).isEmpty()) {
    sb.append("/>");
    return this;
  }
  sb.append(">");
  for (  SNode content : SLinkOperations.getTargets(element,"content",true)) {
    if (SNodeOperations.isInstanceOf(content,"jetbrains.mps.core.xml.structure.XmlBaseElement")) {
      add(SNodeOperations.cast(content,"jetbrains.mps.core.xml.structure.XmlElement"));
    }
 else     if (SNodeOperations.isInstanceOf(content,"jetbrains.mps.core.xml.structure.XmlText") && (SPropertyOperations.getString(SNodeOperations.cast(content,"jetbrains.mps.core.xml.structure.XmlText"),"value") == null || SPropertyOperations.getString(SNodeOperations.cast(content,"jetbrains.mps.core.xml.structure.XmlText"),"value").length() == 0)) {
    }
 else {
      hasErrors=true;
    }
  }
  sb.append("</");
  sb.append(SPropertyOperations.getString(element,"tagName"));
  sb.append(">");
  return this;
}
