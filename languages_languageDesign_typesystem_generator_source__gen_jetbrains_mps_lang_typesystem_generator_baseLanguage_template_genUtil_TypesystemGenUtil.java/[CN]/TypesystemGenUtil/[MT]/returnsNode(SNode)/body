{
  List<SNode> returnStatements=SNodeOperations.getNodeDescendants(subtypingRule,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc67c7feL,"jetbrains.mps.baseLanguage.structure.ReturnStatement"),false,new SAbstractConcept[]{MetaAdapterFactory.getConcept(0xfd3920347849419dL,0x907112563d152375L,0x1174bed3125L,"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral"),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x1107e0cb103L,"jetbrains.mps.baseLanguage.structure.AnonymousClass"),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration")});
  for (  SNode retSt : returnStatements) {
    if (!(TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(retSt,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc67c7feL,0xf8cc6bf96cL,"expression"))),_quotation_createNode_y65bbo_b0a0a0b0d()))) {
      return false;
    }
  }
  SNode lastStatement=IMethodLike_BehaviorDescriptor.getLastStatement_idi2fhS7A.invoke(subtypingRule);
  if (SNodeOperations.isInstanceOf(lastStatement,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b213L,"jetbrains.mps.baseLanguage.structure.ExpressionStatement"))) {
    if (!(TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(SNodeOperations.cast(lastStatement,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b213L,"jetbrains.mps.baseLanguage.structure.ExpressionStatement")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b213L,0xf8cc56b214L,"expression"))),_quotation_createNode_y65bbo_b0a0a0d0d()))) {
      return false;
    }
  }
  return true;
}
