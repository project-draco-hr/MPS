{
  MappingsMemento mappingsMemento=new MappingsMemento();
  for (int size=is.readInt(); size > 0; size--) {
    String label=is.readString();
    int mapSize=is.readInt();
    Map<SNodeId,Object> innerMap=new HashMap<SNodeId,Object>(mapSize);
    for (; mapSize > 0; mapSize--) {
      SNodeId key=is.readNodeId();
      int valSize=is.readInt();
      if (valSize == 1) {
        innerMap.put(key,is.readNodeId());
      }
 else {
        List<SNodeId> list=new ArrayList<SNodeId>(valSize);
        for (; valSize > 0; valSize--) {
          list.add(is.readNodeId());
        }
        innerMap.put(key,list);
      }
    }
    mappingsMemento.myMappingNameAndInputNodeToOutputNodeMap.put(label,innerMap);
  }
  for (int size=is.readInt(); size > 0; size--) {
    SNodeId inputNode=is.readNodeId();
    SNodeId outputNode=is.readNodeId();
    boolean isUnique=is.readBoolean();
    mappingsMemento.addOutputNodeByInputNode(inputNode,outputNode,isUnique);
  }
  if (is.readByte() != '!') {
    throw new IOException("inconsistent cache");
  }
  return mappingsMemento;
}
