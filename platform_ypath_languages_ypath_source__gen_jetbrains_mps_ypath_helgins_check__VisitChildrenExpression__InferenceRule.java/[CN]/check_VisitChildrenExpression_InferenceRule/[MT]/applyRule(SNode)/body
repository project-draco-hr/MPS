{
  int actualCount=SLinkOperations.getCount(argument,"actualArgument");
  SNode visitBlock=VisitChildrenExpression_Behavior.call_getEnclosingVisitNodesStatement_1180014794484(argument);
  if (!((visitBlock != null))) {
    TypeChecker.getInstance().reportTypeError(argument,"visit children is unexpected here","jetbrains.mps.ypath.helgins","1180014856089");
  }
  List<SNode> parameters=SLinkOperations.getTargets(SLinkOperations.getTarget(visitBlock,"visitParameterDeclarationList",true),"visitParameterDeclaration",true);
  int expectedCount=SequenceOperations.getSize(parameters);
  if (!(actualCount == expectedCount)) {
    TypeChecker.getInstance().reportTypeError(argument,"wrong parameters number: expected " + expectedCount + " , actual "+ actualCount,"jetbrains.mps.ypath.helgins","1180014444793");
  }
{
    SNode arg;
    SNode param;
    Iterator<SNode> arg_iterator=SLinkOperations.getTargets(argument,"actualArgument",true).iterator();
    Iterator<SNode> param_iterator=parameters.iterator();
    while (true) {
      if (!(arg_iterator.hasNext())) {
        break;
      }
      if (!(param_iterator.hasNext())) {
        break;
      }
      arg=arg_iterator.next();
      param=param_iterator.next();
      TypeChecker.getInstance().getRuntimeSupport().createLessThanInequation(TypeChecker.getInstance().getRuntimeSupport().typeOf(arg,"jetbrains.mps.ypath.helgins","1180014730654"),TypeChecker.getInstance().getRuntimeSupport().typeOf(param,"jetbrains.mps.ypath.helgins","1180014739452"),arg,null,"jetbrains.mps.ypath.helgins","1180014737422");
    }
  }
}
