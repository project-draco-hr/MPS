{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.build.generictasks.structure.Attribute","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"attributeDeclaration"});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.build.generictasks.structure.AttributeDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.baseLanguage.classifiers.structure.IMember"},new String[]{"deprecated","required"},new String[]{});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.build.generictasks.structure.BuiltInTaskDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.build.generictasks.structure.ITaskDeclaration","jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"fake"},new String[]{});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.build.generictasks.structure.ITaskDeclaration",null,true,new String[]{"jetbrains.mps.buildlanguage.structure.IDeclaration","jetbrains.mps.baseLanguage.classifiers.structure.IClassifier"},new String[]{"classname","canHaveInternalText","abstract","depracated"},new String[]{});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.build.generictasks.structure.NestedDeclaration","jetbrains.mps.build.generictasks.structure.TaskReference",false,new String[]{"jetbrains.mps.build.generictasks.structure.TaskReference"},new String[]{},new String[]{});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.build.generictasks.structure.PathReference","jetbrains.mps.buildlanguage.structure.CallReference",false,new String[]{"jetbrains.mps.buildlanguage.structure.CallReference"},new String[]{},new String[]{});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.build.generictasks.structure.TaskCall","jetbrains.mps.buildlanguage.structure.AbstractCall",false,new String[]{"jetbrains.mps.buildlanguage.structure.AbstractCall","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"id"},new String[]{"declaration"});
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.build.generictasks.structure.TaskInterfaceDeclaration","jetbrains.mps.build.generictasks.structure.BuiltInTaskDeclaration",false,new String[]{"jetbrains.mps.build.generictasks.structure.BuiltInTaskDeclaration"},new String[]{},new String[]{});
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.build.generictasks.structure.TaskReference","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"declaration"});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
