{
  try {
    DeleteDialog.DeleteOption safeOption=new DeleteDialog.DeleteOption("Safe Delete",true,false);
    DeleteDialog.DeleteOption filesOption=new DeleteDialog.DeleteOption("Delete Files",false,false);
    DeleteDialog dialog=new DeleteDialog(((MPSProject)MapSequence.fromMap(_params).get("project")),"Delete Generator","Are you sure you want to delete generator?\n\nThis operation is not undoable.",safeOption,filesOption);
    dialog.show();
    if (!(dialog.isOK())) {
      return;
    }
    ModelAccess modelAccess=((MPSProject)MapSequence.fromMap(_params).get("project")).getModelAccess();
    final DeleteGeneratorHelper butcher=new DeleteGeneratorHelper(((MPSProject)MapSequence.fromMap(_params).get("project")));
    butcher.safeDelete(safeOption.selected).deleteFiles(filesOption.selected);
    modelAccess.executeCommandInEDT(new Runnable(){
      public void run(){
        Generator generator=((Generator)((SModule)MapSequence.fromMap(_params).get("module")));
        final IStatus s=butcher.canDelete(generator);
        if (!(s.isOk())) {
          SwingUtilities.invokeLater(new Runnable(){
            public void run(){
              Messages.showErrorDialog(ProjectHelper.toIdeaProject(((MPSProject)MapSequence.fromMap(_params).get("project"))),s.getMessage(),"Deleting Generator");
            }
          }
);
          return;
        }
        butcher.delete(generator);
      }
    }
);
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "DeleteGenerator",t);
    }
  }
}
