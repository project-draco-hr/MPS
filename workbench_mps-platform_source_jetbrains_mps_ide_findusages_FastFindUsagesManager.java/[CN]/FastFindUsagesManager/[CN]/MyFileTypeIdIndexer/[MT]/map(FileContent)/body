{
  byte[] content=inputData.getContent();
  CharSequence data=LoadTextUtil.getTextByBinaryPresentation(content,FileUtil.DEFAULT_CHARSET);
  char[] charsArray=CharArrayUtil.fromSequenceWithoutCopying(data);
  int len=data.length();
  if (charsArray == null) {
    charsArray=CharArrayUtil.fromSequence(data);
  }
  Map<IdIndexEntry,Integer> result=new HashMap<IdIndexEntry,Integer>();
  int wordStart=-1;
  for (int i=0; i < len; i++) {
    char c=charsArray[i];
    if (c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z') {
      if (wordStart == -1) {
        wordStart=i;
      }
    }
 else     if (wordStart >= 0) {
      processWord(result,charsArray,len,wordStart,i - wordStart);
      wordStart=-1;
    }
  }
  return result;
}
