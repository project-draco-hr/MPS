{
  if (this.myNode == null) {
    return null;
  }
  final Wrappers._T<ClassLoader> loader=new Wrappers._T<ClassLoader>();
  final Wrappers._T<SModelDescriptor> model=new Wrappers._T<SModelDescriptor>();
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      model.value=ProjectModels.createDescriptorFor(EmbeddableEditor.this.myOwner);
      model.value.getSModel().addRoot(SNodeOperations.copyNode(EmbeddableEditor.this.myNode));
    }
  }
);
  GeneratorManager manager=this.myContext.getComponent(GeneratorManager.class);
  manager.generateModelsWithProgressWindow(Arrays.asList(model.value),this.myContext,type,false);
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      IModule lang=GlobalScope.getInstance().getLanguage(langName);
      ClassLoader parentClassLoader=ClassLoaderManager.getInstance().getClassLoaderFor(lang);
      loader.value=type.getClassLoader(parentClassLoader);
    }
  }
);
  return new GenerateResult(loader.value,node,this.myContext);
}
