{
  if (myRootNode == null) {
    return null;
  }
  InMemoryJavaGenerationHandler handler=new InMemoryJavaGenerationHandler(false,false){
    @Override public boolean canHandle(    SModelDescriptor inputModel){
      return inputModel != null;
    }
    @Override protected CompositeClassPathItem getClassPath(    Set<IModule> contextModules){
      CompositeClassPathItem result=super.getClassPath(contextModules);
      for (      IClassPathItem item : additionalClasspath) {
        result.add(item);
      }
      return result;
    }
  }
;
  GeneratorManager manager=new GeneratorManager(myContext.getProject(),new GenerationSettings()){
    protected boolean generateRequirements(){
      return false;
    }
  }
;
  boolean successful=manager.generateModelsWithProgressWindow(ListSequence.fromListAndArray(new ArrayList<SModelDescriptor>(),myModel),myContext,handler,false,true);
  return new GenerationResult(myRootNode,myContext,myModel,handler,successful);
}
