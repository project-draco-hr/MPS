{
  IScript scr=new ScriptBuilder().withFacets(new IFacet.Name("Generate"),new IFacet.Name("TextGen"),new IFacet.Name("JavaCompile"),new IFacet.Name("Make")).withTarget(new ITarget.Name("compileToMemory")).toScript();
  IConfigMonitor cmon=new IConfigMonitor.Stub(){
    public <T extends IOption>T relayQuery(    IQuery<T> query){
      return query.defaultOption();
    }
  }
;
  IResult res=new WorkbenchMakeService(myContext,cmon,true).make(new ModelsToResources(myContext,Sequence.<SModelDescriptor>singleton(myModel)).resources(false),scr,new IScript.Setup(){
    public void setup(    IParametersPool ppool){
      Tuples._1<Iterable<IClassPathItem>> params=(Tuples._1<Iterable<IClassPathItem>>)ppool.parameters(new ITarget.Name("compileToMemory"),Object.class);
      params._0(classPath);
    }
  }
);
  if (res.isSucessful()) {
    CResource out=(CResource)Sequence.fromIterable(res.output()).first();
    return out.classes();
  }
  return null;
}
