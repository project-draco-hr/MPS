{
  return sourceModel.conceptsFromModelLanguages(new Condition<ConceptDeclaration>(){
    public boolean met(    ConceptDeclaration node){
      return ChildSubstituteActionsHelper.isDefaultSubstitutableConcept((jetbrains.mps.bootstrap.structureLanguage.structure.ConceptDeclaration)node.getAdapter(),(jetbrains.mps.bootstrap.structureLanguage.structure.ConceptDeclaration)targetConcept.getAdapter(),scope);
    }
  }
,scope);
}
