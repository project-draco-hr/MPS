{
  jetbrains.mps.smodel.SNode meetType=SConceptOperations.createNewNode("jetbrains.mps.lang.typesystem.structure.MeetType",null);
  if (SNodeOperations.isInstanceOf(node1,"jetbrains.mps.lang.typesystem.structure.MeetType")) {
    SNode meetWrapper1=SNodeOperations.cast(node1,"jetbrains.mps.lang.typesystem.structure.MeetType");
    for (    SNode bc : SLinkOperations.getTargets(meetWrapper1,"argument",true)) {
      ListSequence.fromList(SLinkOperations.getTargets(meetType,"argument",true)).addElement(HUtil.copyIfNecessary(bc));
    }
    if (SNodeOperations.isInstanceOf(node2,"jetbrains.mps.lang.typesystem.structure.MeetType")) {
      SNode meetWrapper2=SNodeOperations.cast(node2,"jetbrains.mps.lang.typesystem.structure.MeetType");
      for (      SNode bc : SLinkOperations.getTargets(meetWrapper2,"argument",true)) {
        ListSequence.fromList(SLinkOperations.getTargets(meetType,"argument",true)).addElement(HUtil.copyIfNecessary(bc));
      }
    }
 else {
      ListSequence.fromList(SLinkOperations.getTargets(meetType,"argument",true)).addElement(HUtil.copyIfNecessary(node2));
    }
  }
 else   if (SNodeOperations.isInstanceOf(node2,"jetbrains.mps.lang.typesystem.structure.MeetType")) {
    SNode meetWrapper2=SNodeOperations.cast(node2,"jetbrains.mps.lang.typesystem.structure.MeetType");
    ListSequence.fromList(SLinkOperations.getTargets(meetType,"argument",true)).addElement(HUtil.copyIfNecessary(node1));
    for (    SNode bc : SLinkOperations.getTargets(meetWrapper2,"argument",true)) {
      ListSequence.fromList(SLinkOperations.getTargets(meetType,"argument",true)).addElement(HUtil.copyIfNecessary(bc));
    }
  }
 else {
    ListSequence.fromList(SLinkOperations.getTargets(meetType,"argument",true)).addElement(HUtil.copyIfNecessary(node1));
    ListSequence.fromList(SLinkOperations.getTargets(meetType,"argument",true)).addElement(HUtil.copyIfNecessary(node2));
  }
  return meetType;
}
