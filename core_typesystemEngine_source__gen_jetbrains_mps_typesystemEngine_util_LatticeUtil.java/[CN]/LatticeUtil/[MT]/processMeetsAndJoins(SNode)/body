{
{
    SNode joinType=node;
    if (SNodeOperations.isInstanceOf(joinType,"jetbrains.mps.lang.typesystem.structure.JoinType")) {
      for (      SNode child : SLinkOperations.getTargets(joinType,"argument",true)) {
        processMeetsAndJoins(child);
{
          SNode childJoinType=child;
          if (SNodeOperations.isInstanceOf(childJoinType,"jetbrains.mps.lang.typesystem.structure.JoinType")) {
            for (            SNode grandChild : SLinkOperations.getTargets(childJoinType,"argument",true)) {
              SNodeOperations.detachNode(grandChild);
              ListSequence.fromList(SLinkOperations.getTargets(joinType,"argument",true)).addElement(grandChild);
            }
            SNodeOperations.deleteNode(child);
          }
        }
      }
    }
  }
{
    SNode meetType=node;
    if (SNodeOperations.isInstanceOf(meetType,"jetbrains.mps.lang.typesystem.structure.MeetType")) {
      for (      SNode child : SLinkOperations.getTargets(meetType,"argument",true)) {
        processMeetsAndJoins(child);
{
          SNode childMeetType=child;
          if (SNodeOperations.isInstanceOf(childMeetType,"jetbrains.mps.lang.typesystem.structure.MeetType")) {
            for (            SNode grandChild : SLinkOperations.getTargets(childMeetType,"argument",true)) {
              SNodeOperations.detachNode(grandChild);
              ListSequence.fromList(SLinkOperations.getTargets(meetType,"argument",true)).addElement(grandChild);
            }
            SNodeOperations.deleteNode(child);
          }
        }
      }
    }
  }
}
