{
  final jetbrains.mps.project.Project mpsProject=ProjectHelper.toMPSProject(myProject);
  if (getSettings().OPTIMIZE_IMPORTS_BEFORE_PROJECT_COMMIT && mpsProject != null) {
    SModelFileTracker modelFileTracker=SModelFileTracker.getInstance(mpsProject.getRepository());
    Collection<File> affectedFiles=myPanel.getFiles();
    final List<SModel> affectedModels=new ArrayList<SModel>();
    for (    File file : affectedFiles) {
      SModel model=modelFileTracker.findModel(FileSystem.getInstance().getFileByPath(file.getAbsolutePath()));
      if (model == null) {
        continue;
      }
      affectedModels.add(model);
    }
    ThreadUtils.assertEDT();
    try {
      mpsProject.getModelAccess().executeCommand(new Runnable(){
        public void run(){
          new OptimizeImportsHelper().optimizeModelsImports(affectedModels);
          for (          SModel affectedModel : affectedModels) {
            ((EditableSModel)affectedModel).save();
          }
        }
      }
);
    }
 catch (    Throwable e) {
      LOG.error("Couldn't optimize imports before commit",e);
    }
  }
  return CheckinHandler.ReturnResult.COMMIT;
}
