{
{
    SAbstractConcept cncpt=((SAbstractConcept)concept);
    Integer preIndex=indices_xbvbvu_a0a.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return Collections.<ConceptEditor>singletonList(new BwfAntStatement_Editor());
      }
    break;
case 1:
  if (true) {
    return Collections.<ConceptEditor>singletonList(new BwfAntTaskBundleDeclaration_Editor());
  }
break;
case 2:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfAntTaskDeclaration_Editor());
}
break;
case 3:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfCustomMacro_Editor());
}
break;
case 4:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfDependency_Editor());
}
break;
case 5:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfFileSet_Editor());
}
break;
case 6:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfJavaClassPath_Editor());
}
break;
case 7:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfJavaDependency_Editor());
}
break;
case 8:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfJavaDescriptor_Editor());
}
break;
case 9:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfJavaLibrary_Editor());
}
break;
case 10:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfJavaLibraryReference_Editor());
}
break;
case 11:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfJavaModule_Editor());
}
break;
case 12:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfJavaModuleReference_Editor());
}
break;
case 13:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfMacro_Editor());
}
break;
case 14:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfMacroListImport_Editor());
}
break;
case 15:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfPathDeclaration_Editor());
}
break;
case 16:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfPathReference_Editor());
}
break;
case 17:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfProject_Editor());
}
break;
case 18:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfProjectPart_Editor());
}
break;
case 19:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfProjectPartStatement_Editor());
}
break;
case 20:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfStatement_Editor());
}
break;
case 21:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfSubTask_Editor());
}
break;
case 22:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfSubTaskDependency_Editor());
}
break;
case 23:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfTask_Editor());
}
break;
case 24:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfTaskDependency_Editor());
}
break;
case 25:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfTaskLibrary_Editor());
}
break;
case 26:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfTaskLibraryDependency_Editor());
}
break;
case 27:
if (true) {
return Collections.<ConceptEditor>singletonList(new BwfTaskPart_Editor());
}
break;
default :
}
}
return Collections.<ConceptEditor>emptyList();
}
