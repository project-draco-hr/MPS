{
  final Set<String> seenDependencies=new HashSet<String>();
  ListSequence.fromList(SLinkOperations.getTargets(m,"dependencies",true)).removeWhere(new IWhereFilter<SNode>(){
    public boolean accept(    SNode dep){
      if (!(SNodeOperations.isInstanceOf(dep,"jetbrains.mps.build.workflow.structure.BwfPathElement"))) {
        return false;
      }
      SNode cp=SLinkOperations.getTarget(SNodeOperations.cast(dep,"jetbrains.mps.build.workflow.structure.BwfPathElement"),"classpath",true);
      XmlSignature s=new XmlSignature().add(cp);
      String id=(s.hasErrors() ? "dep." + cp.getId() : s.getResult());
      return !(seenDependencies.add(id));
    }
  }
);
}
