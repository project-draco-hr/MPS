{
  final ProgressMonitor monitor=new ProgressMonitorAdapter(indicator);
  monitor.start("",(needClean ? 10 : 9));
  try {
    final MPSCompilationResult mpsCompilationResult=ModelAccess.instance().runReadAction(new Computable<MPSCompilationResult>(){
      public MPSCompilationResult compute(){
        MessagesViewTool mvt=getProject().getComponent(MessagesViewTool.class);
        ModuleMaker maker=new ModuleMaker(mvt.newHandler(),MessageKind.ERROR);
        if (needClean) {
          maker.clean(modules,monitor.subTask(1));
        }
        jetbrains.mps.project.Project project=ProjectHelper.toMPSProject(myProject);
        if (project != null) {
          return maker.make(modules,monitor.subTask(7),JavaCompilerOptionsComponent.getInstance().getJavaCompilerOptions(project));
        }
 else {
          return maker.make(modules,monitor.subTask(7));
        }
      }
    }
);
    if (mpsCompilationResult.isReloadingNeeded()) {
      ModelAccess.instance().runWriteAction(new Runnable(){
        public void run(){
          ClassLoaderManager.getInstance().reloadModules(mpsCompilationResult.getChangedModules(),monitor.subTask(2));
        }
      }
);
    }
  }
  finally {
    monitor.done();
  }
}
