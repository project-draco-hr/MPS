{
  final String[] error=new String[]{null};
  ProgressManager.getInstance().run(new Task.Modal(myCurrentProject,"Creating",false){
    @Override public void run(    @NotNull() ProgressIndicator indicator){
      indicator.setIndeterminate(true);
      error[0]=createDirs();
      if (error[0] != null)       return;
      String projectFilePath=myOptions.getProjectPath();
      String suffix;
      if (myOptions.getStorageScheme().equals(StorageScheme.DIRECTORY_BASED)) {
        suffix=Project.DIRECTORY_STORE_FOLDER;
      }
 else {
        suffix=myOptions.getProjectName() + MPSExtentions.DOT_MPS_PROJECT;
      }
      projectFilePath+=File.separator + suffix;
      myCreatedProject=ProjectManagerEx.getInstanceEx().newProject(myOptions.getProjectName(),projectFilePath,true,false);
    }
  }
);
  if (error[0] != null) {
    throw new ProjectNotCreatedException(error[0]);
  }
  boolean doNotSave=ApplicationManagerEx.getApplicationEx().isDoNotSave();
  try {
    ApplicationManagerEx.getApplicationEx().doNotSave(false);
    myCreatedProject.save();
  }
  finally {
    ApplicationManagerEx.getApplicationEx().doNotSave(doNotSave);
  }
  final MPSProject mpsProject=myCreatedProject.getComponent(MPSProject.class);
  StartupManager.getInstance(myCreatedProject).registerPostStartupActivity(new Runnable(){
    @Override public void run(){
      mpsProject.getModelAccess().executeCommand(new Runnable(){
        @Override public void run(){
          if (myOptions.getCreateNewLanguage()) {
            myCreatedLanguage=NewModuleUtil.createLanguage(myOptions.getLanguageNamespace(),myOptions.getLanguagePath(),mpsProject);
            mpsProject.addModule(myCreatedLanguage.getModuleReference());
          }
          if (myOptions.getCreateNewSolution()) {
            myCreatedSolution=NewModuleUtil.createSolution(myOptions.getSolutionNamespace(),myOptions.getSolutionPath(),mpsProject);
            mpsProject.addModule(myCreatedSolution.getModuleReference());
          }
          if (myCreatedSolution != null && myCreatedLanguage != null) {
            myCreatedSolution.save();
            if (myOptions.getCreateModel()) {
              EditableSModel model=SModuleOperations.createModelWithAdjustments(myCreatedSolution.getModuleReference().getModuleName() + ".sandbox",myCreatedSolution.getModelRoots().iterator().next());
              ((SModelInternal)model).addLanguage(MetaAdapterFactory.getLanguage(myCreatedLanguage.getModuleReference()));
              model.save();
            }
          }
          if (myOptions.getCreateNewSolution() || myOptions.getCreateNewLanguage()) {
            ((StandaloneMPSProject)mpsProject).update();
          }
        }
      }
);
    }
  }
);
  return myCreatedProject;
}
