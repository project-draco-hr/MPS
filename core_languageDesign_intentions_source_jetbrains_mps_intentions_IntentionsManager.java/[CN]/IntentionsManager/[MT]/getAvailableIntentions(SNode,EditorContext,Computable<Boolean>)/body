{
  try {
    TypeChecker.getInstance().enableGlobalSubtypingCache();
    Set<Pair<Intention,SNode>> intentions=ModelAccess.instance().runReadAction(new Computable<Set<Pair<Intention,SNode>>>(){
      public Set<Pair<Intention,SNode>> compute(){
        Set<Pair<Intention,SNode>> result=new HashSet<Pair<Intention,SNode>>();
        for (        Intention intention : getAvailableIntentionsForExactNode(node,context,false,true,terminated)) {
          result.add(new Pair<Intention,SNode>(intention,node));
        }
        SNode parent=node.getParent();
        while (parent != null) {
          for (          Intention intention : getAvailableIntentionsForExactNode(parent,context,true,true,terminated)) {
            result.add(new Pair<Intention,SNode>(intention,parent));
          }
          parent=parent.getParent();
        }
        return result;
      }
    }
);
    return intentions;
  }
  finally {
    TypeChecker.getInstance().clearGlobalSubtypingCache();
  }
}
