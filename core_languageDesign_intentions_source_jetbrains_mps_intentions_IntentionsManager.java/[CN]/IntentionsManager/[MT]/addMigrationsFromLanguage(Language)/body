{
  SModelDescriptor scriptsModel=LanguageAspect.SCRIPTS.get(language);
  if (scriptsModel == null)   return;
  List<MigrationScript> migrationScripts=scriptsModel.getSModel().getRootsAdapters(MigrationScript.class);
  Map<BaseMigrationScript,MigrationScript> scripts=new HashMap<BaseMigrationScript,MigrationScript>();
  for (  MigrationScript migrationScript : migrationScripts) {
    BaseMigrationScript script=MigrationScriptUtil.getBaseScriptForNode(null,migrationScript.getNode());
    if (script == null)     continue;
    scripts.put(script,migrationScript);
  }
  for (  BaseMigrationScript script : scripts.keySet()) {
    MigrationScript migrationScript=scripts.get(script);
    for (    AbstractMigrationRefactoring refactoring : script.getRefactorings()) {
      if (refactoring.isShowAsIntention()) {
        Intention intention=new MigrationRefactoringAdapter(refactoring,migrationScript);
        ModuleReference moduleRef=language.getModuleReference();
        SNodePointer node=new SNodePointer(migrationScript.getNode());
        IntentionsManager.getInstance().addIntention(intention,moduleRef,node);
      }
    }
  }
}
