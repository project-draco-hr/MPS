{
  SModelDescriptor scriptsModel=language.getScriptsModelDescriptor();
  if (scriptsModel == null)   return;
  List<MigrationScript> migrationScripts=scriptsModel.getSModel().getRootsAdapters(MigrationScript.class);
  Map<BaseMigrationScript,MigrationScript> scripts=new com.intellij.util.containers.HashMap<BaseMigrationScript,MigrationScript>();
  for (  MigrationScript migrationScript : migrationScripts) {
    BaseMigrationScript script=MigrationScriptUtil.getBaseScriptForNode(null,migrationScript.getNode());
    if (script == null)     continue;
    scripts.put(script,migrationScript);
  }
  for (  BaseMigrationScript script : scripts.keySet()) {
    MigrationScript migrationScript=scripts.get(script);
    for (    AbstractMigrationRefactoring refactoring : script.getRefactorings()) {
      if (refactoring.isShowAsIntention()) {
        Intention intention=new MigrationRefactoringAdapter(refactoring,migrationScript);
        addIntention(intention);
        myNodesByIntentions.put(intention,migrationScript.getNode());
      }
    }
  }
}
