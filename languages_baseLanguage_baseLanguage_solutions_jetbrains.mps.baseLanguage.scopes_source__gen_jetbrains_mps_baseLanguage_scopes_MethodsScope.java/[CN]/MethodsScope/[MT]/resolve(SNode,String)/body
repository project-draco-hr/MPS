{
  List<SNode> methods=(MapSequence.fromMap(nameToMethods).containsKey(refText) ? MapSequence.fromMap(nameToMethods).get(refText) : new ArrayList<SNode>());
  if (methods.isEmpty()) {
    return null;
  }
  if (methods.size() == 1) {
    return ListSequence.fromList(methods).first();
  }
  if (!(SNodeOperations.isInstanceOf(contextNode,MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,"jetbrains.mps.baseLanguage.structure.IMethodCall")))) {
    return null;
  }
  List<SNode> actualArguments=SLinkOperations.getChildren((SNodeOperations.cast(contextNode,MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,"jetbrains.mps.baseLanguage.structure.IMethodCall"))),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301aeL,"actualArgument"));
  methods=MethodResolveUtil.selectByParmCount(methods,actualArguments);
  if (methods.size() == 1) {
    return ListSequence.fromList(methods).first();
  }
  Pair<SNode,Boolean> resolveByTypes=MethodResolveUtil.chooseByParameterTypeReportNoGoodMethodNode(null,methods,actualArguments,typeBindings);
  if (resolveByTypes.o2) {
    return resolveByTypes.o1;
  }
 else {
    return null;
  }
}
