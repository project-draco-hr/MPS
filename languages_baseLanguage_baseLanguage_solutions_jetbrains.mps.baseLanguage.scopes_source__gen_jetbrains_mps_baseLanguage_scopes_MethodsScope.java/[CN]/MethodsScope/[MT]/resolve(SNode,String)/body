{
  List<SNode> methods=(MapSequence.fromMap(nameToMethods).containsKey(refText) ? MapSequence.fromMap(nameToMethods).get(refText) : new ArrayList<SNode>());
  if (methods.isEmpty()) {
    return null;
  }
  if (methods.size() == 1) {
    return ListSequence.fromList(methods).first();
  }
  if (!(SNodeOperations.isInstanceOf(contextNode,MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,"jetbrains.mps.baseLanguage.structure.IMethodCall")))) {
    return null;
  }
  List<SNode> actualArguments=SLinkOperations.getChildren((SNodeOperations.cast(contextNode,MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,"jetbrains.mps.baseLanguage.structure.IMethodCall"))),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141038l,"actualArgument"));
  methods=MethodResolveUtil.selectByParmCount(methods,actualArguments);
  if (methods.size() == 1) {
    return ListSequence.fromList(methods).first();
  }
  Pair<SNode,Boolean> resolveByTypes=MethodResolveUtil.chooseByParameterTypeReportNoGoodMethodNode(null,methods,actualArguments,typeBindings);
  if (resolveByTypes.o2) {
    return resolveByTypes.o1;
  }
 else {
    return null;
  }
}
