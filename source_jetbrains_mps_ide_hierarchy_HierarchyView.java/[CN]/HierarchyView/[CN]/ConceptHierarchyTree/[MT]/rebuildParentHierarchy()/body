{
  ArrayList<ConceptDeclaration> parentHierarchy=new ArrayList<ConceptDeclaration>();
  ConceptDeclaration parentDeclaration=myConceptDeclaration;
  while (parentDeclaration != null) {
    parentHierarchy.add(parentDeclaration);
    parentDeclaration=parentDeclaration.getExtends();
  }
  ConceptHierarchyTreeNode parentTreeNode=null;
  ConceptHierarchyTreeNode hierarchyTreeNode=null;
  ConceptHierarchyTreeNode rootNode=null;
  for (int i=parentHierarchy.size() - 1; i >= 0; i--) {
    hierarchyTreeNode=i > 0 ? (new ConceptHierarchyTreeNode(parentHierarchy.get(i),myOperationContext)) : new ChildConceptHierarchyTreeNode(parentHierarchy.get(i),myOperationContext);
    if (i == parentHierarchy.size() - 1)     rootNode=hierarchyTreeNode;
    if (parentTreeNode != null) {
      parentTreeNode.add(hierarchyTreeNode);
      myUsagesManager.addDescendant(parentHierarchy.get(i + 1),parentHierarchy.get(i));
    }
    parentTreeNode=hierarchyTreeNode;
  }
  myTreeNode=hierarchyTreeNode;
  TextTreeNode textRootNode=new RootTextTreeNode("<html>Hierarchy for concept <font color=\"#400090\"><b>" + ((ConceptDeclaration)myTreeNode.getUserObject()).getName() + "</b></font>");
  textRootNode.add(rootNode);
  return textRootNode;
}
