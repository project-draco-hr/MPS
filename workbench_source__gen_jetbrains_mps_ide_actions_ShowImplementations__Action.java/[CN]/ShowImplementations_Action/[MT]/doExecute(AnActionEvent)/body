{
  try {
    final List<SNode> nodes=new ArrayList<SNode>();
    ListSequence.fromList(nodes).addElement(ShowImplementations_Action.this.node);
    SearchResults<SNode> searchResults=new ImplementingClasses_Finder().find(new SearchQuery(ShowImplementations_Action.this.node,GlobalScope.getInstance()),new EmptyProgressIndicator());
    for (    SearchResult<SNode> searchResult : searchResults.getSearchResults()) {
      SNode searchNode=searchResult.getObject();
      if ((searchNode != null)) {
        ListSequence.fromList(nodes).addElement(searchNode);
      }
    }
    ModelAccess.instance().runWriteActionInCommandAsync(new Runnable(){
      public void run(){
        String title="Definition of " + ShowImplementations_Action.this.node.getPresentation();
        ShowImplementationComponent component=new ShowImplementationComponent(nodes,ShowImplementations_Action.this.context);
        JBPopup popup=JBPopupFactory.getInstance().createComponentPopupBuilder(component,component.getPrefferedFocusableComponent()).setRequestFocus(true).setProject(ShowImplementations_Action.this.project).setMovable(true).setResizable(true).setTitle(title).createPopup();
        popup.show(new RelativePoint(ShowImplementations_Action.this.cell.getEditor(),new Point(ShowImplementations_Action.this.cell.getX(),ShowImplementations_Action.this.cell.getY())));
        component.getPrefferedFocusableComponent().setRequestFocusEnabled(true);
        component.setPopup(popup);
      }
    }
);
  }
 catch (  Throwable t) {
    if (log.isErrorEnabled()) {
      log.error("User's action execute method failed. Action:" + "ShowImplementations",t);
    }
  }
}
