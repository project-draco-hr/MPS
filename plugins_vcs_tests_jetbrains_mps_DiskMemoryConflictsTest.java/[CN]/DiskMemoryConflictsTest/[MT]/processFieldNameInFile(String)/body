{
  Assert.assertTrue(MODEL_FILE.exists());
  try {
    Scanner scanner=new Scanner(MODEL_FILE);
    String FIELD_PATTERN="      <property name=\"name\" nameId=\"tpck.1169194664001\" value=\"%s\" />";
    Pattern fieldNamePattern=Pattern.compile(String.format(FIELD_PATTERN,"([^\"]+)"));
    boolean inField=false;
    List<String> lines=new ArrayList<String>();
    while (scanner.hasNextLine()) {
      String line=scanner.nextLine();
      if (line.contains("<node role=\"field\" roleId=\"tpee.1068390468199\" type=\"tpee.FieldDeclaration\" typeId=\"tpee.1068390468200\" id=\"6010389230754495469\">")) {
        inField=true;
      }
 else       if (inField) {
        Matcher matcher=fieldNamePattern.matcher(line);
        if (matcher.matches()) {
          if (nameToWrite == null) {
            return matcher.group(1);
          }
 else {
            lines.add(matcher.replaceFirst(String.format(FIELD_PATTERN,nameToWrite)));
            inField=false;
            continue;
          }
        }
      }
      lines.add(line);
    }
    scanner.close();
    long lastModifiedBefore=MODEL_FILE.lastModified();
    PrintWriter w=new PrintWriter(MODEL_FILE);
    for (    String line : lines) {
      w.println(line);
    }
    w.close();
    if (MODEL_FILE.lastModified() == lastModifiedBefore) {
      Assert.assertTrue(MODEL_FILE.setLastModified(lastModifiedBefore + 1000));
    }
    Assert.assertTrue(MODEL_FILE.setLastModified(lastModifiedBefore + 2000 + (int)(Math.random() * 100000)));
  }
 catch (  FileNotFoundException e) {
    Assert.fail();
  }
  return null;
}
