{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
  ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.TryCatchStatement"),_context.getSourceNode()){
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      SNode catchClause=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.CatchClause",null);
      ListSequence.fromList(SLinkOperations.getTargets(_context.getSourceNode(),"catchClause",true)).insertElement(0,catchClause);
      return ListSequence.fromList(SLinkOperations.getTargets(_context.getSourceNode(),"catchClause",true)).first();
    }
    public String getMatchingText(    String pattern){
      return "catch";
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
  }
);
  return result;
}
