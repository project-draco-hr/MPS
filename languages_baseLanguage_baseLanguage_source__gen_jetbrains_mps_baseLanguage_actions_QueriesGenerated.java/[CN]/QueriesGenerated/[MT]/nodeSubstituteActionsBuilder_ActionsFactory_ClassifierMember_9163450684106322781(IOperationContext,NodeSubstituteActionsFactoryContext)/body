{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration").getDeclarationNode();
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode current=SNodeOperations.castConcept(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x32175ac2e6fcc181L,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"));
          String name=IncompleteMemberHelper.buildMethodName(pattern);
          SNode result=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration")),null);
          SPropertyOperations.set(result,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,0x1126a8d157dL,"isAbstract"),"" + (true));
          SPropertyOperations.set(result,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x6c6b6a1e379f9408L,0x73f30e3df95c0b73L,"isNative"),"" + (false));
          SPropertyOperations.set(result,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),name);
          SLinkOperations.setTarget(SNodeOperations.cast(result,MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112574373bdL,"jetbrains.mps.baseLanguage.structure.ClassifierMember")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,0x112670d886aL,"visibility"),SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10af9581ff1L,"jetbrains.mps.baseLanguage.structure.PublicVisibility")),null));
          SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1fdL,"returnType"),SLinkOperations.getTarget(current,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x32175ac2e6fcc181L,0x32175ac2e8b632a8L,"type")));
          return result;
        }
        @Override protected SNode selectChildNode(        SNode createdNode,        SModel model,        String pattern,        EditorContext editorContext){
          if (SLinkOperations.getTarget(SNodeOperations.cast(createdNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x6c6b6a1e379f9408L,"jetbrains.mps.baseLanguage.structure.MethodDeclaration")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1fdL,"returnType")) == null) {
            editorContext.selectWRTFocusPolicy(createdNode);
            return null;
          }
 else {
            SelectionUtil.selectLabelCellAnSetCaret(editorContext,SNodeOperations.cast(createdNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration")),"leftParen",-1);
          }
          return null;
        }
        public boolean hasSubstitute(){
          return true;
        }
        public boolean canSubstitute_internal(        String pattern,        boolean strictly){
          SNode curr=SNodeOperations.castConcept(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x32175ac2e6fcc181L,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"));
          if (IncompleteMemberHelper.canBeMethod(curr) && !(SPropertyOperations.getBoolean(curr,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x32175ac2e6fcc181L,0x32175ac2e6fdaf96L,"final")))) {
            if ((pattern == null || pattern.length() == 0)) {
              return !(strictly);
            }
            String name=IncompleteMemberHelper.buildMethodName(pattern);
            if (IncompleteMemberHelper.isValidCandidateMethodName(curr,name)) {
              if (JavaNameUtil.isJavaIdentifier(name.trim())) {
                return (strictly ? ((pattern.endsWith("(") || pattern.endsWith("()") || pattern.endsWith(" ") ? true : false)) : true);
              }
            }
          }
          return false;
        }
        public String getDescriptionText(        String pattern){
          return "method";
        }
        public String getMatchingText(        String pattern){
          return IncompleteMemberHelper.buildMethodName(pattern) + "()";
        }
        public String getVisibleMatchingText(        String pattern){
          return getMatchingText(pattern);
        }
      }
);
    }
  }
{
    SNode outputConcept=MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf93c84351fL,"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration").getDeclarationNode();
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode current=SNodeOperations.castConcept(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x32175ac2e6fcc181L,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"));
          String name=IncompleteMemberHelper.buildFieldName(pattern);
          SNode result=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf93c84351fL,"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration")));
          SLinkOperations.setTarget(SNodeOperations.cast(result,MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112574373bdL,"jetbrains.mps.baseLanguage.structure.ClassifierMember")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,0x112670d886aL,"visibility"),SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10af9581ff1L,"jetbrains.mps.baseLanguage.structure.PublicVisibility")),null));
          SPropertyOperations.set(result,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),name);
          SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x450368d90ce15bc3L,0x4ed4d318133c80ceL,"type"),SLinkOperations.getTarget(current,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x32175ac2e6fcc181L,0x32175ac2e8b632a8L,"type")));
          SNodeFactoryOperations.setNewChild(result,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37a7f6eL,0xf8c37f506eL,"initializer"),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506fL,"jetbrains.mps.baseLanguage.structure.Expression")));
          SPropertyOperations.set(result,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37a7f6eL,0x111f9e9f00cL,"isFinal"),"" + (true));
          return result;
        }
        @Override protected SNode selectChildNode(        SNode createdNode,        SModel model,        String pattern,        EditorContext editorContext){
          if (SLinkOperations.getTarget(SNodeOperations.cast(createdNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37a7f6eL,"jetbrains.mps.baseLanguage.structure.VariableDeclaration")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x450368d90ce15bc3L,0x4ed4d318133c80ceL,"type")) == null) {
            editorContext.selectWRTFocusPolicy(createdNode);
            return null;
          }
          if ((SLinkOperations.getTarget(SNodeOperations.cast(createdNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37a7f6eL,"jetbrains.mps.baseLanguage.structure.VariableDeclaration")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37a7f6eL,0xf8c37f506eL,"initializer")) == null)) {
            SelectionUtil.selectLabelCellAnSetCaret(editorContext,SNodeOperations.cast(createdNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37a7f6eL,"jetbrains.mps.baseLanguage.structure.VariableDeclaration")),SelectionManager.LAST_EDITABLE_CELL,-1);
          }
 else {
            SelectionUtil.selectLabelCellAnSetCaret(editorContext,SLinkOperations.getTarget(SNodeOperations.cast(createdNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37a7f6eL,"jetbrains.mps.baseLanguage.structure.VariableDeclaration")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37a7f6eL,0xf8c37f506eL,"initializer")),SelectionManager.FIRST_EDITABLE_CELL,-1);
          }
          return null;
        }
        public boolean hasSubstitute(){
          return true;
        }
        public boolean canSubstitute_internal(        String pattern,        boolean strictly){
          SNode curr=SNodeOperations.castConcept(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x32175ac2e6fcc181L,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"));
          if (IncompleteMemberHelper.canBeField(curr)) {
            if ((pattern == null || pattern.length() == 0)) {
              return !(strictly);
            }
            String name=IncompleteMemberHelper.buildFieldName(pattern);
            if (IncompleteMemberHelper.isValidCandidateFieldName(curr,name)) {
              if (JavaNameUtil.isJavaIdentifier(name.trim())) {
                return (strictly ? pattern.endsWith("=") || pattern.endsWith(";") || pattern.endsWith(" ") : true);
              }
            }
          }
          return false;
        }
        public String getDescriptionText(        String pattern){
          return "static field";
        }
        public String getMatchingText(        String pattern){
          return IncompleteMemberHelper.buildFieldName(pattern);
        }
        public String getVisibleMatchingText(        String pattern){
          return getMatchingText(pattern);
        }
      }
);
    }
  }
{
    SNode outputConcept=MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier").getDeclarationNode();
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode result=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")));
          SNode curr=SNodeOperations.castConcept(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x32175ac2e6fcc181L,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"));
          SPropertyOperations.set(result,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x451f9e9f920b7f7dL,"isStatic"),"" + (SPropertyOperations.getBoolean(curr,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x32175ac2e6fcc181L,0x32175ac2e6fdaf94L,"static"))));
          SPropertyOperations.set(result,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0xfa5cee6dfaL,"abstractClass"),"" + (SPropertyOperations.getBoolean(curr,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x32175ac2e6fcc181L,0x32175ac2e6fdaf99L,"abstract"))));
          SPropertyOperations.set(result,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x11c6af4b284L,"isFinal"),"" + (SPropertyOperations.getBoolean(curr,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x32175ac2e6fcc181L,0x32175ac2e6fdaf96L,"final"))));
          SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,0x112670d886aL,"visibility"),SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10af9581ff1L,"jetbrains.mps.baseLanguage.structure.PublicVisibility")),null));
          return result;
        }
        public boolean hasSubstitute(){
          return true;
        }
        public boolean canSubstitute_internal(        String pattern,        boolean strictly){
          return IncompleteMemberHelper.canBeClass(SNodeOperations.castConcept(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x32175ac2e6fcc181L,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"))) && IncompleteMemberHelper.canSubstitute(strictly,pattern,"class");
        }
        public String getDescriptionText(        String pattern){
          return "Class declaration";
        }
        public String getMatchingText(        String pattern){
          return "class";
        }
        public String getVisibleMatchingText(        String pattern){
          return getMatchingText(pattern);
        }
      }
);
    }
  }
{
    SNode outputConcept=MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier").getDeclarationNode();
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode result=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface")));
          SNode curr=SNodeOperations.castConcept(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x32175ac2e6fcc181L,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"));
          SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,0x112670d886aL,"visibility"),SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10af9581ff1L,"jetbrains.mps.baseLanguage.structure.PublicVisibility")),null));
          return result;
        }
        public boolean hasSubstitute(){
          return true;
        }
        public boolean canSubstitute_internal(        String pattern,        boolean strictly){
          return IncompleteMemberHelper.canBeInterface(SNodeOperations.castConcept(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x32175ac2e6fcc181L,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"))) && IncompleteMemberHelper.canSubstitute(strictly,pattern,"interface");
        }
        public String getDescriptionText(        String pattern){
          return "Interface declaration";
        }
        public String getMatchingText(        String pattern){
          return "interface";
        }
        public String getVisibleMatchingText(        String pattern){
          return getMatchingText(pattern);
        }
      }
);
    }
  }
{
    SNode outputConcept=MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier").getDeclarationNode();
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode result=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass")));
          SNode curr=SNodeOperations.castConcept(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x32175ac2e6fcc181L,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"));
          SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,0x112670d886aL,"visibility"),SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10af9581ff1L,"jetbrains.mps.baseLanguage.structure.PublicVisibility")),null));
          return result;
        }
        public boolean hasSubstitute(){
          return true;
        }
        public boolean canSubstitute_internal(        String pattern,        boolean strictly){
          return IncompleteMemberHelper.canBeEnum(SNodeOperations.castConcept(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x32175ac2e6fcc181L,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"))) && IncompleteMemberHelper.canSubstitute(strictly,pattern,"enum");
        }
        public String getDescriptionText(        String pattern){
          return "Enum declaration";
        }
        public String getMatchingText(        String pattern){
          return "enum";
        }
        public String getVisibleMatchingText(        String pattern){
          return getMatchingText(pattern);
        }
      }
);
    }
  }
{
    SNode outputConcept=MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier").getDeclarationNode();
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode result=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a69dc80cL,"jetbrains.mps.baseLanguage.structure.Annotation")));
          SNode curr=SNodeOperations.castConcept(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x32175ac2e6fcc181L,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"));
          SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,0x112670d886aL,"visibility"),SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10af9581ff1L,"jetbrains.mps.baseLanguage.structure.PublicVisibility")),null));
          return result;
        }
        public boolean hasSubstitute(){
          return true;
        }
        public boolean canSubstitute_internal(        String pattern,        boolean strictly){
          return IncompleteMemberHelper.canBeInterface(SNodeOperations.castConcept(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x32175ac2e6fcc181L,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"))) && IncompleteMemberHelper.canSubstitute(strictly,pattern,"@interface");
        }
        public String getDescriptionText(        String pattern){
          return "Annotation declaration";
        }
        public String getMatchingText(        String pattern){
          return "@interface";
        }
        public String getVisibleMatchingText(        String pattern){
          return getMatchingText(pattern);
        }
      }
);
    }
  }
  return result;
}
