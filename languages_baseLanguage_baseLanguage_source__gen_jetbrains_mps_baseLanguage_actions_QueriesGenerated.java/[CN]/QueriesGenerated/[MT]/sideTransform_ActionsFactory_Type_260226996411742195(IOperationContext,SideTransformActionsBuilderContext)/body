{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
  ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.SingleLineComment"),_context.getSourceNode()){
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      SNode statement=SNodeOperations.cast(SNodeOperations.getParent(SNodeOperations.getParent(_context.getSourceNode())),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123157l,"jetbrains.mps.baseLanguage.structure.Statement"));
      SNode result=SNodeFactoryOperations.replaceWithNewChild(statement,SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),6329021646629104954l,"jetbrains.mps.baseLanguage.structure.SingleLineComment")));
      SNode part=SNodeFactoryOperations.addNewChild(result,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),6329021646629104954l,6329021646629175155l,"commentPart"),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),6329021646629175143l,"jetbrains.mps.baseLanguage.structure.StatementCommentPart")));
      SLinkOperations.setTarget(part,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),6329021646629175143l,6329021646629175144l,"commentedStatement"),statement);
      return result;
    }
    public String getMatchingText(    String pattern){
      return "//";
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
    @Override protected boolean isEnabled(){
      SNode sourceNode=getSourceNode();
      SNode parent=SNodeOperations.getParent(sourceNode);
      SNode containingLink=SNodeOperations.getContainingLinkDeclaration(sourceNode);
      return parent == null || containingLink == null || (ModelConstraints.canBeParent(parent,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.SingleLineComment"),containingLink,null,null) && ModelConstraints.canBeAncestor(parent,null,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.SingleLineComment"),null));
    }
  }
);
  return result;
}
