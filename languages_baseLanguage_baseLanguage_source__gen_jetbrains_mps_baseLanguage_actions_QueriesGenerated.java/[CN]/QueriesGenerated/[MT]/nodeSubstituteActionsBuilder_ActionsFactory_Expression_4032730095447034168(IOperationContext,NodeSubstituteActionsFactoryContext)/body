{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf9d78b55aaL,"jetbrains.mps.baseLanguage.structure.SuperMethodCall").getDeclarationNode();
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          List<SNode> result=new ArrayList<SNode>();
          SNode classifier=SNodeOperations.getNodeAncestor(_context.getParentNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"),false,false);
          if (!((boolean)IClassifierMember__BehaviorDescriptor.isStatic_id6r77ob2USS8.invoke(classifier))) {
            for (            SNode parentClassifier : SNodeOperations.getNodeAncestors(classifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"),false)) {
              if (!(SNodeOperations.isInstanceOf(parentClassifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x1107e0cb103L,"jetbrains.mps.baseLanguage.structure.AnonymousClass")))) {
                ListSequence.fromList(result).addElement(parentClassifier);
                if ((boolean)IClassifierMember__BehaviorDescriptor.isStatic_id6r77ob2USS8.invoke(parentClassifier)) {
                  break;
                }
              }
            }
          }
          return result;
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SNode superCall=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x37f722a7ce38076aL,"jetbrains.mps.baseLanguage.structure.QualifiedSuperMethodCall")),null);
              SLinkOperations.setTarget(superCall,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x37f722a7ce38076aL,0x37f722a7ce38077dL,"classifier"),(item));
              return superCall;
            }
            public String getMatchingText(            String pattern){
              return (item) + ".super";
            }
            public String getVisibleMatchingText(            String pattern){
              return getMatchingText(pattern);
            }
            public String getDescriptionText(            String pattern){
              return "qualified 'super'";
            }
          }
);
        }
      }
    }
  }
  return result;
}
