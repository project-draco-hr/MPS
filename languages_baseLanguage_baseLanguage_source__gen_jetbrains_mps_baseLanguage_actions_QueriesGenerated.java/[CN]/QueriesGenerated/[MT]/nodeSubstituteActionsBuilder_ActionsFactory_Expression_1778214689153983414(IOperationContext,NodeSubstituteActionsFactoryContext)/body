{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode parens=SNodeFactoryOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1079359253375l,"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression"),null);
          String intent=pattern.substring(1);
          if (intent.equals("(")) {
            SNodeFactoryOperations.setNewChild(parens,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1079359253375l,1079359253376l,"expression"),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1079359253375l,"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression"));
          }
 else           if (!(intent.equals(")"))) {
            SNode constant=SLinkOperations.setTarget(parens,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1079359253375l,1079359253376l,"expression"),SNodeFactoryOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580320020l,"jetbrains.mps.baseLanguage.structure.IntegerConstant"),null));
            int value;
            try {
              value=Integer.parseInt(intent);
              SPropertyOperations.set(constant,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1068580320020l,1068580320021l,"value"),"" + (value));
            }
 catch (            NumberFormatException e) {
            }
          }
          return parens;
        }
        public boolean hasSubstitute(){
          return true;
        }
        public boolean canSubstitute_internal(        String pattern,        boolean strictly){
          return pattern.startsWith("(") && pattern.length() == 2;
        }
        public String getMatchingText(        String pattern){
          return pattern;
        }
        public String getVisibleMatchingText(        String pattern){
          return getMatchingText(pattern);
        }
      }
);
    }
  }
  return result;
}
