{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x1127b878882L,"jetbrains.mps.baseLanguage.structure.ThisConstructorInvocation").getDeclarationNode();
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          SNode thisConcept=SNodeOperations.getNodeAncestor(_context.getParentNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"),false,false);
          return ClassConcept__BehaviorDescriptor.constructors_id4_LVZ3pCvsd.invoke(thisConcept);
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SNode newNode=SNodeFactoryOperations.createNewNode(model,SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x1127b878882L,"jetbrains.mps.baseLanguage.structure.ThisConstructorInvocation")),null);
              SLinkOperations.setTarget(newNode,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration"),(item));
              if (SNodeOperations.isInstanceOf(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x1127b878882L,"jetbrains.mps.baseLanguage.structure.ThisConstructorInvocation"))) {
                for (                SNode argument : ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x1127b878882L,"jetbrains.mps.baseLanguage.structure.ThisConstructorInvocation")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301aeL,"actualArgument")))) {
                  ListSequence.fromList(SLinkOperations.getChildren(newNode,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301aeL,"actualArgument"))).addElement(argument);
                }
              }
              return newNode;
            }
            public String getMatchingText(            String pattern){
              return "this" + BaseMethodDeclaration__BehaviorDescriptor.getParametersPresentation_idhEwIAYw.invoke((item));
            }
            public String getVisibleMatchingText(            String pattern){
              return getMatchingText(pattern);
            }
            public String getDescriptionText(            String pattern){
              return MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x1127b878882L,"jetbrains.mps.baseLanguage.structure.ThisConstructorInvocation").getShortDescription();
            }
          }
);
        }
      }
    }
  }
{
    SNode outputConcept=MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf93d512e1eL,"jetbrains.mps.baseLanguage.structure.SuperConstructorInvocation").getDeclarationNode();
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          SNode thisConcept=SNodeOperations.getNodeAncestor(_context.getParentNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"),false,false);
          SNode superClass=SNodeOperations.cast(SLinkOperations.getTarget(SLinkOperations.getTarget(thisConcept,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x10f6353296dL,"superclass")),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"));
          if (superClass == null) {
            superClass=SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_8p1vjw_a0a0a0c0a0b0(),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"));
          }
          return ClassConcept__BehaviorDescriptor.constructors_id4_LVZ3pCvsd.invoke(superClass);
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SNode newNode=SNodeFactoryOperations.createNewNode(model,SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf93d512e1eL,"jetbrains.mps.baseLanguage.structure.SuperConstructorInvocation")),null);
              SLinkOperations.setTarget(newNode,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration"),(item));
              if (SNodeOperations.isInstanceOf(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf93d512e1eL,"jetbrains.mps.baseLanguage.structure.SuperConstructorInvocation"))) {
                for (                SNode argument : ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf93d512e1eL,"jetbrains.mps.baseLanguage.structure.SuperConstructorInvocation")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301aeL,"actualArgument")))) {
                  ListSequence.fromList(SLinkOperations.getChildren(newNode,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301aeL,"actualArgument"))).addElement(argument);
                }
              }
              return newNode;
            }
            public String getMatchingText(            String pattern){
              return "super" + BaseMethodDeclaration__BehaviorDescriptor.getParametersPresentation_idhEwIAYw.invoke((item));
            }
            public String getVisibleMatchingText(            String pattern){
              return getMatchingText(pattern);
            }
            public String getDescriptionText(            String pattern){
              return MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf93d512e1eL,"jetbrains.mps.baseLanguage.structure.SuperConstructorInvocation").getShortDescription();
            }
          }
);
        }
      }
    }
  }
  return result;
}
