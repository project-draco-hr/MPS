{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
  ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Expression"),_context.getSourceNode()){
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      SNode targetExpression=PrecedenceUtil.getTargetForRightTransform(_context.getSourceNode());
      SNode assertion=SNodeOperations.cast(SNodeOperations.getParent(targetExpression),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1160998861373l,"jetbrains.mps.baseLanguage.structure.AssertStatement"));
      SNodeFactoryOperations.setNewChild(assertion,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1160998861373l,1160998916832l,"message"),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068431790191l,"jetbrains.mps.baseLanguage.structure.Expression"));
      return SLinkOperations.getTarget(assertion,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1160998861373l,1160998916832l,"message"));
    }
    public String getMatchingText(    String pattern){
      return ":";
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
    @Override protected boolean isEnabled(){
      SNode sourceNode=getSourceNode();
      SNode parent=SNodeOperations.getParent(sourceNode);
      SNode containingLink=SNodeOperations.getContainingLinkDeclaration(sourceNode);
      return parent == null || containingLink == null || (ModelConstraints.canBeParent(parent,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Expression"),containingLink,null,null) && ModelConstraints.canBeAncestor(parent,null,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Expression"),null));
    }
  }
);
  return result;
}
