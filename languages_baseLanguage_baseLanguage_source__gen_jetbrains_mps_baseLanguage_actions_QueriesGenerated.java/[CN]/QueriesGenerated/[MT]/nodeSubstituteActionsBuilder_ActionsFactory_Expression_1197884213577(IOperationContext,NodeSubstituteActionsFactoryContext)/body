{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ThisExpression");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          List<SNode> result=new ArrayList<SNode>();
          SNode classifier=SNodeOperations.getNodeAncestor(_context.getParentNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,"jetbrains.mps.baseLanguage.structure.Classifier"),false,false);
          if (!(BehaviorReflection.invokeVirtual(Boolean.TYPE,classifier,"virtual_isStatic_7405920559687241224",new Object[]{}))) {
            for (            SNode parentClassifier : SNodeOperations.getNodeAncestors(classifier,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,"jetbrains.mps.baseLanguage.structure.Classifier"),false)) {
              if (!(SNodeOperations.isInstanceOf(parentClassifier,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1170345865475l,"jetbrains.mps.baseLanguage.structure.AnonymousClass")))) {
                ListSequence.fromList(result).addElement(parentClassifier);
                if (BehaviorReflection.invokeVirtual(Boolean.TYPE,parentClassifier,"virtual_isStatic_7405920559687241224",new Object[]{})) {
                  break;
                }
              }
            }
          }
          return result;
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SNode thisEx=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ThisExpression",null);
              SLinkOperations.setTarget(thisEx,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1070475354124l,1182955020723l,"classConcept"),(item));
              return thisEx;
            }
            public String getMatchingText(            String pattern){
              return (item) + ".this";
            }
            public String getVisibleMatchingText(            String pattern){
              return getMatchingText(pattern);
            }
            public String getDescriptionText(            String pattern){
              return "qualified 'this'";
            }
          }
);
        }
      }
    }
  }
  return result;
}
