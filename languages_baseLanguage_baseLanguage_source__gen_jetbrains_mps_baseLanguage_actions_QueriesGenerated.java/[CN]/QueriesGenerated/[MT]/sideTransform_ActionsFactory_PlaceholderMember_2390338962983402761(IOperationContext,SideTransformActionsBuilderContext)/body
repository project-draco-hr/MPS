{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
  ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.javadoc.structure.BaseDocComment"),_context.getSourceNode()){
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      AbstractModule module=(AbstractModule)SNodeOperations.getModel(_context.getSourceNode()).getModule();
      SModelInternal model=as_x583g4_a0a1a0a0a0a0a1a772(SNodeOperations.getModel(_context.getSourceNode()),SModelInternal.class);
      SModuleReference javadocLangReference=PersistenceFacade.getInstance().createModuleReference("f2801650-65d5-424e-bb1b-463a8781b786(jetbrains.mps.baseLanguage.javadoc)");
      if (!(model.importedLanguages().contains(javadocLangReference))) {
        module.addUsedLanguage(javadocLangReference);
        model.addLanguage(javadocLangReference);
      }
      SNode nextSibling=SNodeOperations.getNextSibling(_context.getSourceNode());
      while (nextSibling != null && SNodeOperations.isInstanceOf(nextSibling,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x1458378889e6d166L,"jetbrains.mps.baseLanguage.structure.PlaceholderMember"))) {
        SNode toBeRemoved=nextSibling;
        nextSibling=SNodeOperations.getNextSibling(nextSibling);
        SNodeOperations.deleteNode(toBeRemoved);
      }
      if (SNodeOperations.isInstanceOf(nextSibling,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf93c84351fL,"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration"))) {
        SNode fieldDeclaration=SNodeOperations.cast(nextSibling,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf93c84351fL,"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration"));
        SNodeFactoryOperations.setNewAttribute(fieldDeclaration,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment"),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf280165065d5424eL,0xbb1b463a8781b786L,0x5ed0d79d7dc44bf2L,"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment")));
        SNode line=SNodeFactoryOperations.addNewChild(AttributeOperations.getAttribute(fieldDeclaration,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment")),MetaAdapterFactory.getContainmentLink(0xf280165065d5424eL,0xbb1b463a8781b786L,0x4a3c146b7fae70d3L,0x757ba20a4c87f96eL,"body"),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf280165065d5424eL,0xbb1b463a8781b786L,0x757ba20a4c87f96cL,"jetbrains.mps.baseLanguage.javadoc.structure.CommentLine")));
        SNodeFactoryOperations.addNewChild(line,MetaAdapterFactory.getContainmentLink(0xf280165065d5424eL,0xbb1b463a8781b786L,0x757ba20a4c87f96cL,0x7c7f5b2f3199028dL,"part"),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf280165065d5424eL,0xbb1b463a8781b786L,0x7c7f5b2f31990287L,"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart")));
        return AttributeOperations.getAttribute(fieldDeclaration,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment"));
      }
 else       if (SNodeOperations.isInstanceOf(nextSibling,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca68L,"jetbrains.mps.baseLanguage.structure.FieldDeclaration"))) {
        SNode fieldDeclaration=SNodeOperations.cast(nextSibling,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca68L,"jetbrains.mps.baseLanguage.structure.FieldDeclaration"));
        SNodeFactoryOperations.setNewAttribute(fieldDeclaration,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment"),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf280165065d5424eL,0xbb1b463a8781b786L,0x5ed0d79d7dc44bf2L,"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment")));
        SNode line=SNodeFactoryOperations.addNewChild(AttributeOperations.getAttribute(fieldDeclaration,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment")),MetaAdapterFactory.getContainmentLink(0xf280165065d5424eL,0xbb1b463a8781b786L,0x4a3c146b7fae70d3L,0x757ba20a4c87f96eL,"body"),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf280165065d5424eL,0xbb1b463a8781b786L,0x757ba20a4c87f96cL,"jetbrains.mps.baseLanguage.javadoc.structure.CommentLine")));
        SNodeFactoryOperations.addNewChild(line,MetaAdapterFactory.getContainmentLink(0xf280165065d5424eL,0xbb1b463a8781b786L,0x757ba20a4c87f96cL,0x7c7f5b2f3199028dL,"part"),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf280165065d5424eL,0xbb1b463a8781b786L,0x7c7f5b2f31990287L,"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart")));
        return AttributeOperations.getAttribute(fieldDeclaration,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment"));
      }
 else {
        SNode methodDeclaration=SNodeOperations.cast(nextSibling,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"));
        SNodeFactoryOperations.setNewAttribute(methodDeclaration,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment"),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf280165065d5424eL,0xbb1b463a8781b786L,0x4a3c146b7faeeb34L,"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment")));
        SNode line=SNodeFactoryOperations.addNewChild(AttributeOperations.getAttribute(methodDeclaration,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment")),MetaAdapterFactory.getContainmentLink(0xf280165065d5424eL,0xbb1b463a8781b786L,0x4a3c146b7fae70d3L,0x757ba20a4c87f96eL,"body"),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf280165065d5424eL,0xbb1b463a8781b786L,0x757ba20a4c87f96cL,"jetbrains.mps.baseLanguage.javadoc.structure.CommentLine")));
        SNodeFactoryOperations.addNewChild(line,MetaAdapterFactory.getContainmentLink(0xf280165065d5424eL,0xbb1b463a8781b786L,0x757ba20a4c87f96cL,0x7c7f5b2f3199028dL,"part"),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf280165065d5424eL,0xbb1b463a8781b786L,0x7c7f5b2f31990287L,"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart")));
        return AttributeOperations.getAttribute(methodDeclaration,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment"));
      }
    }
    public String getMatchingText(    String pattern){
      return "/**";
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
    public String getDescriptionText(    String pattern){
      return "Add Documentation Comment";
    }
    @Override protected boolean isEnabled(){
      SNode sourceNode=getSourceNode();
      SNode parent=SNodeOperations.getParent(sourceNode);
      SNode containingLink=SNodeOperations.getContainingLinkDeclaration(sourceNode);
      return parent == null || containingLink == null || (ModelConstraints.canBeParent(parent,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.javadoc.structure.BaseDocComment"),containingLink,null,null) && ModelConstraints.canBeAncestor(parent,null,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.javadoc.structure.BaseDocComment"),null));
    }
  }
);
  return result;
}
