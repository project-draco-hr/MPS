{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    final String[] lastPattern=new String[1];
    final SNode targetNode=new Computable<SNode>(){
      public SNode compute(){
        return SNodeOperations.getParent(_context.getSourceNode());
      }
    }
.compute();
    List<SubstituteAction> list=ModelActions.createChildNodeSubstituteActions(targetNode,null,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Type"),new AbstractChildNodeSetter(){
      public SNode doExecute(      SNode parentNode,      SNode oldChild,      SNode newChild,      @Nullable EditorContext editorContext){
        return substitute(newChild,targetNode,lastPattern[0],editorContext);
      }
      private SNode substitute(      SNode result,      SNode targetNode,      String pattern,      @Nullable EditorContext editorContext){
        SNode statement=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068581242864l,"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement")),null);
        SNodeOperations.replaceWithAnother(targetNode,statement);
        SNode localVariableDeclaration=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068581242863l,"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration")),null);
        SLinkOperations.setTarget(statement,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068581242864l,1068581242865l,"localVariableDeclaration"),localVariableDeclaration);
        SLinkOperations.setTarget(localVariableDeclaration,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type"),result);
        SLinkOperations.setTarget(localVariableDeclaration,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068431474542l,1068431790190l,"initializer"),_context.getSourceNode());
        return result;
      }
    }
,operationContext);
    for (    final SubstituteAction action : list) {
      ListSequence.fromList(result).addElement(new NodeSubstituteActionWrapper(action){
        @Override public SNode substitute(        @Nullable EditorContext context,        String pattern){
          lastPattern[0]=pattern;
          return super.substitute(context,pattern);
        }
      }
);
    }
  }
  return result;
}
