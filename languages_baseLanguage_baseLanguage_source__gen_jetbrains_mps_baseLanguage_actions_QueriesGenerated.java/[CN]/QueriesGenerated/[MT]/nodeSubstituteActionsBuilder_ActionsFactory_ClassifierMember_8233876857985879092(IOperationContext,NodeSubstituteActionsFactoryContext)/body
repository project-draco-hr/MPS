{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierMember");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode current=SNodeOperations.cast(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"));
          String name=IncompleteMemberHelper.buildMethodName(pattern);
          SNode result;
          if (SPropertyOperations.getBoolean(current,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,3609453419506282388l,"static"))) {
            result=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1081236700938l,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration")),null);
          }
 else {
            SNode decl=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123165l,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration")),null);
            SPropertyOperations.set(decl,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1068580123165l,1178608670077l,"isAbstract"),"" + (SPropertyOperations.getBoolean(current,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,3609453419506282393l,"abstract"))));
            result=decl;
          }
          SPropertyOperations.set(result,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"),name);
          SLinkOperations.setTarget(SNodeOperations.cast(result,MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),1178285077437l,"jetbrains.mps.baseLanguage.structure.ClassifierMember")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1178549954367l,1178549979242l,"visibility"),SLinkOperations.getTarget(current,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1178549954367l,1178549979242l,"visibility")));
          SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123133l,"returnType"),SLinkOperations.getTarget(current,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,3609453419535151784l,"type")));
          SPropertyOperations.set(result,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,4276006055363816570l,"isSynchronized"),"" + (SPropertyOperations.getBoolean(current,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,3609453419506283925l,"synchronized"))));
          SPropertyOperations.set(result,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1181808852946l,"isFinal"),"" + (SPropertyOperations.getBoolean(current,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,3609453419506282390l,"final"))));
          SPropertyOperations.set(result,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),7812454656619025416l,8355037393041754995l,"isNative"),"" + (SPropertyOperations.getBoolean(current,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,8355037393080469281l,"native"))));
          return SNodeOperations.cast(result,MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),1178285077437l,"jetbrains.mps.baseLanguage.structure.ClassifierMember"));
        }
        @Override protected SNode selectChildNode(        SNode createdNode,        SModel model,        String pattern,        EditorContext editorContext){
          if (SLinkOperations.getTarget(SNodeOperations.cast(createdNode,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),7812454656619025416l,"jetbrains.mps.baseLanguage.structure.MethodDeclaration")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123133l,"returnType")) == null) {
            editorContext.selectWRTFocusPolicy(createdNode);
            return null;
          }
          if (SConceptOperations.isExactly(SNodeOperations.asSConcept(SNodeOperations.getConceptDeclaration(createdNode)),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123165l,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration"))) {
            SelectionUtil.selectLabelCellAnSetCaret(editorContext,SNodeOperations.cast(createdNode,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123165l,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration")),"leftParen",-1);
          }
 else           if (SConceptOperations.isExactly(SNodeOperations.asSConcept(SNodeOperations.getConceptDeclaration(createdNode)),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1081236700938l,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration"))) {
            SelectionUtil.selectLabelCellAnSetCaret(editorContext,SNodeOperations.cast(createdNode,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1081236700938l,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration")),"leftParen",-1);
          }
          return null;
        }
        public boolean hasSubstitute(){
          return true;
        }
        public boolean canSubstitute_internal(        String pattern,        boolean strictly){
          SNode curr=SNodeOperations.cast(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"));
          if (IncompleteMemberHelper.canBeMethod(curr)) {
            if ((pattern == null || pattern.length() == 0)) {
              return !(strictly);
            }
            String name=IncompleteMemberHelper.buildMethodName(pattern);
            if (IncompleteMemberHelper.isValidCandidateMethodName(curr,name)) {
              if (JavaNameUtil.isJavaIdentifier(name.trim())) {
                return (strictly ? ((pattern.endsWith("()") || pattern.endsWith(" ") ? true : false)) : true);
              }
            }
          }
          return false;
        }
        public String getDescriptionText(        String pattern){
          return (SPropertyOperations.getBoolean(SNodeOperations.cast(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration")),MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,3609453419506282388l,"static")) ? "static method" : "method");
        }
        public String getMatchingText(        String pattern){
          return IncompleteMemberHelper.buildMethodName(pattern) + "()";
        }
        public String getVisibleMatchingText(        String pattern){
          return getMatchingText(pattern);
        }
      }
);
    }
  }
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierMember");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode current=SNodeOperations.cast(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"));
          String name=IncompleteMemberHelper.buildFieldName(pattern);
          SNode result;
          if (SPropertyOperations.getBoolean(current,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,3609453419506282388l,"static"))) {
            SNode decl=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1070462154015l,"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration")));
            SPropertyOperations.set(decl,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1070462154015l,6468716278899126575l,"isVolatile"),"" + (SPropertyOperations.getBoolean(current,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,3609453419506286246l,"volatile"))));
            SPropertyOperations.set(decl,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1070462154015l,6468716278899125786l,"isTransient"),"" + (SPropertyOperations.getBoolean(current,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,6348240317717564887l,"transient"))));
            result=decl;
          }
 else {
            SNode decl=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468200l,"jetbrains.mps.baseLanguage.structure.FieldDeclaration")));
            SPropertyOperations.set(decl,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1068390468200l,1240249534625l,"isVolatile"),"" + (SPropertyOperations.getBoolean(current,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,3609453419506286246l,"volatile"))));
            SPropertyOperations.set(decl,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1068390468200l,8606350594693632173l,"isTransient"),"" + (SPropertyOperations.getBoolean(current,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,6348240317717564887l,"transient"))));
            result=decl;
          }
          SLinkOperations.setTarget(SNodeOperations.cast(result,MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),1178285077437l,"jetbrains.mps.baseLanguage.structure.ClassifierMember")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1178549954367l,1178549979242l,"visibility"),SLinkOperations.getTarget(current,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1178549954367l,1178549979242l,"visibility")));
          SPropertyOperations.set(result,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"),name);
          SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type"),SLinkOperations.getTarget(current,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,3609453419535151784l,"type")));
          if (pattern.endsWith("=")) {
            SNodeFactoryOperations.setNewChild(result,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068431474542l,1068431790190l,"initializer"),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068431790191l,"jetbrains.mps.baseLanguage.structure.Expression")));
          }
          SPropertyOperations.set(result,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1068431474542l,1176718929932l,"isFinal"),"" + (SPropertyOperations.getBoolean(current,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,3609453419506282390l,"final"))));
          return SNodeOperations.cast(result,MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),1178285077437l,"jetbrains.mps.baseLanguage.structure.ClassifierMember"));
        }
        @Override protected SNode selectChildNode(        SNode createdNode,        SModel model,        String pattern,        EditorContext editorContext){
          if (SLinkOperations.getTarget(SNodeOperations.cast(createdNode,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068431474542l,"jetbrains.mps.baseLanguage.structure.VariableDeclaration")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type")) == null) {
            editorContext.selectWRTFocusPolicy(createdNode);
            return null;
          }
          if ((SLinkOperations.getTarget(SNodeOperations.cast(createdNode,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068431474542l,"jetbrains.mps.baseLanguage.structure.VariableDeclaration")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068431474542l,1068431790190l,"initializer")) == null)) {
            SelectionUtil.selectLabelCellAnSetCaret(editorContext,SNodeOperations.cast(createdNode,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068431474542l,"jetbrains.mps.baseLanguage.structure.VariableDeclaration")),SelectionManager.LAST_EDITABLE_CELL,-1);
          }
 else {
            SelectionUtil.selectLabelCellAnSetCaret(editorContext,SLinkOperations.getTarget(SNodeOperations.cast(createdNode,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068431474542l,"jetbrains.mps.baseLanguage.structure.VariableDeclaration")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068431474542l,1068431790190l,"initializer")),SelectionManager.FIRST_EDITABLE_CELL,-1);
          }
          return null;
        }
        public boolean hasSubstitute(){
          return true;
        }
        public boolean canSubstitute_internal(        String pattern,        boolean strictly){
          SNode curr=SNodeOperations.cast(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"));
          if (IncompleteMemberHelper.canBeField(curr)) {
            if ((pattern == null || pattern.length() == 0)) {
              return !(strictly);
            }
            String name=IncompleteMemberHelper.buildFieldName(pattern);
            if (IncompleteMemberHelper.isValidCandidateFieldName(curr,name)) {
              if (JavaNameUtil.isJavaIdentifier(name.trim())) {
                return (strictly ? pattern.endsWith("=") || pattern.endsWith(";") || pattern.endsWith(" ") : true);
              }
            }
          }
          return false;
        }
        public String getDescriptionText(        String pattern){
          return (SPropertyOperations.getBoolean(SNodeOperations.cast(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration")),MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,3609453419506282388l,"static")) ? "static field" : "field");
        }
        public String getMatchingText(        String pattern){
          return IncompleteMemberHelper.buildFieldName(pattern);
        }
        public String getVisibleMatchingText(        String pattern){
          return getMatchingText(pattern);
        }
      }
);
    }
  }
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierMember");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode result=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept")));
          SNode curr=SNodeOperations.cast(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"));
          SPropertyOperations.set(result,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,4980874121082273661l,"isStatic"),"" + (SPropertyOperations.getBoolean(curr,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,3609453419506282388l,"static"))));
          SPropertyOperations.set(result,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,1075300953594l,"abstractClass"),"" + (SPropertyOperations.getBoolean(curr,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,3609453419506282393l,"abstract"))));
          SPropertyOperations.set(result,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,1221565133444l,"isFinal"),"" + (SPropertyOperations.getBoolean(curr,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,3609453419506282390l,"final"))));
          SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1178549954367l,1178549979242l,"visibility"),SLinkOperations.getTarget(curr,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1178549954367l,1178549979242l,"visibility")));
          return result;
        }
        public boolean hasSubstitute(){
          return true;
        }
        public boolean canSubstitute_internal(        String pattern,        boolean strictly){
          return IncompleteMemberHelper.canBeClass(SNodeOperations.cast(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"))) && IncompleteMemberHelper.canSubstitute(strictly,pattern,"class");
        }
        public String getDescriptionText(        String pattern){
          return "Class declaration";
        }
        public String getMatchingText(        String pattern){
          return "class";
        }
        public String getVisibleMatchingText(        String pattern){
          return getMatchingText(pattern);
        }
      }
);
    }
  }
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierMember");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode result=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107796713796l,"jetbrains.mps.baseLanguage.structure.Interface")));
          SNode curr=SNodeOperations.cast(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"));
          SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1178549954367l,1178549979242l,"visibility"),SLinkOperations.getTarget(curr,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1178549954367l,1178549979242l,"visibility")));
          SPropertyOperations.set(result,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,521412098689998745l,"nonStatic"),"" + (true));
          return result;
        }
        public boolean hasSubstitute(){
          return true;
        }
        public boolean canSubstitute_internal(        String pattern,        boolean strictly){
          return IncompleteMemberHelper.canBeInterface(SNodeOperations.cast(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"))) && IncompleteMemberHelper.canSubstitute(strictly,pattern,"interface");
        }
        public String getDescriptionText(        String pattern){
          return "Interface declaration";
        }
        public String getMatchingText(        String pattern){
          return "interface";
        }
        public String getVisibleMatchingText(        String pattern){
          return getMatchingText(pattern);
        }
      }
);
    }
  }
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierMember");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode result=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1083245097125l,"jetbrains.mps.baseLanguage.structure.EnumClass")));
          SNode curr=SNodeOperations.cast(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"));
          SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1178549954367l,1178549979242l,"visibility"),SLinkOperations.getTarget(curr,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1178549954367l,1178549979242l,"visibility")));
          return result;
        }
        public boolean hasSubstitute(){
          return true;
        }
        public boolean canSubstitute_internal(        String pattern,        boolean strictly){
          return IncompleteMemberHelper.canBeEnum(SNodeOperations.cast(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"))) && IncompleteMemberHelper.canSubstitute(strictly,pattern,"enum");
        }
        public String getDescriptionText(        String pattern){
          return "Enum declaration";
        }
        public String getMatchingText(        String pattern){
          return "enum";
        }
        public String getVisibleMatchingText(        String pattern){
          return getMatchingText(pattern);
        }
      }
);
    }
  }
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierMember");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode result=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1188206331916l,"jetbrains.mps.baseLanguage.structure.Annotation")));
          SNode curr=SNodeOperations.cast(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"));
          SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1178549954367l,1178549979242l,"visibility"),SLinkOperations.getTarget(curr,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1178549954367l,1178549979242l,"visibility")));
          return result;
        }
        public boolean hasSubstitute(){
          return true;
        }
        public boolean canSubstitute_internal(        String pattern,        boolean strictly){
          return IncompleteMemberHelper.canBeInterface(SNodeOperations.cast(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),3609453419506221441l,"jetbrains.mps.baseLanguage.structure.IncompleteMemberDeclaration"))) && IncompleteMemberHelper.canSubstitute(strictly,pattern,"@interface");
        }
        public String getDescriptionText(        String pattern){
          return "Annotation declaration";
        }
        public String getMatchingText(        String pattern){
          return "@interface";
        }
        public String getVisibleMatchingText(        String pattern){
          return getMatchingText(pattern);
        }
      }
);
    }
  }
  return result;
}
