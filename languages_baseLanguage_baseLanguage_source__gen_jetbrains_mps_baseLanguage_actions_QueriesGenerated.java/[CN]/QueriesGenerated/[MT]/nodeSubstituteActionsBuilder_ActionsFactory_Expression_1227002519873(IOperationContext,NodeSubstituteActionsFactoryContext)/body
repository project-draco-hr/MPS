{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.GenericNewExpression");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          SNode sampleNode=_context.getCurrentTargetNode();
          if (SNodeOperations.isInstanceOf(sampleNode,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068431790191l,"jetbrains.mps.baseLanguage.structure.Expression"))) {
            SNode originalExpression=ExpectedType_FactoryUtil.getOriginalExpression(_context.getParentNode(),SNodeOperations.cast(sampleNode,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068431790191l,"jetbrains.mps.baseLanguage.structure.Expression")));
            if ((originalExpression != null)) {
              SNode expectedType=ExpectedType_FactoryUtil.createExpectedType(SNodeOperations.cast(originalExpression,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068431790191l,"jetbrains.mps.baseLanguage.structure.Expression")));
              if ((expectedType != null)) {
                return BehaviorReflection.invokeVirtual((Class<List<SNode>>)((Class)Object.class),expectedType,"virtual_getAbstractCreators_7602110602933317830",new Object[]{_context.getModel()});
              }
            }
          }
          return null;
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SNode gne=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1145552977093l,"jetbrains.mps.baseLanguage.structure.GenericNewExpression")),null);
              SLinkOperations.setTarget(gne,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1145552977093l,1145553007750l,"creator"),(item));
              return gne;
            }
            public String getMatchingText(            String pattern){
              return "new " + BehaviorReflection.invokeVirtual(String.class,(item),"virtual_getPresentation_1213877396640",new Object[]{});
            }
            public String getVisibleMatchingText(            String pattern){
              return getMatchingText(pattern);
            }
            public String getDescriptionText(            String pattern){
              return "";
            }
          }
);
        }
      }
    }
  }
  return result;
}
