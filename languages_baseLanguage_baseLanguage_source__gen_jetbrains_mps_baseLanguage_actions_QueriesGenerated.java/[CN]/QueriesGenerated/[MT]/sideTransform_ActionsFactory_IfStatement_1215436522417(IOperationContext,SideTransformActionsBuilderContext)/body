{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    Iterable<String> parameterObjects=new Computable<Iterable<String>>(){
      public Iterable<String> compute(){
        return ListSequence.fromListAndArray(new ArrayList<String>(),"else if","elseif");
      }
    }
.compute();
    if (parameterObjects != null) {
      for (      final String item : parameterObjects) {
        ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.IfStatement"),item,_context.getSourceNode()){
          public SNode doSubstitute(          @Nullable final EditorContext editorContext,          String pattern){
            SNode elseIf=SNodeFactoryOperations.addNewChild(_context.getSourceNode(),"elsifClauses","jetbrains.mps.baseLanguage.structure.ElsifClause");
            return elseIf;
          }
          public String getMatchingText(          String pattern){
            return (item);
          }
          public String getVisibleMatchingText(          String pattern){
            return getMatchingText(pattern);
          }
        }
);
      }
    }
  }
  return result;
}
