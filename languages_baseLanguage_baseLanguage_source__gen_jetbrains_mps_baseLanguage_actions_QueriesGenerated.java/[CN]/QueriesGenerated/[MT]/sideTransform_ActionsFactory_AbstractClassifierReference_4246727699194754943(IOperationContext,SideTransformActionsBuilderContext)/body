{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
  ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement"),_context.getSourceNode()){
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      SNode classifierType=_quotation_createNode_lyc2g5_a0a0a0b0(SLinkOperations.getTarget(_context.getSourceNode(),"classifier",false));
      SNodeOperations.replaceWithAnother(SNodeOperations.getParent(_context.getSourceNode()),_quotation_createNode_lyc2g5_a0a1a0a1a(classifierType));
      return ListSequence.fromList(SLinkOperations.getTargets(classifierType,"parameter",true)).first();
    }
    public String getMatchingText(    String pattern){
      return "<";
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
    public String getDescriptionText(    String pattern){
      return "add type variable";
    }
  }
);
  ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement"),_context.getSourceNode()){
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      SNode statement=SNodeOperations.replaceWithAnother(SNodeOperations.getParent(_context.getSourceNode()),_quotation_createNode_lyc2g5_a0a0a0a1b0(SLinkOperations.getTarget(_context.getSourceNode(),"classifier",false)));
      return SLinkOperations.getTarget(statement,"localVariableDeclaration",true);
    }
    public String getMatchingText(    String pattern){
      return "[";
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
    public String getDescriptionText(    String pattern){
      return "cpnvert to array";
    }
  }
);
  return result;
}
