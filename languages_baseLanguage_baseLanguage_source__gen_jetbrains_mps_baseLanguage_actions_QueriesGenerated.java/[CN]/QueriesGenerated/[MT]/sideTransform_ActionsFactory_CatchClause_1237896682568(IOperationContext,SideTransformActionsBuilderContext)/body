{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
  ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10f383e6771L,"jetbrains.mps.baseLanguage.structure.TryCatchStatement").getDeclarationNode(),_context.getSourceNode()){
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      SNode node=SNodeOperations.cast(SNodeOperations.getParent(_context.getSourceNode()),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10f383e6771L,"jetbrains.mps.baseLanguage.structure.TryCatchStatement"));
      SNode tryStatement=SNodeFactoryOperations.createNewNode(_context.getModel(),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10cacebf556L,"jetbrains.mps.baseLanguage.structure.TryStatement")),null);
      SNode body=SLinkOperations.getTarget(node,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10f383e6771L,0x10f383e83d4L,"body"));
      SLinkOperations.setTarget(tryStatement,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10cacebf556L,0x10cacec83aeL,"body"),body);
      for (      SNode catchClause : SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10f383e6771L,0x10f39a8ba1fL,"catchClause"))) {
        ListSequence.fromList(SLinkOperations.getChildren(tryStatement,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10cacebf556L,0x10f39abd97cL,"catchClause"))).addElement(catchClause);
      }
      SNodeFactoryOperations.setNewChild(tryStatement,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10cacebf556L,0x10cacecb713L,"finallyBody"),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b200L,"jetbrains.mps.baseLanguage.structure.StatementList")));
      SNodeOperations.replaceWithAnother(node,tryStatement);
      return tryStatement;
    }
    public String getMatchingText(    String pattern){
      return "finally";
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
    @Override protected boolean isEnabled(){
      SNode sourceNode=getSourceNode();
      SNode parent=SNodeOperations.getParent(sourceNode);
      SNode containingLink=SNodeOperations.getContainingLinkDeclaration(sourceNode);
      return parent == null || containingLink == null || (ModelConstraints.canBeParent(parent,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10f383e6771L,"jetbrains.mps.baseLanguage.structure.TryCatchStatement").getDeclarationNode(),containingLink,null,null) && ModelConstraints.canBeAncestor(parent,null,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10f383e6771L,"jetbrains.mps.baseLanguage.structure.TryCatchStatement").getDeclarationNode(),null));
    }
  }
);
  return result;
}
