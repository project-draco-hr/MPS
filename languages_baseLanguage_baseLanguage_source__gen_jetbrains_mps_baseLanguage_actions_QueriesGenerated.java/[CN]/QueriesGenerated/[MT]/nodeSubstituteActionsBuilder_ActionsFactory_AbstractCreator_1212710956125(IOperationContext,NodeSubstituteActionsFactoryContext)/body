{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.AnonymousClassCreator");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          Scope scope=ClassifierScopes.getVisibleClassifiersScope(_context.getParentNode(),false);
          Iterable<SNode> list=SNodeOperations.ofConcept(scope.getAvailableElements(null),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,"jetbrains.mps.baseLanguage.structure.Classifier"));
          return Sequence.fromIterable(list).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107796713796l,"jetbrains.mps.baseLanguage.structure.Interface")) || (SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept")) && SPropertyOperations.getBoolean(SNodeOperations.cast(it,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept")),MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,1075300953594l,"abstractClass")));
            }
          }
).toListSequence();
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              final SNode creator=SNodeFactoryOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1182160077978l,"jetbrains.mps.baseLanguage.structure.AnonymousClassCreator"),null);
              SLinkOperations.setTarget(creator,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1182160077978l,1182160096073l,"cls"),SNodeFactoryOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1170345865475l,"jetbrains.mps.baseLanguage.structure.AnonymousClass"),null));
              SLinkOperations.setTarget(SLinkOperations.getTarget(creator,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1182160077978l,1182160096073l,"cls")),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1170345865475l,1170346070688l,"classifier"),(item));
              List<SNode> methodsToImplement=Sequence.fromIterable(Classifier_Behavior.call_methods_5292274854859311639((item))).toListSequence();
              if (SNodeOperations.isInstanceOf((item),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept"))) {
                methodsToImplement=ListSequence.fromList(methodsToImplement).where(new IWhereFilter<SNode>(){
                  public boolean accept(                  SNode it){
                    return SPropertyOperations.getBoolean(it,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1068580123165l,1178608670077l,"isAbstract"));
                  }
                }
).toListSequence();
                for (                SNode baseMethodDeclaration : BehaviorReflection.invokeVirtual((Class<List<SNode>>)((Class)Object.class),SNodeOperations.cast((item),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept")),"virtual_getMethodsToImplement_5418393554803775106",new Object[]{})) {
                  ListSequence.fromList(methodsToImplement).addElement(SNodeOperations.cast(baseMethodDeclaration,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123165l,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration")));
                }
              }
 else               if (SNodeOperations.isInstanceOf((item),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107796713796l,"jetbrains.mps.baseLanguage.structure.Interface"))) {
                methodsToImplement=ListSequence.fromList(methodsToImplement).where(new IWhereFilter<SNode>(){
                  public boolean accept(                  SNode it){
                    return !(SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),4898614932449915862l,"jetbrains.mps.baseLanguage.structure.PlaceholderMethodDeclaration")));
                  }
                }
).toListSequence();
              }
              for (              SNode method : ListSequence.fromList(methodsToImplement)) {
                SNode method_copy=SNodeOperations.copyNode(method);
                SPropertyOperations.set(method_copy,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1068580123165l,1178608670077l,"isAbstract"),"" + (false));
                SNodeFactoryOperations.setNewChild(method_copy,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123135l,"body"),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123136l,"jetbrains.mps.baseLanguage.structure.StatementList"));
                ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(creator,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1182160077978l,1182160096073l,"cls")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,5375687026011219971l,"member"))).addElement(method_copy);
              }
              SNode expectedType=ExpectedType_FactoryUtil.createExpectedType(SNodeOperations.getNodeAncestor(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068431790191l,"jetbrains.mps.baseLanguage.structure.Expression"),false,false));
              final List<SNode> expectedTypeParams=ListSequence.fromList(new ArrayList<SNode>());
              if ((expectedType != null) && SNodeOperations.isInstanceOf(expectedType,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType")) && ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(expectedType,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1109201940907l,"parameter"))).isNotEmpty()) {
                ListSequence.fromList(expectedTypeParams).addSequence(ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(expectedType,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1109201940907l,"parameter"))));
              }
              ListSequence.fromList(SLinkOperations.getChildren((item),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1109279851642l,1109279881614l,"typeVariableDeclaration"))).visitAll(new IVisitor<SNode>(){
                public void visit(                final SNode originalVar){
                  SNode newTypeParam=null;
                  if (ListSequence.fromList(expectedTypeParams).isNotEmpty()) {
                    newTypeParam=SNodeOperations.copyNode(ListSequence.fromList(expectedTypeParams).removeElementAt(0));
                    if (SNodeOperations.isInstanceOf(newTypeParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1171903607971l,"jetbrains.mps.baseLanguage.structure.WildCardType"))) {
                      newTypeParam=null;
                    }
 else                     if (SNodeOperations.isInstanceOf(newTypeParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1171903862077l,"jetbrains.mps.baseLanguage.structure.LowerBoundType"))) {
                      newTypeParam=SLinkOperations.getTarget(SNodeOperations.cast(newTypeParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1171903862077l,"jetbrains.mps.baseLanguage.structure.LowerBoundType")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1171903862077l,1171903869531l,"bound"));
                    }
 else                     if (SNodeOperations.isInstanceOf(newTypeParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1171903916106l,"jetbrains.mps.baseLanguage.structure.UpperBoundType"))) {
                      newTypeParam=SLinkOperations.getTarget(SNodeOperations.cast(newTypeParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1171903916106l,"jetbrains.mps.baseLanguage.structure.UpperBoundType")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1171903916106l,1171903916107l,"bound"));
                    }
                  }
                  if ((newTypeParam != null)) {
                    ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(creator,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1182160077978l,1182160096073l,"cls")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1170345865475l,1201186121363l,"typeParameter"))).addElement(newTypeParam);
                  }
 else {
                    newTypeParam=SNodeFactoryOperations.addNewChild(SLinkOperations.getTarget(creator,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1182160077978l,1182160096073l,"cls")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1170345865475l,1201186121363l,"typeParameter"),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType"));
                    SLinkOperations.setTarget(SNodeOperations.cast(newTypeParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType")),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1107535924139l,"classifier"),SNodeOperations.getNode("6354ebe7-c22a-4a0f-ac54-50b52ab9b065/f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)","~Object"));
                  }
                  Iterable<SNode> typeVarRefs=ListSequence.fromList(SNodeOperations.getNodeDescendants(SLinkOperations.getTarget(creator,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1182160077978l,1182160096073l,"cls")),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1109283449304l,"jetbrains.mps.baseLanguage.structure.TypeVariableReference"),false,new SConcept[]{})).where(new IWhereFilter<SNode>(){
                    public boolean accept(                    SNode it){
                      return eq_x583g4_a0a0a0a0a0a4a0a0a0a01a0a0a0a0a0a1a2a0a1a45(SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1109283449304l,1109283546497l,"typeVariableDeclaration")),originalVar);
                    }
                  }
);
                  for (                  SNode typeVar : Sequence.fromIterable(typeVarRefs)) {
                    SNodeOperations.replaceWithAnother(typeVar,SNodeOperations.copyNode(newTypeParam));
                    SLinkOperations.setTarget(typeVar,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1109283449304l,1109283546497l,"typeVariableDeclaration"),newTypeParam);
                  }
                }
              }
);
              return creator;
            }
            public String getMatchingText(            String pattern){
              return Classifier_Behavior.call_getNestedNameInContext_8540045600162183880((item),_context.getParentNode()) + " {..}";
            }
            public String getVisibleMatchingText(            String pattern){
              return getMatchingText(pattern);
            }
          }
);
        }
      }
    }
  }
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ArrayCreator");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          Scope scope=ClassifierScopes.getVisibleClassifiersScope(_context.getParentNode(),false);
          Iterable<SNode> list=SNodeOperations.ofConcept(scope.getAvailableElements(null),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,"jetbrains.mps.baseLanguage.structure.Classifier"));
          List<SNode> types=new ArrayList<SNode>();
          for (          SNode classifier : Sequence.fromIterable(list)) {
            SNode type=SNodeFactoryOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType"),null);
            SLinkOperations.setTarget(type,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1107535924139l,"classifier"),classifier);
            ListSequence.fromList(types).addElement(type);
          }
          for (          SNode typeConcept : ListSequence.fromList(SConceptOperations.getAllSubConcepts(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Type"),_context.getModel()))) {
            if (!(SPropertyOperations.getBoolean(typeConcept,MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1169125787135l,4628067390765956802l,"abstract")))) {
              ListSequence.fromList(types).addElement(SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(typeConcept),null));
            }
          }
          return types;
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SNode creator=SNodeFactoryOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1184950988562l,"jetbrains.mps.baseLanguage.structure.ArrayCreator"),null);
              SLinkOperations.setTarget(creator,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1184950988562l,1184951007469l,"componentType"),(item));
              return creator;
            }
            public String getMatchingText(            String pattern){
              if (SNodeOperations.isInstanceOf((item),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType"))) {
                return Classifier_Behavior.call_getNestedNameInContext_8540045600162183880(SLinkOperations.getTarget(SNodeOperations.cast((item),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType")),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1107535924139l,"classifier")),_context.getParentNode()) + "[]";
              }
 else {
                return (item) + "[]";
              }
            }
            public String getVisibleMatchingText(            String pattern){
              return getMatchingText(pattern);
            }
            public String getDescriptionText(            String pattern){
              return "array of " + (item);
            }
          }
);
        }
      }
    }
  }
  return result;
}
