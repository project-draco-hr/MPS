{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
  ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x120a472f0e8L,"jetbrains.mps.baseLanguage.structure.PrefixDecrementExpression").getDeclarationNode(),_context.getSourceNode()){
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      SNode result=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x120a472f0e8L,"jetbrains.mps.baseLanguage.structure.PrefixDecrementExpression")),null);
      SNode targetExpression=PrecedenceUtil.getTargetForLeftTransform(_context.getSourceNode(),result);
      SNodeOperations.replaceWithAnother(targetExpression,result);
      SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x120a4c1f269L,0x120a4c433a6L,"expression"),targetExpression);
      SelectionUtil.selectLabelCellAnSetCaret(editorContext,result,SelectionManager.FIRST_EDITABLE_CELL,0);
      return null;
    }
    public String getMatchingText(    String pattern){
      return "--";
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
    public String getDescriptionText(    String pattern){
      return "prefix decrement";
    }
    @Override protected boolean isEnabled(){
      SNode sourceNode=getSourceNode();
      SNode parent=SNodeOperations.getParent(sourceNode);
      SNode containingLink=SNodeOperations.getContainingLinkDeclaration(sourceNode);
      return parent == null || containingLink == null || (ModelConstraints.canBeParent(parent,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x120a472f0e8L,"jetbrains.mps.baseLanguage.structure.PrefixDecrementExpression").getDeclarationNode(),containingLink,null,null) && ModelConstraints.canBeAncestor(parent,null,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x120a472f0e8L,"jetbrains.mps.baseLanguage.structure.PrefixDecrementExpression").getDeclarationNode(),null));
    }
  }
);
  return result;
}
