{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
  ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ArrayCreatorWithInitializer"),_context.getSourceNode()){
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      int numOfDimensions=ListSequence.fromList(SLinkOperations.getTargets(_context.getSourceNode(),"dimensionExpression",true)).count();
      if (numOfDimensions > 1) {
        SNode newNode=SNodeFactoryOperations.replaceWithNewChild(_context.getSourceNode(),"jetbrains.mps.baseLanguage.structure.ArrayCreatorWithInitializerAndMultipleDimensions");
        SLinkOperations.setTarget(newNode,"componentType",SLinkOperations.getTarget(_context.getSourceNode(),"componentType",true),true);
        SPropertyOperations.set(newNode,"dimensionCount","" + (numOfDimensions));
        SelectionUtil.selectCell(editorContext,newNode,"");
        return newNode;
      }
 else {
        SNode newNode=SNodeFactoryOperations.replaceWithNewChild(_context.getSourceNode(),"jetbrains.mps.baseLanguage.structure.ArrayCreatorWithInitializer");
        SLinkOperations.setTarget(newNode,"componentType",SLinkOperations.getTarget(_context.getSourceNode(),"componentType",true),true);
        SelectionUtil.selectCell(editorContext,newNode,"init");
        return newNode;
      }
    }
    public String getMatchingText(    String pattern){
      return "{";
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
    @Override protected boolean isEnabled(){
      SNode sourceNode=getSourceNode();
      SNode parent=SNodeOperations.getParent(sourceNode);
      SNode containingLink=SNodeOperations.getContainingLinkDeclaration(sourceNode);
      return parent == null || containingLink == null || (ModelConstraints.canBeParent(parent,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ArrayCreatorWithInitializer"),containingLink,null,null) && ModelConstraints.canBeAncestor(parent,null,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ArrayCreatorWithInitializer"),null));
    }
  }
);
  return result;
}
