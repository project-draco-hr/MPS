{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
  ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ArrayCreatorWithInitializer"),_context.getSourceNode()){
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      int numOfDimensions=ListSequence.fromList(SLinkOperations.getChildren(_context.getSourceNode(),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x113e4952f12L,0x113e4b36742L,"dimensionExpression"))).count();
      SNode newNode=SNodeFactoryOperations.replaceWithNewChild(_context.getSourceNode(),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10cd01b77ddL,"jetbrains.mps.baseLanguage.structure.ArrayCreatorWithInitializer")));
      SNode componentType=SLinkOperations.getTarget(_context.getSourceNode(),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x113e4952f12L,0x113e49578edL,"componentType"));
      SNode init=null;
      while (numOfDimensions > 1) {
        componentType=_quotation_createNode_waf1l5_a0a0e0a0a0(componentType);
        SNode newArrayLiteral=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a770dc0dL,"jetbrains.mps.baseLanguage.structure.ArrayLiteral")),null);
        if ((init != null)) {
          ListSequence.fromList(SLinkOperations.getChildren(newArrayLiteral,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a770dc0dL,0x114a770fdbfL,"item"))).addElement(init);
        }
        init=newArrayLiteral;
        numOfDimensions--;
      }
      SLinkOperations.setTarget(newNode,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10cd01b77ddL,0x10cd01cf3c4L,"componentType"),componentType);
      if ((init != null)) {
        ListSequence.fromList(SLinkOperations.getChildren(newNode,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10cd01b77ddL,0x10cd01d19acL,"initValue"))).addElement(init);
      }
      SelectionUtil.selectNode(editorContext,newNode);
      return newNode;
    }
    public String getMatchingText(    String pattern){
      return "{";
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
    @Override protected boolean isEnabled(){
      SNode sourceNode=getSourceNode();
      SNode parent=SNodeOperations.getParent(sourceNode);
      SNode containingLink=SNodeOperations.getContainingLinkDeclaration(sourceNode);
      return parent == null || containingLink == null || (ModelConstraints.canBeParent(parent,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ArrayCreatorWithInitializer"),containingLink,null,null) && ModelConstraints.canBeAncestor(parent,null,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ArrayCreatorWithInitializer"),null));
    }
  }
);
  return result;
}
