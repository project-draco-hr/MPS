{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(331587165301851084l,-4784639992745830411l),3308300503039700882l,3308300503039730636l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(331587165301851084l,-4784639992745830411l),3308300503039700882l,3308300503039730636l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_b5nlto_a0a0a0a0a1a0b0a1a1;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
{
            final CompositeScope scope=new CompositeScope(SimpleRoleScope.forNamedElements(SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.samples.Kaja.structure.Script",true,false),SLinkOperations.findLinkDeclaration("jetbrains.mps.samples.Kaja.structure.Script","definitions")),SimpleRoleScope.forNamedElements(SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.samples.Kaja.structure.Library",true,false),SLinkOperations.findLinkDeclaration("jetbrains.mps.samples.Kaja.structure.Library","definitions")),new ListScope(ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.samples.Kaja.structure.Script",true,false),MetaAdapterFactory.getContainmentLink(new UUID(331587165301851084l,-4784639992745830411l),3265739055509559110l,3265739055509559116l,"body")),MetaAdapterFactory.getContainmentLink(new UUID(331587165301851084l,-4784639992745830411l),3308300503039896127l,3308300503039896128l,"commands"))).where(new IWhereFilter<SNode>(){
              public boolean accept(              SNode it){
                return SNodeOperations.isInstanceOf(it,"jetbrains.mps.samples.Kaja.structure.RoutineDefinition");
              }
            }
)){
              public String getName(              SNode child){
                return SPropertyOperations.getString(SNodeOperations.cast(child,"jetbrains.mps.lang.core.structure.INamedConcept"),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"));
              }
            }
);
            ListSequence.fromList(SNodeOperations.getDescendants(SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.samples.Kaja.structure.Script",true,false),"jetbrains.mps.samples.Kaja.structure.Require",false,new String[]{})).visitAll(new IVisitor<SNode>(){
              public void visit(              SNode it){
                scope.addScope(SimpleRoleScope.forNamedElements(SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(new UUID(331587165301851084l,-4784639992745830411l),4394627182934757449l,4394627182934757450l,"library")),SLinkOperations.findLinkDeclaration("jetbrains.mps.samples.Kaja.structure.Library","definitions")));
              }
            }
);
            return scope;
          }
        }
      }
;
    }
  }
);
  return references;
}
