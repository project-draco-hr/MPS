{
  SNode newDeclaration;
  if (this.myFieldInitialization == FieldInitializationPlace.FIELD) {
    newDeclaration=new IntroduceFieldRefactoring.QuotationClass_baxqxe_a0a0a1a1().createNode(SNodeOperations.copyNode(this.getExpressionType()),SNodeOperations.copyNode(this.getExpression()),this.getName());
  }
 else {
    newDeclaration=new IntroduceFieldRefactoring.QuotationClass_baxqxe_a0a0a0b0b().createNode(SNodeOperations.copyNode(this.getExpressionType()),this.getName());
  }
  SNode classConcept=SNodeOperations.getAncestor(this.getExpression(),"jetbrains.mps.baseLanguage.structure.ClassConcept",false,false);
  ListSequence.fromList(SLinkOperations.getTargets(classConcept,"field",true)).addElement(newDeclaration);
  SNode assignStatement=new IntroduceFieldRefactoring.QuotationClass_baxqxe_a0a4a1().createNode(newDeclaration,SNodeOperations.copyNode(this.getExpression()));
  if (this.myFieldInitialization == FieldInitializationPlace.METHOD) {
    SNodeOperations.insertPrevSiblingChild(SNodeOperations.getAncestor(this.getExpression(),"jetbrains.mps.baseLanguage.structure.Statement",false,false),SNodeOperations.copyNode(assignStatement));
  }
  if (this.myFieldInitialization == FieldInitializationPlace.CONSTRUCTOR) {
    SNode declaration=SNodeOperations.getAncestor(this.getExpression(),"jetbrains.mps.baseLanguage.structure.ClassConcept",false,false);
    for (    SNode constructor : ListSequence.fromList(SLinkOperations.getTargets(declaration,"constructor",true))) {
      SNodeOperations.insertPrevSiblingChild(ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(constructor,"body",true),"statement",true)).first(),SNodeOperations.copyNode(assignStatement));
    }
  }
  SNodeOperations.replaceWithAnother(this.getExpression(),new IntroduceFieldRefactoring.QuotationClass_baxqxe_a0a0h0b().createNode(newDeclaration));
  return newDeclaration;
}
