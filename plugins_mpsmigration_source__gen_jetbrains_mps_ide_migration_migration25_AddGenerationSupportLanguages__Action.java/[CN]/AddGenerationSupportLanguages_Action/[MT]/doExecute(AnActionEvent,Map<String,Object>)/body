{
  try {
    final SModuleReference genPurpose=PersistenceFacade.getInstance().createModuleReference("fbc25dd2-5da4-483a-8b19-70928e1b62d7(jetbrains.mps.devkit.general-purpose)");
    final SModuleReference generator=PersistenceFacade.getInstance().createModuleReference("b401a680-8325-4110-8fd3-84331ff25bef(jetbrains.mps.lang.generator)");
    final SModuleReference genContext=PersistenceFacade.getInstance().createModuleReference("d7706f63-9be2-479c-a3da-ae92af1e64d5(jetbrains.mps.lang.generator.generationContext)");
    List<SModule> modules=((MPSProject)MapSequence.fromMap(_params).get("project")).getModulesWithGenerators();
    Iterable<Generator> generators=ListSequence.fromList(modules).where(new IWhereFilter<SModule>(){
      public boolean accept(      SModule it){
        return it instanceof Generator;
      }
    }
).select(new ISelector<SModule,Generator>(){
      public Generator select(      SModule it){
        return ((Generator)it);
      }
    }
);
    Sequence.fromIterable(generators).visitAll(new IVisitor<Generator>(){
      public void visit(      Generator it){
        it.addUsedDevkit(genPurpose);
        it.addUsedLanguage(generator);
        it.addUsedLanguage(genContext);
        it.save();
      }
    }
);
    Sequence.fromIterable(generators).translate(new ITranslator2<Generator,SModel>(){
      public Iterable<SModel> translate(      Generator it){
        return it.getOwnTemplateModels();
      }
    }
).visitAll(new IVisitor<SModel>(){
      public void visit(      SModel it){
        ((SModelInternal)it).addDevKit(genPurpose);
        ((SModelInternal)it).addLanguage(generator);
        ((SModelInternal)it).addLanguage(genContext);
      }
    }
);
    SModelRepository.getInstance().saveAll();
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Priority.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "AddGenerationSupportLanguages",t);
    }
  }
}
