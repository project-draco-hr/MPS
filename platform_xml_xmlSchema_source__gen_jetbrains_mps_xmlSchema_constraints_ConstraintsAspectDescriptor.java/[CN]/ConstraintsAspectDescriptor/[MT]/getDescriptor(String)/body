{
  if ("jetbrains.mps.xmlSchema.structure.ElementWithContent".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.ElementWithContent"));
  }
  if ("jetbrains.mps.xmlSchema.structure.Schema".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Schema_Constraints());
  }
  if ("jetbrains.mps.xmlSchema.structure.Declaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Declaration_Constraints());
  }
  if ("jetbrains.mps.xmlSchema.structure.Sequence".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.Sequence"));
  }
  if ("jetbrains.mps.xmlSchema.structure.ElementReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.ElementReference"));
  }
  if ("jetbrains.mps.xmlSchema.structure.TypeExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.TypeExpression"));
  }
  if ("jetbrains.mps.xmlSchema.structure.MixedAttribute".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.MixedAttribute"));
  }
  if ("jetbrains.mps.xmlSchema.structure.GroupDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new GroupDeclaration_Constraints());
  }
  if ("jetbrains.mps.xmlSchema.structure.GroupExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.GroupExpression"));
  }
  if ("jetbrains.mps.xmlSchema.structure.Choice".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.Choice"));
  }
  if ("jetbrains.mps.xmlSchema.structure.GroupReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.GroupReference"));
  }
  if ("jetbrains.mps.xmlSchema.structure.OccursAttribute".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.OccursAttribute"));
  }
  if ("jetbrains.mps.xmlSchema.structure.MaxOccursExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.MaxOccursExpression"));
  }
  if ("jetbrains.mps.xmlSchema.structure.UnboundExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.UnboundExpression"));
  }
  if ("jetbrains.mps.xmlSchema.structure.ComplexType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ComplexType_Constraints());
  }
  if ("jetbrains.mps.xmlSchema.structure.Extension".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.Extension"));
  }
  if ("jetbrains.mps.xmlSchema.structure.DeclarationBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.DeclarationBlock"));
  }
  if ("jetbrains.mps.xmlSchema.structure.TextLine".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.TextLine"));
  }
  if ("jetbrains.mps.xmlSchema.structure.AttributeDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AttributeDeclaration_Constraints());
  }
  if ("jetbrains.mps.xmlSchema.structure.AttributeGroup".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AttributeGroup_Constraints());
  }
  if ("jetbrains.mps.xmlSchema.structure.AttributeExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.AttributeExpression"));
  }
  if ("jetbrains.mps.xmlSchema.structure.AttributeGroupReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.AttributeGroupReference"));
  }
  if ("jetbrains.mps.xmlSchema.structure.ComplexTypeReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ComplexTypeReference_Constraints());
  }
  if ("jetbrains.mps.xmlSchema.structure.ComplexContent".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.ComplexContent"));
  }
  if ("jetbrains.mps.xmlSchema.structure.ContentItem".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.ContentItem"));
  }
  if ("jetbrains.mps.xmlSchema.structure.TypeExpressionList".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.TypeExpressionList"));
  }
  if ("jetbrains.mps.xmlSchema.structure.SimpleContent".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.SimpleContent"));
  }
  if ("jetbrains.mps.xmlSchema.structure.ElementDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ElementDeclaration_Constraints());
  }
  if ("jetbrains.mps.xmlSchema.structure.ElementWithType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.ElementWithType"));
  }
  if ("jetbrains.mps.xmlSchema.structure.UseAttribute".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.UseAttribute"));
  }
  if ("jetbrains.mps.xmlSchema.structure.EntitySet".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EntitySet_Constraints());
  }
  if ("jetbrains.mps.xmlSchema.structure.EntityDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EntityDeclaration_Constraints());
  }
  if ("jetbrains.mps.xmlSchema.structure.EntityBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.EntityBlock"));
  }
  if ("jetbrains.mps.xmlSchema.structure.EntityLine".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.EntityLine"));
  }
  if ("jetbrains.mps.xmlSchema.structure.NamespaceDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.NamespaceDeclaration"));
  }
  if ("jetbrains.mps.xmlSchema.structure.StringSchemaType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.StringSchemaType"));
  }
  if ("jetbrains.mps.xmlSchema.structure.SchemaType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.SchemaType"));
  }
  if ("jetbrains.mps.xmlSchema.structure.IntegerSchemaType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.IntegerSchemaType"));
  }
  if ("jetbrains.mps.xmlSchema.structure.BooleanSchemaType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlSchema.structure.BooleanSchemaType"));
  }
  if ("jetbrains.mps.xmlSchema.structure.BoundExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new BoundExpression_Constraints());
  }
  return null;
}
