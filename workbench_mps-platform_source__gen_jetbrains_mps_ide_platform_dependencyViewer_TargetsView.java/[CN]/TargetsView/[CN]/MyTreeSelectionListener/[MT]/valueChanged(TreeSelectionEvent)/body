{
  final TreePath[] paths=myTree.getSelectionPaths();
  if (paths == null || paths.length == 0) {
    return;
  }
  final DependencyViewerScope scope=new DependencyViewerScope();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      for (      TreePath path : paths) {
        MPSTreeNode node=(MPSTreeNode)path.getLastPathComponent();
        Object userObject=node.getUserObject();
        if (userObject instanceof DataNode) {
          BaseNodeData data=((DataNode)userObject).getData();
          if (data instanceof ModelNodeData) {
            scope.add(as_w7qo2b_a0a0a0a1a2a0a0a0a0a3a3f(data,ModelNodeData.class).getModelDescriptor());
          }
          if (data instanceof ModuleNodeData) {
            scope.add(as_w7qo2b_a0a0a0a2a2a0a0a0a0a3a3f(data,ModuleNodeData.class).getModule());
          }
          if (data instanceof NodeNodeData) {
            scope.add(as_w7qo2b_a0a0a0a3a2a0a0a0a0a3a3f(data,NodeNodeData.class).getNode());
          }
        }
      }
    }
  }
);
  myDependenciesComponent.updateReferencesView(scope);
}
