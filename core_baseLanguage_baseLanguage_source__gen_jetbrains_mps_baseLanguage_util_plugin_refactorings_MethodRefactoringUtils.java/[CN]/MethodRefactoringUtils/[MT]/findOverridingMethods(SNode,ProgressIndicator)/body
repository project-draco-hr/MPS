{
  List<SNode> results=new ArrayList<SNode>();
  if (SNodeOperations.isInstanceOf(method,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration")) {
    if (SPropertyOperations.getBoolean(method,"isFinal") || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(method,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration"),"visibility",true),"jetbrains.mps.baseLanguage.structure.PrivateVisibility")) {
      return results;
    }
    SearchQuery query=new SearchQuery(method,GlobalScope.getInstance());
    SearchResults<SNode> searchResults;
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(method),"jetbrains.mps.baseLanguage.structure.Interface")) {
      searchResults=FindUtils.getSearchResults(progressIndicator,query,new InterfaceMethodImplementations_Finder());
    }
 else {
      searchResults=FindUtils.getSearchResults(progressIndicator,query,new OverridingMethods_Finder());
    }
    for (    SearchResult<SNode> result : ListSequence.fromList(searchResults.getSearchResults())) {
      ListSequence.fromList(results).addElement(SNodeOperations.cast(result.getObject(),"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"));
    }
  }
  if (SNodeOperations.isInstanceOf(method,"jetbrains.mps.lang.behavior.structure.ConceptMethodDeclaration")) {
    SearchQuery query=new SearchQuery(method,GlobalScope.getInstance());
    SearchResults<SNode> searchResults=FindUtils.getSearchResults(progressIndicator,query,new jetbrains.mps.lang.behavior.findUsages.OverridingMethods_Finder());
    for (    SearchResult<SNode> result : ListSequence.fromList(searchResults.getSearchResults())) {
      ListSequence.fromList(results).addElement(SNodeOperations.cast(result.getObject(),"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"));
    }
  }
  return results;
}
