{
  final SNode leftExpression=SNodeOperation_Behavior.call_getLeftExpression_1200920411564(op);
{
    final SNode LeftType=TypeChecker.getInstance().getRuntimeSupport().typeOf(leftExpression,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1206098758674",false);
    TypeChecker.getInstance().getRuntimeSupport().whenConcrete(LeftType,new Runnable(){
      public void run(){
        SNode conceptDeclaration;
        if (SNodeOperations.isInstanceOf(TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType),"jetbrains.mps.bootstrap.smodelLanguage.structure._LinkAccessT")) {
          conceptDeclaration=SLinkOperations.getTarget(TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType),"targetConcept",false);
        }
 else         if (SNodeOperations.isInstanceOf(TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType),"jetbrains.mps.bootstrap.smodelLanguage.structure.SNodeType")) {
          conceptDeclaration=SLinkOperations.getTarget(TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType),"concept",false);
        }
 else         if (SNodeOperations.isInstanceOf(TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType),"jetbrains.mps.bootstrap.smodelLanguage.structure.SConceptType")) {
          conceptDeclaration=SConceptOperations.findConceptDeclaration("jetbrains.mps.bootstrap.structureLanguage.structure.AbstractConceptDeclaration");
        }
 else {
          conceptDeclaration=SConceptOperations.findConceptDeclaration("jetbrains.mps.core.structure.BaseConcept");
        }
        TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeToEquate,conceptDeclaration,null,null,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1205278228661");
      }
    }
,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1186062066737");
  }
}
