{
  SNode leftOperation=SNodeOperation_Behavior.call_getLeftExpressionOperation_1203459446846(op);
  if (SConceptOperations.isExactly(SNodeOperations.getConceptDeclaration(leftOperation),"jetbrains.mps.bootstrap.smodelLanguage.structure.SLinkAccess")) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(leftOperation,"link",false),"target",false);
  }
  if (SNodeOperations.isInstanceOf(leftOperation,"jetbrains.mps.bootstrap.smodelLanguage.structure.SLinkListAccess")) {
    return SLinkOperations.getTarget(SLinkOperations.getTarget(leftOperation,"link",false),"target",false);
  }
  SNode leftExpression=SNodeOperation_Behavior.call_getLeftExpression_1200920411564(op);
  final SNode Result_typevar_1186062019004=TypeChecker.getInstance().getRuntimeSupport().createNewRuntimeTypesVariable(false);
  final SNode LeftType_typevar_1186062031569=TypeChecker.getInstance().getRuntimeSupport().createNewRuntimeTypesVariable(false);
  TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType_typevar_1186062031569),TypeChecker.getInstance().getRuntimeSupport().typeOf(leftExpression,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1205441980320",false),leftExpression,null,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1205441963346");
{
    final SNode _representatorVar14=TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType_typevar_1186062031569);
    TypeChecker.getInstance().getRuntimeSupport().whenConcrete(_representatorVar14,new Runnable(){
      public void run(){
        SNode conceptDeclaration=null;
        if (SNodeOperations.isInstanceOf(TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType_typevar_1186062031569),"jetbrains.mps.bootstrap.smodelLanguage.structure._LinkAccessT")) {
          conceptDeclaration=SLinkOperations.getTarget(TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType_typevar_1186062031569),"targetConcept",false);
        }
 else         if (SNodeOperations.isInstanceOf(TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType_typevar_1186062031569),"jetbrains.mps.bootstrap.smodelLanguage.structure.SNodeType")) {
          conceptDeclaration=SLinkOperations.getTarget(TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType_typevar_1186062031569),"concept",false);
        }
 else         if (SNodeOperations.isInstanceOf(TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType_typevar_1186062031569),"jetbrains.mps.bootstrap.smodelLanguage.structure.SConceptType")) {
          conceptDeclaration=SConceptOperations.findConceptDeclaration("jetbrains.mps.bootstrap.structureLanguage.structure.AbstractConceptDeclaration");
        }
 else {
          conceptDeclaration=SConceptOperations.findConceptDeclaration("jetbrains.mps.core.structure.BaseConcept");
        }
        TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getEquationManager().getRepresentator(Result_typevar_1186062019004),conceptDeclaration,null,null,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1205278228661");
      }
    }
,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1186062066737");
  }
  return (SNode)TypeChecker.getInstance().getEquationManager().getRepresentator(Result_typevar_1186062019004);
}
