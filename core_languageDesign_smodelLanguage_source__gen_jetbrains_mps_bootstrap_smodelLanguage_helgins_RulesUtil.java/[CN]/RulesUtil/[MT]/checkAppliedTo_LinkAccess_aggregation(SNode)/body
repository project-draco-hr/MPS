{
  final SNode leftExpression=SNodeOperation_Behavior.call_getLeftExpression_1200920411564(op);
{
    final SNode LeftType=TypeChecker.getInstance().getRuntimeSupport().typeOf(leftExpression,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1206099156468",false);
    TypeChecker.getInstance().getRuntimeSupport().whenConcrete(LeftType,new Runnable(){
      public void run(){
        boolean isGood=false;
        SNode linkAccessT=TypeChecker.getInstance().getRuntimeSupport().coerce(TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType),HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.bootstrap.smodelLanguage.structure._LinkAccessT"),false);
        if (linkAccessT != null) {
          if (SPropertyOperations.getBoolean(linkAccessT,"singularCradinality")) {
            isGood=true;
          }
        }
        if (!(isGood)) {
          TypeChecker.getInstance().reportTypeError(op,"operation is only applicable to aggregation-link-access","jetbrains.mps.bootstrap.smodelLanguage.helgins","1205272067893");
        }
      }
    }
,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1205267101146");
  }
}
