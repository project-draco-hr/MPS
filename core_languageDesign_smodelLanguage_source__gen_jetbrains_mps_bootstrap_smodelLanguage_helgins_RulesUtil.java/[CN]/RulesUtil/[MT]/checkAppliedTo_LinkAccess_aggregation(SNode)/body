{
  SNode leftExpression=SNodeOperation_Behavior.call_getLeftExpression_1200920411564(op);
  final SNode LeftType_typevar_1205267007210=TypeChecker.getInstance().getRuntimeSupport().createNewRuntimeTypesVariable(false);
  TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType_typevar_1205267007210),TypeChecker.getInstance().getRuntimeSupport().typeOf(leftExpression,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1205267007215",false),leftExpression,null,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1205267007211");
  final boolean[] ok=new boolean[1];
{
    final SNode _representatorVar14=TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType_typevar_1205267007210);
    TypeChecker.getInstance().getRuntimeSupport().whenConcrete(_representatorVar14,new Runnable(){
      public void run(){
        boolean isGood=false;
        SNode linkAccessT=TypeChecker.getInstance().getRuntimeSupport().coerce(TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType_typevar_1205267007210),HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.bootstrap.smodelLanguage.structure._LinkAccessT"),false);
        if (linkAccessT != null) {
          if (SPropertyOperations.getBoolean(linkAccessT,"singularCradinality")) {
            isGood=true;
          }
        }
        if (!(isGood)) {
          TypeChecker.getInstance().reportTypeError(op,"operation is only applicable to aggregation-link-access","jetbrains.mps.bootstrap.smodelLanguage.helgins","1205272067893");
        }
      }
    }
,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1205267101146");
  }
}
