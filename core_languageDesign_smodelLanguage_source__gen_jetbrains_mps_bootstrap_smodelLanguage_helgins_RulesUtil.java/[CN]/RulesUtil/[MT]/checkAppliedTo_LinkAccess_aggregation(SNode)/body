{
  SNode leftExpression=SNodeOperation_Behavior.call_getLeftExpression_1200920411564(op);
  final SNode LeftType_typevar_1205267007210=TypeChecker.getInstance().getRuntimeSupport().createNewRuntimeTypesVariable(false);
  TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType_typevar_1205267007210),TypeChecker.getInstance().getRuntimeSupport().typeOf(leftExpression,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1205267007215",true),leftExpression,null,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1205267007211");
  final boolean[] ok=new boolean[1];
  TypeChecker.getInstance().getRuntimeSupport().whenConcrete(TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType_typevar_1205267007210),new Runnable(){
    public void run(){
      SNode linkAccessT=TypeChecker.getInstance().getRuntimeSupport().coerce(TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType_typevar_1205267007210),HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.bootstrap.smodelLanguage.structure._LinkAccessT"),false);
      if (linkAccessT != null) {
        if (SPropertyOperations.getBoolean(linkAccessT,"isSingularCradinality")) {
          ok[0]=true;
        }
      }
    }
  }
,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1205267101146");
  if (ok[0]) {
    return true;
  }
  SNode leftOperation=SNodeOperation_Behavior.call_getLeftExpressionOperation_1203459446846(op);
  if (SConceptOperations.isExactly(SNodeOperations.getConceptDeclaration(leftOperation),"jetbrains.mps.bootstrap.smodelLanguage.structure.SLinkAccess")) {
    SNode link=SLinkOperations.getTarget(leftOperation,"link",false);
    if (SPropertyOperations.hasValue(link,"metaClass","aggregation",null)) {
      return true;
    }
  }
  TypeChecker.getInstance().reportTypeError(op,"operation is only applicable to aggregation-link-access","jetbrains.mps.bootstrap.smodelLanguage.helgins","1178287491690");
  return false;
}
