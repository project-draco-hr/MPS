{
  if (SLinkOperations.getTarget(methodCall,"baseMethodDeclaration",false) == null) {
    return;
  }
  SNode methodDeclaration=SLinkOperations.getTarget(methodCall,"baseMethodDeclaration",false);
  final SNode methodClassifier=SNodeOperations.getAncestor(methodDeclaration,"jetbrains.mps.baseLanguage.structure.Classifier",false,false);
  SNode currentClassifier=ExtensionMethodDeclaration_Behavior.call_getClassifier_7685333756920241018(SNodeOperations.getAncestor(methodCall,"jetbrains.mps.baseLanguage.extensionMethods.structure.ExtensionMethodDeclaration",false,false));
  if (currentClassifier != null) {
    SNode constructedType=new typeof_LocalExtendedMethodCall_InferenceRule.QuotationClass_8kfrad_a0a0a5a0().createNode(currentClassifier,typeCheckingContext);
    for (    SNode tvd : SLinkOperations.getTargets(currentClassifier,"typeVariableDeclaration",true)) {
      SNode tvr=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.TypeVariableReference",null);
      SLinkOperations.setTarget(tvr,"typeVariableDeclaration",tvd,false);
      ListSequence.fromList(SLinkOperations.getTargets(constructedType,"parameter",true)).addElement(tvr);
    }
    Map<SNode,List<SNode>> mmap=MapSequence.fromMap(new HashMap<SNode,List<SNode>>());
    RulesFunctions_BaseLanguage.inference_equateParametersAndReturnType(typeCheckingContext,methodCall,SLinkOperations.getTarget(SLinkOperations.getTarget(methodCall,"baseMethodDeclaration",false),"returnType",true),mmap);
    RulesFunctions_BaseLanguage.inference_matchConcreteTypesWithMethodTypeVariables(typeCheckingContext,methodCall,mmap);
    RulesFunctions_BaseLanguage.inference_matchConcreteTypesWithTypeVariables(typeCheckingContext,methodClassifier,constructedType,mmap);
    RulesFunctions_BaseLanguage.inference_equateMatchingTypeVariables(typeCheckingContext,mmap);
    if (currentClassifier == null) {
      currentClassifier=SNodeOperations.getAncestor(methodCall,"jetbrains.mps.baseLanguage.structure.Classifier",false,false);
    }
{
      SNode _nodeToCheck_1029348928467=methodCall;
      EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:d9557470-9267-4b7b-ab45-4dc4cc5d697c(jetbrains.mps.baseLanguage.extensionMethods.typesystem)","3386826992796746362",0,null);
      typeCheckingContext.createLessThanInequation((SNode)new typeof_LocalExtendedMethodCall_InferenceRule.QuotationClass_8kfrad_a0a8a5a0_0().createNode(currentClassifier,typeCheckingContext),(SNode)new typeof_LocalExtendedMethodCall_InferenceRule.QuotationClass_8kfrad_a0a8a5a0().createNode(methodClassifier,typeCheckingContext),false,_info_12389875345);
    }
  }
}
