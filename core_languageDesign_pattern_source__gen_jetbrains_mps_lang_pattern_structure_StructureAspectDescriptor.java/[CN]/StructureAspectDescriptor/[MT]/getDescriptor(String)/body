{
  int hash=conceptFqName.hashCode();
  if (hash == 716368539) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.AsPattern","jetbrains.mps.lang.pattern.structure.PatternVariableDeclaration");
  }
  if (hash == -2131337619) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.Pattern","jetbrains.mps.lang.core.structure.NodeAttribute");
  }
  if (hash == -1337562907) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.PatternExpression","jetbrains.mps.baseLanguage.structure.Expression","jetbrains.mps.lang.core.structure.IMetaLevelChanger");
  }
  if (hash == -1529997903) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.PatternVariableDeclaration","jetbrains.mps.lang.pattern.structure.Pattern","jetbrains.mps.lang.core.structure.INamedConcept");
  }
  if (hash == -1029075866) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.PropertyPatternVariableDeclaration","jetbrains.mps.lang.core.structure.PropertyAttribute","jetbrains.mps.lang.core.structure.INamedConcept");
  }
  if (hash == -1207555533) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.WildcardPattern","jetbrains.mps.lang.pattern.structure.Pattern");
  }
  if (hash == -1884208785) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.ListPattern","jetbrains.mps.lang.pattern.structure.AsPattern");
  }
  if (hash == 809452491) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.LinkPatternVariableDeclaration","jetbrains.mps.lang.core.structure.LinkAttribute","jetbrains.mps.lang.core.structure.INamedConcept");
  }
  if (hash == 1712602949) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.ActionAsPattern","jetbrains.mps.lang.pattern.structure.AsPattern");
  }
  if (hash == -576410186) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.ActionStatement","jetbrains.mps.baseLanguage.structure.Statement");
  }
  if (hash == 156926274) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.PatternVariableReference","jetbrains.mps.baseLanguage.structure.Expression");
  }
  if (hash == -561000502) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.OrPattern","jetbrains.mps.lang.pattern.structure.Pattern");
  }
  if (hash == -682112551) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.OrPatternClause","jetbrains.mps.lang.pattern.structure.PatternExpression");
  }
  if (hash == 1051743621) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.OrPatternVariableReference","jetbrains.mps.baseLanguage.structure.Expression");
  }
  if (hash == -993142711) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.InsertAfterPosition","jetbrains.mps.lang.pattern.structure.InsertPosition");
  }
  if (hash == -4587228) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.InsertBeforePosition","jetbrains.mps.lang.pattern.structure.InsertPosition");
  }
  if (hash == -737017467) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.InsertPosition","jetbrains.mps.lang.core.structure.BaseConcept");
  }
  return null;
}
