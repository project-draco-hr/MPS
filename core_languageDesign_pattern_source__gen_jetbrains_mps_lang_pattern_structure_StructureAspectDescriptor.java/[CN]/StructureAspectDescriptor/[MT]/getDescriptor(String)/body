{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a,conceptFqName)) {
case 0:
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.ActionAsPattern",new String[]{"jetbrains.mps.lang.pattern.structure.AsPattern"},new String[]{"jetbrains.mps.lang.pattern.structure.AsPattern","jetbrains.mps.lang.pattern.structure.Pattern","jetbrains.mps.lang.pattern.structure.PatternVariableDeclaration"},new String[]{"jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.NodeAttribute"});
case 1:
  return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.ActionStatement",new String[]{"jetbrains.mps.baseLanguage.structure.Statement"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Statement"});
case 2:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.AsPattern",new String[]{"jetbrains.mps.lang.pattern.structure.PatternVariableDeclaration"},new String[]{"jetbrains.mps.lang.pattern.structure.Pattern","jetbrains.mps.lang.pattern.structure.PatternVariableDeclaration"},new String[]{"jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.NodeAttribute"});
case 3:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.InsertAfterPosition",new String[]{"jetbrains.mps.lang.pattern.structure.InsertPosition"},new String[]{"jetbrains.mps.lang.pattern.structure.InsertPosition"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 4:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.InsertBeforePosition",new String[]{"jetbrains.mps.lang.pattern.structure.InsertPosition"},new String[]{"jetbrains.mps.lang.pattern.structure.InsertPosition"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 5:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.InsertPosition",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 6:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.LinkPatternVariableDeclaration",new String[]{"jetbrains.mps.lang.core.structure.LinkAttribute","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.LinkAttribute"});
case 7:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.ListPattern",new String[]{"jetbrains.mps.lang.pattern.structure.AsPattern"},new String[]{"jetbrains.mps.lang.pattern.structure.AsPattern","jetbrains.mps.lang.pattern.structure.Pattern","jetbrains.mps.lang.pattern.structure.PatternVariableDeclaration"},new String[]{"jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.NodeAttribute"});
case 8:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.OrPattern",new String[]{"jetbrains.mps.lang.pattern.structure.Pattern"},new String[]{"jetbrains.mps.lang.pattern.structure.Pattern"},new String[]{"jetbrains.mps.lang.core.structure.NodeAttribute"});
case 9:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.OrPatternClause",new String[]{"jetbrains.mps.lang.pattern.structure.PatternExpression"},new String[]{"jetbrains.mps.lang.pattern.structure.PatternExpression"},new String[]{"jetbrains.mps.baseLanguage.structure.Expression","jetbrains.mps.lang.core.structure.IMetaLevelChanger"});
case 10:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.OrPatternVariableReference",new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Expression"});
case 11:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.Pattern",new String[]{"jetbrains.mps.lang.core.structure.NodeAttribute"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.NodeAttribute"});
case 12:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.PatternExpression",new String[]{"jetbrains.mps.baseLanguage.structure.Expression","jetbrains.mps.lang.core.structure.IMetaLevelChanger"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Expression","jetbrains.mps.lang.core.structure.IMetaLevelChanger"});
case 13:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.PatternVariableDeclaration",new String[]{"jetbrains.mps.lang.pattern.structure.Pattern","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"jetbrains.mps.lang.pattern.structure.Pattern"},new String[]{"jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.NodeAttribute"});
case 14:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.PatternVariableReference",new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Expression"});
case 15:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.PropertyPatternVariableDeclaration",new String[]{"jetbrains.mps.lang.core.structure.PropertyAttribute","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.PropertyAttribute"});
case 16:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.pattern.structure.WildcardPattern",new String[]{"jetbrains.mps.lang.pattern.structure.Pattern"},new String[]{"jetbrains.mps.lang.pattern.structure.Pattern"},new String[]{"jetbrains.mps.lang.core.structure.NodeAttribute"});
default :
return null;
}
}
