{
  Tuples._2<SNode,SNode> diff=getAppreciateDiffNodes(statement1,statement2);
  if (diff == null) {
    return null;
  }
  SNode ternaryOperator=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.TernaryOperatorExpression",null);
  SLinkOperations.setTarget(ternaryOperator,"condition",(SNode)(CopyUtil.copy(condition)),true);
  SLinkOperations.setTarget(ternaryOperator,"ifTrue",(SNode)(CopyUtil.copy(diff._0())),true);
  SLinkOperations.setTarget(ternaryOperator,"ifFalse",(SNode)(CopyUtil.copy(diff._1())),true);
  SNodeOperations.replaceWithAnother(diff._0(),ternaryOperator);
  return statement1;
}
