{
  SNode clone=SNodeOperations.copyNode(node);
  if (SNodeOperations.isInstanceOf(clone,"jetbrains.mps.baseLanguage.structure.BooleanConstant")) {
    SPropertyOperations.set(SNodeOperations.cast(clone,"jetbrains.mps.baseLanguage.structure.BooleanConstant"),MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1068580123137l,1068580123138l,"value"),"" + (!(SPropertyOperations.getBoolean(SNodeOperations.cast(clone,"jetbrains.mps.baseLanguage.structure.BooleanConstant"),MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1068580123137l,1068580123138l,"value")))));
    return clone;
  }
  if (SNodeOperations.isInstanceOf(clone,"jetbrains.mps.baseLanguage.structure.NotExpression")) {
    return SLinkOperations.getTarget(SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.NotExpression"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1081516740877l,1081516765348l,"expression"));
  }
  if (SNodeOperations.isInstanceOf(clone,"jetbrains.mps.baseLanguage.structure.BinaryOperation")) {
    SNode replacement;
    if (SNodeOperations.isInstanceOf(clone,"jetbrains.mps.baseLanguage.structure.AndExpression")) {
      replacement=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.OrExpression",null);
    }
 else     if (SNodeOperations.isInstanceOf(clone,"jetbrains.mps.baseLanguage.structure.OrExpression")) {
      replacement=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.AndExpression",null);
    }
 else     if (SNodeOperations.isInstanceOf(clone,"jetbrains.mps.baseLanguage.structure.EqualsExpression")) {
      replacement=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.NotEqualsExpression",null);
    }
 else     if (SNodeOperations.isInstanceOf(clone,"jetbrains.mps.baseLanguage.structure.NotEqualsExpression")) {
      replacement=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.EqualsExpression",null);
    }
 else     if (SNodeOperations.isInstanceOf(clone,"jetbrains.mps.baseLanguage.structure.GreaterThanExpression")) {
      replacement=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LessThanOrEqualsExpression",null);
    }
 else     if (SNodeOperations.isInstanceOf(clone,"jetbrains.mps.baseLanguage.structure.GreaterThanOrEqualsExpression")) {
      replacement=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LessThanExpression",null);
    }
 else     if (SNodeOperations.isInstanceOf(clone,"jetbrains.mps.baseLanguage.structure.LessThanExpression")) {
      replacement=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.GreaterThanOrEqualsExpression",null);
    }
 else     if (SNodeOperations.isInstanceOf(clone,"jetbrains.mps.baseLanguage.structure.LessThanOrEqualsExpression")) {
      replacement=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.GreaterThanExpression",null);
    }
 else {
      SNode notNode=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.NotExpression",null);
      SLinkOperations.setTarget(notNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1081516740877l,1081516765348l,"expression"),clone);
      return notNode;
    }
    SLinkOperations.setTarget(replacement,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,1081773367580l,"leftExpression"),SLinkOperations.getTarget(SNodeOperations.cast(clone,"jetbrains.mps.baseLanguage.structure.BinaryOperation"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,1081773367580l,"leftExpression")));
    SLinkOperations.setTarget(replacement,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,1081773367579l,"rightExpression"),SLinkOperations.getTarget(SNodeOperations.cast(clone,"jetbrains.mps.baseLanguage.structure.BinaryOperation"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,1081773367579l,"rightExpression")));
    return replacement;
  }
  SNode notNode=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.NotExpression",null);
  SLinkOperations.setTarget(notNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1081516740877l,1081516765348l,"expression"),clone);
  return notNode;
}
