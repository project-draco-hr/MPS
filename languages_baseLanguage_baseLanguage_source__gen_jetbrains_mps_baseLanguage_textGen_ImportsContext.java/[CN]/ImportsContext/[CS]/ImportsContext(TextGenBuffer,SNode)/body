{
  this.buffer=buffer;
  this.packageName=SNodeOperations.getModel(rootNode).getSModelReference().getLongName();
  contextClassifiersCache=new SimpleCache<_2<SNode,String>,Map<String,String>>(){
    protected Map<String,String> innerGet(    _2<SNode,String> key){
      return getContextClassifiersInternal(key._0(),key._1());
    }
  }
;
  bindings=new HashMap<String,String>();
  packageSimpleNames=new HashSet<String>();
  for (  SNode classifier : SModelOperations.getRoots(SNodeOperations.getModel(rootNode),"jetbrains.mps.baseLanguage.structure.Classifier")) {
    packageSimpleNames.add(SPropertyOperations.getString(classifier,"name"));
  }
  classifiersInRoot=new HashSet<String>();
  for (  SNode classifier : SNodeOperations.getModel(rootNode).getFastNodeFinder().getNodes("jetbrains.mps.baseLanguage.structure.Classifier",true)) {
    if (SNodeOperations.getContainingRoot(classifier) == rootNode) {
      classifiersInRoot.add(INamedConcept_Behavior.call_getFqName_1213877404258(SNodeOperations.cast(classifier,"jetbrains.mps.baseLanguage.structure.Classifier")));
    }
  }
}
