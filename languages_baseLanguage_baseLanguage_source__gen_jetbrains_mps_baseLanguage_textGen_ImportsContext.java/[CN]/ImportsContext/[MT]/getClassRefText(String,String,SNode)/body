{
  String simpleName=JavaNameUtil.shortName(fqName);
  Map<String,String> nestedClassifiersBinding=getContextClassifiers(contextNode);
  if (classifiersInRoot.contains(fqName)) {
    return nestedName(packageName,fqName);
  }
  if (nestedClassifiersBinding.containsKey(simpleName)) {
    if (fqName.equals(nestedClassifiersBinding.get(simpleName))) {
      return simpleName;
    }
 else {
      return fqName;
    }
  }
  if (bindings.containsKey(simpleName)) {
    if (fqName.equals(bindings.get(simpleName))) {
      return simpleName;
    }
 else {
      return fqName;
    }
  }
  bindings.put(simpleName,fqName);
  addDependency(packageName,fqName);
  boolean shouldBeImported;
  if (packageName.equals(this.packageName)) {
    boolean isRootClassifier=(packageName.length() + simpleName.length() + 1) == fqName.length();
    shouldBeImported=!(isRootClassifier);
  }
 else   if (packageName.equals("java.lang")) {
    shouldBeImported=packageSimpleNames.contains(simpleName);
  }
 else {
    shouldBeImported=true;
  }
  if (shouldBeImported) {
    addImport(fqName);
  }
  return simpleName;
}
