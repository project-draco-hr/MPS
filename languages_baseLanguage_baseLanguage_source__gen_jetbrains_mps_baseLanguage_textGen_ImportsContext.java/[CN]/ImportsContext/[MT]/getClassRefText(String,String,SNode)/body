{
  String simpleName=JavaNameUtil.shortName(fqName);
  Map<String,String> nestedClassifiersBinding=getContextClassifiers(contextNode);
  if (classifiersInRoot.contains(fqName)) {
    return new ImportsContext.ClassifierRefText(nestedName(packageName,fqName),false);
  }
  if (nestedClassifiersBinding.containsKey(simpleName)) {
    if (fqName.equals(nestedClassifiersBinding.get(simpleName))) {
      return new ImportsContext.ClassifierRefText(simpleName,false);
    }
 else {
      return new ImportsContext.ClassifierRefText(fqName,false);
    }
  }
  if (bindings.containsKey(simpleName)) {
    if (fqName.equals(bindings.get(simpleName))) {
      return new ImportsContext.ClassifierRefText(simpleName,false);
    }
 else {
      return new ImportsContext.ClassifierRefText(fqName,false);
    }
  }
  bindings.put(simpleName,fqName);
  addDependency(packageName,fqName);
  if (packageName.equals(this.packageName)) {
    boolean isRootClassifier=(packageName.length() + simpleName.length() + 1) == fqName.length();
    return new ImportsContext.ClassifierRefText(simpleName,!(isRootClassifier));
  }
  if (packageName.equals("java.lang")) {
    return new ImportsContext.ClassifierRefText(simpleName,packageSimpleNames.contains(simpleName));
  }
  return new ImportsContext.ClassifierRefText(simpleName,true);
}
