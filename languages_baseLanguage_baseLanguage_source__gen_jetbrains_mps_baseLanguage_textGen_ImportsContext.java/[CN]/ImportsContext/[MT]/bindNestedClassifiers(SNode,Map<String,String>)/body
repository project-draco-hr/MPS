{
  Set<SNode> classifiersInRoot=new HashSet<SNode>();
  collectClassifiers(rootNode,classifiersInRoot);
  for (  SNode classifier : classifiersInRoot) {
    for (    SNode extendedClassifier : Classifier_Behavior.call_getAllExtendedClassifiers_2907982978864985482(classifier)) {
      for (      SNode nestedClassifier : SLinkOperations.getTargets(extendedClassifier,"staticInnerClassifiers",true)) {
        MapSequence.fromMap(binding).put(SPropertyOperations.getString(nestedClassifier,"name"),null);
      }
    }
  }
  Set<String> repeatedNames=new HashSet<String>();
  for (  SNode extendedClassifier : Classifier_Behavior.call_getAllExtendedClassifiers_2907982978864985482(rootNode)) {
    for (    SNode nestedClassifier : SLinkOperations.getTargets(extendedClassifier,"staticInnerClassifiers",true)) {
      if (MapSequence.fromMap(binding).get(SPropertyOperations.getString(nestedClassifier,"name")) == null) {
        MapSequence.fromMap(binding).put(SPropertyOperations.getString(nestedClassifier,"name"),INamedConcept_Behavior.call_getFqName_1213877404258(nestedClassifier));
      }
 else {
        SetSequence.fromSet(repeatedNames).addElement(SPropertyOperations.getString(nestedClassifier,"name"));
      }
    }
  }
  for (  String repeatedName : repeatedNames) {
    MapSequence.fromMap(binding).put(repeatedName,null);
  }
  MapSequence.fromMap(binding).put(SPropertyOperations.getString(rootNode,"name"),INamedConcept_Behavior.call_getFqName_1213877404258(rootNode));
}
