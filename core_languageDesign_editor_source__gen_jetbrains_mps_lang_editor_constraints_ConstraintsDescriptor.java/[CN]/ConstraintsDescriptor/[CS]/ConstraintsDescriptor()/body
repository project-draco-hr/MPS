{
  ListOperations.addElement(this.myConstraints,new ConceptEditorDeclaration_name_PropertyConstraint());
  ListOperations.addElement(this.myConstraints,new RGBColor_value_PropertyConstraint());
  ListOperations.addElement(this.myConstraints,new CellModel_Component_editorComponent_ReferentConstraint());
  ListOperations.addElement(this.myConstraints,new QueryMethodIdEditorProviderExpression_queryIdProperty_ReferentConstraint());
  ListOperations.addElement(this.myConstraints,new CellMenuComponentFeature_Link_linkDeclaration_ReferentConstraint());
  ListOperations.addElement(this.myConstraints,new CellModel_RefCell_linkDeclaration_ReferentConstraint());
  ListOperations.addElement(this.myConstraints,new CellModel_Property_propertyDeclaration_ReferentConstraint());
  ListOperations.addElement(this.myConstraints,new CellMenuComponentFeature_Property_propertyDeclaration_ReferentConstraint());
  ListOperations.addElement(this.myConstraints,new CellModel_WithRole_relationDeclaration_ReferentConstraint());
  ListOperations.addElement(this.myConstraints,new CellMenuPart_ReplaceNode_CustomNodeConcept_replacementConcept_ReferentConstraint());
  ListOperations.addElement(this.myConstraints,new CellModel_RefNodeList_linkDeclaration_ReferentConstraint());
  ListOperations.addElement(this.myConstraints,new CellModel_RefNode_linkDeclaration_ReferentConstraint());
  ListOperations.addElement(this.myConstraints,new CellModel_TransactionalProperty_property_ReferentConstraint());
  ListOperations.addElement(this.myConstraints,new NavigatableReferenceStyleClassItem_link_ReferentConstraint());
}
