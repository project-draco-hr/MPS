{
  try {
    VeiwAsActionGroup_ActionGroup.this.removeAll();
    final IValue value=VariablesTree.MPS_DEBUGGER_VALUE.getData(event.getDataContext());
    if (value == null || !(value instanceof ValueWrapper)) {
      event.getPresentation().setVisible(false);
      return;
    }
    AbstractDebugSession debugSession=DebugActionsUtil.getDebugSession(event);
    if (debugSession == null) {
      event.getPresentation().setVisible(false);
      return;
    }
    JavaUiState uiState=(JavaUiState)debugSession.getUiState();
    final Set<ValueWrapperFactory> factories=SetSequence.fromSet(new HashSet<ValueWrapperFactory>());
    uiState.invokeEvaluationSynchronously(new _FunctionTypes._return_P0_E0<Boolean>(){
      public Boolean invoke(){
        return factories.addAll(CustomViewersManagerImpl.getInstanceImpl().getValueWrapperFactories(((ValueWrapper)value).getValue()));
      }
    }
);
    if (factories.isEmpty()) {
      event.getPresentation().setVisible(false);
      return;
    }
    for (    ValueWrapperFactory factory : SetSequence.fromSet(factories)) {
      VeiwAsActionGroup_ActionGroup.this.addParameterizedAction(new ViewWithFactory_Action(factory),PluginId.getId("jetbrains.mps.debugger.java.runtime"),factory);
    }
  }
 catch (  Throwable t) {
    LOG.error("User group error",t);
  }
  for (  Pair<ActionPlace,Condition<BaseAction>> p : this.myPlaces) {
    this.addPlace(p.first,p.second);
  }
}
