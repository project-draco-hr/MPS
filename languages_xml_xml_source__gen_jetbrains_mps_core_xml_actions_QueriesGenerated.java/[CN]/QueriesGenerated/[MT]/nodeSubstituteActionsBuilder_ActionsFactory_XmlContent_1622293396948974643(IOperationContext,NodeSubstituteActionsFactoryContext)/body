{
  List<INodeSubstituteAction> result=ListSequence.fromList(new ArrayList<INodeSubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.core.xml.structure.XmlElement");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(childConcept,NameUtil.nodeFQName(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter(),operationContext.getScope()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          Matcher _matcher_x583g4_a1a0a0a0a0a2a0a1a3;
          SNode element=SNodeFactoryOperations.createNewNode(model,"jetbrains.mps.core.xml.structure.XmlElement",null);
          if ((_matcher_x583g4_a1a0a0a0a0a2a0a1a3=REGEXP_x583g4_a0a0a2a0a0a0a0a2a0a1a3.matcher(pattern)).find()) {
            SPropertyOperations.set(element,"tagName",_matcher_x583g4_a1a0a0a0a0a2a0a1a3.group(1));
          }
          return element;
        }
        public String getMatchingText(        String pattern){
          Matcher _matcher_x583g4_a0a1a0a0a0a2a0a1a3;
          if ((_matcher_x583g4_a0a1a0a0a0a2a0a1a3=REGEXP_x583g4_a0a0a1a1a0a0a0a2a0a1a3.matcher(pattern)).find()) {
            return "<" + _matcher_x583g4_a0a1a0a0a0a2a0a1a3.group(1) + ">";
          }
          return "<element/>";
        }
        public String getVisibleMatchingText(        String pattern){
          return this.getMatchingText(pattern);
        }
      }
);
    }
  }
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.core.xml.structure.XmlText");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(childConcept,NameUtil.nodeFQName(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter(),operationContext.getScope()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode val=SNodeFactoryOperations.createNewNode(model,"jetbrains.mps.core.xml.structure.XmlText",null);
          SPropertyOperations.set(val,"value",pattern);
          return val;
        }
        public String getMatchingText(        String pattern){
          if (StringUtils.isEmpty(pattern)) {
            return "text";
          }
          if (XmlNameUtil.isCharData(pattern)) {
            return pattern;
          }
          return (pattern.startsWith("?") ? ":" : "?");
        }
        public String getVisibleMatchingText(        String pattern){
          return this.getMatchingText(pattern);
        }
      }
);
    }
  }
  return result;
}
