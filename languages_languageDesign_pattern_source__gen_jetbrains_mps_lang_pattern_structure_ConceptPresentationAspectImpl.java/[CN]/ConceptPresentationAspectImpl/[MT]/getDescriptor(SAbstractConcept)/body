{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case 0:
    return props_ActionAsPattern;
case 1:
  return props_ActionStatement;
case 2:
return props_AsPattern;
case 3:
return props_GeneratorInternal_ChildDescriptor;
case 4:
return props_GeneratorInternal_PropertyDescriptor;
case 5:
return props_GeneratorInternal_ReferenceDescriptor;
case 6:
return props_InsertAfterPosition;
case 7:
return props_InsertBeforePosition;
case 8:
return props_InsertPosition;
case 9:
return props_LinkPatternVariableDeclaration;
case 10:
return props_ListPattern;
case 11:
return props_OrPattern;
case 12:
return props_OrPatternClause;
case 13:
return props_OrPatternVariableReference;
case 14:
return props_Pattern;
case 15:
return props_PatternExpression;
case 16:
return props_PatternVariableDeclaration;
case 17:
return props_PatternVariableReference;
case 18:
return props_PropertyPatternVariableDeclaration;
case 19:
return props_WildcardPattern;
}
throw new IllegalStateException("Unknown concept " + c);
}
