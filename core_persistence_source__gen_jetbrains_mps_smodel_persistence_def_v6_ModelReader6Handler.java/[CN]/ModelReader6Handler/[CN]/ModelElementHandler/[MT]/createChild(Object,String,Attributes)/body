{
  if ("persistence".equals(tagName)) {
    myChildHandlersStack.push(null);
    return persistencehandler;
  }
  if ("language".equals(tagName)) {
    myChildHandlersStack.push(new ModelReader6Handler.ChildHandler(){
      @Override public void apply(      Object resultObject,      Object value) throws SAXException {
        handleChild_7319439566871678401(resultObject,value);
      }
    }
);
    return tag_with_namespacehandler;
  }
  if ("language-engaged-on-generation".equals(tagName)) {
    myChildHandlersStack.push(new ModelReader6Handler.ChildHandler(){
      @Override public void apply(      Object resultObject,      Object value) throws SAXException {
        handleChild_7319439566871678410(resultObject,value);
      }
    }
);
    return tag_with_namespacehandler;
  }
  if ("devkit".equals(tagName)) {
    myChildHandlersStack.push(new ModelReader6Handler.ChildHandler(){
      @Override public void apply(      Object resultObject,      Object value) throws SAXException {
        handleChild_7319439566871678419(resultObject,value);
      }
    }
);
    return tag_with_namespacehandler;
  }
  if ("import".equals(tagName)) {
    myChildHandlersStack.push(new ModelReader6Handler.ChildHandler(){
      @Override public void apply(      Object resultObject,      Object value) throws SAXException {
        handleChild_7319439566871678428(resultObject,value);
      }
    }
);
    return importhandler;
  }
  if ("node".equals(tagName)) {
    myChildHandlersStack.push(new ModelReader6Handler.ChildHandler(){
      @Override public void apply(      Object resultObject,      Object value) throws SAXException {
        handleChild_7319439566871678452(resultObject,value);
      }
    }
);
    return nodehandler;
  }
  if ("root_stubs".equals(tagName)) {
    myChildHandlersStack.push(new ModelReader6Handler.ChildHandler(){
      @Override public void apply(      Object resultObject,      Object value) throws SAXException {
        handleChild_4813471910141063838(resultObject,value);
      }
    }
);
    return root_stubshandler;
  }
  return super.createChild(resultObject,tagName,attrs);
}
