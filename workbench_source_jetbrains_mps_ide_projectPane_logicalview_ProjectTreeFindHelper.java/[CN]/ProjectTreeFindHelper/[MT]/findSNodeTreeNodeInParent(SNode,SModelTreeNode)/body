{
  LinkedList<SNode> ancestors=new LinkedList<SNode>();
  SNode current=node;
  while (current != null) {
    ancestors.addFirst(current);
    current=current.getParent();
  }
  MPSTreeNode currentTreeNode=parent;
  for (  final SNode anc : ancestors) {
    final MPSTreeNode finalCurrentTreeNode=currentTreeNode;
    currentTreeNode=findTreeNode(currentTreeNode,new Condition<MPSTreeNode>(){
      public boolean met(      MPSTreeNode object){
        return object == finalCurrentTreeNode;
      }
    }
,new Condition<MPSTreeNode>(){
      public boolean met(      MPSTreeNode tNode){
        return (tNode instanceof SNodeTreeNode) && (((SNodeTreeNode)tNode).getSNode() == anc);
      }
    }
);
    if (currentTreeNode == null)     return null;
  }
  return (MPSTreeNodeEx)currentTreeNode;
}
