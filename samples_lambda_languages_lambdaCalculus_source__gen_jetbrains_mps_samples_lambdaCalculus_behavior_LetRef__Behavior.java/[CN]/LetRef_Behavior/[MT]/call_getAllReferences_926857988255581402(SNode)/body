{
  List<SNode> result=new ArrayList<SNode>();
  SNode node=thisNode;
  while (SNodeOperations.getParent(node) != null && !(SNodeOperations.isInstanceOf(node,"jetbrains.mps.samples.lambdaCalculus.structure.MultipleExpression"))) {
    node=SNodeOperations.getParent(node);
  }
  for (  SNode letRef : SNodeOperations.getDescendants(node,"jetbrains.mps.samples.lambdaCalculus.structure.LetRef",false,new String[]{})) {
    if (SLinkOperations.getTarget(letRef,MetaAdapterFactory.getReferenceLink(new UUID(8979658720047614716l,-5913038370385483627l),5249919352014727944l,5249919352014732020l,"variable")) == SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getReferenceLink(new UUID(8979658720047614716l,-5913038370385483627l),5249919352014727944l,5249919352014732020l,"variable"))) {
      ListSequence.fromList(result).addElement(letRef);
    }
  }
  return result;
}
