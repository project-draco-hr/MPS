{
  PQNode newFullNode=new PNode();
  newFullNode.setState(PQNode.State.FULL);
  newFullNode.addGraphNode(this.getGraphNode());
  PQNode newEmptyNode=new PNode();
  newEmptyNode.setState(PQNode.State.EMPTY);
  newEmptyNode.addGraphNode(this.getGraphNode());
  QNode partialNode=null;
  Iterator<PQNode> nodeItr=ListSequence.fromList(getChildren()).iterator();
  while (nodeItr.hasNext()) {
    PQNode node=nodeItr.next();
    if (node.getState() == PQNode.State.FULL) {
      nodeItr.remove();
      newFullNode.addLastChild(node);
    }
    if (node.getState() == PQNode.State.EMPTY) {
      nodeItr.remove();
      newEmptyNode.addLastChild(node);
    }
    if (node.getState() == PQNode.State.PARTIAL) {
      partialNode=(QNode)node;
    }
  }
  if (ListSequence.fromList(newFullNode.getChildren()).count() > 0) {
    partialNode.addLastChild(newFullNode);
  }
  if (ListSequence.fromList(newEmptyNode.getChildren()).count() > 0) {
    partialNode.addFirstChild(newEmptyNode);
  }
  partialNode.addGraphNode(this.getGraphNode());
  partialNode.setParent(this.getParent());
  return partialNode;
}
