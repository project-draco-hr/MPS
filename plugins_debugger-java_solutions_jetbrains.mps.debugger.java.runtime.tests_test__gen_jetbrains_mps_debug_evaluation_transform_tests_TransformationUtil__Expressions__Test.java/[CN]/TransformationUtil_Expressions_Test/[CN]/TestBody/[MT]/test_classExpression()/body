{
  addNodeById("5543996881668550169");
  addNodeById("5543996881668550178");
  addNodeById("1454920206667908421");
  addNodeById("1454920206667908409");
  addNodeById("2932187755699923943");
  addNodeById("5543996881668550190");
  addNodeById("5543996881668550217");
  addNodeById("5543996881668550225");
  addNodeById("1454920206667900337");
  addNodeById("1454920206667900329");
  addNodeById("5543996881668550233");
  addNodeById("5543996881668550244");
  addNodeById("1454920206667900361");
  addNodeById("1454920206667900347");
  addNodeById("5543996881668550258");
  addNodeById("5543996881668550268");
  addNodeById("1454920206667900391");
  addNodeById("1454920206667900376");
  addNodeById("5543996881668550283");
  addNodeById("5543996881668550295");
  addNodeById("1454920206667908298");
  addNodeById("1454920206667908280");
  addNodeById("607759879653675041");
  addNodeById("607759879653675023");
  addNodeById("1454920206667908335");
  addNodeById("1454920206667908317");
  addNodeById("607759879653679926");
  addNodeById("607759879653679959");
  addNodeById("607759879653679942");
  addNodeById("607759879653680036");
  addNodeById("2932187755699706728");
  addNodeById("2932187755699710925");
  addNodeById("2932187755699923973");
  addNodeById("2932187755699923959");
  addNodeById("2932187755699930360");
  addNodeById("2932187755699930347");
  addNodeById("8441349676536412410");
  addNodeById("8441349676536412399");
  addNodeById("2932187755699941120");
  addNodeById("2932187755699941138");
  addNodeById("3278243436493715611");
  addNodeById("3278243436493715569");
  addNodeById("6721540366799618936");
  addNodeById("6721540366799618956");
  addNodeById("6721540366799622797");
  addNodeById("6721540366799622776");
  addNodeById("6721540366799627023");
  addNodeById("6721540366799627001");
  addNodeById("4693929676428713095");
  addNodeById("4693929676428713077");
  addNodeById("8441349676536441170");
  addNodeById("8441349676536441158");
  addNodeById("3619281710184383929");
  addNodeById("3619281710184383915");
  this.init();
  TransformatorBuilder.getInstance().build(SNodeOperations.cast(getNodeById("4693929676428713100"),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b200L,"jetbrains.mps.baseLanguage.structure.StatementList")),false).transformEvaluator();
{
    List<SNode> nodesBefore=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(getNodeById("4693929676428713100"),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b200L,"jetbrains.mps.baseLanguage.structure.StatementList")));
    List<SNode> nodesAfter=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(getNodeById("4693929676428713079"),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b200L,"jetbrains.mps.baseLanguage.structure.StatementList")));
    Assert.assertNull("The nodes '" + nodesBefore + "' and '"+ nodesAfter+ "' do not match!",new NodesMatcher().match(nodesBefore,nodesAfter));
  }
  this.dispose();
}
