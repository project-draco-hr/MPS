{
  NonCancelableSection section=ProgressIndicatorProvider.startNonCancelableSectionIfSupported();
  try {
    for (    PsiJavaFile jf : myDataSource.getJavaFiles()) {
      SNode javaImports=getImports(jf.getImportList().getAllImportStatements());
      ASTConverter converter=new ASTConverter(myMps2PsiMapper);
      Set<SNodeId> roots=SetSequence.fromSet(new HashSet<SNodeId>());
      for (      PsiClass cls : jf.getClasses()) {
        SNode node=converter.convertClass(cls);
        if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.structure.Classifier")) {
          AttributeOperations.setAttribute(SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.Classifier"),new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.JavaImports")),javaImports);
        }
        myModel.addRootNode(node);
        SetSequence.fromSet(roots).addElement(node.getNodeId());
      }
      if (SetSequence.fromSet(roots).isNotEmpty()) {
        MapSequence.fromMap(myRootsPerFile).put(jf.getName(),roots);
      }
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
 finally {
    section.done();
  }
}
