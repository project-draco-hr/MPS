{
  String value=JOptionPane.showInputDialog(((Frame)MapSequence.fromMap(_params).get("frame")),"Enter node ID:","Find node in model " + SNodeOperations.getModelLongName(((SModel)MapSequence.fromMap(_params).get("CONTEXT_MODEL"))),JOptionPane.QUESTION_MESSAGE);
  if (value == null) {
    return;
  }
  value=((value == null ? null : value.trim()));
  final Wrappers._T<SNodeId> id=new Wrappers._T<SNodeId>(jetbrains.mps.smodel.SNodeId.fromString(value));
  if (id.value == null) {
    try {
      id.value=new IdEncoder().parseNodeId(value);
    }
 catch (    IdEncoder.EncodingException e) {
    }
  }
  if (id.value == null) {
    JOptionPane.showMessageDialog(((Frame)MapSequence.fromMap(_params).get("frame")),"Wrong node ID format " + value);
    return;
  }
  final String trimmedValue=value;
  ((MPSProject)MapSequence.fromMap(_params).get("project")).getModelAccess().runWriteInEDT(new Runnable(){
    public void run(){
      SNode node;
      node=((SModel)MapSequence.fromMap(_params).get("CONTEXT_MODEL")).getNode(id.value);
      if (node == null) {
        JOptionPane.showMessageDialog(((Frame)MapSequence.fromMap(_params).get("frame")),"Can't find node with id " + trimmedValue);
        return;
      }
      NavigationSupport.getInstance().openNode(((IOperationContext)MapSequence.fromMap(_params).get("context")),node,true,true);
    }
  }
);
}
