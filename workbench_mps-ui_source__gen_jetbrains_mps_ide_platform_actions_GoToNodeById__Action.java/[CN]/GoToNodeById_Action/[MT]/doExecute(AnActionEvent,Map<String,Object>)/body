{
  String value=JOptionPane.showInputDialog(((Frame)MapSequence.fromMap(_params).get("frame")),"Enter node ID:","Find node in model " + ((SModel)MapSequence.fromMap(_params).get("contextModel")).getName().getLongName(),JOptionPane.QUESTION_MESSAGE);
  if (value == null) {
    return;
  }
  final String trimmedValue=((value == null ? null : value.trim()));
  final Wrappers._T<SNodeId> id=new Wrappers._T<SNodeId>();
  try {
    id.value=PersistenceFacade.getInstance().createNodeId(trimmedValue);
  }
 catch (  IllegalArgumentException ex) {
    id.value=null;
  }
  if (id.value == null) {
    try {
      id.value=new IdEncoder().parseNodeId(trimmedValue);
    }
 catch (    IdEncoder.EncodingException e) {
    }
  }
  if (id.value == null) {
    JOptionPane.showMessageDialog(((Frame)MapSequence.fromMap(_params).get("frame")),"Wrong node ID format " + trimmedValue);
    return;
  }
  ((MPSProject)MapSequence.fromMap(_params).get("mpsProject")).getModelAccess().runReadAction(new Runnable(){
    public void run(){
      SNode node=((SModel)MapSequence.fromMap(_params).get("contextModel")).getNode(id.value);
      if (node == null) {
        JOptionPane.showMessageDialog(((Frame)MapSequence.fromMap(_params).get("frame")),"Can't find node with id " + trimmedValue);
        return;
      }
      new EditorNavigator(((MPSProject)MapSequence.fromMap(_params).get("mpsProject"))).shallFocus(true).shallSelect(true).open(node.getReference());
    }
  }
);
}
