{
  if (getBuffer().hasPositionsSupport()) {
    TraceInfoGenerationUtil.createUnitInfo(this,node);
  }
  BaseLanguageTextGen.blClassifierRef(SNodeOperations.getReference(node,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1170345865475l,1170346070688l,"classifier")),this);
  if (ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1170345865475l,1201186121363l,"typeParameter"))).isNotEmpty()) {
    this.append("<");
{
      Iterable<SNode> collection=SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1170345865475l,1201186121363l,"typeParameter"));
      final SNode lastItem=Sequence.fromIterable(collection).last();
      for (      SNode item : collection) {
        appendNode(item);
        if (item != lastItem) {
          append(", ");
        }
      }
    }
    this.append(">");
  }
  if (ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1170345865475l,1170346101385l,"parameter"))).isNotEmpty()) {
    this.append("(");
{
      Iterable<SNode> collection=SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1170345865475l,1170346101385l,"parameter"));
      final SNode lastItem=Sequence.fromIterable(collection).last();
      for (      SNode item : collection) {
        appendNode(item);
        if (item != lastItem) {
          append(", ");
        }
      }
    }
    this.append(")");
  }
 else {
    this.append("(");
{
      Iterable<SNode> collection=SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141038l,"actualArgument"));
      final SNode lastItem=Sequence.fromIterable(collection).last();
      for (      SNode item : collection) {
        appendNode(item);
        if (item != lastItem) {
          append(", ");
        }
      }
    }
    this.append(")");
  }
  this.append(" ");
  BaseClassConceptTextGen.membersWithBrackets(node,false,this);
  if (getBuffer().hasPositionsSupport()) {
{
      String unitName=null;
      try {
        unitName=BehaviorReflection.invokeVirtual(String.class,SNodeOperations.cast(node,MetaAdapterFactory.getInterfaceConcept(new UUID(-7066981744759912873l,-4622583950651520061l),5067982036267369892l,"jetbrains.mps.lang.traceable.structure.UnitConcept")),"virtual_getUnitName_5067982036267369911",new Object[]{});
      }
 catch (      Throwable t) {
        if (LOG.isEnabledFor(Level.ERROR)) {
          LOG.error("Can't calculate unit name for a node " + node + ".",t);
        }
      }
      TraceInfoGenerationUtil.fillUnitInfo(this,node,unitName);
    }
  }
}
