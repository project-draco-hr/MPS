{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x4c4b92003e49a704L,0x4c4b92003e49a705L,"baseVariableDeclaration"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x4c4b92003e49a704L,0x4c4b92003e49a705L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          SNode evaluator=SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(0x7da4580f9d754603L,0x816251a896d78375L,0x53c5060c6b18d925L,"jetbrains.mps.debugger.java.evaluation.structure.EvaluatorConcept"),false,false);
          if (SPropertyOperations.getBoolean(evaluator,MetaAdapterFactory.getProperty(0x7da4580f9d754603L,0x816251a896d78375L,0x53c5060c6b18d925L,0x53c5060c6b19c79bL,"isShowContext"))) {
            return SLinkOperations.getChildren(evaluator,MetaAdapterFactory.getContainmentLink(0x7da4580f9d754603L,0x816251a896d78375L,0x53c5060c6b18d925L,0x53c5060c6b19c797L,"variables"));
          }
          return ListSequence.fromList(SLinkOperations.getChildren(evaluator,MetaAdapterFactory.getContainmentLink(0x7da4580f9d754603L,0x816251a896d78375L,0x53c5060c6b18d925L,0x53c5060c6b19c797L,"variables"))).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return !(SPropertyOperations.getBoolean(it,MetaAdapterFactory.getProperty(0x7da4580f9d754603L,0x816251a896d78375L,0x53c5060c6b18d926L,0x554b4e03d5950431L,"isOutOfScope")));
            }
          }
);
        }
        @Override public ISearchScope createSearchScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return new ProviderGeneratedSearchScope(this,operationContext,_context){
            public boolean isInScope(            SNode checkedNode){
              return !(SPropertyOperations.getBoolean(checkedNode,MetaAdapterFactory.getProperty(0x7da4580f9d754603L,0x816251a896d78375L,0x53c5060c6b18d926L,0x554b4e03d5950431L,"isOutOfScope")));
            }
          }
;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_8w715n_a0a2a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
