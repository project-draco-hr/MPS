{
  super("Specify rule references in tests for tags 'has error' and 'has warning'");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Specify Rule References";
    }
    public String getAdditionalInfo(){
      return "Specify Rule References";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.core.structure.BaseConcept";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return (SpecifyUtil.getOperationsContainer(node) != null);
    }
    public void doUpdateInstanceNode(    SNode node){
      SpecifyUtil.fillContainerWithRuleMessages(node);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
