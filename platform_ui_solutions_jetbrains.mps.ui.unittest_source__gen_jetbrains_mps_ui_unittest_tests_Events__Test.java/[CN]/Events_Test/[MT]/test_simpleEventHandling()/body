{
  final Wrappers._T<String> volatileValue=new Wrappers._T<String>("notset");
  MockWidget mw=new _FunctionTypes._return_P0_E0<MockWidget>(){
    public MockWidget invoke(){
      final MockWidget widget_m32u4c_a0a0a0a1a0a=new MockWidget();
      widget_m32u4c_a0a0a0a1a0a.setProp("id","1234");
      widget_m32u4c_a0a0a0a1a0a.addEventHandler("foo",new MockEventHandler(){
        public void handle(        MockWidget wdg,        MockEvent event){
          new _FunctionTypes._return_P1_E0<String,MockEvent>(){
            public String invoke(            MockEvent event){
              return volatileValue.value=event.getProp("bar");
            }
          }
.invoke(event);
        }
      }
);
      return widget_m32u4c_a0a0a0a1a0a;
    }
  }
.invoke();
  MockEvent evt=new MockEvent();
  evt.setProp("bar","SET");
  Assert.assertEquals("notset",volatileValue.value);
  this.triggerEvent(mw,"foo",evt);
  Assert.assertEquals("SET",volatileValue.value);
}
