{
  SNode classifier=SLinkOperations.getTarget(clt,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1107535924139l,"classifier"));
  List<SNode> result=ListSequence.fromList(new ArrayList<SNode>());
  List<SNode> supertypes=ListSequence.fromList(new ArrayList<SNode>());
  if (SNodeOperations.isInstanceOf(classifier,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept"))) {
    SNode classConcept=SNodeOperations.cast(classifier,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    if (!((SLinkOperations.getTarget(classConcept,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,1165602531693l,"superclass")) == null))) {
      ListSequence.fromList(supertypes).addElement(SLinkOperations.getTarget(classConcept,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,1165602531693l,"superclass")));
    }
    ListSequence.fromList(supertypes).addSequence(ListSequence.fromList(SLinkOperations.getChildren(classConcept,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,1095933932569l,"implementedInterface"))));
  }
  if (SNodeOperations.isInstanceOf(classifier,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107796713796l,"jetbrains.mps.baseLanguage.structure.Interface"))) {
    SNode interfaceConcept=SNodeOperations.cast(classifier,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107796713796l,"jetbrains.mps.baseLanguage.structure.Interface"));
    ListSequence.fromList(supertypes).addSequence(ListSequence.fromList(SLinkOperations.getChildren(interfaceConcept,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1107796713796l,1107797138135l,"extendedInterface"))));
  }
  if (SNodeOperations.isInstanceOf(classifier,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1188206331916l,"jetbrains.mps.baseLanguage.structure.Annotation"))) {
    ListSequence.fromList(supertypes).addElement(_quotation_createNode_pgdy8e_a0a0a5a1());
  }
  if (ListSequence.fromList(supertypes).isEmpty()) {
    ListSequence.fromList(result).addElement(_quotation_createNode_pgdy8e_a0a0a6a1());
  }
  for (  SNode supertype : supertypes) {
    SNode supertypeCopy=SNodeOperations.cast(SNodeOperations.copyNode(supertype),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType"));
    for (    SNode typeParam : SLinkOperations.getChildren(supertypeCopy,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1109201940907l,"parameter"))) {
      List<SNode> descendants=ListSequence.fromList(SNodeOperations.getNodeDescendants(typeParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1109283449304l,"jetbrains.mps.baseLanguage.structure.TypeVariableReference"),true,new SAbstractConcept[]{})).toListSequence();
      for (      SNode typeVar : descendants) {
        int i=ListSequence.fromList(SLinkOperations.getChildren(classifier,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1109279851642l,1109279881614l,"typeVariableDeclaration"))).indexOf(SLinkOperations.getTarget(typeVar,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1109283449304l,1109283546497l,"typeVariableDeclaration")));
        if (i < 0) {
          continue;
        }
        if (i < ListSequence.fromList(SLinkOperations.getChildren(clt,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1109201940907l,"parameter"))).count()) {
          SNodeOperations.replaceWithAnother(typeVar,SNodeOperations.copyNode(ListSequence.fromList(SLinkOperations.getChildren(clt,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1109201940907l,"parameter"))).getElement(i)));
        }
 else {
          typeParam.delete();
        }
      }
    }
    ListSequence.fromList(result).addElement(supertypeCopy);
  }
  ListSequence.fromList(supertypes).addElement(clt);
  for (  SNode supertype : supertypes) {
    if (ListSequence.fromList(SLinkOperations.getChildren((SNodeOperations.cast(supertype,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType"))),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1109201940907l,"parameter"))).isNotEmpty()) {
      SNode erasure=SNodeOperations.cast(SNodeOperations.copyNode(supertype),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType"));
      for (      SNode parameter : SLinkOperations.getChildren(erasure,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1109201940907l,"parameter"))) {
        SNodeOperations.deleteNode(parameter);
      }
      ListSequence.fromList(result).addElement(erasure);
    }
  }
  return result;
}
