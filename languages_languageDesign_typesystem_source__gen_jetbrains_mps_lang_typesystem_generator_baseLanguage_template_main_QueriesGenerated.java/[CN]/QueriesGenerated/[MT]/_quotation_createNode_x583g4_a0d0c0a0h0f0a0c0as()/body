{
  SNode quotedNode_1=null;
  SNode quotedNode_2=null;
  quotedNode_1=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall",null,null,GlobalScope.getInstance(),false);
  quotedNode_1.setReference("baseMethodDeclaration",SReference.create("baseMethodDeclaration",quotedNode_1,SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.lang.typesystem.runtime(MPS.Core/jetbrains.mps.lang.typesystem.runtime@java_stub)"),SNodeId.fromString("~HUtil.copyIfNecessary(jetbrains.mps.smodel.SNode):jetbrains.mps.smodel.SNode")));
  quotedNode_1.setReference("classConcept",SReference.create("classConcept",quotedNode_1,SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.lang.typesystem.runtime(MPS.Core/jetbrains.mps.lang.typesystem.runtime@java_stub)"),SNodeId.fromString("~HUtil")));
  quotedNode_2=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NullLiteral",null,null,GlobalScope.getInstance(),false);
  quotedNode_1.addChild("actualArgument",quotedNode_2);
  return quotedNode_1;
}
