{
  this.addNodeById("2282909602806268543");
  this.addNodeById("2282909602806423211");
  Assert.assertTrue(ListSequence.<SNode>fromList(SLinkOperations.getTargets(SNodeOperations.cast(this.getNodeById("2282909602806268544"),"jetbrains.mps.lang.smodelTests.structure.Root"),"child_1_n",true)).count() > 1);
  int initialSize=ListSequence.<SNode>fromList(SLinkOperations.getTargets(SNodeOperations.cast(this.getNodeById("2282909602806268544"),"jetbrains.mps.lang.smodelTests.structure.Root"),"child_1_n",true)).count();
  SNode toInsert=SConceptOperations.createNewNode("jetbrains.mps.lang.smodelTests.structure.Child",null);
  int index=1;
  ListSequence.<SNode>fromList(SLinkOperations.getTargets(SNodeOperations.cast(this.getNodeById("2282909602806268544"),"jetbrains.mps.lang.smodelTests.structure.Root"),"child_1_n",true)).insertElement(index,toInsert);
  Assert.assertEquals(initialSize + 1,ListSequence.<SNode>fromList(SLinkOperations.getTargets(SNodeOperations.cast(this.getNodeById("2282909602806268544"),"jetbrains.mps.lang.smodelTests.structure.Root"),"child_1_n",true)).count());
  Assert.assertTrue(ListSequence.<SNode>fromList(SLinkOperations.getTargets(SNodeOperations.cast(this.getNodeById("2282909602806268544"),"jetbrains.mps.lang.smodelTests.structure.Root"),"child_1_n",true)).contains(toInsert));
  Assert.assertEquals(index,ListSequence.<SNode>fromList(SLinkOperations.getTargets(SNodeOperations.cast(this.getNodeById("2282909602806268544"),"jetbrains.mps.lang.smodelTests.structure.Root"),"child_1_n",true)).indexOf(toInsert));
}
