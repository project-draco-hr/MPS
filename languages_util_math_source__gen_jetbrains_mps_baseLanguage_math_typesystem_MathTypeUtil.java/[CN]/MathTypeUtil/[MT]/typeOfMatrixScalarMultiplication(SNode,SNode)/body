{
  SNode e=MathTypeUtil.getElementType(vT);
  if (TypeChecker.getInstance().getSubtypingManager().isSubtype(e,scalarType) && SNodeOperations.isInstanceOf(scalarType,"jetbrains.mps.baseLanguage.structure.Type")) {
    e=SNodeOperations.cast(scalarType,"jetbrains.mps.baseLanguage.structure.Type");
  }
{
    SNode matchedNode_i9t80i_c0l=vT;
{
      boolean matches_i9t80i_a2a11=false;
{
        SNode matchingNode_i9t80i_a2a11=vT;
        if (matchingNode_i9t80i_a2a11 != null) {
          matches_i9t80i_a2a11=SModelUtil_new.isAssignableConcept(matchingNode_i9t80i_a2a11.getConceptFqName(),"jetbrains.mps.baseLanguage.math.structure.MatrixType");
        }
      }
      if (matches_i9t80i_a2a11) {
{
          SNode result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.math.structure.MatrixType",null);
          SPropertyOperations.set(result,"rows","" + SPropertyOperations.getInteger(matchedNode_i9t80i_c0l,"rows"));
          SPropertyOperations.set(result,"columns","" + SPropertyOperations.getInteger(matchedNode_i9t80i_c0l,"columns"));
          SLinkOperations.setTarget(result,"elementType",e,true);
          return result;
        }
      }
 else {
        boolean matches_i9t80i_b2a11=false;
{
          SNode matchingNode_i9t80i_b2a11=vT;
          if (matchingNode_i9t80i_b2a11 != null) {
            matches_i9t80i_b2a11=SModelUtil_new.isAssignableConcept(matchingNode_i9t80i_b2a11.getConceptFqName(),"jetbrains.mps.baseLanguage.math.structure.VectorType");
          }
        }
        if (matches_i9t80i_b2a11) {
{
            SNode result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.math.structure.VectorType",null);
            SPropertyOperations.set(result,"height","" + SPropertyOperations.getInteger(matchedNode_i9t80i_c0l,"height"));
            SLinkOperations.setTarget(result,"elementType",e,true);
            return result;
          }
        }
 else         return null;
      }
    }
  }
}
