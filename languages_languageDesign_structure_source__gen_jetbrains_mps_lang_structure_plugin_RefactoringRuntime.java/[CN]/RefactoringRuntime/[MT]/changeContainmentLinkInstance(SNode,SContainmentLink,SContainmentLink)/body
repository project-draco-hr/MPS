{
  Iterable<SNode> attributes=(Iterable<SNode>)node.getChildren(MetaAdapterFactory.getContainmentLink(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x10802efe25aL,0x47bf8397520e5942L,"smodelAttribute"));
  Sequence.fromIterable(SNodeOperations.ofConcept(attributes,MetaAdapterFactory.getConcept(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x9d98713f247885aL,"jetbrains.mps.lang.core.structure.ChildAttribute"))).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return ChildAttribute_Behavior.call_getLink_709746936026609871(it).equals(oldLink);
    }
  }
).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode it){
      ChildAttribute_Behavior.call_setLink_709746936026609906(it,newLink);
    }
  }
);
  List<SNode> children=ListSequence.fromListWithValues(new ArrayList<SNode>(),(Iterable<SNode>)node.getChildren(oldLink));
  for (  SNode child : ListSequence.fromList(children)) {
    node.removeChild(child);
    node.addChild(newLink,child);
  }
}
