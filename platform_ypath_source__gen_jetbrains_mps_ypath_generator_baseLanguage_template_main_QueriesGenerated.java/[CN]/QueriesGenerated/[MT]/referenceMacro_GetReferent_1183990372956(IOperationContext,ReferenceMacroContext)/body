{
  SNode fun=SNodeOperations.getAncestor(_context.getNode(),"jetbrains.mps.baseLanguage.structure.ConceptFunction",false,false);
  SNode body=_context.getGenerator().findOutputNodeByInputNodeAndMappingName(SLinkOperations.getTarget(fun,"body",true),"function_body");
  SNode imd=SNodeOperations.getAncestor(body,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration",false,false);
  return SequenceOperations.getFirst(SequenceOperations.where(SLinkOperations.getTargets(imd,"parameter",true),new zPredicate3(null,null)));
}
