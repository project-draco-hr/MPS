{
  SNode feature=SNodeOperations.getAncestor(_context.getNode(),"jetbrains.mps.ypath.structure.IFeature",false,false);
  SNode featureClass=_context.getOutputNodeByInputNodeAndMappingLabel(feature,"feature_class");
  return ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(featureClass,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"field",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SPropertyOperations.getString(it,"name").equals("param");
    }
  }
).first();
}
