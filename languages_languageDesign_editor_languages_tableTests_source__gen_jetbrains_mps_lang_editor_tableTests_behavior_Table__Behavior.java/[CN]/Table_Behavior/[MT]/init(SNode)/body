{
  for (int i=0; i < BehaviorReflection.invokeVirtualStatic(Integer.TYPE,SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SNodeOperations.getConceptDeclaration(thisNode))),"virtual_getInitialRowCount_1262430001741498094",new Object[]{}); i++) {
    SNode row=SConceptOperations.createNewNode("jetbrains.mps.lang.editor.tableTests.structure.Row",null);
    for (int j=0; j < BehaviorReflection.invokeVirtualStatic(Integer.TYPE,SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SNodeOperations.getConceptDeclaration(thisNode))),"virtual_getInitialColumnCount_1262430001741498026",new Object[]{}); j++) {
      SNode dataCell=SConceptOperations.createNewNode("jetbrains.mps.lang.editor.tableTests.structure.DataCell",null);
      SPropertyOperations.set(dataCell,MetaAdapterFactory.getProperty(new UUID(-2339732263353565073l,-4798597720271785646l),2882388703616155300l,2882388703616155301l,"value"),"$" + i + " "+ j+ "$");
      ListSequence.fromList(SLinkOperations.getChildren(row,MetaAdapterFactory.getContainmentLink(new UUID(-2339732263353565073l,-4798597720271785646l),2882388703616155302l,2882388703616155303l,"cells"))).addElement(dataCell);
    }
    ListSequence.fromList(SLinkOperations.getChildren(thisNode,MetaAdapterFactory.getContainmentLink(new UUID(-2339732263353565073l,-4798597720271785646l),2882388703616155296l,2882388703616155298l,"rows"))).addElement(row);
  }
}
