{
  if (!USE_POSTPONED_REFERENCES) {
    ArrayList<ReferenceInfo> referenceInfos=myReferenceInfos;
    ArrayList<ReferenceInfo> newReferenceInfos=new ArrayList<ReferenceInfo>(referenceInfos.size());
    for (    ReferenceInfo referenceInfo : referenceInfos) {
      checkMonitorCanceled();
      SNode outputTargetNode=referenceInfo.executeIndependentResolve(this);
      if (outputTargetNode == null) {
        newReferenceInfos.add(referenceInfo);
      }
 else {
        referenceInfo.getOutputNode().setReferent(referenceInfo.getReferenceRole(),outputTargetNode);
      }
    }
    referenceInfos=newReferenceInfos;
    newReferenceInfos=new ArrayList<ReferenceInfo>(referenceInfos.size());
    while (true) {
      checkMonitorCanceled();
      for (      ReferenceInfo referenceInfo : referenceInfos) {
        SNode outputTargetNode=referenceInfo.executeDependentResolve(this);
        if (outputTargetNode == null) {
          if (referenceInfo.isRequired()) {
            newReferenceInfos.add(referenceInfo);
          }
        }
 else {
          referenceInfo.getOutputNode().setReferent(referenceInfo.getReferenceRole(),outputTargetNode);
        }
      }
      if (newReferenceInfos.size() == 0 || newReferenceInfos.size() == referenceInfos.size()) {
        break;
      }
      referenceInfos=newReferenceInfos;
      newReferenceInfos=new ArrayList<ReferenceInfo>(referenceInfos.size());
    }
    for (    ReferenceInfo unresolvedReferenceInfo : newReferenceInfos) {
      checkMonitorCanceled();
      SNode outputTargetNode=unresolvedReferenceInfo.resolveAnyhow(this);
      if (outputTargetNode == null) {
        unresolvedReferenceInfo.showErrorMessage(this);
      }
 else {
        unresolvedReferenceInfo.getOutputNode().setReferent(unresolvedReferenceInfo.getReferenceRole(),outputTargetNode);
      }
    }
  }
  if (USE_POSTPONED_REFERENCES) {
    List<SNode> roots=getTargetModel().getRoots();
    for (    SNode root : roots) {
      replacePostponedReferences(root);
    }
  }
}
