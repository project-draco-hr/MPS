{
  long len=System.nanoTime() - myStack[top].startTime;
  long correction=myStack[top].correction;
  if (myStack[top].isMajor) {
    for (int i=0; i < top; i++) {
      myStack[i].correction+=len - correction;
    }
  }
  String name=myStack[top].name;
  Task wasTask=myStack[top].task;
  if (!myStack[top].children.isEmpty()) {
    if (wasTask == null) {
      wasTask=getTask(top);
    }
    wasTask.tasks.addAll(myStack[top].children.values());
    myStack[top].children.clear();
  }
  if (wasTask == null) {
    myStack[top - 1].addLeaf(name,len,correction);
  }
 else {
    wasTask.executionTime+=len;
    wasTask.correction+=correction;
  }
  myStack[top].task=null;
  top--;
}
