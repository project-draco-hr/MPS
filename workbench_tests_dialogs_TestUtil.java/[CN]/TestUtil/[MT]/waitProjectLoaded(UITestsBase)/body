{
  final Project[] ideaProject=new Project[]{null};
  Project[] projects=ProjectManager.getInstance().getOpenProjects();
  if (projects.length != 0) {
    ideaProject[0]=projects[0];
  }
 else {
    final Project[] project=new Project[]{null};
    final ProjectManager manager=ProjectManager.getInstance();
    manager.addProjectManagerListener(new ProjectManagerAdapter(){
      @Override public void projectOpened(      Project p){
        manager.removeProjectManagerListener(this);
        project[0]=p;
      }
    }
);
    conditionalWaitAndFlush(test,new Computable<Boolean>(){
      public Boolean compute(){
        return project[0] != null;
      }
    }
);
    ideaProject[0]=project[0];
  }
  conditionalWaitAndFlush(test,new Computable<Boolean>(){
    public Boolean compute(){
      return ideaProject[0].getComponent(MPSProjectHolder.class) != null;
    }
  }
);
  final boolean[] loaded=new boolean[]{false};
  StartupManager.getInstance(ideaProject[0]).registerPostStartupActivity(new Runnable(){
    public void run(){
      loaded[0]=true;
    }
  }
);
  conditionalWaitAndFlush(test,new Computable<Boolean>(){
    public Boolean compute(){
      return loaded[0];
    }
  }
);
  DialogFinder finder=new DialogFinder(".*Tip of the Day.*",true);
  finder.setWait(10);
  Component dialog=finder.find();
  if (dialog != null) {
    test.pressButton(dialog,"Close");
  }
  return ideaProject[0].getComponent(MPSProjectHolder.class).getMPSProject();
}
