{
  SNode contextNode=editorContext.getSelectedNode();
  if (contextNode == null) {
    return true;
  }
  SNode containingClassifier=SNodeOperations.getNodeAncestor(contextNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"),false,false);
  if (!(SNodeOperations.isInstanceOf(containingClassifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")))) {
    return false;
  }
  List<SNode> includingStatementLists=SNodeOperations.getNodeAncestors(contextNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b200L,"jetbrains.mps.baseLanguage.structure.StatementList"),true);
  Iterable<SNode> includingBodies=ListSequence.fromList(includingStatementLists).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.hasRole(it,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1ffL,"body"));
    }
  }
);
  return Sequence.fromIterable(includingBodies).isEmpty();
}
