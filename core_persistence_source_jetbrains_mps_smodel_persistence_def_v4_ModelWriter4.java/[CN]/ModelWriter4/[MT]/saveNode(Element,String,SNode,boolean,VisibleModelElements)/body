{
  String theElementName=elementName;
  if (theElementName == null) {
    theElementName=ModelPersistence.NODE;
  }
  int modelVersion=VersionUtil.getNodeLanguageVersion(node);
  Element element=new Element(theElementName);
  final String role=node.getRoleInParent();
  DocUtil.setNotNullAttribute(element,ModelPersistence.ROLE,VersionUtil.formVersionedString(role,VersionUtil.getRoleVersion(node)));
  element.setAttribute(ModelPersistence.TYPE,VersionUtil.formVersionedString(node.getConcept().getId(),modelVersion));
  element.setAttribute(ModelPersistence.ID,node.getNodeId().toString());
  Map<String,String> properties=jetbrains.mps.util.SNodeOperations.getProperties(node);
  Set<String> keys=properties.keySet();
  for (  String propertyName : keys) {
    Element propertyElement=new Element(ModelPersistence.PROPERTY);
    element.addContent(propertyElement);
    propertyElement.setAttribute(ModelPersistence.NAME,VersionUtil.formVersionedString(propertyName,modelVersion));
    DocUtil.setNotNullAttribute(propertyElement,ModelPersistence.VALUE,node.getProperty(propertyName));
  }
  IReferencePersister referencePersister=getReferencePersister();
  for (  SReference reference : node.getReferences()) {
    referencePersister.saveReference(element,reference,useUIDs,visibleModelElements);
  }
  for (  SNode childNode : node.getChildren()) {
    saveNode(element,null,childNode,useUIDs,visibleModelElements);
  }
  parentElement.addContent(element);
}
