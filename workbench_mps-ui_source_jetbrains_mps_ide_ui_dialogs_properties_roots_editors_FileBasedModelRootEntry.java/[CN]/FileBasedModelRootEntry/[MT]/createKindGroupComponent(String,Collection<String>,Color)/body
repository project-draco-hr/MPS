{
  final JBPanel panel=new JBPanel(new GridLayoutManager(files.size(),3,new JBInsets(1,17,0,2),0,1));
  panel.setOpaque(false);
  int idx=0;
  for (  String file : files) {
    final int verticalPolicy=idx == files.size() - 1 ? GridConstraints.SIZEPOLICY_CAN_GROW : GridConstraints.SIZEPOLICY_FIXED;
    panel.add(createKindFileComponent(file.replace(myFileBasedModelRoot.getContentRoot(),"").replaceFirst(File.separator,""),foregroundColor),new GridConstraints(idx,0,1,1,GridConstraints.ANCHOR_NORTHWEST,GridConstraints.FILL_HORIZONTAL,GridConstraints.SIZEPOLICY_CAN_GROW | GridConstraints.SIZEPOLICY_CAN_SHRINK,verticalPolicy,null,null,null));
    int column=1;
    int colspan=2;
    panel.add(createKindFileDeleteComponent(file),new GridConstraints(idx,column,1,colspan,GridConstraints.ANCHOR_EAST,GridConstraints.FILL_NONE,GridConstraints.SIZEPOLICY_FIXED,verticalPolicy,null,null,null));
    idx++;
  }
  final JLabel titleLabel=new JLabel(title);
  final Font labelFont=UIUtil.getLabelFont();
  titleLabel.setFont(labelFont.deriveFont(Font.BOLD));
  titleLabel.setOpaque(false);
  titleLabel.setBorder(BorderFactory.createEmptyBorder(0,2,0,0));
  registerTextComponent(titleLabel,foregroundColor);
  final JBPanel groupPanel=new JBPanel(new BorderLayout());
  groupPanel.setOpaque(false);
  groupPanel.add(titleLabel,BorderLayout.NORTH);
  groupPanel.add(panel,BorderLayout.CENTER);
  return groupPanel;
}
