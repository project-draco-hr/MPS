{
  EditorComponent editor=getEditorContext().getNodeEditorComponent();
  EditorCell referenceCell=editor.findNodeCellWithRole(mySourceNode,myLinkDeclaration.getRole());
  if (referenceCell != null && referenceCell.isFirstPositionInBigCell() && ReferenceConceptUtil.getCharacteristicReference(mySourceNode.getConceptDeclarationAdapter()) == myLinkDeclaration && mySourceNode.getParent() != null) {
    SNode parent=mySourceNode.getParent();
    String role=mySourceNode.getRole_();
    LinkDeclaration roleLink=parent.getLinkDeclaration(role);
    return ModelActions.createChildSubstituteActions(parent,mySourceNode,roleLink.getTarget().getNode(),new DefaultChildNodeSetter(roleLink),getOperationContext());
  }
  return ModelActions.createReferentSubstituteActions(mySourceNode,myCurrentReferent,myLinkDeclaration,getOperationContext());
}
