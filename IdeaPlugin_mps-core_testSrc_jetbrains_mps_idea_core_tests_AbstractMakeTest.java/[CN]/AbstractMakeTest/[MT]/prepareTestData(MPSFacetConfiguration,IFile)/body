{
  final ModuleRootManager mrm=ModuleRootManager.getInstance(configuration.getFacet().getModule());
  ApplicationManager.getApplication().runWriteAction(new Runnable(){
    @Override public void run(){
      Sdk jdk=ProjectJdkTable.getInstance().findJdk("JDK");
      if (jdk != null) {
        ProjectJdkTable.getInstance().removeJdk(jdk);
      }
      ProjectJdkTable.getInstance().addJdk(jdk=getTestJdk());
      ModifiableRootModel mm=mrm.getModifiableModel();
      ProjectRootManager.getInstance(myModule.getProject()).setProjectSdk(jdk);
      mm.inheritSdk();
      VirtualFileSystem vfs=VirtualFileManager.getInstance().getFileSystem("file");
      VirtualFile project=vfs.findFileByPath(source.getParent().getPath());
      try {
        ContentEntry ce=mm.addContentEntry(project);
        VirtualFile contentRoot=project.findChild(source.getName());
        if (contentRoot == null)         contentRoot=project.createChildDirectory(AbstractMakeTest.this,source.getName());
        ce.addSourceFolder(contentRoot,false);
      }
 catch (      IOException e) {
      }
      mm.commit();
      CompilerModuleExtension cme=CompilerModuleExtension.getInstance(myModule);
      CompilerModuleExtension cmemm=(CompilerModuleExtension)cme.getModifiableModel(true);
      cmemm.setCompilerOutputPath(project.getUrl() + "/classes");
      cmemm.setCompilerOutputPathForTests(project.getUrl() + "/classes");
      cmemm.inheritCompilerOutputPath(false);
      cmemm.commit();
      Disposer.dispose(cmemm);
      vfs.refresh(false);
    }
  }
);
}
