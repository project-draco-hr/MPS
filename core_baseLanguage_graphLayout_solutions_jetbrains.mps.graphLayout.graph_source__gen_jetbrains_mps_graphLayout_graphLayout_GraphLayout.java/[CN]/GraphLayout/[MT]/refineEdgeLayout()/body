{
  for (  Edge edge : SetSequence.fromSet(MapSequence.fromMap(myEdgeLayout).keySet())) {
    Rectangle rect=MapSequence.fromMap(myNodeLayout).get(edge.getSource());
    List<Point> path=MapSequence.fromMap(myEdgeLayout).get(edge);
    Point p=moveToBorder(rect,ListSequence.fromList(path).getElement(0),ListSequence.fromList(path).getElement(1));
    if (p != null) {
      ListSequence.fromList(path).setElement(0,p);
    }
    rect=MapSequence.fromMap(myNodeLayout).get(edge.getTarget());
    p=moveToBorder(rect,ListSequence.fromList(path).getElement(ListSequence.fromList(path).count() - 1),ListSequence.fromList(path).getElement(ListSequence.fromList(path).count() - 2));
    if (p != null) {
      ListSequence.fromList(path).setElement(ListSequence.fromList(path).count() - 1,p);
    }
  }
  for (  List<Point> path : Sequence.fromIterable(MapSequence.fromMap(myEdgeLayout).values())) {
    boolean ver=ListSequence.fromList(path).getElement(0).x == ListSequence.fromList(path).getElement(1).x;
    int i=2;
    while (i < ListSequence.fromList(path).count()) {
      boolean curVer=ListSequence.fromList(path).getElement(i - 1).x == ListSequence.fromList(path).getElement(i).x;
      if (curVer == ver) {
        ListSequence.fromList(path).removeElementAt(i - 1);
      }
 else {
        i++;
        ver=curVer;
      }
    }
  }
}
