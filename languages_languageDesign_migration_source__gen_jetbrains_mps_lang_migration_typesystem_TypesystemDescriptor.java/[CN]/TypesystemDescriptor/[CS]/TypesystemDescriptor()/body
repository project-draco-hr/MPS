{
{
    InferenceRule_Runtime inferenceRule=new typeof_DataDependency_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    InferenceRule_Runtime inferenceRule=new typeof_DataDependencyReference_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    InferenceRule_Runtime inferenceRule=new typeof_LinkPatternVariableReference_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    InferenceRule_Runtime inferenceRule=new typeof_ListPatternVariableReference_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    InferenceRule_Runtime inferenceRule=new typeof_NodePatternVariableReference_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    InferenceRule_Runtime inferenceRule=new typeof_PropertyPatternVariableReference_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    InferenceRule_Runtime inferenceRule=new typeof_TransformStatement_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    NonTypesystemRule_Runtime nonTypesystemRule=new MigrationScriptCycles_NonTypesystemRule();
    this.myNonTypesystemRules.add(nonTypesystemRule);
  }
{
    NonTypesystemRule_Runtime nonTypesystemRule=new MigrationScriptVersions_NonTypesystemRule();
    this.myNonTypesystemRules.add(nonTypesystemRule);
  }
{
    NonTypesystemRule_Runtime nonTypesystemRule=new checkIncludeCycles_NonTypesystemRule();
    this.myNonTypesystemRules.add(nonTypesystemRule);
  }
{
    NonTypesystemRule_Runtime nonTypesystemRule=new check_NodeReference_NonTypesystemRule();
    this.myNonTypesystemRules.add(nonTypesystemRule);
  }
}
