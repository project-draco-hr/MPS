{
  SNode nodeToMoveDeclaration=SModelUtil.findConceptDeclaration(nodeToMove.getConceptFqName(),scope);
  SNode conceptDeclaration=SModelUtil.findConceptDeclaration(targetNode.getConceptFqName(),scope);
  String roleInParent=null;
  for (  SNode abstractConceptDeclaration : SModelUtil_new.getConceptAndSuperConcepts(conceptDeclaration)) {
    for (    LinkDeclaration linkDeclaration : ((AbstractConceptDeclaration)abstractConceptDeclaration.getAdapter()).getLinkDeclarations()) {
      if (linkDeclaration.getMetaClass() == LinkMetaclass.reference)       continue;
      AbstractConceptDeclaration targetConcept=linkDeclaration.getTarget();
      if (SModelUtil.isAssignableConcept(nodeToMoveDeclaration,BaseAdapter.fromAdapter(targetConcept))) {
        roleInParent=linkDeclaration.getRole();
        break;
      }
    }
  }
  return roleInParent;
}
