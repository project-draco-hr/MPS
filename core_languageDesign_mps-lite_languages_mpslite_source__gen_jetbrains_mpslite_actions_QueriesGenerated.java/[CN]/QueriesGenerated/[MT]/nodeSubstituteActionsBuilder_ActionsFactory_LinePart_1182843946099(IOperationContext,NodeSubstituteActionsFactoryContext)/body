{
  List<INodeSubstituteAction> result=new ArrayList<INodeSubstituteAction>();
{
    AbstractConceptDeclaration outputConcept=SModelUtil_new.findAbstractConceptDeclaration("jetbrains.mpslite.structure.ConstantLinePart",operationContext.getScope());
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(childConcept,NameUtil.nodeFQName((SNode)BaseAdapter.fromAdapter(outputConcept)))) {
      result.add(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter(),operationContext.getScope()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode part=SModelOperations.createNewNode(model,"jetbrains.mpslite.structure.ConstantLinePart",null);
          SPropertyOperations.set(part,"text",pattern.substring(1));
          return part;
        }
        public boolean hasSubstitute(){
          return true;
        }
        public boolean canSubstitute_internal(        String pattern){
          return pattern.startsWith("/");
        }
        public String getDescriptionText(        String pattern){
          return "";
        }
        public String getMatchingText(        String pattern){
          return "/constant text";
        }
      }
);
    }
  }
  return result;
}
