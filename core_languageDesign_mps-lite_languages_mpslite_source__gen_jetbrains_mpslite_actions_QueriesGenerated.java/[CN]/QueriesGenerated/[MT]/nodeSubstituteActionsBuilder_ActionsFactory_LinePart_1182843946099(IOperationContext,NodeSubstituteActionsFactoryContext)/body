{
  List<INodeSubstituteAction> result=new ArrayList<INodeSubstituteAction>();
{
    ConceptDeclaration concept=SModelUtil_new.findConceptDeclaration("jetbrains.mpslite.structure.ConstantLinePart",operationContext.getScope());
    result.add(new DefaultSimpleSubstituteAction(concept,_parameterObject.getParentNode(),_parameterObject.getCurrentTargetNode(),_parameterObject.getChildSetter(),operationContext.getScope()){
      public SNode createChildNode(      Object parameterObject,      SModel model,      String pattern){
        SNode part=SModelOperations.createNewNode(model,"jetbrains.mpslite.structure.ConstantLinePart",null);
        SPropertyOperations.set(part,"text",pattern.substring(1));
        return part;
      }
      public boolean hasSubstitute(){
        return true;
      }
      public boolean canSubstitute_internal(      String pattern){
        return pattern.startsWith("/");
      }
      public String getDescriptionText(      String pattern){
        return "";
      }
      public String getMatchingText(      String pattern){
        return "/constant text";
      }
    }
);
  }
  return result;
}
