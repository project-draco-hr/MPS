{
  List<INodeSubstituteAction> result=new ArrayList<INodeSubstituteAction>();
{
    SNode conceptToAdd=SConceptOperations.findConceptDeclaration("jetbrains.mpslite.structure.AddEquationStatement");
    List<INodeSubstituteAction> defaultActions=ChildSubstituteActionsHelper.createDefaultActions(conceptToAdd,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter(),operationContext);
    result.addAll(defaultActions);
  }
{
    SNode conceptToAdd=SConceptOperations.findConceptDeclaration("jetbrains.mpslite.structure.AddInequationStatement");
    List<INodeSubstituteAction> defaultActions=ChildSubstituteActionsHelper.createDefaultActions(conceptToAdd,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter(),operationContext);
    result.addAll(defaultActions);
  }
{
    SNode conceptToAdd=SConceptOperations.findConceptDeclaration("jetbrains.mpslite.structure.AddComparableConstraintStatement");
    List<INodeSubstituteAction> defaultActions=ChildSubstituteActionsHelper.createDefaultActions(conceptToAdd,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter(),operationContext);
    result.addAll(defaultActions);
  }
{
    SNode conceptToAdd=SConceptOperations.findConceptDeclaration("jetbrains.mpslite.structure.ReportErrorStatement");
    List<INodeSubstituteAction> defaultActions=ChildSubstituteActionsHelper.createDefaultActions(conceptToAdd,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter(),operationContext);
    result.addAll(defaultActions);
  }
  return result;
}
