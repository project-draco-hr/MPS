{
  return TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(),"leftExpression",true)),new _Quotations.QuotationClass_5().createNode()) && SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(),"rightExpression",true)),"jetbrains.mps.samples.complex.structure.ComplexType");
}
