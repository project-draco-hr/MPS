{
  SNode node=ListSequence.fromList(this.myNodesToRefactor).first();
  while (node != null) {
    if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration")) {
      return node;
    }
    if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.structure.ConceptFunction")) {
      return node;
    }
    node=SNodeOperations.getParent(node);
  }
  throw new IllegalStateException("can't be applied in this case");
}
