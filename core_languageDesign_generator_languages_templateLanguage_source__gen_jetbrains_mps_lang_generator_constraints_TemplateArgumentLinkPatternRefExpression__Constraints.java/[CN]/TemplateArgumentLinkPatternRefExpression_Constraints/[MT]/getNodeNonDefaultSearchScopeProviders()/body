{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("patternVar",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      List<SNode> result=new ArrayList<SNode>();
      SNode rule=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.lang.generator.structure.PatternReduction_MappingRule",false,false);
      if ((rule != null) && (SLinkOperations.getTarget(rule,"pattern",true) != null)) {
        ListSequence.fromList(result).addSequence(ListSequence.fromList(SNodeOperations.getDescendants(SLinkOperations.getTarget(rule,"pattern",true),"jetbrains.mps.lang.pattern.structure.LinkPatternVariableDeclaration",false,new String[]{})));
      }
      return result;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c895902e2(jetbrains.mps.lang.generator.constraints)","4816349095291149871");
    }
  }
);
  return result;
}
