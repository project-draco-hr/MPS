{
  if (!(SNodeOperations.isInstanceOf(IOperation_Behavior.call_getOperand_1213877410070(thisNode),"jetbrains.mps.baseLanguage.structure.ThisExpression"))) {
    return false;
  }
  if (ListSequence.fromList(SLinkOperations.getTargets(thisNode,"typeArgument",true)).isNotEmpty()) {
    return false;
  }
  if (SLinkOperations.getTarget(SNodeOperations.cast(IOperation_Behavior.call_getOperand_1213877410070(thisNode),"jetbrains.mps.baseLanguage.structure.ThisExpression"),"classConcept",false) == null) {
    return true;
  }
  SNode declaration=SLinkOperations.getTarget(thisNode,"baseMethodDeclaration",false);
  SNode classifier=ClassConcept_Behavior.call_getContextClass_8008512149545173402(SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassConcept"))),thisNode);
  SNode declarationClassifier=SNodeOperations.getAncestor(declaration,"jetbrains.mps.baseLanguage.structure.Classifier",false,false);
  if (!(classifier == declarationClassifier || ListSequence.fromList(SNodeOperations.getAncestors(classifier,null,false)).contains(declarationClassifier))) {
    return false;
  }
  while (classifier != declarationClassifier) {
    for (    SNode method : Members.visibleInstanceMethods(BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),classifier,"virtual_getThisType_7405920559687254782",new Object[]{}),thisNode)) {
      if (SPropertyOperations.getString(method,"name").equals(SPropertyOperations.getString(declaration,"name"))) {
        return false;
      }
    }
    classifier=SNodeOperations.getAncestor(classifier,"jetbrains.mps.baseLanguage.structure.Classifier",false,false);
  }
  return true;
}
