{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("facet",new BaseReferenceConstraintsDescriptor("facet",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return ListSequence.fromList(SModelOperations.getNodesIncludingImported(_context.getModel(),operationContext.getScope(),"jetbrains.mps.make.facet.structure.FacetDeclaration")).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode fd){
              return !(fd == _context.getEnclosingNode());
            }
          }
);
        }
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_9mk1l7_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
