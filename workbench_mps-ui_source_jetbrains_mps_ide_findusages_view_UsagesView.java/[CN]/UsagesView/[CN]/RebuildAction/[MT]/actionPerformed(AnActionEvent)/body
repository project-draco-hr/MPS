{
  final Project mpsProject=myView.myProject;
  Iterable<IResource> makeRes=new ModelAccessHelper(mpsProject.getModelAccess()).runReadAction(new Computable<Iterable<IResource>>(){
    @Override public Iterable<IResource> compute(){
      List<SModel> models=new ArrayList<SModel>();
      for (      SModel modelDescriptor : myView.getIncludedModels()) {
        if (GenerationFacade.canGenerate(modelDescriptor)) {
          models.add(modelDescriptor);
        }
      }
      return new ModelsToResources(models).resources(false);
    }
  }
);
  if (myMakeSession.compareAndSet(null,new MakeSession(mpsProject,new DefaultMakeMessageHandler(mpsProject),false))) {
    try {
      if (IMakeService.INSTANCE.get().openNewSession(myMakeSession.get())) {
        IMakeService.INSTANCE.get().make(myMakeSession.get(),makeRes);
      }
    }
  finally {
      myMakeSession.set(null);
    }
  }
}
