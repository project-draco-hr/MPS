{
  super(project,"Migration In Progress",(searchBrokenReferences ? ID : ID_fallback));
  myManager=manager;
  myErrorContainer=errorContainer;
  myInitialStep=initialStep;
  mySearchBrokenReferences=searchBrokenReferences;
  this.myTask=new Task.Modal(project,"Migration progress",false){
    public void run(    @NotNull ProgressIndicator progress){
      PersistenceRegistry.getInstance().disableFastFindUsages();
      try {
        doRun(progress);
      }
 catch (      Throwable t) {
        addElementToMigrationList("Finished with exception");
        if (LOG.isEnabledFor(Level.ERROR)) {
          LOG.error("exception occurred on migration",t);
        }
      }
 finally {
        myIsComplete=true;
        setFraction(progress,1.0);
        myProgress.setText("Finished");
        PersistenceRegistry.getInstance().enableFastFindUsages();
      }
    }
  }
;
}
