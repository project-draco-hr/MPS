{
  Map<ASMTypeVariable,TypeVariableDeclaration> typeVars=new HashMap<ASMTypeVariable,TypeVariableDeclaration>();
  for (  ASMTypeVariable tv : method.getTypeParameters()) {
    TypeVariableDeclaration typeVariableDeclaration=TypeVariableDeclaration.newInstance(model);
    typeVariableDeclaration.setName(tv.getName());
    result.addTypeVariableDeclaration(typeVariableDeclaration);
    typeVars.put(tv,typeVariableDeclaration);
  }
  for (  ASMTypeVariable tv : method.getTypeParameters()) {
    TypeVariableDeclaration typeVariableDeclaration=typeVars.get(tv);
    if (tv instanceof ASMFormalTypeParameter) {
      ASMFormalTypeParameter tp=(ASMFormalTypeParameter)tv;
      if (tp.getClassBound() != null) {
        typeVariableDeclaration.setBound(getTypeByASMType(tp.getClassBound(),result,cls,model));
      }
      for (      ASMType act : tp.getInterfaceBounds()) {
        typeVariableDeclaration.addAuxBounds((ClassifierType)getTypeByASMType(act,result,cls,model));
      }
    }
  }
}
