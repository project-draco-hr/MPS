{
  Map<Node,Map<Direction2D,Integer>> nodeDirectionSizes=MapSequence.<Node,Map<Direction2D,Integer>>fromMap(new HashMap<Node,Map<Direction2D,Integer>>());
  for (  Node node : ListSequence.<Node>fromList(oldNodes)) {
    Map<Direction2D,Integer> directionSizes=MapSequence.<Direction2D,Integer>fromMap(new HashMap<Direction2D,Integer>());
    Dimension size=MapSequence.<Node,Dimension>fromMap(nodeSizes).get(node);
    int horSize=size.height;
    MapSequence.<Direction2D,Integer>fromMap(directionSizes).put(Direction2D.UP,horSize / 2);
    MapSequence.<Direction2D,Integer>fromMap(directionSizes).put(Direction2D.DOWN,horSize - MapSequence.<Direction2D,Integer>fromMap(directionSizes).get(Direction2D.UP));
    int verSize=size.width;
    MapSequence.<Direction2D,Integer>fromMap(directionSizes).put(Direction2D.LEFT,verSize / 2);
    MapSequence.<Direction2D,Integer>fromMap(directionSizes).put(Direction2D.RIGHT,verSize - MapSequence.<Direction2D,Integer>fromMap(directionSizes).get(Direction2D.LEFT));
    MapSequence.<Node,Map<Direction2D,Integer>>fromMap(nodeDirectionSizes).put(node,directionSizes);
  }
  return nodeDirectionSizes;
}
