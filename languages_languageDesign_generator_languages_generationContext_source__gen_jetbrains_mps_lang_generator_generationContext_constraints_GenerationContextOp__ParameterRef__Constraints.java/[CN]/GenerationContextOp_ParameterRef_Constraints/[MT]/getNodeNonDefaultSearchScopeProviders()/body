{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("parameter",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      List<SNode> result=new ArrayList<SNode>();
      SNode templDeclaration=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.lang.generator.structure.TemplateDeclaration",false,false);
      if ((templDeclaration != null) && ListSequence.fromList(SLinkOperations.getTargets(templDeclaration,"parameter",true)).isNotEmpty()) {
        ListSequence.fromList(result).addSequence(ListSequence.fromList(SLinkOperations.getTargets(templDeclaration,"parameter",true)));
      }
      return result;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c895902ee(jetbrains.mps.lang.generator.generationContext.constraints)","5190093307972812910");
    }
  }
);
  return result;
}
