{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("parameter",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      return ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.getAncestor(_context.getReferenceNode(),"jetbrains.mps.lang.refactoring.structure.Refactoring",false,false),"parameter",true)).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it,"chooser",true),"jetbrains.mps.lang.refactoring.structure.MPSParameterChooser");
        }
      }
);
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c89590313(jetbrains.mps.lang.refactoring.constraints)","4312073247720715119");
    }
  }
);
  return result;
}
