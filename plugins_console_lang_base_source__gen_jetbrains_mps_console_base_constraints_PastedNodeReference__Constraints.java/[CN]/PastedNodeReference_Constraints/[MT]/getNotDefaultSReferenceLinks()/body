{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(0xde1ad86d6e504a02L,0xb306d4d17f64c375L,0x36ac6f29ae8c1fb5L,0x4904fd89e74fc6fL),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xde1ad86d6e504a02L,0xb306d4d17f64c375L,0x36ac6f29ae8c1fb5L,0x4904fd89e74fc6fL),this){
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public boolean hasPresentation(){
          return true;
        }
        @Override public String getPresentation(        final IOperationContext operationContext,        final ReferencePresentationContext _context){
          return INodeWithReference__BehaviorDescriptor.getTextWhenBroken_idigjXyuNrou.invoke(_context.getReferenceNode());
        }
      }
;
    }
  }
);
  return references;
}
