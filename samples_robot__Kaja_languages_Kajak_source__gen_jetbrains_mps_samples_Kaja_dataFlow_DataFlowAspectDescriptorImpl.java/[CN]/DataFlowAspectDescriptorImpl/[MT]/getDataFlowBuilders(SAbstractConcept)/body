{
{
    SAbstractConcept cncpt=((SAbstractConcept)concept);
    Integer preIndex=indices_vhxjlb_a0b.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return Collections.<IDataFlowBuilder>singletonList(new AbstractCommand_DataFlow());
      }
    break;
case 1:
  if (true) {
    return Collections.<IDataFlowBuilder>singletonList(new CommandList_DataFlow());
  }
break;
case 2:
if (true) {
return Collections.<IDataFlowBuilder>singletonList(new IfStatement_DataFlow());
}
break;
case 3:
if (true) {
return Collections.<IDataFlowBuilder>singletonList(new LogicalExpression_DataFlow());
}
break;
case 4:
if (true) {
return Collections.<IDataFlowBuilder>singletonList(new Not_DataFlow());
}
break;
case 5:
if (true) {
return Collections.<IDataFlowBuilder>singletonList(new Repeat_DataFlow());
}
break;
case 6:
if (true) {
return Collections.<IDataFlowBuilder>singletonList(new RoutineCall_DataFlow());
}
break;
case 7:
if (true) {
return Collections.<IDataFlowBuilder>singletonList(new RoutineDefinition_DataFlow());
}
break;
case 8:
if (true) {
return Collections.<IDataFlowBuilder>singletonList(new Script_DataFlow());
}
break;
case 9:
if (true) {
return Collections.<IDataFlowBuilder>singletonList(new Step_DataFlow());
}
break;
case 10:
if (true) {
return Collections.<IDataFlowBuilder>singletonList(new While_DataFlow());
}
break;
default :
}
}
return Collections.<IDataFlowBuilder>emptyList();
}
