{
  List<SNode> result=new ArrayList<SNode>();
  for (  SModel model : myModels) {
    if (model == null) {
      continue;
    }
    Iterable<SNode> nodes;
    String conceptToCheck;
    if (myRootsOnly) {
      nodes=model.getRootNodes();
      conceptToCheck=myTargetConcept;
    }
 else     if (myTargetConcept != null) {
      nodes=SNodeOperations.getModelFastFinder(model).getNodes(myTargetConcept,true);
      conceptToCheck=null;
    }
 else {
      nodes=((Iterable)SNodeUtil.getDescendants(model));
      conceptToCheck=null;
    }
    for (    SNode node : nodes) {
      if (conceptToCheck != null && !(SNodeUtil.isInstanceOf(node,SConceptRepository.getInstance().getConcept(conceptToCheck)))) {
        continue;
      }
      if ((prefix != null && prefix.length() > 0)) {
        String refText=getReferenceText(null,node);
        if (refText == null || !(refText.startsWith(prefix))) {
          continue;
        }
      }
      ListSequence.fromList(result).addElement(node);
    }
  }
  return result;
}
