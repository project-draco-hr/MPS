{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("format",new BaseNodeReferenceSearchScopeProvider(){
    public boolean hasPresentation(){
      return true;
    }
    public String getPresentation(    final IOperationContext operationContext,    final PresentationReferentConstraintContext _context){
      return (_context.getSmartReference() ? "<" + SPropertyOperations.getString(_context.getParameterNode(),"name") + ">" : SPropertyOperations.getString(_context.getParameterNode(),"name"));
    }
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      return DateFormatReferenceUtil.buildIPeriodFormatSearchScope(_context.getEnclosingNode(),operationContext.getScope());
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c895903cf(jetbrains.mps.baseLanguage.dates.constraints)","7249953535157218342");
    }
  }
);
  return result;
}
