{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(-4094437568663370681l,-8968368868337559369l),1071489090640l,1071489389519l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(-4094437568663370681l,-8968368868337559369l),1071489090640l,1071489389519l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_8geshg_a0a0a0a0a1a0b0a1a6;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return new ConceptDeclarationExtendedConceptSearchScope(_context.getReferenceNode(),_context.getContextNode());
        }
      }
;
    }
  }
);
  return references;
}
