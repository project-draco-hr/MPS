{
{
    SNode _nodeToCheck_1029348928467=nodeToCheck;
    BaseIntentionProvider intentionProvider=null;
    EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c89590371(jetbrains.mps.baseLanguage.classifiers.typesystem)","1205769679712",0,intentionProvider);
    typeCheckingContext.createEquation((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467,"r:00000000-0000-4000-0000-011c89590371(jetbrains.mps.baseLanguage.classifiers.typesystem)","1205769685435",true),(SNode)SLinkOperations.getTarget(SLinkOperations.getTarget(nodeToCheck,"member",false),"returnType",true),_info_12389875345);
  }
{
    SNode parameter;
    SNode argument;
    Iterator<SNode> parameter_iterator=ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(nodeToCheck,"member",false),"parameter",true)).iterator();
    Iterator<SNode> argument_iterator=ListSequence.fromList(SLinkOperations.getTargets(nodeToCheck,"actualArgument",true)).iterator();
    while (true) {
      if (!(parameter_iterator.hasNext())) {
        break;
      }
      if (!(argument_iterator.hasNext())) {
        break;
      }
      parameter=parameter_iterator.next();
      argument=argument_iterator.next();
{
        SNode _nodeToCheck_1029348928467=argument;
        BaseIntentionProvider intentionProvider=null;
        EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c89590371(jetbrains.mps.baseLanguage.classifiers.typesystem)","1205854571586",0,intentionProvider);
        _info_12389875345.setInequationGroup("default");
        typeCheckingContext.createLessThanInequation((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467,"r:00000000-0000-4000-0000-011c89590371(jetbrains.mps.baseLanguage.classifiers.typesystem)","1205854575356",true),(SNode)SLinkOperations.getTarget(parameter,"type",true),false,_info_12389875345);
      }
    }
  }
  if (SLinkOperations.getCount(SLinkOperations.getTarget(nodeToCheck,"member",false),"parameter") != SLinkOperations.getCount(nodeToCheck,"actualArgument")) {
{
      BaseIntentionProvider intentionProvider=null;
      IErrorTarget errorTarget=new NodeErrorTarget();
      typeCheckingContext.reportTypeError(nodeToCheck,"Number of parameters doesn't match","r:00000000-0000-4000-0000-011c89590371(jetbrains.mps.baseLanguage.classifiers.typesystem)","1205854659855",intentionProvider,errorTarget);
    }
  }
}
