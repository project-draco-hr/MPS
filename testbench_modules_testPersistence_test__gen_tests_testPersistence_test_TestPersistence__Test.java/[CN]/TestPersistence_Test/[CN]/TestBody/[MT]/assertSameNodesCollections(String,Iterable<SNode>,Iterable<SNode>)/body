{
  HashMap<org.jetbrains.mps.openapi.model.SNodeId,SNode> actualIdToNodeMap=new HashMap<org.jetbrains.mps.openapi.model.SNodeId,SNode>();
  for (  SNode actualNode : actual) {
    actualIdToNodeMap.put(actualNode.getNodeId(),actualNode);
  }
  for (  SNode expectedNode : expected) {
    org.jetbrains.mps.openapi.model.SNodeId rootId=expectedNode.getNodeId();
    SNode actualNode=actualIdToNodeMap.get(rootId);
    Assert.assertNotNull("Not found expected " + objectName + " "+ expectedNode,actualNode);
    this.assertDeepNodeEquals(expectedNode,actualNode);
    actualIdToNodeMap.remove(rootId);
  }
  Assert.assertTrue("Found not expected " + objectName + " "+ actualIdToNodeMap,actualIdToNodeMap.isEmpty());
}
