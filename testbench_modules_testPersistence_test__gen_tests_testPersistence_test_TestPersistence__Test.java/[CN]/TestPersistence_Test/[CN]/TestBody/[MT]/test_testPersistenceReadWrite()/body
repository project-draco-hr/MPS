{
  final TestPersistenceHelper helper=new TestPersistenceHelper();
  SModel model=helper.getTestModel();
  DefaultSModelDescriptor md=(DefaultSModelDescriptor)model;
  for (int i=TestPersistenceHelper.START_PERSISTENCE_TEST_VERSION; i <= ModelPersistence.LAST_VERSION; ++i) {
    PersistenceUtil.InMemoryStreamDataSource dataSource=new PersistenceUtil.InMemoryStreamDataSource();
    helper.saveModelInPersistence(md,dataSource,i);
    final ModelLoadResult result=ModelPersistence.readModel(SModelHeader.create(i),dataSource,ModelLoadingState.FULLY_LOADED);
    Assert.assertTrue(result.getState() == ModelLoadingState.FULLY_LOADED);
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        TestBody.this.assertDeepModelEquals(helper.getTestModel().getSModel(),result.getModel());
      }
    }
);
    result.getModel().dispose();
  }
}
