{
  try {
    final DeleteNodesHelper helper=new DeleteNodesHelper(((List<SNode>)MapSequence.fromMap(_params).get("nodes")),((IOperationContext)MapSequence.fromMap(_params).get("context")));
    final Wrappers._boolean dialogNeeded=new Wrappers._boolean(false);
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        dialogNeeded.value=helper.hasOptions();
      }
    }
);
    final DeleteDialog.DeleteOption safeOption=new DeleteDialog.DeleteOption("Safe Delete",false,true);
    final DeleteDialog.DeleteOption aspectsOption=new DeleteDialog.DeleteOption("Delete Aspects",true,true);
    if (dialogNeeded.value) {
      DeleteDialog dialog=new DeleteDialog(((Project)MapSequence.fromMap(_params).get("project")),"Delete Node","Are you sure you want to delete selected node?",safeOption,aspectsOption);
      dialog.show();
      if (!(dialog.isOK())) {
        return;
      }
    }
    ModelAccess.instance().runWriteActionInCommand(new Runnable(){
      public void run(){
        helper.deleteNodes(safeOption.selected,aspectsOption.selected,true);
      }
    }
);
  }
 catch (  Throwable t) {
    if (log.isErrorEnabled()) {
      log.error("User's action execute method failed. Action:" + "DeleteNode",t);
    }
  }
}
