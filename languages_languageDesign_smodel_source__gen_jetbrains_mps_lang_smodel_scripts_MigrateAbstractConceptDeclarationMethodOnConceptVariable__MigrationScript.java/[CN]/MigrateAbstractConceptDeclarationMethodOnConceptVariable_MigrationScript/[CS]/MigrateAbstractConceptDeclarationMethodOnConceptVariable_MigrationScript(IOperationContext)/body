{
  super("Migration abstract concept declaration methods on concept<>");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Migration abstract concept declaration methods on concept<>";
    }
    public String getAdditionalInfo(){
      return "Migration abstract concept declaration methods on concept<>";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall";
    }
    public boolean isApplicableInstanceNode(    final SNode node){
      if (SPropertyOperations.getBoolean(SLinkOperations.getTarget(node,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141037l,"baseMethodDeclaration")),MetaAdapterFactory.getProperty(new UUID(-5808042798135555774l,-8657779246725685839l),1225194472830l,5864038008284099149l,"isStatic"))) {
        return false;
      }
      SNode type=TypeContextManager.getInstance().runResolveAction(new Computable<SNode>(){
        public SNode compute(){
          return TypeChecker.getInstance().getTypeOf(SNodeOperation_Behavior.call_getLeftExpression_1213877508894(node));
        }
      }
);
      return SNodeOperations.isInstanceOf(type,"jetbrains.mps.lang.smodel.structure.SConceptType");
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode operand=SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(node),"jetbrains.mps.baseLanguage.structure.DotExpression"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1197027756228l,1197027771414l,"operand"));
      SNode newOperand=_quotation_createNode_dt2z82_a0b0a0(operand);
      SNodeOperations.replaceWithAnother(SNodeOperations.getParent(node),_quotation_createNode_dt2z82_a0a2a0a(newOperand,SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(node),"jetbrains.mps.baseLanguage.structure.DotExpression"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1197027756228l,1197027833540l,"operation"))));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
