{
  if (!(projectFile.exists())) {
    throw new RuntimeException("Can't find project file " + projectFile.getAbsolutePath());
  }
  final ProjectManagerEx projectManager=ProjectManagerEx.getInstanceEx();
  final String filePath=projectFile.getAbsolutePath();
  final com.intellij.openapi.project.Project[] project=new com.intellij.openapi.project.Project[1];
  final Throwable[] exc=new Throwable[]{null};
  ThreadUtils.runInUIThreadAndWait(new Runnable(){
    public void run(){
      try {
        project[0]=projectManager.loadAndOpenProject(filePath);
      }
 catch (      Throwable e) {
        exc[0]=e;
      }
    }
  }
);
  if (project[0] == null) {
    throw new RuntimeException("ProjectManager could not load project from " + projectFile.getAbsolutePath(),exc[0]);
  }
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      new ModuleMaker().make(new LinkedHashSet<IModule>(MPSModuleRepository.getInstance().getAllModules()),new EmptyProgressMonitor());
    }
  }
);
  projectManager.openProject(project[0]);
  return project[0].getComponent(MPSProject.class);
}
