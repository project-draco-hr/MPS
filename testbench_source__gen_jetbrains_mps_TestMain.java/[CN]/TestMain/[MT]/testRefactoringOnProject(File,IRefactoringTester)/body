{
  final File destinationProjectDir=new File(PathManager.getHomePath(),"TEST_REFACTORING");
  return testOnProjectCopy(sourceProjectDir,destinationProjectDir,null,new TestMain.ProjectRunnable(){
    public boolean execute(    final Project project){
      final SModel[] sandbox=new SModel[]{null,null};
      final Language[] testLanguage=new Language[]{null,null};
      ModelAccess.instance().runWriteAction(new Runnable(){
        public void run(){
          String classPath=destinationProjectDir.getAbsolutePath() + "/classes";
          sandbox[0]=getModel(project,REFACTORING_SANDBOX[0]);
          sandbox[1]=getModel(project,REFACTORING_SANDBOX[1]);
          testLanguage[0]=getLanguage(project,REFACTORING_LANGUAGE[0]);
          testLanguage[1]=getLanguage(project,REFACTORING_LANGUAGE[1]);
          updateLanguageClasspath(testLanguage[0],classPath);
          updateLanguageClasspath(testLanguage[1],classPath);
        }
      }
);
      return refactoringTester.testRefactoring(project,sandbox[0],sandbox[1],testLanguage[0],testLanguage[1]);
    }
  }
);
}
