{
  SNode c=SNodeOperations.getAncestor(this.myMethodDeclaration,"jetbrains.mps.baseLanguage.structure.ClassConcept",false,false);
  for (  SNode localCall : ListSequence.<SNode>fromList(SNodeOperations.getDescendants(body,"jetbrains.mps.baseLanguage.structure.LocalStaticMethodCall",false,new String[]{}))) {
    SNode newCall=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StaticMethodCall",null);
    SLinkOperations.setTarget(newCall,"classConcept",c,false);
    SLinkOperations.setTarget(newCall,"baseMethodDeclaration",SLinkOperations.getTarget(localCall,"baseMethodDeclaration",false),false);
    SNodeOperations.replaceWithAnother(localCall,newCall);
  }
}
