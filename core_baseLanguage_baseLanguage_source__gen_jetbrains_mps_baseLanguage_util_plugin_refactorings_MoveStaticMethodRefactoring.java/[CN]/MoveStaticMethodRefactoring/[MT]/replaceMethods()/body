{
  SNode classNode=SNodeOperations.getAncestor(this.moving,"jetbrains.mps.baseLanguage.structure.ClassConcept",false,false);
  for (  SNode call : ListSequence.fromList(SNodeOperations.getDescendants(this.moving,"jetbrains.mps.baseLanguage.structure.LocalStaticMethodCall",false,new String[]{}))) {
    if (SLinkOperations.getTarget(call,"baseMethodDeclaration",false) != this.moving) {
      SNodeOperations.replaceWithAnother(call,new MoveStaticMethodRefactoring.QuotationClass_f5lqsg_a0a0a0a0b0b().createNode(classNode,SLinkOperations.getTarget(call,"baseMethodDeclaration",false)));
    }
  }
}
