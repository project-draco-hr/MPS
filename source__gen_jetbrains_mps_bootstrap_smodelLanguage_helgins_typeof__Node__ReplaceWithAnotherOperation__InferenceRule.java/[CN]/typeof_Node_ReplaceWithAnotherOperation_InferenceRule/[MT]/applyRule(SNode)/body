{
  RulesFunctions.fun_check_isAppliedTo_Node(argument);
  if (!((SLinkOperations.getTarget(argument,"parameter",true) == null))) {
    TypeChecker.getInstance().getRuntimeSupport().check(SLinkOperations.getTarget(argument,"parameter",true));
    if (!(!((TypeChecker.getInstance().getRuntimeSupport().typeOf(SLinkOperations.getTarget(argument,"parameter",true)) == null)))) {
      TypeChecker.getInstance().reportTypeError(SLinkOperations.getTarget(argument,"parameter",true),"no type");
    }
    if (!(TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getRuntimeSupport().typeOf(SLinkOperations.getTarget(argument,"parameter",true)),new QuotationClass_28().createNode()))) {
      TypeChecker.getInstance().reportTypeError(SLinkOperations.getTarget(argument,"parameter",true),"incompatible type: snode expected");
    }
  }
}
