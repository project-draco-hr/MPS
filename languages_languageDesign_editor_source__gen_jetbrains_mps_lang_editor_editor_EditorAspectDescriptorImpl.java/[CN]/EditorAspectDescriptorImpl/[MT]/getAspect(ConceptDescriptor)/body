{
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0nd,descriptor.getConceptFqName())) {
case 0:
    return getAbstractPaddingStyleClassItemEditorAspect();
case 1:
  return getAbstractStyledTextOperationEditorAspect();
case 2:
return getBooleanStyleSheetItemEditorAspect();
case 3:
return getCaretPositionParameterEditorAspect();
case 4:
return getCellActionMapDeclarationEditorAspect();
case 5:
return getCellActionMapItemEditorAspect();
case 6:
return getCellKeyMapDeclarationEditorAspect();
case 7:
return getCellKeyMapItemEditorAspect();
case 8:
return getCellKeyMapKeystrokeEditorAspect();
case 9:
return getCellLayoutEditorAspect();
case 10:
return getCellMenuComponentEditorAspect();
case 11:
return getCellMenuComponentFeature_LinkEditorAspect();
case 12:
return getCellMenuComponentFeature_PropertyEditorAspect();
case 13:
return getCellMenuDescriptorEditorAspect();
case 14:
return getCellMenuPart_AbstractEditorAspect();
case 15:
return getCellMenuPart_ApplySideTransformsEditorAspect();
case 16:
return getCellMenuPart_CellMenuComponentEditorAspect();
case 17:
return getCellMenuPart_Generic_GroupEditorAspect();
case 18:
return getCellMenuPart_Generic_ItemEditorAspect();
case 19:
return getCellMenuPart_PropertyPostfixHintsEditorAspect();
case 20:
return getCellMenuPart_PropertyValuesEditorAspect();
case 21:
return getCellMenuPart_ReferentPrimaryEditorAspect();
case 22:
return getCellMenuPart_ReplaceChildPrimaryEditorAspect();
case 23:
return getCellMenuPart_ReplaceChild_CustomChildConceptEditorAspect();
case 24:
return getCellMenuPart_ReplaceChild_GroupEditorAspect();
case 25:
return getCellMenuPart_ReplaceChild_ItemEditorAspect();
case 26:
return getCellMenuPart_ReplaceNode_CustomNodeConceptEditorAspect();
case 27:
return getCellMenuPart_ReplaceNode_GroupEditorAspect();
case 28:
return getCellModel_AlternationEditorAspect();
case 29:
return getCellModel_AttributedLinkCellEditorAspect();
case 30:
return getCellModel_AttributedNodeCellEditorAspect();
case 31:
return getCellModel_AttributedPropertyCellEditorAspect();
case 32:
return getCellModel_BlockEditorAspect();
case 33:
return getCellModel_BlockEndEditorAspect();
case 34:
return getCellModel_BlockStartEditorAspect();
case 35:
return getCellModel_CollectionEditorAspect();
case 36:
return getCellModel_ComponentEditorAspect();
case 37:
return getCellModel_ConceptPropertyEditorAspect();
case 38:
return getCellModel_ConstantEditorAspect();
case 39:
return getCellModel_CustomEditorAspect();
case 40:
return getCellModel_EmptyEditorAspect();
case 41:
return getCellModel_ErrorEditorAspect();
case 42:
return getCellModel_ImageEditorAspect();
case 43:
return getCellModel_IndentEditorAspect();
case 44:
return getCellModel_JComponentEditorAspect();
case 45:
return getCellModel_ModelAccessEditorAspect();
case 46:
return getCellModel_PropertyEditorAspect();
case 47:
return getCellModel_ReadOnlyModelAccessorEditorAspect();
case 48:
return getCellModel_RefCellEditorAspect();
case 49:
return getCellModel_RefNodeEditorAspect();
case 50:
return getCellModel_RefNodeListEditorAspect();
case 51:
return getCellModel_ReferencePresentationEditorAspect();
case 52:
return getCellModel_TransactionalPropertyEditorAspect();
case 53:
return getCellModel_URLEditorAspect();
case 54:
return getColorStyleClassItemEditorAspect();
case 55:
return getConceptEditorDeclarationEditorAspect();
case 56:
return getDefaultBaseLineEditorAspect();
case 57:
return getDefaultCaretPositionStyleClassItemEditorAspect();
case 58:
return getEditorCellModelEditorAspect();
case 59:
return getEditorComponentDeclarationEditorAspect();
case 60:
return getFloatStyleClassItemEditorAspect();
case 61:
return getFontSizeStyleClassItemEditorAspect();
case 62:
return getFontStyleStyleClassItemEditorAspect();
case 63:
return getHorizontalAlignEditorAspect();
case 64:
return getInlineEditorComponentEditorAspect();
case 65:
return getInlineStyleDeclarationEditorAspect();
case 66:
return getLayoutConstraintStyleClassItemEditorAspect();
case 67:
return getMatchingLabelStyleClassItemEditorAspect();
case 68:
return getMaxWidthStyleClassItemEditorAspect();
case 69:
return getModelAccessorEditorAspect();
case 70:
return getNavigatableNodeStyleClassItemEditorAspect();
case 71:
return getNavigatableReferenceStyleClassItemEditorAspect();
case 72:
return getParametersInformationQueryEditorAspect();
case 73:
return getParametersInformationStyleClassItemEditorAspect();
case 74:
return getPositionChildrenStyleClassItemEditorAspect();
case 75:
return getPositionStyleClassItemEditorAspect();
case 76:
return getPreDefinedStyleClassItemEditorAspect();
case 77:
return getRGBColorEditorAspect();
case 78:
return getReadOnlyModelAccessorEditorAspect();
case 79:
return getRightTransformAnchorTagWrapperEditorAspect();
case 80:
return getScriptKindClassItemEditorAspect();
case 81:
return getSelectOperationEditorAspect();
case 82:
return getSelectPositionParameterEditorAspect();
case 83:
return getSideTransformAnchorTagStyleClassItemEditorAspect();
case 84:
return getStyleKeyEditorAspect();
case 85:
return getStyleKeyPackEditorAspect();
case 86:
return getStyleSheetEditorAspect();
case 87:
return getStyleSheetClassEditorAspect();
case 88:
return getStyleSheetClassReferenceEditorAspect();
case 89:
return getTableComponentStyleClassItemEditorAspect();
case 90:
return getUnderlinedStyleClassItemEditorAspect();
default :
}
return null;
}
