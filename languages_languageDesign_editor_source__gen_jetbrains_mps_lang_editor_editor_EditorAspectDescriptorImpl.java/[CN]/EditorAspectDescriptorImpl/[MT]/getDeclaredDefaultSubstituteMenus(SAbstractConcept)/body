{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_xbvbvu_a0g.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return Collections.<SubstituteMenu>singletonList(new AbstractCellSelector_SubstituteMenu());
      }
    break;
case 1:
  if (true) {
    return Collections.<SubstituteMenu>singletonList(new AbstractStyledTextOperation_SubstituteMenu());
  }
break;
case 2:
if (true) {
return Collections.<SubstituteMenu>singletonList(new CellActionMapItem_SubstituteMenu());
}
break;
case 3:
if (true) {
return Collections.<SubstituteMenu>singletonList(new CellMenuPart_Abstract_SubstituteMenu());
}
break;
case 4:
if (true) {
return Collections.<SubstituteMenu>singletonList(new CellMenuPart_AbstractGroup_parameterObject_SubstituteMenu());
}
break;
case 5:
if (true) {
return Collections.<SubstituteMenu>singletonList(new CellMenuPart_Abstract_editedNode_SubstituteMenu());
}
break;
case 6:
if (true) {
return Collections.<SubstituteMenu>singletonList(new CellMenuPart_PropertyPostfixHints_SubstituteMenu());
}
break;
case 7:
if (true) {
return Collections.<SubstituteMenu>singletonList(new CellMenuPart_PropertyValues_SubstituteMenu());
}
break;
case 8:
if (true) {
return Collections.<SubstituteMenu>singletonList(new CellMenuPart_ReferentPrimary_SubstituteMenu());
}
break;
case 9:
if (true) {
return Collections.<SubstituteMenu>singletonList(new CellMenuPart_ReplaceChildPrimary_SubstituteMenu());
}
break;
case 10:
if (true) {
return Collections.<SubstituteMenu>singletonList(new CellMenuPart_ReplaceChild_CustomChildConcept_SubstituteMenu());
}
break;
case 11:
if (true) {
return Collections.<SubstituteMenu>singletonList(new CellMenuPart_ReplaceChild_Group_SubstituteMenu());
}
break;
case 12:
if (true) {
return Collections.<SubstituteMenu>singletonList(new CellMenuPart_ReplaceChild_Item_SubstituteMenu());
}
break;
case 13:
if (true) {
return Collections.<SubstituteMenu>singletonList(new CellMenuPart_ReplaceChild_currentChild_SubstituteMenu());
}
break;
case 14:
if (true) {
return Collections.<SubstituteMenu>singletonList(new CellMenuPart_ReplaceChild_defaultConceptOfChild_SubstituteMenu());
}
break;
case 15:
if (true) {
return Collections.<SubstituteMenu>singletonList(new CellModel_NonEmptyProperty_SubstituteMenu());
}
break;
case 16:
if (true) {
return Collections.<SubstituteMenu>singletonList(new CellModel_TransactionalProperty_SubstituteMenu());
}
break;
case 17:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_StyledText_SubstituteMenu());
}
break;
case 18:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_childNode_SubstituteMenu());
}
break;
case 19:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_editorContext_SubstituteMenu());
}
break;
case 20:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_model_SubstituteMenu());
}
break;
case 21:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_nextNode_SubstituteMenu());
}
break;
case 22:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_node_SubstituteMenu());
}
break;
case 23:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_oldText_SubstituteMenu());
}
break;
case 24:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_parameterObject_SubstituteMenu());
}
break;
case 25:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_prevNode_SubstituteMenu());
}
break;
case 26:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_selectedNode_SubstituteMenu());
}
break;
case 27:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_text_SubstituteMenu());
}
break;
case 28:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ContextHintsSpecification_SubstituteMenu());
}
break;
case 29:
if (true) {
return Collections.<SubstituteMenu>singletonList(new EditorCellId_SubstituteMenu());
}
break;
case 30:
if (true) {
return Collections.<SubstituteMenu>singletonList(new EditorCellModel_SubstituteMenu());
}
break;
case 31:
if (true) {
return Collections.<SubstituteMenu>singletonList(new SubstituteAbstractStyledTextOperation_Contribution());
}
break;
case 32:
if (true) {
return Collections.<SubstituteMenu>singletonList(new StubEditorCellModel_SubstituteMenu());
}
break;
case 33:
if (true) {
return Collections.<SubstituteMenu>singletonList(new StyleClassReferenceList_SubstituteMenu());
}
break;
case 34:
if (true) {
return Collections.<SubstituteMenu>singletonList(new StyleSheetClass_SubstituteMenu());
}
break;
case 35:
if (true) {
return Collections.<SubstituteMenu>singletonList(new SubstituteMenuPart_Placeholder_SubstituteMenu());
}
break;
case 36:
if (true) {
return Collections.<SubstituteMenu>singletonList(new SubstituteMenuReference_DefaultWithFunction_SubstituteMenu());
}
break;
case 37:
if (true) {
return Collections.<SubstituteMenu>singletonList(new SubstituteMenuVariableDeclaration_SubstituteMenu());
}
break;
case 38:
if (true) {
return Collections.<SubstituteMenu>singletonList(new TransactionPropertyHandler_newValue_SubstituteMenu());
}
break;
case 39:
if (true) {
return Collections.<SubstituteMenu>singletonList(new TransformationFeature_SubstituteMenu());
}
break;
case 40:
if (true) {
return Collections.<SubstituteMenu>singletonList(new TransformationLocation_SubstituteMenu());
}
break;
case 41:
if (true) {
return Collections.<SubstituteMenu>singletonList(new TransformationMenuPart_Placeholder_SubstituteMenu());
}
break;
case 42:
if (true) {
return Collections.<SubstituteMenu>singletonList(new TransformationMenuVariableDeclaration_SubstituteMenu());
}
break;
default :
}
}
return Collections.<SubstituteMenu>emptyList();
}
