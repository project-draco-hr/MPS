{
  SAbstractConcept cncpt=((SAbstractConcept)concept);
switch (index_xbvbvu_a0c.index(cncpt)) {
case 0:
    if (true) {
      if ("jetbrains.mps.lang.editor.editor.CellModelCollection_FoldedCellComponent".equals(editorComponentId)) {
        return Collections.<ConceptEditorComponent>singletonList(new CellModelCollection_FoldedCellComponent());
      }
    }
  break;
case 1:
if (true) {
  if ("jetbrains.mps.lang.editor.editor.CellModelListWithRole_FoldedCellComponent".equals(editorComponentId)) {
    return Collections.<ConceptEditorComponent>singletonList(new CellModelListWithRole_FoldedCellComponent());
  }
}
break;
case 2:
if (true) {
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0c1a2,editorComponentId)) {
case 0:
return Collections.<ConceptEditorComponent>singletonList(new Common_Component());
case 1:
return Collections.<ConceptEditorComponent>singletonList(new Style_Component());
case 2:
return Collections.<ConceptEditorComponent>singletonList(new _CellKeyMapLnk_Component());
case 3:
return Collections.<ConceptEditorComponent>singletonList(new _CellModel_Common());
case 4:
return Collections.<ConceptEditorComponent>singletonList(new _CloseTag());
case 5:
return Collections.<ConceptEditorComponent>singletonList(new _FocusPolicy_Applicable());
case 6:
return Collections.<ConceptEditorComponent>singletonList(new _OpenTag());
default :
return Collections.<ConceptEditorComponent>emptyList();
}
}
break;
case 3:
if (true) {
if ("jetbrains.mps.lang.editor.editor.CellStyle_Component".equals(editorComponentId)) {
return Collections.<ConceptEditorComponent>singletonList(new CellStyle_Component());
}
}
break;
case 4:
if (true) {
if ("jetbrains.mps.lang.editor.editor.IOutputConcept_Component".equals(editorComponentId)) {
return Collections.<ConceptEditorComponent>singletonList(new IOutputConcept_Component());
}
}
break;
case 5:
if (true) {
if ("jetbrains.mps.lang.editor.editor.TransformationMenu_Sections_Component".equals(editorComponentId)) {
return Collections.<ConceptEditorComponent>singletonList(new TransformationMenu_Sections_Component());
}
}
break;
case 6:
if (true) {
if ("jetbrains.mps.lang.editor.editor.SubstituteFeatureAlias".equals(editorComponentId)) {
return Collections.<ConceptEditorComponent>singletonList(new SubstituteFeatureAlias());
}
}
break;
case 7:
if (true) {
if ("jetbrains.mps.lang.editor.editor.SubstituteMenuPartAlias".equals(editorComponentId)) {
return Collections.<ConceptEditorComponent>singletonList(new SubstituteMenuPartAlias());
}
}
break;
case 8:
if (true) {
if ("jetbrains.mps.lang.editor.editor.TransformationFeatureAlias".equals(editorComponentId)) {
return Collections.<ConceptEditorComponent>singletonList(new TransformationFeatureAlias());
}
}
break;
case 9:
if (true) {
if ("jetbrains.mps.lang.editor.editor.TransformationMenuPartAlias".equals(editorComponentId)) {
return Collections.<ConceptEditorComponent>singletonList(new TransformationMenuPartAlias());
}
}
break;
default :
}
return Collections.<ConceptEditorComponent>emptyList();
}
