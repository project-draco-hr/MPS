{
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0mc,descriptor.getConceptFqName())) {
case 0:
    return getActionAccessOperationEditorAspect();
case 1:
  return getActionConstructionParameterDeclarationEditorAspect();
case 2:
return getActionConstructorParameterReferenceOperationEditorAspect();
case 3:
return getActionDataParameterDeclarationEditorAspect();
case 4:
return getActionDataParameterReferenceOperationEditorAspect();
case 5:
return getActionDeclarationEditorAspect();
case 6:
return getActionGroupDeclarationEditorAspect();
case 7:
return getActionGroupRefEditorAspect();
case 8:
return getActionInstanceEditorAspect();
case 9:
return getActionParameterDeclarationEditorAspect();
case 10:
return getActionParameterReferenceOperationEditorAspect();
case 11:
return getActionReferenceEditorAspect();
case 12:
return getActionTypeEditorAspect();
case 13:
return getAddElementStatementEditorAspect();
case 14:
return getAddKeystrokeStatementEditorAspect();
case 15:
return getAddStatementEditorAspect();
case 16:
return getAddTabOperationEditorAspect();
case 17:
return getButtonCreatorEditorAspect();
case 18:
return getCloseTabOperationEditorAspect();
case 19:
return getConceptConditionEditorAspect();
case 20:
return getCreateTabBlockEditorAspect();
case 21:
return getEditableModelEditorAspect();
case 22:
return getEditorTabEditorAspect();
case 23:
return getEditorTabReferenceEditorAspect();
case 24:
return getElementListContentsEditorAspect();
case 25:
return getEverywhereActionPlaceEditorAspect();
case 26:
return getGetGroupOperationEditorAspect();
case 27:
return getGetSelectedTabOperationEditorAspect();
case 28:
return getGroupAccessOperationEditorAspect();
case 29:
return getGroupAnchorEditorAspect();
case 30:
return getGroupTypeEditorAspect();
case 31:
return getIdeaActionsDescriptorEditorAspect();
case 32:
return getIdeaConfigurationXmlEditorAspect();
case 33:
return getIdeaInitializerDescriptorEditorAspect();
case 34:
return getIdeaPluginDependencyEditorAspect();
case 35:
return getInterfaceExtentionPointEditorAspect();
case 36:
return getInterfaceGroupEditorAspect();
case 37:
return getKeyMapKeystrokeEditorAspect();
case 38:
return getKeyStrokeTypeEditorAspect();
case 39:
return getKeymapChangesDeclarationEditorAspect();
case 40:
return getKeymapRefEditorAspect();
case 41:
return getMPSPluginDependencyEditorAspect();
case 42:
return getModificationStatementEditorAspect();
case 43:
return getNonDumbAwareActionsEditorAspect();
case 44:
return getOrderEditorAspect();
case 45:
return getOrderReferenceEditorAspect();
case 46:
return getParameterizedShortcutChangeEditorAspect();
case 47:
return getPersistentPropertyDeclarationEditorAspect();
case 48:
return getPersistentPropertyReferenceEditorAspect();
case 49:
return getPopupCreatorEditorAspect();
case 50:
return getPreferencePageEditorAspect();
case 51:
return getPreferencesComponentDeclarationEditorAspect();
case 52:
return getPreferencesComponentTypeEditorAspect();
case 53:
return getRequiredConditionEditorAspect();
case 54:
return getSeparatorEditorAspect();
case 55:
return getSimpleShortcutChangeEditorAspect();
case 56:
return getSmartDisposeClosureParameterDeclarationEditorAspect();
case 57:
return getTabbedToolDeclarationEditorAspect();
case 58:
return getToolDeclarationEditorAspect();
case 59:
return getToolInstanceExpressionEditorAspect();
case 60:
return getToolTabEditorAspect();
case 61:
return getToolTypeEditorAspect();
case 62:
return getToolbarCreatorEditorAspect();
case 63:
return getUpdateGroupBlockEditorAspect();
default :
}
return null;
}
