{
  List<SNode> result=new ArrayList<SNode>();
  List<String> referencetRoles=ListSequence.fromList(new ArrayList<String>());
  ListSequence.fromList(referencetRoles).addSequence(SetSequence.fromSet(_context.getNode().getReferenceRoles()));
  Collections.sort(referencetRoles);
  for (  String referentRole : referencetRoles) {
    if ((AttributeOperations.getAttribute(_context.getNode(),new IAttributeDescriptor.LinkAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.pattern.structure.LinkPatternVariableDeclaration"),referentRole)) != null)) {
      continue;
    }
    SNode referenceNode=SModelOperations.createNewNode(_context.getOutputModel(),"jetbrains.mps.lang.core.structure.BaseConcept",null);
    SNode referent=_context.getNode().getReferent(referentRole);
    referenceNode.setProperty("referentRole",referentRole);
    referenceNode.setProperty("referentModel",referent.getModel().getSModelReference().toString());
    referenceNode.setProperty("referentId",referent.getId());
    referenceNode.setReferent("mainNode",_context.getNode());
    ListSequence.fromList(result).addElement(referenceNode);
  }
  return result;
}
