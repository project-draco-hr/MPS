{
  if (getBuffer().hasPositionsSupport()) {
    TraceInfoGenerationUtil.createScopeInfo(this,node);
  }
  this.appendWithIndent("} catch (");
  TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),SLinkOperations.getTarget(node,"throwable",true),this.getSNode());
  this.append(") {");
  this.increaseDepth();
  TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),SLinkOperations.getTarget(node,"catchBody",true),this.getSNode());
  this.decreaseDepth();
  if (getBuffer().hasPositionsSupport()) {
{
      List<SNode> scopeVariables=new ArrayList<SNode>();
      try {
        scopeVariables=ScopeConcept_Behavior.call_getScopeVariables_5067982036267369894(SNodeOperations.cast(node,"jetbrains.mps.lang.traceable.structure.ScopeConcept"));
      }
 catch (      Throwable t) {
        LOG.error("Can't calculate scope variables for a node " + node + ".",t);
      }
      TraceInfoGenerationUtil.fillScopeInfo(this,node,scopeVariables);
    }
  }
}
