{
  if (myMigrationQueued) {
    return;
  }
  final com.intellij.openapi.project.Project ideaProject=ProjectHelper.toIdeaProject(myMpsProject);
  StartupManager.getInstance(ideaProject).runWhenProjectIsInitialized(new Runnable(){
    public void run(){
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          String[] choises=new String[]{"Migrate","Postpone"};
          final int result=Messages.showCheckboxMessageDialog(DIALOG_TEXT,"Migration required",choises,"Clean generated sources",true,0,0,null,new PairFunction<Integer,JCheckBox,Integer>(){
            public Integer fun(            Integer selected,            JCheckBox cb){
              if (selected == 1) {
                return 2;
              }
              return (cb.isSelected() ? 0 : 1);
            }
          }
);
          if (result == 2) {
            return;
          }
          ApplicationManager.getApplication().runWriteAction(new Runnable(){
            public void run(){
              if (result == 0) {
                removeGenSources();
              }
              removeClassesGen();
              FSRecords.invalidateCaches();
            }
          }
);
          myState.migrationRequired=true;
          ProjectManagerEx.getInstance().reloadProject(ideaProject);
        }
      }
);
    }
  }
);
  myMigrationQueued=true;
}
