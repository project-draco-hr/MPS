{
  final com.intellij.openapi.project.Project ideaProject=myProject;
  saveAndSetTipsState();
  StartupManager.getInstance(ideaProject).runWhenProjectIsInitialized(new Runnable(){
    public void run(){
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          int result=Messages.showYesNoDialog(myProject,DIALOG_TEXT,"Migration Required","Migrate","Postpone",null);
          restoreTipsState();
          if (result == Messages.NO) {
            return;
          }
          VirtualFileUtils.refreshSynchronouslyRecursively(myProject.getBaseDir());
          VirtualFileManager.getInstance().asyncRefresh(new Runnable(){
            public void run(){
              ApplicationManager.getApplication().invokeLater(new Runnable(){
                public void run(){
                  ReloadManager.getInstance().flush();
                  ProjectManagerEx.getInstanceEx().unblockReloadingProjectOnExternalChanges();
                  myState.migrationRequired=true;
                  ProjectManagerEx.getInstance().reloadProject(ideaProject);
                }
              }
);
            }
          }
);
        }
      }
);
    }
  }
);
  myMigrationQueued=true;
}
