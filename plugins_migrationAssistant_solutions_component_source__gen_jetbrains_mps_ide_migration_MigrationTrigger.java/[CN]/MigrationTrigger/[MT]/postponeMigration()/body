{
  if (myBlocked.get() != 0) {
    return;
  }
  final com.intellij.openapi.project.Project ideaProject=myProject;
  final Iterable<SModule> allModules=MigrationsUtil.getMigrateableModulesFromProject(myMpsProject);
  saveAndSetTipsState();
  StartupManager.getInstance(ideaProject).runWhenProjectIsInitialized(new Runnable(){
    public void run(){
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          myMpsProject.getRepository().getModelAccess().runWriteAction(new Runnable(){
            public void run(){
              updateUsedLanguagesVersions(allModules);
            }
          }
);
          boolean migrate=MigrationDialogUtil.showMigrationConfirmation(myProject,allModules,myMigrationManager);
          restoreTipsState();
          myState.migrationRequired=migrate;
          if (!(migrate)) {
            return;
          }
          VirtualFileUtils.refreshSynchronouslyRecursively(myProject.getBaseDir());
          VirtualFileManager.getInstance().asyncRefresh(new Runnable(){
            public void run(){
              ApplicationManager.getApplication().invokeLater(new Runnable(){
                public void run(){
                  ReloadManager.getInstance().flush();
                  ProjectManagerEx.getInstance().reloadProject(ideaProject);
                }
              }
);
            }
          }
);
        }
      }
);
    }
  }
);
  myMigrationQueued=true;
}
