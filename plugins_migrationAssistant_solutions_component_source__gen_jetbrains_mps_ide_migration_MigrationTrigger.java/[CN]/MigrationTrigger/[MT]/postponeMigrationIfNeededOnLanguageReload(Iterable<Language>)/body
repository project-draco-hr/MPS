{
  if (myMigrationQueued) {
    return;
  }
  final Set<SModule> modules2Check=SetSequence.fromSet(new HashSet<SModule>());
  Iterable<? extends SModule> projectModules=myMpsProject.getModulesWithGenerators();
  final List<Language> addedLanguages=Sequence.fromIterable(languages).ofType(Language.class).toListSequence();
  Sequence.fromIterable(projectModules).visitAll(new IVisitor<SModule>(){
    public void visit(    SModule it){
      Set<SLanguage> used=new HashSet<SLanguage>(it.getUsedLanguages());
      used.retainAll(addedLanguages);
      if (!(used.isEmpty())) {
        SetSequence.fromSet(modules2Check).addElement(it);
      }
    }
  }
);
  if (!(MigrationComponent.isLanguageMigrationRequired(modules2Check))) {
    return;
  }
  postponeMigration();
}
