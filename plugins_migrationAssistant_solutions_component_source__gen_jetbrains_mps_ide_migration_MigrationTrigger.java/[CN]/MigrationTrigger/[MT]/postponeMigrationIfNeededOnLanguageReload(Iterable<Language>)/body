{
  if (myMigrationQueued) {
    return;
  }
  final Set<SModule> modules2Check=SetSequence.fromSet(new HashSet<SModule>());
  final List<SLanguage> addedLanguages=Sequence.fromIterable(languages).select(new ISelector<Language,SLanguage>(){
    public SLanguage select(    Language it){
      return MetaAdapterFactory.getLanguage(it.getModuleReference());
    }
  }
).toListSequence();
  Sequence.fromIterable(MigrationsUtil.getMigrateableModulesFromProject(myMpsProject)).visitAll(new IVisitor<SModule>(){
    public void visit(    SModule it){
      Set<SLanguage> used=new HashSet<SLanguage>(it.getUsedLanguages());
      used.retainAll(addedLanguages);
      if (!(used.isEmpty())) {
        SetSequence.fromSet(modules2Check).addElement(it);
      }
    }
  }
);
  if (!(MigrationComponent.isLanguageMigrationRequired(modules2Check))) {
    return;
  }
  postponeMigration();
}
