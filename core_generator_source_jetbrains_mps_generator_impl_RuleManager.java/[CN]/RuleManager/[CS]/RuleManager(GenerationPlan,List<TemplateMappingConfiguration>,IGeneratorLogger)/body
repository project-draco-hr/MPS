{
  myTemplateSwitchGraph=plan.getTemplateSwitchGraph();
  if (myTemplateSwitchGraph == null) {
    throw new IllegalStateException("switch graph is not initialized");
  }
  myCreateRootRules=new FlattenIterable<TemplateCreateRootRule>(configurations.size());
  myRoot_MappingRules=new FlattenIterable<TemplateRootMappingRule>(configurations.size());
  myWeaving_MappingRules=new FlattenIterable<TemplateWeavingRule>(configurations.size());
  FlattenIterable<TemplateDropRootRule> dropRootRules=new FlattenIterable<TemplateDropRootRule>(configurations.size());
  FlattenIterable<TemplateReductionRule> reductionRules=new FlattenIterable<TemplateReductionRule>();
  LinkedList<TemplateMappingScript> postScripts=new LinkedList<TemplateMappingScript>();
  LinkedList<TemplateMappingScript> preScripts=new LinkedList<TemplateMappingScript>();
  final String warnMsg="skip script %s - wrong script kind";
  for (  TemplateMappingConfiguration mappingConfig : configurations) {
    myCreateRootRules.add(mappingConfig.getCreateRules());
    myRoot_MappingRules.add(mappingConfig.getRootRules());
    myWeaving_MappingRules.add(mappingConfig.getWeavingRules());
    dropRootRules.add(mappingConfig.getDropRules());
    reductionRules.add(mappingConfig.getReductionRules());
    for (    TemplateMappingScript postMappingScript : mappingConfig.getPostScripts()) {
      if (postMappingScript.getKind() != TemplateMappingScript.POSTPROCESS) {
        logger.warning(postMappingScript.getScriptNode(),String.format(warnMsg,postMappingScript.getLongName()));
        continue;
      }
      postScripts.add(postMappingScript);
    }
    for (    TemplateMappingScript preMappingScript : mappingConfig.getPreScripts()) {
      if (preMappingScript.getKind() != TemplateMappingScript.PREPROCESS) {
        logger.warning(preMappingScript.getScriptNode(),String.format(warnMsg,preMappingScript.getLongName()));
        continue;
      }
      preScripts.add(preMappingScript);
    }
  }
  myReductionRuleFinder=new FastRuleFinder<TemplateReductionRule>(reductionRules);
  myDropRuleFinder=new FastRuleFinder<TemplateDropRootRule>(dropRootRules);
  myPreScripts=new ScriptManager(preScripts.isEmpty() ? Collections.<TemplateMappingScript>emptyList() : new ArrayList<TemplateMappingScript>(preScripts));
  myPostScripts=new ScriptManager(postScripts.isEmpty() ? Collections.<TemplateMappingScript>emptyList() : new ArrayList<TemplateMappingScript>(postScripts));
  myModelMap=new HashMap<SModelReference,TemplateModel>();
  for (  TemplateModel m : plan.getTemplateModels()) {
    myModelMap.put(m.getSModelReference(),m);
  }
}
