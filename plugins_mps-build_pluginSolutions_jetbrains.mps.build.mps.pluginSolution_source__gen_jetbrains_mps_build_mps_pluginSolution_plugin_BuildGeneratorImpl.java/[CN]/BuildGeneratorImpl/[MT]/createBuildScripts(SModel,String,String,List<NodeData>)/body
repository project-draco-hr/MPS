{
  SNode buildProject=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),5617550519002745363l,"jetbrains.mps.build.structure.BuildProject"));
  SPropertyOperations.set(buildProject,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"),name);
  ListSequence.fromList(SLinkOperations.getChildren(buildProject,MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l,-5075149991798053422l),5617550519002745363l,6647099934206700656l,"plugins"))).addElement(SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),6647099934206700647l,"jetbrains.mps.build.structure.BuildJavaPlugin")));
  ListSequence.fromList(SLinkOperations.getChildren(buildProject,MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l,-5075149991798053422l),5617550519002745363l,6647099934206700656l,"plugins"))).addElement(SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(934837630734519964l,-6831122735637083229l),868032131020265945l,"jetbrains.mps.build.mps.structure.BuildMPSPlugin")));
  try {
    String relativeToModuleProjectPath=Context.defaultContext().getRelativePathHelper(targetModelDescriptor).makeRelative(getBasePath());
    SPropertyOperations.set(buildProject,MetaAdapterFactory.getProperty(new UUID(8755280088213897754l,-5075149991798053422l),5617550519002745363l,5204048710541015587l,"internalBaseDirectory"),relativeToModuleProjectPath);
  }
 catch (  RelativePathHelper.PathException e) {
    if (LOG.isEnabledFor(Level.WARN)) {
      LOG.warn("Can't calculate project path relative to module " + targetModelDescriptor.getModule(),e);
    }
  }
  Set<String> userMacroNames=new LinkedHashSet<String>(PathMacros.getInstance().getUserMacroNames());
  List<SNode> macros=new ArrayList<SNode>();
  List<SNode> dependencies=new ArrayList<SNode>();
  SNode dateMacro=null;
  SNode buildNumber=null;
  SNode branding=null;
  if (eq_un708i_a0r0m(getDependencyKind(),DependencyStep.DependencyKind.MPS)) {
    SNode macro=_quotation_createNode_un708i_a0a0r0m();
    ListSequence.fromList(macros).addElement(macro);
    ListSequence.fromList(dependencies).addElement(_quotation_createNode_un708i_a0a2a71a21(macro));
    userMacroNames.remove("mps_home");
  }
 else   if (eq_un708i_a0a71a21(getDependencyKind(),DependencyStep.DependencyKind.IDEA)) {
    SNode macro=_quotation_createNode_un708i_a0a0a71a21();
    ListSequence.fromList(macros).addElement(macro);
    userMacroNames.remove("idea_home");
    ListSequence.fromList(dependencies).addElement(_quotation_createNode_un708i_a0a3a0r0m(macro));
    macro=_quotation_createNode_un708i_a0e0a71a21(macro);
    ListSequence.fromList(macros).addElement(macro);
    userMacroNames.remove("plugins_home");
    ListSequence.fromList(dependencies).addElement(_quotation_createNode_un708i_a0a7a0r0m(macro));
  }
 else   if (eq_un708i_a0b71a21(getDependencyKind(),DependencyStep.DependencyKind.STANDALONE)) {
    dateMacro=_quotation_createNode_un708i_a0a0b71a21();
    ListSequence.fromList(macros).addElement(dateMacro);
    buildNumber=_quotation_createNode_un708i_a0c0b71a21(name + "-" + ApplicationInfo.getInstance().getBuild().getBaselineVersion()+ ".SNAPSHOT");
    ListSequence.fromList(macros).addElement(buildNumber);
    SNode macro=_quotation_createNode_un708i_a0e0b71a21();
    ListSequence.fromList(macros).addElement(macro);
    ListSequence.fromList(dependencies).addElement(_quotation_createNode_un708i_a0a6a1r0m(macro));
    ListSequence.fromList(dependencies).addElement(_quotation_createNode_un708i_a0a7a1r0m(macro));
    userMacroNames.remove("mps_home");
    userMacroNames.remove("date");
    userMacroNames.remove("build.number");
    branding=_quotation_createNode_un708i_a0l0b71a21(ICONS,buildNumber,ICONS,name,name,name,ICONS,dateMacro,ICONS,ICONS,ICONS,ICONS,ICONS,ICONS);
    ListSequence.fromList(SLinkOperations.getChildren(buildProject,MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l,-5075149991798053422l),5617550519002745363l,7389400916848080626l,"parts"))).addElement(branding);
  }
  for (  String macro : userMacroNames) {
    ListSequence.fromList(macros).addElement(_quotation_createNode_un708i_a0a0a81a21(macro));
  }
  ListSequence.fromList(SLinkOperations.getChildren(buildProject,MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l,-5075149991798053422l),5617550519002745363l,5617550519002745378l,"macros"))).addSequence(ListSequence.fromList(macros));
  ListSequence.fromList(SLinkOperations.getChildren(buildProject,MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l,-5075149991798053422l),5617550519002745363l,5617550519002745381l,"dependencies"))).addSequence(ListSequence.fromList(dependencies));
  Set<ModuleData> moduleData=SetSequence.fromSet(new LinkedHashSet<ModuleData>());
  extractModules(selectedData,moduleData);
  SNode group=_quotation_createNode_un708i_a0z0m(SetSequence.fromSet(moduleData).select(new ISelector<ModuleData,SNode>(){
    public SNode select(    ModuleData it){
      return createModuleNode(it);
    }
  }
).toListSequence(),name);
  SNode plugin=_quotation_createNode_un708i_a0ab0m(name,group,name,name);
  SLinkOperations.setNewChild(buildProject,MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l,-5075149991798053422l),5617550519002745363l,5617550519002745372l,"layout"),MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),5617550519002745364l,"jetbrains.mps.build.structure.BuildLayout"));
  ListSequence.fromList(SLinkOperations.getChildren(buildProject,MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l,-5075149991798053422l),5617550519002745363l,7389400916848080626l,"parts"))).addElement(plugin);
  ListSequence.fromList(SLinkOperations.getChildren(buildProject,MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l,-5075149991798053422l),5617550519002745363l,7389400916848080626l,"parts"))).addElement(group);
  if (eq_un708i_a0fb0m(getDependencyKind(),DependencyStep.DependencyKind.STANDALONE)) {
    ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(buildProject,MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l,-5075149991798053422l),5617550519002745363l,5617550519002745372l,"layout")),MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l,-5075149991798053422l),4701820937132344003l,7389400916848037006l,"children"))).addSequence(ListSequence.fromList(SLinkOperations.getChildren(_quotation_createNode_un708i_a0a0a0fb0m(buildNumber,convertToMacroRelative(_quotation_createNode_un708i_a0a0b2a0a0a0a13a21(),SNodeOperations.cast(ListSequence.fromList(macros).findFirst(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return eq_un708i_a0a0a0a0a0b1a0a0a0a13a21(SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")),"mps_home");
      }
    }
),MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),7389400916848136194l,"jetbrains.mps.build.structure.BuildFolderMacro"))),branding,plugin,buildNumber,dateMacro),MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l,-5075149991798053422l),4701820937132344003l,7389400916848037006l,"children"))));
  }
 else {
    ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(buildProject,MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l,-5075149991798053422l),5617550519002745363l,5617550519002745372l,"layout")),MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l,-5075149991798053422l),4701820937132344003l,7389400916848037006l,"children"))).addElement(_quotation_createNode_un708i_a0a0a0fb0m_0(name + ".zip",plugin));
  }
  SModelOperations.addRootNode(targetModelDescriptor,buildProject);
  PathConverter pathConverter=new PathConverter(buildProject);
  VisibleModules visible=new VisibleModules(buildProject);
  visible.collect();
  for (  SNode module : ListSequence.fromList(SNodeOperations.getNodeDescendants(buildProject,MetaAdapterFactory.getConcept(new UUID(934837630734519964l,-6831122735637083229l),5253498789149381388l,"jetbrains.mps.build.mps.structure.BuildMps_Module"),false,new SConcept[]{}))) {
    try {
      ModuleLoader.createModuleChecker(module,visible,pathConverter).check(ModuleChecker.CheckType.LOAD_IMPORTANT_PART);
    }
 catch (    ModuleLoaderException ex) {
      if (LOG.isEnabledFor(Level.ERROR)) {
        LOG.error(ex.getMessage());
      }
    }
  }
  if (eq_un708i_a0pb0m(getDependencyKind(),DependencyStep.DependencyKind.STANDALONE)) {
    SNode buildStandalone=addStandaloneBuild(targetModelDescriptor,buildProject);
    return ListSequence.fromListAndArray(new ArrayList<SNode>(),buildProject,buildStandalone);
  }
  return Sequence.<SNode>singleton(buildProject);
}
