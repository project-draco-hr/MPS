{
  SNode buildProject=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,"jetbrains.mps.build.structure.BuildProject")));
  SPropertyOperations.set(buildProject,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),name);
  ListSequence.fromList(SLinkOperations.getChildren(buildProject,MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,0x5c3f3e2c1ce9ac70L,"plugins"))).addElement(SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x5c3f3e2c1ce9ac67L,"jetbrains.mps.build.structure.BuildJavaPlugin"))));
  ListSequence.fromList(SLinkOperations.getChildren(buildProject,MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,0x5c3f3e2c1ce9ac70L,"plugins"))).addElement(SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xcf935df46994e9cL,0xa132fa109541cba3L,0xc0bde9fc71699d9L,"jetbrains.mps.build.mps.structure.BuildMPSPlugin"))));
  try {
    String relativeToModuleProjectPath=Context.defaultContext().getRelativePathHelper(targetModelDescriptor).makeRelative(getBasePath());
    SPropertyOperations.set(buildProject,MetaAdapterFactory.getProperty(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,0x48387ebae1a07a23L,"internalBaseDirectory"),relativeToModuleProjectPath);
  }
 catch (  RelativePathHelper.PathException e) {
    if (LOG.isEnabledFor(Level.WARN)) {
      LOG.warn("Can't calculate project path relative to module " + targetModelDescriptor.getModule(),e);
    }
  }
  Set<String> userMacroNames=new LinkedHashSet<String>(PathMacros.getInstance().getUserMacroNames());
  List<SNode> macros=new ArrayList<SNode>();
  List<SNode> dependencies=new ArrayList<SNode>();
  SNode dateMacro=null;
  SNode buildNumber=null;
  SNode branding=null;
  if (eq_un708i_a0r0l(getDependencyKind(),DependencyStep.DependencyKind.MPS)) {
    SNode macro=_quotation_createNode_un708i_a0a0r0l();
    ListSequence.fromList(macros).addElement(macro);
    ListSequence.fromList(dependencies).addElement(_quotation_createNode_un708i_a0a2a71a11(macro));
    userMacroNames.remove("mps_home");
  }
 else   if (eq_un708i_a0a71a11(getDependencyKind(),DependencyStep.DependencyKind.IDEA)) {
    SNode macro=_quotation_createNode_un708i_a0a0a71a11();
    ListSequence.fromList(macros).addElement(macro);
    userMacroNames.remove("idea_home");
    ListSequence.fromList(dependencies).addElement(_quotation_createNode_un708i_a0a3a0r0l(macro));
    macro=_quotation_createNode_un708i_a0e0a71a11(macro);
    ListSequence.fromList(macros).addElement(macro);
    userMacroNames.remove("plugins_home");
    ListSequence.fromList(dependencies).addElement(_quotation_createNode_un708i_a0a7a0r0l(macro));
  }
 else   if (eq_un708i_a0b71a11(getDependencyKind(),DependencyStep.DependencyKind.STANDALONE)) {
    dateMacro=_quotation_createNode_un708i_a0a0b71a11();
    ListSequence.fromList(macros).addElement(dateMacro);
    buildNumber=_quotation_createNode_un708i_a0c0b71a11(name + "-" + ApplicationInfo.getInstance().getBuild().getBaselineVersion()+ ".SNAPSHOT");
    ListSequence.fromList(macros).addElement(buildNumber);
    SNode macro=_quotation_createNode_un708i_a0e0b71a11();
    ListSequence.fromList(macros).addElement(macro);
    ListSequence.fromList(dependencies).addElement(_quotation_createNode_un708i_a0a6a1r0l(macro));
    ListSequence.fromList(dependencies).addElement(_quotation_createNode_un708i_a0a7a1r0l(macro));
    userMacroNames.remove("mps_home");
    userMacroNames.remove("date");
    userMacroNames.remove("build.number");
    branding=_quotation_createNode_un708i_a0l0b71a11(ICONS,buildNumber,ICONS,name,name,name,ICONS,dateMacro,ICONS,ICONS,ICONS,ICONS);
    ListSequence.fromList(SLinkOperations.getChildren(buildProject,MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,0x668c6cfbafacf6f2L,"parts"))).addElement(branding);
  }
  for (  String macro : userMacroNames) {
    ListSequence.fromList(macros).addElement(_quotation_createNode_un708i_a0a0a81a11(macro));
  }
  ListSequence.fromList(SLinkOperations.getChildren(buildProject,MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,0x4df58c6f18f84a22L,"macros"))).addSequence(ListSequence.fromList(macros));
  ListSequence.fromList(SLinkOperations.getChildren(buildProject,MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,0x4df58c6f18f84a25L,"dependencies"))).addSequence(ListSequence.fromList(dependencies));
  Set<ModuleData> moduleData=SetSequence.fromSet(new LinkedHashSet<ModuleData>());
  extractModules(selectedData,moduleData);
  SNode group=_quotation_createNode_un708i_a0z0l(SetSequence.fromSet(moduleData).select(new ISelector<ModuleData,SNode>(){
    public SNode select(    ModuleData it){
      return createModuleNode(it);
    }
  }
).toListSequence(),name);
  SNode plugin=_quotation_createNode_un708i_a0ab0l(name,group,name,name);
  SLinkOperations.setNewChild(buildProject,MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,0x4df58c6f18f84a1cL,"layout"),SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a14L,"jetbrains.mps.build.structure.BuildLayout")));
  ListSequence.fromList(SLinkOperations.getChildren(buildProject,MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,0x668c6cfbafacf6f2L,"parts"))).addElement(plugin);
  ListSequence.fromList(SLinkOperations.getChildren(buildProject,MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,0x668c6cfbafacf6f2L,"parts"))).addElement(group);
  if (eq_un708i_a0fb0l(getDependencyKind(),DependencyStep.DependencyKind.STANDALONE)) {
    ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(buildProject,MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,0x4df58c6f18f84a1cL,"layout")),MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4140393b234482c3L,0x668c6cfbafac4c8eL,"children"))).addSequence(ListSequence.fromList(SLinkOperations.getChildren(_quotation_createNode_un708i_a0a0a0fb0l(buildNumber,convertToMacroRelative(_quotation_createNode_un708i_a0a0b2a0a0a0a13a11(),SNodeOperations.cast(ListSequence.fromList(macros).findFirst(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return eq_un708i_a0a0a0a0a0b1a0a0a0a13a11(SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")),"mps_home");
      }
    }
),MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x668c6cfbafadd002L,"jetbrains.mps.build.structure.BuildFolderMacro"))),branding,plugin,buildNumber,dateMacro),MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4140393b234482c3L,0x668c6cfbafac4c8eL,"children"))));
  }
 else {
    ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(buildProject,MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,0x4df58c6f18f84a1cL,"layout")),MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4140393b234482c3L,0x668c6cfbafac4c8eL,"children"))).addElement(_quotation_createNode_un708i_a0a0a0fb0l_0(name + ".zip",plugin));
  }
  SModelOperations.addRootNode(targetModelDescriptor,buildProject);
  PathConverter pathConverter=new PathConverter(buildProject);
  VisibleModules visible=new VisibleModules(buildProject);
  visible.collect();
  for (  SNode module : ListSequence.fromList(SNodeOperations.getNodeDescendants(buildProject,MetaAdapterFactory.getConcept(0xcf935df46994e9cL,0xa132fa109541cba3L,0x48e82d508331930cL,"jetbrains.mps.build.mps.structure.BuildMps_Module"),false,new SAbstractConcept[]{}))) {
    try {
      ModuleLoader.createModuleChecker(module,visible,pathConverter).check(ModuleChecker.CheckType.LOAD_IMPORTANT_PART);
    }
 catch (    ModuleLoaderException ex) {
      if (LOG.isEnabledFor(Level.ERROR)) {
        LOG.error(ex.getMessage());
      }
    }
  }
  if (eq_un708i_a0pb0l(getDependencyKind(),DependencyStep.DependencyKind.STANDALONE)) {
    SNode buildStandalone=addStandaloneBuild(targetModelDescriptor,buildProject);
    return ListSequence.fromListAndArray(new ArrayList<SNode>(),buildProject,buildStandalone);
  }
  return Sequence.<SNode>singleton(buildProject);
}
