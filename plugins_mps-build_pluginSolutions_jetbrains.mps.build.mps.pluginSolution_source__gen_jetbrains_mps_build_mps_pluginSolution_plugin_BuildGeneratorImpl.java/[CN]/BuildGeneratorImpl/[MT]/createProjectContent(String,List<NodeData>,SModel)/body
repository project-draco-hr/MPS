{
  Set<ModuleData> moduleData=SetSequence.fromSet(new LinkedHashSet<ModuleData>());
  extractModules(data,moduleData);
  SNode group=new BuildGeneratorImpl.QuotationClass_un708i_a0a2a9().createNode(SetSequence.fromSet(moduleData).select(new ISelector<ModuleData,SNode>(){
    public SNode select(    ModuleData it){
      return createModuleNode(it);
    }
  }
).toListSequence(),name);
  SNode plugin=new BuildGeneratorImpl.QuotationClass_un708i_a0a3a9().createNode(name,group,name,name);
  return MultiTuple.<List<SNode>,SNode>from(Sequence.fromIterable(Sequence.fromArray(new SNode[]{plugin,group})).toListSequence(),new BuildGeneratorImpl.QuotationClass_un708i_a1a5a9().createNode(name + ".zip",plugin));
}
