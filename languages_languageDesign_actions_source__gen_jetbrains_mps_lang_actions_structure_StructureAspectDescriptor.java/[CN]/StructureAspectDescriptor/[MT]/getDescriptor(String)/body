{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.AddMenuPart").super_("jetbrains.mps.lang.actions.structure.ConceptPart").parents("jetbrains.mps.lang.actions.structure.ConceptPart","jetbrains.mps.lang.actions.structure.NodeSubstituteMenuBuilderPart","jetbrains.mps.lang.actions.structure.SideTransformMenuBuilderPart").alias("add custom items","").create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_EditorCell").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("selectedCell","").staticScope(StaticScope.NONE).create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_OperationContext").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("operationContext","").staticScope(StaticScope.NONE).create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_childConcept").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("childConcept","substitution node<> should be instance of this concept or one of it's subconcepts").staticScope(StaticScope.NONE).create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_childSetter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("childSetter","IChildNodeSetter instance which should be used to set new child for this parent node").staticScope(StaticScope.NONE).create();
case 5:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_concept").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("concept","outputConcept of substitute action").staticScope(StaticScope.NONE).create();
case 6:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_createdNode").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("createdNode","node<> returned from create child node block").staticScope(StaticScope.NONE).create();
case 7:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_currentTargetNode").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("currentTargetNode","node<> to substitute").staticScope(StaticScope.NONE).create();
case 8:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_link").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("link","containment LinkDeclaration for where result of this substitution will be saved or null if LinkDeclaration was not determined").staticScope(StaticScope.NONE).create();
case 9:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_nodeToCopyPreProcess").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("copy","").staticScope(StaticScope.NONE).create();
case 10:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_nodeToCopyPreProcessOriginal").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("original","").staticScope(StaticScope.NONE).create();
case 11:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_nodeToPastePostProcess").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("pastedNode","").staticScope(StaticScope.NONE).create();
case 12:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_nodeToPasteWrap").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("sourceNode","").staticScope(StaticScope.NONE).create();
case 13:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_nodeToWrap").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("nodeToWrap","instance of wrapped concept created by another substitute action").staticScope(StaticScope.NONE).create();
case 14:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_parameterObject").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("parameterObject","one of parameters returned from the parameters query").staticScope(StaticScope.NONE).create();
case 15:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_parentNode").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("parentNode","the parent node<> of the node<> to substitute").staticScope(StaticScope.NONE).create();
case 16:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_pattern").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("pattern","string entered by user inside competion pop-up, used to hide those actions which matching text was not matched with the pattern").staticScope(StaticScope.NONE).create();
case 17:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_result").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("result","").staticScope(StaticScope.NONE).create();
case 18:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_sourceNode").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("sourceNode","").staticScope(StaticScope.NONE).create();
case 19:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_strictly").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("strictly","true if matching text should match specified pattern completely, false if only beggining of matching text should match this pattern").staticScope(StaticScope.NONE).create();
case 20:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_targetNode").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("targetNode","").staticScope(StaticScope.NONE).create();
case 21:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_wrapped").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("wrapped","boolean property specifying if the result of this substite action will be wrapped into another concept instance before injecting it into the model").staticScope(StaticScope.NONE).create();
case 22:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptPart").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("concept").children(new String[]{"part"},new boolean[]{true}).abstract_().create();
case 23:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptRightTransformPart").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.actions.structure.SideTransformMenuBuilderPart","jetbrains.mps.lang.core.structure.BaseConcept").references("concept").children(new String[]{"nodeQuery","handler"},new boolean[]{false,false}).alias("add concept","").create();
case 24:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptSubstitutePart").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.actions.structure.NodeSubstituteMenuBuilderPart","jetbrains.mps.lang.core.structure.BaseConcept").references("concept").alias("add concept","").create();
case 25:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ConceptsSubstituteMenuPart").super_("jetbrains.mps.lang.actions.structure.SubstituteMenuPart").parents("jetbrains.mps.lang.actions.structure.SubstituteMenuPart").children(new String[]{"query"},new boolean[]{false}).alias("concepts menu","").create();
case 26:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.CopyPasteHandlers").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.structure.structure.IConceptAspect").children(new String[]{"postProcessor","preProcessor"},new boolean[]{true,true}).alias("Copy/Paste Handlers","").create();
case 27:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.CopyPreProcessFunction").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("paste pre process function","").staticScope(StaticScope.NONE).create();
case 28:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.CopyPreProcessor").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("concept").children(new String[]{"preProcessFunction"},new boolean[]{false}).alias("paste pre processor","").create();
case 29:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ExecuteSmartActionFunction").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").staticScope(StaticScope.NONE).create();
case 30:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.GenerateCodeAction").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("description").children(new String[]{"isApplicable","getActionUI","executeSmartAction","smartActionParameter"},new boolean[]{false,false,false,true}).create();
case 31:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.GenericSubstituteMenuPart").super_("jetbrains.mps.lang.actions.structure.SubstituteMenuPart").parents("jetbrains.mps.lang.actions.structure.SubstituteMenuPart").children(new String[]{"query"},new boolean[]{false}).alias("generic query","").create();
case 32:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.GetActionUIFunction").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").staticScope(StaticScope.NONE).create();
case 33:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ISideTransform_String").interface_().create();
case 34:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ISubstitute_String").interface_().create();
case 35:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.IncludeRightTransformForNodePart").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.actions.structure.SideTransformMenuBuilderPart","jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"nodeBlock"},new boolean[]{false}).alias("include transform for","").create();
case 36:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.IsSmartActionApplicableFunction").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").staticScope(StaticScope.NONE).create();
case 37:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.MenuPart").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"actionType"},new boolean[]{false}).abstract_().create();
case 38:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.NF_Concept_NewInstance").super_("jetbrains.mps.lang.smodel.structure.Concept_NewInstance").parents("jetbrains.mps.lang.smodel.structure.Concept_NewInstance").children(new String[]{"prototype"},new boolean[]{false}).alias("new initialized instance","create new initialized node").staticScope(StaticScope.NONE).create();
case 39:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.NF_LinkList_AddNewChildOperation").super_("jetbrains.mps.lang.smodel.structure.LinkList_AddNewChildOperation").parents("jetbrains.mps.lang.smodel.structure.LinkList_AddNewChildOperation").alias("add new initialized","add new initialized child").staticScope(StaticScope.NONE).create();
case 40:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.NF_Link_SetNewChildOperation").super_("jetbrains.mps.lang.smodel.structure.Link_SetNewChildOperation").parents("jetbrains.mps.lang.smodel.structure.Link_SetNewChildOperation").alias("set new initialized","set new initialized child").staticScope(StaticScope.NONE).create();
case 41:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.NF_Model_CreateNewNodeOperation").super_("jetbrains.mps.lang.smodel.structure.Model_CreateNewNodeOperation").parents("jetbrains.mps.lang.smodel.structure.Model_CreateNewNodeOperation").children(new String[]{"prototype"},new boolean[]{false}).alias("new initialized node","").staticScope(StaticScope.NONE).create();
case 42:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.NF_Model_CreateNewRootNodeOperation").super_("jetbrains.mps.lang.smodel.structure.Model_CreateNewRootNodeOperation").parents("jetbrains.mps.lang.smodel.structure.Model_CreateNewRootNodeOperation").children(new String[]{"prototype"},new boolean[]{false}).alias("new initialized root node","").staticScope(StaticScope.NONE).create();
case 43:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.NF_Node_InsertNewNextSiblingOperation").super_("jetbrains.mps.lang.smodel.structure.Node_InsertNewNextSiblingOperation").parents("jetbrains.mps.lang.smodel.structure.Node_InsertNewNextSiblingOperation").alias("new initialized next-sibling","").staticScope(StaticScope.NONE).create();
case 44:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.NF_Node_InsertNewPrevSiblingOperation").super_("jetbrains.mps.lang.smodel.structure.Node_InsertNewPrevSiblingOperation").parents("jetbrains.mps.lang.smodel.structure.Node_InsertNewPrevSiblingOperation").alias("new initialized prev-sibling","").staticScope(StaticScope.NONE).create();
case 45:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.NF_Node_ReplaceWithNewOperation").super_("jetbrains.mps.lang.smodel.structure.Node_ReplaceWithNewOperation").parents("jetbrains.mps.lang.smodel.structure.Node_ReplaceWithNewOperation").alias("replace with new initialized","").staticScope(StaticScope.NONE).create();
case 46:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.NodeFactories").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.structure.structure.IConceptAspect","jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"nodeFactory"},new boolean[]{true}).alias("Node Factories","").create();
case 47:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.NodeFactory").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("description").references("applicableConcept").children(new String[]{"setupFunction"},new boolean[]{false}).alias("node factory","").create();
case 48:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.NodeSetupFunction").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("node setup function","").staticScope(StaticScope.NONE).create();
case 49:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.NodeSetupFunction_EnclosingNode").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("enclosingNode","").staticScope(StaticScope.NONE).create();
case 50:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.NodeSetupFunction_NewNode").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("newNode","").staticScope(StaticScope.NONE).create();
case 51:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.NodeSetupFunction_SampleNode").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("sampleNode","").staticScope(StaticScope.NONE).create();
case 52:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.NodeSubstituteActions").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.structure.structure.IConceptAspect").children(new String[]{"actionsBuilder"},new boolean[]{true}).alias("Node Substitute Actions","").create();
case 53:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.NodeSubstituteActionsBuilder").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("description").references("applicableConcept").children(new String[]{"precondition","part","variable","commonInitializer"},new boolean[]{false,true,true,false}).create();
case 54:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.NodeSubstituteMenuBuilderPart").interface_().create();
case 55:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.NodeSubstitutePreconditionFunction").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("precondition","return true if this substitute actions builder should be used to build substitute menu").staticScope(StaticScope.NONE).create();
case 56:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ParameterizedSideTransformMenuPart").super_("jetbrains.mps.lang.actions.structure.SideTransformMenuPart").parents("jetbrains.mps.lang.actions.structure.SideTransformMenuPart").children(new String[]{"type","query","matchingText","descriptionText","icon","iconNode","handler"},new boolean[]{false,false,false,false,false,false,false}).alias("parameterized item","").create();
case 57:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.ParameterizedSubstituteMenuPart").super_("jetbrains.mps.lang.actions.structure.SubstituteMenuPart").parents("jetbrains.mps.lang.actions.structure.SubstituteMenuPart").children(new String[]{"type","query","matchingText","descriptionText","icon","iconNode","handler","selectionHandler"},new boolean[]{false,false,false,false,false,false,false,false}).alias("parameterized item","").create();
case 58:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.PastePostProcessFunction").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("paste post process function","").staticScope(StaticScope.NONE).create();
case 59:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.PastePostProcessor").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("concept").children(new String[]{"postProcessFunction"},new boolean[]{false}).alias("paste post processor","").create();
case 60:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.PasteWrapper").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("sourceConcept","targetConcept").children(new String[]{"wrapperFunction"},new boolean[]{false}).create();
case 61:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.PasteWrappers").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.structure.structure.IConceptAspect").children(new String[]{"wrapper"},new boolean[]{true}).alias("Paste Wrappers","").create();
case 62:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_ActionType").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("","return result type for this action, used for smart completion").staticScope(StaticScope.NONE).create();
case 63:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_CanSubstitute").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("","return false if this action should be excluded from the substitute menu").staticScope(StaticScope.NONE).create();
case 64:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_GenericSubstituteMenuPart").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("","return collection of custom SubstituteActions").staticScope(StaticScope.NONE).create();
case 65:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_IconNode").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("","return concept<> or node<>. Icon associated with this concept<> or a concept of this node<> will be used for this menu item.").staticScope(StaticScope.NONE).create();
case 66:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_ParameterizedSideTransform_Handler").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").staticScope(StaticScope.NONE).create();
case 67:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_ParameterizedSideTransform_Query").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").staticScope(StaticScope.NONE).create();
case 68:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_ParameterizedSubstitute_Handler").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("","return node<> to substitute currentTargetNode with").staticScope(StaticScope.NONE).create();
case 69:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_ParameterizedSubstitute_Icon").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").staticScope(StaticScope.NONE).create();
case 70:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_ParameterizedSubstitute_Query").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("","return collection of substitute menu part parameters").staticScope(StaticScope.NONE).create();
case 71:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_ParameterizedSubstitute_String").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("","return text string").staticScope(StaticScope.NONE).create();
case 72:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_PasteWrapper").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").staticScope(StaticScope.NONE).create();
case 73:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_RemoveBy_Condition").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("","return true if corresponding substitute action should be removed from the completion menu").staticScope(StaticScope.NONE).create();
case 74:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_ReturnSmallPart").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("","return true if wrapped node should be used to setup selection in editor").staticScope(StaticScope.NONE).create();
case 75:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_STVariableInitializer").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").staticScope(StaticScope.NONE).create();
case 76:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_ST_CommonInitializer").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").staticScope(StaticScope.NONE).create();
case 77:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_ST_RemoveBy_Condition").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").staticScope(StaticScope.NONE).create();
case 78:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_SideTransform_ConceptHandler").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").staticScope(StaticScope.NONE).create();
case 79:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_SideTransform_Handler").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").staticScope(StaticScope.NONE).create();
case 80:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_SideTransform_Icon").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("icon","").staticScope(StaticScope.NONE).create();
case 81:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_SideTransform_NodeQuery").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").staticScope(StaticScope.NONE).create();
case 82:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_SideTransform_String").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction","jetbrains.mps.lang.actions.structure.ISideTransform_String").alias("get text","").staticScope(StaticScope.NONE).create();
case 83:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_SubstituteIcon").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").staticScope(StaticScope.NONE).create();
case 84:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_SubstituteString").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction","jetbrains.mps.lang.actions.structure.ISubstitute_String").alias("","return text string").staticScope(StaticScope.NONE).create();
case 85:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_SubstituteVariableInitializer").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("","return initial value of the variable").staticScope(StaticScope.NONE).create();
case 86:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_SubstituteWrapper").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("","create new instance of output concept wrapping (containing) passed nodeToWrap").staticScope(StaticScope.NONE).create();
case 87:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_Substitute_CommonInitializer").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("","common init block").staticScope(StaticScope.NONE).create();
case 88:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_Substitute_Handler").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("","return node<> to substitute currentTargetNode with").staticScope(StaticScope.NONE).create();
case 89:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.QueryFunction_Substitute_SelectionHandler").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("","return node to select or null if selection API was directly called from the query").staticScope(StaticScope.NONE).create();
case 90:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.RemoveByConditionPart").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.actions.structure.NodeSubstituteMenuBuilderPart","jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"condition"},new boolean[]{false}).alias("remove by condition","").create();
case 91:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.RemoveDefaultsPart").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.actions.structure.NodeSubstituteMenuBuilderPart","jetbrains.mps.lang.core.structure.BaseConcept").alias("remove defaults","").create();
case 92:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.RemovePart").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.actions.structure.NodeSubstituteMenuBuilderPart","jetbrains.mps.lang.actions.structure.SideTransformMenuBuilderPart","jetbrains.mps.lang.core.structure.BaseConcept").references("conceptToRemove").alias("remove concept","").create();
case 93:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.RemoveSTByConditionPart").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.actions.structure.SideTransformMenuBuilderPart","jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"condition"},new boolean[]{false}).alias("remove by condition","").create();
case 94:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.SNodeCreatorAndInitializer").super_("jetbrains.mps.lang.smodel.structure.SNodeCreator").parents("jetbrains.mps.lang.smodel.structure.SNodeCreator").children(new String[]{"prototype"},new boolean[]{false}).alias("initialized node<>","create new initialized node").staticScope(StaticScope.NONE).create();
case 95:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.SideTransformHintSubstituteActions").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.structure.structure.IConceptAspect").children(new String[]{"actionsBuilder"},new boolean[]{true}).alias("Transform Menu Actions","").create();
case 96:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.SideTransformHintSubstituteActionsBuilder").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("description","transformTag","side").references("applicableConcept").children(new String[]{"precondition","part","variable","commonInitializer"},new boolean[]{false,true,true,false}).create();
case 97:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.SideTransformHintSubstitutePreconditionFunction").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("precondition","").staticScope(StaticScope.NONE).create();
case 98:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.SideTransformMenuBuilderPart").interface_().create();
case 99:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.SideTransformMenuPart").super_("jetbrains.mps.lang.actions.structure.MenuPart").parents("jetbrains.mps.lang.actions.structure.MenuPart").abstract_().create();
case 100:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.SideTransformVariableDeclaration").super_("jetbrains.mps.baseLanguage.structure.VariableDeclaration").parents("jetbrains.mps.baseLanguage.structure.VariableDeclaration","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").children(new String[]{"initializerBlock"},new boolean[]{false}).create();
case 101:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.SideTransformVariableReference").super_("jetbrains.mps.baseLanguage.structure.VariableReference").parents("jetbrains.mps.baseLanguage.structure.VariableReference").references("rightTransformVariableDeclaration").staticScope(StaticScope.NONE).create();
case 102:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.SideTransform_SimpleString").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.actions.structure.ISideTransform_String").properties("text").alias("simple string","").staticScope(StaticScope.NONE).create();
case 103:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.SimpleItemSubstitutePart").super_("jetbrains.mps.lang.actions.structure.SubstituteMenuPart").parents("jetbrains.mps.lang.actions.structure.SubstituteMenuPart").children(new String[]{"matchingText","descriptionText","icon","iconNode","canSubstitute","handler","selectionHandler"},new boolean[]{false,false,false,false,false,false,false}).alias("simple","").create();
case 104:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.SimpleSideTransformMenuPart").super_("jetbrains.mps.lang.actions.structure.SideTransformMenuPart").parents("jetbrains.mps.lang.actions.structure.SideTransformMenuPart").children(new String[]{"matchingText","descriptionText","icon","iconNode","handler"},new boolean[]{false,false,false,false,false}).alias("simple item","").create();
case 105:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.SmartActionParameter").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"type"},new boolean[]{false}).create();
case 106:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.SmartActionParameterReference").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").references("smartActionParameter").staticScope(StaticScope.NONE).create();
case 107:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.SmartEditorActions").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"surroundWith","generateCode"},new boolean[]{true,true}).alias("Smart Editor Actions","").create();
case 108:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.SubstituteMenuPart").super_("jetbrains.mps.lang.actions.structure.MenuPart").parents("jetbrains.mps.lang.actions.structure.MenuPart").abstract_().create();
case 109:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.SubstituteNodeBuilderVariableDeclaration").super_("jetbrains.mps.baseLanguage.structure.VariableDeclaration").parents("jetbrains.mps.baseLanguage.structure.VariableDeclaration","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").children(new String[]{"initializerBlock"},new boolean[]{false}).create();
case 110:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.SubstituteNodeBuilderVariableReference").super_("jetbrains.mps.baseLanguage.structure.VariableReference").parents("jetbrains.mps.baseLanguage.structure.VariableReference").references("nodeBuilderVariableDeclaration").staticScope(StaticScope.NONE).create();
case 111:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.Substitute_SimpleString").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.actions.structure.ISubstitute_String","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").properties("text").create();
case 112:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.SurroundWithAction").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
case 113:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.structure.WrapperSubstituteMenuPart").super_("jetbrains.mps.lang.actions.structure.SubstituteMenuPart").parents("jetbrains.mps.lang.actions.structure.SubstituteMenuPart").references("wrappedConcept").children(new String[]{"wrapperBlock","returnSmallPart","selectionHandler"},new boolean[]{false,false,false}).alias("wrapper","").create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
