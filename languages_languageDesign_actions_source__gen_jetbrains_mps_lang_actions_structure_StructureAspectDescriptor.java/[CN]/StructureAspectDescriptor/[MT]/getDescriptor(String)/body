{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.AddMenuPart","jetbrains.mps.lang.actions.structure.ConceptPart",false,new String[]{"jetbrains.mps.lang.actions.structure.ConceptPart","jetbrains.mps.lang.actions.structure.NodeSubstituteMenuBuilderPart","jetbrains.mps.lang.actions.structure.SideTransformMenuBuilderPart"},new String[]{},new String[]{},new String[]{});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_EditorCell","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{},new String[]{});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_OperationContext","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{},new String[]{});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_childConcept","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_childSetter","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_concept","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_createdNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{},new String[]{});
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_currentTargetNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_link","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_nodeToCopyPreProcess","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{},new String[]{});
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_nodeToCopyPreProcessOriginal","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{},new String[]{});
case 11:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_nodeToPastePostProcess","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{},new String[]{});
case 12:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_nodeToPasteWrap","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 13:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_nodeToWrap","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 14:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_parameterObject","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 15:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_parentNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 16:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_pattern","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 17:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_result","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 18:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_sourceNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 19:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_strictly","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 20:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_targetNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 21:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptFunctionParameter_wrapped","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 22:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptPart","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"concept"},new String[]{"part"});
case 23:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptRightTransformPart","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.actions.structure.SideTransformMenuBuilderPart","jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"concept"},new String[]{"nodeQuery","handler"});
case 24:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptSubstitutePart","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.actions.structure.NodeSubstituteMenuBuilderPart","jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"concept"},new String[]{});
case 25:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ConceptsSubstituteMenuPart","jetbrains.mps.lang.actions.structure.SubstituteMenuPart",false,new String[]{"jetbrains.mps.lang.actions.structure.SubstituteMenuPart"},new String[]{},new String[]{},new String[]{"query"});
case 26:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.CopyPasteHandlers","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.structure.structure.IConceptAspect"},new String[]{},new String[]{},new String[]{"postProcessor","preProcessor"});
case 27:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.CopyPreProcessFunction","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 28:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.CopyPreProcessor","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"concept"},new String[]{"preProcessFunction"});
case 29:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ExecuteSmartActionFunction","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 30:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.GenerateCodeAction","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"description"},new String[]{},new String[]{"isApplicable","getActionUI","executeSmartAction","smartActionParameter"});
case 31:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.GenericSubstituteMenuPart","jetbrains.mps.lang.actions.structure.SubstituteMenuPart",false,new String[]{"jetbrains.mps.lang.actions.structure.SubstituteMenuPart"},new String[]{},new String[]{},new String[]{"query"});
case 32:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.GetActionUIFunction","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 33:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ISideTransform_String",null,true,new String[]{},new String[]{},new String[]{},new String[]{});
case 34:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ISubstitute_String",null,true,new String[]{},new String[]{},new String[]{},new String[]{});
case 35:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.IncludeRightTransformForNodePart","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.actions.structure.SideTransformMenuBuilderPart","jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{"nodeBlock"});
case 36:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.IsSmartActionApplicableFunction","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 37:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.MenuPart","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{"actionType"});
case 38:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.NF_Concept_NewInstance","jetbrains.mps.lang.smodel.structure.Concept_NewInstance",false,new String[]{"jetbrains.mps.lang.smodel.structure.Concept_NewInstance"},new String[]{},new String[]{},new String[]{"prototype"});
case 39:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.NF_LinkList_AddNewChildOperation","jetbrains.mps.lang.smodel.structure.LinkList_AddNewChildOperation",false,new String[]{"jetbrains.mps.lang.smodel.structure.LinkList_AddNewChildOperation"},new String[]{},new String[]{},new String[]{});
case 40:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.NF_Link_SetNewChildOperation","jetbrains.mps.lang.smodel.structure.Link_SetNewChildOperation",false,new String[]{"jetbrains.mps.lang.smodel.structure.Link_SetNewChildOperation"},new String[]{},new String[]{},new String[]{});
case 41:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.NF_Model_CreateNewNodeOperation","jetbrains.mps.lang.smodel.structure.Model_CreateNewNodeOperation",false,new String[]{"jetbrains.mps.lang.smodel.structure.Model_CreateNewNodeOperation"},new String[]{},new String[]{},new String[]{"prototype"});
case 42:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.NF_Model_CreateNewRootNodeOperation","jetbrains.mps.lang.smodel.structure.Model_CreateNewRootNodeOperation",false,new String[]{"jetbrains.mps.lang.smodel.structure.Model_CreateNewRootNodeOperation"},new String[]{},new String[]{},new String[]{"prototype"});
case 43:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.NF_Node_InsertNewNextSiblingOperation","jetbrains.mps.lang.smodel.structure.Node_InsertNewNextSiblingOperation",false,new String[]{"jetbrains.mps.lang.smodel.structure.Node_InsertNewNextSiblingOperation"},new String[]{},new String[]{},new String[]{});
case 44:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.NF_Node_InsertNewPrevSiblingOperation","jetbrains.mps.lang.smodel.structure.Node_InsertNewPrevSiblingOperation",false,new String[]{"jetbrains.mps.lang.smodel.structure.Node_InsertNewPrevSiblingOperation"},new String[]{},new String[]{},new String[]{});
case 45:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.NF_Node_ReplaceWithNewOperation","jetbrains.mps.lang.smodel.structure.Node_ReplaceWithNewOperation",false,new String[]{"jetbrains.mps.lang.smodel.structure.Node_ReplaceWithNewOperation"},new String[]{},new String[]{},new String[]{});
case 46:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.NodeFactories","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.structure.structure.IConceptAspect","jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{"nodeFactory"});
case 47:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.NodeFactory","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"description"},new String[]{"applicableConcept"},new String[]{"setupFunction"});
case 48:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.NodeSetupFunction","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 49:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.NodeSetupFunction_EnclosingNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{},new String[]{});
case 50:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.NodeSetupFunction_NewNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{},new String[]{});
case 51:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.NodeSetupFunction_SampleNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{},new String[]{});
case 52:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.NodeSubstituteActions","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.structure.structure.IConceptAspect"},new String[]{},new String[]{},new String[]{"actionsBuilder"});
case 53:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.NodeSubstituteActionsBuilder","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"description"},new String[]{"applicableConcept"},new String[]{"precondition","part","variable","commonInitializer"});
case 54:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.NodeSubstituteMenuBuilderPart",null,true,new String[]{},new String[]{},new String[]{},new String[]{});
case 55:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.NodeSubstitutePreconditionFunction","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 56:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ParameterizedSideTransformMenuPart","jetbrains.mps.lang.actions.structure.SideTransformMenuPart",false,new String[]{"jetbrains.mps.lang.actions.structure.SideTransformMenuPart"},new String[]{},new String[]{},new String[]{"type","query","matchingText","descriptionText","icon","iconNode","handler"});
case 57:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.ParameterizedSubstituteMenuPart","jetbrains.mps.lang.actions.structure.SubstituteMenuPart",false,new String[]{"jetbrains.mps.lang.actions.structure.SubstituteMenuPart"},new String[]{},new String[]{},new String[]{"type","query","matchingText","descriptionText","icon","iconNode","handler","selectionHandler"});
case 58:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.PastePostProcessFunction","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 59:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.PastePostProcessor","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"concept"},new String[]{"postProcessFunction"});
case 60:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.PasteWrapper","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"sourceConcept","targetConcept"},new String[]{"wrapperFunction"});
case 61:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.PasteWrappers","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.structure.structure.IConceptAspect"},new String[]{},new String[]{},new String[]{"wrapper"});
case 62:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_ActionType","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 63:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_CanSubstitute","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 64:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_GenericSubstituteMenuPart","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 65:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_IconNode","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 66:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_ParameterizedSideTransform_Handler","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 67:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_ParameterizedSideTransform_Query","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 68:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_ParameterizedSubstitute_Handler","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 69:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_ParameterizedSubstitute_Icon","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 70:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_ParameterizedSubstitute_Query","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 71:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_ParameterizedSubstitute_String","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 72:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_PasteWrapper","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 73:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_RemoveBy_Condition","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 74:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_ReturnSmallPart","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 75:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_STVariableInitializer","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 76:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_ST_CommonInitializer","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 77:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_ST_RemoveBy_Condition","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 78:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_SideTransform_ConceptHandler","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 79:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_SideTransform_Handler","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 80:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_SideTransform_Icon","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 81:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_SideTransform_NodeQuery","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 82:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_SideTransform_String","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction","jetbrains.mps.lang.actions.structure.ISideTransform_String"},new String[]{},new String[]{},new String[]{});
case 83:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_SubstituteIcon","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 84:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_SubstituteString","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction","jetbrains.mps.lang.actions.structure.ISubstitute_String"},new String[]{},new String[]{},new String[]{});
case 85:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_SubstituteVariableInitializer","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 86:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_SubstituteWrapper","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 87:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_Substitute_CommonInitializer","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 88:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_Substitute_Handler","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 89:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.QueryFunction_Substitute_SelectionHandler","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 90:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.RemoveByConditionPart","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.actions.structure.NodeSubstituteMenuBuilderPart","jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{"condition"});
case 91:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.RemoveDefaultsPart","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.actions.structure.NodeSubstituteMenuBuilderPart","jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{});
case 92:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.RemovePart","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.actions.structure.NodeSubstituteMenuBuilderPart","jetbrains.mps.lang.actions.structure.SideTransformMenuBuilderPart","jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"conceptToRemove"},new String[]{});
case 93:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.RemoveSTByConditionPart","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.actions.structure.SideTransformMenuBuilderPart","jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{"condition"});
case 94:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.SNodeCreatorAndInitializer","jetbrains.mps.lang.smodel.structure.SNodeCreator",false,new String[]{"jetbrains.mps.lang.smodel.structure.SNodeCreator"},new String[]{},new String[]{},new String[]{"prototype"});
case 95:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.SideTransformHintSubstituteActions","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.structure.structure.IConceptAspect"},new String[]{},new String[]{},new String[]{"actionsBuilder"});
case 96:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.SideTransformHintSubstituteActionsBuilder","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"description","transformTag","side"},new String[]{"applicableConcept"},new String[]{"precondition","part","variable","commonInitializer"});
case 97:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.SideTransformHintSubstitutePreconditionFunction","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 98:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.SideTransformMenuBuilderPart",null,true,new String[]{},new String[]{},new String[]{},new String[]{});
case 99:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.SideTransformMenuPart","jetbrains.mps.lang.actions.structure.MenuPart",false,new String[]{"jetbrains.mps.lang.actions.structure.MenuPart"},new String[]{},new String[]{},new String[]{});
case 100:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.SideTransformVariableDeclaration","jetbrains.mps.baseLanguage.structure.VariableDeclaration",false,new String[]{"jetbrains.mps.baseLanguage.structure.VariableDeclaration","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{"initializerBlock"});
case 101:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.SideTransformVariableReference","jetbrains.mps.baseLanguage.structure.VariableReference",false,new String[]{"jetbrains.mps.baseLanguage.structure.VariableReference"},new String[]{},new String[]{"rightTransformVariableDeclaration"},new String[]{});
case 102:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.SideTransform_SimpleString","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.actions.structure.ISideTransform_String"},new String[]{"text"},new String[]{},new String[]{});
case 103:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.SimpleItemSubstitutePart","jetbrains.mps.lang.actions.structure.SubstituteMenuPart",false,new String[]{"jetbrains.mps.lang.actions.structure.SubstituteMenuPart"},new String[]{},new String[]{},new String[]{"matchingText","descriptionText","icon","iconNode","canSubstitute","handler","selectionHandler"});
case 104:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.SimpleSideTransformMenuPart","jetbrains.mps.lang.actions.structure.SideTransformMenuPart",false,new String[]{"jetbrains.mps.lang.actions.structure.SideTransformMenuPart"},new String[]{},new String[]{},new String[]{"matchingText","descriptionText","icon","iconNode","handler"});
case 105:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.SmartActionParameter","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{"type"});
case 106:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.SmartActionParameterReference","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"smartActionParameter"},new String[]{});
case 107:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.SmartEditorActions","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{"surroundWith","generateCode"});
case 108:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.SubstituteMenuPart","jetbrains.mps.lang.actions.structure.MenuPart",false,new String[]{"jetbrains.mps.lang.actions.structure.MenuPart"},new String[]{},new String[]{},new String[]{});
case 109:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.SubstituteNodeBuilderVariableDeclaration","jetbrains.mps.baseLanguage.structure.VariableDeclaration",false,new String[]{"jetbrains.mps.baseLanguage.structure.VariableDeclaration","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{"initializerBlock"});
case 110:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.SubstituteNodeBuilderVariableReference","jetbrains.mps.baseLanguage.structure.VariableReference",false,new String[]{"jetbrains.mps.baseLanguage.structure.VariableReference"},new String[]{},new String[]{"nodeBuilderVariableDeclaration"},new String[]{});
case 111:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.Substitute_SimpleString","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.actions.structure.ISubstitute_String","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{"text"},new String[]{},new String[]{});
case 112:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.SurroundWithAction","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{});
case 113:
return new CompiledConceptDescriptor("jetbrains.mps.lang.actions.structure.WrapperSubstituteMenuPart","jetbrains.mps.lang.actions.structure.SubstituteMenuPart",false,new String[]{"jetbrains.mps.lang.actions.structure.SubstituteMenuPart"},new String[]{},new String[]{"wrappedConcept"},new String[]{"wrapperBlock","returnSmallPart","selectionHandler"});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
