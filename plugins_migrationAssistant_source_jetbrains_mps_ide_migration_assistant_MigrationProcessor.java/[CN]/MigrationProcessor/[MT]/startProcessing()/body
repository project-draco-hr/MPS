{
  if (!myStarted.compareAndSet(false,true))   throw new IllegalStateException("already processing");
  final ArrayList<Object> actionsCopy=new ArrayList<Object>(mySelectedActions);
  new Timer("foo",300){
    int myStep=0;
    @Override protected void onTimer() throws InterruptedException {
      final int step=myStep++;
      if (step >= actionsCopy.size()) {
        this.dispose();
        myFinished.set(true);
        UIUtil.invokeLaterIfNeeded(new Runnable(){
          @Override public void run(){
            fireFinishedAll();
          }
        }
);
      }
 else {
        UIUtil.invokeLaterIfNeeded(new Runnable(){
          @Override public void run(){
            fireStartingAction(actionsCopy.get(step));
            fireFinishedAction(actionsCopy.get(step));
          }
        }
);
      }
    }
  }
.start();
}
