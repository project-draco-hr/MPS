{
  return ListSequence.fromList(SConceptOperations.getAllSubConcepts(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.NodeMacro"),SNodeOperations.getModel(node))).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return !(SPropertyOperations.getBoolean(it,"abstract"));
    }
  }
).subtract(Sequence.fromIterable(Sequence.<SNode>singleton(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.SwitchMacro")))).toListSequence();
}
