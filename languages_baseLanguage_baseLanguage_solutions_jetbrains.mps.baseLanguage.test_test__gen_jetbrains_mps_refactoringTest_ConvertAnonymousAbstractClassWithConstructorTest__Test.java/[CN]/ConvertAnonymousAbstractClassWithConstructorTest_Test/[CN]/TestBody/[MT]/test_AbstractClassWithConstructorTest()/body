{
  this.addNodeById("3145818413497245832");
  this.addNodeById("3145818413497245858");
  this.addNodeById("3145818413497257580");
  new ConvertAnonymousRefactoring(SNodeOperations.cast(this.getNodeById("3145818413497246005"),"jetbrains.mps.baseLanguage.structure.AnonymousClass"),"MyAConst").doRefactor();
  Assert.assertNull("nodes '" + SNodeOperations.cast(this.getNodeById("3145818413497245980"),"jetbrains.mps.baseLanguage.structure.ClassConcept") + "' and '"+ SNodeOperations.cast(this.getNodeById("3145818413497698452"),"jetbrains.mps.baseLanguage.structure.ClassConcept")+ "' do not match!",NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("3145818413497245980"),"jetbrains.mps.baseLanguage.structure.ClassConcept")),ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("3145818413497698452"),"jetbrains.mps.baseLanguage.structure.ClassConcept"))));
}
