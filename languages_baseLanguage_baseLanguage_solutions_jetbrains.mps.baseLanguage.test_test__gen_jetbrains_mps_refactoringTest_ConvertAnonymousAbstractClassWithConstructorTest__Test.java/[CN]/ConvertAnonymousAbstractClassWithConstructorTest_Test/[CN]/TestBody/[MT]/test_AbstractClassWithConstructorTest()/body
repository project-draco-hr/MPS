{
  this.addNodeById("3145818413497245832");
  this.addNodeById("3145818413497245858");
  this.addNodeById("3145818413497257580");
  new ConvertAnonymousRefactoring(SNodeOperations.cast(this.getNodeById("3145818413497246005"),"jetbrains.mps.baseLanguage.structure.AnonymousClass"),"MyAConst").doRefactor();
{
    List<SNode> nodesBefore=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("3145818413497245980"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    List<SNode> nodesAfter=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("3145818413497698452"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    Assert.assertNull("nodes '" + nodesBefore + "' and '"+ nodesAfter+ "' do not match!",NodesMatcher.matchNodes(nodesBefore,nodesAfter));
  }
}
