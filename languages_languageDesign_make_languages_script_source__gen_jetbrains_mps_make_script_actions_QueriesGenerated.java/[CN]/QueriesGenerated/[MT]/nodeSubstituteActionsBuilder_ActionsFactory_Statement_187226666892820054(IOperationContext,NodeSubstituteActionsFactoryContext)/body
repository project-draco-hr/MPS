{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.make.script.structure.BeginWorkStatement");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          return _quotation_createNode_kz2qu0_a0a0a0a();
        }
        public String getMatchingText(        String pattern){
          return SPropertyOperations.getString(SConceptOperations.findConceptDeclaration("jetbrains.mps.make.script.structure.BeginWorkStatement"),MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1169125787135l,5092175715804935370l,"conceptAlias"));
        }
        public String getVisibleMatchingText(        String pattern){
          return getMatchingText(pattern);
        }
      }
);
    }
  }
  ListSequence.fromList(result).addSequence(ListSequence.fromList(ChildSubstituteActionsHelper.createDefaultSubstituteActions(SConceptOperations.findConceptDeclaration("jetbrains.mps.make.script.structure.AdvanceWorkStatement"),_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter())));
  ListSequence.fromList(result).addSequence(ListSequence.fromList(ChildSubstituteActionsHelper.createDefaultSubstituteActions(SConceptOperations.findConceptDeclaration("jetbrains.mps.make.script.structure.FinishWorkStatement"),_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter())));
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.make.script.structure.AdvanceWorkStatement");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          return SNodeOperations.getNodeDescendants(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getParentNode(),MetaAdapterFactory.getConcept(new UUID(-7640176555408995168l,-6458594812920713925l),2360002718792625579l,"jetbrains.mps.make.script.structure.JobDefinition"),false,false),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1137021947720l,1137022507850l,"body")),MetaAdapterFactory.getConcept(new UUID(-7640176555408995168l,-6458594812920713925l),187226666892683650l,"jetbrains.mps.make.script.structure.BeginWorkStatement"),false,new SConcept[]{});
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              return _quotation_createNode_kz2qu0_a0a0a3a((item));
            }
            public String getMatchingText(            String pattern){
              return SPropertyOperations.getString(SConceptOperations.findConceptDeclaration("jetbrains.mps.make.script.structure.AdvanceWorkStatement"),MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1169125787135l,5092175715804935370l,"conceptAlias")) + " <amount> of " + SPropertyOperations.getString((item),MetaAdapterFactory.getProperty(new UUID(-7640176555408995168l,-6458594812920713925l),187226666892683650l,682890046602602769l,"workName"));
            }
            public String getVisibleMatchingText(            String pattern){
              return getMatchingText(pattern);
            }
          }
);
        }
      }
    }
  }
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.make.script.structure.FinishWorkStatement");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          return SNodeOperations.getNodeDescendants(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getParentNode(),MetaAdapterFactory.getConcept(new UUID(-7640176555408995168l,-6458594812920713925l),2360002718792625579l,"jetbrains.mps.make.script.structure.JobDefinition"),false,false),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1137021947720l,1137022507850l,"body")),MetaAdapterFactory.getConcept(new UUID(-7640176555408995168l,-6458594812920713925l),187226666892683650l,"jetbrains.mps.make.script.structure.BeginWorkStatement"),false,new SConcept[]{});
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              return _quotation_createNode_kz2qu0_a0a0a4a((item));
            }
            public String getMatchingText(            String pattern){
              return SPropertyOperations.getString(SConceptOperations.findConceptDeclaration("jetbrains.mps.make.script.structure.FinishWorkStatement"),MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1169125787135l,5092175715804935370l,"conceptAlias")) + " " + SPropertyOperations.getString((item),MetaAdapterFactory.getProperty(new UUID(-7640176555408995168l,-6458594812920713925l),187226666892683650l,682890046602602769l,"workName"));
            }
            public String getVisibleMatchingText(            String pattern){
              return getMatchingText(pattern);
            }
          }
);
        }
      }
    }
  }
  return result;
}
