{
  final SModel inputModel=task.getModel();
  SModule module=inputModel.getModule();
  if (module == null) {
    myLogger.warning(String.format("Model %s won't be generated as its module is unknown",inputModel.getName()));
    monitor.done();
    return false;
  }
  boolean currentGenerationOK=false;
  IPerformanceTracer ttrace=myOptions.getTracingMode() != GenerationOptions.TRACE_OFF ? new PerformanceTracer("model " + inputModel.getName().getSimpleName()) : new NullPerformanceTracer();
  boolean traceTypes=myOptions.getTracingMode() == GenerationOptions.TRACE_TYPES;
  TypeChecker.getInstance().generationStarted(traceTypes ? ttrace : null);
  final TransientModelsModule transientModule=myContext.getTransientModelProvider().getModule(module);
  final GenerationTrace genTrace=myOptions.isSaveTransientModels() ? new GenTraceImpl(transientModule) : new GenerationTrace.NoOp();
  final GenerationSession generationSession=new GenerationSession(inputModel,myContext,this,myLogger,transientModule,ttrace,genTrace);
  monitor.start(inputModel.getName().getValue(),10);
  try {
    generationSession.getLoggingHandler().register();
    if (myLogger.needsInfo()) {
      myLogger.info("");
      myLogger.info("[model " + inputModel.getName() + (myOptions.isRebuildAll() ? ", rebuilding" : "")+ (myOptions.isGenerateInParallel() ? ", using " + myOptions.getNumberOfThreads() + " threads]" : "]"));
    }
    myGenerationHandler.start(task);
    GenerationStatus status=generationSession.generateModel(monitor.subTask(9));
    monitor.advance(0);
    status.setOriginalInputModel(inputModel);
    currentGenerationOK=status.isOk();
    checkMonitorCanceled(monitor);
    if (myOptions.isSaveTransientModels()) {
      transientModule.publishTrace(inputModel.getReference(),genTrace);
    }
    myGenerationHandler.done(task,status);
    monitor.advance(1);
  }
  finally {
    generationSession.getLoggingHandler().unregister();
    generationSession.discardTransients();
    monitor.done();
    TypeChecker.getInstance().generationFinished();
  }
  String report=ttrace.report();
  if (report != null) {
    myLogger.trace(report);
  }
  return currentGenerationOK;
}
