{
  if (EventUtil.isDetachedOnlyChange(events)) {
    return;
  }
  if (!EventUtil.isDramaticalChange(events)) {
    if (EventUtil.isPropertyChange(events)) {
      String propertyName=((SModelPropertyEvent)events.get(0)).getPropertyName();
      SNodeProxy nodeProxy=new SNodeProxy(((SModelPropertyEvent)events.get(0)).getNode());
      Pair<SNodeProxy,String> pair=new Pair<SNodeProxy,String>(nodeProxy,propertyName);
      Set<EditorCell_Property> editorCell_properties=myNodePropertiesAccessedCleanlyToDependentCellsMap.get(pair);
      Set<EditorCell> editorCells=myNodePropertiesAccessedDirtilyToDependentCellsMap.get(pair);
      if (editorCells != null) {
        rebuildEditorContent(events);
      }
 else       if (editorCell_properties != null) {
        for (        EditorCell_Property cell : editorCell_properties) {
          cell.synchronizeViewWithModel();
          fireCellSynchronized(cell);
        }
        relayout();
      }
    }
 else {
      rebuildEditorContent(events);
    }
  }
 else {
    rebuildEditorContent(events);
    if (!hasFocus())     return;
    updateSelection(events);
  }
}
