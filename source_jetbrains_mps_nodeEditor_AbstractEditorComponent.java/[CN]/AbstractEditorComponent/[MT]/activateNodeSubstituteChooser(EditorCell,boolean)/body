{
  if (myNodeSubstituteChooser.isVisible()) {
    return true;
  }
  INodeSubstituteInfo substituteInfo=null;
  if (editorCell != null) {
    SemanticNode cellNode=editorCell.getSemanticNode();
    EditorCell infoCell=editorCell;
    while (substituteInfo == null) {
      substituteInfo=infoCell.getSubstituteInfo();
      infoCell=infoCell.getParent();
      if (infoCell == null || infoCell.getSemanticNode() != cellNode) {
        break;
      }
    }
  }
  if (substituteInfo == null) {
    return false;
  }
  System.out.println("substitute info : " + substituteInfo);
  NodeSubstitutePatternEditor patternEditor=editorCell.createSubstitutePatternEditor();
  if (resetPattern) {
    patternEditor.setCaretPosition(0);
  }
  String pattern=patternEditor.getPattern();
  boolean trySubstituteNow=!patternEditor.getText().equals(substituteInfo.getOriginalText()) || pattern.equals(patternEditor.getText());
  if (trySubstituteNow) {
    List<INodeSubstituteItem> matchingActions=substituteInfo.getMatchingItems(pattern,false);
    if (matchingActions.size() == 1) {
      CommandUtil.substituteNode(matchingActions.get(0),pattern,substituteInfo,this.getContext());
      return true;
    }
  }
  myNodeSubstituteChooser.setNodeSubstituteInfo(substituteInfo);
  myNodeSubstituteChooser.setPatternEditor(patternEditor);
  myNodeSubstituteChooser.setLocationRelative(editorCell);
  myNodeSubstituteChooser.setVisible(true);
  return true;
}
