{
  if (myNodeSubstituteChooser.isVisible()) {
    if (myNodeSubstituteChooser.processKeyPressed(keyEvent)) {
      keyEvent.consume();
      return true;
    }
  }
  String actionType=getActionType(keyEvent,editorContext);
  boolean executeCellCommand=true;
  if (actionType == EditorCellAction.RIGHT_TRANSFORM && mySelectedCell != null && getCellAction(mySelectedCell,actionType) != null) {
    executeCellCommand=validateCellBeforeTransform(mySelectedCell);
  }
  if (mySelectedCell != null) {
    if (actionType != null) {
      if (executeCellCommand) {
        if (executeCellAction(mySelectedCell,actionType)) {
          keyEvent.consume();
          return true;
        }
      }
    }
    EditorCell oldSelection=mySelectedCell;
    if (mySelectedCell.processKeyPressed(keyEvent) == true) {
      if (oldSelection != mySelectedCell) {
        mySelectedStack.removeAllElements();
      }
      keyEvent.consume();
      return true;
    }
    if ((keyEvent.getKeyCode() == KeyEvent.VK_SPACE && keyEvent.isControlDown()) || (keyEvent.getKeyCode() == KeyEvent.VK_ENTER && !keyEvent.isControlDown())) {
      if (activateNodeSubstituteChooser(mySelectedCell,keyEvent.getKeyCode() == KeyEvent.VK_ENTER)) {
        keyEvent.consume();
        System.out.println("SUBSTITUTE");
        return true;
      }
      System.out.println("NO SUBSTITUTE");
    }
  }
  if (actionType != null) {
    if (executeGlobalAction(actionType)) {
      keyEvent.consume();
      return true;
    }
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_UP && keyEvent.isControlDown()) {
    keyEvent.consume();
  }
  return false;
}
