{
  if (resetLastCaretX) {
    resetLastCaretX();
  }
  if (newSelectedCell == mySelectedCell) {
    return;
  }
  myNodeSubstituteChooser.setVisible(false);
  myNodeRangeSelection.deactivate();
  EditorCell oldSelection=mySelectedCell;
  if (mySelectedCell != null) {
    mySelectedCell.setSelected(false);
  }
  mySelectedCell=newSelectedCell;
  if (mySelectedCell != null) {
    mySelectedCell.setSelected(true);
  }
  if (mySelectedCell != null) {
    EditorCell cell=getDeepestSelectedCell();
    Rectangle selectionRect;
    if (cell instanceof EditorCell_Label) {
      EditorCell_Label cellLabel=(EditorCell_Label)cell;
      int caretX=cellLabel.getCaretX();
      int charWidth=cellLabel.getCharWidth();
      selectionRect=new Rectangle(caretX - 2 * charWidth,cellLabel.getY(),4 * charWidth,cellLabel.getHeight());
    }
 else {
      selectionRect=new Rectangle(cell.getX(),cell.getY(),30,cell.getHeight());
    }
    scrollRectToVisible(selectionRect);
  }
  repaint();
  fireCellSelectionChanged(oldSelection,newSelectedCell);
}
