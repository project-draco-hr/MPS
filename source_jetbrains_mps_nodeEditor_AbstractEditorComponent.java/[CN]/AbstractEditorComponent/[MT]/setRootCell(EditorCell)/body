{
  if (myRootCell != null) {
    SNode semanticNode=myRootCell.getSNode();
    if (semanticNode != null) {
      SModel semanticModel=semanticNode.getModel();
      semanticModel.removeSModelCommandListener(myModelListener);
    }
  }
  myRootCell=rootCell;
  myRootCell.setX(myShiftX);
  myRootCell.setY(myShiftY);
  myRootCell.relayout();
  Set<SNode> nodesWhichEditorDependsOn=myCellsToNodesToDependOnMap.get(myRootCell);
  if (nodesWhichEditorDependsOn != null) {
    for (    SNode node : nodesWhichEditorDependsOn) {
      SModel model=node.getModel();
      if (!model.hasSModelCommandListener(myModelListener)) {
        model.addSModelCommandListener(myModelListener);
      }
    }
  }
  Set<SNodeProxy> refTargetsWhichEditorDependsOn=myCellsToRefTargetsToDependOnMap.get(myRootCell);
  if (refTargetsWhichEditorDependsOn != null) {
    Set<SNodeProxy> nodeProxiesToDelete=new HashSet<SNodeProxy>();
    for (    SNodeProxy nodeProxy : refTargetsWhichEditorDependsOn) {
      SModelDescriptor model=nodeProxy.getModel();
      if (model == null) {
        nodeProxiesToDelete.add(nodeProxy);
        continue;
      }
      if (!model.hasSModelCommandListener(myModelListener)) {
        model.addSModelCommandListener(myModelListener);
      }
    }
    refTargetsWhichEditorDependsOn.removeAll(nodeProxiesToDelete);
  }
  revalidate();
  repaint();
}
