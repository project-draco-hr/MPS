{
  ActionGroup group=ActionManager.instance().getGroup(EDITOR_POPUP_MENU_ACTIONS);
  if (group == null)   return;
  ActionContext context=createActionContext();
  if (context == null)   return;
  JPopupMenu popupMenu=new JPopupMenu();
  group.add(popupMenu,context);
  EditorCell cell=getSelectedCell();
{
    final EditorContext editorContext=createEditorContextForActions();
    List<EditorCellKeyMapAction> actions=new ArrayList<EditorCellKeyMapAction>();
    for (    EditorCellKeyMapAction action : KeyMapUtil.getRegisteredActions(cell,editorContext)) {
      try {
        if (action.isShownInPopupMenu() && action.canExecute(null,editorContext)) {
          actions.add(action);
        }
      }
 catch (      Throwable t) {
        LOG.error(t);
      }
    }
    if (!actions.isEmpty())     popupMenu.addSeparator();
    for (    final EditorCellKeyMapAction action : actions) {
      MPSAction mpsAction=new MPSAction("" + action.getDescriptionText()){
        private EditorCellKeyMapAction myAction=action;
        @NotNull public String getKeyStroke(){
          return action.getKeyStroke();
        }
        public void execute(        @NotNull ActionContext context){
          myAction.execute(null,editorContext);
        }
      }
;
      mpsAction.add(popupMenu,context);
    }
  }
  popupMenu.show(AbstractEditorComponent.this,x,y);
}
