{
  setDoubleBuffered(true);
  setFocusTraversalKeysEnabled(false);
  myScrollPane=new JScrollPane();
  myScrollPane.setViewportView(this);
  myScrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);
  myScrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
  myContainer=new JPanel();
  myContainer.setLayout(new BorderLayout());
  myContainer.add(myScrollPane,BorderLayout.CENTER);
  myNodeSubstituteChooser=new NodeSubstituteChooser(this);
  myKbdHandlersStack=new Stack<IKeyboardHandler>();
  myKbdHandlersStack.push((IKeyboardHandler)this);
  myActionMap=new HashMap();
  myActionMap.put(EditorCellAction.LEFT,new NodeEditorActions.LEFT());
  myActionMap.put(EditorCellAction.RIGHT,new NodeEditorActions.RIGHT());
  myActionMap.put(EditorCellAction.UP,new NodeEditorActions.UP());
  myActionMap.put(EditorCellAction.DOWN,new NodeEditorActions.DOWN());
  myActionMap.put(EditorCellAction.NEXT,new NodeEditorActions.NEXT());
  myActionMap.put(EditorCellAction.PREV,new NodeEditorActions.PREV());
  myActionMap.put(EditorCellAction.LEFT_SPECIAL,new NodeEditorActions.LEFT());
  myActionMap.put(EditorCellAction.RIGHT_SPECIAL,new NodeEditorActions.RIGHT());
  myActionMap.put(EditorCellAction.UP_SPECIAL,new NodeEditorActions.UP_SPECIAL());
  myActionMap.put(EditorCellAction.DOWN_SPECIAL,new NodeEditorActions.DOWN_SPECIAL());
  myActionMap.put(EditorCellAction.COPY,new CellAction_CopyNode());
  myActionMap.put(EditorCellAction.PASTE,new CellAction_PasteNode());
  myActionMap.put(EditorCellAction.PASTE_BEFORE,new CellAction_PasteNodeRelative(true));
  myActionMap.put(EditorCellAction.PASTE_AFTER,new CellAction_PasteNodeRelative(false));
  addMouseListener(new MouseAdapter(){
    public void mousePressed(    final MouseEvent e){
      processMousePressed(e);
    }
  }
);
  addKeyListener(new KeyAdapter(){
    public void keyPressed(    final KeyEvent e){
      processKeyPressed(e);
    }
    public void keyReleased(    final KeyEvent e){
      processKeyReleased(e);
    }
  }
);
}
