{
  JoinType joinType=JoinType.newInstance(TypeChecker.getInstance().getRuntimeTypesModel());
  if (BaseAdapter.isInstance(wrapper1.getNode(),JoinType.class)) {
    JoinType joinWrapper1=(JoinType)wrapper1.getNode().getAdapter();
    for (    BaseConcept bc : joinWrapper1.getArguments()) {
      joinType.addArgument(bc);
    }
    if (BaseAdapter.isInstance(wrapper2.getNode(),JoinType.class)) {
      JoinType joinWrapper2=(JoinType)wrapper2.getNode().getAdapter();
      for (      BaseConcept bc : joinWrapper2.getArguments()) {
        joinType.addArgument(bc);
      }
    }
 else {
      joinType.addArgument((BaseConcept)(BaseAdapter.fromNode(wrapper2.getNode())));
    }
  }
 else   if (BaseAdapter.isInstance(wrapper2.getNode(),JoinType.class)) {
    JoinType joinWrapper2=(JoinType)wrapper2.getNode().getAdapter();
    joinType.addArgument((BaseConcept)(BaseAdapter.fromNode(wrapper1.getNode())));
    for (    BaseConcept bc : joinWrapper2.getArguments()) {
      joinType.addArgument(bc);
    }
  }
 else {
    joinType.addArgument((BaseConcept)(BaseAdapter.fromNode(wrapper1.getNode())));
    joinType.addArgument((BaseConcept)(BaseAdapter.fromNode(wrapper2.getNode())));
  }
  return NodeWrapper.createWrapperFromNode(joinType.getNode(),null);
}
