{
  if (getBuffer().hasPositionsSupport()) {
    TraceInfoGenerationUtil.createUnitInfo(this,node);
  }
  BaseLangInternal.className(SPropertyOperations.getString(node,"fqClassName"),node,this);
  if (ListSequence.fromList(SLinkOperations.getTargets(node,"typeParameter",true)).isNotEmpty()) {
    this.append("<");
    if (ListSequence.fromList(SLinkOperations.getTargets(node,"typeParameter",true)).isNotEmpty()) {
      for (      SNode item : SLinkOperations.getTargets(node,"typeParameter",true)) {
        TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),item,this.getSNode());
        if (item != ListSequence.fromList(SLinkOperations.getTargets(node,"typeParameter",true)).last()) {
          this.append(", ");
        }
      }
    }
    this.append(">");
  }
  this.append("(");
  if (ListSequence.fromList(SLinkOperations.getTargets(node,"constructorArgument",true)).isNotEmpty()) {
    for (    SNode item : SLinkOperations.getTargets(node,"constructorArgument",true)) {
      TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),item,this.getSNode());
      if (item != ListSequence.fromList(SLinkOperations.getTargets(node,"constructorArgument",true)).last()) {
        this.append(", ");
      }
    }
  }
  this.append(")");
  if ((SLinkOperations.getTarget(node,"instanceInitializer",true) == null) && ListSequence.fromList(SLinkOperations.getTargets(node,"field",true)).isEmpty() && ListSequence.fromList(SLinkOperations.getTargets(node,"method",true)).isEmpty()) {
    this.append(" {}");
    return;
  }
  this.append(" ");
  BaseClassConceptTextGen.membersWithBrackets(node,false,this);
  if (getBuffer().hasPositionsSupport()) {
{
      String unitName=null;
      try {
        unitName=BehaviorReflection.invokeVirtual(String.class,SNodeOperations.cast(node,"jetbrains.mps.lang.traceable.structure.UnitConcept"),"virtual_getUnitName_5067982036267369911",new Object[]{});
      }
 catch (      Throwable t) {
        LOG.error("Can't calculate unit name for a node " + node + ".",t);
      }
      TraceInfoGenerationUtil.fillUnitInfo(this,node,unitName);
    }
  }
}
