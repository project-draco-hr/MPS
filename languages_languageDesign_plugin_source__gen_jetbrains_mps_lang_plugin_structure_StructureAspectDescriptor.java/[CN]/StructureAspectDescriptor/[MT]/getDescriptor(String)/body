{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ActionAccessOperation","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"action"});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ActionConstructionParameterDeclaration","jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierFieldDeclaration",false,new String[]{"jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierFieldDeclaration","jetbrains.mps.baseLanguage.classifiers.structure.IMember"},new String[]{},new String[]{});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ActionConstructorParameterReferenceOperation","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.classifiers.structure.IMemberOperation"},new String[]{},new String[]{"declaration"});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.classifiers.structure.IMember","jetbrains.mps.lang.plugin.structure.ActionParameter"},new String[]{},new String[]{"key"});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ActionDataParameterReferenceOperation","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.classifiers.structure.IMemberOperation"},new String[]{},new String[]{"parameterDeclaration"});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ActionDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.classifiers.structure.IClassifier","jetbrains.mps.lang.checkedName.structure.ICheckedNamePolicy"},new String[]{"iconPath","caption","description","mnemonic","isAlwaysVisible","outsideCommandExecution"},new String[]{});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ActionGroupDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.plugin.structure.ActionGroupMember","jetbrains.mps.baseLanguage.classifiers.structure.IClassifier","jetbrains.mps.lang.checkedName.structure.ICheckedNamePolicy"},new String[]{"caption","mnemonic","isInternal","isPopup","isInvisibleWhenDisabled","isPluginXmlGroup"},new String[]{});
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ActionGroupMember",null,true,new String[]{},new String[]{},new String[]{});
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ActionGroupRef","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"group"});
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ActionInstance","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.plugin.structure.ActionGroupMember"},new String[]{},new String[]{"action"});
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ActionParameter",null,true,new String[]{"jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"isOptional"},new String[]{});
case 11:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ActionParameterCondition",null,true,new String[]{},new String[]{},new String[]{});
case 12:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ActionParameterDeclaration","jetbrains.mps.baseLanguage.structure.FieldDeclaration",false,new String[]{"jetbrains.mps.baseLanguage.structure.FieldDeclaration","jetbrains.mps.baseLanguage.classifiers.structure.IMember","jetbrains.mps.lang.plugin.structure.ActionParameter"},new String[]{},new String[]{});
case 13:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ActionParameterReference","jetbrains.mps.baseLanguage.structure.VariableReference",false,new String[]{"jetbrains.mps.baseLanguage.structure.VariableReference"},new String[]{},new String[]{"parameter"});
case 14:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ActionParameterReferenceOperation","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.classifiers.structure.IMemberOperation"},new String[]{},new String[]{"parameterDeclaration"});
case 15:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ActionPlaceSpecification",null,true,new String[]{},new String[]{},new String[]{});
case 16:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ActionType","jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType",false,new String[]{"jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType"},new String[]{},new String[]{"action"});
case 17:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.AddElementStatement","jetbrains.mps.baseLanguage.structure.Statement",false,new String[]{"jetbrains.mps.baseLanguage.structure.Statement"},new String[]{},new String[]{});
case 18:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.AddKeystrokeStatement","jetbrains.mps.baseLanguage.structure.Statement",false,new String[]{"jetbrains.mps.baseLanguage.structure.Statement"},new String[]{},new String[]{});
case 19:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.AddStatement","jetbrains.mps.baseLanguage.structure.Statement",false,new String[]{"jetbrains.mps.baseLanguage.structure.Statement"},new String[]{},new String[]{});
case 20:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.AddTabOperation","jetbrains.mps.lang.plugin.structure.TabbedToolOperation",false,new String[]{"jetbrains.mps.lang.plugin.structure.TabbedToolOperation","jetbrains.mps.baseLanguage.structure.IOperation"},new String[]{},new String[]{});
case 21:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.BaseNodeBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 22:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.BaseProjectOperation","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.structure.IOperation"},new String[]{},new String[]{});
case 23:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.BaseToolDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.classifiers.structure.IClassifier","jetbrains.mps.lang.checkedName.structure.ICheckedNamePolicy"},new String[]{"caption","number","position","icon"},new String[]{});
case 24:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.BuildGroupBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction","jetbrains.mps.lang.plugin.structure.GroupContents"},new String[]{},new String[]{});
case 25:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ButtonCreator","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{});
case 26:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.CloseTabOperation","jetbrains.mps.lang.plugin.structure.TabbedToolOperation",false,new String[]{"jetbrains.mps.lang.plugin.structure.TabbedToolOperation"},new String[]{},new String[]{});
case 27:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ConceptCondition","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.plugin.structure.ActionParameterCondition"},new String[]{},new String[]{"concept"});
case 28:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_AnActionEvent","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 29:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_Concept","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 30:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_CreatorType","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 31:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_IModule","jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_CreatorType",false,new String[]{"jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_CreatorType"},new String[]{},new String[]{});
case 32:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_MPSProject","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 33:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_Model","jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_CreatorType",false,new String[]{"jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_CreatorType"},new String[]{},new String[]{});
case 34:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_OperationContext","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 35:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_PreferencePage_component","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 36:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_Project","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 37:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_node","jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_CreatorType",false,new String[]{"jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_CreatorType"},new String[]{},new String[]{});
case 38:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.CreateNodeAspectBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 39:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.CreateTabBlock","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"commandOnCreate"},new String[]{});
case 40:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.CustomCondition","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction","jetbrains.mps.lang.plugin.structure.ActionParameterCondition"},new String[]{},new String[]{});
case 41:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.DisposeBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 42:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.DoUpdateBlock","jetbrains.mps.lang.plugin.structure.UpdateBlock",false,new String[]{"jetbrains.mps.lang.plugin.structure.UpdateBlock"},new String[]{},new String[]{});
case 43:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.EditableModel","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.plugin.structure.ActionParameterCondition"},new String[]{},new String[]{});
case 44:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.EditorTab","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.checkedName.structure.ICheckedNamePolicy"},new String[]{"shortcutChar","commandOnCreate"},new String[]{"baseNodeConcept"});
case 45:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.EditorTabReference","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"editorTab"});
case 46:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ElementListContents","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.plugin.structure.GroupContents"},new String[]{},new String[]{});
case 47:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.EnumerateChildrenFunction","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 48:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.EverywhereActionPlace","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.plugin.structure.ActionPlaceSpecification"},new String[]{},new String[]{});
case 49:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ExecuteBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 50:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.GetComponentBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 51:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.GetConceptsBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 52:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.GetGroupOperation","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"group"});
case 53:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.GetNodeBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction","jetbrains.mps.lang.plugin.structure.NodesBlock"},new String[]{},new String[]{});
case 54:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.GetNodesBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction","jetbrains.mps.lang.plugin.structure.NodesBlock"},new String[]{},new String[]{});
case 55:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.GetSelectedTabOperation","jetbrains.mps.lang.plugin.structure.TabbedToolOperation",false,new String[]{"jetbrains.mps.lang.plugin.structure.TabbedToolOperation"},new String[]{},new String[]{});
case 56:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.GroupAccessOperation","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"group"});
case 57:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.GroupAnchor","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.plugin.structure.ActionGroupMember"},new String[]{},new String[]{});
case 58:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.GroupContents",null,true,new String[]{},new String[]{},new String[]{});
case 59:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.GroupType","jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType",false,new String[]{"jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType"},new String[]{},new String[]{"actionGroup"});
case 60:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.IdeaActionsDescriptor","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 61:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.IdeaConfigurationXml","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{});
case 62:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.IdeaInitializerDescriptor","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"id","descripttion","version","vendor","vendorUrl","ideaVersion","loadModules"},new String[]{});
case 63:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.IdeaPluginDependency","jetbrains.mps.lang.plugin.structure.PluginDependency",false,new String[]{"jetbrains.mps.lang.plugin.structure.PluginDependency"},new String[]{"pluginId"},new String[]{});
case 64:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.InitBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 65:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.InterfaceExtentionPoint","jetbrains.mps.lang.plugin.structure.GroupAnchor",false,new String[]{"jetbrains.mps.lang.plugin.structure.GroupAnchor"},new String[]{},new String[]{});
case 66:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.InterfaceGroup","jetbrains.mps.lang.plugin.structure.ActionGroupDeclaration",false,new String[]{"jetbrains.mps.lang.plugin.structure.ActionGroupDeclaration"},new String[]{},new String[]{});
case 67:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.IsApplicableBlock","jetbrains.mps.lang.plugin.structure.UpdateBlock",false,new String[]{"jetbrains.mps.lang.plugin.structure.UpdateBlock"},new String[]{},new String[]{});
case 68:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.IsApplicableTabBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 69:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.KeyMapKeystroke","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"modifiers","keycode"},new String[]{});
case 70:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.KeyStrokeType","jetbrains.mps.baseLanguage.structure.Type",false,new String[]{"jetbrains.mps.baseLanguage.structure.Type"},new String[]{},new String[]{});
case 71:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.KeymapChangesDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"keymap","isPluginXmlKeymap"},new String[]{});
case 72:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.KeymapRef","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"keymap"});
case 73:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ListenBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 74:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.MPSPluginDependency","jetbrains.mps.lang.plugin.structure.PluginDependency",false,new String[]{"jetbrains.mps.lang.plugin.structure.PluginDependency"},new String[]{},new String[]{"plugin"});
case 75:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ModificationStatement","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"modifiedGroup","point"});
case 76:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.NewCreateBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 77:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.NodesBlock",null,true,new String[]{},new String[]{},new String[]{});
case 78:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.OnAfterReadBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 79:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.OnBeforeWriteBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 80:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.Order","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.plugin.structure.OrderConstraints","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{});
case 81:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.OrderConstraints",null,true,new String[]{},new String[]{},new String[]{});
case 82:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.OrderReference","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.plugin.structure.OrderConstraints"},new String[]{},new String[]{"order"});
case 83:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ParameterCondition_ConceptFunctionParameter","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 84:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ParameterizedShortcutChange","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction","jetbrains.mps.lang.plugin.structure.ShortcutChange"},new String[]{},new String[]{});
case 85:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.PersistentPropertyDeclaration","jetbrains.mps.baseLanguage.structure.VariableDeclaration",false,new String[]{"jetbrains.mps.baseLanguage.structure.VariableDeclaration","jetbrains.mps.baseLanguage.classifiers.structure.IMember"},new String[]{},new String[]{});
case 86:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.PersistentPropertyReference","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.baseLanguage.classifiers.structure.IMemberOperation","jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"propertyDeclaration"});
case 87:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.PluginDependency","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 88:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.PopupCreator","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{});
case 89:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.PreferencePage","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.checkedName.structure.ICheckedNamePolicy"},new String[]{"icon","helpTopic"},new String[]{});
case 90:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.PreferencePageCommitBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 91:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.PreferencePageIsModifiedBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 92:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.PreferencePageResetBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 93:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.PreferencesComponentDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.classifiers.structure.IClassifier"},new String[]{},new String[]{});
case 94:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.PreferencesComponentType","jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType",false,new String[]{"jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType"},new String[]{},new String[]{"componentDeclaration"});
case 95:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.RequiredCondition","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.plugin.structure.ActionParameterCondition"},new String[]{},new String[]{});
case 96:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.Separator","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.plugin.structure.ActionGroupMember"},new String[]{},new String[]{});
case 97:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ShortcutChange",null,true,new String[]{},new String[]{},new String[]{"action"});
case 98:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.SimpleActionPlace","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.plugin.structure.ActionPlaceSpecification"},new String[]{},new String[]{});
case 99:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.SimpleShortcutChange","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.plugin.structure.ShortcutChange"},new String[]{},new String[]{});
case 100:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.SmartDisposeClosureParameterDeclaration","jetbrains.mps.baseLanguage.closures.structure.UnboundClosureParameterDeclaration",false,new String[]{"jetbrains.mps.baseLanguage.closures.structure.UnboundClosureParameterDeclaration"},new String[]{},new String[]{});
case 101:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.TabbedToolDeclaration","jetbrains.mps.lang.plugin.structure.BaseToolDeclaration",false,new String[]{"jetbrains.mps.lang.plugin.structure.BaseToolDeclaration"},new String[]{},new String[]{});
case 102:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.TabbedToolOperation","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.structure.IOperation"},new String[]{},new String[]{});
case 103:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ToStringConceptFunction","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 104:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ToStringParameter","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 105:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ToolActionPlace","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.plugin.structure.ActionPlaceSpecification"},new String[]{},new String[]{});
case 106:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ToolDeclaration","jetbrains.mps.lang.plugin.structure.BaseToolDeclaration",false,new String[]{"jetbrains.mps.lang.plugin.structure.BaseToolDeclaration"},new String[]{},new String[]{});
case 107:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ToolInstanceExpression","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{});
case 108:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ToolTab","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 109:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ToolType","jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType",false,new String[]{"jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType"},new String[]{},new String[]{"tool"});
case 110:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.ToolbarCreator","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{"isHorizontal"},new String[]{});
case 111:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.UpdateBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 112:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.UpdateGroupBlock","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.plugin.structure.GroupContents"},new String[]{},new String[]{});
case 113:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.structure.UpdateGroupFunction","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
