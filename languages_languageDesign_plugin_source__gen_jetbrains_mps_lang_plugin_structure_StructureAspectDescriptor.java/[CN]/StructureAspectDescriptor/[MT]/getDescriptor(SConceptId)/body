{
switch (myConceptIndex.index(id)) {
case LanguageConceptSwitch.AbstractToolKeystroke:
    return myConceptAbstractToolKeystroke;
case LanguageConceptSwitch.AbstractToolShortcut:
  return myConceptAbstractToolShortcut;
case LanguageConceptSwitch.ActionAccessOperation:
return myConceptActionAccessOperation;
case LanguageConceptSwitch.ActionConstructionParameterDeclaration:
return myConceptActionConstructionParameterDeclaration;
case LanguageConceptSwitch.ActionConstructorParameterReferenceOperation:
return myConceptActionConstructorParameterReferenceOperation;
case LanguageConceptSwitch.ActionDataParameterDeclaration:
return myConceptActionDataParameterDeclaration;
case LanguageConceptSwitch.ActionDataParameterReferenceOperation:
return myConceptActionDataParameterReferenceOperation;
case LanguageConceptSwitch.ActionDeclaration:
return myConceptActionDeclaration;
case LanguageConceptSwitch.ActionGroupDeclaration:
return myConceptActionGroupDeclaration;
case LanguageConceptSwitch.ActionGroupMember:
return myConceptActionGroupMember;
case LanguageConceptSwitch.ActionGroupRef:
return myConceptActionGroupRef;
case LanguageConceptSwitch.ActionInstance:
return myConceptActionInstance;
case LanguageConceptSwitch.ActionParameter:
return myConceptActionParameter;
case LanguageConceptSwitch.ActionParameterCondition:
return myConceptActionParameterCondition;
case LanguageConceptSwitch.ActionParameterDeclaration:
return myConceptActionParameterDeclaration;
case LanguageConceptSwitch.ActionParameterReference:
return myConceptActionParameterReference;
case LanguageConceptSwitch.ActionParameterReferenceOperation:
return myConceptActionParameterReferenceOperation;
case LanguageConceptSwitch.ActionPlaceSpecification:
return myConceptActionPlaceSpecification;
case LanguageConceptSwitch.ActionReference:
return myConceptActionReference;
case LanguageConceptSwitch.ActionType:
return myConceptActionType;
case LanguageConceptSwitch.AddElementStatement:
return myConceptAddElementStatement;
case LanguageConceptSwitch.AddKeystrokeStatement:
return myConceptAddKeystrokeStatement;
case LanguageConceptSwitch.AddStatement:
return myConceptAddStatement;
case LanguageConceptSwitch.AddTabOperation:
return myConceptAddTabOperation;
case LanguageConceptSwitch.BaseNodeBlock:
return myConceptBaseNodeBlock;
case LanguageConceptSwitch.BaseProjectOperation:
return myConceptBaseProjectOperation;
case LanguageConceptSwitch.BaseToolDeclaration:
return myConceptBaseToolDeclaration;
case LanguageConceptSwitch.BuildGroupBlock:
return myConceptBuildGroupBlock;
case LanguageConceptSwitch.ButtonCreator:
return myConceptButtonCreator;
case LanguageConceptSwitch.CloseTabOperation:
return myConceptCloseTabOperation;
case LanguageConceptSwitch.ConceptCondition:
return myConceptConceptCondition;
case LanguageConceptSwitch.ConceptFunctionParameter_AnActionEvent:
return myConceptConceptFunctionParameter_AnActionEvent;
case LanguageConceptSwitch.ConceptFunctionParameter_Concept:
return myConceptConceptFunctionParameter_Concept;
case LanguageConceptSwitch.ConceptFunctionParameter_CreatorType:
return myConceptConceptFunctionParameter_CreatorType;
case LanguageConceptSwitch.ConceptFunctionParameter_IModule:
return myConceptConceptFunctionParameter_IModule;
case LanguageConceptSwitch.ConceptFunctionParameter_MPSProject:
return myConceptConceptFunctionParameter_MPSProject;
case LanguageConceptSwitch.ConceptFunctionParameter_Model:
return myConceptConceptFunctionParameter_Model;
case LanguageConceptSwitch.ConceptFunctionParameter_OperationContext:
return myConceptConceptFunctionParameter_OperationContext;
case LanguageConceptSwitch.ConceptFunctionParameter_PreferencePage_component:
return myConceptConceptFunctionParameter_PreferencePage_component;
case LanguageConceptSwitch.ConceptFunctionParameter_Project:
return myConceptConceptFunctionParameter_Project;
case LanguageConceptSwitch.ConceptFunctionParameter_SConceptClass:
return myConceptConceptFunctionParameter_SConceptClass;
case LanguageConceptSwitch.ConceptFunctionParameter_node:
return myConceptConceptFunctionParameter_node;
case LanguageConceptSwitch.ConceptsBlock:
return myConceptConceptsBlock;
case LanguageConceptSwitch.CreateBlock:
return myConceptCreateBlock;
case LanguageConceptSwitch.CreateNodeAspectBlock:
return myConceptCreateNodeAspectBlock;
case LanguageConceptSwitch.CreateTabBlock:
return myConceptCreateTabBlock;
case LanguageConceptSwitch.CustomCondition:
return myConceptCustomCondition;
case LanguageConceptSwitch.CustomToolShortcut:
return myConceptCustomToolShortcut;
case LanguageConceptSwitch.DisposeBlock:
return myConceptDisposeBlock;
case LanguageConceptSwitch.DoUpdateBlock:
return myConceptDoUpdateBlock;
case LanguageConceptSwitch.EditableModel:
return myConceptEditableModel;
case LanguageConceptSwitch.EditorTab:
return myConceptEditorTab;
case LanguageConceptSwitch.EditorTabReference:
return myConceptEditorTabReference;
case LanguageConceptSwitch.ElementListContents:
return myConceptElementListContents;
case LanguageConceptSwitch.EnumerateChildrenFunction:
return myConceptEnumerateChildrenFunction;
case LanguageConceptSwitch.EverywhereActionPlace:
return myConceptEverywhereActionPlace;
case LanguageConceptSwitch.ExecuteBlock:
return myConceptExecuteBlock;
case LanguageConceptSwitch.GetComponentBlock:
return myConceptGetComponentBlock;
case LanguageConceptSwitch.GetGroupOperation:
return myConceptGetGroupOperation;
case LanguageConceptSwitch.GetNodeBlock:
return myConceptGetNodeBlock;
case LanguageConceptSwitch.GetNodesBlock:
return myConceptGetNodesBlock;
case LanguageConceptSwitch.GetSelectedTabOperation:
return myConceptGetSelectedTabOperation;
case LanguageConceptSwitch.GroupAccessOperation:
return myConceptGroupAccessOperation;
case LanguageConceptSwitch.GroupAnchor:
return myConceptGroupAnchor;
case LanguageConceptSwitch.GroupContents:
return myConceptGroupContents;
case LanguageConceptSwitch.GroupType:
return myConceptGroupType;
case LanguageConceptSwitch.IdeaActionsDescriptor:
return myConceptIdeaActionsDescriptor;
case LanguageConceptSwitch.IdeaConfigurationXml:
return myConceptIdeaConfigurationXml;
case LanguageConceptSwitch.IdeaInitializerDescriptor:
return myConceptIdeaInitializerDescriptor;
case LanguageConceptSwitch.IdeaPluginDependency:
return myConceptIdeaPluginDependency;
case LanguageConceptSwitch.InitBlock:
return myConceptInitBlock;
case LanguageConceptSwitch.InterfaceExtentionPoint:
return myConceptInterfaceExtentionPoint;
case LanguageConceptSwitch.InterfaceGroup:
return myConceptInterfaceGroup;
case LanguageConceptSwitch.IsApplicableBlock:
return myConceptIsApplicableBlock;
case LanguageConceptSwitch.IsApplicableTabBlock:
return myConceptIsApplicableTabBlock;
case LanguageConceptSwitch.KeyMapKeystroke:
return myConceptKeyMapKeystroke;
case LanguageConceptSwitch.KeyStrokeType:
return myConceptKeyStrokeType;
case LanguageConceptSwitch.KeymapChangesDeclaration:
return myConceptKeymapChangesDeclaration;
case LanguageConceptSwitch.KeymapRef:
return myConceptKeymapRef;
case LanguageConceptSwitch.ListenBlock:
return myConceptListenBlock;
case LanguageConceptSwitch.MPSPluginDependency:
return myConceptMPSPluginDependency;
case LanguageConceptSwitch.ModificationStatement:
return myConceptModificationStatement;
case LanguageConceptSwitch.NodesBlock:
return myConceptNodesBlock;
case LanguageConceptSwitch.NonDumbAwareActions:
return myConceptNonDumbAwareActions;
case LanguageConceptSwitch.NumberToolShortcut:
return myConceptNumberToolShortcut;
case LanguageConceptSwitch.OldConceptsBlock:
return myConceptOldConceptsBlock;
case LanguageConceptSwitch.OldCreateBlock:
return myConceptOldCreateBlock;
case LanguageConceptSwitch.OnAfterReadBlock:
return myConceptOnAfterReadBlock;
case LanguageConceptSwitch.OnBeforeWriteBlock:
return myConceptOnBeforeWriteBlock;
case LanguageConceptSwitch.Order:
return myConceptOrder;
case LanguageConceptSwitch.OrderConstraints:
return myConceptOrderConstraints;
case LanguageConceptSwitch.OrderReference:
return myConceptOrderReference;
case LanguageConceptSwitch.ParameterCondition_ConceptFunctionParameter:
return myConceptParameterCondition_ConceptFunctionParameter;
case LanguageConceptSwitch.ParameterizedShortcutChange:
return myConceptParameterizedShortcutChange;
case LanguageConceptSwitch.PersistentPropertyDeclaration:
return myConceptPersistentPropertyDeclaration;
case LanguageConceptSwitch.PersistentPropertyReference:
return myConceptPersistentPropertyReference;
case LanguageConceptSwitch.PinTabOperation:
return myConceptPinTabOperation;
case LanguageConceptSwitch.PluginDependency:
return myConceptPluginDependency;
case LanguageConceptSwitch.PopupCreator:
return myConceptPopupCreator;
case LanguageConceptSwitch.PreferencePage:
return myConceptPreferencePage;
case LanguageConceptSwitch.PreferencePageCommitBlock:
return myConceptPreferencePageCommitBlock;
case LanguageConceptSwitch.PreferencePageIsModifiedBlock:
return myConceptPreferencePageIsModifiedBlock;
case LanguageConceptSwitch.PreferencePageResetBlock:
return myConceptPreferencePageResetBlock;
case LanguageConceptSwitch.PreferencesComponentDeclaration:
return myConceptPreferencesComponentDeclaration;
case LanguageConceptSwitch.PreferencesComponentType:
return myConceptPreferencesComponentType;
case LanguageConceptSwitch.RequiredCondition:
return myConceptRequiredCondition;
case LanguageConceptSwitch.Separator:
return myConceptSeparator;
case LanguageConceptSwitch.ShortcutChange:
return myConceptShortcutChange;
case LanguageConceptSwitch.SimpleActionPlace:
return myConceptSimpleActionPlace;
case LanguageConceptSwitch.SimpleShortcutChange:
return myConceptSimpleShortcutChange;
case LanguageConceptSwitch.SmartDisposeClosureParameterDeclaration:
return myConceptSmartDisposeClosureParameterDeclaration;
case LanguageConceptSwitch.TabbedToolDeclaration:
return myConceptTabbedToolDeclaration;
case LanguageConceptSwitch.TabbedToolOperation:
return myConceptTabbedToolOperation;
case LanguageConceptSwitch.ToStringConceptFunction:
return myConceptToStringConceptFunction;
case LanguageConceptSwitch.ToStringParameter:
return myConceptToStringParameter;
case LanguageConceptSwitch.ToolActionPlace:
return myConceptToolActionPlace;
case LanguageConceptSwitch.ToolDeclaration:
return myConceptToolDeclaration;
case LanguageConceptSwitch.ToolInstanceExpression:
return myConceptToolInstanceExpression;
case LanguageConceptSwitch.ToolKeystroke:
return myConceptToolKeystroke;
case LanguageConceptSwitch.ToolTab:
return myConceptToolTab;
case LanguageConceptSwitch.ToolType:
return myConceptToolType;
case LanguageConceptSwitch.ToolbarCreator:
return myConceptToolbarCreator;
case LanguageConceptSwitch.UnpinTabOperation:
return myConceptUnpinTabOperation;
case LanguageConceptSwitch.UpdateBlock:
return myConceptUpdateBlock;
case LanguageConceptSwitch.UpdateGroupBlock:
return myConceptUpdateGroupBlock;
case LanguageConceptSwitch.UpdateGroupFunction:
return myConceptUpdateGroupFunction;
default :
return null;
}
}
