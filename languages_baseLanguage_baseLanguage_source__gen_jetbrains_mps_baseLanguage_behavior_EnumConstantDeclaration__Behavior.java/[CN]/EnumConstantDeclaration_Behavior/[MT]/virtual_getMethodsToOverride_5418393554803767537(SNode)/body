{
  if ((SNodeOperations.getParent(thisNode) == null)) {
    return null;
  }
  List<SNode> methods=new ArrayList<SNode>();
  List<SNode> methodsToOverride=BehaviorReflection.invokeVirtual((Class<List<SNode>>)((Class)Object.class),SNodeOperations.cast(SNodeOperations.getParent(thisNode),"jetbrains.mps.baseLanguage.structure.EnumClass"),"virtual_getMethodsToOverride_5418393554803767537",new Object[]{});
  ListSequence.fromList(methodsToOverride).addSequence(Sequence.fromIterable(Classifier_Behavior.call_methods_5292274854859311639(SNodeOperations.cast(SNodeOperations.getParent(thisNode),"jetbrains.mps.baseLanguage.structure.EnumClass"))).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return !(SPropertyOperations.getBoolean(it,"isAbstract")) && !(SPropertyOperations.getBoolean(it,"isFinal")) && !(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it,"visibility",true),"jetbrains.mps.baseLanguage.structure.PrivateVisibility"));
    }
  }
));
  ListSequence.fromList(methods).addSequence(ListSequence.fromList(methodsToOverride).where(new IWhereFilter<SNode>(){
    public boolean accept(    final SNode method){
      return !(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"method",true)).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode constantBelongingMethod){
          return BaseMethodDeclaration_Behavior.call_hasSameSignature_1213877350435(constantBelongingMethod,method);
        }
      }
));
    }
  }
));
  return methods;
}
