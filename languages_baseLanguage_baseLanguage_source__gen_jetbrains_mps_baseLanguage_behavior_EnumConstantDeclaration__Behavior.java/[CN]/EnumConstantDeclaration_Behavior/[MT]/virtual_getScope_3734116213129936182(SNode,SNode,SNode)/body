{
  if (SConceptOperations.isSubConceptOf(kind,"jetbrains.mps.baseLanguage.structure.SuperMethodKind")) {
    Scope visibleMembers=BehaviorReflection.invokeVirtual(Scope.class,SNodeOperations.cast(SNodeOperations.getParent(thisNode),"jetbrains.mps.baseLanguage.structure.EnumClass"),"virtual_getVisibleMembers_8083692786967356611",new Object[]{child,kind});
    Iterable<SNode> methods=Sequence.fromIterable(Classifier_Behavior.call_methods_5292274854859311639(SNodeOperations.cast(SNodeOperations.getParent(thisNode),"jetbrains.mps.baseLanguage.structure.EnumClass"))).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return !(BehaviorReflection.invokeVirtual(Boolean.TYPE,it,"virtual_isAbstract_1232982539764",new Object[]{})) && !(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1178549954367l,1178549979242l,"visibility")),"jetbrains.mps.baseLanguage.structure.PrivateVisibility"));
      }
    }
);
    Scope visibleEumMembers=new ListScope(methods){
      public String getName(      SNode child){
        return SPropertyOperations.getString(SNodeOperations.cast(child,"jetbrains.mps.lang.core.structure.INamedConcept"),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"));
      }
    }
;
    return new CompositeScope(visibleMembers,visibleEumMembers);
  }
  return BehaviorReflection.invokeSuper(Scope.class,thisNode,"jetbrains.mps.lang.core.structure.ScopeProvider","virtual_getScope_3734116213129936182",new Object[]{kind,child});
}
