{
  SAbstractConcept cncpt=concept;
switch (index_xbvbvu_a0g.index(cncpt)) {
case 0:
    return Collections.<SubstituteMenu>singletonList(new AttributedNodeExpression_SubstituteMenu());
case 1:
  return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_ContextNode_SubstituteMenu());
case 2:
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_Role_SubstituteMenu());
case 3:
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_isAggregation_SubstituteMenu());
case 4:
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_node_SubstituteMenu());
case 5:
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_var_SubstituteMenu());
case 6:
return Collections.<SubstituteMenu>singletonList(new subs_AttributedNodeExpression_Contribution());
case 7:
return Collections.<SubstituteMenu>singletonList(new JoinContainer_SubstituteMenu());
case 8:
return Collections.<SubstituteMenu>singletonList(new LeftOperandType_parameter_SubstituteMenu());
case 9:
return Collections.<SubstituteMenu>singletonList(new MeetContainer_SubstituteMenu());
case 10:
return Collections.<SubstituteMenu>singletonList(new Node_InferTypeOperation_SubstituteMenu());
case 11:
return Collections.<SubstituteMenu>singletonList(new Node_TypeOperation_SubstituteMenu());
case 12:
return Collections.<SubstituteMenu>singletonList(new Operation_parameter_SubstituteMenu());
case 13:
return Collections.<SubstituteMenu>singletonList(new RightOperandType_parameter_SubstituteMenu());
case 14:
return Collections.<SubstituteMenu>singletonList(new _Helgins_Substitute_Contribution());
case 15:
return Collections.<SubstituteMenu>singletonList(new EasyInferAndCheckingEntry_Contribution());
case 16:
return Collections.<SubstituteMenu>singletonList(new TypeClause_SubstituteMenu());
default :
}
return Collections.<SubstituteMenu>emptyList();
}
