{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_xbvbvu_a0g.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return Collections.<SubstituteMenu>singletonList(new AttributedNodeExpression_SubstituteMenu());
      }
    break;
case 1:
  if (true) {
    return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_ContextNode_SubstituteMenu());
  }
break;
case 2:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_Role_SubstituteMenu());
}
break;
case 3:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_isAggregation_SubstituteMenu());
}
break;
case 4:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_node_SubstituteMenu());
}
break;
case 5:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_var_SubstituteMenu());
}
break;
case 6:
if (true) {
return Collections.<SubstituteMenu>singletonList(new subs_AttributedNodeExpression_Contribution());
}
break;
case 7:
if (true) {
return Collections.<SubstituteMenu>singletonList(new JoinContainer_SubstituteMenu());
}
break;
case 8:
if (true) {
return Collections.<SubstituteMenu>singletonList(new LeftOperandType_parameter_SubstituteMenu());
}
break;
case 9:
if (true) {
return Collections.<SubstituteMenu>singletonList(new MeetContainer_SubstituteMenu());
}
break;
case 10:
if (true) {
return Collections.<SubstituteMenu>singletonList(new Node_InferTypeOperation_SubstituteMenu());
}
break;
case 11:
if (true) {
return Collections.<SubstituteMenu>singletonList(new Node_TypeOperation_SubstituteMenu());
}
break;
case 12:
if (true) {
return Collections.<SubstituteMenu>singletonList(new Operation_parameter_SubstituteMenu());
}
break;
case 13:
if (true) {
return Collections.<SubstituteMenu>singletonList(new RightOperandType_parameter_SubstituteMenu());
}
break;
case 14:
if (true) {
return Collections.<SubstituteMenu>singletonList(new _Helgins_Substitute_Contribution());
}
break;
case 15:
if (true) {
return Collections.<SubstituteMenu>singletonList(new EasyInferAndCheckingEntry_Contribution());
}
break;
case 16:
if (true) {
return Collections.<SubstituteMenu>singletonList(new TypeClause_SubstituteMenu());
}
break;
default :
}
}
return Collections.<SubstituteMenu>emptyList();
}
