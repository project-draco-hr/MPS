{
  if (isEmptyString(SPropertyOperations.getString(acd,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0x5d2e6079771f8cc0L,"conceptId")))) {
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(acd,"Concept id is not defined.\n" + "Please run MainMenu->Migration->Migrations->Language Migrations->j.m.lang.structure->Set Ids\n" + "If this concept was created manually, invoke the \"Generate IDs\" intention on it","r:00000000-0000-4000-0000-011c8959028f(jetbrains.mps.lang.structure.typesystem)","1587916991969781666",null,errorTarget);
{
        BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.lang.structure.typesystem.GenerateConceptIds_QuickFix",false);
        intentionProvider.putArgument("c",acd);
        _reporter_2309309498.addIntentionProvider(intentionProvider);
      }
    }
  }
 else {
    if (ListSequence.fromList(SModelOperations.nodes(SNodeOperations.getModel(acd),MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"))).any(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return it != acd && eq_hcbjaj_a0a0a0a0a0a0a0a0b(SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0x5d2e6079771f8cc0L,"conceptId")),SPropertyOperations.getString(acd,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0x5d2e6079771f8cc0L,"conceptId")));
      }
    }
)) {
{
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(acd,"Duplicate concept id.\n" + "Please invoke the \"Correct ID\" intention on it","r:00000000-0000-4000-0000-011c8959028f(jetbrains.mps.lang.structure.typesystem)","5424895381998262898",null,errorTarget);
{
          BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.lang.structure.typesystem.CorrectDuplicateId_QuickFix",false);
          intentionProvider.putArgument("c",acd);
          _reporter_2309309498.addIntentionProvider(intentionProvider);
        }
      }
    }
 else     if (neq_hcbjaj_a0a0a0a0b(SPropertyOperations.getString(acd,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0x5d2e6079771f8cc0L,"conceptId")),ConceptIdHelper.getNodeIdString(acd))) {
{
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportWarning(acd,"Node id and concept id differ. It's recommended to keep ids synchronised until MPS 3.5. Use quickfix to set corrected id","r:00000000-0000-4000-0000-011c8959028f(jetbrains.mps.lang.structure.typesystem)","2819660830273583910",null,errorTarget);
{
          BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.lang.structure.typesystem.CorrectDuplicateId_QuickFix",false);
          intentionProvider.putArgument("c",acd);
          _reporter_2309309498.addIntentionProvider(intentionProvider);
        }
      }
    }
  }
  for (  final SNode p : ListSequence.fromList(SLinkOperations.getChildren(acd,MetaAdapterFactory.getContainmentLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0xf979c3ba6cL,"propertyDeclaration")))) {
    if (isEmptyString(SPropertyOperations.getString(p,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086bL,0x35a81382d82a4d9L,"propertyId")))) {
{
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(p,"Property id is not defined.\n" + "Please run MainMenu->Migration->Migrations->Language Migrations->j.m.lang.structure->Set Ids\n" + "If this property was created manually, invoke the \"Generate IDs\" intention on it","r:00000000-0000-4000-0000-011c8959028f(jetbrains.mps.lang.structure.typesystem)","241647608299548534",null,errorTarget);
{
          BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.lang.structure.typesystem.GenerateConceptIds_QuickFix",false);
          intentionProvider.putArgument("c",acd);
          _reporter_2309309498.addIntentionProvider(intentionProvider);
        }
      }
    }
 else {
      if (ListSequence.fromList(SLinkOperations.getChildren(acd,MetaAdapterFactory.getContainmentLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0xf979c3ba6cL,"propertyDeclaration"))).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return it != p && eq_hcbjaj_a0a0a0a0a0a0a0a0c0b(SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086bL,0x35a81382d82a4d9L,"propertyId")),SPropertyOperations.getString(p,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086bL,0x35a81382d82a4d9L,"propertyId")));
        }
      }
)) {
{
          MessageTarget errorTarget=new NodeMessageTarget();
          IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(p,"Duplicate property id.\n" + "Please invoke the \"Correct ID\" intention on it","r:00000000-0000-4000-0000-011c8959028f(jetbrains.mps.lang.structure.typesystem)","5424895381998286923",null,errorTarget);
{
            BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.lang.structure.typesystem.CorrectDuplicateId_QuickFix",false);
            intentionProvider.putArgument("p",p);
            _reporter_2309309498.addIntentionProvider(intentionProvider);
          }
        }
      }
 else       if (neq_hcbjaj_a0a0a0a0c0b(SPropertyOperations.getString(p,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086bL,0x35a81382d82a4d9L,"propertyId")),ConceptIdHelper.getNodeIdString(p))) {
{
          MessageTarget errorTarget=new NodeMessageTarget();
          IErrorReporter _reporter_2309309498=typeCheckingContext.reportWarning(p,"Node id and property id differ. It's recommended to keep ids synchronised until MPS 3.5. Use quickfix to set corrected id","r:00000000-0000-4000-0000-011c8959028f(jetbrains.mps.lang.structure.typesystem)","2819660830273589312",null,errorTarget);
{
            BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.lang.structure.typesystem.CorrectDuplicateId_QuickFix",false);
            intentionProvider.putArgument("p",p);
            _reporter_2309309498.addIntentionProvider(intentionProvider);
          }
        }
      }
    }
  }
  for (  final SNode l : ListSequence.fromList(SLinkOperations.getChildren(acd,MetaAdapterFactory.getContainmentLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0xf979c3ba6bL,"linkDeclaration")))) {
    if (isEmptyString(SPropertyOperations.getString(l,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086aL,0x35a81382d82a4e4L,"linkId")))) {
{
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(l,"Link id is not defined.\n" + "Please run MainMenu->Migration->Migrations->Language Migrations->j.m.lang.structure->Set Ids\n" + "If this link was created manually, invoke the \"Generate IDs\" intention on it","r:00000000-0000-4000-0000-011c8959028f(jetbrains.mps.lang.structure.typesystem)","241647608299555835",null,errorTarget);
{
          BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.lang.structure.typesystem.GenerateConceptIds_QuickFix",false);
          intentionProvider.putArgument("c",acd);
          _reporter_2309309498.addIntentionProvider(intentionProvider);
        }
      }
    }
 else {
      if (ListSequence.fromList(SLinkOperations.getChildren(acd,MetaAdapterFactory.getContainmentLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0xf979c3ba6bL,"linkDeclaration"))).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return it != l && eq_hcbjaj_a0a0a0a0a0a0a0a0e0b(SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086aL,0x35a81382d82a4e4L,"linkId")),SPropertyOperations.getString(l,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086aL,0x35a81382d82a4e4L,"linkId")));
        }
      }
)) {
{
          MessageTarget errorTarget=new NodeMessageTarget();
          IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(l,"Duplicate link id.\n" + "Please invoke the \"Correct ID\" intention on it","r:00000000-0000-4000-0000-011c8959028f(jetbrains.mps.lang.structure.typesystem)","5424895381998288260",null,errorTarget);
{
            BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.lang.structure.typesystem.CorrectDuplicateId_QuickFix",false);
            intentionProvider.putArgument("l",l);
            _reporter_2309309498.addIntentionProvider(intentionProvider);
          }
        }
      }
 else       if (neq_hcbjaj_a0a0a0a0e0b(SPropertyOperations.getString(l,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086aL,0x35a81382d82a4e4L,"linkId")),ConceptIdHelper.getNodeIdString(l))) {
{
          MessageTarget errorTarget=new NodeMessageTarget();
          IErrorReporter _reporter_2309309498=typeCheckingContext.reportWarning(l,"Node id and property id differ. It's recommended to keep ids synchronised until MPS 3.5. Use quickfix to set corrected id","r:00000000-0000-4000-0000-011c8959028f(jetbrains.mps.lang.structure.typesystem)","2819660830273606558",null,errorTarget);
{
            BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.lang.structure.typesystem.CorrectDuplicateId_QuickFix",false);
            intentionProvider.putArgument("l",l);
            _reporter_2309309498.addIntentionProvider(intentionProvider);
          }
        }
      }
    }
  }
}
