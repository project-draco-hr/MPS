{
  SNode newDeclaration=new IntroduceConstantRefactoring.QuotationClass_2jj2z2_a0a0a0().createNode(this.myVisibilityLevel.getNode(),SNodeOperations.copyNode(this.getExpressionType()),SNodeOperations.copyNode(this.getExpression()),this.getName());
  SNode container=SNodeOperations.cast(this.myContainer,"jetbrains.mps.baseLanguage.structure.ClassConcept");
  ListSequence.<SNode>fromList(SLinkOperations.getTargets(container,"staticField",true)).addElement(newDeclaration);
  replaceNode(getExpression(),newDeclaration);
  if (this.myIsReplacingAll) {
    for (    SNode duplicate : ListSequence.<SNode>fromList(this.myDuplicates)) {
      replaceNode(duplicate,newDeclaration);
    }
  }
  return newDeclaration;
}
