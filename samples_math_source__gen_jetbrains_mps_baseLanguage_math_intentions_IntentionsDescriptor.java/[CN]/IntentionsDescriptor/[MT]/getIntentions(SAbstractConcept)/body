{
  if (myCached.containsKey(concept)) {
    return Arrays.asList(myCached.get(concept));
  }
  IntentionFactory[] intentions=EMPTY_ARRAY;
  SAbstractConcept cncpt=concept;
switch (index_hphjzv_d0f.index(cncpt)) {
case 0:
    if (true) {
      intentions=new IntentionFactory[1];
      intentions[0]=new DeleteMathContext_Intention();
    }
  break;
case 1:
if (true) {
  intentions=new IntentionFactory[1];
  intentions[0]=new DivExpressionDivToFraction_Intention();
}
break;
case 2:
if (true) {
intentions=new IntentionFactory[1];
intentions[0]=new DivExpressionFractionToDiv_Intention();
}
break;
case 3:
if (true) {
intentions=new IntentionFactory[1];
intentions[0]=new SpecifyMathContext_Intention();
}
break;
default :
}
myCached.put(concept,intentions);
return Arrays.asList(intentions);
}
