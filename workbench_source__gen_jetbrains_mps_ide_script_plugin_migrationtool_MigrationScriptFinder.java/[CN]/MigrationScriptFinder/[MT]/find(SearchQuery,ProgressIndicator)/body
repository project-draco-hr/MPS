{
  myResults=new SearchResults<SNode>();
  IScope queryScope=query.getScope();
  List<BaseMigrationScript> scriptInstances=MigrationScriptUtil.getScriptInstances(myScripts,myOperationContext);
  indicator.setText("Searching applicable nodes");
  for (  BaseMigrationScript scriptInstance : scriptInstances) {
    if (indicator.isCanceled()) {
      break;
    }
    List<AbstractMigrationRefactoring> refactorings=scriptInstance.getRefactorings();
    for (    AbstractMigrationRefactoring migrationRefactoring : refactorings) {
      if (indicator.isCanceled()) {
        break;
      }
      indicator.setText2(scriptInstance.getName() + " [" + migrationRefactoring.getAdditionalInfo()+ "]");
      Set<SNode> instances=FindUsagesManager.getInstance().findInstances(MigrationScriptUtil.getApplicableConcept(migrationRefactoring),queryScope,null,false);
      for (      SNode instance : instances) {
        if (MigrationScriptUtil.isApplicableRefactoring(instance,migrationRefactoring)) {
          String category=TreeTextUtil.toHtml(scriptInstance.getName()) + " </b>[" + TreeTextUtil.toHtml(migrationRefactoring.getAdditionalInfo())+ "]<b>";
          SearchResult<SNode> result=new SearchResult<SNode>(instance,category);
          myMigrationBySearchResult.put(result,migrationRefactoring);
          myResults.getSearchResults().add(result);
        }
      }
    }
  }
  indicator.setText("Searching applicable nodes " + ((indicator.isCanceled() ? "canceled" : "finished")));
  indicator.setText2("");
  if (myMigrationScriptsView != null) {
    myMigrationScriptsView.searchResultsChanged();
  }
  return myResults;
}
