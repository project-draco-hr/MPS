{
  SNode current=expr;
  while ((current != null)) {
    if (SNodeOperations.isInstanceOf(current,"jetbrains.mps.baseLanguage.structure.BinaryCompareOperation") || SNodeOperations.isInstanceOf(current,"jetbrains.mps.baseLanguage.structure.EqualsExpression") || SNodeOperations.isInstanceOf(current,"jetbrains.mps.baseLanguage.structure.NotEqualsExpression")) {
      if (isInstanceOfDatetimeWithTZ(SLinkOperations.getTarget(SNodeOperations.cast(current,"jetbrains.mps.baseLanguage.structure.BinaryOperation"),"leftExpression",true))) {
        return SNodeOperations.cast(current,"jetbrains.mps.baseLanguage.structure.BinaryOperation");
      }
      return null;
    }
 else {
      current=(SNodeOperations.isInstanceOf(SNodeOperations.getParent(current),"jetbrains.mps.baseLanguage.structure.Expression") ? SNodeOperations.cast(SNodeOperations.getParent(current),"jetbrains.mps.baseLanguage.structure.Expression") : null);
    }
  }
  return null;
}
