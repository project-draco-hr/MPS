{
  if (SNodeOperations.getConceptDeclaration(SLinkOperations.getTarget(node,"figure",true)) == SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.editor.diagram.structure.AbstractFigureReference")) {
    styledText.append("null()");
    return;
  }
  styledText.append(SLinkOperations.getTarget(node,"figure",true).getPresentation());
  styledText.append("(");
  SNode selectedNode=editorContext.getSelectedNode();
  List<String> definedParameters=ListSequence.fromListWithValues(new LinkedList<String>(),BehaviorReflection.invokeVirtual((Class<List<String>>)((Class)Object.class),parameterObject,"virtual_getFigureParameterNames_1491555030356445722",new Object[]{}));
  Set<String> specifiedParameters=SetSequence.fromSet(new HashSet<String>());
  for (  SNode nextSpecifiedParameter : ListSequence.fromList(SLinkOperations.getTargets(node,"parameter",true))) {
    if (ListSequence.fromList(definedParameters).contains(SPropertyOperations.getString(nextSpecifiedParameter,"name"))) {
      SetSequence.fromSet(specifiedParameters).addElement(SPropertyOperations.getString(nextSpecifiedParameter,"name"));
      ListSequence.fromList(definedParameters).removeElement(SPropertyOperations.getString(nextSpecifiedParameter,"name"));
    }
  }
  boolean isEmpty=true;
  for (  SNode nextSpecifiedParameter : ListSequence.fromList(SLinkOperations.getTargets(node,"parameter",true))) {
    if (SetSequence.fromSet(specifiedParameters).contains(SPropertyOperations.getString(nextSpecifiedParameter,"name"))) {
      SetSequence.fromSet(specifiedParameters).removeElement(SPropertyOperations.getString(nextSpecifiedParameter,"name"));
      this.appendParameter(SPropertyOperations.getString(nextSpecifiedParameter,"name"),styledText,isEmpty,nextSpecifiedParameter == selectedNode);
      isEmpty=false;
    }
 else     if (ListSequence.fromList(definedParameters).isNotEmpty()) {
      this.appendParameter(ListSequence.fromList(definedParameters).removeElementAt(0),styledText,isEmpty,nextSpecifiedParameter == selectedNode);
      isEmpty=false;
    }
  }
  for (  String nextDefinedParameter : definedParameters) {
    this.appendParameter(nextDefinedParameter,styledText,isEmpty,false);
    isEmpty=false;
  }
  styledText.append(")");
}
