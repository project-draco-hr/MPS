{
  this.addNodeById("8758390115029078425");
  this.addNodeById("5815925154349132136");
  this.addNodeById("2166349271756548530");
  List<SNode> singleChild=SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById("8758390115029078426"),"jetbrains.mps.lang.smodelTests.structure.Root"),SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.smodelTests.structure.Root","child_1_n"));
  Assert.assertEquals(1,ListSequence.fromList(singleChild).count());
  Assert.assertEquals(SNodeOperations.cast(this.getNodeById("8758390115029078427"),"jetbrains.mps.lang.smodelTests.structure.Child"),ListSequence.fromList(singleChild).first());
  List<SNode> twins=SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById("5815925154349132137"),"jetbrains.mps.lang.smodelTests.structure.Root"),SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.smodelTests.structure.Root","child_1_n"));
  TestUtilities.assertEquals(Sequence.fromArray(new SNode[]{SNodeOperations.cast(this.getNodeById("5815925154349132142"),"jetbrains.mps.lang.smodelTests.structure.Child"),SNodeOperations.cast(this.getNodeById("5815925154349132138"),"jetbrains.mps.lang.smodelTests.structure.Child")}),twins);
}
