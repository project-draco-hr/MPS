{
  if (conceptDeclarationNode == null)   return new ArrayList<SNode>();
  Set<String> descendants=LanguageHierarchyCache.getInstance().getDescendantsOfConcept(NameUtil.nodeFQName(conceptDeclarationNode));
  Set<Language> availableLanguages=new HashSet<Language>(model.getLanguages(scope));
  List<SNode> result=new ArrayList<SNode>();
  for (  String descendant : descendants) {
    Language lang=SModelUtil_new.getDeclaringLanguage(descendant,scope);
    if (availableLanguages.contains(lang)) {
      result.add(lang.findConceptDeclaration(NameUtil.shortNameFromLongName(descendant)).getNode());
    }
  }
  return result;
}
