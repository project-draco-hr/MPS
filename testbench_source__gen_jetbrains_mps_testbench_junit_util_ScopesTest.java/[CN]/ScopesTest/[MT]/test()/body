{
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      SReference reference=SNodeOperations.getReference(SNodeOperations.getParent(ScopesTest.this.myNode),(SNode)SLinkOperations.getTargets(SNodeOperations.getConceptDeclaration(SNodeOperations.getParent(ScopesTest.this.myNode)),"linkDeclaration",true).get(0));
      Scope scope=ModelConstraints.getScope(reference);
      List<SNode> expected=ScopesTest.this.getExpectedNodes(myNode);
      List<SNode> scopeSet=ScopesTest.this.getScopeNodes(scope);
      List<SNode> unExpected=CollectionUtil.subtract(expected,scopeSet);
      List<SNode> notFounded=CollectionUtil.subtract(scopeSet,expected);
      Assert.assertTrue(ScopesTest.this.getFailMessage(unExpected,notFounded).toString(),unExpected.isEmpty() && notFounded.isEmpty());
    }
  }
);
}
