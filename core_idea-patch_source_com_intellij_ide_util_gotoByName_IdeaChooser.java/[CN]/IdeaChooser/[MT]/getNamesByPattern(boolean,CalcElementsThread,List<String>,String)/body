{
  if (pattern.startsWith("@")) {
    pattern=pattern.substring(1);
  }
  final String[] names=checkboxState ? myChooseByNameBase.myNames[1] : myChooseByNameBase.myNames[0];
  final String regex=NameUtil.buildRegexp(pattern,0,true,true);
  try {
    Perl5Compiler compiler=new Perl5Compiler();
    final Pattern compiledPattern=compiler.compile(regex);
    final PatternMatcher matcher=new Perl5Matcher();
    for (    String name : names) {
      if (calcElementsThread != null && calcElementsThread.myCancelled) {
        throw new ProcessCanceledException();
      }
      if (name != null) {
        String shortName=(myChooseByNameBase.myModel instanceof GotoFileModel) ? name : jetbrains.mps.util.NameUtil.shortNameFromLongName(name);
        if (myChooseByNameBase.myModel instanceof GotoActionModel) {
          if (((GotoActionModel)myChooseByNameBase.myModel).matches(name,pattern)) {
            list.add(name);
          }
        }
 else         if (matcher.matches(shortName,compiledPattern)) {
          list.add(name);
        }
      }
    }
  }
 catch (  MalformedPatternException e) {
  }
}
