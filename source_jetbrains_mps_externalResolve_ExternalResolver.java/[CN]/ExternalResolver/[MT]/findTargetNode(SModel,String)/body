{
  if (isEmptyExtResolveInfo(extResolveInfo)) {
    LOG.error("EXTERNAL RESOLVE: resolve info is empty");
    return null;
  }
  if (!model.isExternallyResolvable()) {
    LOG.error("model " + model + " is not for external resolve");
    return null;
  }
  Collection<? extends SNode> roots=model.getRoots();
  String classifierExtResolveInfo=ExternalResolveInfoParser.getClassifierResolveInfo(extResolveInfo);
  boolean isClassifier=CLASSIFIER.equals(ExternalResolveInfoParser.getMemberType(extResolveInfo));
  for (  SNode root : roots) {
    String targetExtResolveInfo=ExternalResolveInfoProvider.getExtResolveInfoForTargetClassGenericDeclaration((GenericDeclaration)root);
    if (!ExternalResolveInfoParser.doClassifiersERIMatch(classifierExtResolveInfo,targetExtResolveInfo))     continue;
    if (isClassifier) {
      return root;
    }
 else {
      for (      SNode memberNode : root.getChildren()) {
        if (doesNodeMatchERI(extResolveInfo,memberNode))         return memberNode;
      }
    }
  }
  return null;
}
