{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.core.template.structure.MtlBuilder").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.core.template.structure.MtlEntity","jetbrains.mps.lang.core.structure.ScopeProvider").children(new String[]{"contextNode","body"},new boolean[]{false,false}).alias("builder","").create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.core.template.structure.MtlEntity").interface_().parents("jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.core.query.structure.MqlParametersContainer").create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.core.template.structure.MtlForeachMacro").super_("jetbrains.mps.core.template.structure.MtlNodeMacro").parents("jetbrains.mps.core.template.structure.MtlNodeMacro","jetbrains.mps.lang.core.structure.ScopeProvider","jetbrains.mps.core.query.structure.MqlVariableContainer").properties("multiline").children(new String[]{"var","collection"},new boolean[]{false,false}).alias("foreach","").create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.core.template.structure.MtlForeachVar").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.core.template.structure.MtlIfMacro").super_("jetbrains.mps.core.template.structure.MtlNodeMacro").parents("jetbrains.mps.core.template.structure.MtlNodeMacro").properties("multiline").children(new String[]{"condition"},new boolean[]{false}).alias("if","").create();
case 5:
return new ConceptDescriptorBuilder("jetbrains.mps.core.template.structure.MtlLabelNodeMacro").super_("jetbrains.mps.lang.core.structure.NodeAttribute").parents("jetbrains.mps.lang.core.structure.NodeAttribute","jetbrains.mps.core.query.structure.MqlVariableContainer","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").children(new String[]{"var"},new boolean[]{false}).create();
case 6:
return new ConceptDescriptorBuilder("jetbrains.mps.core.template.structure.MtlLibrary").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.ScopeProvider").children(new String[]{"entities"},new boolean[]{true}).alias("Templates library","").create();
case 7:
return new ConceptDescriptorBuilder("jetbrains.mps.core.template.structure.MtlNewNodeType").super_("jetbrains.mps.core.query.structure.MqlType").parents("jetbrains.mps.core.query.structure.MqlType").references("concept").create();
case 8:
return new ConceptDescriptorBuilder("jetbrains.mps.core.template.structure.MtlNodeMacro").super_("jetbrains.mps.lang.core.structure.NodeAttribute").parents("jetbrains.mps.lang.core.structure.NodeAttribute","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").abstract_().create();
case 9:
return new ConceptDescriptorBuilder("jetbrains.mps.core.template.structure.MtlNodeQueryMacro").super_("jetbrains.mps.core.template.structure.MtlNodeMacro").parents("jetbrains.mps.core.template.structure.MtlNodeMacro").children(new String[]{"nodeQuery"},new boolean[]{false}).alias("expr","").create();
case 10:
return new ConceptDescriptorBuilder("jetbrains.mps.core.template.structure.MtlPropertyMacro").super_("jetbrains.mps.lang.core.structure.PropertyAttribute").parents("jetbrains.mps.lang.core.structure.PropertyAttribute","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").children(new String[]{"query"},new boolean[]{false}).create();
case 11:
return new ConceptDescriptorBuilder("jetbrains.mps.core.template.structure.MtlQuery").super_("jetbrains.mps.core.smodel.structure.MqlModelQuery").parents("jetbrains.mps.core.smodel.structure.MqlModelQuery","jetbrains.mps.core.template.structure.MtlEntity").alias("query","").create();
case 12:
return new ConceptDescriptorBuilder("jetbrains.mps.core.template.structure.MtlReferenceMacro").super_("jetbrains.mps.lang.core.structure.LinkAttribute").parents("jetbrains.mps.lang.core.structure.LinkAttribute","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").children(new String[]{"query"},new boolean[]{false}).create();
case 13:
return new ConceptDescriptorBuilder("jetbrains.mps.core.template.structure.MtlTemplate").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.core.template.structure.MtlEntity","jetbrains.mps.lang.core.structure.ScopeProvider").children(new String[]{"contextNode","vars","template"},new boolean[]{false,true,false}).alias("template","").create();
case 14:
return new ConceptDescriptorBuilder("jetbrains.mps.core.template.structure.MtlTemplateRoot").super_("jetbrains.mps.lang.core.structure.NodeAttribute").parents("jetbrains.mps.lang.core.structure.NodeAttribute").create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
