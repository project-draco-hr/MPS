{
  this.addNodeById("1230052641914");
  this.addNodeById("1230052641949");
  ExtractMethodRefactoringParameters params=new ExtractMethodRefactoringParameters(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230052641922"),"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement"),SNodeOperations.cast(this.getNodeById("1230052641927"),"jetbrains.mps.baseLanguage.structure.ExpressionStatement"),SNodeOperations.cast(this.getNodeById("1230052641934"),"jetbrains.mps.baseLanguage.structure.ExpressionStatement")));
  params.setName("foo");
  ExtractMethodRefactoring ref=ExtractMethodFactory.createRefactoring(params);
  ref.doRefactor();
  Assert.assertEquals(null,NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230052641915"),"jetbrains.mps.baseLanguage.structure.ClassConcept")),ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230052641966"),"jetbrains.mps.baseLanguage.structure.ClassConcept"))));
}
