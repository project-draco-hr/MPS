{
  super(project,project.getBaseDir());
  myProject=project;
  List<ModuleTreeNode> moduleNodes=new LinkedList<ModuleTreeNode>();
  jetbrains.mps.project.Project mpsProject=ProjectHelper.toMPSProject(myProject);
  if (mpsProject != null) {
    for (    SModule m : mpsProject.getModules()) {
      if (m instanceof AbstractModule) {
        if (((AbstractModule)m).getDescriptorFile().exists()) {
          moduleNodes.add(new ModuleTreeNode(project,(AbstractModule)m));
        }
      }
    }
  }
  Collections.sort(moduleNodes,new ModuleTreeNodeComparator());
  MyNamespaceTreeBuilder builder=new MyNamespaceTreeBuilder();
  for (  ModuleTreeNode mtn : moduleNodes) {
    builder.addNode(mtn);
  }
  builder.fillNode(this);
  VirtualFile baseDir=project.getBaseDir();
  if (baseDir != null) {
    VirtualFile[] files=baseDir.getChildren();
    for (    VirtualFile f : files) {
      if (!f.isDirectory()) {
        add(new FileTreeNode(project,f));
      }
    }
  }
}
