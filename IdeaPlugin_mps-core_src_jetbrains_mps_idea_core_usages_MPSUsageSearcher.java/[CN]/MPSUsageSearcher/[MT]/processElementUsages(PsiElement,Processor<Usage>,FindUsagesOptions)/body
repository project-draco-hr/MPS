{
  if (!(options.searchScope instanceof GlobalSearchScope)) {
    return;
  }
  GlobalSearchScope scope=(GlobalSearchScope)options.searchScope;
  final Project project=scope.getProject();
  final MPSPsiProvider psiProvider=MPSPsiProvider.getInstance(project);
  for (  Module module : ModuleManager.getInstance(project).getModules()) {
    if (!scope.isSearchInModuleContent(module))     continue;
    MPSFacet facet=FacetManager.getInstance(module).getFacetByType(MPSFacetType.ID);
    if (facet == null)     continue;
    final Solution facetSolution=facet.getSolution();
    ModelAccess.instance().runReadAction(new Runnable(){
      @Override public void run(){
        for (        SModel model : SModelRepository.getInstance().getModelDescriptors(facetSolution)) {
          Deque<SNode> stack=new ArrayDeque<SNode>();
          for (          SNode node : model.getRootNodes()) {
            stack.addLast(node);
          }
          while (!stack.isEmpty()) {
            SNode node=stack.pop();
            for (            SNode child : node.getChildren()) {
              stack.push(child);
            }
            for (            SReference ref : node.getReferences()) {
              SNode targetNode=ref.getTargetNode();
              PsiElement targetPsiElement=null;
              for (              MPSNodePsiSourceFinder finder : MPSNodePsiSourceFinder.EP_NAME.getExtensions()) {
                PsiElement psiElement=finder.getPsiSource(targetNode,project);
                if (psiElement != null) {
                  targetPsiElement=psiElement;
                }
              }
              if (targetPsiElement == null) {
                continue;
              }
              if (targetPsiElement == element) {
                boolean proceed=processor.process(new NodeUsage(node.getReference(),project,"Bla-bla"));
                if (!proceed)                 return;
              }
            }
          }
        }
      }
    }
);
  }
}
