{
  myLanguage=language;
  myOperationContext=new ModuleContext(language,context.getProject());
  addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      for (      ConceptContainer conceptContainer : myRoots) {
        conceptContainer.mouseClicked(e);
      }
    }
  }
);
  myPanel.setLayout(new BorderLayout());
  myPanel.setBackground(Color.WHITE);
  final JPanel toolsPane=new JPanel();
  toolsPane.setLayout(new FlowLayout(FlowLayout.LEFT));
  toolsPane.add(new JButton(new AbstractAction("+"){
    public void actionPerformed(    ActionEvent e){
      if (myScale < 6) {
        myScale++;
        relayout();
        LanguageHierarchiesComponent.this.invalidate();
        getExternalComponent().revalidate();
        getExternalComponent().repaint();
      }
    }
  }
));
  toolsPane.add(new JButton(new AbstractAction("-"){
    public void actionPerformed(    ActionEvent e){
      if (myScale > 1) {
        myScale--;
        relayout();
        LanguageHierarchiesComponent.this.invalidate();
        getExternalComponent().revalidate();
        getExternalComponent().repaint();
      }
    }
  }
));
  myPanel.add(toolsPane,BorderLayout.NORTH);
  JScrollPane scrollPane=new JScrollPane();
  scrollPane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
  scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
  scrollPane.setViewportView(this);
  scrollPane.setBorder(new LineBorder(Color.LIGHT_GRAY));
  scrollPane.setBackground(Color.WHITE);
  myPanel.add(scrollPane,BorderLayout.CENTER);
  setBackground(Color.WHITE);
  registerKeyboardAction(new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      RecentEditorsMenu m=new RecentEditorsMenu(myOperationContext);
      if (!m.isHasItems())       return;
      m.show(LanguageHierarchiesComponent.this,0,0);
    }
  }
,KeyStroke.getKeyStroke("control E"),WHEN_IN_FOCUSED_WINDOW);
  registerKeyboardAction(new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      getEditorOpener().openPrevEditorInHistory();
    }
  }
,KeyStroke.getKeyStroke("control alt LEFT"),WHEN_IN_FOCUSED_WINDOW);
  registerKeyboardAction(new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      getEditorOpener().openNextEditorInHistory();
    }
  }
,KeyStroke.getKeyStroke("control alt RIGHT"),WHEN_IN_FOCUSED_WINDOW);
}
