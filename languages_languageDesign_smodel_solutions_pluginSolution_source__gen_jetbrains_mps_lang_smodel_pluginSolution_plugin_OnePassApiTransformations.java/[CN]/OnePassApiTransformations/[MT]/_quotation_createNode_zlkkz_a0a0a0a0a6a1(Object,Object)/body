{
  SNode quotedNode_3=null;
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  SNode quotedNode_7=null;
  SNode quotedNode_8=null;
  SNode quotedNode_9=null;
  SNode quotedNode_10=null;
  quotedNode_3=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_4=(SNode)parameter_1;
  if (quotedNode_4 != null) {
    quotedNode_3.addChild("operand",HUtil.copyIfNecessary(quotedNode_4));
  }
  quotedNode_5=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation",null,null,GlobalScope.getInstance(),false);
  quotedNode_5.setReference("baseMethodDeclaration",SReference.create("baseMethodDeclaration",quotedNode_5,SModelReference.fromString("f:java_stub#8865b7a8-5271-43d3-884c-6fd1d9cfdd34#org.jetbrains.mps.openapi.model(MPS.OpenAPI/org.jetbrains.mps.openapi.model@java_stub)"),jetbrains.mps.smodel.SNodeId.fromString("~SNode.getReferenceTarget(java.lang.String):org.jetbrains.mps.openapi.model.SNode")));
  quotedNode_7=(SNode)parameter_2;
  if (quotedNode_7 != null) {
    quotedNode_5.addChild("actualArgument",HUtil.copyIfNecessary(quotedNode_7));
  }
  quotedNode_3.addChild("operation",quotedNode_5);
  return quotedNode_3;
}
