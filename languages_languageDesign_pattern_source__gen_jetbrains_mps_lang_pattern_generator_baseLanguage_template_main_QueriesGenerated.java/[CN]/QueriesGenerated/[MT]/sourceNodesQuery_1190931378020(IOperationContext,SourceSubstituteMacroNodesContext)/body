{
  final List<SNode> result=new ArrayList<SNode>();
  final Set<String> processedRoles=SetSequence.fromSet(new HashSet<String>());
  for (  SNode child : ListSequence.fromList(_context.getNode().getChildren())) {
    if (AttributeOperations.isAttribute(child)) {
      continue;
    }
    String role=child.getRoleInParent();
    if (SetSequence.fromSet(processedRoles).contains(role)) {
      continue;
    }
    SetSequence.fromSet(processedRoles).addElement(role);
    SNode childRoleNode=SModelOperations.createNewNode(_context.getOutputModel(),null,"jetbrains.mps.lang.pattern.structure.GeneratorInternal_ChildDescriptor");
    SPropertyOperations.set(childRoleNode,"role",role);
    SLinkOperations.setTarget(childRoleNode,"childLinkDeclaration",AbstractConceptDeclaration_Behavior.call_findLinkDeclaration_1213877394467(SNodeOperations.getConceptDeclaration(_context.getNode()),role),false);
    SLinkOperations.setTarget(childRoleNode,"mainNode",_context.getNode(),false);
    ListSequence.fromList(result).addElement(childRoleNode);
  }
  return result;
}
