{
  CopyPasteUtil.setDataConverter(new CopyPasteUtil.IDataConverter(){
    public boolean canPasteAsNodes(    SModel model,    SNode anchor){
      String text=TextPasteUtil.getStringFromClipboard();
      return text != null && text.length() > PasteJavaTextAsNodes_CustomApplicationPlugin.this.MIN_TEXT_LENGTH_TO_CONVERT;
    }
    public void pasteAsNodes(    SModel model,    SNode anchor){
      String text=TextPasteUtil.getStringFromClipboard();
      if (text != null && text.length() > PasteJavaTextAsNodes_CustomApplicationPlugin.this.MIN_TEXT_LENGTH_TO_CONVERT) {
        new JavaPaster().pasteJavaAsNode(anchor,model,text,null,FeatureKind.STATEMENTS);
      }
    }
    public PasteNodeData getPasteNodeData(    SModel model){
      String text=TextPasteUtil.getStringFromClipboard();
      if (text != null && text.length() > PasteJavaTextAsNodes_CustomApplicationPlugin.this.MIN_TEXT_LENGTH_TO_CONVERT) {
        SNodeTransferable transferable=new SNodeTransferable(JavaPaster.getStatementsFromJavaText(text,model,null),text);
        return transferable.createNodeData(model);
      }
      return null;
    }
  }
);
}
