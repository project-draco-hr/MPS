{
  IRefactoringTarget refTarget=myRefactoring.getRefactoringTarget();
  boolean oneEntity=!refTarget.allowMultipleTargets();
  Set entities;
  if (refTarget.getTarget() == TargetType.NODE) {
    entities=getNodes(e,oneEntity);
  }
 else   if (refTarget.getTarget() == TargetType.MODEL) {
    entities=getModels(e,oneEntity);
  }
 else   if (refTarget.getTarget() == TargetType.MODULE) {
    entities=getModules(e,oneEntity);
  }
 else {
    throw new IllegalArgumentException("Wrong refatctoring type" + refTarget.getTarget().getClass().getName());
  }
  boolean enabled;
  if (entities == null || entities.isEmpty()) {
    enabled=false;
  }
 else {
    enabled=!(RefactoringUtil.getApplicability(myRefactoring,entities).lessThan(getMinApplicabilityLevel()));
  }
  setEnabledState(e.getPresentation(),enabled);
}
