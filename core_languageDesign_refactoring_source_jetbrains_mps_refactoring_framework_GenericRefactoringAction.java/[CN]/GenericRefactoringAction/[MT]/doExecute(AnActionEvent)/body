{
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      SModelRepository.getInstance().saveAll();
    }
  }
);
  final RefactoringContext context=new RefactoringContext(myRefactoring);
  context.setCurrentOperationContext(e.getData(MPSDataKeys.OPERATION_CONTEXT));
  context.setSelectedModel(e.getData(MPSDataKeys.MODEL));
  context.setSelectedNode(e.getData(MPSDataKeys.NODE));
  context.setSelectedNodes(e.getData(MPSDataKeys.NODES));
  context.setSelectedModule(e.getData(MPSDataKeys.MODULE));
  context.setSelectedMPSProject(e.getData(MPSDataKeys.MPS_PROJECT));
  context.setCurrentScope(e.getData(MPSDataKeys.SCOPE));
  new Thread(){
    public void run(){
      new RefactoringProcessor().execute(myRefactoring,context);
    }
  }
.start();
}
