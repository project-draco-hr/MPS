{
  CellProviderWithRole provider=new PropertyCellProvider(node,editorContext);
  provider.setRole("overrides");
  provider.setNoTargetText("<no overrides>");
  EditorCell editorCell;
  editorCell=provider.createEditorCell(editorContext);
  editorCell.setCellId("property_overrides");
  editorCell.setTransformationMenuLookup(new NamedTransformationMenuLookup(LanguageRegistry.getInstance(editorContext.getRepository()),MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x1117e2f5efaL,"jetbrains.mps.lang.typesystem.structure.InferenceRule"),"jetbrains.mps.lang.typesystem.editor.InferenceRule_ApplySideTransforms"));
  editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
  SNode attributeConcept=provider.getRoleAttribute();
  Class attributeKind=provider.getRoleAttributeClass();
  if (attributeConcept != null) {
    EditorManager manager=EditorManager.getInstanceFromContext(editorContext);
    return manager.createNodeRoleAttributeCell(attributeConcept,attributeKind,editorCell);
  }
 else   return editorCell;
}
