{
  this.addNodeById("1230053302584");
  this.addNodeById("1230053302601");
  this.addNodeById("1230053302605");
  this.addNodeById("1230053302613");
  MoveStaticMethodRefactoring ref=new MoveStaticMethodRefactoring(SNodeOperations.cast(this.getNodeById("1230053302586"),"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration"),SNodeOperations.cast(this.getNodeById("1230053302602"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
  ref.doRefactoring();
  Assert.assertNull("nodes '" + SNodeOperations.cast(this.getNodeById("1230053302585"),"jetbrains.mps.baseLanguage.structure.ClassConcept") + "' and '"+ SNodeOperations.cast(this.getNodeById("1230053302606"),"jetbrains.mps.baseLanguage.structure.ClassConcept")+ "' do not match!",NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230053302585"),"jetbrains.mps.baseLanguage.structure.ClassConcept"),SNodeOperations.cast(this.getNodeById("1230053302602"),"jetbrains.mps.baseLanguage.structure.ClassConcept")),ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230053302606"),"jetbrains.mps.baseLanguage.structure.ClassConcept"),SNodeOperations.cast(this.getNodeById("1230053302614"),"jetbrains.mps.baseLanguage.structure.ClassConcept"))));
}
