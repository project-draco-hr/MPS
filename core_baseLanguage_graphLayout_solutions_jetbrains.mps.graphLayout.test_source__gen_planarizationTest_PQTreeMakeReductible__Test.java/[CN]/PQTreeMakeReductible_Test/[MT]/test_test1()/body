{
  PQTree tree=new PQTree();
  List<Leaf> leaves=ListSequence.fromList(new ArrayList<Leaf>());
  PNode root=new PNode();
  tree.setRoot(root);
  addLeavesToNode(root,1,leaves,tree);
  QNode qNode=new QNode();
  root.addLastChild(qNode);
  addLeavesToNode(qNode,1,leaves,tree);
  PNode pNode1=new PNode();
  qNode.addFirstChild(pNode1);
  addLeavesToNode(pNode1,2,leaves,tree);
  PNode pNode2=new PNode();
  qNode.addLastChild(pNode2);
  addLeavesToNode(pNode2,2,leaves,tree);
  makeEmpty(tree);
  ListSequence.fromList(leaves).getElement(0).setState(PQNode.State.FULL);
  ListSequence.fromList(leaves).getElement(1).setState(PQNode.State.FULL);
  ListSequence.fromList(leaves).getElement(2).setState(PQNode.State.FULL);
  ListSequence.fromList(leaves).getElement(4).setState(PQNode.State.FULL);
  System.out.println(tree);
  System.out.println("after:");
  tree.makeReducible();
  System.out.println(tree);
}
