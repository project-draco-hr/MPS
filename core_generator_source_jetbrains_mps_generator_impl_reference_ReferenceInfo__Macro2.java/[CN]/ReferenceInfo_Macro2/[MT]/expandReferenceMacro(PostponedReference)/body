{
  SNode sourceNode=ref.getSourceNode();
  SReferenceLink macroLink=ref.getLink();
  ReferenceMacroContext queryContext=new ReferenceMacroContext(myContext,sourceNode,getMacroNodeRef(),macroLink);
  Object result=myContext.getEnvironment().getQueryExecutor().evaluate(myQuery,queryContext);
  if (result instanceof SNode) {
    myOutputTargetNode=(SNode)result;
  }
 else   if (result != null) {
    myResolveInfoForDynamicResolve=(String)result;
  }
  if (myOutputTargetNode == null) {
    return;
  }
  if (myOutputTargetNode.getModel() == ref.getGenerator().getInputModel()) {
    SNode outputTargetNode_output=ref.getGenerator().findCopiedOutputNodeForInputNode(myOutputTargetNode);
    if (outputTargetNode_output != null) {
      myOutputTargetNode=outputTargetNode_output;
    }
 else {
      final String msg="reference macro returned node from input model; role: %s in %s";
      ref.getGenerator().getLogger().warning(getMacroNodeRef(),String.format(msg,ref.getLink(),SNodeOperations.getDebugText(ref.getSourceNode())),GeneratorUtil.describe(ref.getSourceNode(),"source node"),GeneratorUtil.describeIfExists(myOutputTargetNode,"target node in input model"));
    }
  }
}
