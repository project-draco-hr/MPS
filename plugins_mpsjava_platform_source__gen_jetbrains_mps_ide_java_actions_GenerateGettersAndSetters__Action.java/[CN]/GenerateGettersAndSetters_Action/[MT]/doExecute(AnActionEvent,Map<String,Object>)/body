{
  try {
    SNode classConcept=GenerateGettersAndSetters_Action.this.getClassConcept(_params);
    SNodeReference[] fields;
    fields=Sequence.fromIterable(GenerateGettersAndSetters_Action.this.getFieldDeclarationsWithoutGetterOrSetter(classConcept,_params)).select(new ISelector<SNode,SNodeReference>(){
      public SNodeReference select(      SNode it){
        return new jetbrains.mps.smodel.SNodePointer(it);
      }
    }
).toGenericArray(SNodeReference.class);
    SelectFieldsDialog selectFieldsDialog=new SelectFieldsDialog(fields,false,((EditorContext)MapSequence.fromMap(_params).get("editorContext")).getOperationContext().getProject());
    selectFieldsDialog.setTitle("Select Fields to Generate Getters and Setters");
    selectFieldsDialog.show();
    if (!(selectFieldsDialog.isOK())) {
      return;
    }
    SNodeReference[] selectedFields=Sequence.fromIterable(((Iterable<SNodeReference>)selectFieldsDialog.getSelectedElements())).toGenericArray(SNodeReference.class);
    SNode lastAdded=null;
    Project project=((EditorContext)MapSequence.fromMap(_params).get("editorContext")).getOperationContext().getProject();
    for (    SNodeReference fieldPtr : selectedFields) {
      final SNode field=SNodeOperations.cast(fieldPtr.resolve(MPSModuleRepository.getInstance()),"jetbrains.mps.baseLanguage.structure.FieldDeclaration");
      final String getterName=GenerateGettersAndSettersUtil.getFieldGetterName(field,project);
      SNode fieldReference=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.VariableReference",null);
      SLinkOperations.setTarget(fieldReference,"variableDeclaration",field,false);
      ListSequence.fromList(SLinkOperations.getTargets(classConcept,"member",true)).addElement(_quotation_createNode_5trf1k_a0a4a41a0(SLinkOperations.getTarget(field,"type",true),fieldReference,getterName));
      final String setterName=GenerateGettersAndSettersUtil.getFieldSetterName(field,project);
      String parameterName=GenerateGettersAndSettersUtil.getParameterNameForField(field,project);
      lastAdded=ListSequence.fromList(SLinkOperations.getTargets(classConcept,"member",true)).addElement(_quotation_createNode_5trf1k_a0a0i0o0a(SNodeOperations.copyNode(fieldReference),SLinkOperations.getTarget(field,"type",true),parameterName,setterName));
    }
    if (lastAdded != null) {
      ((EditorContext)MapSequence.fromMap(_params).get("editorContext")).select(lastAdded);
    }
  }
 catch (  Throwable t) {
    LOG.error("User's action execute method failed. Action:" + "GenerateGettersAndSetters",t);
  }
}
