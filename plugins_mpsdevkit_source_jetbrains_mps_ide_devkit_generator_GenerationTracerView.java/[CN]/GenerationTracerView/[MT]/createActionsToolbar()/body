{
  ToggleAction autoscrollAction=new ToggleAction("","Autoscroll to Source",Icons.AUTOSCROLL_TO_SOURCE){
    public boolean isSelected(    AnActionEvent e){
      return myTool.isAutoscroll();
    }
    public void setSelected(    AnActionEvent e,    boolean state){
      myTool.autoscrollsChanged(state);
    }
  }
;
  AnAction closeAction=new AnAction("","Close",Icons.CLOSE){
    @Override public void actionPerformed(    AnActionEvent e){
      myTool.close(GenerationTracerView.this);
    }
  }
;
class PresentationSettings extends AnAction implements PopupAction {
    PresentationSettings(){
      super("Settings","Settings",General.Settings);
    }
    @Override public void actionPerformed(    AnActionEvent e){
      JPopupMenu menu=createViewSettingsMenu();
      menu.show(e.getInputEvent().getComponent(),10,10);
    }
  }
  ActionGroup group=ActionUtils.groupFromActions(autoscrollAction,closeAction,new PresentationSettings());
  ActionManager manager=ActionManager.getInstance();
  ActionToolbar toolbar=manager.createActionToolbar(ActionPlaces.USAGE_VIEW_TOOLBAR,group,false);
  return toolbar.getComponent();
}
