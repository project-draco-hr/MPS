{
  this.appendNewLine();
  this.indentBuffer();
  this.append("/**");
  this.increaseDepth();
  if (ListSequence.fromList(SLinkOperations.getTargets(node,"body",true)).isNotEmpty()) {
    for (    SNode item : SLinkOperations.getTargets(node,"body",true)) {
      TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),item,this.getSNode());
    }
  }
  if (!(BaseDocComment_Behavior.call_isTagSectionEmpty_8465538089690623795(node))) {
    this.appendNewLine();
  }
  if (ListSequence.fromList(SLinkOperations.getTargets(node,"author",true)).isNotEmpty()) {
    for (    SNode item : SLinkOperations.getTargets(node,"author",true)) {
      TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),item,this.getSNode());
    }
  }
  if (ListSequence.fromList(SLinkOperations.getTargets(node,"since",true)).isNotEmpty()) {
    for (    SNode item : SLinkOperations.getTargets(node,"since",true)) {
      TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),item,this.getSNode());
    }
  }
  if (ListSequence.fromList(SLinkOperations.getTargets(node,"version",true)).isNotEmpty()) {
    for (    SNode item : SLinkOperations.getTargets(node,"version",true)) {
      TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),item,this.getSNode());
    }
  }
  if (ListSequence.fromList(SLinkOperations.getTargets(node,"see",true)).isNotEmpty()) {
    for (    SNode item : SLinkOperations.getTargets(node,"see",true)) {
      TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),item,this.getSNode());
    }
  }
  if (ListSequence.fromList(SLinkOperations.getTargets(node,"param",true)).isNotEmpty()) {
    for (    SNode item : SLinkOperations.getTargets(node,"param",true)) {
      TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),item,this.getSNode());
    }
  }
  if (ListSequence.fromList(SLinkOperations.getTargets(node,"throwsTag",true)).isNotEmpty()) {
    for (    SNode item : SLinkOperations.getTargets(node,"throwsTag",true)) {
      TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),item,this.getSNode());
    }
  }
  this.decreaseDepth();
  this.appendNewLine();
  this.indentBuffer();
  this.append(" */");
}
