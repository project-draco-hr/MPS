{
  this.addNodeById("2282909602806268543");
  this.addNodeById("2282909602806423211");
  jetbrains.mps.smodel.SNode startNode=SConceptOperations.createNewNode("jetbrains.mps.lang.smodelTests.structure.Child",null);
  jetbrains.mps.smodel.SNode endNode=SConceptOperations.createNewNode("jetbrains.mps.lang.smodelTests.structure.Child",null);
  ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(this.getNodeById("2282909602806268544"),"jetbrains.mps.lang.smodelTests.structure.Root"),"child_0_n",true)).addElement(startNode);
  ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(this.getNodeById("2282909602806268544"),"jetbrains.mps.lang.smodelTests.structure.Root"),"child_0_n",true)).addElement(endNode);
  Assert.assertTrue(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(this.getNodeById("2282909602806268544"),"jetbrains.mps.lang.smodelTests.structure.Root"),"child_0_n",true)).contains(startNode));
  Assert.assertTrue(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(this.getNodeById("2282909602806268544"),"jetbrains.mps.lang.smodelTests.structure.Root"),"child_0_n",true)).contains(endNode));
  List<SNode> addition=ListSequence.fromListAndArray(new ArrayList<SNode>(),SConceptOperations.createNewNode("jetbrains.mps.lang.smodelTests.structure.Child",null),SConceptOperations.createNewNode("jetbrains.mps.lang.smodelTests.structure.Child",null));
  SLinkOperations.getTargets(SNodeOperations.cast(this.getNodeById("2282909602806268544"),"jetbrains.mps.lang.smodelTests.structure.Root"),"child_0_n",true).addAll(1,addition);
  Assert.assertEquals(4,ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(this.getNodeById("2282909602806268544"),"jetbrains.mps.lang.smodelTests.structure.Root"),"child_0_n",true)).count());
  Assert.assertEquals(1,ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(this.getNodeById("2282909602806268544"),"jetbrains.mps.lang.smodelTests.structure.Root"),"child_0_n",true)).indexOf(ListSequence.fromList(addition).getElement(0)));
  Assert.assertEquals(2,ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(this.getNodeById("2282909602806268544"),"jetbrains.mps.lang.smodelTests.structure.Root"),"child_0_n",true)).indexOf(ListSequence.fromList(addition).getElement(1)));
}
