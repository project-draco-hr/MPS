{
  final Element element=XslTest.readAndTransform(configFile,xslFile);
  Assert.assertTrue(element.getChildren().size() > 0);
  RunConfigurationsInitializer_CustomApplicationPlugin plugin=new RunConfigurationsInitializer_CustomApplicationPlugin();
  plugin.init();
  try {
    Project project=ProjectManager.getInstance().getOpenProjects()[0];
    RunManagerImpl runManagerImpl=RunManagerImpl.getInstanceImpl(project);
    runManagerImpl.initializeConfigurationTypes(RunConfigurationsStateManager.getConfigurationTypes());
    for (    Object child : element.getChildren()) {
      RunnerAndConfigurationSettingsImpl settings=new RunnerAndConfigurationSettingsImpl(runManagerImpl);
      try {
        settings.readExternal((Element)child);
        Assert.assertFalse(new _FunctionTypes._return_P0_E0<String>(){
          public String invoke(){
            StringWriter writer=new StringWriter();
            Document resultDocument=new Document(element);
            try {
              JDOMUtil.writeDocument(resultDocument,writer);
              return writer.toString();
            }
 catch (            IOException e) {
              return e.getMessage();
            }
          }
        }
.invoke(),settings.getConfiguration().getType() instanceof UnknownConfigurationType);
      }
 catch (      InvalidDataException e) {
        e.printStackTrace();
        Assert.fail(e.getMessage());
      }
    }
  }
  finally {
    plugin.dispose();
  }
}
