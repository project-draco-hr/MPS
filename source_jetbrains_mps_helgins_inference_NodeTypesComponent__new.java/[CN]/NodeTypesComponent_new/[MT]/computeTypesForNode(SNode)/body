{
  if (node == null)   return;
  Set<SNode> frontier=new LinkedHashSet<SNode>();
  Set<SNode> newFrontier=new LinkedHashSet<SNode>();
  frontier.add(node);
  while (!(frontier.isEmpty())) {
    for (    SNode sNode : frontier) {
      if (myFullyCheckedNodes.contains(sNode)) {
        continue;
      }
      newFrontier.addAll(sNode.getChildren());
      if (!myPartlyCheckedNodes.contains(sNode)) {
        myNotSkippedNodes.add(new SNodeProxy(sNode));
        myCurrentFrontier=newFrontier;
        myNodesReadListener.clear();
        NodeReadEventsCaster.setNodesReadListener(myNodesReadListener);
        try {
          applyRulesToNode(sNode);
        }
  finally {
          NodeReadEventsCaster.removeNodesReadListener();
          myCurrentFrontier=null;
        }
synchronized (ACCESS_LOCK) {
          myNodesReadListener.setAccessReport(true);
          addDepedentNodes(sNode,new HashSet<SNode>(myNodesReadListener.myAcessedNodes));
          myNodesReadListener.setAccessReport(false);
        }
        myNodesReadListener.clear();
        myPartlyCheckedNodes.add(sNode);
      }
      myFullyCheckedNodes.add(sNode);
    }
    frontier=newFrontier;
    newFrontier=new LinkedHashSet<SNode>();
  }
}
