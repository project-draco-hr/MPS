{
  IFile langFile=TestUtils.dataFile("language.mpl");
  DescriptorIOProvider diof=DescriptorIOFacade.getInstance().standardProvider();
  Assert.assertNotNull(diof);
  DescriptorIO<LanguageDescriptor> ldio=diof.languageDescriptorIO();
  Assert.assertSame(ldio,DescriptorIOFacade.getInstance().fromFileType(langFile));
  LanguageDescriptor ld=ldio.readFromFile(langFile);
  Assert.assertEquals("8def2cb8-4c14-11e1-a9af-6cf049e62fe5",ld.getUUID());
  Assert.assertTrue(ld.getCompileInMPS());
  Assert.assertSame(1,ld.getDependencies().size());
  Assert.assertEquals(ModuleId.fromString("ceab5195-25ea-4f22-9b92-103b95ca8c0c"),Sequence.fromIterable(((Iterable<Dependency>)ld.getDependencies())).first().getModuleRef().getModuleId());
  Assert.assertSame(1,ld.getExtendedLanguages().size());
  Assert.assertEquals(ModuleId.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816"),Sequence.fromIterable(((Iterable<ModuleReference>)ld.getExtendedLanguages())).first().getModuleId());
}
