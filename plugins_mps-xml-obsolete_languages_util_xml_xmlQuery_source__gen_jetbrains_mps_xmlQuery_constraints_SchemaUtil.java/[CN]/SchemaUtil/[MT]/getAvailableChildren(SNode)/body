{
  List<SNode> children=new ArrayList<SNode>();
  ListSequence.fromList(children).addSequence(ListSequence.fromList(SNodeOperations.getDescendants(complexType,"jetbrains.mps.xmlSchema.structure.ElementReference",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (SLinkOperations.getTarget(it,"elementDeclaration",false) != null);
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SLinkOperations.getTarget(it,"elementDeclaration",false);
    }
  }
));
  return children;
}
