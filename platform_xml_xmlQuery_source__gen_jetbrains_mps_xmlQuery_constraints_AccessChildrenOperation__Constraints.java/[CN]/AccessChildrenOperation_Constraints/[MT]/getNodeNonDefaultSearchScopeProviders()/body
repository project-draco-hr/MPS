{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("elementDeclaration",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      final SNode complexType=SLinkOperations.getTarget(SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(SNodeOperations.cast(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)),"jetbrains.mps.xmlQuery.structure.XMLElementType"),"complexType",false);
      if (complexType == null) {
        return new ArrayList<SNode>();
      }
      SNode elementDeclaration=SNodeOperations.getAncestor(complexType,"jetbrains.mps.xmlSchema.structure.ElementDeclaration",false,false);
      if (elementDeclaration == null) {
        elementDeclaration=ListSequence.fromList(SNodeOperations.getDescendants(SNodeOperations.getAncestor(complexType,"jetbrains.mps.xmlSchema.structure.Schema",false,false),"jetbrains.mps.xmlSchema.structure.ElementWithType",false,new String[]{})).findFirst(new IWhereFilter<SNode>(){
          public boolean accept(          SNode ewt){
            return SLinkOperations.getTarget(SLinkOperations.getTarget(ewt,"complexTypeReference",true),"complexType",false) == complexType;
          }
        }
);
      }
      List<SNode> elementDeclarations=ElementUtil.getElementDeclarations(elementDeclaration,_context.getEnclosingNode(),operationContext.getScope());
      return elementDeclarations;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:e79b58b4-ea58-4c9d-b43b-c3a260addf6a(jetbrains.mps.xmlQuery.constraints)","4991903842868413103");
    }
  }
);
  return result;
}
