{
  if (myAncestorsNamesMap.containsKey(conceptFqName)) {
    return Collections.unmodifiableSet(myAncestorsNamesMap.get(conceptFqName));
  }
 else {
    return NodeReadAccessCaster.runReadTransparentAction(new Computable<Set<String>>(){
      public Set<String> compute(){
        Set<String> result=new LinkedHashSet<String>();
        AbstractConceptDeclaration declaration=SModelUtil_new.findConceptDeclaration(conceptFqName,GlobalScope.getInstance());
        if (declaration == null) {
          return result;
        }
        result.add(conceptFqName);
        if (declaration instanceof ConceptDeclaration) {
          ConceptDeclaration cd=(ConceptDeclaration)declaration;
          ConceptDeclaration extendedConcept=cd.getExtends();
          if (extendedConcept != null) {
            String fqName=NameUtil.nodeFQName(extendedConcept);
            Language declaringLanguage=SModelUtil_new.getDeclaringLanguage(fqName,GlobalScope.getInstance());
            if (declaringLanguage != null) {
              result.addAll(getAncestorsNames(fqName));
            }
          }
          for (          InterfaceConceptReference icr : cd.getImplementses()) {
            InterfaceConceptDeclaration interfaceConcept=icr.getIntfc();
            if (interfaceConcept == null)             continue;
            String fqName=NameUtil.nodeFQName(interfaceConcept);
            Language declaringLanguage=SModelUtil_new.getDeclaringLanguage(fqName,GlobalScope.getInstance());
            if (declaringLanguage == null)             continue;
            result.addAll(getAncestorsNames(fqName));
          }
        }
        if (declaration instanceof InterfaceConceptDeclaration) {
          InterfaceConceptDeclaration icd=(InterfaceConceptDeclaration)declaration;
          for (          InterfaceConceptReference icr : icd.getExtendses()) {
            InterfaceConceptDeclaration interfaceConcept=icr.getIntfc();
            if (interfaceConcept == null)             continue;
            String fqName=NameUtil.nodeFQName(interfaceConcept);
            Language declaringLanguage=SModelUtil_new.getDeclaringLanguage(fqName,GlobalScope.getInstance());
            if (declaringLanguage == null)             continue;
            result.add(fqName);
            result.addAll(getAncestorsNames(fqName));
          }
        }
        myAncestorsNamesMap.put(conceptFqName,result);
        return Collections.unmodifiableSet(result);
      }
    }
);
  }
}
