{
  if (result.contains(conceptFqName))   return;
  result.add(conceptFqName);
  AbstractConceptDeclaration declaration=SModelUtil_new.findConceptDeclaration(conceptFqName,GlobalScope.getInstance());
  if (declaration == null) {
    return;
  }
  if (declaration instanceof ConceptDeclaration) {
    ConceptDeclaration cd=(ConceptDeclaration)declaration;
    ConceptDeclaration extendedConcept=cd.getExtends();
    if (extendedConcept != null) {
      Language declaringLanguage=SModelUtil.getDeclaringLanguage(extendedConcept.getNode(),GlobalScope.getInstance());
      if (declaringLanguage != null) {
        collectAncestorNames(NameUtil.nodeFQName(extendedConcept),result);
      }
    }
 else     if (!BaseConcept.concept.equals(NameUtil.nodeFQName(cd))) {
      collectAncestorNames(NameUtil.nodeFQName(SModelUtil.getBaseConcept()),result);
    }
    for (    InterfaceConceptReference icr : cd.getImplementses()) {
      InterfaceConceptDeclaration interfaceConcept=icr.getIntfc();
      if (interfaceConcept == null)       continue;
      Language declaringLanguage=SModelUtil.getDeclaringLanguage(interfaceConcept.getNode(),GlobalScope.getInstance());
      if (declaringLanguage == null)       continue;
      collectAncestorNames(NameUtil.nodeFQName(interfaceConcept),result);
    }
  }
  if (declaration instanceof InterfaceConceptDeclaration) {
    InterfaceConceptDeclaration icd=(InterfaceConceptDeclaration)declaration;
    for (    InterfaceConceptReference icr : icd.getExtendses()) {
      InterfaceConceptDeclaration interfaceConcept=icr.getIntfc();
      if (interfaceConcept == null)       continue;
      Language declaringLanguage=SModelUtil.getDeclaringLanguage(interfaceConcept.getNode(),GlobalScope.getInstance());
      if (declaringLanguage == null)       continue;
      collectAncestorNames(NameUtil.nodeFQName(interfaceConcept),result);
    }
  }
}
