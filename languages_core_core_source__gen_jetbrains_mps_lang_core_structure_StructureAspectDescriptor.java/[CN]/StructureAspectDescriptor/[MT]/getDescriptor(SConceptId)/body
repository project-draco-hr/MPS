{
switch (myConceptIndex.index(id)) {
case LanguageConceptSwitch.Attribute:
    return myConceptAttribute;
case LanguageConceptSwitch.BaseCommentAttribute:
  return myConceptBaseCommentAttribute;
case LanguageConceptSwitch.BaseConcept:
return myConceptBaseConcept;
case LanguageConceptSwitch.ChildAttribute:
return myConceptChildAttribute;
case LanguageConceptSwitch.ExportScope:
return myConceptExportScope;
case LanguageConceptSwitch.ExportScopeModule:
return myConceptExportScopeModule;
case LanguageConceptSwitch.ExportScopeNamespace:
return myConceptExportScopeNamespace;
case LanguageConceptSwitch.ExportScopePublic:
return myConceptExportScopePublic;
case LanguageConceptSwitch.IAntisuppressErrors:
return myConceptIAntisuppressErrors;
case LanguageConceptSwitch.ICanSuppressErrors:
return myConceptICanSuppressErrors;
case LanguageConceptSwitch.IContainer:
return myConceptIContainer;
case LanguageConceptSwitch.IDeprecatable:
return myConceptIDeprecatable;
case LanguageConceptSwitch.IDontApplyTypesystemRules:
return myConceptIDontApplyTypesystemRules;
case LanguageConceptSwitch.IDontSubstituteByDefault:
return myConceptIDontSubstituteByDefault;
case LanguageConceptSwitch.IMetaLevelChanger:
return myConceptIMetaLevelChanger;
case LanguageConceptSwitch.INamedConcept:
return myConceptINamedConcept;
case LanguageConceptSwitch.IOldCommentAnnotation:
return myConceptIOldCommentAnnotation;
case LanguageConceptSwitch.IOldCommentContainer:
return myConceptIOldCommentContainer;
case LanguageConceptSwitch.IResolveInfo:
return myConceptIResolveInfo;
case LanguageConceptSwitch.ISkipConstraintsChecking:
return myConceptISkipConstraintsChecking;
case LanguageConceptSwitch.IStubForAnotherConcept:
return myConceptIStubForAnotherConcept;
case LanguageConceptSwitch.ISuppressErrors:
return myConceptISuppressErrors;
case LanguageConceptSwitch.IType:
return myConceptIType;
case LanguageConceptSwitch.IWrapper:
return myConceptIWrapper;
case LanguageConceptSwitch.ImplementationContainer:
return myConceptImplementationContainer;
case LanguageConceptSwitch.ImplementationPart:
return myConceptImplementationPart;
case LanguageConceptSwitch.ImplementationWithStubPart:
return myConceptImplementationWithStubPart;
case LanguageConceptSwitch.InterfacePart:
return myConceptInterfacePart;
case LanguageConceptSwitch.LinkAttribute:
return myConceptLinkAttribute;
case LanguageConceptSwitch.NodeAttribute:
return myConceptNodeAttribute;
case LanguageConceptSwitch.PropertyAttribute:
return myConceptPropertyAttribute;
case LanguageConceptSwitch.ScopeFacade:
return myConceptScopeFacade;
case LanguageConceptSwitch.ScopeProvider:
return myConceptScopeProvider;
case LanguageConceptSwitch.SideTransformInfo:
return myConceptSideTransformInfo;
case LanguageConceptSwitch.SuppressErrorsAnnotation:
return myConceptSuppressErrorsAnnotation;
default :
return null;
}
}
