{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.Attribute").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.BaseConcept").parents().properties("shortDescription","alias","virtualPackage").children(new String[]{"smodelAttribute"},new boolean[]{true}).abstract_().create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ExportScope").super_("jetbrains.mps.lang.core.structure.NodeAttribute").parents("jetbrains.mps.lang.core.structure.NodeAttribute","jetbrains.mps.lang.core.structure.InterfacePart").abstract_().create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ExportScopeModule").super_("jetbrains.mps.lang.core.structure.ExportScope").parents("jetbrains.mps.lang.core.structure.ExportScope").alias("@export(module)","").create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ExportScopeNamespace").super_("jetbrains.mps.lang.core.structure.ExportScope").parents("jetbrains.mps.lang.core.structure.ExportScope").properties("namespace").alias("@export(namespace)","").create();
case 5:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ExportScopePublic").super_("jetbrains.mps.lang.core.structure.ExportScope").parents("jetbrains.mps.lang.core.structure.ExportScope").alias("@export(public)","").create();
case 6:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.IAntisuppressErrors").interface_().create();
case 7:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ICanSuppressErrors").interface_().create();
case 8:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.IContainer").interface_().create();
case 9:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.IDeprecatable").interface_().create();
case 10:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").interface_().create();
case 11:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.IMetaLevelChanger").interface_().create();
case 12:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.INamedConcept").interface_().properties("name").create();
case 13:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.IResolveInfo").interface_().properties("resolveInfo").create();
case 14:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ISuppressErrors").interface_().create();
case 15:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.IType").interface_().create();
case 16:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.IWrapper").interface_().create();
case 17:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ImplementationContainer").interface_().create();
case 18:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ImplementationPart").interface_().parents("jetbrains.mps.lang.core.structure.ScopeFacade").create();
case 19:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ImplementationWithStubPart").interface_().parents("jetbrains.mps.lang.core.structure.ImplementationPart").create();
case 20:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.InterfacePart").interface_().create();
case 21:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.LinkAttribute").super_("jetbrains.mps.lang.core.structure.Attribute").parents("jetbrains.mps.lang.core.structure.Attribute").properties("linkRole").create();
case 22:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.NodeAttribute").super_("jetbrains.mps.lang.core.structure.Attribute").parents("jetbrains.mps.lang.core.structure.Attribute").create();
case 23:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.PropertyAttribute").super_("jetbrains.mps.lang.core.structure.Attribute").parents("jetbrains.mps.lang.core.structure.Attribute").properties("propertyName").create();
case 24:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ScopeFacade").interface_().create();
case 25:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.ScopeProvider").interface_().create();
case 26:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.core.structure.SuppressErrorsAnnotation").super_("jetbrains.mps.lang.core.structure.NodeAttribute").parents("jetbrains.mps.lang.core.structure.NodeAttribute","jetbrains.mps.lang.core.structure.ISuppressErrors").create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
