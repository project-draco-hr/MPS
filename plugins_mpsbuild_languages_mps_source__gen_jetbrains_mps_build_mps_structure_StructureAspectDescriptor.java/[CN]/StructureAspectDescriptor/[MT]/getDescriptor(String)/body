{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_Language","jetbrains.mps.build.mps.structure.BuildMps_Module",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_Module"},new String[]{},new String[]{});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_Module","jetbrains.mps.build.structure.BuildProjectPart",false,new String[]{"jetbrains.mps.build.structure.BuildProjectPart","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"uuid"},new String[]{});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyOnJavaModule","jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency"},new String[]{"reexport"},new String[]{"module"});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyOnModule","jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency"},new String[]{"reexport"},new String[]{"module"});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyUseLanguage","jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency"},new String[]{},new String[]{"language"});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_ModuleJavaSource","jetbrains.mps.build.mps.structure.BuildMps_ModuleSource",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_ModuleSource"},new String[]{},new String[]{});
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_ModuleRuntime","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_ModuleSolutionRuntime","jetbrains.mps.build.mps.structure.BuildMps_ModuleRuntime",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_ModuleRuntime"},new String[]{},new String[]{"solution"});
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_ModuleSource","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_Solution","jetbrains.mps.build.mps.structure.BuildMps_Module",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_Module"},new String[]{},new String[]{});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
