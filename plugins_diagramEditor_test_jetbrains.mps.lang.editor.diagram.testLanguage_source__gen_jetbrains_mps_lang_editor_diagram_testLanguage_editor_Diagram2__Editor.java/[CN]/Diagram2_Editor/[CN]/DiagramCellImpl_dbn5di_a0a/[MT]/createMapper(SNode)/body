{
  return new Mapper<SNode,DiagramView>(node,createDiagramView()){
    @Override protected void registerSynchronizers(    Mapper.SynchronizersConfiguration configuration){
      super.registerSynchronizers(configuration);
      configuration.add(Synchronizers.forObservableRole(this,myBlocks,getTarget().itemsView.children(),new MapperFactory<SNode,View>(){
        public Mapper<? extends SNode,? extends View> createMapper(        SNode node){
          return ((BlockCell)getDirectChildCell(node)).createMapper();
        }
      }
));
      configuration.add(Synchronizers.forObservableRole(this,myConnectors,getTarget().connections,new MapperFactory<SNode,Connection>(){
        public Mapper<? extends SNode,? extends Connection> createMapper(        SNode node){
          return ((ConnectorCell)getDirectChildCell(node)).createMapper();
        }
      }
));
      configuration.add(Synchronizers.forProperty(myIsShowingDragFeedBack,new WritableProperty<Boolean>(){
        public void set(        Boolean showDragFeedBack){
          if (showDragFeedBack) {
            getTarget().connections.add(myDragConnection);
          }
 else {
            getTarget().connections.remove(myDragConnection);
          }
        }
      }
));
    }
  }
;
}
