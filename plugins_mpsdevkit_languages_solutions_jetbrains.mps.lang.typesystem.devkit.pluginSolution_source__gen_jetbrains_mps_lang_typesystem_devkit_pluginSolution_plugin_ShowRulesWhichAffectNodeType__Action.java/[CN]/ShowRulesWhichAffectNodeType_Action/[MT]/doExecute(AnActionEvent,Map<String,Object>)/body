{
  try {
    final Wrappers._T<SearchQuery> query=new Wrappers._T<SearchQuery>();
    final Wrappers._T<IResultProvider> provider=new Wrappers._T<IResultProvider>();
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        SearchScope scope=((AbstractModule)SNodeOperations.getModel(((SNode)MapSequence.fromMap(_params).get("node"))).getModule()).getScope();
        query.value=new SearchQuery(((SNode)MapSequence.fromMap(_params).get("node")),scope);
        provider.value=FindUtils.makeProvider(new AffectingRulesFinder());
      }
    }
);
    ((IOperationContext)MapSequence.fromMap(_params).get("operationContext")).getComponent(UsagesViewTool.class).findUsages(provider.value,query.value,false,true,false,"no rules found");
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Priority.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "ShowRulesWhichAffectNodeType",t);
    }
  }
}
