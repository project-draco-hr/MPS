{
  TemplateContext applyContext=myArguments.length == 0 ? context : context.subContext(getArgumentsAsMap());
  if (myTemplateNode.getConcept().isSubConceptOf(SConceptRepository.getInstance().getConcept(RuleUtil.concept_TemplateDeclaration))) {
    TemplateContainer tc=new TemplateContainer(new TemplateProcessor(environment),myTemplateNode);
    if (!tc.initialize(context,null)) {
      environment.getGenerator().showErrorMessage(context.getInput(),myTemplateNode,"error processing template declaration");
      return null;
    }
    final SNodePointer templateNodeRef=new SNodePointer(myTemplateNode);
    environment.getTracer().pushTemplateNode(templateNodeRef);
    try {
      return tc.applyFailFast();
    }
  finally {
      environment.getTracer().closeTemplateNode(templateNodeRef);
    }
  }
 else {
    return new TemplateProcessor(environment).apply(null,myTemplateNode,applyContext);
  }
}
