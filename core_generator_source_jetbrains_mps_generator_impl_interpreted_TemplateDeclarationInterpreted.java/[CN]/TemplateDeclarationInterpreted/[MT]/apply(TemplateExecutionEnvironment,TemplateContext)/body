{
  TemplateContext applyContext=new DefaultTemplateContext(context.getEnvironment(),context.getInput(),null);
  if (myArguments.length > 0) {
    applyContext=applyContext.subContext(getArgumentsAsMap());
  }
  if (myTemplateNode.getConcept().isSubConceptOf(SConceptRepository.getInstance().getConcept(RuleUtil.concept_TemplateDeclaration))) {
    TemplateContainer tc=new TemplateContainer(myTemplateNode);
    tc.initialize();
    final SNodePointer templateNodeRef=new SNodePointer(myTemplateNode);
    environment.getTracer().pushTemplateNode(templateNodeRef);
    try {
      return tc.apply(context);
    }
  finally {
      environment.getTracer().closeTemplateNode(templateNodeRef);
    }
  }
 else {
    return environment.getTemplateProcessor().apply(myTemplateNode,applyContext);
  }
}
