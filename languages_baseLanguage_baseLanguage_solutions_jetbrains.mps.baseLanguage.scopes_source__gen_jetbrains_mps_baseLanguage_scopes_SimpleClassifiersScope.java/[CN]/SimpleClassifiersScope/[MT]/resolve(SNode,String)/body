{
  StringTokenizer tokenizer=new StringTokenizer(refText,".");
  if (!(tokenizer.hasMoreTokens())) {
    return null;
  }
  String firstComponent=tokenizer.nextToken();
  if (!(SNodeOperations.isInstanceOf(myClassifier,"jetbrains.mps.baseLanguage.structure.AnonymousClass"))) {
    if (firstComponent.equals(SPropertyOperations.getString(myClassifier,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")))) {
      return ClassifierResolveUtils.construct(myClassifier,tokenizer);
    }
  }
  for (  SNode nestedClas : Sequence.fromIterable(ClassifierResolveUtils.getImmediateNestedClassifiers(myClassifier))) {
    ClassifierResolveUtils.getImmediateNestedClassifiers(myClassifier);
    if (firstComponent.equals(SPropertyOperations.getString(nestedClas,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")))) {
      return ClassifierResolveUtils.construct(myClassifier,tokenizer);
    }
  }
  if (myGoUpHieracrhy) {
    for (    SNode ancestor : Sequence.fromIterable(ClassifierResolveUtils.getAncestors(myClassifier))) {
      for (      SNode nested : Sequence.fromIterable(ClassifierResolveUtils.getImmediateNestedClassifiers(ancestor))) {
        if (firstComponent.equals(SPropertyOperations.getString(nested,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")))) {
          return ClassifierResolveUtils.construct(nested,tokenizer);
        }
      }
    }
  }
  return null;
}
