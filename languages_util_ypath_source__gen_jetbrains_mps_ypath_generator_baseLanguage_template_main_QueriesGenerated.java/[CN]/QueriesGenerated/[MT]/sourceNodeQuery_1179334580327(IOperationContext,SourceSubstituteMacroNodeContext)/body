{
  SNode tpoe=SNodeOperations.getAncestor(_context.getNode(),"jetbrains.mps.ypath.structure.TreePathOperationExpression",false,false);
  SNode tpae=ListSequence.<SNode>fromList(SNodeOperations.getDescendants(tpoe,null,false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.ypath.structure.TreePathAdapterExpression");
    }
  }
).first();
  return SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(tpae,"treepathAspect",false),"treePathType",true),"nodeType",true);
}
