{
  SNode project=SNodeOperations.getNodeAncestor(thisNode,MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,"jetbrains.mps.build.structure.BuildProject"),false,false);
  ConcurrentMap<SNode,String> map=GenerationUtil.<SNode,String>getTransientMap(project,genContext,"handlerOutputPath");
  String outpath=map.get(thisNode);
  if (outpath != null) {
    return outpath;
  }
  String name="default";
  SNode copyNode=SNodeOperations.as(SNodeOperations.getParent(thisNode),MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x7f76698a394d9ab2L,"jetbrains.mps.build.structure.BuildLayout_CustomCopy"));
  if ((copyNode != null)) {
    name=BuildLayout_CopyProcessor_Behavior.call_filesetName_1330375798101726877(SNodeOperations.asSConcept(SConceptOperations.findConceptDeclaration("jetbrains.mps.build.structure.BuildLayout_CopyProcessor")),SLinkOperations.getTarget(copyNode,MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x7f76698a394d9b91L,0x48d5d03db92339baL,"fileset")));
  }
  outpath=Context.defaultContext(genContext).getTempPath(thisNode,name,"customProcessors",BehaviorReflection.invokeVirtual(String.class,thisNode,"virtual_getTaskName_1330375798060763184",new Object[]{}));
  map.put(thisNode,outpath);
  return outpath;
}
