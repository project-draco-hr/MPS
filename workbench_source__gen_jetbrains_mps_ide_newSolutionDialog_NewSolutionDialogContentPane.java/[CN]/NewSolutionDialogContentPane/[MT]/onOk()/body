{
  if (myThis.getSolutionPath().length() == 0) {
    myThis.getDialog().setErrorText("Enter solution directory");
    return;
  }
  if (myThis.getSolutionName().length() == 0) {
    myThis.getDialog().setErrorText("Enter solution name");
    return;
  }
  if (MPSModuleRepository.getInstance().getModuleByUID(myThis.getSolutionName()) != null) {
    myThis.getDialog().setErrorText("Duplicate solution name");
    return;
  }
  String descriptorPath=myThis.getSolutionPath() + File.separator + myThis.getSolutionName()+ MPSExtentions.DOT_SOLUTION;
  final File file=new File(descriptorPath);
  File dir=file.getParentFile();
  String message=NewModuleCheckUtil.checkModuleDirectory(dir,MPSExtentions.DOT_SOLUTION,"Solution");
  if (message != null) {
    myThis.getDialog().setErrorText(message);
    return;
  }
  if (file == null) {
    myThis.getDialog().setErrorText("Can't create " + file);
    return;
  }
  myThis.getDialog().dispose();
  ModelAccess.instance().runWriteActionWithProgressSynchronously(new Progressive(){
    public void run(    ProgressIndicator indicator){
      indicator.setIndeterminate(true);
      myThis.setResult(myThis.createNewSolution(FileSystem.getInstance().getFileByPath(file.getAbsolutePath())));
    }
  }
,"Creating",false,myThis.getProject().getProject());
}
