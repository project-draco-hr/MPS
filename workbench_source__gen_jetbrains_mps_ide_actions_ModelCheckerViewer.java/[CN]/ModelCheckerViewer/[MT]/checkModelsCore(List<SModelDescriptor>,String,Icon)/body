{
  this.saveRecheckRunnable(new Runnable(){
    public void run(){
      ModelCheckerViewer.this.checkModelsCore(modelDescriptors,taskTargetTitle,taskIcon);
    }
  }
);
  if (!(this.myAlreadyCheckedSomething)) {
    IResultProvider resultProvider=FindUtils.makeProvider(new ModelCheckerIssueFinder());
    SearchQuery searchQuery=new SearchQuery(new ModelsHolder(modelDescriptors,this.myOperationContext),ModelCheckerViewer.this.myProject.getScope());
    ModelCheckerViewer.this.myUsagesView.setRunOptions(resultProvider,searchQuery,new UsagesView.ButtonConfiguration(false,false,true));
  }
  this.myAlreadyCheckedSomething=true;
  ProgressManager.getInstance().run(new Task.Modal(this.myProject.getComponent(Project.class),"Checking " + taskTargetTitle,true){
    public void run(    @NotNull ProgressIndicator indicator){
      ModelCheckerViewer.this.myUsagesView.run(indicator);
    }
  }
);
  this.setTabProperties(taskTargetTitle,taskIcon);
}
