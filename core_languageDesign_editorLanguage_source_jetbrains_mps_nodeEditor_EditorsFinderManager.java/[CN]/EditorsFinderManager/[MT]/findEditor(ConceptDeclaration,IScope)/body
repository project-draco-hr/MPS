{
  Language language=SModelUtil_new.getDeclaringLanguage(nodeConcept,scope);
  if (language == null) {
    return null;
  }
  SModelDescriptor editorModelDescriptor=language.getEditorModelDescriptor();
  String editorUID=null;
  if (editorModelDescriptor != null) {
    editorUID=editorModelDescriptor.getModelUID().toString();
  }
  try {
    String editorClassName=editorUID + "." + nodeConcept.getName()+ "_Editor";
    Class editorClass=language.getClass(editorClassName);
    if (editorClass == null) {
      return null;
    }
    Constructor cons=editorClass.getConstructor();
    cons.setAccessible(true);
    return (INodeEditor)cons.newInstance();
  }
 catch (  InstantiationException e) {
    LOG.error(e);
  }
catch (  IllegalAccessException e) {
    LOG.error(e);
  }
catch (  Exception e) {
    LOG.error(e);
  }
  return null;
}
