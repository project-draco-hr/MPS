{
  IScope scope=context.getOperationContext().getScope();
  AbstractConceptDeclaration abstractConcept=(AbstractConceptDeclaration)BaseAdapter.fromNode(BaseAdapter.fromAdapter(nodeToEdit.getConceptDeclarationAdapter()));
  if (abstractConcept == null) {
    LOG.errorWithTrace("error loading editor for node " + nodeToEdit.getDebugText() + "\n"+ "couldn't find node concept in scope "+ scope);
    return null;
  }
  if (abstractConcept instanceof InterfaceConceptDeclaration) {
    return new DefaultInterfaceEditor();
  }
  ConceptDeclaration concept=(ConceptDeclaration)abstractConcept;
  while (concept != null) {
    INodeEditor nodeEditor=findEditor(concept,scope);
    if (nodeEditor != null) {
      return nodeEditor;
    }
    concept=concept.getExtends();
  }
  LOG.error("Couldn't load editor for node " + nodeToEdit.getDebugText());
  return null;
}
