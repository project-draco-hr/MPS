{
  String attributeRole=propertyMacro.getRole_();
  String propertyName=AttributesRolesUtil.getPropertyNameFromPropertyAttributeRole(attributeRole);
  String propertyValue;
  PropertyMacro_GetPropertyValue function=propertyMacro.getPropertyValueFunction();
  if (function != null) {
    String templateValue=templateNode.getProperty(propertyName);
    String methodName=TemplateFunctionMethodName.propertyMacro_GetPropertyValue(function.getNode());
    try {
      Object macroValue=QueryMethodGenerated.invoke(methodName,generator.getGeneratorSessionContext(),new PropertyMacroContext(inputNode,templateValue,propertyMacro.getNode(),generator),propertyMacro.getModel());
      propertyValue=macroValue == null ? null : String.valueOf(macroValue);
    }
 catch (    Exception e) {
      generator.showErrorMessage(inputNode,templateNode,BaseAdapter.fromAdapter(propertyMacro),"couldn't evaluate property macro");
      LOG.error(e);
      return;
    }
  }
 else {
    Object[] args=new Object[]{inputNode,templateNode,null,generator};
    propertyValue=(String)QueryMethod.invoke("propertyMacro_" + propertyMacro.getAspectMethodName(),args,propertyMacro.getModel());
  }
  outputNode.setProperty(propertyName,propertyValue);
}
