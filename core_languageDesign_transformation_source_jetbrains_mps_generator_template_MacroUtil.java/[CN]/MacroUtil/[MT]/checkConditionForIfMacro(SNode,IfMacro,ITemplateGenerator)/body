{
  IfMacro_Condition function=ifMacro.getConditionFunction();
  long startTime=System.currentTimeMillis();
  Boolean res=false;
  if (function != null) {
    String methodName=TemplateFunctionMethodName.ifMacro_Condition(function.getNode());
    try {
      res=(Boolean)QueryMethodGenerated.invoke(methodName,generator.getGeneratorSessionContext(),new IfMacroContext(inputNode,generator.getInputModel(),generator),ifMacro.getModel());
      return res;
    }
 catch (    Exception e) {
      generator.showErrorMessage(inputNode,null,BaseAdapter.fromAdapter(ifMacro),"couldn't evaluate if-macro condition");
      LOG.error(e);
      return false;
    }
 finally {
      Statistics.getStatistic(Statistics.TPL).add(ifMacro.getModel(),methodName,startTime,res);
    }
  }
  String conditionAspectId=ifMacro.getConditionAspectId();
  if (conditionAspectId != null) {
    String methodName="semanticNodeCondition_" + conditionAspectId;
    Object[] args=new Object[]{inputNode};
    try {
      res=(Boolean)QueryMethod.invokeWithOptionalArg(methodName,args,ifMacro.getModel(),generator.getGeneratorSessionContext());
      return res;
    }
 catch (    Exception e) {
      generator.showErrorMessage(inputNode,null,BaseAdapter.fromAdapter(ifMacro),"couldn't evaluate if-macro condition: " + NameUtil.shortNameFromLongName(e.getClass().getName()) + " : "+ e.getMessage());
      LOG.error(e);
      return false;
    }
 finally {
      Statistics.getStatistic(Statistics.TPL).add(ifMacro.getModel(),methodName,startTime,res);
    }
  }
  throw new GenerationFailedException(new GenerationFailueInfo("couldn't evaluate if-macro condition",inputNode,BaseAdapter.fromAdapter(ifMacro),null,generator.getGeneratorSessionContext()));
}
