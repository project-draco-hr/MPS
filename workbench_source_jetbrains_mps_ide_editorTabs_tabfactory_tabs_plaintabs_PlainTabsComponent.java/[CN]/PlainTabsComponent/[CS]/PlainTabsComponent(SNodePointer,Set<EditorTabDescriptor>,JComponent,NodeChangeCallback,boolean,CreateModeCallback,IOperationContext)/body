{
  super(baseNode,possibleTabs,editor,callback,showGrayed,createModeCallback,operationContext);
  DataContext dataContext=DataManager.getInstance().getDataContext(myEditor);
  Project project=PlatformDataKeys.PROJECT.getData(dataContext);
  PrevNextActionsDescriptor navigation=new PrevNextActionsDescriptor(IdeActions.ACTION_NEXT_EDITOR_TAB,IdeActions.ACTION_PREVIOUS_EDITOR_TAB);
  myJbTabs=new AsJBTabs(project,SwingConstants.BOTTOM,navigation,myJbTabsDisposable);
  decorate(myJbTabs.getTabs());
  getComponent().add(myJbTabs.getTabs().getComponent(),BorderLayout.CENTER);
  updateTabs();
  myJbTabs.addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          int index=myJbTabs.getSelectedIndex();
          PlainEditorTab tab=myRealTabs.get(index);
          SNodePointer np=tab.getNode();
          SNode node=np == null ? null : np.getNode();
          if (node != null) {
            myLastEmptyTab=null;
            onNodeChange(node);
          }
 else {
            myLastEmptyTab=tab.getTab();
            enterCreateMode(myLastEmptyTab);
          }
        }
      }
);
    }
  }
);
}
