{
  List<MPSTreeNode> nodes=new ArrayList<MPSTreeNode>();
  for (int i=0; i < node.getChildCount(); i++) {
    MPSTreeNode child=(MPSTreeNode)node.getChildAt(i);
    if (child instanceof NamespaceNode) {
      sortTree((NamespaceNode)child);
    }
    nodes.add(child);
  }
  Collections.sort(nodes,new Comparator<MPSTreeNode>(){
    public int compare(    MPSTreeNode o1,    MPSTreeNode o2){
      if (o1 instanceof NamespaceNode && !(o2 instanceof NamespaceNode))       return -1;
      if (o2 instanceof NamespaceNode && !(o1 instanceof NamespaceNode))       return 1;
      return o1.toString().compareTo(o2.toString());
    }
  }
);
  node.removeAllChildren();
  for (  MPSTreeNode n : nodes) {
    node.add(n);
  }
}
