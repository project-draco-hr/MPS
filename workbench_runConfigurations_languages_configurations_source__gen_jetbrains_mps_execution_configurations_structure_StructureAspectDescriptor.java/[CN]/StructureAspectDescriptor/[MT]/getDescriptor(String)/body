{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.execution.configurations.structure.ComplexRunConfigurationExecutor","jetbrains.mps.execution.configurations.structure.RunConfigurationExecutor",false,new String[]{"jetbrains.mps.execution.configurations.structure.RunConfigurationExecutor"},new String[]{"configurationName"},new String[]{});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.execution.configurations.structure.ConfigurationFromExecutorReference","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.execution.configurations.structure.DebuggerSettings_Parameter","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.execution.configurations.structure.ExecuteConfiguration_Function","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction","jetbrains.mps.baseLanguage.structure.ILocalVariableElementList"},new String[]{},new String[]{});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.execution.configurations.structure.GetDebuggerSettings_Function","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.execution.configurations.structure.Project_Parameter","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.execution.configurations.structure.RunConfiguration","jetbrains.mps.execution.settings.structure.PersistentConfiguration",false,new String[]{"jetbrains.mps.execution.settings.structure.PersistentConfiguration"},new String[]{},new String[]{"configurationType"});
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.execution.configurations.structure.RunConfigurationExecutor","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.execution.common.structure.IGeneratedToClass","jetbrains.mps.execution.settings.structure.PersistentConfigurationAssistent"},new String[]{"canRun"},new String[]{"runConfiguration"});
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.execution.configurations.structure.RunConfigurationKind","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.execution.common.structure.IGeneratedToClass"},new String[]{},new String[]{});
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.execution.configurations.structure.StartProcessHandlerStatement","jetbrains.mps.execution.configurations.structure.StartStatement",false,new String[]{"jetbrains.mps.execution.configurations.structure.StartStatement"},new String[]{},new String[]{});
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.execution.configurations.structure.StartStatement","jetbrains.mps.baseLanguage.structure.Statement",false,new String[]{"jetbrains.mps.baseLanguage.structure.Statement"},new String[]{},new String[]{});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
