{
{
    this.getNode().checkConfiguration();
    final Wrappers._boolean hasMainMethod=new Wrappers._boolean(false);
    MPSProject mpsProject=ProjectHelper.fromIdeaProject(this.getProject());
    mpsProject.getModelAccess().runReadAction(new Runnable(){
      public void run(){
        if (SNodeOperations.isInstanceOf(Java_Configuration.this.getNode().getNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"))) {
          hasMainMethod.value=(((SNode)BHReflection.invoke(SNodeOperations.cast(Java_Configuration.this.getNode().getNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")),SMethodTrimmedId.create("getMainMethod",MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"hEwIClG"))) == null);
        }
      }
    }
);
    if (hasMainMethod.value) {
      throw new RuntimeConfigurationError("Selected class does not have main method.");
    }
  }
}
