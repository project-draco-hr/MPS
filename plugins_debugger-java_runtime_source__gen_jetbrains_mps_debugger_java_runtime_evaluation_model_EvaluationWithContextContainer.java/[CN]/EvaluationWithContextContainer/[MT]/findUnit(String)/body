{
  SModel stub=findStubForFqName(modelFqNameFromUnitName(unitName));
  if (stub != null) {
    SModel model=stub;
    SNode node=ListSequence.fromList(jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations.nodes(model,MetaAdapterFactory.getInterfaceConcept(new UUID(-7066981744759912873l,-4622583950651520061l),5067982036267369892l,"jetbrains.mps.lang.traceable.structure.UnitConcept"))).findFirst(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return eq_v5yv3u_a0a0a0a0a0a0b0d0o(BehaviorReflection.invokeVirtual(String.class,it,"virtual_getUnitName_5067982036267369911",new Object[]{}),unitName) && SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,"jetbrains.mps.baseLanguage.structure.Classifier"));
      }
    }
);
    if (node != null) {
      return node;
    }
  }
  FindUsagesFacade findUsages=FindUsagesFacade.getInstance();
  SAbstractConcept concept=SConceptRepository.getInstance().getConcept("jetbrains.mps.lang.traceable.structure.UnitConcept");
  Set<SNode> instances=findUsages.findInstances(new ModelsScope(getCandidateNonStubModels(unitName)),Collections.singleton(concept),false,new EmptyProgressMonitor());
  return SNodeOperations.cast(SetSequence.fromSet(instances).findFirst(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(((SNode)it),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,"jetbrains.mps.baseLanguage.structure.Classifier")) && BehaviorReflection.invokeVirtual(String.class,SNodeOperations.cast(it,MetaAdapterFactory.getInterfaceConcept(new UUID(-7066981744759912873l,-4622583950651520061l),5067982036267369892l,"jetbrains.mps.lang.traceable.structure.UnitConcept")),"virtual_getUnitName_5067982036267369911",new Object[]{}).equals(unitName);
    }
  }
),MetaAdapterFactory.getInterfaceConcept(new UUID(-7066981744759912873l,-4622583950651520061l),5067982036267369892l,"jetbrains.mps.lang.traceable.structure.UnitConcept"));
}
