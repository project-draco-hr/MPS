{
  List<SNode> order=getOrder(dotExpression,ListSequence.<SNode>fromList(new ArrayList<SNode>()));
  final Wrappers._T<SNode> normalizedDotExpression=new Wrappers._T<SNode>(SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.DotExpression",null));
  final Wrappers._boolean firstTime=new Wrappers._boolean(true);
  ListSequence.<SNode>fromList(order).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode node){
      if (firstTime.value) {
        SLinkOperations.setTarget(normalizedDotExpression.value,"operand",SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.Expression"),true);
        firstTime.value=false;
      }
 else {
        SNode newDotExpression=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.DotExpression",null);
        SLinkOperations.setTarget(newDotExpression,"operand",normalizedDotExpression.value,true);
        SLinkOperations.setTarget(normalizedDotExpression.value,"operation",SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.IOperation"),true);
        normalizedDotExpression.value=newDotExpression;
      }
    }
  }
);
  SNodeOperations.replaceWithAnother(dotExpression,SLinkOperations.getTarget(normalizedDotExpression.value,"operand",true));
}
