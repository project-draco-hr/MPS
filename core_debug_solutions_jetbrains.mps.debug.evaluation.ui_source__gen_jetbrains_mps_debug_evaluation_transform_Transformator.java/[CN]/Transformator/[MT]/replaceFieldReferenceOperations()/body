{
  boolean finished=true;
  for (  SNode fieldReferenceOperation : ListSequence.fromList(SNodeOperations.getDescendants(myWhatToEvaluate,"jetbrains.mps.baseLanguage.structure.FieldReferenceOperation",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return TransformationUtil.isUnprocessed(it);
    }
  }
)) {
    if (TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(SNodeOperations.getAncestor(fieldReferenceOperation,"jetbrains.mps.baseLanguage.structure.DotExpression",false,false),"operand",true)),new Transformator.QuotationClass_rxfadt_a1a0a0b0u().createNode())) {
      TransformationUtil.replaceFieldReference(SNodeOperations.getParent(fieldReferenceOperation),SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(fieldReferenceOperation),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),SPropertyOperations.getString(SLinkOperations.getTarget(fieldReferenceOperation,"fieldDeclaration",false),"name"),SLinkOperations.getTarget(SLinkOperations.getTarget(fieldReferenceOperation,"fieldDeclaration",false),"type",true));
      finished=false;
    }
  }
  return finished;
}
