{
  super(null);
  setNodeIdentifier("KeyMaps");
  List<Pair<EditorCellKeyMapAction,EditorCellKeyMap.ActionKey>> list=new ArrayList<Pair<EditorCellKeyMapAction,EditorCellKeyMap.ActionKey>>(keyMap.getAllActionsAndKeys());
  Collections.sort(list,new Comparator<Pair<EditorCellKeyMapAction,EditorCellKeyMap.ActionKey>>(){
    public int compare(    Pair<EditorCellKeyMapAction,EditorCellKeyMap.ActionKey> o1,    Pair<EditorCellKeyMapAction,EditorCellKeyMap.ActionKey> o2){
      return o1.o2.toString().compareTo(o2.o2.toString());
    }
  }
);
  for (  Pair<EditorCellKeyMapAction,EditorCellKeyMap.ActionKey> key : list) {
    String text=key.o2.toString();
    if (key.o1.getDescriptionText() != null && key.o1.getDescriptionText().length() != 0) {
      text+=" (" + key.o1.getDescriptionText() + ")";
    }
    add(new TextTreeNode(text){
{
        setIcon(CellExplorer.CellActionKey);
      }
      public boolean isLeaf(){
        return true;
      }
    }
);
    setIcon(CellExplorer.CellKeyMap);
    setNodeIdentifier("Keymap");
  }
}
