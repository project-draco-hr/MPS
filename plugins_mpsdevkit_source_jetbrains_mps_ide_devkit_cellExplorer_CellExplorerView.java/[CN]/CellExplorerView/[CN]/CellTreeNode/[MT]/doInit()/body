{
  removeAllChildren();
  if (myCell.getSNode() != null) {
    final SNode node=myCell.getSNode();
    String name=node.getName();
    name=name != null ? name : "<no name>";
    String text="<html><b>Node</b> " + StringUtil.escapeXml(name) + " ("+ StringUtil.escapeXml(node.getConcept().getName())+ ")";
    add(new TextTreeNode(text){
{
        setIcon(IconManager.getIconFor(node));
        if (myCell instanceof EditorCell_Collection) {
          CellLayout layout=((EditorCell_Collection)myCell).getCellLayout();
          setAdditionalText(layout.toString());
        }
      }
      @Override public void doubleClick(){
        CellTreeNode.this.doubleClick();
      }
      @Override public boolean isLeaf(){
        return true;
      }
    }
);
    if (myCell.getKeyMap() != null) {
      add(new KeyMapTreeNode(myCell.getKeyMap()));
    }
    if (myCell.getAvailableActions().size() > 0) {
      add(new CellActionsTreeNode(myCell,getOperationContext()));
    }
  }
 else {
    add(new TextTreeNode("No Node"));
  }
  if (myCell instanceof EditorCell_Collection) {
    EditorCell_Collection cell=(EditorCell_Collection)myCell;
    for (    jetbrains.mps.openapi.editor.cells.EditorCell child : cell) {
      add(new CellTreeNode(child));
    }
    myInitialized=true;
  }
}
