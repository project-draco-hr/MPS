{
  try {
    final Wrappers._T<String> title=new Wrappers._T<String>();
    final Wrappers._T<MemberContainerStructureModel> model=new Wrappers._T<MemberContainerStructureModel>();
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        SNode container=SNodeOperations.getAncestor(((SNode)MapSequence.fromMap(_params).get("node")),"jetbrains.mps.baseLanguage.structure.IMemberContainer",true,false);
        title.value=container.getPresentation();
        model.value=new MemberContainerStructureModel(container);
      }
    }
);
    Disposable auxDisposable=new Disposable(){
      @Override public void dispose(){
      }
    }
;
    FileStructurePopup popup=new FileStructurePopup(model.value,((Project)MapSequence.fromMap(_params).get("project")),auxDisposable,false);
    popup.setTitle(title.value);
    popup.show();
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Priority.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "ShowMembers",t);
    }
  }
}
