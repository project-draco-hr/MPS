{
  try {
    final Wrappers._T<List<SNode>> members=new Wrappers._T<List<SNode>>();
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        members.value=((List<SNode>)BehaviorManager.getInstance().invoke(Object.class,SNodeOperations.getAncestor(((SNode)MapSequence.fromMap(_params).get("node")),"jetbrains.mps.baseLanguage.structure.IMemberContainer",true,false),"virtual_getMembers_1213877531970",new Class[]{SNode.class}));
      }
    }
);
    NodeChooserDialog nodeChooserDialog=new NodeChooserDialog(((Project)MapSequence.fromMap(_params).get("projct")),members.value);
    nodeChooserDialog.show();
    SNode snode=nodeChooserDialog.getResult();
    if (snode == null) {
      return;
    }
    ((EditorComponent)MapSequence.fromMap(_params).get("editorComponent")).selectNode(snode);
  }
 catch (  Throwable t) {
    if (log.isErrorEnabled()) {
      log.error("User's action execute method failed. Action:" + "ShowMembers",t);
    }
  }
}
