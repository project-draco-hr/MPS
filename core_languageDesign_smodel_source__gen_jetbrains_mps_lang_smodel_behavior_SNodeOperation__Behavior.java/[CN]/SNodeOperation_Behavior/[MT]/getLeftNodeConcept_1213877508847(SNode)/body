{
  SNode operand=SLinkOperations.getTarget(parent,"operand",true);
  SNode result=SModelLanguageUtil.getConcept(operand);
  if ((result != null)) {
    return result;
  }
  SNode operandType=TypeChecker.getInstance().getTypeOf(operand);
  if (SNodeOperations.isInstanceOf(operandType,"jetbrains.mps.lang.smodel.structure._LinkAccessT")) {
    return SLinkOperations.getTarget(SNodeOperations.cast(operandType,"jetbrains.mps.lang.smodel.structure._LinkAccessT"),"targetConcept",false);
  }
 else {
    SNode nodeType=TypeChecker.getInstance().getRuntimeSupport().coerce_(operandType,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.lang.smodel.structure.SNodeType"),false);
    if (nodeType != null) {
      return SLinkOperations.getTarget(nodeType,"concept",false);
    }
  }
  return SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.core.structure.BaseConcept");
}
