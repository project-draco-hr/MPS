{
  if ("jetbrains.mps.lang.smodel.structure.SNodeType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.SNodeType"));
  }
  if ("jetbrains.mps.lang.smodel.structure.SPropertyAccess".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new SPropertyAccess_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.SLinkAccess".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new SLinkAccess_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.SLinkListAccess".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new SLinkListAccess_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.SNodeOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.SNodeOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Property_SetOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Property_SetOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.EnumMemberReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EnumMemberReference_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.Link_SetNewChildOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Link_SetNewChildOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.LinkList_AddNewChildOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.LinkList_AddNewChildOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_GetParentOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_GetParentOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_IsInstanceOfOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_IsInstanceOfOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_InsertNewNextSiblingOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_InsertNewNextSiblingOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_ReplaceWithNewOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_ReplaceWithNewOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.LinkList_AddChildOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.LinkList_AddChildOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.LinkList_InsertChildFirstOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.LinkList_InsertChildFirstOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Link_DeleteChildOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Link_DeleteChildOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_ReplaceWithAnotherOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_ReplaceWithAnotherOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_DeleteOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_DeleteOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.SNodeTypeCastExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.SNodeTypeCastExpression"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Link_SetTargetOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Link_SetTargetOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_InsertNewPrevSiblingOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_InsertNewPrevSiblingOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_InsertNextSiblingOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_InsertNextSiblingOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_InsertPrevSiblingOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_InsertPrevSiblingOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.SModelType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.SModelType"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_GetModelOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_GetModelOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Model_CreateNewNodeOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Model_CreateNewNodeOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_GetPrevSiblingOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_GetPrevSiblingOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_GetNextSiblingOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_GetNextSiblingOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.AbstractOperationParameter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.AbstractOperationParameter"));
  }
  if ("jetbrains.mps.lang.smodel.structure.OperationParm_Inclusion".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.OperationParm_Inclusion"));
  }
  if ("jetbrains.mps.lang.smodel.structure.OperationParm_Root".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.OperationParm_Root"));
  }
  if ("jetbrains.mps.lang.smodel.structure.OperationParm_Concept".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.OperationParm_Concept"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_CopyOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_CopyOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_IsRoleOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Node_IsRoleOperation_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.SNodeListType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.SNodeListType"));
  }
  if ("jetbrains.mps.lang.smodel.structure.SemanticDowncastExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.SemanticDowncastExpression"));
  }
  if ("jetbrains.mps.lang.smodel.structure.LinkList_GetCountOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.LinkList_GetCountOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.SNodeListCreator".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.SNodeListCreator"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_GetNextSiblingsOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_GetNextSiblingsOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_GetPrevSiblingsOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_GetPrevSiblingsOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_GetAllSiblingsOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_GetAllSiblingsOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new SConceptPropertyAccess_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.Property_HasValue_Enum".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Property_HasValue_Enum"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Property_HasValue_Simple".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Property_HasValue_Simple"));
  }
  if ("jetbrains.mps.lang.smodel.structure.OperationParm_ConceptList".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.OperationParm_ConceptList"));
  }
  if ("jetbrains.mps.lang.smodel.structure.ConceptReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.ConceptReference"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Model_CreateNewRootNodeOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Model_CreateNewRootNodeOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_GetAdapterOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_GetAdapterOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_GetDescendantsOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_GetDescendantsOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_GetContainingRootOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_GetContainingRootOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Model_RootsOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Model_RootsOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Model_NodesOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Model_NodesOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_GetAncestorOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_GetAncestorOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_GetChildrenOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_GetChildrenOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_IsNullOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_IsNullOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_IsNotNullOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_IsNotNullOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.LinkList_AddAllOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.LinkList_AddAllOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_GetConceptOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_GetConceptOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Concept_IsExactlyOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Concept_IsExactlyOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.SConceptType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.SConceptType"));
  }
  if ("jetbrains.mps.lang.smodel.structure.ConceptRefExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.ConceptRefExpression"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_GetAncestorsOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_GetAncestorsOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.SConceptLinkAccess".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new SConceptLinkAccess_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.Model_RootsIncludingImportedOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Model_RootsIncludingImportedOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.RefConcept_Reference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.RefConcept_Reference"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_GetIndexInParentOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_GetIndexInParentOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Concept_GetDirectSuperConcepts".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Concept_GetDirectSuperConcepts"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Node_ConceptMethodCall_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.Concept_IsSuperConceptOfOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Concept_IsSuperConceptOfOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Concept_IsSubConceptOfOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Concept_IsSubConceptOfOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Concept_GetAllSuperConcepts".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Concept_GetAllSuperConcepts"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Concept_GetHierarchy".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Concept_GetHierarchy"));
  }
  if ("jetbrains.mps.lang.smodel.structure.SNodeCreator".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.SNodeCreator"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Concept_NewInstance".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Concept_NewInstance"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Concept_GetAllSubConcepts".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Concept_GetAllSubConcepts"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Concept_FindInstances".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Concept_FindInstances"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Model_NodesIncludingImportedOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Model_NodesIncludingImportedOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.IAttributeAccessQualifier".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.IAttributeAccessQualifier"));
  }
  if ("jetbrains.mps.lang.smodel.structure.NodeAttributeAccessQualifier".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new NodeAttributeAccessQualifier_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.PropertyAttributeAccessQualifier".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new PropertyAttributeAccessQualifier_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.IPropertyAccessQualifier".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.IPropertyAccessQualifier"));
  }
  if ("jetbrains.mps.lang.smodel.structure.PoundExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.PoundExpression"));
  }
  if ("jetbrains.mps.lang.smodel.structure.PropertyRefQualifier".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new PropertyRefQualifier_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.ILinkAccessQualifier".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.ILinkAccessQualifier"));
  }
  if ("jetbrains.mps.lang.smodel.structure.LinkAttributeAccessQualifier".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new LinkAttributeAccessQualifier_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.LinkRefQualifier".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new LinkRefQualifier_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure._LinkAccessT".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new _LinkAccessT_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.AllAttributesQualifier".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.AllAttributesQualifier"));
  }
  if ("jetbrains.mps.lang.smodel.structure.AttributeAccessOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.AttributeAccessOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_IsAttributeOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_IsAttributeOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.StaticConceptMethodCall".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new StaticConceptMethodCall_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.Model_AddRootOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Model_AddRootOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.IRefConceptArg".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.IRefConceptArg"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Model_GetLongNameOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Model_GetLongNameOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.LinkList_RemoveAllChildrenOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.LinkList_RemoveAllChildrenOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Property_RemoveOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Property_RemoveOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.NodeRefExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new NodeRefExpression_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.SearchScopeType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.SearchScopeType"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_GetReferentSearchScopeOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Node_GetReferentSearchScopeOperation_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.SearchScope_ContainsOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new SearchScope_ContainsOperation_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.LinkRefExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new LinkRefExpression_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.EqualsStructurallyExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.EqualsStructurallyExpression"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_DetachOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_DetachOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.SEnumMemberType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.SEnumMemberType"));
  }
  if ("jetbrains.mps.lang.smodel.structure.EnumMember_ValueOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.EnumMember_ValueOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.EnumMember_NameOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.EnumMember_NameOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.SEnumOperationInvocation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new SEnumOperationInvocation_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.SEnumOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new SEnumOperation_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.SEnum_MemberForNameOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.SEnum_MemberForNameOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.SEnum_MemberForValueOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.SEnum_MemberForValueOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.SEnum_MemberOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new SEnum_MemberOperation_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.SEnum_MembersOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.SEnum_MembersOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.SEnumMemberOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new SEnumMemberOperation_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.OperationParm_StopConceptList".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.OperationParm_StopConceptList"));
  }
  if ("jetbrains.mps.lang.smodel.structure.ConceptProperty_SetOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.ConceptProperty_SetOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.ILinkAccess".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.ILinkAccess"));
  }
  if ("jetbrains.mps.lang.smodel.structure.SLinkImplicitSelect".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new SLinkImplicitSelect_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_GetReferencesOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_GetReferencesOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.SReferenceType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.SReferenceType"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Reference_GetTargetOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Reference_GetTargetOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Reference_GetLinkDeclarationOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Reference_GetLinkDeclarationOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.IReferenceOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new IReferenceOperation_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.Reference_GetRoleOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Reference_GetRoleOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_GetContainingLinkOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_GetContainingLinkOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_GetContainingRoleOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_GetContainingRoleOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Node_GetReferenceOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Node_GetReferenceOperation"));
  }
  if ("jetbrains.mps.lang.smodel.structure.ILinkAccessQualifierContainer".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.ILinkAccessQualifierContainer"));
  }
  if ("jetbrains.mps.lang.smodel.structure.OperationParm_LinkQualifier".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.OperationParm_LinkQualifier"));
  }
  if ("jetbrains.mps.lang.smodel.structure.Reference_GetResolveInfo".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Reference_GetResolveInfo"));
  }
  if ("jetbrains.mps.lang.smodel.structure.CheckedModuleReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new CheckedModuleReference_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.OperationParm_SameMetaLevel".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.OperationParm_SameMetaLevel"));
  }
  if ("jetbrains.mps.lang.smodel.structure.ConceptFqNameRefExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.ConceptFqNameRefExpression"));
  }
  if ("jetbrains.mps.lang.smodel.structure.IfInstanceOfStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.IfInstanceOfStatement"));
  }
  if ("jetbrains.mps.lang.smodel.structure.IfInstanceOfVariable".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.IfInstanceOfVariable"));
  }
  if ("jetbrains.mps.lang.smodel.structure.IfInstanceOfVarReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new IfInstanceOfVarReference_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.LinkNameRefExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new LinkNameRefExpression_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.PropertyNameRefExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new PropertyNameRefExpression_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.AttributeAccess".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.AttributeAccess"));
  }
  if ("jetbrains.mps.lang.smodel.structure.AttributeQualifier".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.AttributeQualifier"));
  }
  if ("jetbrains.mps.lang.smodel.structure.NodeAttributeQualifier".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new NodeAttributeQualifier_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.LinkAttributeQualifier".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new LinkAttributeQualifier_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.AllAttributeQualifier".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.AllAttributeQualifier"));
  }
  if ("jetbrains.mps.lang.smodel.structure.PropertyAttributeQualifier".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new PropertyAttributeQualifier_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.ILinkQualifier".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.ILinkQualifier"));
  }
  if ("jetbrains.mps.lang.smodel.structure.IPropertyQualifier".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.IPropertyQualifier"));
  }
  if ("jetbrains.mps.lang.smodel.structure.LinkQualifier".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new LinkQualifier_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.PropertyQualifier".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new PropertyQualifier_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.ConceptPropertyNameRefExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ConceptPropertyNameRefExpression_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.Model_GetModule".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.Model_GetModule"));
  }
  if ("jetbrains.mps.lang.smodel.structure.ModuleReferenceExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ModuleReferenceExpression_Constraints());
  }
  if ("jetbrains.mps.lang.smodel.structure.LanguageReferenceExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.smodel.structure.LanguageReferenceExpression"));
  }
  return null;
}
