{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(0x132aa4d8a3f7441cL,0xa7eb3fce23492c6aL,0x4acc05c8d72ec05fL,0x4acc05c8d72ec061L),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x132aa4d8a3f7441cL,0xa7eb3fce23492c6aL,0x4acc05c8d72ec05fL,0x4acc05c8d72ec061L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          List<SNode> result=new ArrayList<SNode>();
          SNode contextBuilder=SNodeOperations.as(Builder_Behavior.call_getContextBuilder_7057666463730366732(SNodeOperations.asSConcept(MetaAdapterFactory.getConcept(0x132aa4d8a3f7441cL,0xa7eb3fce23492c6aL,0x61f1de4171d2bf0bL,"jetbrains.mps.baseLanguage.builders.structure.Builder").getDeclarationNode()),_context.getEnclosingNode()),MetaAdapterFactory.getConcept(0x132aa4d8a3f7441cL,0xa7eb3fce23492c6aL,0x6524536b2e24c0baL,"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilder"));
          for (SNode dcl=SLinkOperations.getTarget(contextBuilder,MetaAdapterFactory.getReferenceLink(0x132aa4d8a3f7441cL,0xa7eb3fce23492c6aL,0x6524536b2e24c0baL,0x6524536b2e24c0bbL,"declaration")); (dcl != null); dcl=SLinkOperations.getTarget(dcl,MetaAdapterFactory.getReferenceLink(0x132aa4d8a3f7441cL,0xa7eb3fce23492c6aL,0x6524536b2e1a1e38L,0x34f5c07463da7435L,"extends"))) {
            ListSequence.fromList(result).addSequence(ListSequence.fromList(SLinkOperations.getChildren(dcl,MetaAdapterFactory.getContainmentLink(0x132aa4d8a3f7441cL,0xa7eb3fce23492c6aL,0x6524536b2e1a1e38L,0x4acc05c8d729d207L,"property"))));
            for (            SNode builders : ListSequence.fromList(SModelOperations.rootsIncludingImported(_context.getModel(),MetaAdapterFactory.getConcept(0x132aa4d8a3f7441cL,0xa7eb3fce23492c6aL,0x6524536b2e1a1e3bL,"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilders")))) {
              for (              SNode basedecl : ListSequence.fromList(SLinkOperations.getChildren(builders,MetaAdapterFactory.getContainmentLink(0x132aa4d8a3f7441cL,0xa7eb3fce23492c6aL,0x6524536b2e1a1e3bL,0x6524536b2e1a1e3dL,"builder")))) {
                SNode extdecl=SNodeOperations.as(basedecl,MetaAdapterFactory.getConcept(0x132aa4d8a3f7441cL,0xa7eb3fce23492c6aL,0x56cd40dfa78dcaf3L,"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderExtensionDeclaration"));
                if (dcl == SLinkOperations.getTarget(extdecl,MetaAdapterFactory.getReferenceLink(0x132aa4d8a3f7441cL,0xa7eb3fce23492c6aL,0x56cd40dfa78dcaf3L,0x56cd40dfa78dcaf6L,"extended"))) {
                  ListSequence.fromList(result).addSequence(ListSequence.fromList(SLinkOperations.getChildren(extdecl,MetaAdapterFactory.getContainmentLink(0x132aa4d8a3f7441cL,0xa7eb3fce23492c6aL,0x56cd40dfa78dcaf3L,0x56cd40dfa78dcaf5L,"property"))));
                }
              }
            }
          }
          return result;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_60c3dm_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
