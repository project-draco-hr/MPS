{
  SNode input=RulesFunctions_Collections.getInput(op);
  final SNode elementType_typevar_1184850887615=TypeChecker.getInstance().getRuntimeSupport().createNewRuntimeTypesVariable();
{
    SNode _nodeToCheck_1029348928467=input;
    TypeChecker.getInstance().getRuntimeSupport().createLessThanInequation(TypeChecker.getInstance().getRuntimeSupport().typeOf(_nodeToCheck_1029348928467,"jetbrains.mps.baseLanguage.ext.collections.lang.helgins@34_0","1215709899663",true),new QuotationClass_11().createNode(TypeChecker.getInstance().getEquationManager().getRepresentator(elementType_typevar_1184850887615)),_nodeToCheck_1029348928467,null,"jetbrains.mps.baseLanguage.ext.collections.lang.helgins@34_0","1215709899660",false,0);
  }
{
    SNode _nodeToCheck_1029348928467=op;
    TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(_nodeToCheck_1029348928467,"jetbrains.mps.baseLanguage.ext.collections.lang.helgins@34_0","1215709899668",true),new QuotationClass_12().createNode(TypeChecker.getInstance().getEquationManager().getRepresentator(elementType_typevar_1184850887615)),_nodeToCheck_1029348928467,null,"jetbrains.mps.baseLanguage.ext.collections.lang.helgins@34_0","1215709899665");
  }
}
