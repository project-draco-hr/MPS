{
  IWrapper representator=myTypeCheckingContext.getNodeTypesComponent().getHoleWrapperRepresentator(type_);
  if (representator != null) {
    return representator;
  }
  IWrapper type=type_;
  IWrapper parent=getParent(type);
  if (parent != null) {
    final List<IWrapper> path=new ArrayList<IWrapper>(4);
    while (parent != null) {
      path.add(type);
      type=parent;
      parent=getParent(parent);
    }
    if (path.size() > 1) {
      for (      IWrapper typeOnPath : path) {
        setParent(typeOnPath,type);
      }
    }
    if (type instanceof CopiedTypeWrapper) {
      CopiedTypeWrapper copiedTypeWrapper=(CopiedTypeWrapper)type;
      for (      IWrapper typeOnPath : path) {
        if (typeOnPath instanceof VariableWrapper && typeOnPath.equals(copiedTypeWrapper.getRawSourceWrapper())) {
          setEquatedWithSource(copiedTypeWrapper);
          break;
        }
      }
    }
  }
  LatticeUtil.processMeetsAndJoins(type);
  return type;
}
