{
  super.beforeModelRemoved(module,model);
  SModelReference modelRef=model.getReference();
  List<MPSTreeNode> obsoleteTreeNodes=ListSequence.fromList(new ArrayList<MPSTreeNode>());
synchronized (myFeaturesHolder) {
    for (    Feature f : ListSequence.fromList(myFeaturesHolder.getFeaturesByModelReference(modelRef))) {
      if (!(f instanceof ModelFeature)) {
        ListSequence.fromList(obsoleteTreeNodes).addSequence(CollectionSequence.fromCollection(myFeaturesHolder.getNodesByFeature(f)));
        myFeaturesHolder.removeFeature(f);
      }
    }
  }
  ListSequence.fromList(obsoleteTreeNodes).visitAll(new IVisitor<MPSTreeNode>(){
    public void visit(    MPSTreeNode tn){
      unhighlightNode(tn);
    }
  }
);
}
