{
  final List<ITestNodeWrapper> seq=ListSequence.fromList(new LinkedList<ITestNodeWrapper>());
  ModelAccess.instance().runReadAction(new Runnable(){
    @Override public void run(){
      ListSequence.fromList(seq).addSequence(Sequence.fromIterable(ts).where(new IWhereFilter<ITestNodeWrapper>(){
        public boolean accept(        ITestNodeWrapper it){
          SNode root=SNodeOperations.getContainingRoot(it.getNode());
          if (!(SNodeOperations.isInstanceOf(root,"jetbrains.mps.lang.test.structure.EditorTestCase")) && !(SNodeOperations.isInstanceOf(root,"jetbrains.mps.lang.test.structure.NodesTestCase"))) {
            return false;
          }
          if (BehaviorReflection.invokeNonVirtualStatic(Boolean.TYPE,SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.test.structure.TestInfo"))),"call_reOpenProject_1031873601093419509",new Object[]{SNodeOperations.getModel(root)})) {
            return false;
          }
          return true;
        }
      }
));
    }
  }
);
  return seq;
}
