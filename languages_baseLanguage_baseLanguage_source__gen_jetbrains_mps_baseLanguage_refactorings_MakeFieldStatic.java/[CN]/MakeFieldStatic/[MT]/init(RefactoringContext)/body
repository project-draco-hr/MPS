{
  final SNode node=refactoringContext.getSelectedNode();
  refactoringContext.getRepository().getModelAccess().runReadAction(new Runnable(){
    public void run(){
      if (SNodeOperations.isInstanceOf(node,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca68L,"jetbrains.mps.baseLanguage.structure.FieldDeclaration"))) {
        refactoringContext.setParameter("declaration",SNodeOperations.cast(node,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca68L,"jetbrains.mps.baseLanguage.structure.FieldDeclaration")));
      }
 else {
        refactoringContext.setParameter("declaration",SNodeOperations.cast(ListSequence.fromList(SNodeOperations.getReferences(node)).first().getTargetNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca68L,"jetbrains.mps.baseLanguage.structure.FieldDeclaration")));
      }
      refactoringContext.setParameter("usages",FindUtils.getSearchResults(new EmptyProgressMonitor(),((SNode)refactoringContext.getParameter("declaration")),new GlobalScope(),"jetbrains.mps.baseLanguage.findUsages.FieldUsages_Finder"));
      refactoringContext.setParameter("hasExternalUsages",false);
      for (      SearchResult<SNode> result : ListSequence.fromList(((SearchResults<SNode>)refactoringContext.getParameter("usages")).getSearchResults())) {
        if (SNodeOperations.getContainingRoot(result.getObject()) != SNodeOperations.getContainingRoot(((SNode)refactoringContext.getParameter("declaration")))) {
          refactoringContext.setParameter("hasExternalUsages",true);
        }
      }
    }
  }
);
  return true;
}
