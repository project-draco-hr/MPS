{
  PersistenceFacade facade=PersistenceFacade.getInstance();
  SNode quotedNode_3=null;
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  quotedNode_3=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.GenericNewExpression",null,null,false);
  quotedNode_4=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator",null,null,false);
  quotedNode_4.setReference("baseMethodDeclaration",SReference.create("baseMethodDeclaration",quotedNode_4,facade.createModelReference("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.math(JDK/java.math@java_stub)"),facade.createNodeId("~MathContext.<init>(int,java.math.RoundingMode)")));
  quotedNode_5=(SNode)parameter_1;
  if (quotedNode_5 != null) {
    quotedNode_4.addChild("actualArgument",HUtil.copyIfNecessary(quotedNode_5));
  }
  quotedNode_6=(SNode)parameter_2;
  if (quotedNode_6 != null) {
    quotedNode_4.addChild("actualArgument",HUtil.copyIfNecessary(quotedNode_6));
  }
  quotedNode_3.addChild("creator",quotedNode_4);
  return quotedNode_3;
}
