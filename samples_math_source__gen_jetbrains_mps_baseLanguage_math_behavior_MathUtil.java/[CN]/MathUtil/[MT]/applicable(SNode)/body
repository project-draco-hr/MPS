{
  boolean operation_ok=SNodeOperations.isInstanceOf(contextParent,"jetbrains.mps.baseLanguage.structure.PlusExpression") || SNodeOperations.isInstanceOf(contextParent,"jetbrains.mps.baseLanguage.structure.DivExpression") || SNodeOperations.isInstanceOf(contextParent,"jetbrains.mps.baseLanguage.structure.MulExpression")|| SNodeOperations.isInstanceOf(contextParent,"jetbrains.mps.baseLanguage.structure.MinusExpression");
  boolean types_ok=SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(contextParent),"jetbrains.mps.baseLanguage.math.structure.BigDecimalType") || SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(contextParent),"jetbrains.mps.baseLanguage.math.structure.BigComplexType");
  return operation_ok && types_ok;
}
