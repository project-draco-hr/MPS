{
  CellProviderWithRole provider=new PropertyCellProvider(node,editorContext);
  provider.setRole("name");
  EditorCell_Property editorCell=null;
{
    ModelAccessor modelAccessor=new TransactionalPropertyAccessor(node,"name",false,true,editorContext){
      public void doCommit(      final String oldValue,      final String newValue){
        this.doCommitImpl(oldValue,newValue);
      }
      public void doCommitImpl(      final String oldValue,      final String newValue){
        AbstractConceptDeclaration_Behavior.commitNameProperty_1232962485892(editorContext,oldValue,node,newValue);
      }
    }
;
    editorCell=EditorCell_Property.create(editorContext,modelAccessor,node);
    editorCell.setAction(CellActionType.DELETE,new CellAction_Empty());
    editorCell.setCellId("TransactionalProperty_ueqr71_b0a");
    editorCell.setDefaultText("<no name>");
    editorCell.setCommitInCommand(false);
  }
  SNode attributeConcept=provider.getRoleAttribute();
  Class attributeKind=provider.getRoleAttributeClass();
  if (attributeConcept != null) {
    IOperationContext opContext=editorContext.getOperationContext();
    EditorManager manager=EditorManager.getInstanceFromContext(opContext);
    return manager.createRoleAttributeCell(editorContext,attributeConcept,attributeKind,editorCell);
  }
 else   return editorCell;
}
