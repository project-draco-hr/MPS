{
  MPSTreeNode root=new TextTreeNode("Tests");
  setRootVisible(false);
  TestNameMap<TestCaseTreeNode,TestMethodTreeNode> temp=new TestNameMap<TestCaseTreeNode,TestMethodTreeNode>();
  for (  ITestNodeWrapper testCase : SetSequence.fromSet(MapSequence.fromMap(myState.getTestsMap()).keySet())) {
    if (testCase == null) {
      continue;
    }
    TestCaseTreeNode testCaseTreeNode=myMap.get(testCase.getFqName());
    if (testCaseTreeNode == null) {
      testCaseTreeNode=new TestCaseTreeNode(myOperationContext,testCase);
    }
    testCaseTreeNode.removeAllChildren();
    boolean hasTestNotPassed=false;
    for (    ITestNodeWrapper method : ListSequence.fromList(MapSequence.fromMap(myState.getTestsMap()).get(testCase))) {
      TestMethodTreeNode oldMethodTreeNode=myMap.get(testCase.getFqName(),method.getName());
      TestMethodTreeNode newMethodTreeNode=new TestMethodTreeNode(myOperationContext,method);
      TestMethodTreeNode methodTreeNode=(oldMethodTreeNode == null ? newMethodTreeNode : oldMethodTreeNode);
      boolean isNotPassedMethod=!(isPassed(methodTreeNode));
      hasTestNotPassed=hasTestNotPassed || isNotPassedMethod;
      if (myAllTree || isNotPassedMethod) {
        if (methodTreeNode == null) {
          continue;
        }
        testCaseTreeNode.add(methodTreeNode);
        temp.put(testCase,method,methodTreeNode);
      }
 else {
        temp.put(testCase,method,methodTreeNode);
      }
    }
    if (myAllTree || hasTestNotPassed) {
      root.add(testCaseTreeNode);
      temp.put(testCase,testCaseTreeNode);
    }
 else {
      temp.put(testCase,testCaseTreeNode);
    }
  }
  myMap=temp;
  return root;
}
