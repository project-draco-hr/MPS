{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("variable",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      List<SNode> result=new ArrayList<SNode>();
      for (      SNode declaration : SNodeOperations.getDescendants(SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.lang.pattern.structure.PatternExpression",false,false),"jetbrains.mps.lang.pattern.structure.PatternVariableDeclaration",false,new String[]{})) {
        if (SPropertyOperations.getString(declaration,"name") != null) {
          ListSequence.fromList(result).addElement(declaration);
        }
      }
      return result;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c89590340(jetbrains.mps.lang.pattern.constraints)","2248628811136175356");
    }
  }
);
  return result;
}
