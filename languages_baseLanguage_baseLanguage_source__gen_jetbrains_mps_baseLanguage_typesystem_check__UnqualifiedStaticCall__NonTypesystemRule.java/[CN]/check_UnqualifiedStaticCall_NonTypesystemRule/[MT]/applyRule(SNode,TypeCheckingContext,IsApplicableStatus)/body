{
  SReference ref=SNodeOperations.getReference(localCall,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.LocalMethodCall","method"));
  if (!(ref instanceof StaticReference)) {
    return;
  }
  SNode target=ref.getTargetNode();
  if (!(SNodeOperations.isInstanceOf(target,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration"))) {
    return;
  }
  Scope staticMethodScope=Scope.getScope(SNodeOperations.getParent(localCall),localCall,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration"));
  if (staticMethodScope.contains(target)) {
    return;
  }
  SNode smc=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StaticMethodCall",null);
  SLinkOperations.setTarget(smc,"classConcept",SNodeOperations.getAncestor(target,"jetbrains.mps.baseLanguage.structure.ClassConcept",false,false),false);
  SLinkOperations.setTarget(smc,"baseMethodDeclaration",SNodeOperations.cast(target,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration"),false);
  ResolveUnknownUtil.reattachMethodArguments(localCall,smc);
  ResolveUnknownUtil.reattachTypeArguments(localCall,smc);
{
    MessageTarget errorTarget=new NodeMessageTarget();
    IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(localCall,"unqualified non-local static call","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","3151797052703996720",null,errorTarget);
{
      BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.baseLanguage.typesystem.replaceNode_QuickFix",true);
      intentionProvider.putArgument("newNode",smc);
      _reporter_2309309498.addIntentionProvider(intentionProvider);
    }
  }
}
