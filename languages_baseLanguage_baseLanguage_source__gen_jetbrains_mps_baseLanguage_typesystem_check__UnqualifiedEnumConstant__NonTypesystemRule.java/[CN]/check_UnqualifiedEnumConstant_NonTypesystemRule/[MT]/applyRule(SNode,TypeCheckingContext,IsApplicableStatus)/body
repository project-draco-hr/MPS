{
  if (!(SConceptOperations.isExactly(SNodeOperations.asSConcept(SNodeOperations.getConceptDeclaration(varRef)),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c77f1e98L,"jetbrains.mps.baseLanguage.structure.VariableReference")))) {
    return;
  }
  SReference ref=SNodeOperations.getReference(varRef,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c77f1e98L,0xf8cc6bf960L,"variableDeclaration"));
  if (!(ref instanceof DynamicReference)) {
    return;
  }
  if (ref.getTargetNode() != null) {
    return;
  }
  final String enumConstName=((DynamicReference)ref).getResolveInfo();
  for (  SNode enclosingEnum : ListSequence.fromList(SNodeOperations.getNodeAncestors(varRef,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass"),false))) {
    SNode enumConst=Sequence.fromIterable(Members.visibleEnumConstants(enclosingEnum)).findFirst(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return enumConstName.equals(SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")));
      }
    }
);
    if ((enumConst == null)) {
      continue;
    }
    SNode result=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc37588bc8L,"jetbrains.mps.baseLanguage.structure.EnumConstantReference")));
    SLinkOperations.setTarget(result,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc37588bc8L,0x10a758428feL,"enumClass"),enclosingEnum);
    SLinkOperations.setTarget(result,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc37588bc8L,0xfc37588bcaL,"enumConstantDeclaration"),enumConst);
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(varRef,"Unqualified enum constant reference","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","502936544108889529",null,errorTarget);
{
        BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.baseLanguage.typesystem.replaceNode_QuickFix",true);
        intentionProvider.putArgument("newNode",result);
        _reporter_2309309498.addIntentionProvider(intentionProvider);
      }
    }
  }
  SNode root=SNodeOperations.getContainingRoot(varRef);
  if (!(SNodeOperations.isInstanceOf(root,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier")))) {
    return;
  }
  SNode javaImports=AttributeOperations.getAttribute(SNodeOperations.cast(root,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier")),new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x53f7c33f069862f2L,"jetbrains.mps.baseLanguage.structure.JavaImports")));
  if ((javaImports == null)) {
    return;
  }
  for (  SNode singleNameImport : Sequence.fromIterable(BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),javaImports,"jetbrains.mps.baseLanguage.structure.JavaImports","call_staticSingleName_5230012391903395274",new Object[]{}))) {
    if (!(enumConstName.equals(BehaviorReflection.invokeNonVirtual(String.class,singleNameImport,"jetbrains.mps.baseLanguage.structure.Tokens","call_lastToken_1296023605440030462",new Object[]{})))) {
      continue;
    }
    String enumClassCandidateName=BehaviorReflection.invokeNonVirtual(String.class,singleNameImport,"jetbrains.mps.baseLanguage.structure.Tokens","call_withoutLastToken_6148840541591441572",new Object[]{});
    SNode enumClassCandidate=ResolveUnknownUtil.findClass(varRef,enumClassCandidateName);
    if ((enumClassCandidate == null)) {
      return;
    }
    if (!(SNodeOperations.isInstanceOf(enumClassCandidate,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass")))) {
      return;
    }
    SNode enumConst=Sequence.fromIterable(Members.visibleEnumConstants(SNodeOperations.cast(enumClassCandidate,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass")))).findFirst(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return enumConstName.equals(SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")));
      }
    }
);
    if ((enumConst == null)) {
      return;
    }
    SNode result=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc37588bc8L,"jetbrains.mps.baseLanguage.structure.EnumConstantReference")));
    SLinkOperations.setTarget(result,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc37588bc8L,0x10a758428feL,"enumClass"),SNodeOperations.cast(enumClassCandidate,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass")));
    SLinkOperations.setTarget(result,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc37588bc8L,0xfc37588bcaL,"enumConstantDeclaration"),enumConst);
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(varRef,"Unqualified enum constant reference","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","5230012391904188150",null,errorTarget);
{
        BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.baseLanguage.typesystem.replaceNode_QuickFix",true);
        intentionProvider.putArgument("newNode",result);
        _reporter_2309309498.addIntentionProvider(intentionProvider);
      }
    }
    return;
  }
  for (  SNode onDemandImport : Sequence.fromIterable(BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),javaImports,"jetbrains.mps.baseLanguage.structure.JavaImports","call_staticOnDemand_5230012391903366883",new Object[]{}))) {
    SNode claz=ResolveUnknownUtil.findClass(varRef,SPropertyOperations.getString(onDemandImport,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x5a98df4004080866L,0x1996ec29712bdd92L,"tokens")));
    if ((claz == null)) {
      continue;
    }
    if (!(SNodeOperations.isInstanceOf(claz,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass")))) {
      continue;
    }
    SNode enumConst=Sequence.fromIterable(Members.visibleEnumConstants(SNodeOperations.cast(claz,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass")))).findFirst(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return enumConstName.equals(SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")));
      }
    }
);
    if ((enumConst == null)) {
      continue;
    }
    SNode result=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc37588bc8L,"jetbrains.mps.baseLanguage.structure.EnumConstantReference")));
    SLinkOperations.setTarget(result,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc37588bc8L,0x10a758428feL,"enumClass"),SNodeOperations.cast(claz,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass")));
    SLinkOperations.setTarget(result,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc37588bc8L,0xfc37588bcaL,"enumConstantDeclaration"),enumConst);
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(varRef,"Unqualified enum constant reference","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","3151797052697040971",null,errorTarget);
{
        BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.baseLanguage.typesystem.replaceNode_QuickFix",true);
        intentionProvider.putArgument("newNode",result);
        _reporter_2309309498.addIntentionProvider(intentionProvider);
      }
    }
  }
}
