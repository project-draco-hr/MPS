{
  if (!(SConceptOperations.isExactly(SNodeOperations.getConceptDeclaration(varRef),"jetbrains.mps.baseLanguage.structure.VariableReference"))) {
    return;
  }
  SReference ref=SNodeOperations.getReference(varRef,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.VariableReference","variableDeclaration"));
  if (!(ref instanceof DynamicReference)) {
    return;
  }
  if (ref.getTargetNode() != null) {
    return;
  }
  SNode root=SNodeOperations.getContainingRoot(varRef);
  if (!(SNodeOperations.isInstanceOf(root,"jetbrains.mps.baseLanguage.structure.Classifier"))) {
    return;
  }
  SNode javaImports=AttributeOperations.getAttribute(SNodeOperations.cast(root,"jetbrains.mps.baseLanguage.structure.Classifier"),new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.structure.JavaImports"));
  if ((javaImports == null)) {
    return;
  }
  final String enumConstName=((DynamicReference)(ref)).getResolveInfo();
  for (  SNode singleNameImport : Sequence.fromIterable(JavaImports_Behavior.call_staticSingleName_5230012391903395274(javaImports))) {
    if (!(enumConstName.equals(Tokens_Behavior.call_lastToken_1296023605440030462(singleNameImport)))) {
      continue;
    }
    String enumClassCandidateName=Tokens_Behavior.call_withoutLastToken_6148840541591441572(singleNameImport);
    SNode enumClassCandidate=ResolveUnknownUtil.findClass(varRef,enumClassCandidateName);
    if ((enumClassCandidate == null)) {
      return;
    }
    if (!(SNodeOperations.isInstanceOf(enumClassCandidate,"jetbrains.mps.baseLanguage.structure.EnumClass"))) {
      return;
    }
    SNode enumConst=Sequence.fromIterable(Members.visibleEnumConstants(SNodeOperations.cast(enumClassCandidate,"jetbrains.mps.baseLanguage.structure.EnumClass"))).findFirst(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return enumConstName.equals(SPropertyOperations.getString(it,"name"));
      }
    }
);
    if ((enumConst == null)) {
      return;
    }
    SNode result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.EnumConstantReference",null);
    SLinkOperations.setTarget(result,"enumClass",SNodeOperations.cast(enumClassCandidate,"jetbrains.mps.baseLanguage.structure.EnumClass"),false);
    SLinkOperations.setTarget(result,"enumConstantDeclaration",enumConst,false);
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(varRef,"Unqualified enum constant reference","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","5230012391904188150",null,errorTarget);
{
        BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.baseLanguage.typesystem.replaceNode_QuickFix",true);
        intentionProvider.putArgument("newNode;",result);
        _reporter_2309309498.addIntentionProvider(intentionProvider);
      }
    }
    return;
  }
  for (  SNode onDemandImport : Sequence.fromIterable(JavaImports_Behavior.call_staticOnDemand_5230012391903366883(javaImports))) {
    SNode claz=ResolveUnknownUtil.findClass(varRef,SPropertyOperations.getString(onDemandImport,"tokens"));
    if ((claz == null)) {
      continue;
    }
    if (!(SNodeOperations.isInstanceOf(claz,"jetbrains.mps.baseLanguage.structure.EnumClass"))) {
      continue;
    }
    SNode enumConst=Sequence.fromIterable(Members.visibleEnumConstants(SNodeOperations.cast(claz,"jetbrains.mps.baseLanguage.structure.EnumClass"))).findFirst(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return enumConstName.equals(SPropertyOperations.getString(it,"name"));
      }
    }
);
    if ((enumConst == null)) {
      continue;
    }
    SNode result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.EnumConstantReference",null);
    SLinkOperations.setTarget(result,"enumClass",SNodeOperations.cast(claz,"jetbrains.mps.baseLanguage.structure.EnumClass"),false);
    SLinkOperations.setTarget(result,"enumConstantDeclaration",enumConst,false);
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(varRef,"Unqualified enum constant reference","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","3151797052697040971",null,errorTarget);
{
        BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.baseLanguage.typesystem.replaceNode_QuickFix",true);
        intentionProvider.putArgument("newNode;",result);
        _reporter_2309309498.addIntentionProvider(intentionProvider);
      }
    }
  }
}
