{
  return findInDebugInfo(className,new Mapper2<DebugInfo,SModelDescriptor,List<SNode>>(){
    public List<SNode> value(    DebugInfo result,    SModelDescriptor descriptor){
      List<T> infoForPosition=result.getInfoForPosition(file,position,new _return_P1_E0<Set<T>,DebugInfoRoot>(){
        @Override public Set<T> invoke(        DebugInfoRoot debugInfoRoot){
          return positionsGetter.value(debugInfoRoot);
        }
      }
);
      List<SNode> nodes=new ArrayList<SNode>();
      for (      T info : infoForPosition) {
        nodes.add(descriptor.getSModel().getNodeById(info.getNodeId()));
      }
      return nodes;
    }
  }
);
}
