{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=MetaAdapterFactory.getConcept(0x737ed1fffa634ebcL,0xa834435499b23c64L,0x2365c14e1671a9caL,"jetbrains.mps.lang.actions.testLanguage.structure.ActionTestAbstractChild").getDeclarationNode();
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          boolean tmpVar=_context.getParentNode() != null;
          tmpVar=tmpVar && _context.getCurrentTargetNode() != null;
          tmpVar=tmpVar && _context.getChildConcept() != null;
          tmpVar=tmpVar && _context.getModel() != null;
          tmpVar=tmpVar && operationContext != null;
          return ListSequence.fromList(SConceptOperations.getAllSubConcepts(MetaAdapterFactory.getConcept(0x737ed1fffa634ebcL,0xa834435499b23c64L,0x2365c14e1671a9caL,"jetbrains.mps.lang.actions.testLanguage.structure.ActionTestAbstractChild").getDeclarationNode(),_context.getModel())).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return it != MetaAdapterFactory.getConcept(0x737ed1fffa634ebcL,0xa834435499b23c64L,0x2365c14e1671a9caL,"jetbrains.mps.lang.actions.testLanguage.structure.ActionTestAbstractChild").getDeclarationNode();
            }
          }
);
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              boolean tmpVar=pattern != null;
              tmpVar=tmpVar && (item) != null;
              tmpVar=tmpVar && _context.getParentNode() != null;
              tmpVar=tmpVar && _context.getCurrentTargetNode() != null;
              tmpVar=tmpVar && _context.getChildConcept() != null;
              tmpVar=tmpVar && model != null;
              tmpVar=tmpVar && operationContext != null;
              SNode result=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept((item)));
              if ((item) == MetaAdapterFactory.getConcept(0x737ed1fffa634ebcL,0xa834435499b23c64L,0x2365c14e167220f9L,"jetbrains.mps.lang.actions.testLanguage.structure.ActionTestChild1").getDeclarationNode()) {
                SLinkOperations.addNewChild(SNodeOperations.cast(result,MetaAdapterFactory.getConcept(0x737ed1fffa634ebcL,0xa834435499b23c64L,0x2365c14e167220f9L,"jetbrains.mps.lang.actions.testLanguage.structure.ActionTestChild1")),MetaAdapterFactory.getContainmentLink(0x737ed1fffa634ebcL,0xa834435499b23c64L,0x2365c14e167220f9L,0x7f805f0c2dd46343L,"child1"),SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x737ed1fffa634ebcL,0xa834435499b23c64L,0x7f805f0c2dd45b4eL,"jetbrains.mps.lang.actions.testLanguage.structure.ActionTestChild1Child")));
              }
              return result;
            }
            @Override protected SNode selectChildNode(            SNode createdNode,            SModel model,            String pattern,            EditorContext editorContext){
              boolean tmpVar=pattern != null;
              tmpVar=tmpVar && (item) != null;
              tmpVar=tmpVar && _context.getParentNode() != null;
              tmpVar=tmpVar && createdNode != null;
              tmpVar=tmpVar && _context.getChildConcept() != null;
              tmpVar=tmpVar && model != null;
              tmpVar=tmpVar && operationContext != null;
              tmpVar=tmpVar && editorContext != null;
              if ((item) == MetaAdapterFactory.getConcept(0x737ed1fffa634ebcL,0xa834435499b23c64L,0x2365c14e1672224dL,"jetbrains.mps.lang.actions.testLanguage.structure.ActionTestChild2").getDeclarationNode()) {
                editorContext.flushEvents();
                EditorCell createdNodeCell=editorContext.getEditorComponent().findNodeCell(createdNode);
                if (createdNodeCell != null) {
                  EditorCell firstLeaf=CellTraversalUtil.getFirstLeaf(createdNodeCell);
                  editorContext.getEditorComponent().changeSelection(firstLeaf);
                  if (firstLeaf instanceof EditorCell_Label) {
                    ((EditorCell_Label)firstLeaf).setCaretPosition(3);
                  }
                  return null;
                }
              }
              if ((item) == MetaAdapterFactory.getConcept(0x737ed1fffa634ebcL,0xa834435499b23c64L,0x2365c14e167220f9L,"jetbrains.mps.lang.actions.testLanguage.structure.ActionTestChild1").getDeclarationNode()) {
                return ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(createdNode,MetaAdapterFactory.getConcept(0x737ed1fffa634ebcL,0xa834435499b23c64L,0x2365c14e167220f9L,"jetbrains.mps.lang.actions.testLanguage.structure.ActionTestChild1")),MetaAdapterFactory.getContainmentLink(0x737ed1fffa634ebcL,0xa834435499b23c64L,0x2365c14e167220f9L,0x7f805f0c2dd46343L,"child1"))).first();
              }
              return createdNode;
            }
            public String getMatchingText(            String pattern){
              boolean tmpVar=pattern != null;
              tmpVar=tmpVar && (item) != null;
              tmpVar=tmpVar && _context.getParentNode() != null;
              tmpVar=tmpVar && _context.getCurrentTargetNode() != null;
              tmpVar=tmpVar && _context.getChildConcept() != null;
              tmpVar=tmpVar && _context.getModel() != null;
              tmpVar=tmpVar && operationContext != null;
              return SPropertyOperations.getString((item),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
            }
            public String getVisibleMatchingText(            String pattern){
              return getMatchingText(pattern);
            }
            public String getDescriptionText(            String pattern){
              boolean tmpVar=pattern != null;
              tmpVar=tmpVar && (item) != null;
              tmpVar=tmpVar && _context.getParentNode() != null;
              tmpVar=tmpVar && _context.getCurrentTargetNode() != null;
              tmpVar=tmpVar && _context.getChildConcept() != null;
              tmpVar=tmpVar && _context.getModel() != null;
              tmpVar=tmpVar && operationContext != null;
              return "Create new instance of concept: " + SPropertyOperations.getString((item),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
            }
            public SNode getIconNode(            String pattern){
              boolean tmpVar=pattern != null;
              tmpVar=tmpVar && (item) != null;
              tmpVar=tmpVar && _context.getParentNode() != null;
              tmpVar=tmpVar && _context.getCurrentTargetNode() != null;
              tmpVar=tmpVar && _context.getChildConcept() != null;
              tmpVar=tmpVar && _context.getModel() != null;
              tmpVar=tmpVar && operationContext != null;
              return (item);
            }
            public SNode getActionType(            String pattern){
              boolean tmpVar=pattern != null;
              tmpVar=tmpVar && (item) != null;
              tmpVar=tmpVar && _context.getParentNode() != null;
              tmpVar=tmpVar && _context.getCurrentTargetNode() != null;
              tmpVar=tmpVar && _context.getChildConcept() != null;
              tmpVar=tmpVar && _context.getModel() != null;
              tmpVar=tmpVar && operationContext != null;
              boolean useNodeType=(item) == MetaAdapterFactory.getConcept(0x737ed1fffa634ebcL,0xa834435499b23c64L,0x2c99ba4dd5ff2533L,"jetbrains.mps.lang.actions.testLanguage.structure.ActionTestChild1SubConcept").getDeclarationNode();
              return (useNodeType ? _quotation_createNode_qp9nsj_a0k0a0a0_0() : _quotation_createNode_qp9nsj_a0k0a0a0((SNode)(item)));
            }
          }
);
        }
      }
    }
  }
  return result;
}
