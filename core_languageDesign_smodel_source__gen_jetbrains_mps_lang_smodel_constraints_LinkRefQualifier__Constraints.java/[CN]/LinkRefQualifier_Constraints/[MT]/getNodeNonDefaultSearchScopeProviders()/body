{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("link",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      SNode qualifierContainer=SNodeOperations.cast(_context.getEnclosingNode(),"jetbrains.mps.lang.smodel.structure.ILinkAccessQualifierContainer");
      return ILinkAccessQualifierContainer_Behavior.call_getLinkAccessScope_2906110183022538642(qualifierContainer);
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c895902fb(jetbrains.mps.lang.smodel.constraints)","1213104859122");
    }
  }
);
  return result;
}
