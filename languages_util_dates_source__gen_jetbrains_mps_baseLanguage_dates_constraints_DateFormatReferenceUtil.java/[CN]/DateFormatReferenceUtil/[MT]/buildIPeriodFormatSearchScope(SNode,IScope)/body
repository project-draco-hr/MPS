{
  ISearchScope s=SModelSearchUtil.createModelAndImportedModelsScope(SNodeOperations.getModel(node),scope);
  SNode cd=SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.datesInternal.structure.IPeriodFormat");
  List<SNode> formats=(List<SNode>)s.getNodes(new IsInstanceCondition(cd));
  final SNode containingFormat=SNodeOperations.getAncestor(node,"jetbrains.mps.baseLanguage.dates.structure.PeriodFormat",true,false);
  formats=ListSequence.<SNode>fromList(formats).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (SPropertyOperations.getBoolean(it,"isPublic") || SNodeOperations.getAncestor(it,null,false,true) == SNodeOperations.getAncestor(node,null,false,true)) && it != containingFormat;
    }
  }
).toListSequence();
  return new SimpleSearchScope(formats);
}
