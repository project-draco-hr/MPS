{
  final Iterable<SNode> parameters=SLinkOperations.getChildren(queryParameterList,MetaAdapterFactory.getContainmentLink(new UUID(1911026821630280634l,-8343922105556474022l),4307205004132277753l,4307205004141421222l,"parameter"));
  Iterable<SNode> parameterConcepts=Sequence.fromIterable(parameters).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.getConceptDeclaration(it);
    }
  }
).distinct();
  Iterable<? extends Iterable<SNode>> groupedByConcepts=Sequence.fromIterable(parameterConcepts).select(new ISelector<SNode,ISequence<SNode>>(){
    public ISequence<SNode> select(    final SNode c){
      return Sequence.fromIterable(parameters).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode p){
          return SConceptOperations.isExactly(SNodeOperations.getConceptDeclaration(p),NameUtil.nodeFQName(c));
        }
      }
);
    }
  }
);
  for (  Iterable<SNode> group : Sequence.fromIterable(groupedByConcepts)) {
    if (Sequence.fromIterable(group).count() > 1) {
      for (      SNode other : Sequence.fromIterable(group).tail(Sequence.fromIterable(group).count() - 1)) {
{
          MessageTarget errorTarget=new NodeMessageTarget();
          IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(other,"Duplicated parameter: " + SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(Sequence.fromIterable(group).first()),MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1169125787135l,5092175715804935370l,"conceptAlias")),"r:7e8cfa8a-da13-467d-9878-63b90b943128(jetbrains.mps.console.blCommand.typesystem)","2284201910212797905",null,errorTarget);
        }
      }
    }
  }
}
