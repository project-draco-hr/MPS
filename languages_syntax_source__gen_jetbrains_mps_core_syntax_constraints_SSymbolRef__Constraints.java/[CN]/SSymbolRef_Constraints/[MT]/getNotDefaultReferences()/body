{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("ref",new BaseReferenceConstraintsDescriptor("ref",this){
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public boolean hasPresentation(){
          return true;
        }
        @Override public String getPresentation(        final IOperationContext operationContext,        final ReferencePresentationContext _context){
          if (_context.getInEditor() && (_context.getReferenceNode() != null) && SPropertyOperations.getBoolean(_context.getReferenceNode(),"isOptional")) {
            return SPropertyOperations.getString(_context.getParameterNode(),"name") + "opt";
          }
          return SPropertyOperations.getString(_context.getParameterNode(),"name");
        }
      }
;
    }
  }
);
  return references;
}
