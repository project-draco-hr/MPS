{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(7596465798203917883l,-4873580700227838512l),3344436107830227888l,3344436107830227902l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(7596465798203917883l,-4873580700227838512l),3344436107830227888l,3344436107830227902l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          final SNode td=SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(new UUID(7596465798203917883l,-4873580700227838512l),6418371274763029565l,"jetbrains.mps.make.facet.structure.TargetDeclaration"),false,false);
          SNode fd=SNodeOperations.cast(SNodeOperations.getParent(td),MetaAdapterFactory.getConcept(new UUID(7596465798203917883l,-4873580700227838512l),6418371274763029523l,"jetbrains.mps.make.facet.structure.FacetDeclaration"));
          return ListSequence.fromList(SLinkOperations.getChildren(fd,MetaAdapterFactory.getContainmentLink(new UUID(7596465798203917883l,-4873580700227838512l),6418371274763029523l,6418371274763146558l,"targetDeclaration"))).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode sibl){
              return sibl != td;
            }
          }
).concat(ListSequence.fromList(SLinkOperations.getChildren(fd,MetaAdapterFactory.getContainmentLink(new UUID(7596465798203917883l,-4873580700227838512l),6418371274763029523l,6447445394688422656l,"required"))).translate(new ITranslator2<SNode,SNode>(){
            public Iterable<SNode> translate(            SNode rfd){
              return SLinkOperations.getChildren(SLinkOperations.getTarget(rfd,MetaAdapterFactory.getReferenceLink(new UUID(7596465798203917883l,-4873580700227838512l),6447445394688422642l,6447445394688422643l,"facet")),MetaAdapterFactory.getContainmentLink(new UUID(7596465798203917883l,-4873580700227838512l),6418371274763029523l,6418371274763146558l,"targetDeclaration"));
            }
          }
)).concat(ListSequence.fromList(SLinkOperations.getChildren(fd,MetaAdapterFactory.getContainmentLink(new UUID(7596465798203917883l,-4873580700227838512l),6418371274763029523l,6447445394688422657l,"optional"))).translate(new ITranslator2<SNode,SNode>(){
            public Iterable<SNode> translate(            SNode rfd){
              return SLinkOperations.getChildren(SLinkOperations.getTarget(rfd,MetaAdapterFactory.getReferenceLink(new UUID(7596465798203917883l,-4873580700227838512l),6447445394688422642l,6447445394688422643l,"facet")),MetaAdapterFactory.getContainmentLink(new UUID(7596465798203917883l,-4873580700227838512l),6418371274763029523l,6418371274763146558l,"targetDeclaration"));
            }
          }
));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_3lfdwm_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
