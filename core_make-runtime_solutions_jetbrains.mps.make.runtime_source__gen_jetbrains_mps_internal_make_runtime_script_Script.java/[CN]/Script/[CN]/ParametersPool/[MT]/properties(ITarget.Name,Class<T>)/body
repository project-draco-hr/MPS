{
  if (!(MapSequence.fromMap(cache).containsKey(target))) {
    if (targetRange.hasTarget(target)) {
      T vars;
      if (!(MapSequence.fromMap(copyFrom).containsKey(target))) {
        vars=targetRange.getTarget(target).createParameters(cls);
      }
 else {
        T orig=null;
        Object available=MapSequence.fromMap(copyFrom).get(target);
        try {
          orig=cls.cast(available);
        }
 catch (        ClassCastException cce) {
          Script.LOG.debug("can't cast original parameters to required class [" + cls.getName() + "]");
          Script.LOG.debug("requested class's classloader " + cls.getClassLoader() + "@"+ System.identityHashCode(cls.getClassLoader()));
          Script.LOG.debug("original object's classloader " + available.getClass().getClassLoader() + "@"+ System.identityHashCode(available.getClass().getClassLoader()));
        }
        vars=targetRange.getTarget(target).createParameters(cls,orig);
      }
      MapSequence.fromMap(cache).put(target,vars);
    }
 else {
      return null;
    }
  }
  return cls.cast(MapSequence.fromMap(cache).get(target));
}
