{
  AbstractConceptDeclaration cd=(AbstractConceptDeclaration)propertyDeclaration.getParent();
  Language l=SModelUtil_new.getDeclaringLanguage(cd,GlobalScope.getInstance());
  if (l.getEditorModelDescriptor() == null) {
    return null;
  }
  for (  INodeAdapter rootElement : l.getEditorModelDescriptor().getSModel().getRootsAdapters()) {
    if (rootElement instanceof ConceptPropertySupports && cd.equals(((ConceptPropertySupports)rootElement).getConceptDeclaration())) {
      ConceptPropertySupports propertySupports=(ConceptPropertySupports)rootElement;
      for (      AbstractPropertySupport propertySupport : propertySupports.getPropertySupports()) {
        if (propertyDeclaration.equals(propertySupport.getPropertyDeclaration())) {
          String propertySupportClassName=JavaNameUtil.fqClassName(propertySupports.getNode(),ConceptPropertySupports_Behavior.call_getClassName_4474273835819399522(propertySupports.getNode()));
          Class propertySupportClass=l.getClass(propertySupportClassName);
          if (propertySupportClass != null) {
            try {
              Method method=propertySupportClass.getMethod(AbstractPropertySupport_Behavior.call_getFactoryMehodName_4474273835819398328(propertySupport.getNode()));
              return (PropertySupport)method.invoke(null);
            }
 catch (            NoSuchMethodException e) {
              LOG.error(e);
            }
catch (            InvocationTargetException e) {
              LOG.error(e);
            }
catch (            IllegalAccessException e) {
              LOG.error(e);
            }
          }
 else {
            LOG.error("Can't find a class " + propertySupportClassName);
          }
        }
      }
      return null;
    }
  }
  return null;
}
