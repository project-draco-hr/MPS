{
  try {
    String oldName=((VirtualFile)MapSequence.fromMap(_params).get("selectedFile")).getName();
    RenameFileDialog dialog=new RenameFileDialog(((Project)MapSequence.fromMap(_params).get("ideaProject")),oldName,((VirtualFile)MapSequence.fromMap(_params).get("selectedFile")).isDirectory());
    dialog.show();
    if (!(dialog.isOK())) {
      return;
    }
    final String result=dialog.getResult();
    ((MPSProject)MapSequence.fromMap(_params).get("project")).getRepository().getModelAccess().executeCommand(new Runnable(){
      public void run(){
        try {
          if (RenameFileOrDirectory_Action.this.isNotValid(result,_params)) {
            return;
          }
          ((VirtualFile)MapSequence.fromMap(_params).get("selectedFile")).rename(null,result);
          ProjectView.getInstance(((Project)MapSequence.fromMap(_params).get("ideaProject"))).refresh();
          SwingUtilities.invokeLater(new Runnable(){
            public void run(){
              ProjectView.getInstance(((Project)MapSequence.fromMap(_params).get("ideaProject"))).getCurrentProjectViewPane().select(null,((VirtualFile)MapSequence.fromMap(_params).get("selectedFile")),true);
            }
          }
);
        }
 catch (        IOException e) {
        }
      }
    }
);
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "RenameFileOrDirectory",t);
    }
  }
}
