{
  final Iterable<Integer> numbers=SimpleParallelForSample.createNumbers();
  final String value=null;
{
    final CountDownLatch latch=new CountDownLatch(Sequence.fromIterable(numbers).count());
    final List<Exception> exceptions=new CopyOnWriteArrayList<Exception>();
    for (    final int a : Collections.unmodifiableList(ListSequence.fromListWithValues(new ArrayList<Integer>(),numbers))) {
      final int localA=a;
      Runnable runnable=new Runnable(){
        public void run(){
          try {
            log("Current value: " + localA);
            sleep(localA);
            value.length();
            log("Done with " + localA);
          }
 catch (          RuntimeException e) {
            ListSequence.fromList(exceptions).addElement(e);
          }
 finally {
            latch.countDown();
          }
        }
      }
;
      new Thread(runnable).start();
    }
    try {
      latch.await();
    }
 catch (    InterruptedException e) {
      ListSequence.fromList(exceptions).addElement(e);
    }
    if (ListSequence.fromList(exceptions).isNotEmpty()) {
      throw new ParallelLoopException("Some parallel calculations failed",exceptions);
    }
  }
}
