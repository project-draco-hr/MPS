{
  final MPSFacetConfiguration mpsConf=this.readMPSFacetConf(file);
  if (mpsConf == null) {
    return null;
  }
  final MacroHelper macroHelper=new ModuleMacroExpander(null,file);
  SolutionDescriptor sd;
  sd=new _FunctionTypes._return_P0_E0<SolutionDescriptor>(){
    public SolutionDescriptor invoke(){
      final SolutionDescriptor result_56japk_a0a0e0b=new SolutionDescriptor();
      final String result_56japk_a1a0a0e0b=file.getName();
      result_56japk_a0a0e0b.setNamespace(result_56japk_a1a0a0e0b);
      final String result_56japk_a3a0a0e0b=mpsConf.UUID;
      result_56japk_a0a0e0b.setUUID(result_56japk_a3a0a0e0b);
      final boolean result_56japk_a7a0a0e0b=true;
      result_56japk_a0a0e0b.setCompileInMPS(result_56japk_a7a0a0e0b);
      final boolean result_56japk_a9a0a0e0b=mpsConf.useTransientOutputFolder;
      result_56japk_a0a0e0b.setUseTransientOutput(result_56japk_a9a0a0e0b);
      final String result_56japk_a11a0a0e0b=macroHelper.expandPath(mpsConf.generatorOutputPath);
      result_56japk_a0a0e0b.setOutputPath(result_56japk_a11a0a0e0b);
      if (mpsConf.rootDescriptors != null) {
        for (        ModelRootDescriptor mrp : mpsConf.rootDescriptors) {
          process(mrp.getMemento(),macroHelper);
          result_56japk_a0a0e0b.getModelRootDescriptors().add(mrp);
        }
      }
      if (mpsConf.usedLanguages != null) {
        for (        String usedLang : mpsConf.usedLanguages) {
          result_56japk_a0a0e0b.getUsedLanguages().add(jetbrains.mps.project.structure.modules.ModuleReference.fromString(usedLang));
        }
      }
      return result_56japk_a0a0e0b;
    }
  }
.invoke();
  sd.setTimestamp(Long.toString(file.lastModified()));
  return sd;
}
