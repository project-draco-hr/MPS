{
  return new PsiReference(){
    @Override public PsiElement getElement(){
      return MPSPsiRef.this;
    }
    @Override public TextRange getRangeInElement(){
      return null;
    }
    @Nullable @Override public PsiElement resolve(){
      return MPSPsiRef.this.resolve();
    }
    @NotNull @Override public String getCanonicalText(){
      return null;
    }
    @Override public PsiElement handleElementRename(    final String newElementName) throws IncorrectOperationException {
      return MPSPsiRef.this;
    }
    @Override public PsiElement bindToElement(    final @NotNull PsiElement element) throws IncorrectOperationException {
      return MPSPsiRef.this;
    }
    @Override public boolean isReferenceTo(    PsiElement element){
      return false;
    }
    @NotNull @Override public Object[] getVariants(){
      return new Object[0];
    }
    @Override public boolean isSoft(){
      return false;
    }
  }
;
}
