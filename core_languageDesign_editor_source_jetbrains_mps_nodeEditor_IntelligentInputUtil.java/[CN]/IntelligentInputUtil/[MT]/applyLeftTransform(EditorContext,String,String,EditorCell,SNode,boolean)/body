{
  EditorCellAction ltAction=cellForNewNode.findChild(CellFinders.FIRST_SELECTABLE_LEAF,true).getApplicableCellAction(CellActionType.LEFT_TRANSFORM);
  TypeCheckingContext typeCheckingContext=NodeTypesComponentsRepository.getInstance().createTypeCheckingContext(cellForNewNode.getSNode());
  typeCheckingContext.setInEditorQueriesMode();
  boolean hasSideActions=hasSideActions(cellForNewNode,CellSide.LEFT,head);
  typeCheckingContext.resetIsInEditorQueriesMode();
  if (ltAction == null || !hasSideActions) {
    CellInfo cellInfo=cellForNewNode.getCellInfo();
    if (!sourceCellRemains) {
      putTextInErrorChild(cellInfo,head + smallPattern,editorContext);
    }
    return true;
  }
  if (sourceCellRemains) {
    ((EditorCell_Label)cellForNewNode).changeText(smallPattern);
    editorContext.getNodeEditorComponent().requestRelayout();
  }
  ltAction.execute(editorContext);
  EditorCell newCellForNewNode=editorContext.getNodeEditorComponent().findNodeCell(newNode);
  prepareSTCell(editorContext,newCellForNewNode,head);
  return true;
}
