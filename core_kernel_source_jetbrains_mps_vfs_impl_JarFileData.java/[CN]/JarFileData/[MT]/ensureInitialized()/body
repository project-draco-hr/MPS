{
synchronized (myLock) {
    if (isInitialized)     return;
    isInitialized=true;
    ZipFile zipFile=null;
    try {
      zipFile=new ZipFile(myFile);
      Enumeration<? extends ZipEntry> entries=zipFile.entries();
      while (entries.hasMoreElements()) {
        ZipEntry entry=entries.nextElement();
        if (entry.isDirectory()) {
          String name=entry.getName();
          if (name.endsWith("/")) {
            name=name.substring(0,name.length() - 1);
          }
          buildDirectoryCaches(name);
        }
 else {
          String name=entry.getName();
          int packEnd=name.lastIndexOf('/');
          String dir;
          String fileName;
          if (packEnd == -1) {
            dir="";
            fileName=name;
          }
 else {
            dir=packEnd > 0 ? name.substring(0,packEnd) : name;
            fileName=name.substring(packEnd + 1);
          }
          buildDirectoryCaches(dir);
          getFilesFor(dir).add(fileName);
          if (dir.length() > 0) {
            myEntries.put(dir + "/" + fileName,entry);
          }
 else {
            myEntries.put(fileName,entry);
          }
        }
      }
    }
 catch (    IOException e) {
      LOG.error(e);
    }
 finally {
      if (zipFile != null) {
        try {
          zipFile.close();
        }
 catch (        IOException ignored) {
        }
      }
    }
  }
}
