{
  if (classifier == null)   return null;
  Iterator<StaticFieldDeclaration> fields=classifier.staticFields();
  while (fields.hasNext()) {
    StaticFieldDeclaration field=fields.next();
    if (constantName.equals(field.getName())) {
      return field;
    }
  }
  if (classifier instanceof ClassConcept) {
    StaticFieldDeclaration staticField=findStaticField(BaseLanguageUtil_new.getSuperclass((ClassConcept)classifier),constantName);
    if (staticField != null) {
      return staticField;
    }
    Iterator<ClassifierType> iterator=((ClassConcept)classifier).implementedInterfaces();
    while (iterator.hasNext()) {
      ClassifierType classifierType=iterator.next();
      staticField=findStaticField(classifierType.getClassifier(),constantName);
      if (staticField != null) {
        return staticField;
      }
    }
  }
 else {
    Iterator<ClassifierType> iterator=((Interface)classifier).extendedInterfaces();
    while (iterator.hasNext()) {
      ClassifierType classifierType=iterator.next();
      StaticFieldDeclaration staticField=findStaticField(classifierType.getClassifier(),constantName);
      if (staticField != null) {
        return staticField;
      }
    }
  }
  return null;
}
