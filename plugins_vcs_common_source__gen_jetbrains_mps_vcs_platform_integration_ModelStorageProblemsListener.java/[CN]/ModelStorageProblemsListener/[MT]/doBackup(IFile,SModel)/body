{
  try {
    File tmp=FileUtil.createTmpDir();
    MergeDriverBackupUtil.writeContentsToFile(ModelPersistence.modelToString(((SModelBase)inMemory).getSModelInternal()).getBytes(FileUtil.DEFAULT_CHARSET),modelFile.getName(),tmp,ModelStorageProblemsListener.DiskMemoryConflictVersion.MEMORY.getSuffix());
    if (modelFile.exists()) {
      com.intellij.openapi.util.io.FileUtil.copy(new File(modelFile.getPath()),new File(tmp.getAbsolutePath(),modelFile.getName() + "." + ModelStorageProblemsListener.DiskMemoryConflictVersion.FILE_SYSTEM.getSuffix()));
    }
    File zipfile=MergeBackupUtil.chooseZipFileForModelFile(modelFile);
    zipfile.getParentFile().mkdirs();
    FileUtil.zip(tmp,zipfile);
    FileUtil.delete(tmp);
    return zipfile;
  }
 catch (  IOException e) {
    if (LOG.isEnabledFor(Priority.ERROR)) {
      LOG.error("Cannot create backup during resolving disk-memory conflict for " + SNodeOperations.getModelLongName(inMemory),e);
    }
    throw new RuntimeException(e);
  }
}
