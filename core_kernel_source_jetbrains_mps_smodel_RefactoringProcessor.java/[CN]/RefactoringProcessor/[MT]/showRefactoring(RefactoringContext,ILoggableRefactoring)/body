{
  new Thread(){
    public void run(){
      if (!findUsages(refactoringContext,refactoring))       return;
      SearchResults usages=refactoringContext.getUsages();
      if (usages == null || (refactoring.refactorImmediatelyIfNoUsages() && usages.getSearchResults().isEmpty())) {
        executeRefactoring(refactoringContext);
      }
 else {
        ThreadUtils.runInUIThreadNoWait(new Runnable(){
          public void run(){
            ModelAccess.instance().runReadAction(new Runnable(){
              public void run(){
                RefactoringView refactorintView=refactoringContext.getCurrentOperationContext().getComponent(RefactoringView.class);
                RefactoringViewAction okAction=new RefactoringViewAction(){
                  public void performAction(                  final RefactoringViewItem refactoringViewItem){
                    new Thread(){
                      public void run(){
                        executeRefactoring(refactoringContext);
                        refactoringViewItem.close();
                      }
                    }
.start();
                  }
                }
;
                refactorintView.showRefactoringView(okAction,refactoringContext.getUsages());
              }
            }
);
          }
        }
);
      }
    }
  }
.start();
}
