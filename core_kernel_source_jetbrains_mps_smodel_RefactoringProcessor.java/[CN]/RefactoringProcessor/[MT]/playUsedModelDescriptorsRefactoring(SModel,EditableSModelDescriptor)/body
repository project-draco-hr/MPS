{
  int currentVersion=usedModelDescriptor.getVersion();
  int usedVersion=model.getUsedVersion(usedModelDescriptor.getSModelReference());
  if (currentVersion > usedVersion) {
    boolean result=false;
    RefactoringHistory refactoringHistory=usedModelDescriptor.getRefactoringHistory();
    for (    RefactoringContext refactoringContext : refactoringHistory.getRefactoringContexts()) {
      if (refactoringContext.getModelVersion() <= usedVersion)       continue;
      result=true;
      playRefactoring(model,refactoringContext);
    }
    model.updateImportedModelUsedVersion(usedModelDescriptor.getSModelReference(),currentVersion);
    return result;
  }
  if (currentVersion < usedVersion) {
    LOG.error("Model version mismatch for import " + usedModelDescriptor.getSModelReference().getSModelFqName() + " in model "+ model.getSModelFqName());
    LOG.error("Used version = " + usedVersion + ", current version = "+ currentVersion);
    model.updateImportedModelUsedVersion(usedModelDescriptor.getSModelReference(),currentVersion);
    LOG.error("Mismatch fixed");
  }
  return false;
}
