{
  final RefactoringNodeMembersAccessModifier modifier=new RefactoringNodeMembersAccessModifier();
  for (  final IModule sourceModule : sourceModels.keySet()) {
    ModelAccess.instance().runWriteAction(new Runnable(){
      public void run(){
        try {
          refactoringContext.setUpMembersAccessModifier(modifier);
          IOperationContext operationContext=new ModuleContext(sourceModule,refactoringContext.getSelectedMPSProject());
          final List<SModel> models=sourceModels.get(sourceModule);
          modifier.addModelsToModify(models);
          SNode.setNodeMemeberAccessModifier(modifier);
          List<SModelDescriptor> descriptors=new ArrayList<SModelDescriptor>();
          for (          SModel model : models) {
            descriptors.add(model.getModelDescriptor());
          }
          new GeneratorManager(operationContext.getComponent(Project.class)).generateModels(descriptors,operationContext,IGenerationType.FILES,progressIndicator,new DefaultMessageHandler(operationContext.getMPSProject()));
        }
  finally {
          SNode.setNodeMemeberAccessModifier(null);
        }
      }
    }
);
  }
}
