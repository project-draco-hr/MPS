{
  if (sourceModels.isEmpty())   return;
  final RefactoringNodeMembersAccessModifier modifier=new RefactoringNodeMembersAccessModifier();
  try {
    final List<RegularSModelDescriptor> descriptors=new ArrayList<RegularSModelDescriptor>();
    ModelAccess.instance().runWriteAction(new Runnable(){
      public void run(){
        refactoringContext.setUpMembersAccessModifier(modifier);
        modifier.addModelsToModify(sourceModels);
        SNode.setNodeMemeberAccessModifier(modifier);
        for (        SModel model : sourceModels) {
          descriptors.add(((RegularSModelDescriptor)model.getModelDescriptor()));
        }
      }
    }
);
    IOperationContext operationContext=ProjectOperationContext.get(refactoringContext.getSelectedProject());
    new GeneratorManager(operationContext.getProject(),new GenerationSettings()).generateModelsFromDifferentModules(operationContext,descriptors,new JavaGenerationHandler());
  }
  finally {
    SNode.setNodeMemeberAccessModifier(null);
  }
}
