{
  refactoringContext.setRefactoring(refactoring);
  final boolean[] success=new boolean[1];
  ThreadUtils.runInUIThreadAndWait(new Runnable(){
    public void run(){
      success[0]=refactoring.askForInfo(refactoringContext);
    }
  }
);
  if (!success[0])   return;
  final boolean show=ModelAccess.instance().runReadAction(new Computable<Boolean>(){
    public Boolean compute(){
      return refactoring.showsAffectedNodes();
    }
  }
);
  if (show) {
    if (findUsages(refactoringContext)) {
      SearchResults usages=refactoringContext.getUsages();
      boolean refactorImmediately=refactoringContext.getRefactoring().refactorImmediatelyIfNoUsages();
      if (usages == null || (usages.getSearchResults().isEmpty() && refactorImmediately)) {
        doExecuteWithDialog(refactoringContext);
      }
 else {
        showRefactoring(refactoringContext);
      }
    }
  }
 else {
    doExecuteWithDialog(refactoringContext);
  }
}
