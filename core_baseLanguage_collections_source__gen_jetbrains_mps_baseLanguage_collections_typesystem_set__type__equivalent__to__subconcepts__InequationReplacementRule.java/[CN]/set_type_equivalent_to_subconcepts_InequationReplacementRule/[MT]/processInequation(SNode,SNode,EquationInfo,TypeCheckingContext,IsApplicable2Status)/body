{
  if (!(SConceptOperations.isSubConceptOf(SNodeOperations.getConceptDeclaration(subtype),NameUtil.nodeFQName(SNodeOperations.getConceptDeclaration(supertype))))) {
    BaseQuickFixProvider intentionProvider=null;
    MessageTarget errorTarget=new NodeMessageTarget();
    IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(equationInfo.getNodeWithError(),"Incompatible types","r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)","1240249913658",intentionProvider,errorTarget);
    HUtil.addAdditionalRuleIdsFromInfo(_reporter_2309309498,equationInfo);
  }
{
    SNode _nodeToCheck_1029348928467=equationInfo.getNodeWithError();
    BaseQuickFixProvider intentionProvider=null;
    EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)","1241473625701",0,intentionProvider);
    _info_12389875345.getOuterRulesIdFromInfo(equationInfo);
    typeCheckingContext.createEquation((SNode)SLinkOperations.getTarget(subtype,"elementType",true),(SNode)SLinkOperations.getTarget(supertype,"elementType",true),_info_12389875345);
  }
}
