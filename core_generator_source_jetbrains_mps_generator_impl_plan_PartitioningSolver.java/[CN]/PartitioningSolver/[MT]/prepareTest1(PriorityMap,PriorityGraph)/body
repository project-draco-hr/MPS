{
  TemplateMappingConfiguration tmcA=new MockMapConfig("A");
  TemplateMappingConfiguration tmcB=new MockMapConfig("B");
  TemplateMappingConfiguration tmcC=new MockMapConfig("C");
  TemplateMappingConfiguration tmcD=new MockMapConfig("D");
  TemplateMappingConfiguration tmcX=new MockMapConfig("X");
  TemplateMappingConfiguration tmcY=new MockMapConfig("Y");
  final List<TemplateMappingConfiguration> allConfigs=Arrays.asList(tmcA,tmcB,tmcC,tmcD,tmcX,tmcY);
  pmap.prepare(allConfigs);
  pmap.updateLock(tmcB,tmcA,new PriorityData(false,Collections.<MappingPriorityRule>emptySet()));
  pmap.updateLock(tmcC,tmcB,new PriorityData(true,Collections.<MappingPriorityRule>emptySet()));
  pmap.updateLock(tmcD,tmcB,new PriorityData(false,Collections.<MappingPriorityRule>emptySet()));
  pmap.updateLock(tmcA,tmcX,new PriorityData(true,Collections.<MappingPriorityRule>emptySet()));
  pmap.updateLock(tmcA,tmcY,new PriorityData(false,Collections.<MappingPriorityRule>emptySet()));
  MappingPriorityRule strictRule=getStrictRule();
  MappingPriorityRule weakRule=getWeakRule();
  pgraph.addEdge(tmcB,Collections.singleton(tmcA),weakRule);
  pgraph.addEdge(tmcC,Collections.singleton(tmcB),strictRule);
  pgraph.addEdge(tmcD,Collections.singleton(tmcB),weakRule);
  pgraph.addEdge(tmcA,Collections.singleton(tmcX),strictRule);
  pgraph.addEdge(tmcA,Collections.singleton(tmcY),weakRule);
  pgraph.finalizeEdges(allConfigs);
}
