{
  if (index >= 0 && index + 1 < ListSequence.fromList(SLinkOperations.getTargets(thisNode,"part",true)).count() && SNodeOperations.isInstanceOf(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"part",true)).getElement(index),"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart") && SNodeOperations.isInstanceOf(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"part",true)).getElement(index + 1),"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart")) {
    SNode leftPart=SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"part",true)).getElement(index),"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart");
    int offset=SPropertyOperations.getString(leftPart,"text").length();
    SNode rightPart=SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"part",true)).getElement(index + 1),"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart");
    String text=(((SPropertyOperations.getString(leftPart,"text") == null || SPropertyOperations.getString(leftPart,"text").length() == 0) ? "" : SPropertyOperations.getString(leftPart,"text"))) + (((SPropertyOperations.getString(rightPart,"text") == null || SPropertyOperations.getString(rightPart,"text").length() == 0) ? "" : SPropertyOperations.getString(rightPart,"text")));
    SPropertyOperations.set(leftPart,"text",text);
    SNodeOperations.deleteNode(rightPart);
    return new NodeCaretPair(leftPart,offset);
  }
  return null;
}
