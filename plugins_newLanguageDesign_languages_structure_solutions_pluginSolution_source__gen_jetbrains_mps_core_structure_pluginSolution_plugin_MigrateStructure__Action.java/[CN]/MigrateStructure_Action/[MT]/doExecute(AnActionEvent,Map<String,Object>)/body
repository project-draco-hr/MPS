{
  try {
    final MessagesViewTool tool=((Project)MapSequence.fromMap(_params).get("project")).getComponent(MessagesViewTool.class);
    if (tool == null) {
      if (LOG.isEnabledFor(Level.ERROR)) {
        LOG.error("cannot get message view tool");
      }
    }
    IMessageHandler mh=tool.newHandler("Migrate structure");
    final Language language=(Language)((SModule)MapSequence.fromMap(_params).get("module"));
    mh.handle(new Message(MessageKind.INFORMATION,"converting " + language.getModuleName()));
    SNode converted=new LanguageConverter(language,mh).convert();
    SModel desc;
    if (language.isPackaged()) {
      desc=SModelRepository.getInstance().getModelDescriptor("jetbrains.mps.core.stubs");
      if (!(desc instanceof DefaultSModelDescriptor)) {
        mh.handle(new Message(MessageKind.ERROR,"cannot find jetbrains.mps.core.stubs"));
        return;
      }
      SNode existingRoot=ListSequence.fromList(SModelOperations.getRoots(((SModel)desc),"jetbrains.mps.core.structure.structure.SStructureContainer")).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return eq_5hzyna_a0a0a0a0a0a3a8a0a6(SPropertyOperations.getString(it,"name"),language.getModuleName());
        }
      }
);
      if (existingRoot == null) {
        desc.addRootNode(converted);
      }
 else {
        mh.handle(new Message(MessageKind.INFORMATION,"merging is not supported yet!"));
      }
    }
 else {
      Language newStructureLanguage=(Language)MPSModuleRepository.getInstance().getModuleByFqName("jetbrains.mps.core.structure");
      language.addUsedLanguage(newStructureLanguage.getModuleReference());
      language.addDependency(PersistenceFacade.getInstance().createModuleReference("c79685c0-f0f5-44ce-8c36-9ec48f392de5(jetbrains.mps.core.stubs)"),true);
      String newModelName=language.getModuleName() + ".core";
      desc=SModelRepository.getInstance().getModelDescriptor(newModelName);
      SModel newStructure;
      if (desc instanceof DefaultSModelDescriptor) {
        MergeSession session=new MergeSession(mh);
        session.replace((DefaultSModelDescriptor)desc,Sequence.<SNode>singleton(converted));
        session.restoreRefs();
        session.apply();
        mh.handle(new Message(MessageKind.INFORMATION,"merged"));
      }
 else {
        DefaultModelRoot root=(DefaultModelRoot)Sequence.fromIterable(((Iterable<ModelRoot>)language.getModelRoots())).where(new IWhereFilter<ModelRoot>(){
          public boolean accept(          ModelRoot it){
            return it instanceof DefaultModelRoot;
          }
        }
).first();
        newStructure=root.createModel(newModelName);
        if (newStructure == null) {
          mh.handle(new Message(MessageKind.INFORMATION,"cannot create model `" + newModelName + "': ()"));
          return;
        }
        ((jetbrains.mps.smodel.SModel)newStructure).addLanguage(newStructureLanguage.getModuleReference());
        newStructure.addRootNode(converted);
        mh.handle(new Message(MessageKind.INFORMATION,"new model created"));
      }
    }
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "MigrateStructure",t);
    }
  }
}
