{
  final OutputViewTool viewTool=OutputViewTool.getOutputViewTool(context.getProject());
  viewTool.clear();
  List<SNode> roots=new ArrayList<SNode>(status.getOutputModel().getRoots());
  Collections.sort(roots,new Comparator<SNode>(){
    public int compare(    SNode o1,    SNode o2){
      String name1=o1.getName();
      String name2=o2.getName();
      if (name1 == null && name2 == null) {
        return o1.hashCode() - o2.hashCode();
      }
      if (name1 == null)       return -1;
      if (name2 == null)       return 1;
      return name1.compareTo(name2);
    }
  }
);
  boolean wereErrors=false;
  for (  SNode root : roots) {
    TextGenerationResult result=TextGenerationUtil.generateText(context,root);
    wereErrors|=result.hasErrors();
    final String nodeText=result.getText();
    ThreadUtils.runInUIThreadNoWait(new Runnable(){
      public void run(){
        viewTool.append(nodeText);
        viewTool.append("\n");
        viewTool.append("\r\n-------------------------------------------------------------------------------\n");
      }
    }
);
  }
  viewTool.openToolLater(true);
  return !wereErrors;
}
