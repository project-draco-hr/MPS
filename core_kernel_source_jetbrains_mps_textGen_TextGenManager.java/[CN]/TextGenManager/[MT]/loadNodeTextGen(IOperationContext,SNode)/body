{
  ConceptDeclaration cd=(ConceptDeclaration)node.getConceptDeclarationAdapter();
  while (cd != SModelUtil_new.getBaseConcept()) {
    Language l=SModelUtil_new.getDeclaringLanguage(cd,GlobalScope.getInstance());
    String packageName=NameUtil.namespaceFromConcept(cd);
    String className=cd.getName();
    String textgenClassname=packageName + ".textGen." + className+ "_TextGen";
    try {
      Class textgenClass=l.getClass(textgenClassname);
      if (textgenClass != null) {
        SNodeTextGen result=(SNodeTextGen)textgenClass.newInstance();
        result.setContext(context);
        return result;
      }
    }
 catch (    InstantiationException e) {
      LOG.error(e,node);
    }
catch (    IllegalAccessException e) {
      LOG.error(e,node);
    }
    cd=cd.getExtends();
    if (cd == null) {
      cd=SModelUtil_new.getBaseConcept();
    }
  }
  DefaultTextGen result=new DefaultTextGen();
  result.setContext(context);
  return result;
}
