{
  ClassLoaderManager.getInstance().removeReloadHandler(myReloadListener);
  GlobalSModelEventsManager.getInstance().removeGlobalModelListener(myGlobalModelListener);
  ChangeListManager.getInstance(myProject).removeChangeListListener(myChangeListListener);
  SModelRepository.getInstance().removeModelRepositoryListener(myModelRepositoryListener);
  for (  ModelChangesManager modelChangesManager : Sequence.<ModelChangesManager>fromIterable(MapSequence.fromMap(myModelChanges).values())) {
    modelChangesManager.dispose(false);
  }
  MapSequence.fromMap(myModelChanges).clear();
  myCommandQueue.dispose();
}
