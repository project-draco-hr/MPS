{
  if (!(myEvaluationLogic.getDebugSession().isStepEnabled())) {
    setErrorText("Program should be paused on breakpoint to evaluate.");
    return;
  }
  try {
    final Evaluator evaluator=myEvaluationLogic.evaluate();
    setEvaluating();
    ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
      public void run(){
        try {
          IValueProxy evaluatedValue=evaluator.evaluate();
          if (evaluatedValue != null) {
            setSuccess(evaluatedValue);
          }
 else {
            setFailure(null,"Evaluation returned null.");
          }
        }
 catch (        EvaluationException ex) {
          setFailure(ex,null);
          EvaluationDialog.LOG.error(ex);
        }
      }
    }
);
  }
 catch (  InvalidEvaluatedExpressionException e) {
    setFailure(e.getCause(),null);
  }
catch (  InvocationTargetEvaluationException e) {
    setFailure(e.getCause(),null);
    LOG.error(e.getCause());
  }
catch (  EvaluationException e) {
    setFailure(e,null);
    LOG.error(e);
  }
}
