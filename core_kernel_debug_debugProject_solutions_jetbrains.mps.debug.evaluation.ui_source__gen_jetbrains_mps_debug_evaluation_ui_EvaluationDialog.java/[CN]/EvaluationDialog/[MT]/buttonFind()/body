{
  try {
    Set<IClassPathItem> classpaths=new HashSet<IClassPathItem>();
    for (    Language language : this.myLanguages) {
      IClassPathItem item=language.getClassPathItem();
      classpaths.add(item);
    }
    classpaths.add(new JarFileClassPathItem(PathManager.getHomePath() + NameUtil.pathFromNamespace(".lib.tools.") + "tools.jar"));
    final GenerationResult generationResult=this.myEditor.generate(classpaths);
    String fqName=generationResult.getModelDescriptor().getLongName() + ".EvaluatorInstance";
    ClassLoader loader=generationResult.getLoader(this.myUiState.getClass().getClassLoader());
    Class<?> aClass=Class.forName(fqName,true,loader);
    Evaluator evaluator=(Evaluator)aClass.getConstructor(DebugSession.UiState.class).newInstance(this.myUiState);
    ValueProxy resultProxy=evaluator.evaluate();
    this.myTree.setResultProxy(resultProxy);
    this.myTree.rebuildNow();
  }
 catch (  Throwable t) {
    t.printStackTrace();
  }
}
