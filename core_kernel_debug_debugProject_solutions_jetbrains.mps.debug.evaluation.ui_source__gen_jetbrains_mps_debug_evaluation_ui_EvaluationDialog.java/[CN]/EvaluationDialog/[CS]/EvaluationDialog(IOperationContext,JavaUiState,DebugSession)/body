{
  super(context.getMainFrame(),"Evaluate");
  this.myContext=context;
  this.setSize(new Dimension(500,500));
  this.setModal(false);
  this.myEvaluationData=AbstractEvaluationLogic.createInstance(context,uiState,debugSession);
  myEvaluationData.addGenerationListener(new _FunctionTypes._void_P1_E0<SNode>(){
    public void invoke(    SNode result){
      EvaluationDialog.this.updateGenerationResultTab(result);
    }
  }
);
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      EvaluationDialog.this.myEditor=new EmbeddableEditor(new ModuleContext(EvaluationDialog.this.myEvaluationData.getModule(),EvaluationDialog.this.myEvaluationData.getModule().getMPSProject()),EvaluationDialog.this.myEvaluationData.getModule(),EvaluationDialog.this.myEvaluationData.getRootToShow(),myEvaluationData.getNodeToShow(),true);
      myEvaluationData.setModel(myEditor.getModel());
      for (      Language language : EvaluationDialog.this.myEvaluationData.getRequiredLanguages()) {
        EvaluationDialog.this.myEditor.addLanguage(language);
      }
    }
  }
);
  this.myPanel.add(this.myEditor.getComponenet(),BorderLayout.NORTH);
  this.myTree=new EvaluationDialog.MyTree();
  this.myPanel.add(new JScrollPane(this.myTree),BorderLayout.CENTER);
  this.myTabbedPane.addTab("Main",myPanel);
  addWindowListener(new WindowAdapter(){
    @Override public void windowClosed(    WindowEvent event){
      EvaluationDialog.this.myEditor.disposeEditor();
      EvaluationDialog.this.myEvaluationData.getModule().dispose();
    }
  }
);
}
