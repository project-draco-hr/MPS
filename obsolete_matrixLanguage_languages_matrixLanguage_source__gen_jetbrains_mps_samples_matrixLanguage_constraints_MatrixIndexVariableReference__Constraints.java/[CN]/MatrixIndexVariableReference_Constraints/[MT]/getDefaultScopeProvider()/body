{
  return new BaseReferenceScopeProvider(){
    @Override public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferenceConstraintsContext _context){
      List<SNode> nodes=SNodeOperations.getAncestors(_context.getEnclosingNode(),null,false);
      List<SNode> vars=new ArrayList<SNode>();
      for (      SNode node : nodes) {
        if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.samples.matrixLanguage.structure.ForEachMatrixElement")) {
          ListSequence.<SNode>fromList(vars).addElement(SLinkOperations.getTarget(SNodeOperations.cast(node,"jetbrains.mps.samples.matrixLanguage.structure.ForEachMatrixElement"),"column",true));
          ListSequence.<SNode>fromList(vars).addElement(SLinkOperations.getTarget(SNodeOperations.cast(node,"jetbrains.mps.samples.matrixLanguage.structure.ForEachMatrixElement"),"row",true));
        }
      }
      SimpleSearchScope result=new SimpleSearchScope(vars);
      return result;
    }
    @Override public SNodePointer getSearchScopeValidatorNode(){
      return breakingNode_gsum16_a0a1a0a0a1;
    }
  }
;
}
