{
  ModelAccess.instance().flushEventQueue();
  for (  Project project : SetSequence.fromSetWithValues(new HashSet<Project>(),openedProjects)) {
    disposeProject(project);
  }
  PathMacros.getInstance().removeMacrosProvider(macroProvider);
  for (  LibraryContributor libContributor : Sequence.fromIterable(libContributors)) {
    LibraryInitializer.getInstance().removeContributor(libContributor);
  }
  MpsPlatform.dispose();
  ActiveEnvironment.deactivateEnvironment(this);
}
