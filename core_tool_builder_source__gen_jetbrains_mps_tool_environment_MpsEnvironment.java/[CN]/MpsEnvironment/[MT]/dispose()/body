{
  ModelAccess.instance().flushEventQueue();
  for (  Project project : SetSequence.fromSet(myContainer.getProjects())) {
    disposeProject(project.getProjectFile());
  }
  PathMacros.getInstance().removeMacrosProvider(myMacrosProvider);
  for (  LibraryContributor libContributor : SetSequence.fromSet(myLibContributors)) {
    LibraryInitializer.getInstance().removeContributor(libContributor);
  }
  MpsPlatform.dispose();
  ActiveEnvironment.deactivateEnvironment(this);
}
