{
  ModelAccess.instance().flushEventQueue();
  for (  Project project : SetSequence.fromSet(myContainer.getProjects())) {
    disposeProject(project.getProjectFile());
  }
  PathMacros.getInstance().removeMacrosProvider(myMacrosProvider);
  for (  LibraryContributor libContributor : Sequence.fromIterable(myLibContributors)) {
    LibraryInitializer.getInstance().removeContributor(libContributor);
  }
  myPlatformLoader.dispose();
  myPlatformLoader=null;
  ActiveEnvironment.deactivateEnvironment(this);
}
