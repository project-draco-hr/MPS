{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(1381097486113260572l,-6346909095260771222l),5425713840853785828l,5425713840853785829l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(1381097486113260572l,-6346909095260771222l),5425713840853785828l,5425713840853785829l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return SLinkOperations.getChildren(BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.builders.structure.BaseSimpleBuilderDeclaration",true,false),"virtual_getContextDeclaration_6254726786820551255",new Object[]{}),MetaAdapterFactory.getContainmentLink(new UUID(1381097486113260572l,-6346909095260771222l),7288041816792374840l,5425713840853683089l,"parameter"));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_seakpt_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
