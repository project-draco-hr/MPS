{
  final List<URL> urls=new ArrayList<URL>();
  for (  RealClassPathItem flatten : classPath.flatten()) {
    try {
      urls.add(new File(flatten.getPath()).toURI().toURL());
    }
 catch (    MalformedURLException e) {
      e.printStackTrace();
    }
  }
  final URL[] urlsArr=urls.toArray(new URL[urls.size()]);
  return new InstrumentationClassFinder(urlsArr){
    @Override protected InputStream lookupClassBeforeClasspath(    String internalClassName){
      for (      ClassFile cf : myCompiledClassFiles) {
        String fqName=NameUtil.pathFromNamespace(convertCompoundToFqName(cf.getCompoundName()));
        if (internalClassName.equals(fqName)) {
          return new ByteArrayInputStream(cf.getBytes());
        }
      }
      return null;
    }
  }
;
}
