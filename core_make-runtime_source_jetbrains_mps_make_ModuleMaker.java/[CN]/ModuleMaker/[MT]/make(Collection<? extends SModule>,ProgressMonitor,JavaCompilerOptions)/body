{
  CompositeTracer tracer=new CompositeTracer(myTracer,monitor,String.format(BUILDING_MODULES_MSG,modules.size()),12);
  try {
    tracer.push(COLLECTING_DEPENDENCIES_MSG);
    Set<SModule> candidates=new LinkedHashSet<>(new GlobalModuleDependenciesManager(modules).getModules(Deptype.COMPILE));
    tracer.pop();
    tracer.push(LOADING_DEPENDENCIES_MSG);
    Dependencies dependencies=new Dependencies(candidates);
    tracer.pop();
    tracer.push(CALCULATING_DEPENDENCIES_TO_COMPILE_MSG);
    Set<SModule> toCompile=buildDirtyModulesClosure(new ModulesContainer(candidates,dependencies));
    tracer.pop();
    tracer.push(BUILDING_MODULE_CYCLES_MSG);
    List<Set<SModule>> schedule=new StronglyConnectedModules<>(toCompile).getStronglyConnectedComponents();
    tracer.pop();
    return compileCycles(compilerOptions,schedule,tracer.subTracer(toCompile.size()),dependencies);
  }
  finally {
    tracer.done();
    final String report=tracer.getReport();
    if (report != null) {
      handle(new Message(MessageKind.INFORMATION,report));
    }
  }
}
