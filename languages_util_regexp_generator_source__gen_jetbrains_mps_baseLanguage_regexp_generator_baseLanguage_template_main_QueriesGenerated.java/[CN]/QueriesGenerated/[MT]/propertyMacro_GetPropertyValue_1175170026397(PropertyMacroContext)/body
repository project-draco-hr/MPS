{
  SNode parens=SLinkOperations.getTarget(_context.getNode(),MetaAdapterFactory.getReferenceLink(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1117987ff5eL,0x11179881f99L,"match"));
  SNode c=RegexUtil.findRegexpUsingConstructionFor(_context.getNode());
  List<SNode> parensList=new ArrayList<SNode>();
  Regexp__BehaviorDescriptor.getString_idhMuDF1A.invoke(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(c,MetaAdapterFactory.getContainmentLink(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1117ecbc07aL,0x1117ecc427cL,"regexp")),MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1117648961dL,"jetbrains.mps.baseLanguage.regexp.structure.InlineRegexpExpression")),MetaAdapterFactory.getContainmentLink(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1117648961dL,0x11176490e08L,"regexp")),parensList);
  return 1 + ListSequence.fromList(parensList).indexOf(parens);
}
