{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(0x443f4c36fcf54eb6L,0x95008d06ed259e3eL,0x118bc7942feL,0x118bc796c90L),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x443f4c36fcf54eb6L,0x95008d06ed259e3eL,0x118bc7942feL,0x118bc796c90L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          List<SNode> classifiers=SModelOperations.rootsIncludingImported(_context.getModel(),MetaAdapterFactory.getInterfaceConcept(0x443f4c36fcf54eb6L,0x95008d06ed259e3eL,0x118bc6b2af5L,"jetbrains.mps.baseLanguage.classifiers.structure.IClassifier"));
          classifiers=ListSequence.fromList(classifiers).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return SNodeOperations.getConceptDeclaration(IClassifier_BehaviorDescriptor.createType_idhEwJimy.invoke(it)) == MetaAdapterFactory.getConcept(0x443f4c36fcf54eb6L,0x95008d06ed259e3eL,0x118bc7942feL,"jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierType").getDeclarationNode();
            }
          }
).toListSequence();
          return classifiers;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_8s7bhl_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
