{
  final String unitType=getStaticContextTypeName();
  if (unitType == null) {
    return null;
  }
  SNode result=SConceptOperations.createNewNode("jetbrains.mps.debugger.java.evaluation.structure.UnitNode",null);
  SNode lowLevelType=createClassifierType.invoke(unitType);
  SNode highLevelNode=getStaticContextNode();
  if ((highLevelNode != null) && SNodeOperations.isInstanceOf(highLevelNode,"jetbrains.mps.baseLanguage.structure.Classifier")) {
    SLinkOperations.setTarget(result,"debuggedType",VariableDescription.createDebuggedType(lowLevelType,((SNode)BehaviorManager.getInstance().invoke(Object.class,SNodeOperations.cast(highLevelNode,"jetbrains.mps.baseLanguage.structure.Classifier"),"virtual_getThisType_3305065273710880775",new Class[]{SNode.class}))),true);
  }
 else   if ((highLevelNode != null) && SNodeOperations.isInstanceOf(highLevelNode,"jetbrains.mps.baseLanguage.classifiers.structure.IClassifier")) {
    SLinkOperations.setTarget(result,"debuggedType",VariableDescription.createDebuggedType(lowLevelType,((SNode)BehaviorManager.getInstance().invoke(Object.class,SNodeOperations.cast(highLevelNode,"jetbrains.mps.baseLanguage.classifiers.structure.IClassifier"),"virtual_createType_1213877527970",new Class[]{SNode.class}))),true);
  }
 else {
    SLinkOperations.setTarget(result,"debuggedType",VariableDescription.createDebuggedType(lowLevelType,null),true);
  }
  SPropertyOperations.set(result,"highLevelNodeId",check_4zsmpx_a0a0g0h(highLevelNode).toString());
  return result;
}
