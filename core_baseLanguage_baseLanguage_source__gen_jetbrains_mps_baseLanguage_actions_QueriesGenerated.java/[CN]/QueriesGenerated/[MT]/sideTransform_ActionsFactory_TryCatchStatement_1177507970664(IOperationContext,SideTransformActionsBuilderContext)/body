{
  List<INodeSubstituteAction> result=ListSequence.<INodeSubstituteAction>fromArray();
{
    SNode concept=SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.TryCatchStatement");
    ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(concept,_context.getSourceNode()){
      public SNode doSubstitute(      String pattern){
        SLinkOperations.addNewChild(_context.getSourceNode(),"catchClause","jetbrains.mps.baseLanguage.structure.CatchClause");
        return ListSequence.fromList(SLinkOperations.getTargets(_context.getSourceNode(),"catchClause",true)).first();
      }
      public String getMatchingText(      String pattern){
        return "catch";
      }
      public String getVisibleMatchingText(      String pattern){
        return this.getMatchingText(pattern);
      }
    }
);
  }
  return result;
}
