{
  List<INodeSubstituteAction> result=new ArrayList<INodeSubstituteAction>();
{
    AbstractConceptDeclaration concept=SModelUtil_new.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Expression",operationContext.getScope());
    result.add(new AbstractSideTransformHintSubstituteAction(BaseAdapter.fromAdapter(concept),_context.getSourceNode()){
      public SNode doSubstitute(      String pattern){
        System.out.println("Test!");
        return _context.getSourceNode();
      }
      public String getMatchingText(      String pattern){
        return "test";
      }
    }
);
  }
  return result;
}
