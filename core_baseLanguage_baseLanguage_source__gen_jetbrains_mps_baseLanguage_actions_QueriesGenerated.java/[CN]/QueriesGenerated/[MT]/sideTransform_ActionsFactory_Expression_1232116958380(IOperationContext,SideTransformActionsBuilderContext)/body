{
  List<INodeSubstituteAction> result=new ArrayList<INodeSubstituteAction>();
{
    Calculable calc=new Calculable(){
      public Object calculate(){
        return SNodeOperations.getParent(_context.getSourceNode());
      }
    }
;
    SNode node=(SNode)calc.calculate();
    result.addAll(ModelActions.createRightTransformHintSubstituteActions(node,CellSide.LEFT,_context.getTransformationTag(),operationContext));
  }
  return result;
}
