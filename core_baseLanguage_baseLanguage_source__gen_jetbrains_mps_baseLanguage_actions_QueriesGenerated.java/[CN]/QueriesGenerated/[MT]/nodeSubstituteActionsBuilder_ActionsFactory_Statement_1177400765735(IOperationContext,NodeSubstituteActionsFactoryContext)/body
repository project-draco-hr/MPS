{
  List<INodeSubstituteAction> result=new ArrayList<INodeSubstituteAction>();
{
    AbstractConceptDeclaration concept=SModelUtil_new.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Statement",operationContext.getScope());
    Calculable calc=new Calculable(){
      public Object calculate(){
        List<SNode> concepts=ListSequence.<SNode>fromArray(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.BreakStatement"),SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ContinueStatement"));
        return concepts;
      }
    }
;
    Iterable queryResult=(Iterable)calc.calculate();
    if (queryResult != null) {
      for (      Object item : queryResult) {
        List<INodeSubstituteAction> defaultActions=ChildSubstituteActionsHelper.createDefaultActions((ConceptDeclaration)BaseAdapter.fromNode((SNode)item),_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter(),operationContext);
        result.addAll(defaultActions);
      }
    }
  }
  return result;
}
