{
  JavaParser parser=new JavaParser();
  ModuleReference mref=new ModuleReference("jetbrains.mps.ide.java.tests");
  SModelReference modRef=StubHelper.uidForPackageInStubs("unused",LanguageID.JAVA,MPSModuleRepository.getInstance().getModuleById(ModuleId.fromString("c3786d2b-aba2-45e5-8de0-1124fd14259b")).getModuleReference());
  SModel mdl=new SModel(modRef);
  List<SNode> res=parser.parse(code,SModelOperations.getModelName(mdl),FeatureKind.CLASS_STUB,true).getNodes();
  Assert.assertSame(ListSequence.fromList(res).count(),1);
  SNode result=SNodeOperations.cast(res.get(0),"jetbrains.mps.baseLanguage.structure.Classifier");
  System.out.println("Non static: " + SPropertyOperations.getBoolean(result,"nonStatic"));
  NodePatcher.removeStatements(expected);
  NodePatcher.fixNonStatic(expected);
  NodePatcher.fixNonStatic(result);
  Map<SNode,SNode> nodeMap=MapSequence.fromMap(new HashMap<SNode,SNode>());
  buildClassifierNodeMap(result,expected,nodeMap);
  NodeDifference diff=NodesMatcher.matchNodes(result,expected,nodeMap);
  Assert.assertEquals(null,diff);
}
