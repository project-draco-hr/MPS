{
  List<SNode> leftMethods=new ArrayList<SNode>();
  List<SNode> rightMethods=new ArrayList<SNode>();
  ListSequence.fromList(leftMethods).addSequence(Sequence.fromIterable(BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),left,"jetbrains.mps.baseLanguage.structure.Classifier","call_methods_5292274854859311639",new Object[]{})));
  ListSequence.fromList(rightMethods).addSequence(Sequence.fromIterable(BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),right,"jetbrains.mps.baseLanguage.structure.Classifier","call_methods_5292274854859311639",new Object[]{})));
  Map<String,SNode> rightIndex=MapSequence.fromMap(new HashMap<String,SNode>());
  for (  SNode rightMthd : ListSequence.fromList(rightMethods)) {
    MapSequence.fromMap(rightIndex).put(SPropertyOperations.getString(rightMthd,"name"),rightMthd);
  }
  for (  SNode leftMthd : ListSequence.fromList(leftMethods)) {
    buildMethodBodyNodeMap(leftMthd,MapSequence.fromMap(rightIndex).get(SPropertyOperations.getString(leftMthd,"name")),nodeMap);
  }
}
