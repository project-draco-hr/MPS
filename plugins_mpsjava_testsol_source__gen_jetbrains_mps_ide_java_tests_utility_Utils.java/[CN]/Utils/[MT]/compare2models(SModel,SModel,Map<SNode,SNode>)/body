{
  boolean wereErrors=false;
  List<SNode> binRoots=SModelOperations.getRoots(left,null);
  List<SNode> srcRoots=SModelOperations.getRoots(right,null);
  binRoots=ListSequence.fromList(binRoots).sort(new ISelector<SNode,String>(){
    public String select(    SNode it){
      return SPropertyOperations.getString(SNodeOperations.cast(it,"jetbrains.mps.baseLanguage.structure.Classifier"),"name");
    }
  }
,true).toListSequence();
  srcRoots=ListSequence.fromList(srcRoots).sort(new ISelector<SNode,String>(){
    public String select(    SNode it){
      return SPropertyOperations.getString(SNodeOperations.cast(it,"jetbrains.mps.baseLanguage.structure.Classifier"),"name");
    }
  }
,true).toListSequence();
  System.out.println("Checking " + SModelOperations.getModelName(left));
  List<NodeDifference> diff=NodesMatcher.matchNodes(binRoots,srcRoots,nodeMap);
  if (diff != null) {
    wereErrors=true;
    System.err.println("Diff: " + diff);
  }
  return wereErrors;
}
