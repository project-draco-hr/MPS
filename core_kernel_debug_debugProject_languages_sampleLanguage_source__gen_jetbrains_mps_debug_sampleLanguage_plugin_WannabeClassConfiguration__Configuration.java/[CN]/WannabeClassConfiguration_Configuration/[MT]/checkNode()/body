{
  if (WannabeClassConfiguration_Configuration.this.getStateObject().modelId != null && WannabeClassConfiguration_Configuration.this.getStateObject().nodeId != null) {
    final SNode node=ModelAccess.instance().runReadAction(new Computable<SNode>(){
      public SNode compute(){
        return WannabeClassConfiguration_Configuration.this.getNode();
      }
    }
);
    if ((node == null)) {
      return MultiTuple.<SNode,String>from((SNode)null,"node is not selected or does not exist");
    }
{
      boolean isApplicable=new _FunctionTypes._return_P0_E0<Boolean>(){
        public Boolean invoke(){
          final Wrappers._int count=new Wrappers._int(0);
          ModelAccess.instance().runReadAction(new Runnable(){
            public void run(){
              for (              SNode method : SLinkOperations.getTargets(node,"method",true)) {
                if (SPropertyOperations.getBoolean(method,"isMain")) {
                  count.value++;
                }
              }
            }
          }
);
          return count.value == 1;
        }
      }
.invoke();
      if (!(isApplicable)) {
        return MultiTuple.<SNode,String>from((SNode)null,"can't run selected node");
      }
    }
    return MultiTuple.<SNode,String>from(node,(String)null);
  }
 else {
    return MultiTuple.<SNode,String>from((SNode)null,"node is not selected");
  }
}
