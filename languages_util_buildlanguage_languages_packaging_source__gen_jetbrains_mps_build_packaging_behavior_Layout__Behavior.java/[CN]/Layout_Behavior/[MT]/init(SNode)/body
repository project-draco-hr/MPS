{
  Map<String,String> vars=MapSequence.<String,String>fromMap(new HashMap<String,String>());
  MapSequence.<String,String>fromMap(vars).put("basedir","basedir");
  MapSequence.<String,String>fromMap(vars).put("\\n","line.separator");
  MapSequence.<String,String>fromMap(vars).put("/","file.separator");
  MapSequence.<String,String>fromMap(vars).put(":","path.separator");
  MapSequence.<String,String>fromMap(vars).put("date","DSTAMP");
  if (ListSequence.<SNode>fromList(SLinkOperations.getTargets(thisNode,"configuration",true)).isEmpty()) {
    SLinkOperations.addChild(thisNode,"configuration",SConceptOperations.createNewNode("jetbrains.mps.build.packaging.structure.Configuration",null));
  }
  SPropertyOperations.set(ListSequence.<SNode>fromList(SLinkOperations.getTargets(thisNode,"configuration",true)).first(),"name","default");
  for (  String s : SetSequence.<String>fromSet(MapSequence.fromMap(vars).keySet())) {
    SNode var=SConceptOperations.createNewNode("jetbrains.mps.build.packaging.structure.Variable",null);
    SPropertyOperations.set(var,"name",s);
    SPropertyOperations.set(var,"antName",MapSequence.<String,String>fromMap(vars).get(s));
    SLinkOperations.addChild(thisNode,"builtInVariable",var);
  }
  SPropertyOperations.set(thisNode,"compile","" + true);
  SLinkOperations.setTarget(thisNode,"deployDirectory",new Layout_Behavior.QuotationClass_g9j203_a2a01a0().createNode(Layout_Behavior.getBasedirName_1226509010730()),true);
  SLinkOperations.setTarget(thisNode,"scriptsDirectory",new Layout_Behavior.QuotationClass_g9j203_a2a11a0().createNode(Layout_Behavior.getBasedirName_1226509010730()),true);
}
