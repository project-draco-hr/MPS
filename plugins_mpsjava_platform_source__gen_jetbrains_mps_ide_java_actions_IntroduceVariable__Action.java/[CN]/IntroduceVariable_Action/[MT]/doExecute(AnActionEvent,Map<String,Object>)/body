{
  try {
    FeatureUsageTracker.getInstance().triggerFeatureUsed("refactoring.introduceVariable");
    final IntroduceLocalVariableRefactoring refactoring=new IntroduceLocalVariableRefactoring();
    final Wrappers._T<String> error=new Wrappers._T<String>();
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        error.value=refactoring.init(((SNode)MapSequence.fromMap(_params).get("node")),((EditorComponent)MapSequence.fromMap(_params).get("component")));
      }
    }
);
    if (error.value == null) {
      final LocalVariableIntroducer introducer=new LocalVariableIntroducer(((Frame)MapSequence.fromMap(_params).get("frame")),refactoring,((EditorComponent)MapSequence.fromMap(_params).get("component")),((EditorContext)MapSequence.fromMap(_params).get("context")));
      introducer.invoke(event.getDataContext());
    }
 else {
      JOptionPane.showMessageDialog(((EditorComponent)MapSequence.fromMap(_params).get("component")),error.value,"Error",JOptionPane.ERROR_MESSAGE);
    }
  }
 catch (  Throwable t) {
    if (log.isErrorEnabled()) {
      log.error("User's action execute method failed. Action:" + "IntroduceVariable",t);
    }
  }
}
