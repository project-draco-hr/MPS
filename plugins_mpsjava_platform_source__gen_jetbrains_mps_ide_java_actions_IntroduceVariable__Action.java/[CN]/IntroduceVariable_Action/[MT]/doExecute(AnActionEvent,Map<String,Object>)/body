{
  FeatureUsageTracker.getInstance().triggerFeatureUsed("refactoring.introduceVariable");
  final IntroduceLocalVariableRefactoring refactoring=new IntroduceLocalVariableRefactoring();
  final SNode nodeToRefactor=new ModelComputeRunnable<SNode>(new Computable<SNode>(){
    public SNode compute(){
      return SNodeOperations.getNodeAncestor(((SNode)MapSequence.fromMap(_params).get("node")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506fL,"jetbrains.mps.baseLanguage.structure.Expression"),true,false);
    }
  }
).runRead(((EditorContext)MapSequence.fromMap(_params).get("editorContext")).getRepository().getModelAccess());
  final Wrappers._T<String> error=new Wrappers._T<String>();
  ((EditorContext)MapSequence.fromMap(_params).get("editorContext")).getRepository().getModelAccess().runReadAction(new Runnable(){
    public void run(){
      error.value=refactoring.init(nodeToRefactor,((EditorComponent)MapSequence.fromMap(_params).get("component")));
    }
  }
);
  if (error.value == null) {
    final LocalVariableIntroducer introducer=new LocalVariableIntroducer(((Frame)MapSequence.fromMap(_params).get("frame")),refactoring,((EditorComponent)MapSequence.fromMap(_params).get("component")),((EditorContext)MapSequence.fromMap(_params).get("editorContext")));
    introducer.invoke(event.getDataContext());
  }
 else {
    JOptionPane.showMessageDialog(((EditorComponent)MapSequence.fromMap(_params).get("component")),error.value,"Error",JOptionPane.ERROR_MESSAGE);
  }
}
