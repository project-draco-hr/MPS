{
  setModal(true);
  myValues.addAll(options);
  DataContext dataContext=DataManager.getInstance().getDataContext();
  final MPSProject mpsProject=MPSDataKeys.MPS_PROJECT.getData(dataContext);
  BaseStringModel goToStringModel=new BaseStringModel(mpsProject){
    public NavigationItem doGetNavigationItem(    final String string){
      return new BaseStringItem(string){
        public void navigate(        boolean requestFocus){
        }
      }
;
    }
    @Override public String[] find(    boolean checkboxState){
      return myValues.toArray(new String[myValues.size()]);
    }
    public String[] find(    IScope scope){
      throw new UnsupportedOperationException("must not be used");
    }
    @Nullable public String getPromptText(){
      return "Select:";
    }
    @Override public boolean loadInitialCheckBoxState(){
      return false;
    }
  }
;
  myChooser=new SmartChooseByNamePanel(goToStringModel,false);
  myChooser.invoke(new Callback(){
    public void elementChosen(    Object element){
      if (!myOkDone) {
        myOkDone=true;
        onOk();
      }
    }
  }
,ModalityState.current(),false);
}
