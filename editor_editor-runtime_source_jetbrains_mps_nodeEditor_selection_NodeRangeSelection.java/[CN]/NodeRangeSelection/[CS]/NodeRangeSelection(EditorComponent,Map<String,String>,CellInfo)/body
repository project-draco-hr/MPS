{
  super(editorComponent);
  if (cellInfo != null) {
    throw new SelectionStoreException("Non-null CellInfo object passed as a parameter: " + cellInfo);
  }
  myRole=properties.get(ROLE_PROPERTY_NAME);
  if (myRole == null) {
    throw new SelectionStoreException("Role property missed");
  }
  myModelReference=properties.get(MODEL_ID_PROPERTY_NAME);
  if (myModelReference == null) {
    throw new SelectionStoreException("Model ID property missed");
  }
  SModel sModelDescriptor;
  try {
    final SModelReference modelRef=PersistenceFacade.getInstance().createModelReference(myModelReference);
    sModelDescriptor=modelRef.resolve(editorComponent.getEditorContext().getRepository());
  }
 catch (  Exception ex) {
    SelectionRestoreException sre=new SelectionRestoreException();
    sre.initCause(ex);
    throw sre;
  }
  if (sModelDescriptor == null) {
    throw new SelectionRestoreException();
  }
  myFirstNode=findNode(sModelDescriptor,properties,FIRST_NODE_ID_PROPERTY_NAME);
  myLastNode=findNode(sModelDescriptor,properties,LAST_NODE_ID_PROPERTY_NAME);
  myParentNode=findNode(sModelDescriptor,properties,PARENT_NODE_ID_PROPERTY_NAME);
  if (myParentNode != myFirstNode.getParent() || myParentNode != myLastNode.getParent()) {
    throw new SelectionRestoreException();
  }
  if (!myRole.equals(myFirstNode.getRoleInParent()) || !myRole.equals(myLastNode.getRoleInParent())) {
    throw new SelectionRestoreException();
  }
  myFilter=createSelectionFilter(properties);
  myEmptyCellId=properties.get(EMPTY_CELL_ID);
  try {
    initSelectedCells();
  }
 catch (  CellNotFoundException e) {
    throw new SelectionRestoreException();
  }
}
