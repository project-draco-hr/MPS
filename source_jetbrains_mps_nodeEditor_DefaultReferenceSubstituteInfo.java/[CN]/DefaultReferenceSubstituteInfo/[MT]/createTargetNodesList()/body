{
  List<SemanticNode> list=new LinkedList<SemanticNode>();
  SemanticTypeDeclaration targetType=myLinkDeclaration.getTarget();
  SemanticNode parentNode=mySourceNode.getParent();
  while (parentNode != null) {
    if (SemanticModelUtil.isInstanceOfType(parentNode,targetType)) {
      list.add(parentNode);
    }
    parentNode=parentNode.getParent();
  }
  SemanticModel sourceModel=mySourceNode.getSemanticModel();
  Iterator roots=sourceModel.roots();
  while (roots.hasNext()) {
    SemanticNode node=(SemanticNode)roots.next();
    if (!list.contains(node) && SemanticModelUtil.isInstanceOfType(node,targetType)) {
      list.add(node);
    }
  }
  Iterator importedModels=sourceModel.importedModels();
  while (importedModels.hasNext()) {
    SemanticModel importedModel=(SemanticModel)importedModels.next();
    Iterator importedRoots=importedModel.roots();
    while (importedRoots.hasNext()) {
      SemanticNode importedRoot=(SemanticNode)importedRoots.next();
      if (!list.contains(importedRoot) && SemanticModelUtil.isInstanceOfType(importedRoot,targetType)) {
        list.add(importedRoot);
      }
    }
  }
  return list;
}
