{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x5d3b34577b3cff09L,0x5d3b34577b3cff0aL,"menu"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x5d3b34577b3cff09L,0x5d3b34577b3cff0aL),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_bj2kbe_a0a0a0a0a1a0b0a1a2;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
{
            final Scope allNamedMenus=new ModelPlusImportedScope(SNodeOperations.getModel(_context.getContextNode()),true,MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x4e0f93d8a0ac4ee8L,"jetbrains.mps.lang.editor.structure.TransformationMenu_Named"));
            final Scope allowedConcepts=Scope.getScope(_context.getContextNode(),_context.getContextRole(),_context.getPosition(),MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration").getDeclarationNode());
            if (allowedConcepts == null) {
              return new EmptyScope();
            }
            return new FilteringScope(allNamedMenus){
              @Override public boolean isExcluded(              SNode node){
                return !(allowedConcepts.contains(SLinkOperations.getTarget(SNodeOperations.cast(node,MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x4e0f93d8a0ac4ee8L,"jetbrains.mps.lang.editor.structure.TransformationMenu_Named")),MetaAdapterFactory.getReferenceLink(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x4e0f93d8a0ac3ebaL,0x162bf82611ed9b28L,"conceptDeclaration"))));
              }
            }
;
          }
        }
      }
;
    }
  }
);
  return references;
}
