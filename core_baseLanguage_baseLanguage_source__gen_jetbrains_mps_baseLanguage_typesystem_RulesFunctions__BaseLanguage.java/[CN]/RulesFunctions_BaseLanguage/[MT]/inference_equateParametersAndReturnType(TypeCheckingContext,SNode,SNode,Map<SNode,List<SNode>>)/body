{
  List<SNode> parameterDeclarations=SLinkOperations.getTargets(SLinkOperations.getTarget(mc,"baseMethodDeclaration",false),"parameter",true);
  if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(ListSequence.fromList(parameterDeclarations).last(),"type",true),"jetbrains.mps.baseLanguage.structure.VariableArityType")) {
    Iterator<SNode> formalIterator=ListSequence.fromList(parameterDeclarations).iterator();
    Iterator<SNode> actualIterator=ListSequence.fromList(SLinkOperations.getTargets(mc,"actualArgument",true)).iterator();
    SNode formalParam=null;
    SNode actualParam=null;
    while (true) {
      if (!(actualIterator.hasNext())) {
        break;
      }
      if (!(formalIterator.hasNext())) {
        break;
      }
      formalParam=formalIterator.next();
      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(formalParam,"type",true),"jetbrains.mps.baseLanguage.structure.VariableArityType")) {
        break;
      }
      actualParam=actualIterator.next();
      SNode matchedType=inference_matchTypeWithTypeVariables(typeCheckingContext,SLinkOperations.getTarget(formalParam,"type",true),mmap);
{
        SNode _nodeToCheck_1029348928467=actualParam;
        BaseIntentionProvider intentionProvider=null;
        EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1219947530376",0,intentionProvider);
        _info_12389875345.setInequationGroup("priority_2_1759628044690732299");
        _info_12389875345.addInequationGroupBefore("priority_1_1759628044690732298");
        _info_12389875345.addInequationGroupBefore("default");
        typeCheckingContext.createLessThanInequation((SNode)typeCheckingContext.typeOf(actualParam,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1219947530380",true),(SNode)matchedType,false,_info_12389875345);
      }
    }
    do {
      SNode matchedNode_4=SLinkOperations.getTarget(formalParam,"type",true);
{
        boolean matches_4=false;
{
          SNode matchingNode_4=SLinkOperations.getTarget(formalParam,"type",true);
          if (matchingNode_4 != null) {
            matches_4=SModelUtil_new.isAssignableConcept(matchingNode_4.getConceptFqName(),"jetbrains.mps.baseLanguage.structure.VariableArityType");
          }
        }
        if (matches_4) {
{
            SNode componentType=SLinkOperations.getTarget(matchedNode_4,"componentType",true);
            final SNode matchedType=inference_matchTypeWithTypeVariables(typeCheckingContext,componentType,mmap);
            if (SLinkOperations.getCount(mc,"actualArgument") == ListSequence.fromList(parameterDeclarations).count()) {
              final SNode actual=actualIterator.next();
{
                final SNode actualType=typeCheckingContext.typeOf(actual,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1220347108709",true);
                typeCheckingContext.whenConcrete(actualType,new Runnable(){
                  public void run(){
                    if (SNodeOperations.isInstanceOf(typeCheckingContext.getEquationManager().getRepresentator(actualType),"jetbrains.mps.baseLanguage.structure.ArrayType")) {
{
                        SNode _nodeToCheck_1029348928467=actual;
                        BaseIntentionProvider intentionProvider=null;
                        EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1220347279318",0,intentionProvider);
                        _info_12389875345.setInequationGroup("priority_2_1759628044690732299");
                        _info_12389875345.addInequationGroupBefore("priority_1_1759628044690732298");
                        _info_12389875345.addInequationGroupBefore("default");
                        typeCheckingContext.createLessThanInequation((SNode)SLinkOperations.getTarget(SNodeOperations.cast(typeCheckingContext.getEquationManager().getRepresentator(actualType),"jetbrains.mps.baseLanguage.structure.ArrayType"),"componentType",true),(SNode)matchedType,false,_info_12389875345);
                      }
                    }
 else {
                      SNode _nodeToCheck_1029348928467=actual;
                      BaseIntentionProvider intentionProvider=null;
                      EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1220347200873",0,intentionProvider);
                      _info_12389875345.setInequationGroup("priority_2_1759628044690732299");
                      _info_12389875345.addInequationGroupBefore("priority_1_1759628044690732298");
                      _info_12389875345.addInequationGroupBefore("default");
                      typeCheckingContext.createLessThanInequation((SNode)typeCheckingContext.getEquationManager().getRepresentator(actualType),(SNode)matchedType,false,_info_12389875345);
                    }
                  }
                }
,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1220347102532",false,false);
              }
            }
 else {
              while (actualIterator.hasNext()) {
                SNode actual=actualIterator.next();
{
                  SNode _nodeToCheck_1029348928467=actual;
                  BaseIntentionProvider intentionProvider=null;
                  EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1219947702422",0,intentionProvider);
                  _info_12389875345.setInequationGroup("priority_2_1759628044690732299");
                  _info_12389875345.addInequationGroupBefore("priority_1_1759628044690732298");
                  _info_12389875345.addInequationGroupBefore("default");
                  typeCheckingContext.createLessThanInequation((SNode)typeCheckingContext.typeOf(actual,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1219947702426",true),(SNode)matchedType,false,_info_12389875345);
                }
              }
            }
          }
          break;
        }
      }
    }
 while (false);
  }
 else {
{
      SNode arg;
      SNode param;
      Iterator<SNode> arg_iterator=ListSequence.fromList(SLinkOperations.getTargets(mc,"actualArgument",true)).iterator();
      Iterator<SNode> param_iterator=ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(mc,"baseMethodDeclaration",false),"parameter",true)).iterator();
      while (true) {
        if (!(arg_iterator.hasNext())) {
          break;
        }
        if (!(param_iterator.hasNext())) {
          break;
        }
        arg=arg_iterator.next();
        param=param_iterator.next();
{
          SNode matchedType=inference_matchTypeWithTypeVariables(typeCheckingContext,SLinkOperations.getTarget(param,"type",true),mmap);
{
            SNode _nodeToCheck_1029348928467=arg;
            BaseIntentionProvider intentionProvider=null;
            EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1203441371327",0,intentionProvider);
            _info_12389875345.setInequationGroup("priority_2_1759628044690732299");
            _info_12389875345.addInequationGroupBefore("priority_1_1759628044690732298");
            _info_12389875345.addInequationGroupBefore("default");
            typeCheckingContext.createLessThanInequation((SNode)typeCheckingContext.typeOf(arg,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1203441371331",true),(SNode)matchedType,false,_info_12389875345);
          }
        }
      }
    }
  }
  if (returnType != null) {
    SNode matchedType=inference_matchTypeWithTypeVariables(typeCheckingContext,returnType,mmap);
{
      SNode _nodeToCheck_1029348928467=mc;
      BaseIntentionProvider intentionProvider=null;
      EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1203441371359",0,intentionProvider);
      typeCheckingContext.createEquation((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1203441371361",true),(SNode)matchedType,_info_12389875345);
    }
{
      SNode _nodeToCheck_1029348928467=null;
      BaseIntentionProvider intentionProvider=null;
      EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","3254522536313044080",0,intentionProvider);
      _info_12389875345.setInequationGroup("priority_4_1759628044690732301");
      _info_12389875345.addInequationGroupBefore("priority_3_1759628044690732300");
      _info_12389875345.addInequationGroupBefore("priority_2_1759628044690732299");
      _info_12389875345.addInequationGroupBefore("priority_1_1759628044690732298");
      _info_12389875345.addInequationGroupBefore("default");
      typeCheckingContext.createLessThanInequation((SNode)typeCheckingContext.typeOf(mc,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","3254522536313044077",true),(SNode)new _Quotations.QuotationClass_111().createNode(typeCheckingContext),false,_info_12389875345);
    }
  }
}
