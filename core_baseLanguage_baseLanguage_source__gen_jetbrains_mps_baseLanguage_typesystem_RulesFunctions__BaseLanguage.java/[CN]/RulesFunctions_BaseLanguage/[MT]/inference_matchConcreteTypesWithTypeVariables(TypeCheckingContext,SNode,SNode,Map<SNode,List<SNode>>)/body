{
  if ((genericClassifier != null) && mmap != null && !(mmap.isEmpty())) {
    List<SNode> params=ListSequence.<SNode>fromArray();
    for (    SNode tvd : SLinkOperations.getTargets(genericClassifier,"typeVariableDeclaration",true)) {
      List<SNode> nodes=mmap.get(tvd);
      final SNode p_typevar_1228174472023=typeCheckingContext.createNewRuntimeTypesVariable();
      if (nodes != null) {
        SNode tvar=ListSequence.fromList(nodes).getElement(0);
        if (TRACE_METHOD_TYPES) {
          System.out.println("-2- " + BaseConcept_Behavior.call_getPresentation_1213877396640(SNodeOperations.cast(tvar,"jetbrains.mps.lang.core.structure.BaseConcept")) + " :==: "+ BaseConcept_Behavior.call_getPresentation_1213877396640(SNodeOperations.cast(ListSequence.fromList(nodes).getElement(0),"jetbrains.mps.lang.core.structure.BaseConcept")));
        }
{
          SNode _nodeToCheck_1029348928467=null;
          BaseIntentionProvider intentionProvider=null;
          typeCheckingContext.createEquation(tvar,typeCheckingContext.getEquationManager().getRepresentator(p_typevar_1228174472023),_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1228174300650",intentionProvider);
        }
      }
      ListSequence.fromList(params).addElement(typeCheckingContext.getEquationManager().getRepresentator(p_typevar_1228174472023));
    }
{
      SNode _nodeToCheck_1029348928467=null;
      BaseIntentionProvider intentionProvider=null;
      typeCheckingContext.createLessThanInequation(instanceType,new _Quotations.QuotationClass_27().createNode(params,genericClassifier,typeCheckingContext),_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1228174029908",false,0,intentionProvider);
    }
  }
}
