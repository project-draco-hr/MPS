{
  List<SNode> throwTypes=ListSequence.fromListWithValues(new ArrayList<SNode>(),throwables);
  ListSequence.fromList(throwTypes).removeWhere(new IWhereFilter<SNode>(){
    public boolean accept(    SNode tt){
      return TypeChecker.getInstance().getSubtypingManager().isSubtype(tt,new RulesFunctions_BaseLanguage.QuotationClass_5ahx9e_a1a0a0a0a0b0n_0().createNode(typeCheckingContext)) || TypeChecker.getInstance().getSubtypingManager().isSubtype(tt,new RulesFunctions_BaseLanguage.QuotationClass_5ahx9e_a1a0a0a0a0b0n().createNode(typeCheckingContext));
    }
  }
);
  if (ListSequence.fromList(throwTypes).isEmpty()) {
    return;
  }
  List<SNode> ancSLs=SNodeOperations.getAncestors(mainNode,"jetbrains.mps.baseLanguage.structure.StatementList",false);
  boolean use_quickfix=false;
  with_anc:   for (  SNode anc : SNodeOperations.getAncestorsWhereConceptInList(mainNode,new String[]{"jetbrains.mps.baseLanguage.structure.TryStatement","jetbrains.mps.baseLanguage.structure.TryCatchStatement","jetbrains.mps.baseLanguage.structure.IStatementListContainer"},false)) {
    if (ListSequence.fromList(throwTypes).isEmpty()) {
      return;
    }
    do {
      SNode matchedNode_5ahx9e_b0f0n=anc;
{
        boolean matches_5ahx9e_a1a5a31=false;
{
          SNode matchingNode_5ahx9e_a1a5a31=anc;
          if (matchingNode_5ahx9e_a1a5a31 != null) {
            matches_5ahx9e_a1a5a31=SModelUtil_new.isAssignableConcept(matchingNode_5ahx9e_a1a5a31.getConceptFqName(),"jetbrains.mps.baseLanguage.structure.TryStatement");
          }
        }
        if (matches_5ahx9e_a1a5a31) {
          if (ListSequence.fromList(ancSLs).contains(SLinkOperations.getTarget(matchedNode_5ahx9e_b0f0n,"body",true))) {
            for (            final SNode cc : SLinkOperations.getTargets(matchedNode_5ahx9e_b0f0n,"catchClause",true)) {
              ListSequence.fromList(throwTypes).removeWhere(new IWhereFilter<SNode>(){
                public boolean accept(                SNode tt){
                  return TypeChecker.getInstance().getSubtypingManager().isSubtype(tt,SLinkOperations.getTarget(SLinkOperations.getTarget(cc,"throwable",true),"type",true));
                }
              }
);
            }
          }
          break;
        }
      }
{
        boolean matches_5ahx9e_b1a5a31=false;
{
          SNode matchingNode_5ahx9e_b1a5a31=anc;
          if (matchingNode_5ahx9e_b1a5a31 != null) {
            matches_5ahx9e_b1a5a31=SModelUtil_new.isAssignableConcept(matchingNode_5ahx9e_b1a5a31.getConceptFqName(),"jetbrains.mps.baseLanguage.structure.TryCatchStatement");
          }
        }
        if (matches_5ahx9e_b1a5a31) {
          if (ListSequence.fromList(ancSLs).contains(SLinkOperations.getTarget(matchedNode_5ahx9e_b0f0n,"body",true))) {
            for (            final SNode cc : SLinkOperations.getTargets(matchedNode_5ahx9e_b0f0n,"catchClause",true)) {
              ListSequence.fromList(throwTypes).removeWhere(new IWhereFilter<SNode>(){
                public boolean accept(                SNode tt){
                  return TypeChecker.getInstance().getSubtypingManager().isSubtype(tt,SLinkOperations.getTarget(SLinkOperations.getTarget(cc,"throwable",true),"type",true));
                }
              }
);
            }
          }
          break;
        }
      }
      if (ListSequence.fromList(ancSLs).contains(IMethodLike_Behavior.call_getBody_1239354440022(SNodeOperations.as(anc,"jetbrains.mps.baseLanguage.structure.IMethodLike")))) {
        for (        final SNode thr : IMethodLike_Behavior.call_getThrowableTypes_6204026822016975623(SNodeOperations.cast(anc,"jetbrains.mps.baseLanguage.structure.IMethodLike"))) {
          ListSequence.fromList(throwTypes).removeWhere(new IWhereFilter<SNode>(){
            public boolean accept(            SNode tt){
              return TypeChecker.getInstance().getSubtypingManager().isSubtype(tt,thr);
            }
          }
);
        }
        use_quickfix=true;
      }
      break with_anc;
    }
 while (false);
    if (ListSequence.fromList(throwTypes).isEmpty()) {
      return;
    }
  }
  if (!(ListSequence.fromList(throwTypes).isEmpty())) {
    String errorString="uncaught exceptions:";
    for (    SNode exc : throwTypes) {
      errorString=errorString + " " + exc;
    }
    if (use_quickfix) {
{
        BaseIntentionProvider intentionProvider=null;
        intentionProvider=new BaseIntentionProvider("jetbrains.mps.baseLanguage.typesystem.AddExceptionToMethodSignature_QuickFix",false);
        intentionProvider.putArgument("throwableType",SetSequence.fromSet(throwables).first());
        IErrorTarget errorTarget=new NodeErrorTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(mainNode,errorString,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","4460871289557453850",intentionProvider,errorTarget);
      }
    }
 else {
{
        BaseIntentionProvider intentionProvider=null;
        IErrorTarget errorTarget=new NodeErrorTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(mainNode,errorString,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","4460871289557914789",intentionProvider,errorTarget);
      }
    }
  }
}
