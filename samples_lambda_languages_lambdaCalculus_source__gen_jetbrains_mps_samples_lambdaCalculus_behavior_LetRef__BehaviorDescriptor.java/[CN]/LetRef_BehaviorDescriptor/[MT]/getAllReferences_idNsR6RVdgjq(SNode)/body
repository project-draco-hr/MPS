{
  List<SNode> result=new ArrayList<SNode>();
  SNode node=__thisNode__;
  while (SNodeOperations.getParent(node) != null && !(SNodeOperations.isInstanceOf(node,MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL,0xadf0aaee45eb2895L,0x15b75b54f176d1a3L,"jetbrains.mps.samples.lambdaCalculus.structure.MultipleExpression")))) {
    node=SNodeOperations.getParent(node);
  }
  for (  SNode letRef : SNodeOperations.getNodeDescendants(node,MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL,0xadf0aaee45eb2895L,0x448ba254edc7216cL,"jetbrains.mps.samples.lambdaCalculus.structure.LetRef"),false,new SAbstractConcept[]{})) {
    if (SLinkOperations.getTarget(letRef,MetaAdapterFactory.getReferenceLink(0x7c9e280794ad4afcL,0xadf0aaee45eb2895L,0x48db75d5dc496b08L,0x48db75d5dc497af4L,"variable")) == SLinkOperations.getTarget(__thisNode__,MetaAdapterFactory.getReferenceLink(0x7c9e280794ad4afcL,0xadf0aaee45eb2895L,0x48db75d5dc496b08L,0x48db75d5dc497af4L,"variable"))) {
      ListSequence.fromList(result).addElement(letRef);
    }
  }
  return result;
}
