{
  if (tracer != null) {
    tracer.track(myModule);
  }
  try {
    if (dependencies.contains(myModule))     return;
    dependencies.add(myModule);
    for (    Dependency dependency : myModule.getDependencies()) {
      if (reexportOnly && !dependency.isReexport())       continue;
      IModule m=MPSModuleRepository.getInstance().getModule(dependency.getModuleRef());
      if (m == null)       continue;
      m.getDependenciesManager().collectVisibleModules(dependencies,true,tracer);
    }
    if (reexportOnly)     return;
    for (    ModuleReference ref : myModule.getUsedDevkitReferences()) {
      DevKit dk=MPSModuleRepository.getInstance().getDevKit(ref);
      if (dk == null)       continue;
      for (      Solution solution : dk.getAllExportedSolutions()) {
        solution.getDependenciesManager().collectVisibleModules(dependencies,true,tracer);
      }
    }
  }
  finally {
    if (tracer != null) {
      tracer.unTrack();
    }
  }
}
