{
  modules.add(myModule);
  HashSet<IModule> reexported=new HashSet<IModule>();
  HashSet<IModule> nonReexported=new HashSet<IModule>();
  getUsedModules(reexported,nonReexported);
  if (depType.respectReexport) {
    modules.addAll(nonReexported);
  }
 else {
    reexported.addAll(nonReexported);
  }
  for (  IModule m : reexported) {
    if (modules.contains(m))     continue;
    m.getDependenciesManager().collectModules(modules,depType);
  }
  if (depType.runtimes) {
    HashSet<Language> lang=new HashSet<Language>();
    collectUsedLanguages(lang,true);
    for (    Language l : lang) {
      for (      IModule m : ModuleUtil.refsToModules(l.getRuntimeModulesReferences())) {
        if (modules.contains(m))         continue;
        m.getDependenciesManager().collectModules(modules,depType);
      }
    }
  }
}
