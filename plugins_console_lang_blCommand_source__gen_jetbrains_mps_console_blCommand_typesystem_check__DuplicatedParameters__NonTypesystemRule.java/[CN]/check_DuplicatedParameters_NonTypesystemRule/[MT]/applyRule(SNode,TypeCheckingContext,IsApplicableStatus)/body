{
  final Iterable<SNode> parameters=SLinkOperations.getTargets(queryParameterList,"parameter",true);
  Iterable<SNode> parameterConcepts=Sequence.fromIterable(parameters).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.getConceptDeclaration(it);
    }
  }
).distinct();
  Iterable<? extends Iterable<SNode>> groupedByConcepts=Sequence.fromIterable(parameterConcepts).select(new ISelector<SNode,ISequence<SNode>>(){
    public ISequence<SNode> select(    final SNode c){
      return Sequence.fromIterable(parameters).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode p){
          return SConceptOperations.isExactly(SNodeOperations.getConceptDeclaration(p),NameUtil.nodeFQName(c));
        }
      }
);
    }
  }
);
  Iterable<? extends Iterable<SNode>> duplicatedParameters=Sequence.fromIterable(groupedByConcepts).where(new IWhereFilter<Iterable<SNode>>(){
    public boolean accept(    Iterable<SNode> it){
      return Sequence.fromIterable(it).count() > 1;
    }
  }
);
  for (  Iterable<SNode> group : Sequence.fromIterable(groupedByConcepts)) {
    if (!(Sequence.fromIterable(group).count() <= 1)) {
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(ListSequence.fromList(Sequence.fromIterable(group).toListSequence()).getElement(1),"Duplicated parameter: " + SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(Sequence.fromIterable(group).first()),"conceptAlias"),"r:7e8cfa8a-da13-467d-9878-63b90b943128(jetbrains.mps.console.blCommand.typesystem)","4307205004145899056",null,errorTarget);
    }
  }
}
