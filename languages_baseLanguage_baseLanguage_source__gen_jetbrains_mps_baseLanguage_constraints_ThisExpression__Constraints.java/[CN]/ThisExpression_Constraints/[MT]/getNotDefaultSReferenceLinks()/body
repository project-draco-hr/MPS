{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(-935030926396207931l,-6610165693999523818l),1070475354124l,1182955020723l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(-935030926396207931l,-6610165693999523818l),1070475354124l,1182955020723l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_cfy36u_a0a0a0a0a1a0b0a1a3;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          if (!(SNodeOperations.isInstanceOf(_context.getReferenceNode(),"jetbrains.mps.baseLanguage.structure.ThisExpression"))) {
            return new EmptyScope();
          }
          return new NamedElementsScope(ThisExpression_Behavior.call_getPossibleClassifiers_1215682129821(SNodeOperations.cast(_context.getReferenceNode(),"jetbrains.mps.baseLanguage.structure.ThisExpression"))){
            @Nullable @Override public SNode resolve(            SNode contextNode,            @NotNull String refText){
              String packageName=jetbrains.mps.util.SNodeOperations.getModelLongName(SNodeOperations.getModel(contextNode)) + ".";
              if (refText.startsWith(packageName)) {
                refText=refText.substring(packageName.length());
              }
              return super.resolve(contextNode,refText);
            }
          }
;
        }
      }
;
    }
  }
);
  return references;
}
