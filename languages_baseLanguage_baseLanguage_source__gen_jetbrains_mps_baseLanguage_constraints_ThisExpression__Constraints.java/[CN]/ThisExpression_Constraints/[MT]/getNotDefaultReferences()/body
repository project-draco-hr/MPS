{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("classConcept",new BaseReferenceConstraintsDescriptor("classConcept",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_cfy36u_a0a0a0a0a1a0b0a1a2;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          if (!(SNodeOperations.isInstanceOf(_context.getReferenceNode(),"jetbrains.mps.baseLanguage.structure.ThisExpression"))) {
            return new EmptyScope();
          }
          return new NamedElementsScope(ThisExpression_Behavior.call_getPossibleClassifiers_1215682129821(SNodeOperations.cast(_context.getReferenceNode(),"jetbrains.mps.baseLanguage.structure.ThisExpression")));
        }
      }
;
    }
  }
);
  return references;
}
