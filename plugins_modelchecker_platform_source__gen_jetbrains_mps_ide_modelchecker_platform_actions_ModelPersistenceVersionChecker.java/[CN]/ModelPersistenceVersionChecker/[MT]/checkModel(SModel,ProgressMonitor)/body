{
  monitor.start("model persistence version",1);
  List<SearchResult<ModelCheckerIssue>> results=ListSequence.fromList(new ArrayList<SearchResult<ModelCheckerIssue>>());
  if (m instanceof PersistenceVersionAware) {
    final PersistenceVersionAware model=(PersistenceVersionAware)m;
    int currentVersion=model.getPersistenceVersion();
    if (currentVersion < ModelPersistence.LAST_VERSION) {
      IModelCheckerFix fix=(model instanceof EditableSModel ? new IModelCheckerFix(){
        public boolean doFix(){
          model.load();
          model.setPersistenceVersion(9);
          ((EditableSModel)model).setChanged(true);
          ((EditableSModel)model).save();
          return true;
        }
      }
 : null);
      ListSequence.fromList(results).addElement(ModelCheckerIssue.getSearchResultForModel(m,"Model" + SModelOperations.getModelName(m) + " persistence version: "+ currentVersion+ ", currently supported version is "+ ModelPersistence.LAST_VERSION,fix,ModelChecker.SEVERITY_WARNING,"Model persistence version"));
    }
  }
  monitor.done();
  return results;
}
