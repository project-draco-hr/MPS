{
  if (!(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,0x112670d886aL,"visibility")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10af9586f0cL,"jetbrains.mps.baseLanguage.structure.PrivateVisibility")))) {
    return;
  }
  if (SNodeOperations.isInstanceOf(field,MetaAdapterFactory.getInterfaceConcept(0x443f4c36fcf54eb6L,0x95008d06ed259e3eL,0x118bc6becc0L,"jetbrains.mps.baseLanguage.classifiers.structure.IMember"))) {
    final SNode member=SNodeOperations.cast(field,MetaAdapterFactory.getInterfaceConcept(0x443f4c36fcf54eb6L,0x95008d06ed259e3eL,0x118bc6becc0L,"jetbrains.mps.baseLanguage.classifiers.structure.IMember"));
    List<SNode> memberOperations=SNodeOperations.getNodeDescendants(SNodeOperations.getParent(field),MetaAdapterFactory.getInterfaceConcept(0x443f4c36fcf54eb6L,0x95008d06ed259e3eL,0x118bca97396L,"jetbrains.mps.baseLanguage.classifiers.structure.IMemberOperation"),false,new SAbstractConcept[]{});
    Iterable<SNode> references=ListSequence.fromList(memberOperations).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(0x443f4c36fcf54eb6L,0x95008d06ed259e3eL,0x118bca97396L,0x118bcb657ecL,"member")) == member;
      }
    }
);
    VariableReferenceUtil.checkField(typeCheckingContext,field,references);
  }
 else {
    SNode root=SNodeOperations.getContainingRoot(field);
    List<SNode> localFieldRefs=ListSequence.fromList(SNodeOperations.getNodeDescendants(root,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c77f1e98L,"jetbrains.mps.baseLanguage.structure.VariableReference"),false,new SAbstractConcept[]{})).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(it,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c77f1e98L,"jetbrains.mps.baseLanguage.structure.VariableReference")),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c77f1e98L,0xf8cc6bf960L,"variableDeclaration")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca68L,"jetbrains.mps.baseLanguage.structure.FieldDeclaration"));
      }
    }
).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return (SNodeOperations.getNodeAncestor(it,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x57d533a7af15ed3aL,"jetbrains.mps.baseLanguage.structure.SingleLineComment"),false,false) == null);
      }
    }
).toListSequence();
    List<SNode> fieldRefOperations=SNodeOperations.getNodeDescendants(root,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b483d77aL,"jetbrains.mps.baseLanguage.structure.FieldReferenceOperation"),false,new SAbstractConcept[]{});
    Iterable<SNode> localFieldReferences=ListSequence.fromList(localFieldRefs).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c77f1e98L,0xf8cc6bf960L,"variableDeclaration")) == field;
      }
    }
);
    Iterable<SNode> fieldReferenceOperations=ListSequence.fromList(fieldRefOperations).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b483d77aL,0x116b484a653L,"fieldDeclaration")) == field;
      }
    }
);
    Iterable<SNode> refs=Sequence.fromIterable(localFieldReferences).union(Sequence.fromIterable(fieldReferenceOperations));
    VariableReferenceUtil.checkField(typeCheckingContext,field,refs);
  }
}
