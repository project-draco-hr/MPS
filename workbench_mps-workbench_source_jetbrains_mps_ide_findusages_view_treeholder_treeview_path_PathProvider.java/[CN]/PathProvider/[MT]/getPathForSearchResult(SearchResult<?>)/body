{
  List<PathItem> res=new ArrayList<PathItem>();
  Object o=result.getPathObject();
  if (o instanceof SNode) {
    SNode node=(SNode)o;
    res.add(new PathItem(PathItemRole.ROLE_TARGET_NODE,node));
    if (node.getParent() != null) {
      appendNodePathThroughNamedConcepts(res,node.getParent());
    }
    SNode rootNode=node.getContainingRoot();
    if (node != rootNode) {
      res.add(new PathItem(PathItemRole.ROLE_ROOT,rootNode));
    }
    o=node.getModel();
  }
  if (o instanceof SModel) {
    SModel model=(SModel)o;
    res.add(new PathItem(PathItemRole.ROLE_MODEL,model));
    o=model.getModelDescriptor().getModule();
  }
  if (o instanceof IModule) {
    IModule module=(IModule)o;
    res.add(new PathItem(PathItemRole.ROLE_MODULE,module));
  }
  List<Pair<CategoryKind,String>> reversedCategories=new ArrayList<Pair<CategoryKind,String>>(result.getCategories());
  Collections.reverse(reversedCategories);
  for (  Pair<CategoryKind,String> category : reversedCategories) {
    res.add(new PathItem(PathItemRole.getCategoryRole(category.o1),category));
  }
  Collections.reverse(res);
  return res;
}
