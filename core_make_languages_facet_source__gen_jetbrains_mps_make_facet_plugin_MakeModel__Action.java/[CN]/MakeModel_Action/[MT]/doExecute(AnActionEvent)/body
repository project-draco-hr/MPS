{
  try {
    ScriptBuilder scb=new ScriptBuilder();
    IScript scr=scb.withFacet(new IFacet.Name("Generator")).withTarget(new ITarget.Name("GenerateFiles")).withInit(new _FunctionTypes._void_P1_E0<IVariablesPool>(){
      public void invoke(      IVariablesPool pool){
        Tuples._1<Project> vars=(Tuples._1<Project>)pool.variables(new ITarget.Name("Parameters"),Object.class);
        vars._0(MakeModel_Action.this.context.getProject());
      }
    }
).toScript();
    final UIQueryRelayStrategy relayStrat=new UIQueryRelayStrategy();
    final LoggingProgressStrategy logStrat=new LoggingProgressStrategy();
    final LoggingFeedbackStrategy feedbackStrat=new LoggingFeedbackStrategy();
    IResult res=scr.execute(new IMonitor(){
      public boolean pleaseStop(){
        return false;
      }
      public <T extends IOption>T relayQuery(      IQuery<T> query){
        return relayStrat.relayQuery(query,MakeModel_Action.this.context);
      }
      public void reportFeedback(      IFeedback feedback){
        feedbackStrat.reportFeedback(feedback);
      }
      public IProgress currentProgress(){
        return logStrat.currentProgress();
      }
    }
);
  }
 catch (  Throwable t) {
    LOG.error("User's action execute method failed. Action:" + "MakeModel",t);
  }
}
