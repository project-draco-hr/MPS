{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0v,conceptFqName)) {
case 0:
    return myConceptApplyOverlappingExtensionOperation;
case 1:
  return myConceptExtension;
case 2:
return myConceptExtensionDeclaration;
case 3:
return myConceptExtensionFieldDeclaration;
case 4:
return myConceptExtensionFieldReference;
case 5:
return myConceptExtensionFunction;
case 6:
return myConceptExtensionObjectGetter;
case 7:
return myConceptExtensionOverlapping;
case 8:
return myConceptExtensionPointDeclaration;
case 9:
return myConceptExtensionPointExpression;
case 10:
return myConceptExtensionPointOverlappingDeclaration;
case 11:
return myConceptExtensionPointType;
case 12:
return myConceptGetExtensionObjectsOperation;
case 13:
return myConceptIExtensionPoint;
case 14:
return myConceptIRootWithUniqueName;
case 15:
return myConceptOverridesItem;
case 16:
return myConceptOverridesReference;
default :
return null;
}
}
