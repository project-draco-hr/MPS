{
  SNode exprType=TypeChecker.getInstance().getRuntimeSupport().typeOf(exprWithType);
  if (exprType == null) {
    TypeChecker.getInstance().reportTypeError(exprWithType,"no type");
    return currentLeastCommonSupertype;
  }
  if ((defaultSupertype != null) && !(TypeChecker.getInstance().getSubtypingManager().isSubtype(exprType,defaultSupertype))) {
    TypeChecker.getInstance().reportTypeError(exprWithType,"" + defaultSupertype + " is expected");
    return currentLeastCommonSupertype;
  }
  if (currentLeastCommonSupertype == null) {
    return exprType;
  }
  if (TypeChecker.getInstance().getSubtypingManager().isSubtype(currentLeastCommonSupertype,exprType)) {
    return exprType;
  }
  if (TypeChecker.getInstance().getSubtypingManager().isSubtype(exprType,currentLeastCommonSupertype)) {
    return currentLeastCommonSupertype;
  }
  TypeChecker.getInstance().reportTypeError(exprWithType,"type " + exprType + " is not compatible with infered "+ currentLeastCommonSupertype);
  return currentLeastCommonSupertype;
}
