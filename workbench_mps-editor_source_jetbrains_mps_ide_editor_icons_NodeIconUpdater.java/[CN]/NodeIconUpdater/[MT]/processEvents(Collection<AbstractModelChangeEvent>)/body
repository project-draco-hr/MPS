{
  HashSet<SNodeReference> affectedRoots=new HashSet<SNodeReference>(events.size());
  for (  AbstractModelChangeEvent event : events) {
    SNode root=null;
    if (event instanceof SNodeAddEvent) {
      final SNodeAddEvent e=(SNodeAddEvent)event;
      if (e.isRoot()) {
        root=e.getChild();
      }
 else {
        root=e.getParent().getContainingRoot();
      }
    }
 else     if (event instanceof SNodeRemoveEvent) {
      final SNodeRemoveEvent e=(SNodeRemoveEvent)event;
      if (e.isRoot()) {
        root=e.getChild();
      }
 else {
        root=e.getParent().getContainingRoot();
      }
    }
 else     if (event instanceof SPropertyChangeEvent) {
      root=((SPropertyChangeEvent)event).getNode().getContainingRoot();
    }
 else     if (event instanceof SReferenceChangeEvent) {
      root=((SReferenceChangeEvent)event).getNode().getContainingRoot();
    }
    if (root == null || root.getModel() == null) {
      continue;
    }
    affectedRoots.add(root.getReference());
  }
  for (  SNodeReference ptr : affectedRoots) {
    if (myNodeVFS.hasVirtualFileFor(ptr)) {
      myFileEditorManagerEx.updateFilePresentation(myNodeVFS.getFileFor(ptr));
    }
  }
}
