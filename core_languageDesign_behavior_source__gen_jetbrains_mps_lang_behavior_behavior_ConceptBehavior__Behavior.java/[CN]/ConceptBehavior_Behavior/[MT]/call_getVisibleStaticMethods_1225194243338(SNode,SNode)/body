{
  List<SNode> result=ListSequence.fromList(new ArrayList<SNode>());
  for (  SNode method : SLinkOperations.getTargets(thisNode,"staticMethod",true)) {
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(method,"visibility",true),"jetbrains.mps.baseLanguage.structure.PublicVisibility")) {
      ListSequence.fromList(result).addElement(method);
    }
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(method,"visibility",true),"jetbrains.mps.baseLanguage.structure.PrivateVisibility")) {
      if (SNodeOperations.getAncestor(contextNode,"jetbrains.mps.lang.behavior.structure.ConceptBehavior",true,false) == thisNode) {
        ListSequence.fromList(result).addElement(method);
      }
    }
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(method,"visibility",true),"jetbrains.mps.baseLanguage.structure.ProtectedVisibility")) {
      SNode contextConcept=SLinkOperations.getTarget(SNodeOperations.getAncestor(contextNode,"jetbrains.mps.lang.behavior.structure.ConceptBehavior",true,false),"concept",false);
      SNode methodConcept=SLinkOperations.getTarget(SNodeOperations.getAncestor(method,"jetbrains.mps.lang.behavior.structure.ConceptBehavior",true,false),"concept",false);
      if (SConceptOperations.isSubConceptOf(contextConcept,NameUtil.nodeFQName(methodConcept))) {
        ListSequence.fromList(result).addElement(method);
      }
    }
    if ((SLinkOperations.getTarget(method,"visibility",true) == null)) {
      if (SNodeOperations.getModel(method) == SNodeOperations.getModel(contextNode)) {
        ListSequence.fromList(result).addElement(method);
      }
    }
  }
  return result;
}
