{
  List<SNode> methods=new ArrayList<SNode>();
  method:   for (  SNode method : ConceptBehavior_Behavior.call_getConceptMethods_5466054087443746043(thisNode,GlobalScope.getInstance())) {
    if (SPropertyOperations.getBoolean(method,"isFinal")) {
      continue;
    }
    if (!(SPropertyOperations.getBoolean(method,"isVirtual"))) {
      continue;
    }
    if (!(SPropertyOperations.getBoolean(method,"isAbstract"))) {
      continue;
    }
    SNode container=SNodeOperations.getAncestor(method,"jetbrains.mps.lang.behavior.structure.ConceptBehavior",false,false);
    if (container == thisNode || container == null) {
      continue;
    }
    for (    SNode mymethod : ListSequence.fromList(SLinkOperations.getTargets(thisNode,"method",true))) {
      if ((SLinkOperations.getTarget(mymethod,"overriddenMethod",false) != null) && SLinkOperations.getTarget(mymethod,"overriddenMethod",false) == method) {
        continue method;
      }
    }
    ListSequence.fromList(methods).addElement(method);
  }
  return methods;
}
