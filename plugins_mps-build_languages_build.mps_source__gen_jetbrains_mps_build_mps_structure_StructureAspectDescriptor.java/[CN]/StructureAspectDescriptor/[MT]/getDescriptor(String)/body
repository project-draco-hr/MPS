{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildLayout_ToBinaryCopyProcessor").super_("jetbrains.mps.build.structure.BuildLayout_CopyProcessor").parents("jetbrains.mps.build.structure.BuildLayout_CopyProcessor").properties("stripImplementation").alias("convert *.mps into *.mpb (binary format)","").create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMPSPlugin").super_("jetbrains.mps.build.structure.BuildPlugin").parents("jetbrains.mps.build.structure.BuildPlugin","jetbrains.mps.build.structure.BuildExternalDependency").alias("mps","adds MPS capabilities (packaging, generation) to the project").create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMpsAspect").super_("jetbrains.mps.build.structure.BuildAspect").parents("jetbrains.mps.build.structure.BuildAspect").properties("bootstrap","testGeneration","excludes","generationMaxHeapSizeInMb").alias("mps settings","").create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMpsLayout_FolderWithSources").super_("jetbrains.mps.build.mps.structure.BuildMpsLayout_ModuleSources").parents("jetbrains.mps.build.mps.structure.BuildMpsLayout_ModuleSources","jetbrains.mps.build.structure.BuildLayout_InJarNode").alias("folder with sources of","MPS module").create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMpsLayout_ModuleJars").super_("jetbrains.mps.build.structure.BuildLayout_Node").parents("jetbrains.mps.build.structure.BuildLayout_Node").properties("stripImplementation").references("module").children(new String[]{"jarLocations"},new boolean[]{true}).alias("module","").create();
case 5:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMpsLayout_ModuleSources").super_("jetbrains.mps.build.structure.BuildLayout_Node").parents("jetbrains.mps.build.structure.BuildLayout_Node","jetbrains.mps.build.structure.BuildLayout_InJarNode").properties("modelsOnly","stripImplementation").references("module").alias("sources of","").create();
case 6:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMpsLayout_ModuleXml").super_("jetbrains.mps.build.structure.BuildLayout_Node").parents("jetbrains.mps.build.structure.BuildLayout_Node").references("module").children(new String[]{"jarLocations"},new boolean[]{true}).alias("module descriptor of","").create();
case 7:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMpsLayout_ModuleXml_CustomJarLocation").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("packagedLocation").children(new String[]{"path"},new boolean[]{false}).create();
case 8:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMpsLayout_Plugin").super_("jetbrains.mps.build.structure.BuildLayout_AbstractContainer").parents("jetbrains.mps.build.structure.BuildLayout_AbstractContainer","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.build.structure.BuildSource_SingleFolder").references("plugin").alias("plugin","").create();
case 9:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMpsLayout_PluginDescriptor").super_("jetbrains.mps.build.structure.BuildLayout_Node").parents("jetbrains.mps.build.structure.BuildLayout_Node").references("plugin").alias("plugin descriptor of","").create();
case 10:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_AbstractModule").super_("jetbrains.mps.build.structure.BuildProjectPart").parents("jetbrains.mps.build.structure.BuildProjectPart","jetbrains.mps.lang.core.structure.INamedConcept").properties("uuid","compact").children(new String[]{"path"},new boolean[]{false}).abstract_().create();
case 11:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_Branding").super_("jetbrains.mps.build.structure.BuildProjectPart").parents("jetbrains.mps.build.structure.BuildProjectPart","jetbrains.mps.build.structure.BuildSource_FilesetProjectPart").properties("major","minor","eap").children(new String[]{"splashScreen","aboutScreen","buildNumber","buildDate","icon32","icon16","icon32opaque","welcomeCaption","welcomeSlogan","welcomeLogo","dialogImage","updateWebsite","shortName","fullName","codename","help","feedbackUrl","textColor"},new boolean[]{false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false}).alias("idea branding","name, version and images of your custom IDE").create();
case 12:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_BrandingHelp").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"url","root","file"},new boolean[]{false,false,false}).alias("help","").create();
case 13:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_BrandingUpdateSite").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"checkUrl","updateUrl","updateChannel"},new boolean[]{false,false,false}).alias("update website","").create();
case 14:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_DevKit").super_("jetbrains.mps.build.mps.structure.BuildMps_AbstractModule").parents("jetbrains.mps.build.mps.structure.BuildMps_AbstractModule").children(new String[]{"extends","exports"},new boolean[]{true,true}).alias("devkit","").create();
case 15:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_DevKitExport").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
case 16:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_DevKitExportLanguage").super_("jetbrains.mps.build.mps.structure.BuildMps_DevKitExport").parents("jetbrains.mps.build.mps.structure.BuildMps_DevKitExport").references("language").alias("language <{language}>","").create();
case 17:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_DevKitExportSolution").super_("jetbrains.mps.build.mps.structure.BuildMps_DevKitExport").parents("jetbrains.mps.build.mps.structure.BuildMps_DevKitExport").references("solution").create();
case 18:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_DevKitRef").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("devkit").create();
case 19:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_ExtractedModuleDependency").super_("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency").parents("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency").children(new String[]{"dependency"},new boolean[]{false}).alias("(extracted)","").staticScope(StaticScope.NONE).create();
case 20:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_Generator").super_("jetbrains.mps.build.mps.structure.BuildMps_Module").parents("jetbrains.mps.build.mps.structure.BuildMps_Module","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").references("sourceLanguage").alias("generator","").create();
case 21:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_Group").super_("jetbrains.mps.build.structure.BuildProjectPart").parents("jetbrains.mps.build.structure.BuildProjectPart","jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"modules"},new boolean[]{true}).alias("mps group","").create();
case 22:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_IdeaPlugin").super_("jetbrains.mps.build.structure.BuildProjectPart").parents("jetbrains.mps.build.structure.BuildProjectPart","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.build.structure.BuildStringContainer").properties("id").children(new String[]{"name","description","containerName","version","content","dependencies","pluginXml","vendor"},new boolean[]{false,false,false,false,true,true,false,false}).alias("idea plugin","").create();
case 23:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginContent").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
case 24:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginDependency").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("target").create();
case 25:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginGroup").super_("jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginContent").parents("jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginContent").references("group").children(new String[]{"customPackaging"},new boolean[]{true}).create();
case 26:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginGroupCustomModule").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("target").create();
case 27:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginModule").super_("jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginContent").parents("jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginContent").properties("customPackaging").references("target").create();
case 28:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginVendor").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("url","name").children(new String[]{"icon16"},new boolean[]{false}).create();
case 29:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_Language").super_("jetbrains.mps.build.mps.structure.BuildMps_Module").parents("jetbrains.mps.build.mps.structure.BuildMps_Module").children(new String[]{"runtime","generator"},new boolean[]{true,false}).alias("language","").create();
case 30:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_Module").super_("jetbrains.mps.build.mps.structure.BuildMps_AbstractModule").parents("jetbrains.mps.build.mps.structure.BuildMps_AbstractModule","jetbrains.mps.build.structure.BuildSource_CompilablePart","jetbrains.mps.build.structure.BuildExternalDependency").properties("doNotCompile").children(new String[]{"sources","dependencies"},new boolean[]{true,true}).abstract_().alias("module","").create();
case 31:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
case 32:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyExtendLanguage").super_("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency").parents("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency").references("language").alias("extends <{language}>","").create();
case 33:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyJar").super_("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency").parents("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency").children(new String[]{"path","customLocation"},new boolean[]{false,false}).alias("jar","").create();
case 34:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyOnDevKit").super_("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency").parents("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency").references("devkit").create();
case 35:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyOnJavaModule").super_("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency").parents("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency").properties("reexport").references("module").alias("<{module}>","").create();
case 36:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyOnModule").super_("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency").parents("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency").properties("reexport").references("module").create();
case 37:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyUseLanguage").super_("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency").parents("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency").references("language").alias("use <{language}>","").create();
case 38:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_ModuleJarRuntime").super_("jetbrains.mps.build.mps.structure.BuildMps_ModuleRuntime").parents("jetbrains.mps.build.mps.structure.BuildMps_ModuleRuntime").children(new String[]{"path","customLocation"},new boolean[]{false,false}).alias("jar","").create();
case 39:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_ModuleJavaSource").super_("jetbrains.mps.build.mps.structure.BuildMps_ModuleSource").parents("jetbrains.mps.build.mps.structure.BuildMps_ModuleSource","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").properties("isGenerated").children(new String[]{"folder"},new boolean[]{false}).create();
case 40:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_ModuleModelRoot").super_("jetbrains.mps.build.mps.structure.BuildMps_ModuleSource").parents("jetbrains.mps.build.mps.structure.BuildMps_ModuleSource").children(new String[]{"folder"},new boolean[]{false}).alias("model root","").create();
case 41:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_ModuleRuntime").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
case 42:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_ModuleSolutionRuntime").super_("jetbrains.mps.build.mps.structure.BuildMps_ModuleRuntime").parents("jetbrains.mps.build.mps.structure.BuildMps_ModuleRuntime").references("solution").alias("solution <{solution}>","").create();
case 43:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_ModuleSource").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
case 44:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_ModuleTestSource").super_("jetbrains.mps.build.mps.structure.BuildMps_ModuleSource").parents("jetbrains.mps.build.mps.structure.BuildMps_ModuleSource","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").properties("isGenerated").children(new String[]{"folder"},new boolean[]{false}).alias("test source","").create();
case 45:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.BuildMps_Solution").super_("jetbrains.mps.build.mps.structure.BuildMps_Module").parents("jetbrains.mps.build.mps.structure.BuildMps_Module").properties("sourcesKind").alias("solution","").create();
case 46:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.GeneratorInternal_BuildMps_Module").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("targetModule").create();
case 47:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.GeneratorInternal_BuildSourcePath").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("targetPath").create();
case 48:
return new ConceptDescriptorBuilder("jetbrains.mps.build.mps.structure.GeneratorInternal_String").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("path").create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
