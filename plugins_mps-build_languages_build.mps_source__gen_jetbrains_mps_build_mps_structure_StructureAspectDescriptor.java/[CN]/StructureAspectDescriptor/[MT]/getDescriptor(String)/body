{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildLayout_ToBinaryCopyProcessor","jetbrains.mps.build.structure.BuildLayout_CopyProcessor",false,new String[]{"jetbrains.mps.build.structure.BuildLayout_CopyProcessor"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"convert *.mps into *.mpb (binary format)","","");
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMPSPlugin","jetbrains.mps.build.structure.BuildPlugin",false,new String[]{"jetbrains.mps.build.structure.BuildPlugin","jetbrains.mps.build.structure.BuildExternalDependency"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"mps","adds MPS capabilities (packaging, generation) to the project","");
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMpsAspect","jetbrains.mps.build.structure.BuildAspect",false,new String[]{"jetbrains.mps.build.structure.BuildAspect"},new String[]{"bootstrap"},new String[]{},new String[]{},new boolean[]{},false,false,"mps settings","","");
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMpsLayout_FolderWithSources","jetbrains.mps.build.mps.structure.BuildMpsLayout_ModuleSources",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMpsLayout_ModuleSources","jetbrains.mps.build.structure.BuildLayout_InJarNode"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"folder with sources of","MPS module","");
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMpsLayout_ModuleJars","jetbrains.mps.build.structure.BuildLayout_Node",false,new String[]{"jetbrains.mps.build.structure.BuildLayout_Node"},new String[]{},new String[]{"module"},new String[]{"jarLocations"},new boolean[]{true},false,false,"module","","");
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMpsLayout_ModuleSources","jetbrains.mps.build.structure.BuildLayout_Node",false,new String[]{"jetbrains.mps.build.structure.BuildLayout_Node","jetbrains.mps.build.structure.BuildLayout_InJarNode"},new String[]{"modelsOnly"},new String[]{"module"},new String[]{},new boolean[]{},false,false,"sources of","","");
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMpsLayout_ModuleXml","jetbrains.mps.build.structure.BuildLayout_Node",false,new String[]{"jetbrains.mps.build.structure.BuildLayout_Node"},new String[]{},new String[]{"module"},new String[]{"jarLocations"},new boolean[]{true},false,false,"module descriptor of","","");
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMpsLayout_ModuleXml_CustomJarLocation","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"packagedLocation"},new String[]{},new String[]{"path"},new boolean[]{false},false,false,"","","");
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMpsLayout_Plugin","jetbrains.mps.build.structure.BuildLayout_AbstractContainer",false,new String[]{"jetbrains.mps.build.structure.BuildLayout_AbstractContainer","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.build.structure.BuildSource_SingleFolder"},new String[]{},new String[]{"plugin"},new String[]{},new boolean[]{},false,false,"plugin","","");
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMpsLayout_PluginDescriptor","jetbrains.mps.build.structure.BuildLayout_Node",false,new String[]{"jetbrains.mps.build.structure.BuildLayout_Node"},new String[]{},new String[]{"plugin"},new String[]{},new boolean[]{},false,false,"plugin descriptor of","","");
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_AbstractModule","jetbrains.mps.build.structure.BuildProjectPart",false,new String[]{"jetbrains.mps.build.structure.BuildProjectPart","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"uuid","compact"},new String[]{},new String[]{"path"},new boolean[]{false},true,false,"","","");
case 11:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_Branding","jetbrains.mps.build.structure.BuildProjectPart",false,new String[]{"jetbrains.mps.build.structure.BuildProjectPart","jetbrains.mps.build.structure.BuildSource_FilesetProjectPart"},new String[]{"major","minor","eap"},new String[]{},new String[]{"splashScreen","aboutScreen","buildNumber","buildDate","icon32","icon16","icon32opaque","welcomeCaption","welcomeSlogan","welcomeLogo","dialogImage","updateWebsite","shortName","fullName","codename","help","feedbackUrl","textColor"},new boolean[]{false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false,false},false,false,"idea branding","name, version and images of your custom IDE","");
case 12:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_BrandingHelp","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{"url","root","file"},new boolean[]{false,false,false},false,false,"help","","");
case 13:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_BrandingUpdateSite","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{"checkUrl","updateUrl","updateChannel"},new boolean[]{false,false,false},false,false,"update website","","");
case 14:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_DevKit","jetbrains.mps.build.mps.structure.BuildMps_AbstractModule",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_AbstractModule"},new String[]{},new String[]{},new String[]{"extends","exports"},new boolean[]{true,true},false,false,"devkit","","");
case 15:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_DevKitExport","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{},new boolean[]{},true,false,"","","");
case 16:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_DevKitExportLanguage","jetbrains.mps.build.mps.structure.BuildMps_DevKitExport",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_DevKitExport"},new String[]{},new String[]{"language"},new String[]{},new boolean[]{},false,false,"language <{language}>","","");
case 17:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_DevKitExportSolution","jetbrains.mps.build.mps.structure.BuildMps_DevKitExport",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_DevKitExport"},new String[]{},new String[]{"solution"},new String[]{},new boolean[]{},false,false,"","","");
case 18:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_DevKitRef","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"devkit"},new String[]{},new boolean[]{},false,false,"","","");
case 19:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_ExtractedModuleDependency","jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency"},new String[]{},new String[]{},new String[]{"dependency"},new boolean[]{false},false,false,"(extracted)","","");
case 20:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_Group","jetbrains.mps.build.structure.BuildProjectPart",false,new String[]{"jetbrains.mps.build.structure.BuildProjectPart","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{"modules"},new boolean[]{true},false,false,"mps group","","");
case 21:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_IdeaPlugin","jetbrains.mps.build.structure.BuildProjectPart",false,new String[]{"jetbrains.mps.build.structure.BuildProjectPart","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.build.structure.BuildStringContainer"},new String[]{"id"},new String[]{},new String[]{"name","description","containerName","version","content","dependencies","pluginXml","vendor"},new boolean[]{false,false,false,false,true,true,false,false},false,false,"idea plugin","","");
case 22:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginContent","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{},new boolean[]{},true,false,"","","");
case 23:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginDependency","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"target"},new String[]{},new boolean[]{},false,false,"","","");
case 24:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginGroup","jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginContent",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginContent"},new String[]{},new String[]{"group"},new String[]{"customPackaging"},new boolean[]{true},false,false,"","","");
case 25:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginGroupCustomModule","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"target"},new String[]{},new boolean[]{},false,false,"","","");
case 26:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginModule","jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginContent",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginContent"},new String[]{"customPackaging"},new String[]{"target"},new String[]{},new boolean[]{},false,false,"","","");
case 27:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginVendor","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"url","name"},new String[]{},new String[]{"icon16"},new boolean[]{false},false,false,"","","");
case 28:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_Language","jetbrains.mps.build.mps.structure.BuildMps_Module",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_Module"},new String[]{},new String[]{},new String[]{"runtime"},new boolean[]{true},false,false,"language","","");
case 29:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_Module","jetbrains.mps.build.mps.structure.BuildMps_AbstractModule",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_AbstractModule","jetbrains.mps.build.structure.BuildSource_CompilablePart","jetbrains.mps.build.structure.BuildExternalDependency"},new String[]{"doNotCompile"},new String[]{},new String[]{"sources","dependencies"},new boolean[]{true,true},true,false,"module","","");
case 30:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{},new boolean[]{},true,false,"","","");
case 31:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyExtendLanguage","jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency"},new String[]{},new String[]{"language"},new String[]{},new boolean[]{},false,false,"extends <{language}>","","");
case 32:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyJar","jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency"},new String[]{},new String[]{},new String[]{"path","customLocation"},new boolean[]{false,false},false,false,"jar","","");
case 33:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyOnDevKit","jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency"},new String[]{},new String[]{"devkit"},new String[]{},new boolean[]{},false,false,"","","");
case 34:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyOnJavaModule","jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency"},new String[]{"reexport"},new String[]{"module"},new String[]{},new boolean[]{},false,false,"<{module}>","","");
case 35:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyOnModule","jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency"},new String[]{"reexport"},new String[]{"module"},new String[]{},new boolean[]{},false,false,"","","");
case 36:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyUseLanguage","jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_ModuleDependency"},new String[]{},new String[]{"language"},new String[]{},new boolean[]{},false,false,"use <{language}>","","");
case 37:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_ModuleJarRuntime","jetbrains.mps.build.mps.structure.BuildMps_ModuleRuntime",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_ModuleRuntime"},new String[]{},new String[]{},new String[]{"path","customLocation"},new boolean[]{false,false},false,false,"jar","","");
case 38:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_ModuleJavaSource","jetbrains.mps.build.mps.structure.BuildMps_ModuleSource",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_ModuleSource","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{"isGenerated"},new String[]{},new String[]{"folder"},new boolean[]{false},false,false,"","","");
case 39:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_ModuleModelRoot","jetbrains.mps.build.mps.structure.BuildMps_ModuleSource",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_ModuleSource"},new String[]{},new String[]{},new String[]{"folder"},new boolean[]{false},false,false,"model root","","");
case 40:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_ModuleRuntime","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{},new boolean[]{},true,false,"","","");
case 41:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_ModuleSolutionRuntime","jetbrains.mps.build.mps.structure.BuildMps_ModuleRuntime",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_ModuleRuntime"},new String[]{},new String[]{"solution"},new String[]{},new boolean[]{},false,false,"solution <{solution}>","","");
case 42:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_ModuleSource","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{},new boolean[]{},true,false,"","","");
case 43:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.BuildMps_Solution","jetbrains.mps.build.mps.structure.BuildMps_Module",false,new String[]{"jetbrains.mps.build.mps.structure.BuildMps_Module"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"solution","","");
case 44:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.GeneratorInternal_BuildMps_Module","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"targetModule"},new String[]{},new boolean[]{},false,false,"","","");
case 45:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.GeneratorInternal_BuildSourcePath","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"targetPath"},new String[]{},new boolean[]{},false,false,"","","");
case 46:
return new CompiledConceptDescriptor("jetbrains.mps.build.mps.structure.GeneratorInternal_String","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"path"},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
