{
  this.addNodeById("8758390115029078425");
  this.addNodeById("5815925154349132136");
  this.addNodeById("2166349271756548530");
  int initialSize=ListSequence.fromList(SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById("2166349271756548531"),MetaAdapterFactory.getConcept(new UUID(-5752535300696554171l,-8216104078447456642l),278471160714141637l,"jetbrains.mps.lang.smodelTests.structure.Root")))).count();
  SNode unspecifiedChild=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-5752535300696554171l,-8216104078447456642l),278471160714141636l,"jetbrains.mps.lang.smodelTests.structure.GrandChild")));
  String unspecifiedChildRole=this.addUnspecifiedChild(SNodeOperations.cast(this.getNodeById("2166349271756548531"),MetaAdapterFactory.getConcept(new UUID(-5752535300696554171l,-8216104078447456642l),278471160714141637l,"jetbrains.mps.lang.smodelTests.structure.Root")),unspecifiedChild);
  Assert.assertEquals(initialSize + 1,ListSequence.fromList(SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById("2166349271756548531"),MetaAdapterFactory.getConcept(new UUID(-5752535300696554171l,-8216104078447456642l),278471160714141637l,"jetbrains.mps.lang.smodelTests.structure.Root")))).count());
  Iterable<SNode> unspecifiedChildren=ListSequence.fromList(SNodeOperations.getChildren(SNodeOperations.cast(this.getNodeById("2166349271756548531"),MetaAdapterFactory.getConcept(new UUID(-5752535300696554171l,-8216104078447456642l),278471160714141637l,"jetbrains.mps.lang.smodelTests.structure.Root")))).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (SNodeOperations.getContainingLinkDeclaration(it) == null);
    }
  }
);
  Assert.assertEquals(1,Sequence.fromIterable(unspecifiedChildren).count());
  SNode theChild=Sequence.fromIterable(unspecifiedChildren).first();
  Assert.assertEquals(unspecifiedChildRole,SNodeOperations.getContainingLinkRole(theChild));
  Assert.assertEquals(unspecifiedChild,theChild);
}
