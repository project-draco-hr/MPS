{
  int applyX=(isHighlightLeft() ? getX(0) : getX(1));
  int excludeX=(isHighlightLeft() ? getX(1) : getX(0));
  FoldingAreaButton apply=new MergeButtonsPainter.MyButton(changeGroup,applyX,y,"Apply",(isHighlightLeft() ? MergeButtonsPainter.MIRRORED_APPLY_ICON : IdeIcons.APPLY),new _FunctionTypes._void_P2_E0<MergeSession,Iterable<ModelChange>>(){
    public void invoke(    MergeSession session,    Iterable<ModelChange> changes){
      session.applyChanges(changes);
    }
  }
);
  FoldingAreaButton exclude=new MergeButtonsPainter.MyButton(changeGroup,excludeX,y,"Exclude",IdeIcons.EXCLUDE,new _FunctionTypes._void_P2_E0<MergeSession,Iterable<ModelChange>>(){
    public void invoke(    MergeSession session,    Iterable<ModelChange> changes){
      session.excludeChanges(changes);
    }
  }
);
  return Arrays.asList(apply,exclude);
}
