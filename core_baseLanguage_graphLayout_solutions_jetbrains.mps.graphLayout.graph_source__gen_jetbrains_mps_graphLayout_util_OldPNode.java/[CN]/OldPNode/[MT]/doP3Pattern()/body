{
  OldPQTreeNode newFullNode=new OldPNode();
  newFullNode.setState(OldPQTreeNode.State.FULL);
  OldPQTreeNode newEmptyNode=new OldPNode();
  newEmptyNode.setState(OldPQTreeNode.State.EMPTY);
  Iterator<OldPQTreeNode> nodeItr=ListSequence.fromList(getChildren()).iterator();
  while (nodeItr.hasNext()) {
    OldPQTreeNode node=nodeItr.next();
    nodeItr.remove();
    if (node.getState() == OldPQTreeNode.State.FULL) {
      newFullNode.addLastChild(node);
    }
 else {
      newEmptyNode.addLastChild(node);
    }
  }
  OldQNode replacement=new OldQNode();
  newFullNode=newFullNode.adjust();
  newEmptyNode=newEmptyNode.adjust();
  replacement.addLastChild(newFullNode);
  replacement.addLastChild(newEmptyNode);
  replacement.setState(OldPQTreeNode.State.PARTIAL);
  return replacement;
}
