{
  OldPQTreeNode newFullNode=new OldPNode();
  newFullNode.setState(OldPQTreeNode.State.FULL);
  OldQNode partialNode1=null;
  OldQNode partialNode2=null;
  Iterator<OldPQTreeNode> nodeItr=ListSequence.fromList(getChildren()).iterator();
  while (nodeItr.hasNext()) {
    OldPQTreeNode node=nodeItr.next();
    if (node.getState() == OldPQTreeNode.State.FULL) {
      nodeItr.remove();
      newFullNode.addLastChild(node);
    }
    if (node.getState() == OldPQTreeNode.State.PARTIAL) {
      if (partialNode1 == null) {
        partialNode1=(OldQNode)node;
      }
 else {
        partialNode2=(OldQNode)node;
      }
      nodeItr.remove();
    }
  }
  newFullNode=newFullNode.adjust();
  OldQNode newQNode=new OldQNode();
  newQNode.setState(OldPQTreeNode.State.PARTIAL);
  List<OldPQTreeNode> children=partialNode1.getChildren();
  if (ListSequence.fromList(children).first().getState() == OldPQTreeNode.State.FULL) {
    children=ListSequence.fromList(children).reversedList();
  }
  for (  OldPQTreeNode child : ListSequence.fromList(children)) {
    newQNode.addLastChild(child);
  }
  newQNode.addLastChild(newFullNode);
  children=partialNode2.getChildren();
  if (ListSequence.fromList(children).first().getState() == OldPQTreeNode.State.EMPTY) {
    children=ListSequence.fromList(children).reversedList();
  }
  for (  OldPQTreeNode child : ListSequence.fromList(children)) {
    newQNode.addLastChild(child);
  }
  addLastChild(newQNode);
  setState(OldPQTreeNode.State.PARTIAL);
  return this;
}
