{
  int numFull=0;
  int numEmpty=0;
  int numPartial=0;
  int numChildren=ListSequence.fromList(getChildren()).count();
  for (  OldPQTreeNode node : ListSequence.fromList(getChildren())) {
    if (node.getState() == OldPQTreeNode.State.FULL) {
      numFull++;
    }
    if (node.getState() == OldPQTreeNode.State.PARTIAL) {
      numPartial++;
    }
    if (node.getState() == OldPQTreeNode.State.EMPTY) {
      numEmpty++;
    }
  }
  if (numFull == numChildren) {
    return doP1Pattern();
  }
 else   if (numPartial == 0) {
    if (isPertinentRoot) {
      return doP2Pattern();
    }
 else {
      return doP3Pattern();
    }
  }
 else   if (numPartial == 1) {
    if (isPertinentRoot) {
      return doP4Pattern();
    }
 else {
      return doP5Pattern();
    }
  }
 else   if (numPartial == 2) {
    if (isPertinentRoot) {
      return doP6Pattern();
    }
  }
  return null;
}
