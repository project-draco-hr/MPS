{
  int width=0;
  final int x=editorCells.getX();
  final int y=editorCells.getY();
  if (editorCells.isDrawBrackets()) {
    width+=EditorCell_Collection.BRACKET_WIDTH * 2;
  }
  Iterator<EditorCell> lookAhead=editorCells.iterator();
  if (lookAhead.hasNext())   lookAhead.next();
  int ascent=0;
  int descent=0;
  for (  EditorCell editorCell : editorCells) {
    editorCell.setX(x + width);
    editorCell.relayout();
    width+=editorCell.getWidth();
    if (lookAhead.hasNext()) {
      EditorCell nextCell=lookAhead.next();
      if (nextCell.isPunctuationLayout()) {
        width-=editorCell.getRightInternalInset();
        editorCell.setNextIsPunctuation();
      }
    }
    ascent=Math.max(ascent,editorCell.getAscent());
    descent=Math.max(descent,editorCell.getDescent());
  }
  if (editorCells.isDrawBrackets()) {
    width+=EditorCell_Collection.BRACKET_WIDTH * 2;
  }
  int baseline=y + ascent;
  editorCells.setWidth(width);
  editorCells.setHeight(ascent + descent);
  editorCells.setBaseline(baseline);
  for (  EditorCell editorCell : editorCells) {
    editorCell.setBaseline(baseline);
  }
}
