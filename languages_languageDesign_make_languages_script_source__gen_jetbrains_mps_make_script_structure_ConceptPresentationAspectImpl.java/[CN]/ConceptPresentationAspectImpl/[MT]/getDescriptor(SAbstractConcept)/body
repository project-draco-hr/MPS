{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case 0:
    return props_AdvanceWorkStatement;
case 1:
  return props_AllWorkLeftExpression;
case 2:
return props_BeginWorkStatement;
case 3:
return props_ConceptFunctionParameter_progressMonitor;
case 4:
return props_ConfigDefinition;
case 5:
return props_Expected;
case 6:
return props_ExpectedInput;
case 7:
return props_ExpectedOption;
case 8:
return props_FinishWorkStatement;
case 9:
return props_IExpected;
case 10:
return props_InputResourcesParameter;
case 11:
return props_JobDeclaration;
case 12:
return props_JobDefinition;
case 13:
return props_Option;
case 14:
return props_OptionExpression;
case 15:
return props_OptionType;
case 16:
return props_OutputResources;
case 17:
return props_PropertiesAccessorParameter;
case 18:
return props_QueryDefinition;
case 19:
return props_QueryParameterDeclaration;
case 20:
return props_RelayQueryExpression;
case 21:
return props_ReportFeedbackStatement;
case 22:
return props_ResourceType;
case 23:
return props_ResultStatement;
case 24:
return props_Text;
}
throw new IllegalStateException("Unknown concept " + c);
}
