{
  final SNode[] created=new SNode[1];
  final Runnable r1=new Runnable(){
    @Override public void run(){
      SNode node=new ModelAccessHelper(myProject.getModelAccess()).runReadAction(new Computable<SNode>(){
        @Override public SNode compute(){
          return myBaseNode.resolve(myProject.getRepository());
        }
      }
);
      created[0]=myDescriptor.createNode(node,myConcept);
    }
  }
;
  final Runnable r2=new Runnable(){
    @Override public void run(){
      String mainPack=SNodeAccessUtil.getProperty(myBaseNode.resolve(myProject.getRepository()),SNodeUtil.property_BaseConcept_virtualPackage);
      SNodeAccessUtil.setProperty(created[0],SNodeUtil.property_BaseConcept_virtualPackage,mainPack);
      myCallback.changeNode(created[0].getReference());
    }
  }
;
  if (myDescriptor.commandOnCreate()) {
    myProject.getModelAccess().executeCommand(r1);
  }
 else {
    r1.run();
  }
  if (created[0] == null) {
    return;
  }
  myProject.getModelAccess().executeCommand(r2);
}
