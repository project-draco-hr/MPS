{
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a,descriptor.getConceptFqName())) {
case 0:
    return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildAspect_Editor()));
case 1:
  return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildCompositePath_Editor()));
case 2:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildCustomWorkflow_Editor()));
case 3:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildDependency_Editor()));
case 4:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildExternalLayout_Editor()));
case 5:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildExternalLayoutDependency_Editor()));
case 6:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildFileExcludeSelector_Editor()));
case 7:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildFileIncludeSelector_Editor()));
case 8:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildFileIncludesSelector_Editor()));
case 9:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildFileSelector_Editor()));
case 10:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildFolderMacro_Editor()));
case 11:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildInputFiles_Editor()));
case 12:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildInputFolders_Editor()));
case 13:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildInputResourceSet_Editor()));
case 14:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildInputSingleFile_Editor()));
case 15:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildInputSingleFolder_Editor()));
case 16:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildJavaPlugin_Editor()));
case 17:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_Editor()));
case 18:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_AbstractCopy_Editor()));
case 19:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_Comment_Editor()));
case 20:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_CompileOutputOf_Editor()));
case 21:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_CopyFilterFixCRLF_Editor()));
case 22:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_CopyFilterReplaceRegex_Editor()));
case 23:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_CopyFilterReplaceTokens_Editor()));
case 24:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_CopyFlattenMapper_Editor()));
case 25:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_CopyGlobMapper_Editor()));
case 26:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_CopyHandler_Editor()));
case 27:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_CopyRegexMapper_Editor()));
case 28:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_CustomCopy_Editor()));
case 29:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_EchoProperties_Editor()));
case 30:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_EchoPropertyEntry_Editor()));
case 31:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_EchoXml_Editor()));
case 32:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_ExportAsJavaLibrary_Editor()));
case 33:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_File_Editor()));
case 34:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_FileStub_Editor()));
case 35:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_Filemode_Editor()));
case 36:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_Files_Editor()));
case 37:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_FilesOf_Editor()));
case 38:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_Import_Editor()));
case 39:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_ImportContent_Editor()));
case 40:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_JarManifest_Editor()));
case 41:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_JarManifest_Attribute_Editor()));
case 42:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_JarManifest_Section_Editor()));
case 43:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_NamedContainer_Editor()));
case 44:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_Node_Editor()));
case 45:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_Tar_Editor()));
case 46:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildLayout_TransparentContainer_Editor()));
case 47:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildMacro_Editor()));
case 48:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildNamedLayout_Editor()));
case 49:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildPlugin_Editor()));
case 50:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildProject_Editor()));
case 51:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildProjectDependency_Editor()));
case 52:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildProjectPart_Editor()));
case 53:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSourceArchiveRelativePath_Editor()));
case 54:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSourceMacroRelativePath_Editor()));
case 55:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSourcePath_Editor()));
case 56:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSourceProjectRelativePath_Editor()));
case 57:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaCP_Editor()));
case 58:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaClassFolder_Editor()));
case 59:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaContentFolder_Editor()));
case 60:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaContentRoot_Editor()));
case 61:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaDependency_Editor()));
case 62:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaDependencyExternalJar_Editor()));
case 63:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaDependencyExternalJarInFolder_Editor()));
case 64:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaDependencyFileset_Editor()));
case 65:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaDependencyJar_Editor()));
case 66:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaDependencyLibrary_Editor()));
case 67:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaDependencyModule_Editor()));
case 68:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaExternalJarFolderRef_Editor()));
case 69:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaExternalJarRef_Editor()));
case 70:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaFiles_Editor()));
case 71:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaJar_Editor()));
case 72:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaJars_Editor()));
case 73:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaLibrary_Editor()));
case 74:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaLibraryCP_Editor()));
case 75:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaLibraryElement_Editor()));
case 76:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaLibraryExternalJar_Editor()));
case 77:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaLibraryExternalJarFolder_Editor()));
case 78:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaModule_Editor()));
case 79:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaModuleOptions_Editor()));
case 80:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaOptions_Editor()));
case 81:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaResources_Editor()));
case 82:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildSource_JavaSources_Editor()));
case 83:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildString_Editor()));
case 84:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildStringNotEmpty_Editor()));
case 85:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildStringPart_Editor()));
case 86:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildTextStringPart_Editor()));
case 87:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildVarRefStringPart_Editor()));
case 88:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildVariableMacro_Editor()));
case 89:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildVariableMacroInitValue_Editor()));
case 90:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildVariableMacroInitWithDate_Editor()));
case 91:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildVariableMacroInitWithString_Editor()));
case 92:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BuildVariableMacroInitWithValueFromFile_Editor()));
case 93:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new GeneratorInternal_BuildSource_Folder_Editor()));
case 94:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new GeneratorInternal_BuildSource_JarFolder_Editor()));
case 95:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new GeneratorInternal_BuildSource_JavaJar_Editor()));
case 96:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new GeneratorInternal_BuildSource_JavaLibrary_Editor()));
case 97:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new GeneratorInternal_BuildSource_JavaModule_Editor()));
case 98:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new GeneratorInternal_BuildSource_SingleFile_Editor()));
case 99:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new GeneratorInternal_IWorkflowParticipantReference_Editor()));
case 100:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new GeneratorInternal_IWorkfowParticipants_Editor()));
case 101:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new GeneratorInternal_LibraryArtifacts_Editor()));
case 102:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new GeneratorInternal_ProjectDependency_Editor()));
default :
}
return Collections.<ConceptEditor>emptyList();
}
