{
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0wd,descriptor.getConceptFqName())) {
case 0:
    return getBuildAspectEditorAspect();
case 1:
  return getBuildCompositePathEditorAspect();
case 2:
return getBuildCustomWorkflowEditorAspect();
case 3:
return getBuildDependencyEditorAspect();
case 4:
return getBuildExternalLayoutEditorAspect();
case 5:
return getBuildExternalLayoutDependencyEditorAspect();
case 6:
return getBuildFileExcludeSelectorEditorAspect();
case 7:
return getBuildFileIncludeSelectorEditorAspect();
case 8:
return getBuildFileIncludesSelectorEditorAspect();
case 9:
return getBuildFileSelectorEditorAspect();
case 10:
return getBuildFolderMacroEditorAspect();
case 11:
return getBuildInputFilesEditorAspect();
case 12:
return getBuildInputFoldersEditorAspect();
case 13:
return getBuildInputResourceSetEditorAspect();
case 14:
return getBuildInputSingleFileEditorAspect();
case 15:
return getBuildInputSingleFolderEditorAspect();
case 16:
return getBuildJavaPluginEditorAspect();
case 17:
return getBuildLayoutEditorAspect();
case 18:
return getBuildLayout_AbstractCopyEditorAspect();
case 19:
return getBuildLayout_CommentEditorAspect();
case 20:
return getBuildLayout_CompileOutputOfEditorAspect();
case 21:
return getBuildLayout_CopyFilterFixCRLFEditorAspect();
case 22:
return getBuildLayout_CopyFilterReplaceRegexEditorAspect();
case 23:
return getBuildLayout_CopyFilterReplaceTokensEditorAspect();
case 24:
return getBuildLayout_CopyFlattenMapperEditorAspect();
case 25:
return getBuildLayout_CopyGlobMapperEditorAspect();
case 26:
return getBuildLayout_CopyHandlerEditorAspect();
case 27:
return getBuildLayout_CopyRegexMapperEditorAspect();
case 28:
return getBuildLayout_CustomCopyEditorAspect();
case 29:
return getBuildLayout_EchoPropertiesEditorAspect();
case 30:
return getBuildLayout_EchoPropertyEntryEditorAspect();
case 31:
return getBuildLayout_EchoXmlEditorAspect();
case 32:
return getBuildLayout_ExportAsJavaLibraryEditorAspect();
case 33:
return getBuildLayout_FileEditorAspect();
case 34:
return getBuildLayout_FileStubEditorAspect();
case 35:
return getBuildLayout_FilemodeEditorAspect();
case 36:
return getBuildLayout_FilesEditorAspect();
case 37:
return getBuildLayout_FilesOfEditorAspect();
case 38:
return getBuildLayout_ImportEditorAspect();
case 39:
return getBuildLayout_ImportContentEditorAspect();
case 40:
return getBuildLayout_JarManifestEditorAspect();
case 41:
return getBuildLayout_JarManifest_AttributeEditorAspect();
case 42:
return getBuildLayout_JarManifest_SectionEditorAspect();
case 43:
return getBuildLayout_NamedContainerEditorAspect();
case 44:
return getBuildLayout_NodeEditorAspect();
case 45:
return getBuildLayout_TarEditorAspect();
case 46:
return getBuildLayout_TransparentContainerEditorAspect();
case 47:
return getBuildMacroEditorAspect();
case 48:
return getBuildNamedLayoutEditorAspect();
case 49:
return getBuildPluginEditorAspect();
case 50:
return getBuildProjectEditorAspect();
case 51:
return getBuildProjectDependencyEditorAspect();
case 52:
return getBuildProjectPartEditorAspect();
case 53:
return getBuildSourceArchiveRelativePathEditorAspect();
case 54:
return getBuildSourceMacroRelativePathEditorAspect();
case 55:
return getBuildSourcePathEditorAspect();
case 56:
return getBuildSourceProjectRelativePathEditorAspect();
case 57:
return getBuildSource_JavaCPEditorAspect();
case 58:
return getBuildSource_JavaClassFolderEditorAspect();
case 59:
return getBuildSource_JavaContentFolderEditorAspect();
case 60:
return getBuildSource_JavaContentRootEditorAspect();
case 61:
return getBuildSource_JavaDependencyEditorAspect();
case 62:
return getBuildSource_JavaDependencyExternalJarEditorAspect();
case 63:
return getBuildSource_JavaDependencyExternalJarInFolderEditorAspect();
case 64:
return getBuildSource_JavaDependencyFilesetEditorAspect();
case 65:
return getBuildSource_JavaDependencyJarEditorAspect();
case 66:
return getBuildSource_JavaDependencyLibraryEditorAspect();
case 67:
return getBuildSource_JavaDependencyModuleEditorAspect();
case 68:
return getBuildSource_JavaExternalJarFolderRefEditorAspect();
case 69:
return getBuildSource_JavaExternalJarRefEditorAspect();
case 70:
return getBuildSource_JavaFilesEditorAspect();
case 71:
return getBuildSource_JavaJarEditorAspect();
case 72:
return getBuildSource_JavaJarsEditorAspect();
case 73:
return getBuildSource_JavaLibraryEditorAspect();
case 74:
return getBuildSource_JavaLibraryCPEditorAspect();
case 75:
return getBuildSource_JavaLibraryElementEditorAspect();
case 76:
return getBuildSource_JavaLibraryExternalJarEditorAspect();
case 77:
return getBuildSource_JavaLibraryExternalJarFolderEditorAspect();
case 78:
return getBuildSource_JavaModuleEditorAspect();
case 79:
return getBuildSource_JavaModuleOptionsEditorAspect();
case 80:
return getBuildSource_JavaOptionsEditorAspect();
case 81:
return getBuildSource_JavaResourcesEditorAspect();
case 82:
return getBuildSource_JavaSourcesEditorAspect();
case 83:
return getBuildStringEditorAspect();
case 84:
return getBuildStringNotEmptyEditorAspect();
case 85:
return getBuildStringPartEditorAspect();
case 86:
return getBuildTextStringPartEditorAspect();
case 87:
return getBuildVarRefStringPartEditorAspect();
case 88:
return getBuildVariableMacroEditorAspect();
case 89:
return getBuildVariableMacroInitValueEditorAspect();
case 90:
return getBuildVariableMacroInitWithDateEditorAspect();
case 91:
return getBuildVariableMacroInitWithStringEditorAspect();
case 92:
return getBuildVariableMacroInitWithValueFromFileEditorAspect();
case 93:
return getGeneratorInternal_BuildSource_JavaJarEditorAspect();
case 94:
return getGeneratorInternal_BuildSource_JavaLibraryEditorAspect();
case 95:
return getGeneratorInternal_BuildSource_JavaModuleEditorAspect();
case 96:
return getGeneratorInternal_BuildSource_SingleFileEditorAspect();
case 97:
return getGeneratorInternal_IWorkflowParticipantReferenceEditorAspect();
case 98:
return getGeneratorInternal_IWorkfowParticipantsEditorAspect();
case 99:
return getGeneratorInternal_ProjectDependencyEditorAspect();
default :
}
return null;
}
