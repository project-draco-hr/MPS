{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_xbvbvu_a0g.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return Collections.<SubstituteMenu>singletonList(new BuildCompositePath_SubstituteMenu());
      }
    break;
case 1:
  if (true) {
    return Collections.<SubstituteMenu>singletonList(new BuildLayout_Copy_SubstituteMenu());
  }
break;
case 2:
if (true) {
return Collections.<SubstituteMenu>singletonList(new BuildLayout_CustomCopy_SubstituteMenu());
}
break;
case 3:
if (true) {
return Collections.<SubstituteMenu>singletonList(new BuildLayout_JarManifest_Part_SubstituteMenu());
}
break;
case 4:
if (true) {
return Collections.<SubstituteMenu>singletonList(new BuildSourceArchiveRelativePath_SubstituteMenu());
}
break;
case 5:
if (true) {
return Collections.<SubstituteMenu>singletonList(new BuildSource_JavaContentFolder_SubstituteMenu());
}
break;
case 6:
if (true) {
return Collections.<SubstituteMenu>singletonList(new BuildSource_JavaDependencyJar_SubstituteMenu());
}
break;
case 7:
if (true) {
return Collections.<SubstituteMenu>singletonList(new BuildSource_JavaFiles_SubstituteMenu());
}
break;
case 8:
if (true) {
return Collections.<SubstituteMenu>singletonList(new BuildSource_JavaLibraryCP_SubstituteMenu());
}
break;
case 9:
if (true) {
return Collections.<SubstituteMenu>singletonList(new BuildString_SubstituteMenu());
}
break;
case 10:
if (true) {
return Collections.<SubstituteMenu>singletonList(new BuildStringPart_SubstituteMenu());
}
break;
case 11:
if (true) {
return Collections.<SubstituteMenu>singletonList(new BuildTextStringPart_SubstituteMenu());
}
break;
case 12:
if (true) {
return Collections.<SubstituteMenu>singletonList(new BuildVarRefStringPart_SubstituteMenu());
}
break;
case 13:
if (true) {
return Collections.<SubstituteMenu>singletonList(new BuildVariableMacroInitValue_SubstituteMenu());
}
break;
case 14:
if (true) {
return Collections.<SubstituteMenu>singletonList(new BuildVariableMacroInitWithString_SubstituteMenu());
}
break;
default :
}
}
return Collections.<SubstituteMenu>emptyList();
}
