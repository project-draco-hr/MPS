{
  if (!(MatchingUtil.matchNodes(SLinkOperations.getTarget(classLikeProperty,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type")),BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),SLinkOperations.getTarget(SLinkOperations.getTarget(classLikeProperty,MetaAdapterFactory.getReferenceLink(new UUID(-4047124328593011742l,-4867279722304451481l),6478870542308708689l,8585153554445465961l,"decl")),MetaAdapterFactory.getReferenceLink(new UUID(-4047124328593011742l,-4867279722304451481l),8264762413010631473l,5155329496663029311l,"type")),"virtual_toBaseLanguageType_1213877229718",new Object[]{})))) {
{
      MessageTarget errorTarget=new NodeMessageTarget();
      errorTarget=new PropertyMessageTarget("name");
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(classLikeProperty,"Property type is not the same as in descriptor","c7d5b9dd-a05f-4be2-bc73-f2e16994cc67/r:e04b7053-8c89-4f87-b296-94779c625d9d(jetbrains.mps.lang.classLike/jetbrains.mps.lang.classLike.typesystem)","3855110916780273812",null,errorTarget);
{
        BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.lang.classLike.typesystem.fix_SignatureMismatch_QuickFix",false);
        _reporter_2309309498.addIntentionProvider(intentionProvider);
      }
    }
  }
}
