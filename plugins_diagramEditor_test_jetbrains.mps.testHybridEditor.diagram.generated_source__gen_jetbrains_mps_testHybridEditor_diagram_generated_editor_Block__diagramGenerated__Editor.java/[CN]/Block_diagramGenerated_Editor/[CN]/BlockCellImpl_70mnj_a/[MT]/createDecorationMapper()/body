{
  return new Mapper<SNode,NodeDecoratorView>(getSNode(),new NodeDecoratorView()){
    @Override protected void registerSynchronizers(    Mapper.SynchronizersConfiguration configuration){
      super.registerSynchronizers(configuration);
      DiagramCell diagramCell=getDiagramCell();
      if (diagramCell == null) {
        return;
      }
      final Mapper<? super SNode,?> descendantMapper=getDiagramCell().getRootMapper().getDescendantMapper(getSNode());
      if (descendantMapper == null) {
        return;
      }
      configuration.add(Synchronizers.forProperty(myErrorItem,getTarget().hasError));
      configuration.add(Synchronizers.forProperty(((DiagramNodeView)descendantMapper.getTarget()).focused(),getTarget().isSelected));
      ReadableProperty<Rectangle> bounds=((DiagramNodeView)descendantMapper.getTarget()).rect.bounds();
      configuration.add(Synchronizers.forProperty(bounds,getTarget().rectBounds()));
      configuration.add(Synchronizers.forObservableRole(this,myInputPorts,getTarget().inputPortDecotatorView.children(),new MapperFactory<SNode,PortDecoratorView>(){
        public Mapper<? extends SNode,? extends PortDecoratorView> createMapper(        SNode portNode){
          return ((PortCell)getDirectChildCell(portNode)).createDecorationMapper();
        }
      }
));
      configuration.add(Synchronizers.forObservableRole(this,myOutputPorts,getTarget().outputPortDecotatorView.children(),new MapperFactory<SNode,PortDecoratorView>(){
        public Mapper<? extends SNode,? extends PortDecoratorView> createMapper(        SNode portNode){
          return ((PortCell)getDirectChildCell(portNode)).createDecorationMapper();
        }
      }
));
    }
  }
;
}
