{
  return new Mapper<SNode,DiagramNodeView>(getSNode(),createDiagramNodeView()){
    @Override protected void registerSynchronizers(    Mapper.SynchronizersConfiguration configuration){
      super.registerSynchronizers(configuration);
      configuration.add(Synchronizers.forObservableRole(this,myInputPorts,getTarget().inputs.children(),new MapperFactory<SNode,View>(){
        public Mapper<? extends SNode,? extends View> createMapper(        SNode portNode){
          return ((PortCell)getDirectChildCell(portNode)).createMapper();
        }
      }
));
      configuration.add(Synchronizers.forObservableRole(this,myOutputPorts,getTarget().outputs.children(),new MapperFactory<SNode,View>(){
        public Mapper<? extends SNode,? extends View> createMapper(        SNode portNode){
          return ((PortCell)getDirectChildCell(portNode)).createMapper();
        }
      }
));
      configuration.add(Synchronizers.forConstantRole(this,getSource().getNodeId().toString(),getTarget().contentView.children(),new MapperFactory<String,BlockContentView>(){
        public Mapper<? extends String,? extends BlockContentView> createMapper(        String block){
          return new Mapper<String,BlockContentView>(block,new BlockContentView()){
            @Override protected void registerSynchronizers(            Mapper.SynchronizersConfiguration configuration){
              super.registerSynchronizers(configuration);
              myPropertyCell_70mnj_a0a.registerSynchronizers(configuration,getTarget().text());
              myPropertyCell_70mnj_a1a.registerSynchronizers(configuration,getTarget().isClicked);
            }
          }
;
        }
      }
));
      configuration.add(Synchronizers.forProperty(getTarget().bounds(),new WritableProperty<Rectangle>(){
        public void set(        Rectangle rect){
          DiagramCell diagramCell=getDiagramCell();
          if (diagramCell == null) {
            return;
          }
          setX(rect.origin.x + diagramCell.getX());
          setY(rect.origin.y + diagramCell.getY());
          setWidth(rect.dimension.x);
          setHeight(rect.dimension.y);
        }
      }
));
      configuration.add(Synchronizers.forProperty(getTarget().focused(),new Runnable(){
        public void run(){
          if (getTarget().focused().get()) {
            SelectionUtil.selectCell(getContext(),getSNode(),getCellId());
          }
        }
      }
));
    }
  }
;
}
