{
  final PropertyMapperCell parameterPropertyCell_70mnj_a0a=new PropertyMapperCell(editorContext,node){
    protected PropertyMapperCell.WritableModelProperty createModelProperty(){
      return new PropertyMapperCell.WritableModelProperty<String>(){
        protected String getModelPropertyValue(){
          return SPropertyOperations.getString(node,"name");
        }
        protected void setModelPropertyValue(        String value){
          SPropertyOperations.set(node,"name",value);
        }
      }
;
    }
  }
;
  final PropertyMapperCell parameterPropertyCell_70mnj_a1a=new PropertyMapperCell(editorContext,node){
    protected PropertyMapperCell.WritableModelProperty createModelProperty(){
      return new PropertyMapperCell.WritableModelProperty<Boolean>(){
        protected Boolean getModelPropertyValue(){
          return SPropertyOperations.getBoolean(node,"myBooleanProperty");
        }
        protected void setModelPropertyValue(        Boolean value){
          SPropertyOperations.set(node,"myBooleanProperty","" + (value));
        }
      }
;
    }
  }
;
  BlockCell editorCell=new BlockCell(editorContext,node,JetpadUtils.modelProperty(new Computable<Integer>(){
    public Integer compute(){
      return SNodeOperations.getIndexInParent(node) / 2 * 150 + 10;
    }
  }
),JetpadUtils.modelProperty(new Computable<Integer>(){
    public Integer compute(){
      return SPropertyOperations.getInteger(node,"y");
    }
  }
)){
    public Mapper<SNode,DiagramNodeView> getMapper(){
      final Mapper<SNode,DiagramNodeView> mapper=new Mapper<SNode,DiagramNodeView>(node,createDiagramNodeView_70mnj_a(editorContext,node,this)){
        @Override protected void registerSynchronizers(        Mapper.SynchronizersConfiguration configuration){
          super.registerSynchronizers(configuration);
          configuration.add(Synchronizers.forSimpleRole(this,SLinkOperations.getTargets(node,"inputPorts",true),getTarget().inputs.children(),new MapperFactory<SNode,View>(){
            public Mapper<? extends SNode,? extends View> createMapper(            SNode mapperNode){
              EditorCell portCell=editorContext.createNodeCell(mapperNode);
              if (portCell instanceof PortCell) {
                addEditorCell(portCell);
                return ((PortCell)portCell).getMapper();
              }
              return null;
            }
          }
));
          configuration.add(Synchronizers.forSimpleRole(this,SLinkOperations.getTargets(node,"outputPorts",true),getTarget().outputs.children(),new MapperFactory<SNode,View>(){
            public Mapper<? extends SNode,? extends View> createMapper(            SNode mapperNode){
              EditorCell portCell=editorContext.createNodeCell(mapperNode);
              if (portCell instanceof PortCell) {
                addEditorCell(portCell);
                return ((PortCell)portCell).getMapper();
              }
              return null;
            }
          }
));
          configuration.add(Synchronizers.forConstantRole(this,getSource().getNodeId().toString(),getTarget().contentView.children(),new MapperFactory<String,BlockContentView>(){
            public Mapper<? extends String,? extends BlockContentView> createMapper(            String block){
              return new Mapper<String,BlockContentView>(block,new BlockContentView()){
                @Override protected void registerSynchronizers(                Mapper.SynchronizersConfiguration configuration){
                  super.registerSynchronizers(configuration);
                  parameterPropertyCell_70mnj_a0a.registerSynchronizers(configuration,getTarget().text());
                  parameterPropertyCell_70mnj_a1a.registerSynchronizers(configuration,getTarget().isClicked);
                }
              }
;
            }
          }
));
        }
      }
;
      return mapper;
    }
  }
;
  editorCell.addEditorCell(parameterPropertyCell_70mnj_a0a);
  editorCell.addEditorCell(parameterPropertyCell_70mnj_a1a);
  parameterPropertyCell_70mnj_a0a.getEditor().addCellDependentOnNodeProperty(parameterPropertyCell_70mnj_a0a,new Pair<SNodeReference,String>(new SNodePointer(node),"name"));
  parameterPropertyCell_70mnj_a1a.getEditor().addCellDependentOnNodeProperty(parameterPropertyCell_70mnj_a1a,new Pair<SNodeReference,String>(new SNodePointer(node),"myBooleanProperty"));
  editorCell.getEditor().addCellDependentOnNodeProperty(editorCell,new Pair<SNodeReference,String>(new SNodePointer(node),"y"));
  editorCell.setCellId("DiagramNode_70mnj_a");
  editorCell.setBig(true);
  return editorCell;
}
