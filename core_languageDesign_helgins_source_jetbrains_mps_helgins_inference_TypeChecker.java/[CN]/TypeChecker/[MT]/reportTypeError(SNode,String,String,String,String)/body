{
  SimpleErrorReporter reporter=new SimpleErrorReporter(errorString,ruleModel,ruleId);
  reporter.setIntentionProvider(new IntentionProvider(){
    private Intention myIntention=null;
    private boolean myIntentionTaken=false;
    public Intention getIntention(    SNode node,    EditorContext editorContext){
      if (myIntentionTaken) {
        return myIntention;
      }
      try {
        String languageNamespace=NameUtil.namespaceFromLongName(NameUtil.namespaceFromLongName(classFQName));
        Class aClass=ClassLoaderManager.getInstance().getClassFor(MPSModuleRepository.getInstance().getLanguage(languageNamespace),classFQName);
        Intention intention=(Intention)aClass.getConstructor().newInstance();
        myIntention=intention;
        myIntentionTaken=true;
        return intention;
      }
 catch (      Throwable t) {
        LOG.error(t);
        myIntentionTaken=true;
        return null;
      }
    }
  }
);
  reportTypeError(nodeWithError,reporter);
}
