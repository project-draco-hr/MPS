{
  if (node == null)   return null;
  SNode containingRoot=node.getContainingRoot();
  if (containingRoot == null)   return null;
  NodeTypesComponent component=NodeTypesComponentsRepository.getInstance().getNodeTypesComponent(node.getContainingRoot());
  if (!myCheckedRoots.contains(containingRoot) || component == null) {
    final SNode[] result=new SNode[1];
    final NodeTypesComponent component1=NodeTypesComponentsRepository.getInstance().createNodeTypesComponent(containingRoot);
    final NodeTypesComponent temporaryComponent;
    try {
      temporaryComponent=component1.clone();
    }
 catch (    CloneNotSupportedException ex) {
      LOG.error(ex);
      return null;
    }
    setCurrentTypesComponent(temporaryComponent);
    checkWithinRoot(node,new Runnable(){
      public void run(){
        result[0]=temporaryComponent.computeTypesForNodeDuringResolving(node,new Runnable(){
          public void run(){
            myCheckedRoots.add(node);
          }
        }
);
      }
    }
);
    clearCurrentTypesComponent();
    return result[0];
  }
  return getTypeDontCheck(node);
}
