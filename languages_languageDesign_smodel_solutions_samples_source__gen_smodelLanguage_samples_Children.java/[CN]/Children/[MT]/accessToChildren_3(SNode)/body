{
  List<SNode> children1=SNodeOperations.getNodeDescendants(SLinkOperations.getTarget(statement,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b213L,0xf8cc56b214L,"expression")),null,false,new SAbstractConcept[]{});
  List<SNode> children2=SNodeOperations.getNodeDescendants(statement,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b201L,"jetbrains.mps.baseLanguage.structure.BooleanConstant"),false,new SAbstractConcept[]{});
  List<SNode> children3=SNodeOperations.getNodeDescendants(statement,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b201L,"jetbrains.mps.baseLanguage.structure.BooleanConstant"),true,new SAbstractConcept[]{});
  Iterable<SNode> children4=ListSequence.fromList(SNodeOperations.getNodeDescendants(statement,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b201L,"jetbrains.mps.baseLanguage.structure.BooleanConstant"),false,new SAbstractConcept[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SPropertyOperations.getBoolean(it,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b201L,0xf8cc56b202L,"value")) == true;
    }
  }
);
  SNode abcdef;
  SNodeOperations.getNodeDescendants(statement,SNodeOperations.asSConcept(SNodeOperations.getConcept(statement)),false,new SAbstractConcept[]{});
  SNodeOperations.getNodeDescendants(statement,null,false,new SAbstractConcept[]{});
  SNodeOperations.getNodeDescendants(statement,SNodeOperations.asSConcept(SNodeOperations.getConcept(statement)),false,new SAbstractConcept[]{});
  SNodeOperations.getNodeDescendants(statement,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b201L,"jetbrains.mps.baseLanguage.structure.BooleanConstant"),false,new SAbstractConcept[]{});
  SNodeOperations.getNodeDescendants(statement,SNodeOperations.asSConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b201L,"jetbrains.mps.baseLanguage.structure.BooleanConstant")),false,new SAbstractConcept[]{});
  SAbstractConcept aConcept=null;
  SNodeOperations.getNodeDescendants(statement,SNodeOperations.asSConcept(aConcept),false,new SAbstractConcept[]{});
}
