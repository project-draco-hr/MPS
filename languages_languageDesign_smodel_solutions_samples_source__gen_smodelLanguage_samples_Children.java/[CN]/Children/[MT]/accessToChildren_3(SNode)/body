{
  List<SNode> children1=SNodeOperations.getDescendants(SLinkOperations.getTarget(statement,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123155l,1068580123156l,"expression")),null,false,new String[]{});
  List<SNode> children2=SNodeOperations.getDescendants(statement,"jetbrains.mps.baseLanguage.structure.BooleanConstant",false,new String[]{});
  List<SNode> children3=SNodeOperations.getDescendants(statement,"jetbrains.mps.baseLanguage.structure.BooleanConstant",true,new String[]{});
  Iterable<SNode> children4=ListSequence.fromList(SNodeOperations.getDescendants(statement,"jetbrains.mps.baseLanguage.structure.BooleanConstant",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SPropertyOperations.getBoolean(it,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1068580123137l,1068580123138l,"value")) == true;
    }
  }
);
  SNode abcdef;
  SNodeOperations.getDescendants(statement,NameUtil.nodeFQName(SNodeOperations.getConceptDeclaration(statement)),false,new String[]{});
  SNodeOperations.getDescendants(statement,null,false,new String[]{});
  SNodeOperations.getDescendants(statement,NameUtil.nodeFQName(SNodeOperations.getConceptDeclaration(statement)),false,new String[]{});
  SNodeOperations.getDescendants(statement,"jetbrains.mps.baseLanguage.structure.BooleanConstant",false,new String[]{});
  SNodeOperations.getDescendants(statement,NameUtil.nodeFQName(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.BooleanConstant")),false,new String[]{});
  SNode aConcept=null;
  SNodeOperations.getDescendants(statement,NameUtil.nodeFQName(aConcept),false,new String[]{});
}
