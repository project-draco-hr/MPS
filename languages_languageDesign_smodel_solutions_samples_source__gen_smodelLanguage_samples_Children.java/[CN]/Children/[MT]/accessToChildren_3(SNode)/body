{
  List<SNode> children1=SNodeOperations.getNodeDescendants(SLinkOperations.getTarget(statement,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123155l,1068580123156l,"expression")),null,false,new SAbstractConcept[]{});
  List<SNode> children2=SNodeOperations.getNodeDescendants(statement,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123137l,"jetbrains.mps.baseLanguage.structure.BooleanConstant"),false,new SAbstractConcept[]{});
  List<SNode> children3=SNodeOperations.getNodeDescendants(statement,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123137l,"jetbrains.mps.baseLanguage.structure.BooleanConstant"),true,new SAbstractConcept[]{});
  Iterable<SNode> children4=ListSequence.fromList(SNodeOperations.getNodeDescendants(statement,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123137l,"jetbrains.mps.baseLanguage.structure.BooleanConstant"),false,new SAbstractConcept[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SPropertyOperations.getBoolean(it,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1068580123137l,1068580123138l,"value")) == true;
    }
  }
);
  SNode abcdef;
  SNodeOperations.getNodeDescendants(statement,SNodeOperations.asSConcept(SNodeOperations.getConceptDeclaration(statement)),false,new SAbstractConcept[]{});
  SNodeOperations.getNodeDescendants(statement,null,false,new SAbstractConcept[]{});
  SNodeOperations.getNodeDescendants(statement,SNodeOperations.asSConcept(SNodeOperations.getConceptDeclaration(statement)),false,new SAbstractConcept[]{});
  SNodeOperations.getNodeDescendants(statement,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123137l,"jetbrains.mps.baseLanguage.structure.BooleanConstant"),false,new SAbstractConcept[]{});
  SNodeOperations.getNodeDescendants(statement,SNodeOperations.asSConcept(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.BooleanConstant")),false,new SAbstractConcept[]{});
  SNode aConcept=null;
  SNodeOperations.getNodeDescendants(statement,SNodeOperations.asSConcept(aConcept),false,new SAbstractConcept[]{});
}
