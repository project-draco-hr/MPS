{
  SNode ct=SConceptOperations.createNewNode("jetbrains.mps.nanoj.structure.ClassifierType",null);
  SLinkOperations.setTarget(ct,"classifier",SNodeOperations.getParent(SLinkOperations.getTarget(nodeToCheck,"constructor",false)),false);
{
    SNode _nodeToCheck_1029348928467=nodeToCheck;
    BaseQuickFixProvider intentionProvider=null;
    typeCheckingContext.createEquation(typeCheckingContext.typeOf(nodeToCheck,"r:00000000-0000-4000-0000-011c895905de(jetbrains.mps.nanoj.helgins)","1197638406461",true),ct,_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895905de(jetbrains.mps.nanoj.helgins)","1197638406460",intentionProvider);
  }
  if (ListSequence.fromList(SLinkOperations.getTargets(nodeToCheck,"parameter",true)).count() != ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(nodeToCheck,"constructor",false),"parameter",true)).count()) {
{
      BaseQuickFixProvider intentionProvider=null;
      typeCheckingContext.reportTypeError(nodeToCheck,"Wrong parameters number","r:00000000-0000-4000-0000-011c895905de(jetbrains.mps.nanoj.helgins)","1197638406466",intentionProvider);
    }
    return;
  }
  List<SNode> args=SLinkOperations.getTargets(nodeToCheck,"parameter",true);
  List<SNode> params=SLinkOperations.getTargets(SLinkOperations.getTarget(nodeToCheck,"constructor",false),"parameter",true);
  for (int i=0; i < ListSequence.fromList(SLinkOperations.getTargets(nodeToCheck,"parameter",true)).count(); i=i + 1) {
{
      SNode _nodeToCheck_1029348928467=nodeToCheck;
      BaseQuickFixProvider intentionProvider=null;
      typeCheckingContext.createLessThanInequationStrong(typeCheckingContext.typeOf(ListSequence.fromList(args).getElement(i),"r:00000000-0000-4000-0000-011c895905de(jetbrains.mps.nanoj.helgins)","1197638406518",true),SLinkOperations.getTarget(ListSequence.fromList(params).getElement(i),"type",true),_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895905de(jetbrains.mps.nanoj.helgins)","1197638406516",false,0,intentionProvider);
    }
  }
}
