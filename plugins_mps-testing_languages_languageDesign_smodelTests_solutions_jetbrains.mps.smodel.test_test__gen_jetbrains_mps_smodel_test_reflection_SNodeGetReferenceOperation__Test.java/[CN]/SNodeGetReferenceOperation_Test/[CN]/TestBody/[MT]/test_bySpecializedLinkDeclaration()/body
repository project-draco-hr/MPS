{
  this.addNodeById("2906110183022090592");
  this.addNodeById("2906110183022122665");
  this.addNodeById("2906110183022122679");
  SReference refByOriginalLink=SNodeOperations.getReference(SNodeOperations.cast(this.getNodeById("2906110183022122680"),"jetbrains.mps.lang.smodelTests.structure.ReferenceContainerSubConcept"),SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.smodelTests.structure.ReferenceContainer","rightChild"));
  Assert.assertEquals(SNodeOperations.cast(this.getNodeById("2906110183022122670"),"jetbrains.mps.lang.smodelTests.structure.ChildSubConcept"),SLinkOperations.getTargetNode(refByOriginalLink));
  Assert.assertEquals(SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.smodelTests.structure.ReferenceContainer","rightChild"),SLinkOperations.findLinkDeclaration(refByOriginalLink));
  Assert.assertEquals(SPropertyOperations.getString(SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.smodelTests.structure.ReferenceContainer","rightChild"),MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1071489288298l,1071599776563l,"role")),SLinkOperations.getRole(refByOriginalLink));
  Assert.assertNotNull(SLinkOperations.getResolveInfo(refByOriginalLink));
  SReference refBySpecializedLink=SNodeOperations.getReference(SNodeOperations.cast(this.getNodeById("2906110183022122680"),"jetbrains.mps.lang.smodelTests.structure.ReferenceContainerSubConcept"),SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.smodelTests.structure.ReferenceContainerSubConcept","specializedRightChild"));
  Assert.assertEquals(refByOriginalLink,refBySpecializedLink);
}
