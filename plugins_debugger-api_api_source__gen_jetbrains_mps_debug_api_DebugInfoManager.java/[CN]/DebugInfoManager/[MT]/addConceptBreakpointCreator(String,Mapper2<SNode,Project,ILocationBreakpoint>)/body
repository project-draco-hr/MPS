{
  Tuples._2<_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._return_P2_E0<? extends ILocationBreakpoint,? super SNode,? super Project>> pair=MultiTuple.<_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._return_P2_E0<? extends ILocationBreakpoint,? super SNode,? super Project>>from(new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode concept){
      return SModelUtil.isAssignableConcept(concept,baseConcept);
    }
  }
,new _FunctionTypes._return_P2_E0<ILocationBreakpoint,SNode,Project>(){
    public ILocationBreakpoint invoke(    SNode node,    Project project){
      return breakpointCreator.value(node,project);
    }
  }
);
  MapSequence.fromMap(myAddedByConceptCreators).put(baseConcept,pair);
  SetSequence.fromSet(myCreators).addElement(pair);
}
