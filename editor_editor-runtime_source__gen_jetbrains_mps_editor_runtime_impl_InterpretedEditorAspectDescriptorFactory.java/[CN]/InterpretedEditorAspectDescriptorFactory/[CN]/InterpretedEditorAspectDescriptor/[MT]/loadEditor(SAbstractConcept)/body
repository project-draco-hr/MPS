{
  Language language=ModuleRepositoryFacade.getInstance().getModule(myLanguageRuntime.getNamespace(),Language.class);
  if (language == null) {
    return null;
  }
  String editorClassName=language.getModuleName() + "." + LanguageAspect.EDITOR.getName()+ "."+ concept.getName()+ "_Editor";
  Class<? extends EditorAspect> editorClass=ClassLoaderManager.getInstance().getClass(language,editorClassName);
  if (editorClass == null) {
    return null;
  }
  try {
    Constructor<? extends EditorAspect> cons=editorClass.getConstructor();
    return cons.newInstance();
  }
 catch (  NoSuchMethodException e) {
    LOG.error(e);
  }
catch (  SecurityException e) {
    LOG.error(e);
  }
catch (  InstantiationException e) {
    LOG.error(e);
  }
catch (  IllegalAccessException e) {
    LOG.error(e);
  }
catch (  InvocationTargetException e) {
    LOG.error(e);
  }
catch (  IllegalArgumentException e) {
    LOG.error(e);
  }
catch (  ClassCastException e) {
    LOG.error(e);
  }
  return null;
}
