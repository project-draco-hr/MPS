{
  String conceptFQName=abstractConcept.getQualifiedName();
  EditorAspect editorAspect=MapSequence.fromMap(myEditorAspects).get(conceptFQName);
  if (editorAspect != null) {
    return editorAspect;
  }
  editorAspect=loadEditor(abstractConcept);
  if (editorAspect != null) {
    MapSequence.fromMap(myEditorAspects).put(conceptFQName,editorAspect);
    return editorAspect;
  }
  if (abstractConcept instanceof SInterfaceConcept) {
    for (    SInterfaceConcept superInterface : Sequence.fromIterable(((SInterfaceConcept)abstractConcept).getSuperInterfaces())) {
      EditorAspect superInerfaceEditor=loadSuperConceptEditor(superInterface);
      if (superInerfaceEditor != null) {
        return superInerfaceEditor;
      }
    }
  }
 else {
    SConcept concept=(SConcept)abstractConcept;
    EditorAspect superConceptEditor=loadSuperConceptEditor(concept.getSuperConcept());
    if (superConceptEditor != null) {
      return superConceptEditor;
    }
    for (    SInterfaceConcept superInterface : Sequence.fromIterable(concept.getSuperInterfaces())) {
      EditorAspect superInerfaceEditor=loadSuperConceptEditor(superInterface);
      if (superInerfaceEditor != null) {
        return superInerfaceEditor;
      }
    }
  }
  return null;
}
