{
  if (ThreadUtils.isEventDispatchThread()) {
    throw new RuntimeException("Can't run make from the event dispatch thread");
  }
  return makeModels(project,ListSequence.fromListWithValues(new ArrayList<SModel>(),ListSequence.fromList(nodes).where(new IWhereFilter<SNodePointer>(){
    public boolean accept(    SNodePointer it){
      return it != null;
    }
  }
).select(new ISelector<SNodePointer,SModelDescriptor>(){
    public SModelDescriptor select(    SNodePointer it){
      return it.getModelReference() == null ? null : SModelRepository.getInstance().getModelDescriptor(it.getModelReference());
    }
  }
).distinct().where(new IWhereFilter<SModelDescriptor>(){
    public boolean accept(    SModelDescriptor it){
      return ModelGenerationStatusManager.getInstance().generationRequired(it,new ProjectOperationContext(ProjectHelper.toMPSProject(project)));
    }
  }
)));
}
