{
  if (ThreadUtils.isEventDispatchThread()) {
    throw new RuntimeException("Can't run make from the event dispatch thread");
  }
  final Wrappers._T<List<SModel>> descriptors=new Wrappers._T<List<SModel>>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      descriptors.value=ListSequence.fromListWithValues(new ArrayList<SModel>(),ListSequence.fromList(nodes).select(new ISelector<SNode,SModel>(){
        public SModel select(        SNode it){
          return (SModel)SNodeOperations.getModel(it).getModelDescriptor();
        }
      }
).distinct().where(new IWhereFilter<SModel>(){
        public boolean accept(        SModel it){
          return ModelGenerationStatusManager.getInstance().generationRequired(it);
        }
      }
));
    }
  }
);
  return makeModels(project,descriptors.value);
}
