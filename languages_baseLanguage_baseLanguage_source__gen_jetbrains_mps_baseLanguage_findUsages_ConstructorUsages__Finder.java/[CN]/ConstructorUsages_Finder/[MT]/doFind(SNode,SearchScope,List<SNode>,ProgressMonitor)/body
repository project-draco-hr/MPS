{
  monitor.start(getDescription(),2);
  try {
    for (    SNode nodeUsage : ListSequence.fromList(FindUtils.executeFinder("jetbrains.mps.lang.structure.findUsages.NodeUsages_Finder",node,scope,monitor.subTask(1)))) {
      ListSequence.fromList(_results).addElement(nodeUsage);
    }
    for (    SNode subclassResult : ListSequence.fromList(FindUtils.executeFinder("jetbrains.mps.baseLanguage.findUsages.StraightDerivedClasses_Finder",SNodeOperations.getNodeAncestor(node,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept"),false,false),scope,monitor.subTask(1)))) {
      for (      SNode constructorNode : Sequence.fromIterable(ClassConcept_Behavior.call_constructors_5292274854859503373(SNodeOperations.cast(subclassResult,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept"))))) {
        for (        SNode invocation : ListSequence.fromList(SNodeOperations.getNodeDescendants(constructorNode,null,false,new SAbstractConcept[]{})).where(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1070475587102l,"jetbrains.mps.baseLanguage.structure.SuperConstructorInvocation"));
          }
        }
)) {
          boolean thisConstructor=true;
          SNode invocationNode=SNodeOperations.cast(invocation,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1070475587102l,"jetbrains.mps.baseLanguage.structure.SuperConstructorInvocation"));
          if (ListSequence.fromList(SLinkOperations.getChildren(invocationNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141038l,"actualArgument"))).count() == ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123134l,"parameter"))).count()) {
            for (int i=0; i < ListSequence.fromList(SLinkOperations.getChildren(invocationNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141038l,"actualArgument"))).count(); i++) {
              SNode actualArgument=ListSequence.fromList(SLinkOperations.getChildren(invocationNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141038l,"actualArgument"))).getElement(i);
              SNode formalArgument=ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123134l,"parameter"))).getElement(i);
              if (!(TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(actualArgument),SLinkOperations.getTarget(formalArgument,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type"))))) {
                thisConstructor=false;
              }
            }
            if (thisConstructor) {
              ListSequence.fromList(_results).addElement(invocationNode);
            }
          }
        }
      }
    }
    SNode enumNode=SNodeOperations.cast(SNodeOperations.getNodeAncestor(node,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1083245097125l,"jetbrains.mps.baseLanguage.structure.EnumClass"),false,false),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1083245097125l,"jetbrains.mps.baseLanguage.structure.EnumClass"));
    if (enumNode != null) {
      for (      SNode enumConstant : ListSequence.fromList(SLinkOperations.getChildren(enumNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1083245097125l,1083245396908l,"enumConstant")))) {
        boolean thisConstructor=true;
        if (ListSequence.fromList(SLinkOperations.getChildren(enumConstant,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141038l,"actualArgument"))).count() == ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123134l,"parameter"))).count()) {
          for (int i=0; i < ListSequence.fromList(SLinkOperations.getChildren(enumConstant,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141038l,"actualArgument"))).count(); i++) {
            SNode actualArgument=ListSequence.fromList(SLinkOperations.getChildren(enumConstant,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141038l,"actualArgument"))).getElement(i);
            SNode formalArgument=ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123134l,"parameter"))).getElement(i);
            if (!(TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(actualArgument),SLinkOperations.getTarget(formalArgument,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type"))))) {
              thisConstructor=false;
            }
          }
          if (thisConstructor) {
            ListSequence.fromList(_results).addElement(enumConstant);
          }
        }
      }
    }
  }
  finally {
    monitor.done();
  }
}
