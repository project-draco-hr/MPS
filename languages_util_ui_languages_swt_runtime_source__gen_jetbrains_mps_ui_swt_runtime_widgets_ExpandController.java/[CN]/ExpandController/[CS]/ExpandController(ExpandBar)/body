{
  eb.addExpandListener(new ExpandListener(){
    @Override public void itemCollapsed(    ExpandEvent event){
      ExpandItem ei=((ExpandItem)event.item);
      if (ExpandController.this.vetoCollapse(ei)) {
        event.doit=false;
        ei.setExpanded(false);
      }
    }
    @Override public void itemExpanded(    ExpandEvent event){
      if (ExpandController.this.items_trans.isEmpty()) {
        final ExpandItem expanded=((ExpandItem)event.item);
        Rectangle carea=eb.getClientArea();
        int height=carea.height - carea.y - eb.getSpacing();
        for (        ExpandItem ei : eb.getItems()) {
          if (ei != expanded) {
            height-=ei.getHeaderHeight() + eb.getSpacing();
            ExpandController.this.items_trans.add(ei);
          }
        }
        final int expHeight=height - expanded.getHeaderHeight() - eb.getSpacing();
        Display.getCurrent().asyncExec(new Runnable(){
          @Override public void run(){
            ExpandController.this.doCollapse();
            expanded.setHeight(expHeight);
          }
        }
);
      }
    }
  }
);
  eb.addControlListener(new ControlListener(){
    @Override public void controlMoved(    ControlEvent e){
    }
    @Override public void controlResized(    ControlEvent e){
      Rectangle carea=eb.getClientArea();
      int height=carea.height - carea.y - eb.getSpacing();
      ExpandItem exp=null;
      for (      ExpandItem ei : eb.getItems()) {
        if (ei.getExpanded()) {
          exp=ei;
        }
 else {
          height-=ei.getHeaderHeight() + eb.getSpacing();
        }
      }
      if (exp != null) {
        final ExpandItem expande=exp;
        final int expHeight=height - exp.getHeaderHeight() - eb.getSpacing();
        Display.getCurrent().asyncExec(new Runnable(){
          @Override public void run(){
            expande.setHeight(expHeight);
          }
        }
);
      }
    }
  }
);
}
