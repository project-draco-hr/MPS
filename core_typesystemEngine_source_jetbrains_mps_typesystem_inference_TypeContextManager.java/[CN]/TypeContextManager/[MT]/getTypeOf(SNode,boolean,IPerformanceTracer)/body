{
  if (node == null)   return null;
  ITypeContextOwner owner=new ITypeContextOwner(){
  }
;
  SNode root=node.getContainingRoot();
  Stack<Object> resolve=myResolveStack.get();
  if (resolve == null) {
    resolve=new Stack<Object>();
    myResolveStack.set(resolve);
  }
  if (resolve.size() > 10) {
    LOG.warning("Type checking failed. Resolve stack:\n " + myResolveStack);
    return null;
  }
  if (generationMode) {
    TypeCheckingContext context=tracer == null ? createTypeCheckingContext(node) : createTracingTypeCheckingContext(node);
    if (context == null)     return null;
    try {
      return context.getTypeOf_generationMode(node);
    }
  finally {
      context.dispose();
    }
  }
  TypeCheckingContext context=getOrCreateContext(root,owner,true);
  try {
    if (myComputeInNormalMode && context != null && context.isCheckedRoot(false)) {
      myComputeInNormalMode=false;
      SNode type=context.getTypeOf_normalMode(node);
      myComputeInNormalMode=true;
      return type;
    }
    if (!resolve.isEmpty()) {
      if (context == null || !context.isNonTypesystemComputation()) {
        TypeCheckingContext resolveContext=createTypeCheckingContextForResolve(node);
        SNode type=resolveContext.getTypeOf(node,myTypeChecker);
        resolveContext.dispose();
        return type;
      }
    }
    if (context == null)     return null;
    return context.getTypeOf(node,myTypeChecker);
  }
  finally {
    removeOwnerForRootNodeContext(root,owner);
  }
}
