{
  ModelAccess.assertLegalRead();
  if (node == null || node.getModel() == null)   return;
  final SNode rootNode=node.getContainingRoot();
synchronized (myLock) {
    SNodePointer rootNodePointer=new SNodePointer(rootNode);
    List<TypecheckingContextHolder> contextWithOwners=myTypeCheckingContexts.get(rootNodePointer);
    if (contextWithOwners != null) {
      for (ListIterator<TypecheckingContextHolder> it=contextWithOwners.listIterator(); it.hasNext(); ) {
        TypecheckingContextHolder contextHolder=it.next();
        ITypeContextOwner o=contextHolder.getOwner();
        if (o == owner) {
          if (!owner.reuseTypecheckingContext()) {
            contextHolder.release();
            if (!contextHolder.isActive()) {
              it.remove();
            }
          }
 else {
            contextHolder.release();
            if (!contextHolder.isActive()) {
              it.remove();
            }
          }
          break;
        }
      }
      if (contextWithOwners.isEmpty()) {
        myTypeCheckingContexts.remove(rootNodePointer);
      }
    }
  }
}
