{
  SModule contextModule=contextNode.getModel().getModule();
  Set<Language> contextLanguages=SetSequence.fromSet(new HashSet<Language>());
  for (  SModule module : CollectionSequence.fromCollection(new GlobalModuleDependenciesManager(contextModule).getModules(GlobalModuleDependenciesManager.Deptype.VISIBLE))) {
    if (module instanceof Language) {
      SetSequence.fromSet(contextLanguages).addElement((Language)module);
    }
  }
  Collection<Language> usedLanguages=new GlobalModuleDependenciesManager(contextModule).getUsedLanguages();
  Iterable<SModel> strucModels=SetSequence.fromSet(contextLanguages).select(new ISelector<Language,SModel>(){
    public SModel select(    Language it){
      return it.getStructureModelDescriptor();
    }
  }
).union(CollectionSequence.fromCollection(usedLanguages).translate(new ITranslator2<Language,SModel>(){
    public Iterable<SModel> translate(    Language it){
      return it.getAccessoryModels();
    }
  }
).where(new IWhereFilter<SModel>(){
    public boolean accept(    SModel it){
      return LanguageAspect.STRUCTURE.is(it);
    }
  }
)).where(new IWhereFilter<SModel>(){
    public boolean accept(    SModel it){
      return it != null;
    }
  }
);
  return Sequence.fromIterable(strucModels).translate(new ITranslator2<SModel,SNode>(){
    public Iterable<SNode> translate(    SModel it){
      return (Iterable<SNode>)it.getRootNodes();
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,SNodeOperations.asSConcept(metaConcept));
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(it,MetaAdapterFactory.getInterfaceConcept(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,"jetbrains.mps.lang.core.structure.INamedConcept"));
    }
  }
);
}
