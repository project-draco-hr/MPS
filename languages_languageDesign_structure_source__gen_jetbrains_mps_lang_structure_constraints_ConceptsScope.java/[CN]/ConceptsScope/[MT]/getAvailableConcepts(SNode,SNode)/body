{
  SModule contextModule=contextNode.getModel().getModelDescriptor().getModule();
  Set<Language> contextLanguages=SetSequence.fromSet(new HashSet<Language>());
  for (  SModule module : Sequence.fromIterable(contextModule.getModuleScope().getModules())) {
    if (module instanceof Language) {
      SetSequence.fromSet(contextLanguages).addElement((Language)module);
    }
  }
  Iterable<SNode> concepts=SetSequence.fromSet(contextLanguages).select(new ISelector<Language,SModel>(){
    public SModel select(    Language it){
      return it.getStructureModelDescriptor();
    }
  }
).where(new IWhereFilter<SModel>(){
    public boolean accept(    SModel it){
      return it != null;
    }
  }
).translate(new ITranslator2<SModel,SNode>(){
    public Iterable<SNode> translate(    SModel it){
      return (Iterable<SNode>)it.getRootNodes();
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,NameUtil.nodeFQName(metaConcept));
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(it,"jetbrains.mps.lang.core.structure.INamedConcept");
    }
  }
);
  return concepts;
}
