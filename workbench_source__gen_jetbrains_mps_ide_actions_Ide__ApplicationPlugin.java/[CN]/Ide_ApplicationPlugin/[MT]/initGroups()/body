{
  List<BaseGroup> groups=new ArrayList<BaseGroup>();
  groups.add(new ProjectPaneNodeActions_ActionGroup());
  groups.add(new ProjectPaneModelActions_ActionGroup());
  groups.add(new ProjectActions_ActionGroup());
  groups.add(new ProjectNewActions_ActionGroup());
  groups.add(new LanguageActions_ActionGroup());
  groups.add(new LanguageNewActions_ActionGroup());
  groups.add(new SolutionActions_ActionGroup());
  groups.add(new SolutionNewActions_ActionGroup());
  groups.add(new DevkitActions_ActionGroup());
  groups.add(new GeneratorNewActions_ActionGroup());
  groups.add(new GeneratorActions_ActionGroup());
  groups.add(new TransientModulesActions_ActionGroup());
  groups.add(new EditorPopup_ActionGroup());
  groups.add(new EditorInternal_ActionGroup());
  groups.add(new Edit_ActionGroup());
  groups.add(new Generate_ActionGroup());
  groups.add(new Goto_ActionGroup());
  groups.add(new Tools_ActionGroup());
  groups.add(new Help_ActionGroup());
  groups.add(new ProjectPaneNodeActionsInternal_ActionGroup());
  groups.add(new ProjectPaneModelActionsInternal_ActionGroup());
  groups.add(new LanguageNewCustomPartActions_ActionGroup());
  groups.add(new Build_ActionGroup());
  groups.add(new AbstractFileActions_ActionGroup());
  groups.add(new FileActions_ActionGroup());
  groups.add(new FolderActions_ActionGroup());
  groups.add(new ModuleActions_ActionGroup());
  groups.add(new ProjectPaneModelRefactoring_ActionGroup());
  groups.add(new LanguageRefactoring_ActionGroup());
  return groups;
}
