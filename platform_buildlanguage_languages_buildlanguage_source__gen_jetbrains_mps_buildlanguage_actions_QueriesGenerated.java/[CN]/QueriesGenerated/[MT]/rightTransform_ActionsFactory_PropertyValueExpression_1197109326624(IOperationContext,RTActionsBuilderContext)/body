{
  List<INodeSubstituteAction> result=new ArrayList<INodeSubstituteAction>();
{
    ConceptDeclaration concept=SModelUtil_new.findConceptDeclaration("jetbrains.mps.buildlanguage.structure.PlusOperation",operationContext.getScope());
    result.add(new AbstractRTransformHintSubstituteAction(BaseAdapter.fromAdapter(concept),_parameterObject.getSourceNode()){
      public SNode doSubstitute(      String pattern){
        SNode newNode=SConceptOperations.createNewNode("jetbrains.mps.buildlanguage.structure.PlusOperation",null);
        SNodeOperations.replaceWithAnother(_parameterObject.getSourceNode(),newNode);
        SLinkOperations.setTarget(newNode,"left",_parameterObject.getSourceNode(),true);
        return newNode;
      }
      public String getMatchingText(      String pattern){
        return "+";
      }
      public String getDescriptionText(      String pattern){
        return "plus operation";
      }
    }
);
  }
  return result;
}
