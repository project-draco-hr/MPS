{
  List<INodeSubstituteAction> result=new ArrayList<INodeSubstituteAction>();
{
    AbstractConceptDeclaration concept=SModelUtil_new.findAbstractConceptDeclaration("jetbrains.mps.buildlanguage.structure.ICommented",operationContext.getScope());
    result.add(new AbstractRTransformHintSubstituteAction(BaseAdapter.fromAdapter(concept),_context.getSourceNode()){
      public SNode doSubstitute(      String pattern){
        SPropertyOperations.set(_context.getSourceNode(),"shortDescription","");
        return _context.getSourceNode();
      }
      public String getMatchingText(      String pattern){
        return "//";
      }
      public String getDescriptionText(      String pattern){
        return "comment";
      }
    }
);
  }
  return result;
}
