{
  super("SelectOperation -> SelectInEditorOperation");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "SelectOperation without parameters";
    }
    public String getAdditionalInfo(){
      return "SelectOperation without parameters";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.editor.structure.SelectOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return ListSequence.fromList(SLinkOperations.getTargets(node,"selectLaterParameter",true)).isEmpty();
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode selectInEditorOperation=SNodeOperations.replaceWithNewChild(node,"jetbrains.mps.lang.editor.structure.SelectInEditorOperation");
      SLinkOperations.setTarget(selectInEditorOperation,"editorContext",SLinkOperations.getTarget(node,"editorContext",true),true);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
