{
  super("SelectOperation -> SelectInEditorOperation");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.selection.SelectionManager classified with static fields from jetbrains.mps.openapi.editor.selection.SelectionManager";
    }
    public String getAdditionalInfo(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.selection.SelectionManager classified with static fields from jetbrains.mps.openapi.editor.selection.SelectionManager";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      if (!(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.FIRST_CELL").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.LAST_CELL").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.FIRST_EDITABLE_CELL").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.LAST_EDITABLE_CELL").equals(targetNodeId)) {
        return true;
      }
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),oldReference.getTargetNodeId(),((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("staticFieldDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up and remove all methods from jetbrains.mps.nodeEditor.selection.SelectionManager to jetbrains.mps.openapi.editor.selection.SelectionManager";
    }
    public String getAdditionalInfo(){
      return "Pull up and remove all methods from jetbrains.mps.nodeEditor.selection.SelectionManager to jetbrains.mps.openapi.editor.selection.SelectionManager";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      if (!(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.clearSelection():void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.getSelection():jetbrains.mps.openapi.editor.selection.Selection").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.getDeepestSelection():jetbrains.mps.openapi.editor.selection.Selection").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.setSelection(jetbrains.mps.openapi.editor.selection.Selection):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.pushSelection(jetbrains.mps.openapi.editor.selection.Selection):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.popSelection():jetbrains.mps.openapi.editor.selection.Selection").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.getSelectionStackIterable():java.lang.Iterable").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.getSelectionInfoStack():java.util.List").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.setSelectionInfoStack(java.util.List):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.getSelectionStackSize():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.createSelection(jetbrains.mps.openapi.editor.cells.EditorCell):jetbrains.mps.openapi.editor.selection.Selection").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.createRangeSelection(org.jetbrains.mps.openapi.model.SNode,org.jetbrains.mps.openapi.model.SNode):jetbrains.mps.openapi.editor.selection.Selection").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.setSelection(jetbrains.mps.openapi.editor.cells.EditorCell):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.setSelection(jetbrains.mps.openapi.editor.cells.EditorCell_Label,int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.setSelection(jetbrains.mps.openapi.editor.cells.EditorCell_Label,int,int,int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.setSelection(org.jetbrains.mps.openapi.model.SNode):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.setSelection(org.jetbrains.mps.openapi.model.SNode,java.lang.String):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.setSelection(org.jetbrains.mps.openapi.model.SNode,java.lang.String,int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.setSelection(org.jetbrains.mps.openapi.model.SNode,java.lang.String,int,int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.addSelectionListener(jetbrains.mps.openapi.editor.selection.SelectionListener):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.removeSelectionListener(jetbrains.mps.openapi.editor.selection.SelectionListener):void").equals(targetNodeId)) {
        return true;
      }
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),oldReference.getTargetNodeId(),((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("baseMethodDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
