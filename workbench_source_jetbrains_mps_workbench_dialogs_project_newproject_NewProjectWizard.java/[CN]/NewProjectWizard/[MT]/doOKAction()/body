{
  super.doOKAction();
  int exitCode=1;
  if (myProject != null) {
    exitCode=Messages.showDialog(IdeBundle.message("prompt.open.project.in.new.frame"),IdeBundle.message("title.open.project"),new String[]{IdeBundle.message("button.newframe"),IdeBundle.message("button.existingframe")},1,Messages.getQuestionIcon());
  }
  final String[] error=new String[]{null};
  ProgressManager.getInstance().run(new Task.Modal(myProject,"Creating",false){
    public void run(    @NotNull() ProgressIndicator indicator){
      indicator.setIndeterminate(true);
      error[0]=createDirs();
      if (error[0] != null) {
        return;
      }
      createProject();
    }
  }
);
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      SModelRepository.getInstance().saveAll();
    }
  }
);
  if (error[0] != null) {
    Messages.showErrorDialog(getContentPane(),error[0]);
    return;
  }
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      if (myCreatedSolution != null && myCreatedLanguage != null) {
        addLanguageImportToSolution(myCreatedLanguage,myCreatedSolution);
      }
    }
  }
);
  if (myCreatedProject == null)   return;
  myCreatedProject.save();
  if ((exitCode == 1) && (myProject != null)) {
    ProjectUtil.closeProject(myProject);
  }
  ProjectManagerEx projectManager=ProjectManagerEx.getInstanceEx();
  boolean opened=projectManager.openProject(myCreatedProject);
  if (!opened)   return;
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        public void run(){
          myCreatedProject.getComponent(ProjectPane.class).activate(true);
        }
      }
,ModalityState.NON_MODAL);
    }
  }
,ModalityState.NON_MODAL);
}
