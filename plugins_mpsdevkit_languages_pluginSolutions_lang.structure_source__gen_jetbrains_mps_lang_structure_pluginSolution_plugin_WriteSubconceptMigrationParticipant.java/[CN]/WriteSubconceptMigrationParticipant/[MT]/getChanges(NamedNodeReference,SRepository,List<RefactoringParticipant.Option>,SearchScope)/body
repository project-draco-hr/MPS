{
  if (initialState == null || !(ListSequence.fromList(selectedOptions).contains(LanguageStructureMigrationParticipant.OPTION)) || !(ListSequence.fromList(selectedOptions).contains(UpdateReferencesParticipant.OPTION))) {
    return ListSequence.fromList(new ArrayList<RefactoringParticipant.Change<NamedNodeReference,WriteSubconceptMigrationParticipant.MigrationScriptRef>>());
  }
{
    final SearchScope scope=CommandUtil.createScope(searchScope);
    QueryExecutionContext context=new QueryExecutionContext(){
      public SearchScope getDefaultSearchScope(){
        return scope;
      }
    }
;
    List<SNode> subConcepts=CollectionSequence.fromCollection(CommandUtil.instances(CommandUtil.createConsoleScope(null,false,context),MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979ba0450L,"jetbrains.mps.lang.structure.structure.ConceptDeclaration"))).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return eq_8k3jue_a0a0a0a0a0a0d0e0k(SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979ba0450L,0xf979be93cfL,"extends")).getReference(),initialState);
      }
    }
).toListSequence();
    List<Language> subModules=ListSequence.fromList(subConcepts).select(new ISelector<SNode,SModule>(){
      public SModule select(      SNode it){
        return SNodeOperations.getModel(it).getModule();
      }
    }
).distinct().ofType(Language.class).toListSequence();
    List<RefactoringParticipant.Change<NamedNodeReference,WriteSubconceptMigrationParticipant.MigrationScriptRef>> changes=ListSequence.fromList(subModules).select(new ISelector<Language,RefactoringParticipant.Change<NamedNodeReference,WriteSubconceptMigrationParticipant.MigrationScriptRef>>(){
      public RefactoringParticipant.Change<NamedNodeReference,WriteSubconceptMigrationParticipant.MigrationScriptRef> select(      final Language subModule){
        return new RefactoringParticipant.Change<NamedNodeReference,WriteSubconceptMigrationParticipant.MigrationScriptRef>(){
          public SearchResults getSearchResults(){
            SearchResults searchResults=new SearchResults();
            searchResults.add(new SearchResult<SModule>(subModule,"induced migration script"));
            return searchResults;
          }
          public boolean needsToPreserveOldNode(){
            return false;
          }
          public void confirm(          WriteSubconceptMigrationParticipant.MigrationScriptRef finalState,          SRepository repository,          RefactoringSession refactoringSession){
            LanguageStructureMigrationParticipant.MigrationBuilder migrationBuilder=LanguageStructureMigrationParticipant.MigrationBuilder.getBuilder(refactoringSession,subModule);
            migrationBuilder.addPart(createIncludeMigrationPart_8k3jue_a0a1a2a0a0a0a0a0d0e0k(SNodeOperations.cast(finalState.getRef().reference().resolve(repository),MetaAdapterFactory.getInterfaceConcept(0x9074634404fd4286L,0x97d5b46ae6a81709L,0x47bb811da2acc4d6L,"jetbrains.mps.lang.migration.structure.IMigrationUnit"))));
          }
        }
;
      }
    }
).toListSequence();
    return changes;
  }
}
