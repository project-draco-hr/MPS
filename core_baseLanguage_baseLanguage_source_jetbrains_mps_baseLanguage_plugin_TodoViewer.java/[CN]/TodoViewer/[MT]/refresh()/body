{
  removeAll();
  ViewOptions viewOptions=new ViewOptions(true,false,false,false,false);
  myUsagesView=new UsagesView(myProject,viewOptions){
    public void close(){
      getTool().makeUnavailableLater();
    }
  }
;
  add(myUsagesView.getComponent(),BorderLayout.CENTER);
  final MPSProject project=myProject;
  ProgressManager.getInstance().run(new Modal(getProject(),"Searching",true){
    public void run(    @NotNull final ProgressIndicator indicator){
      indicator.setIndeterminate(true);
      if (project == null)       return;
      myUsagesView.setRunOptions(FindUtils.makeProvider(new TodoFinder()),new SearchQuery(project.getScope()),new ButtonConfiguration(true),new SearchResults());
      myUsagesView.setCustomNodeRepresentator(MyNodeRepresentator.class);
      myUsagesView.run(indicator);
      SwingUtilities.invokeLater(new Runnable(){
        public void run(){
          getTool().openTool(true);
        }
      }
);
    }
  }
);
}
