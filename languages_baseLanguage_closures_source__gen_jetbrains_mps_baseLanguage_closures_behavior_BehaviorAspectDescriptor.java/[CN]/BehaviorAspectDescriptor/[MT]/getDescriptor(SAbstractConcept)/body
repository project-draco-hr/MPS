{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_846f5o_a0u.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return myAbstractFunctionType__BehaviorDescriptor;
      }
    break;
case 1:
  if (true) {
    return myClosureControlStatement__BehaviorDescriptor;
  }
break;
case 2:
if (true) {
return myClosureLiteral__BehaviorDescriptor;
}
break;
case 3:
if (true) {
return myClosureLiteralType__BehaviorDescriptor;
}
break;
case 4:
if (true) {
return myCompactInvokeFunctionExpression__BehaviorDescriptor;
}
break;
case 5:
if (true) {
return myControlAbstractionContainer__BehaviorDescriptor;
}
break;
case 6:
if (true) {
return myControlAbstractionDeclaration__BehaviorDescriptor;
}
break;
case 7:
if (true) {
return myFunctionMethodDeclaration__BehaviorDescriptor;
}
break;
case 8:
if (true) {
return myFunctionType__BehaviorDescriptor;
}
break;
case 9:
if (true) {
return myInvokeExpression__BehaviorDescriptor;
}
break;
case 10:
if (true) {
return myInvokeFunctionExpression__BehaviorDescriptor;
}
break;
case 11:
if (true) {
return myInvokeFunctionOperation__BehaviorDescriptor;
}
break;
case 12:
if (true) {
return myUnboundClosureParameterDeclaration__BehaviorDescriptor;
}
break;
case 13:
if (true) {
return myUnrestrictedClosureLiteral__BehaviorDescriptor;
}
break;
case 14:
if (true) {
return myUnrestrictedFunctionType__BehaviorDescriptor;
}
break;
case 15:
if (true) {
return myYieldAllStatement__BehaviorDescriptor;
}
break;
case 16:
if (true) {
return myYieldStatement__BehaviorDescriptor;
}
break;
default :
}
}
return null;
}
