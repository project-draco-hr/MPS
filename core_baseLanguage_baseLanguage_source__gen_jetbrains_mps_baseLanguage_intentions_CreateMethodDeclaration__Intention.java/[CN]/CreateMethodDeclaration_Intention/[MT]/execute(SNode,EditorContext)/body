{
  SNode classifier=CreateMethodDeclarationUtil.getClassifier(node);
  boolean isSameClassifier=SNodeOperations.getAncestor(node,"jetbrains.mps.baseLanguage.structure.Classifier",false,false) == classifier;
  final String name=CreateMethodDeclarationUtil.getMethodName(editorContext);
  SNode type;
  if (SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(node),"jetbrains.mps.baseLanguage.structure.Type")) {
    type=SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(node),"jetbrains.mps.baseLanguage.structure.Type");
  }
 else {
    type=new _Quotations.QuotationClass_12().createNode();
  }
  SNode method=new _Quotations.QuotationClass_16().createNode(type,name);
  if (!(isSameClassifier)) {
    SLinkOperations.setTarget(method,"visibility",new _Quotations.QuotationClass_24().createNode(),true);
  }
  ListSequence.fromList(SLinkOperations.getTargets(classifier,"method",true)).addElement(method);
  SNodeOperations.replaceWithAnother(node,new _Quotations.QuotationClass_23().createNode(method));
  if (isSameClassifier) {
    editorContext.selectWRTFocusPolicy(method);
  }
 else {
    IOperationContext operationContext=editorContext.getOperationContext();
    IEditor editor=operationContext.getComponent(MPSEditorOpener.class).editNode(classifier,operationContext);
    editor.getEditorContext().selectWRTFocusPolicy(method);
  }
}
