{
  if (SNodeOperations.getModel(buildProject).getModule() instanceof TransientModelsModule || SModelStereotype.isGeneratorModel(SNodeOperations.getModel(buildProject)) || !(jetbrains.mps.util.SNodeOperations.isGeneratable(SNodeOperations.getModel(buildProject)))) {
    return;
  }
  VisibleModules visible=null;
  String workingDir=null;
  for (  final SNode module : ListSequence.fromList(SNodeOperations.getDescendants(buildProject,"jetbrains.mps.build.mps.structure.BuildMps_AbstractModule",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (SLinkOperations.getTarget(it,"path",true) != null);
    }
  }
)) {
    if (visible == null) {
      visible=new VisibleModules(buildProject,null);
      visible.collect();
      workingDir=BuildProject_Behavior.call_getBasePath_4959435991187146924(buildProject,Context.defaultContext());
      if ((workingDir == null || workingDir.length() == 0)) {
{
          MessageTarget errorTarget=new NodeMessageTarget();
          IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(buildProject,"working directory is unavailable","r:473be7a1-ec10-4475-89b9-397d2558ecb0(jetbrains.mps.build.mps.typesystem)","2531699772406302731",null,errorTarget);
        }
        return;
      }
    }
    final StringBuilder messages=new StringBuilder();
    new ModuleLoader(module,visible,new PathConverter(buildProject),null){
      @Override protected void report(      String message,      SNode node,      Exception cause){
        if (messages.length() > 0) {
          messages.append("\n");
        }
        messages.append(message);
      }
    }
.checkModule();
    if (messages.length() > 0) {
{
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(module,messages.toString(),"r:473be7a1-ec10-4475-89b9-397d2558ecb0(jetbrains.mps.build.mps.typesystem)","2531699772406302922",null,errorTarget);
{
          BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.build.mps.typesystem.ReloadRequired_QuickFix",false);
          _reporter_2309309498.addIntentionProvider(intentionProvider);
        }
      }
    }
  }
}
