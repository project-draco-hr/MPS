{
  try {
    if (DeleteLine_Action.this.currentCell instanceof EditorCell_Collection) {
      EditorCell_Collection collection=(EditorCell_Collection)DeleteLine_Action.this.currentCell;
      List<EditorCell_Collection> cells=ListSequence.fromList(new ArrayList<EditorCell_Collection>());
      List<EditorCell_Collection> newFrontier=ListSequence.fromList(new ArrayList<EditorCell_Collection>());
      ListSequence.fromList(cells).addElement(collection);
      while (!(ListSequence.fromList(cells).isEmpty())) {
        for (        EditorCell_Collection cellCollection : cells) {
          if (cellCollection.getCellLayout() instanceof CellLayout_Vertical) {
            return;
          }
          for (          EditorCell cell : cellCollection) {
            if (cell instanceof EditorCell_Collection) {
              ListSequence.fromList(newFrontier).addElement((EditorCell_Collection)cell);
            }
          }
        }
        cells=newFrontier;
        newFrontier=ListSequence.fromList(new ArrayList<EditorCell_Collection>());
      }
    }
    EditorCell current=DeleteLine_Action.this.currentCell;
    while (current.getParent() != null && !(current.getParent().getCellLayout() instanceof CellLayout_Vertical)) {
      current=current.getParent();
    }
    if (current.isBigCell()) {
      SNode nodeToDelete=current.getSNode();
      if ((nodeToDelete != null) && SNodeOperations.getParent(nodeToDelete) != null) {
        SNodeOperations.deleteNode(nodeToDelete);
      }
    }
  }
 catch (  Throwable t) {
    LOG.error("User's action execute method failed. Action:" + "DeleteLine",t);
  }
}
