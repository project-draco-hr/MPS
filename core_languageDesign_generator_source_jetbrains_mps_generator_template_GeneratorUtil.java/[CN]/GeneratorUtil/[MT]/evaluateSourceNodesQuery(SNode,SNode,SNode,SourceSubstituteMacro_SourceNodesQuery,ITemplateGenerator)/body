{
  String methodName=TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodesQuery(query.getNode());
  try {
    Object result=QueryMethodGenerated.invoke(methodName,generator.getGeneratorSessionContext(),new SourceSubstituteMacroNodesContext(inputNode,ruleNode,macroNode,generator),query.getModel());
    List<SNode> resultList;
    if (result instanceof List) {
      resultList=(List<SNode>)result;
    }
 else {
      resultList=CollectionUtil.asList((Iterable<SNode>)result);
    }
    CollectionUtil.checkForNulls(resultList);
    return resultList;
  }
 catch (  NoSuchMethodException e) {
    generator.showWarningMessage(macroNode,"couldn't find nodes query '" + methodName + "' : evaluate to empty list");
    return new ArrayList<SNode>();
  }
catch (  Exception e) {
    generator.showErrorMessage(inputNode,query.getNode(),"couldn't evaluate query");
    LOG.error(e);
    return new LinkedList<SNode>();
  }
}
