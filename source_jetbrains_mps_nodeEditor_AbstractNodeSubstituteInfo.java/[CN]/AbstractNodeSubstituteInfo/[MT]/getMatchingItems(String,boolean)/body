{
  Pair<String,List<INodeSubstituteItem>> pair=getItemsAndPattern(pattern,strictMatching);
  String smallPattern=pair.o1;
  List<INodeSubstituteItem> result=pair.o2;
  Iterator<INodeSubstituteItem> items=result.iterator();
  while (items.hasNext()) {
    INodeSubstituteItem item=items.next();
    if (!item.canSubstitute(pattern)) {
      items.remove();
    }
  }
  myPatternsToItemListsCache.put(smallPattern,new ArrayList<INodeSubstituteItem>(result));
  if (strictMatching) {
    Iterator<INodeSubstituteItem> iterator1=result.iterator();
    while (iterator1.hasNext()) {
      INodeSubstituteItem substituteItem=iterator1.next();
      if (substituteItem.canSubstituteStrictly(pattern))       continue;
      iterator1.remove();
    }
  }
  myStrictPatternsToItemListsCache.put(smallPattern,new ArrayList<INodeSubstituteItem>(result));
  return result;
}
