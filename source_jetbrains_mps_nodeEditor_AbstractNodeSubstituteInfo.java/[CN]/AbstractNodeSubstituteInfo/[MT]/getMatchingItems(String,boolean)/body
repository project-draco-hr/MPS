{
  List<INodeSubstituteItem> list=new ArrayList<INodeSubstituteItem>(items());
  Iterator<INodeSubstituteItem> items=list.iterator();
  while (items.hasNext()) {
    INodeSubstituteItem item=items.next();
    if (!item.canSubstitute(pattern)) {
      items.remove();
    }
  }
  if (strictMatching) {
    Iterator<INodeSubstituteItem> iterator1=list.iterator();
    while (iterator1.hasNext()) {
      INodeSubstituteItem substituteItem=iterator1.next();
      if (substituteItem.canSubstituteStrictly(pattern))       continue;
      iterator1.remove();
    }
  }
  return list;
}
