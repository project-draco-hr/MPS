{
  List<SNode> result=new ArrayList<SNode>();
  SNode seqCreator=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x8388864671ce4f1cL,0x9c53c54016f6ad4fL,0x11d14c97b16L,"jetbrains.mps.baseLanguage.collections.structure.SequenceCreator")));
  SLinkOperations.setTarget(seqCreator,MetaAdapterFactory.getContainmentLink(0x8388864671ce4f1cL,0x9c53c54016f6ad4fL,0x11d14c97b16L,0x11d14c9ea5eL,"elementType"),SNodeOperations.copyNode(SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getContainmentLink(0x8388864671ce4f1cL,0x9c53c54016f6ad4fL,0x10c260e9444L,0x10c260ee40eL,"elementType"))));
  ListSequence.fromList(result).addElement(seqCreator);
  SNode singCreator=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x8388864671ce4f1cL,0x9c53c54016f6ad4fL,0x11fade5d82aL,"jetbrains.mps.baseLanguage.collections.structure.SingletonSequenceCreator")));
  SLinkOperations.setTarget(singCreator,MetaAdapterFactory.getContainmentLink(0x8388864671ce4f1cL,0x9c53c54016f6ad4fL,0x11fade5d82aL,0x11fade6759fL,"elementType"),SNodeOperations.copyNode(SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getContainmentLink(0x8388864671ce4f1cL,0x9c53c54016f6ad4fL,0x10c260e9444L,0x10c260ee40eL,"elementType"))));
  ListSequence.fromList(result).addElement(singCreator);
  return result;
}
