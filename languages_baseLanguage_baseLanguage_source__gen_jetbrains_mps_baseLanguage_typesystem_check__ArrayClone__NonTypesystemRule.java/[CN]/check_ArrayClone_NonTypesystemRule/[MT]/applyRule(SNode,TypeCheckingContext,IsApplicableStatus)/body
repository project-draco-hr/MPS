{
  SReference methodRef=SNodeOperations.getReference(instanceMethodCallOperation,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141037l,"baseMethodDeclaration"));
  if (!((methodRef instanceof DynamicReference && "clone".equals((((DynamicReference)methodRef).getResolveInfo()))))) {
    return;
  }
  SNode operand=SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(instanceMethodCallOperation),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1197027756228l,"jetbrains.mps.baseLanguage.structure.DotExpression")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1197027756228l,1197027771414l,"operand"));
  Iterable<SReference> operandRefs=SNodeOperations.getReferences(operand);
  if (Sequence.fromIterable(operandRefs).any(new IWhereFilter<SReference>(){
    public boolean accept(    SReference it){
      return it instanceof DynamicReference;
    }
  }
)) {
    return;
  }
  if (SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(operand),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1070534760951l,"jetbrains.mps.baseLanguage.structure.ArrayType"))) {
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(instanceMethodCallOperation,"should be clone operation","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","8824315269745705247",null,errorTarget);
{
        BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.baseLanguage.typesystem.replaceNode_QuickFix",true);
        intentionProvider.putArgument("newNode",SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ArrayCloneOperation",null));
        _reporter_2309309498.addIntentionProvider(intentionProvider);
      }
    }
  }
}
