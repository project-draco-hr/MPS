{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("enumConstantDeclaration",new BaseReferenceConstraintsDescriptor("enumConstantDeclaration",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return new ClassifierVisibleStaticMembersScope(SLinkOperations.getTarget(_context.getReferenceNode(),"enumClass",false),((_context.getReferenceNode() == null) ? _context.getEnclosingNode() : _context.getReferenceNode()),IClassifiersSearchScope.ENUM_CONSTANT);
        }
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_xpgkri_a0a1a0a0a1a0b0a1a0;
        }
      }
;
    }
  }
);
  return references;
}
