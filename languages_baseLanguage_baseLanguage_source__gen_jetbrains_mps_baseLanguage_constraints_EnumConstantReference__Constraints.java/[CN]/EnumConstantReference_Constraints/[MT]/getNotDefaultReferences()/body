{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("enumConstantDeclaration",new BaseReferenceConstraintsDescriptor("enumConstantDeclaration",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_xpgkri_a0a0a0a0a1a0b0a1a1;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          if ((SLinkOperations.getTarget(_context.getReferenceNode(),"enumClass",false) != null)) {
            return new NamedElementsScope(Members.visibleEnumConstants(SLinkOperations.getTarget(_context.getReferenceNode(),"enumClass",false)));
          }
 else {
            return new EmptyScope();
          }
        }
      }
;
    }
  }
);
  return references;
}
