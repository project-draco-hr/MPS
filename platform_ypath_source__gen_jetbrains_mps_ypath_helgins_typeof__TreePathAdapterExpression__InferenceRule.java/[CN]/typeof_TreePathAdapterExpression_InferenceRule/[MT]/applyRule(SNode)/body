{
  final SNode ExpType_typevar_1190288659521=TypeChecker.getInstance().getRuntimeSupport().createNewRuntimeTypesVariable();
{
    SNode _nodeToCheck_1029348928467=exp;
    BaseIntentionProvider intentionProvider=null;
    TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getEquationManager().getRepresentator(ExpType_typevar_1190288659521),TypeChecker.getInstance().getRuntimeSupport().typeOf(SLinkOperations.getTarget(exp,"expression",true),"jetbrains.mps.ypath.helgins","1190288685890",true),_nodeToCheck_1029348928467,null,"jetbrains.mps.ypath.helgins","1190288669877",intentionProvider);
  }
{
    final SNode _representatorVar=TypeChecker.getInstance().getEquationManager().getRepresentator(ExpType_typevar_1190288659521);
    TypeChecker.getInstance().getRuntimeSupport().whenConcrete(_representatorVar,new Runnable(){
      public void run(){
        final SNode treePathType=SLinkOperations.getTarget(SLinkOperations.getTarget(exp,"treepathAspect",false),"treePathType",true);
        if (!(TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getEquationManager().getRepresentator(ExpType_typevar_1190288659521),SLinkOperations.getTarget(treePathType,"nodeType",true)))) {
          TypeChecker.getInstance().reportTypeError(SLinkOperations.getTarget(exp,"expression",true),"Incompatible type","jetbrains.mps.ypath.helgins","1196166858319");
        }
        if ((SLinkOperations.getTarget(treePathType,"nodeType",true) != null)) {
          TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_().createNode(TypeChecker.getInstance().getEquationManager().getRepresentator(ExpType_typevar_1190288659521)),exp,"jetbrains.mps.ypath.helgins","1196715484404");
        }
      }
    }
,"jetbrains.mps.ypath.helgins","1190288695814");
  }
}
