{
  if (ListSequence.fromList(myPlugins).isEmpty()) {
    return true;
  }
  final Wrappers._T<DeployScript> script=new Wrappers._T<DeployScript>();
  final jetbrains.mps.project.Project mpsProject=ProjectHelper.toMPSProject(project);
  final Project projectFinal=project;
  ApplicationManager.getApplication().invokeAndWait(new Runnable(){
    public void run(){
      mpsProject.getModelAccess().executeCommand(new Runnable(){
        public void run(){
          script.value=new DeployScript(mpsProject,myPlugins);
        }
      }
);
    }
  }
,ModalityState.NON_MODAL);
  String deployScriptLocation=script.value.make();
  if ((deployScriptLocation == null || deployScriptLocation.length() == 0)) {
    script.value.dispose();
    return false;
  }
  final ConsoleView console=ConsoleCreator.createConsoleView(project,false);
  console.addMessageFilter(new StandaloneMPSStackTraceFilter(project));
  final Wrappers._T<ProcessHandler> process=new Wrappers._T<ProcessHandler>();
  try {
    process.value=new Ant_Command().setTargetName_String("buildDependents assemble").createProcess(deployScriptLocation);
    console.attachToProcess(process.value);
  }
 catch (  ExecutionException e) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("Can not deploy plugins",e);
    }
    script.value.dispose();
    return false;
  }
  ApplicationManager.getApplication().invokeAndWait(new Runnable(){
    public void run(){
      Executor executor=DefaultRunExecutor.getRunExecutorInstance();
      DefaultActionGroup group=new DefaultActionGroup();
      JPanel consolePanel=new JPanel(new BorderLayout());
      ActionToolbar actionToolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.TOOLBAR,group,false);
      actionToolbar.setTargetComponent(console.getComponent());
      consolePanel.add(actionToolbar.getComponent(),BorderLayout.WEST);
      consolePanel.add(console.getComponent(),BorderLayout.CENTER);
      RunContentDescriptor descriptor=new RunContentDescriptor(console,process.value,consolePanel,"Deploy plugins",IconContainer.ICON_e0a0j0a0a0a0r0e4);
      group.add(ActionManager.getInstance().getAction("Stop"));
      group.addSeparator();
      group.add(ActionManager.getInstance().getAction(IdeActions.ACTION_PIN_ACTIVE_TAB));
      group.add(new CloseAction(executor,descriptor,projectFinal));
      ExecutionManager.getInstance(projectFinal).getContentManager().showRunContent(executor,descriptor);
    }
  }
,ModalityState.NON_MODAL);
  int exitCode=ProcessHandlerBuilder.startAndWait(process.value);
  if (exitCode != 0) {
    script.value.dispose();
    return false;
  }
  FileUtil.copyDir(new File(script.value.getArtifactsPath()),myDeployLocation);
  script.value.dispose();
  return true;
}
