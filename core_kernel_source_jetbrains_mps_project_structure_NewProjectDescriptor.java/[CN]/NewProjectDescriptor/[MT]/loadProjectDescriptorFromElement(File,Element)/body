{
  Macros macros=Macros.projectDescriptor();
  myName=file.getName();
  if (projectElement == null) {
    return;
  }
  if (projectElement.getAttributeValue(AUTO_IMPORT_CLASSPATH) == null) {
    myImportClasspath=true;
  }
 else {
    myImportClasspath="true".equals(projectElement.getAttributeValue(AUTO_IMPORT_CLASSPATH));
  }
  Element projectSolutions=projectElement.getChild(PROJECT_SOLUTIONS);
  if (projectSolutions != null) {
    for (    Element element : (List<Element>)projectSolutions.getChildren(SOLUTION_PATH)) {
      Path solutionPath=new Path();
      solutionPath.setPath(macros.expandPath(element.getAttributeValue(PATH),file));
      solutionPath.setMPSFolder(element.getAttributeValue(FOLDER));
      mySolutions.add(solutionPath);
    }
  }
  Element projectLanguages=projectElement.getChild(PROJECT_LANGUAGES);
  if (projectLanguages != null) {
    List<Element> elementsOld=(List<Element>)projectLanguages.getChildren("projectLanguage");
    List<Element> elementsNew=(List<Element>)projectLanguages.getChildren(LANGUAGE_PATH);
    List<Element> elements=new LinkedList<Element>(elementsOld);
    elements.addAll(elementsNew);
    for (    Element element : elements) {
      Path languagePath=new Path();
      languagePath.setPath(macros.expandPath(element.getAttributeValue(PATH),file));
      languagePath.setMPSFolder(element.getAttributeValue(FOLDER));
      myLanguages.add(languagePath);
    }
  }
  Element projectDevKits=projectElement.getChild(PROJECT_DEVKITS);
  if (projectDevKits != null) {
    for (    Element element : (List<Element>)projectDevKits.getChildren(DEVKIT_PATH)) {
      Path devKit=new Path();
      devKit.setPath(macros.expandPath(element.getAttributeValue(PATH),file));
      devKit.setMPSFolder(element.getAttributeValue(FOLDER));
      myDevkits.add(devKit);
    }
  }
  Element tests=projectElement.getChild(GEN_CONFS);
  if (tests != null) {
    for (    Element e : (List<Element>)tests.getChildren(GEN_CONF)) {
      ModelsTestConfiguration tc=new ModelsTestConfiguration();
      tc.setName(e.getAttributeValue(NAME));
      if (e.getChild(MODELS) != null) {
        for (        Element me : (List<Element>)e.getChild(MODELS).getChildren(MODEL)) {
          Model m=new Model();
          m.setModelRef(me.getAttributeValue(MODEL_UID));
          tc.addModel(m);
        }
      }
      myTestConfigurations.add(tc);
    }
    for (    Element e : (List<Element>)tests.getChildren("genConfSolution")) {
      ModuleTestConfiguration sc=new ModuleTestConfiguration();
      sc.setName(e.getAttributeValue(NAME));
      sc.setModuleUID(e.getAttributeValue("solution"));
      myTestConfigurations.add(sc);
    }
    for (    Element e : (List<Element>)tests.getChildren("genConfLanguage")) {
      ModuleTestConfiguration lc=new ModuleTestConfiguration();
      lc.setName(e.getAttributeValue(NAME));
      lc.setModuleUID(e.getAttributeValue("language"));
      myTestConfigurations.add(lc);
    }
    for (    Element e : (List<Element>)tests.getChildren(GEN_CONF_MODULE)) {
      ModuleTestConfiguration conf=new ModuleTestConfiguration();
      conf.setName(e.getAttributeValue(NAME));
      conf.setModuleUID(e.getAttributeValue(MODULE_UID));
      myTestConfigurations.add(conf);
    }
  }
}
