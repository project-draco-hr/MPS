{
  try {
    final GeneratorManager manager=GenerateModel_Action.this.project.getComponent(GeneratorManager.class);
    final List<RegularSModelDescriptor> modelsToGenerate=new ArrayList<RegularSModelDescriptor>();
    for (    SModelDescriptor m : ListSequence.fromList(GenerateModel_Action.this.models)) {
      if (m instanceof RegularSModelDescriptor) {
        modelsToGenerate.add(((RegularSModelDescriptor)m));
      }
    }
    boolean checkSuccessful=GenerateModel_Action.this.project.getComponent(ProjectPluginManager.class).getTool(ModelCheckerTool_Tool.class).checkModelsBeforeGenerationIfNeeded(GenerateModel_Action.this.context,(List)modelsToGenerate,new Runnable(){
      public void run(){
        manager.generateModelsFromDifferentModules(GenerateModel_Action.this.context,modelsToGenerate,GenerateModel_Action.this.generationHandler,GenerateModel_Action.this.rebuildAll);
      }
    }
);
    if (!(checkSuccessful)) {
      return;
    }
    manager.generateModelsFromDifferentModules(GenerateModel_Action.this.context,modelsToGenerate,GenerateModel_Action.this.generationHandler,GenerateModel_Action.this.rebuildAll);
  }
 catch (  Throwable t) {
    if (log.isErrorEnabled()) {
      log.error("User's action execute method failed. Action:" + "GenerateModel",t);
    }
  }
}
