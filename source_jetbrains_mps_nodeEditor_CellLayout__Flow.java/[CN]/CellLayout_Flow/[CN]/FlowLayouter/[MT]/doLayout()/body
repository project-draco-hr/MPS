{
  if (myBossLayout == null) {
    getCurrentLine().clear();
    getCurrentLineLayouts().clear();
  }
  Iterator<EditorCell> lookAhead=editorCells.iterator();
  if (lookAhead.hasNext())   lookAhead.next();
  for (  EditorCell cell : editorCells) {
    EditorCell nextCell=null;
    myNextIsPunctuation=false;
    if (lookAhead.hasNext()) {
      nextCell=lookAhead.next();
      if (nextCell instanceof EditorCell_Punctuation) {
        myNextIsPunctuation=true;
      }
    }
    if (NOFLOW.equals(cell.getLayoutConstraint())) {
      if (!getCurrentLine().isEmpty()) {
        alignLine();
        nextLine();
      }
      cell.relayout();
      cell.moveTo(editorCells.getX(),y);
      y+=cell.getHeight();
      maxRightX=Math.max(maxRightX,cell.getX() + cell.getWidth());
    }
 else     if (getFlowLayout(cell) != null) {
      CellLayout_Flow cellLayout_flow=getFlowLayout(cell);
      cellLayout_flow.setMaxAscent(maxAscent);
      cellLayout_flow.setMaxDescent(maxDescent);
      cellLayout_flow.setWStart(x - editorCells.getX());
      cellLayout_flow.getCurrentLine().clear();
      cellLayout_flow.getCurrentLine().addAll(CellLayout_Flow.this.getCurrentLine());
      cellLayout_flow.getCurrentLineLayouts().clear();
      cellLayout_flow.getCurrentLineLayouts().addAll(CellLayout_Flow.this.getCurrentLineLayouts());
      cell.setX(editorCells.getX());
      cell.setY(y);
      cellLayout_flow.setBossLayout(CellLayout_Flow.this);
      cell.relayout();
      maxRightX=Math.max(maxRightX,cell.getX() + cell.getWidth());
      setMaxAscent(Math.max(maxAscent,cellLayout_flow.maxAscent));
      setMaxDescent(Math.max(maxDescent,cellLayout_flow.maxDescent));
      CellLayout_Flow.this.getCurrentLine().clear();
      CellLayout_Flow.this.getCurrentLine().addAll(cellLayout_flow.getCurrentLine());
      CellLayout_Flow.this.getCurrentLineLayouts().clear();
      CellLayout_Flow.this.getCurrentLineLayouts().addAll(cellLayout_flow.getCurrentLineLayouts());
      if (cellLayout_flow.myRowCount >= 2) {
        x=cell.getX() + cellLayout_flow.myWEnd;
        y=cell.getY() + cell.getHeight() - cellLayout_flow.maxAscent - cellLayout_flow.maxDescent;
        myRowCount+=cellLayout_flow.myRowCount - 1;
      }
 else {
        x+=cell.getWidth();
      }
    }
 else {
      int allocatedWidth=cell.getWidth();
      if (myNextIsPunctuation) {
        allocatedWidth+=nextCell.getWidth();
      }
      if (allocatedWidth + x >= getMaxX()) {
        alignLine();
        nextLine();
        addCell(cell);
      }
 else {
        addCell(cell);
      }
    }
  }
  boolean currentLineIsEmpty=CellLayout_Flow.this.getCurrentLine().isEmpty();
  if (!currentLineIsEmpty)   alignLine();
  int lastLineHeight=maxAscent + maxDescent;
  editorCells.setHeight((y + lastLineHeight) - editorCells.getY());
  editorCells.setWidth(maxRightX - editorCells.getX());
  myWEnd=x - editorCells.getX();
}
