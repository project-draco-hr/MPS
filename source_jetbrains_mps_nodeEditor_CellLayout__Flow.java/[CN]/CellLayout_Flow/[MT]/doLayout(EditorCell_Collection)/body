{
  int x=editorCells.getX() + myWStart;
  int y=editorCells.getY();
  int maxRightX=x;
  int maxRowHeight=myHStart;
  for (Iterator iterator=editorCells.iterator(); iterator.hasNext(); ) {
    EditorCell childEditorCell=(EditorCell)iterator.next();
    CellLayout_Flow cellLayout_flow=getFlowLayout(childEditorCell);
    if (cellLayout_flow != null) {
      childEditorCell.setX(editorCells.getX());
      childEditorCell.setY(y);
      cellLayout_flow.setWStart(x - editorCells.getX());
      cellLayout_flow.setHStart(maxRowHeight);
      childEditorCell.relayout();
      maxRightX=Math.max(maxRightX,childEditorCell.getX() + childEditorCell.getWidth());
      if (cellLayout_flow.myRowCount >= 2) {
        x=childEditorCell.getX() + cellLayout_flow.myWEnd;
        y=childEditorCell.getY() + cellLayout_flow.myHEnd;
        maxRowHeight=childEditorCell.getHeight() - cellLayout_flow.myHEnd;
        myRowCount+=cellLayout_flow.myRowCount - 1;
      }
 else {
        x+=childEditorCell.getWidth();
        maxRowHeight=Math.max(maxRowHeight,childEditorCell.getHeight());
      }
    }
 else {
      childEditorCell.setX(x);
      childEditorCell.setY(y);
      childEditorCell.relayout();
      if (x + childEditorCell.getWidth() >= getMaxX() && maxRowHeight != 0) {
        x=editorCells.getX();
        y+=maxRowHeight;
        childEditorCell.moveTo(x,y);
        maxRowHeight=0;
        myRowCount++;
      }
      x+=childEditorCell.getWidth();
      maxRowHeight=Math.max(maxRowHeight,childEditorCell.getHeight());
      maxRightX=Math.max(maxRightX,childEditorCell.getX() + childEditorCell.getWidth());
    }
  }
  editorCells.setWidth(maxRightX - editorCells.getX());
  editorCells.setHeight(y + maxRowHeight - editorCells.getY());
  myWEnd=x - editorCells.getX();
  myHEnd=y - editorCells.getY();
}
