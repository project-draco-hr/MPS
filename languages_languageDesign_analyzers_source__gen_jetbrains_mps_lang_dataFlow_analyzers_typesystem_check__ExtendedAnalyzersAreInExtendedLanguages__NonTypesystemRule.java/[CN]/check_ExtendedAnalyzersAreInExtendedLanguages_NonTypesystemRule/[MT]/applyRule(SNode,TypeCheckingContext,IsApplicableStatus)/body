{
  SModule module=check_b4f08s_a0a0b(SNodeOperations.getModel(rule));
  if (!(module instanceof Language)) {
    return;
  }
  Language ruleLanguage=((Language)module);
  Set<Language> extendedLanguages=ruleLanguage.getAllExtendedLanguages();
  SNode analyzer=SLinkOperations.getTarget(rule,MetaAdapterFactory.getReferenceLink(0x97a52717898f4598L,0x8150573d9fd03868L,0x5faaa6bbd57b6c8L,0x3952cf7bd76e6440L,"analyzer"));
  if (analyzer == null) {
    return;
  }
  SModule analyzerModule=check_b4f08s_a0g0b(SNodeOperations.getModel(analyzer));
  if (!(analyzerModule instanceof Language)) {
    return;
  }
  Language analyzerLanguage=((Language)analyzerModule);
  if (analyzerLanguage != ruleLanguage && !(SetSequence.fromSet(extendedLanguages).contains(analyzerLanguage))) {
{
      MessageTarget errorTarget=new NodeMessageTarget();
      errorTarget=new PropertyMessageTarget("name");
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(rule,"language " + analyzerLanguage.getModuleName() + " of analyzer "+ SPropertyOperations.getString(analyzer,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"))+ " is not extended by "+ ruleLanguage.getModuleName(),"r:139daa25-c5a7-4ac9-85a2-eb14d22e8f56(jetbrains.mps.lang.dataFlow.analyzers.typesystem)","1235136520823",null,errorTarget);
{
        BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.lang.structure.typesystem.AddExtendedLanguage_QuickFix",false);
        intentionProvider.putArgument("extLang",analyzerLanguage);
        intentionProvider.putArgument("lang",ruleLanguage);
        _reporter_2309309498.addIntentionProvider(intentionProvider);
      }
    }
  }
}
