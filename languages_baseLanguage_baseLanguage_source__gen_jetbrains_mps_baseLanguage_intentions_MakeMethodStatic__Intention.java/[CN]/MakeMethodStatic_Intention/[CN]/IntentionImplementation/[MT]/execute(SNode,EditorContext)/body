{
  SNode method=(SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration") ? SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration",null) : SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration",null));
  SPropertyOperations.set(method,"name",SPropertyOperations.getString(node,"name"));
  ListSequence.fromList(SLinkOperations.getTargets(method,"annotation",true)).addSequence(ListSequence.fromList(SLinkOperations.getTargets(node,"annotation",true)));
  SLinkOperations.setTarget(method,"body",SLinkOperations.getTarget(node,"body",true),true);
  SPropertyOperations.set(method,"isDeprecated","" + (SPropertyOperations.getBoolean(node,"isDeprecated")));
  SPropertyOperations.set(method,"isFinal","" + (SPropertyOperations.getBoolean(node,"isFinal")));
  SPropertyOperations.set(method,"isSynchronized","" + (SPropertyOperations.getBoolean(node,"isSynchronized")));
  ListSequence.fromList(SLinkOperations.getTargets(method,"modifiers",true)).addSequence(ListSequence.fromList(SLinkOperations.getTargets(node,"modifiers",true)));
  ListSequence.fromList(SLinkOperations.getTargets(method,"parameter",true)).addSequence(ListSequence.fromList(SLinkOperations.getTargets(node,"parameter",true)));
  SLinkOperations.setTarget(method,"returnType",SLinkOperations.getTarget(node,"returnType",true),true);
  ListSequence.fromList(SLinkOperations.getTargets(method,"throwsItem",true)).addSequence(ListSequence.fromList(SLinkOperations.getTargets(node,"throwsItem",true)));
  ListSequence.fromList(SLinkOperations.getTargets(method,"typeVariableDeclaration",true)).addSequence(ListSequence.fromList(SLinkOperations.getTargets(node,"typeVariableDeclaration",true)));
  AttributeOperations.setAttribute(method,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment"),AttributeOperations.getAttribute(node,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment")));
  SLinkOperations.setTarget(SNodeOperations.cast(method,"jetbrains.mps.baseLanguage.structure.IVisible"),"visibility",SLinkOperations.getTarget(SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.IVisible"),"visibility",true),true);
  SNodeOperations.insertNextSiblingChild(node,method);
  SNodeOperations.deleteNode(node);
  editorContext.selectWRTFocusPolicy(method);
}
