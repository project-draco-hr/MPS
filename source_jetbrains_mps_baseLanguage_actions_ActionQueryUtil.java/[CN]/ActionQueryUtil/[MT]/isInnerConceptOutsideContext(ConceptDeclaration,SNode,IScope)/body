{
  final ConceptDeclaration expectedConceptOfParent=SModelUtil.findParent(concept,ConceptDeclaration.class);
  if (expectedConceptOfParent == null) {
    return false;
  }
  ConceptDeclaration conceptOfSourceNode=SModelUtil.getConceptDeclaration(sourceNode,scope);
  boolean ok=SModelUtil.isAssignableConcept(expectedConceptOfParent,conceptOfSourceNode) || SModelUtil.findParent(sourceNode,new Condition<SNode>(){
    public boolean met(    SNode object){
      ConceptDeclaration conceptOfParent=SModelUtil.getConceptDeclaration(object,scope);
      return SModelUtil.isAssignableConcept(expectedConceptOfParent,conceptOfParent);
    }
  }
) != null;
  return !ok;
}
