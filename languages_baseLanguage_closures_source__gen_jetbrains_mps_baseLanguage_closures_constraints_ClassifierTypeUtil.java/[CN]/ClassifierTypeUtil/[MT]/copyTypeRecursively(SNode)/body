{
  type=(SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.UpperBoundType") ? SLinkOperations.getTarget(SNodeOperations.cast(type,"jetbrains.mps.baseLanguage.structure.UpperBoundType"),"bound",true) : type);
  type=(SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.LowerBoundType") ? SLinkOperations.getTarget(SNodeOperations.cast(type,"jetbrains.mps.baseLanguage.structure.LowerBoundType"),"bound",true) : type);
  if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.ClassifierType")) {
    SNode copy=SNodeOperations.cast(SNodeOperations.copyNode(type),"jetbrains.mps.baseLanguage.structure.ClassifierType");
    ListSequence.fromList(SLinkOperations.getTargets(copy,"parameter",true)).clear();
    SLinkOperations.setTarget(copy,"classifier",SLinkOperations.getTarget(SNodeOperations.cast(type,"jetbrains.mps.baseLanguage.structure.ClassifierType"),"classifier",false),false);
    for (    SNode pt : SLinkOperations.getTargets(SNodeOperations.cast(type,"jetbrains.mps.baseLanguage.structure.ClassifierType"),"parameter",true)) {
      ListSequence.fromList(SLinkOperations.getTargets(copy,"parameter",true)).addElement(copyTypeRecursively(pt));
    }
    return copy;
  }
 else   if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.lang.typesystem.structure.MeetType")) {
    jetbrains.mps.smodel.SNode copy=SConceptOperations.createNewNode("jetbrains.mps.lang.typesystem.structure.MeetType",null);
    for (    SNode arg : SLinkOperations.getTargets(SNodeOperations.cast(type,"jetbrains.mps.lang.typesystem.structure.MeetType"),"argument",true)) {
      ListSequence.fromList(SLinkOperations.getTargets(copy,"argument",true)).addElement(copyTypeRecursively(SNodeOperations.cast(arg,"jetbrains.mps.baseLanguage.structure.Type")));
    }
    return copy;
  }
 else {
    return SNodeOperations.copyNode(type);
  }
}
