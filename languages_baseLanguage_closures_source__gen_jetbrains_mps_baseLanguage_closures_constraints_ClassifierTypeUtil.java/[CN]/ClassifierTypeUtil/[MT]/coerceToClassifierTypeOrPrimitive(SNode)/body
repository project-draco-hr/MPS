{
  if (SNodeOperations.isInstanceOf(type,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10f0ad8bde4L,"jetbrains.mps.baseLanguage.structure.PrimitiveType"))) {
    return type;
  }
  SNode cType=ClassifierTypeUtil.coerceToClassifierTypeIgnoreParameters(type);
  if ((cType != null)) {
    List<SNode> params=SLinkOperations.getChildren(cType,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x102419671abL,"parameter"));
    if (params != null && ListSequence.fromList(params).isNotEmpty()) {
      SNode res=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType"));
      SLinkOperations.setTarget(res,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier"),SLinkOperations.getTarget(cType,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")));
      for (      SNode p : params) {
        ListSequence.fromList(SLinkOperations.getChildren(res,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x102419671abL,"parameter"))).addElement(SNodeOperations.copyNode(getTypeCoercedToClassifierType(p)));
      }
      return res;
    }
    return cType;
  }
  return type;
}
