{
  if (!SNodeUtil.isAccessible(node,MPSModuleRepository.getInstance()))   return true;
  Set<String> langNames=new HashSet<String>();
  for (  Language l : SModelOperations.getLanguages(node.getModel())) {
    langNames.add(l.getModuleName());
  }
  for (  String conceptId : ConceptRegistry.getInstance().getConceptDescriptor(node.getConcept().getQualifiedName()).getAncestorsNames()) {
    Map<String,Set<IntentionFactory>> concept2FactoriesMap=isAncestor ? myConcept2IntentionFactoriesAvailableInChildNodes : myConcept2IntentionFactories;
    if (concept2FactoriesMap.containsKey(conceptId)) {
      for (      IntentionFactory intentionFactory : concept2FactoriesMap.get(conceptId)) {
        if (!langNames.contains(intentionFactory.getLanguageFqName()))         continue;
        if (!filter.accept(intentionFactory) || !intentionFactory.isApplicable(node,editorContext)) {
          continue;
        }
        if (!visitor.visit(intentionFactory)) {
          return false;
        }
      }
    }
  }
  return true;
}
