{
  final Wrappers._T<SModel> model=new Wrappers._T<SModel>(null);
  IFile file=getFileByContent(content);
  if (file != null) {
    model.value=SModelFileTracker.getInstance().findModel(file.getParent());
  }
  if (model.value == null) {
    model.value=readModel(content,type);
  }
  if (model.value == null) {
    return null;
  }
  SNodeId nodeId=null;
  int size=ModelAccess.instance().runReadAction(new Computable<Integer>(){
    public Integer compute(){
      return ListSequence.fromList(SModelOperations.roots(model.value,null)).count();
    }
  }
);
  if (size == 1) {
    nodeId=ModelAccess.instance().runReadAction(new Computable<SNodeId>(){
      public SNodeId compute(){
        return ListSequence.fromList(SModelOperations.roots(model.value,null)).getElement(0).getNodeId();
      }
    }
);
  }
  return MultiTuple.<SModel,SNodeId>from(model.value,nodeId);
}
