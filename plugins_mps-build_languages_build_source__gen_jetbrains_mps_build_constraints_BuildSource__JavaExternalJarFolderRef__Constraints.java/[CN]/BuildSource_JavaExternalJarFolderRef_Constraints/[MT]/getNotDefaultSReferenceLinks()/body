{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(8755280088213897754l,-5075149991798053422l),5610619299014531647l,5610619299014531648l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(8755280088213897754l,-5075149991798053422l),5610619299014531647l,5610619299014531648l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public boolean hasPresentation(){
          return true;
        }
        @Override public String getPresentation(        final IOperationContext operationContext,        final ReferencePresentationContext _context){
          SNode contextProject=SNodeOperations.getNodeAncestor(_context.getContextNode(),MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),5617550519002745363l,"jetbrains.mps.build.structure.BuildProject"),true,false);
          String target=null;
          if ((contextProject != null)) {
            Scope importedArtifactsScope=ScopeUtil.getVisibleJarFoldersScope(contextProject);
            if (importedArtifactsScope != null && !(importedArtifactsScope instanceof ModelPlusImportedScope)) {
              target=importedArtifactsScope.getReferenceText(_context.getContextNode(),_context.getParameterNode());
            }
          }
          if (target == null) {
            target=(SNodeOperations.isInstanceOf(_context.getParameterNode(),MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),2303926226081001727l,"jetbrains.mps.build.structure.BuildInputSingleFolder")) ? BehaviorReflection.invokeVirtual(String.class,SLinkOperations.getTarget(SNodeOperations.cast(_context.getParameterNode(),MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),2303926226081001727l,"jetbrains.mps.build.structure.BuildInputSingleFolder")),MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l,-5075149991798053422l),2303926226081001727l,2303926226081001728l,"path")),"virtual_getRelativePath_5481553824944787371",new Object[]{}) : BehaviorReflection.invokeVirtual(String.class,_context.getParameterNode(),"virtual_getPresentation_1213877396640",new Object[]{}));
          }
          return target;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_aht4xu_a0a2a0a0a1a0b0a1a1;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
{
            SNode contextProject=SNodeOperations.getNodeAncestor(_context.getContextNode(),MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),5617550519002745363l,"jetbrains.mps.build.structure.BuildProject"),true,false);
            if ((contextProject != null)) {
              return ScopeUtil.getVisibleJarFoldersScope(contextProject);
            }
            return new ModelPlusImportedScope(_context.getModel(),false,"jetbrains.mps.build.structure.BuildSource_SingleFolder");
          }
        }
      }
;
    }
  }
);
  return references;
}
