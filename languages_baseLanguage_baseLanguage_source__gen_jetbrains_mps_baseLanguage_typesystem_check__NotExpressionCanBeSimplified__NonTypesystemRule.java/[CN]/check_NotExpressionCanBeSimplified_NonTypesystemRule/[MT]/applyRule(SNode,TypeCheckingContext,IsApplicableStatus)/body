{
  SNode currentExpression=SLinkOperations.getTarget(notExpression,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbcf6bd10dL,0xfbcf6c30a4L,"expression"));
  while (SNodeOperations.isInstanceOf(currentExpression,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfb4ed32b7fL,"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression"))) {
    currentExpression=SLinkOperations.getTarget(SNodeOperations.cast(currentExpression,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfb4ed32b7fL,"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfb4ed32b7fL,0xfb4ed32b80L,"expression"));
  }
  if ((boolean)Expression__BehaviorDescriptor.isCompileTimeConstant_idi1LOPRp.invoke(currentExpression)) {
    SModule module=SNodeOperations.getModel(notExpression).getModule();
    Object value=Expression__BehaviorDescriptor.getCompileTimeConstantValue_idi1LP2xI.invoke(currentExpression,module);
    if (value != null && value instanceof Boolean) {
{
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportWarning(notExpression,"The Not logical expression can be simplified","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","3832376534031039831",null,errorTarget);
{
          BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.baseLanguage.typesystem.SimplifyNotExpression_QuickFix",false);
          intentionProvider.putArgument("value",(Boolean)value);
          _reporter_2309309498.addIntentionProvider(intentionProvider);
        }
      }
    }
  }
}
