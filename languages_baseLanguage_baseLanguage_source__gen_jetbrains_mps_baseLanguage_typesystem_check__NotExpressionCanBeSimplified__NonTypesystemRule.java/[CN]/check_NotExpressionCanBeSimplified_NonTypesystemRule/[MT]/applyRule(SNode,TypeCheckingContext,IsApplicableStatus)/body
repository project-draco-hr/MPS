{
  SNode currentExpression=SLinkOperations.getTarget(notExpression,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1081516740877l,1081516765348l,"expression"));
  while (SNodeOperations.isInstanceOf(currentExpression,"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression")) {
    currentExpression=SLinkOperations.getTarget(SNodeOperations.cast(currentExpression,"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1079359253375l,1079359253376l,"expression"));
  }
  if (SNodeOperations.isInstanceOf(currentExpression,"jetbrains.mps.baseLanguage.structure.BooleanConstant")) {
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportWarning(notExpression,"The logical expression can be simplified","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","3832376534031039831",null,errorTarget);
{
        BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.baseLanguage.typesystem.SimplifyNotExpression_QuickFix",false);
        intentionProvider.putArgument("nestedConstant",SNodeOperations.cast(currentExpression,"jetbrains.mps.baseLanguage.structure.BooleanConstant"));
        _reporter_2309309498.addIntentionProvider(intentionProvider);
      }
    }
  }
}
