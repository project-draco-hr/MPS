{
  RefactoringParticipant.Option firstOption=ListSequence.fromList(getAvailableOptions(initialStates,repository)).first();
  progressMonitor.start((firstOption == null ? "" : firstOption.getDescription()),ListSequence.fromList(initialStates).count());
  List<List<RefactoringParticipant.Change<InitialDataObject,FinalDataObject>>> result=ListSequence.fromList(new ArrayList<List<RefactoringParticipant.Change<InitialDataObject,FinalDataObject>>>(ListSequence.fromList(initialStates).count()));
  for (  InitialDataObject initialState : ListSequence.fromList(initialStates)) {
    progressMonitor.advance(1);
    ListSequence.fromList(result).addElement(getChanges(initialState,repository,selectedOptions,searchScope));
    if (progressMonitor.isCanceled()) {
      return null;
    }
  }
  progressMonitor.done();
  return result;
}
