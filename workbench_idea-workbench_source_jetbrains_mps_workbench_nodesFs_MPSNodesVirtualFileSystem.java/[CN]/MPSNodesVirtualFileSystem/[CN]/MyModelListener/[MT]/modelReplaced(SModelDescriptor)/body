{
  for (  SNode root : sm.getSModel().roots()) {
    updateModificationStamp(root);
  }
  Collection<MPSNodeVirtualFile> deletedFiles=new ArrayList<MPSNodeVirtualFile>();
  Collection<Pair<MPSNodeVirtualFile,String>> renamedFiles=new ArrayList<Pair<MPSNodeVirtualFile,String>>();
  for (Iterator<Entry<SNodePointer,MPSNodeVirtualFile>> it=myVirtualFiles.entrySet().iterator(); it.hasNext(); ) {
    Entry<SNodePointer,MPSNodeVirtualFile> entry=it.next();
    if (entry.getKey().getModel() != sm)     continue;
    SNode node=entry.getKey().getNode();
    MPSNodeVirtualFile file=entry.getValue();
    if (node == null) {
      deletedFiles.add(file);
      it.remove();
    }
 else {
      String oldName=file.getName();
      String newName=node.getPresentation();
      if (!oldName.equals(newName)) {
        renamedFiles.add(new Pair<MPSNodeVirtualFile,String>(file,newName));
      }
    }
  }
  VFSNotifier vfsNotifier=new VFSNotifier(deletedFiles,renamedFiles);
  if (vfsNotifier.hasPendingNotifications()) {
    ModelAccess.instance().runWriteInEDT(vfsNotifier);
  }
}
