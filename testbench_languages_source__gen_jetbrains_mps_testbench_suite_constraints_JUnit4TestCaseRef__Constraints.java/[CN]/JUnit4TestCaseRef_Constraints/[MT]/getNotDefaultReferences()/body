{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("klass",new BaseReferenceConstraintsDescriptor("klass",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return JUnit4TestCaseRef_Behavior.call_getTestClassesForModule_1514755338276096458(SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SConceptOperations.findConceptDeclaration("jetbrains.mps.testbench.suite.structure.JUnit4TestCaseRef"))),SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.testbench.suite.structure.ModuleSuite",true,false));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_qd3c0x_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
