{
  try {
    List<SModelDescriptor> modelsToCheck=new ArrayList<SModelDescriptor>();
    modelsToCheck.addAll(((List<SModelDescriptor>)MapSequence.fromMap(_params).get("models")));
    for (    SModelDescriptor model : ((List<SModelDescriptor>)MapSequence.fromMap(_params).get("models"))) {
      String name=model.getLongName();
      boolean isStub=SModelStereotype.isStubModelStereotype(model.getStereotype());
      for (      SModelDescriptor innerModel : ListSequence.fromList(model.getModule().getOwnModelDescriptors())) {
        if (innerModel.getLongName().startsWith(name + ".")) {
          if (isStub == SModelStereotype.isStubModelStereotype(innerModel.getStereotype())) {
            modelsToCheck.add(innerModel);
          }
        }
      }
    }
    if (modelsToCheck.size() > 1) {
      ((Project)MapSequence.fromMap(_params).get("project")).getComponent(ProjectPluginManager.class).getTool(ModelCheckerTool_Tool.class).checkModels(modelsToCheck,((IOperationContext)MapSequence.fromMap(_params).get("operationContext")),true);
    }
 else {
      ((Project)MapSequence.fromMap(_params).get("project")).getComponent(ProjectPluginManager.class).getTool(ModelCheckerTool_Tool.class).checkModel(modelsToCheck.get(0),((IOperationContext)MapSequence.fromMap(_params).get("operationContext")),true);
    }
  }
 catch (  Throwable t) {
    if (log.isErrorEnabled()) {
      log.error("User's action execute method failed. Action:" + "CheckModel",t);
    }
  }
}
