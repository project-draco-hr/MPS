{
  SNode cls;
  final Map<SNode,Integer> memberStartPositions=MapSequence.fromMap(new HashMap<SNode,Integer>());
  boolean isAnonymous=x.allocation != null;
  if (isAnonymous) {
    cls=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x1107e0cb103L,"jetbrains.mps.baseLanguage.structure.AnonymousClass")));
  }
 else {
switch (TypeDeclaration.kind(x.modifiers)) {
case TypeDeclaration.CLASS_DECL:
      cls=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")));
    break;
case TypeDeclaration.INTERFACE_DECL:
  cls=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface")));
break;
case TypeDeclaration.ENUM_DECL:
cls=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass")));
break;
case TypeDeclaration.ANNOTATION_TYPE_DECL:
cls=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a69dc80cL,"jetbrains.mps.baseLanguage.structure.Annotation")));
break;
default :
throw new JavaParseException("Unknown type declaration type");
}
}
ASTConverter prefixedConverter=this;
if (!(isAnonymous)) {
SPropertyOperations.set(cls,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),new String(x.name));
SLinkOperations.setTarget(cls,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,0x112670d886aL,"visibility"),convertVisibility(x.modifiers));
if (SNodeOperations.isInstanceOf(cls,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"))) {
SPropertyOperations.set(SNodeOperations.cast(cls,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")),MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x451f9e9f920b7f7dL,"isStatic"),"" + (flagSet(x.modifiers,ClassFileConstants.AccStatic)));
}
 else if (SNodeOperations.isInstanceOf(cls,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface"))) {
SPropertyOperations.set(cls,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x73c6d8a8c021f99L,"nonStatic"),"" + (true));
}
if (myOnlyStubs) {
String nodeId=getState().getIdPrefix() + SPropertyOperations.getString(cls,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
((jetbrains.mps.smodel.SNode)cls).setId(new SNodeId.Foreign(nodeId));
prefixedConverter=this.withIdPrefix(SPropertyOperations.getString(cls,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")) + ".");
}
}
ASTConverter childConverter=prefixedConverter;
childConverter=childConverter.convertTypeVars(x.typeParameters,cls);
if (x.memberTypes != null) {
for (TypeDeclaration innerTyp : x.memberTypes) {
try {
SNode nested=childConverter.convertTypeDecl(innerTyp);
SLinkOperations.getChildren(cls,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x4a9a46de59132803L,"member")).add(nested);
MapSequence.fromMap(memberStartPositions).put(nested,innerTyp.sourceStart);
}
  finally {
}
}
}
childConverter.convertAnnotations(x.annotations,cls);
{
SNode claz=cls;
if (SNodeOperations.isInstanceOf(claz,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"))) {
SLinkOperations.setTarget(claz,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x10f6353296dL,"superclass"),SNodeOperations.cast(childConverter.convertTypeReference(x.superclass),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType")));
if (x.superInterfaces != null) {
for (TypeReference i : x.superInterfaces) {
ListSequence.fromList(SLinkOperations.getChildren(claz,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0xff2ac0b419L,"implementedInterface"))).addElement(SNodeOperations.cast(childConverter.convertTypeReference(i),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType")));
}
}
SPropertyOperations.set(claz,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0xfa5cee6dfaL,"abstractClass"),"" + (flagSet(x.modifiers,ClassFileConstants.AccAbstract)));
SPropertyOperations.set(claz,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x11c6af4b284L,"isFinal"),"" + (flagSet(x.modifiers,ClassFileConstants.AccFinal)));
}
}
{
SNode iface=cls;
if (SNodeOperations.isInstanceOf(iface,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface"))) {
if (x.superInterfaces != null) {
for (TypeReference i : x.superInterfaces) {
ListSequence.fromList(SLinkOperations.getChildren(iface,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,0x101eddadad7L,"extendedInterface"))).addElement(SNodeOperations.cast(childConverter.convertTypeReference(i),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType")));
}
}
}
}
{
SNode enm=cls;
if (SNodeOperations.isInstanceOf(enm,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass"))) {
if (x.fields != null) {
for (FieldDeclaration f : x.fields) {
if (!(isEnumConstant(f))) {
continue;
}
SNode enumConst=convertEnumConst(f);
SLinkOperations.getChildren(enm,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,0xfc367503acL,"enumConstant")).add(enumConst);
MapSequence.fromMap(memberStartPositions).put(SNodeOperations.cast(enumConst,MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112574373bdL,"jetbrains.mps.baseLanguage.structure.ClassifierMember")),f.sourceStart);
}
}
}
}
if (x.fields != null) {
for (FieldDeclaration f : x.fields) {
if (isEnumConstant(f)) {
continue;
}
SNode mem=childConverter.convertField(cls,f,true);
MapSequence.fromMap(memberStartPositions).put(mem,f.sourceStart);
}
}
if (x.methods != null) {
for (AbstractMethodDeclaration method : x.methods) {
if (method.isDefaultConstructor()) {
continue;
}
SNode mem=childConverter.convertMethod(cls,method,true);
MapSequence.fromMap(memberStartPositions).put(SNodeOperations.cast(mem,MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112574373bdL,"jetbrains.mps.baseLanguage.structure.ClassifierMember")),method.sourceStart);
}
}
if (x.javadoc != null) {
AttributeOperations.createAndSetAttrbiute(cls,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment"),"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment");
MapSequence.fromMap(myJavadocs).put(x.javadoc.sourceStart,AttributeOperations.getAttribute(cls,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment")));
}
if (SNodeOperations.isInstanceOf(cls,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a69dc80cL,"jetbrains.mps.baseLanguage.structure.Annotation"))) {
Iterable<SNode> annoMethods=ListSequence.fromList(SLinkOperations.getChildren(cls,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x4a9a46de59132803L,"member"))).where(new IWhereFilter<SNode>(){
public boolean accept(SNode it){
return SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a6a17a27L,"jetbrains.mps.baseLanguage.structure.AnnotationMethodDeclaration"));
}
}
).select(new ISelector<SNode,SNode>(){
public SNode select(SNode it){
return SNodeOperations.cast(it,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a6a17a27L,"jetbrains.mps.baseLanguage.structure.AnnotationMethodDeclaration"));
}
}
);
ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(cls,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a69dc80cL,"jetbrains.mps.baseLanguage.structure.Annotation")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x101f2cc410bL,"method"))).addSequence(Sequence.fromIterable(annoMethods));
ListSequence.fromList(SLinkOperations.getChildren(cls,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x4a9a46de59132803L,"member"))).removeWhere(new IWhereFilter<SNode>(){
public boolean accept(SNode it){
return SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a6a17a27L,"jetbrains.mps.baseLanguage.structure.AnnotationMethodDeclaration"));
}
}
);
}
List<SNode> sortedMembers=ListSequence.fromList(SLinkOperations.getChildren(cls,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x4a9a46de59132803L,"member"))).sort(new ISelector<SNode,Integer>(){
public Integer select(SNode it){
return MapSequence.fromMap(memberStartPositions).get(it);
}
}
,true).toListSequence();
ListSequence.fromList(SLinkOperations.getChildren(cls,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x4a9a46de59132803L,"member"))).clear();
ListSequence.fromList(SLinkOperations.getChildren(cls,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x4a9a46de59132803L,"member"))).addSequence(ListSequence.fromList(sortedMembers));
return cls;
}
