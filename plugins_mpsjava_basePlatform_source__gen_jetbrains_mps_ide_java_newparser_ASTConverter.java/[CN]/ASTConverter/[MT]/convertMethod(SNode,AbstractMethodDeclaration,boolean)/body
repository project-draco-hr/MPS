{
  SNode result=null;
  SNodeId sNodeId=cls.getSNodeId();
  String clsStringId=(SNodeOperations.isInstanceOf(cls,"jetbrains.mps.baseLanguage.structure.AnonymousClass") || sNodeId instanceof SNodeId.Regular ? null : cls.getSNodeId().toString());
  if (method instanceof MethodDeclaration) {
    if (flagSet(method.modifiers,ClassFileConstants.AccStatic) && SNodeOperations.isInstanceOf(cls,"jetbrains.mps.baseLanguage.structure.ClassConcept")) {
      result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration",null);
    }
 else     if (SNodeOperations.isInstanceOf(cls,"jetbrains.mps.baseLanguage.structure.Annotation")) {
      result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.AnnotationMethodDeclaration",null);
    }
 else {
      result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration",null);
    }
    if (SNodeOperations.isInstanceOf(cls,"jetbrains.mps.baseLanguage.structure.Interface")) {
      SPropertyOperations.set(SNodeOperations.cast(result,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration"),"isAbstract","" + (true));
      SLinkOperations.setTarget(SNodeOperations.cast(result,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration"),"visibility",_quotation_createNode_rbndtb_a0b0c0g0l(),true);
    }
    convertMethodGuts((MethodDeclaration)method,clsStringId,result);
    if (attach) {
      ListSequence.fromList(SLinkOperations.getTargets(cls,"member",true)).addElement(SNodeOperations.cast(result,"jetbrains.mps.baseLanguage.structure.ClassifierMember"));
    }
  }
 else   if (method instanceof ConstructorDeclaration) {
    result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ConstructorDeclaration",null);
    SLinkOperations.setTarget(result,"returnType",_quotation_createNode_rbndtb_a0c0a6a11(),true);
    convertMethodGuts(method,clsStringId,result);
    if (attach) {
      ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(cls,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"member",true)).addElement(SNodeOperations.cast(result,"jetbrains.mps.baseLanguage.structure.ConstructorDeclaration"));
    }
  }
  if (method.javadoc != null) {
    AttributeOperations.createAndSetAttrbiute(result,new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment")),"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment");
  }
  return result;
}
