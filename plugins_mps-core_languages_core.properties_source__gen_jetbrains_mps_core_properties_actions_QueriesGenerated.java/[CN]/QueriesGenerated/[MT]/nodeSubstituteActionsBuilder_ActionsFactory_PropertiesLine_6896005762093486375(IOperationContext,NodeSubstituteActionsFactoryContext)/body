{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=MetaAdapterFactory.getConcept(0x58f98fef90ad4b72L,0xa390fad66ec7005aL,0x36fb0dc9fd3a3ac1L,"jetbrains.mps.core.properties.structure.PropertiesDeclaration").getDeclarationNode();
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode pd=SNodeFactoryOperations.createNewNode(model,SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x58f98fef90ad4b72L,0xa390fad66ec7005aL,0x36fb0dc9fd3a3ac1L,"jetbrains.mps.core.properties.structure.PropertiesDeclaration")),null);
          if (!((pattern == null || pattern.length() == 0))) {
            String name=pattern;
            if (pattern.endsWith("=")) {
              name=name.substring(0,name.length() - 1);
            }
            SPropertyOperations.set(pd,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),name);
          }
          return pd;
        }
        public String getMatchingText(        String pattern){
          if (!((pattern == null || pattern.length() == 0)) && !(pattern.equals("#"))) {
            String name=pattern;
            if (pattern.endsWith("=")) {
              name=name.substring(0,name.length() - 1);
            }
            return name + "=";
          }
          return "key=value";
        }
        public String getVisibleMatchingText(        String pattern){
          return getMatchingText(pattern);
        }
      }
);
    }
  }
  return result;
}
