{
  Phase ph=findPhaseForInput(inputNode);
  if (ph == null) {
    return Collections.emptyList();
  }
  ArrayList<TraceNodeUI> rv=new ArrayList<TraceNodeUI>();
  ArrayList<SNodeId> nodes=new ArrayList<SNodeId>();
  nodes.add(inputNode.getNodeId());
  for (; ph != null && !nodes.isEmpty(); ph=ph.next) {
    Collection<Element> changes=ph.getChangesWithInput(nodes);
    if (changes.isEmpty()) {
      continue;
    }
    TraceNodeUI phaseNode=buildPhaseNode(ph,changes);
    if (phaseNode.getChildren().iterator().hasNext()) {
      rv.add(phaseNode);
    }
    LinkedHashSet<SNodeId> nextInputs=new LinkedHashSet<SNodeId>();
    for (    Element e : changes) {
      nextInputs.add(e.output);
    }
    nodes.clear();
    nodes.addAll(nextInputs);
  }
  return rv;
}
