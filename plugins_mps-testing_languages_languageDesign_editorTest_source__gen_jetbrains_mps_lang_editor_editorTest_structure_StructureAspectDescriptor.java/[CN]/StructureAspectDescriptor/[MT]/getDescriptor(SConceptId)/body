{
switch (myConceptIndex.index(id)) {
case LanguageConceptSwitch.AttractsFocusBlock:
    return myConceptAttractsFocusBlock;
case LanguageConceptSwitch.AttributeChild:
  return myConceptAttributeChild;
case LanguageConceptSwitch.AttributeWithChildren:
return myConceptAttributeWithChildren;
case LanguageConceptSwitch.AttributedConcept:
return myConceptAttributedConcept;
case LanguageConceptSwitch.BinaryExpression:
return myConceptBinaryExpression;
case LanguageConceptSwitch.BracesBlock:
return myConceptBracesBlock;
case LanguageConceptSwitch.BracesStubBlock:
return myConceptBracesStubBlock;
case LanguageConceptSwitch.ClassReference:
return myConceptClassReference;
case LanguageConceptSwitch.CollapsedByDefault:
return myConceptCollapsedByDefault;
case LanguageConceptSwitch.CollapsedConditionally:
return myConceptCollapsedConditionally;
case LanguageConceptSwitch.CollapsibleConcept:
return myConceptCollapsibleConcept;
case LanguageConceptSwitch.Composition:
return myConceptComposition;
case LanguageConceptSwitch.DelTestAbstractChild:
return myConceptDelTestAbstractChild;
case LanguageConceptSwitch.DelTestChild1:
return myConceptDelTestChild1;
case LanguageConceptSwitch.DelTestChildContainer:
return myConceptDelTestChildContainer;
case LanguageConceptSwitch.DelTestRoot:
return myConceptDelTestRoot;
case LanguageConceptSwitch.FoldingContainer:
return myConceptFoldingContainer;
case LanguageConceptSwitch.IBaseTestBlock:
return myConceptIBaseTestBlock;
case LanguageConceptSwitch.InitAbstractChild:
return myConceptInitAbstractChild;
case LanguageConceptSwitch.InitChildWithDirectCycle_card1:
return myConceptInitChildWithDirectCycle_card1;
case LanguageConceptSwitch.InitChildWithDirectCycle_card1n:
return myConceptInitChildWithDirectCycle_card1n;
case LanguageConceptSwitch.InitChildWithIndirectCycle_card1:
return myConceptInitChildWithIndirectCycle_card1;
case LanguageConceptSwitch.InitChildWithIndirectCycle_card1n:
return myConceptInitChildWithIndirectCycle_card1n;
case LanguageConceptSwitch.InitChildWithTwoSameConceptChildren:
return myConceptInitChildWithTwoSameConceptChildren;
case LanguageConceptSwitch.InitContainer:
return myConceptInitContainer;
case LanguageConceptSwitch.InitGrandChild:
return myConceptInitGrandChild;
case LanguageConceptSwitch.InitGrandChildWithIndirectCycle_card1:
return myConceptInitGrandChildWithIndirectCycle_card1;
case LanguageConceptSwitch.InitGrandChildWithIndirectCycle_card1n:
return myConceptInitGrandChildWithIndirectCycle_card1n;
case LanguageConceptSwitch.InspectorBlock:
return myConceptInspectorBlock;
case LanguageConceptSwitch.IntegerLiteral:
return myConceptIntegerLiteral;
case LanguageConceptSwitch.NonEmptyProperty:
return myConceptNonEmptyProperty;
case LanguageConceptSwitch.NotEditableVaraileReference:
return myConceptNotEditableVaraileReference;
case LanguageConceptSwitch.PlusExpression:
return myConceptPlusExpression;
case LanguageConceptSwitch.ReferenceAnnotataion:
return myConceptReferenceAnnotataion;
case LanguageConceptSwitch.SelectionChild:
return myConceptSelectionChild;
case LanguageConceptSwitch.SelectionContainer:
return myConceptSelectionContainer;
case LanguageConceptSwitch.SideTranformWrapper:
return myConceptSideTranformWrapper;
case LanguageConceptSwitch.SimplePropertyAttribute:
return myConceptSimplePropertyAttribute;
case LanguageConceptSwitch.SimplePropertyContainer:
return myConceptSimplePropertyContainer;
case LanguageConceptSwitch.StubBlock:
return myConceptStubBlock;
case LanguageConceptSwitch.StyleChild:
return myConceptStyleChild;
case LanguageConceptSwitch.StyleParent:
return myConceptStyleParent;
case LanguageConceptSwitch.SubstMiddlewareChild:
return myConceptSubstMiddlewareChild;
case LanguageConceptSwitch.SubstTestAbstractChild:
return myConceptSubstTestAbstractChild;
case LanguageConceptSwitch.SubstTestBooleanPropertyChild:
return myConceptSubstTestBooleanPropertyChild;
case LanguageConceptSwitch.SubstTestEnumPropertyChild:
return myConceptSubstTestEnumPropertyChild;
case LanguageConceptSwitch.SubstTestRoot:
return myConceptSubstTestRoot;
case LanguageConceptSwitch.TestBlockList:
return myConceptTestBlockList;
case LanguageConceptSwitch.VariableDeclarationBlock:
return myConceptVariableDeclarationBlock;
case LanguageConceptSwitch.VariableDeclarationReference:
return myConceptVariableDeclarationReference;
case LanguageConceptSwitch.VerticalLayoutBlockList:
return myConceptVerticalLayoutBlockList;
default :
return null;
}
}
