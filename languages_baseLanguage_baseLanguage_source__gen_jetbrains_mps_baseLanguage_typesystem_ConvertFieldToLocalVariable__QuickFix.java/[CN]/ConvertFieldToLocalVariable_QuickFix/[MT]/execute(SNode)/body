{
  SNode variableDeclaration=SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.VariableDeclaration");
  SNode varStmd=SNodeOperations.insertPrevSiblingChild(ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(((SNode)ConvertFieldToLocalVariable_QuickFix.this.getField("method")[0]),"body",true),"statement",true)).first(),SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement",null));
  final SNode var=SLinkOperations.setTarget(varStmd,"localVariableDeclaration",SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration",null),true);
  SLinkOperations.setTarget(var,"type",SLinkOperations.getTarget(variableDeclaration,"type",true),true);
  SPropertyOperations.set(var,"name",SPropertyOperations.getString(variableDeclaration,"name"));
  SLinkOperations.setTarget(var,"initializer",SLinkOperations.getTarget(variableDeclaration,"initializer",true),true);
  SPropertyOperations.set(var,"isFinal","" + (SPropertyOperations.getBoolean(variableDeclaration,"isFinal")));
  Sequence.fromIterable(((Iterable<SNode>)ConvertFieldToLocalVariable_QuickFix.this.getField("refs")[0])).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode it){
      SNode ref=SNodeOperations.replaceWithNewChild(it,"jetbrains.mps.baseLanguage.structure.LocalVariableReference");
      SLinkOperations.setTarget(ref,"variableDeclaration",var,false);
    }
  }
);
  SNodeOperations.detachNode(node);
}
