{
  if (nodeToHighlight == null)   return;
  SNode node=nodeToHighlight;
  while (node != null) {
    if (color.equals(this.getColorFor(node)))     return;
    node=node.getParent();
  }
  Set<MyMessage> messagesToRemove=new HashSet<MyMessage>();
  for (  SNode childNode : CollectionUtil.iteratorAsIterable(nodeToHighlight.depthFirstChildren())) {
    for (    MyMessage msg : myMessages) {
      if (msg.getNode() == childNode && msg.getColor().equals(color))       messagesToRemove.add(msg);
    }
  }
  myMessages.removeAll(messagesToRemove);
  for (  MyMessage msg : messagesToRemove) {
    myEditor.getMessagesGutter().remove(msg);
  }
  this.mark(nodeToHighlight,color,messageText);
}
