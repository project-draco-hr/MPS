{
  final ChangeEditorMessage message=new ChangeEditorMessage(model,change,this,conflictChecker);
  if (message.getNode() == null) {
    return;
  }
  MapSequence.fromMap(myChangeToMessages).put(message.getChange(),ListSequence.fromList(new LinkedList<ChangeEditorMessage>()));
  ListSequence.fromList(MapSequence.fromMap(myChangeToMessages).get(message.getChange())).addElement(message);
  Sequence.fromIterable(getEditorComponents()).visitAll(new IVisitor<EditorComponent>(){
    public void visit(    EditorComponent ec){
      ec.getHighlightManager().mark(message);
    }
  }
);
}
