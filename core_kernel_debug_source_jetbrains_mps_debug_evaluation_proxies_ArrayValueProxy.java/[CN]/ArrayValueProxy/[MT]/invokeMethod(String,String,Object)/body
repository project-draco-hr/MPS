{
  ClassType objectType=(ClassType)Evaluator.findClassType("java.lang.Object",myThreadReference.virtualMachine());
  final Method method=Evaluator.findMethod(objectType,name,jniSignature);
  final List<Value> argValues=MirrorUtil.getValues(myThreadReference,args);
  return handleInvocationExceptions(new Invocatable<IValueProxy>(){
    @Override public IValueProxy invoke() throws InvocationException, InvalidTypeException, ClassNotLoadedException, IncompatibleThreadStateException {
      Value result=getArrayValue().invokeMethod(myThreadReference,method,argValues,0);
      return MirrorUtil.getValueProxy(result,myThreadReference);
    }
  }
);
}
