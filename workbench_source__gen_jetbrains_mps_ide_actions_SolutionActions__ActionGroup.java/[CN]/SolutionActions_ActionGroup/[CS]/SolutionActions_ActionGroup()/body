{
  super("",ID);
  this.setIsInternal(false);
  this.setPopup(false);
  try {
    this.addAnchor(SolutionActions_ActionGroup.LABEL_ID_solutionNew);
    this.addSeparator();
    if (BaseGroup.class.isAssignableFrom(AddModuleToProjectAction.class)) {
      this.add(new AddModuleToProjectAction());
    }
 else {
      this.add(ActionFactory.getInstance().getRegisteredAction(AddModuleToProjectAction.class,null));
    }
{
      IModule language=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().getRegisteredAction(language.getClass("jetbrains.mps.ide.actions.RemoveModuleFromProject_Action"),language.getModuleFqName()));
    }
    if (BaseGroup.class.isAssignableFrom(DeleteModuleAction.class)) {
      this.add(new DeleteModuleAction());
    }
 else {
      this.add(ActionFactory.getInstance().getRegisteredAction(DeleteModuleAction.class,null));
    }
    this.addSeparator();
    if (BaseGroup.class.isAssignableFrom(GenerateAllModelsInModuleAction.class)) {
      this.add(new GenerateAllModelsInModuleAction(true));
    }
 else {
      this.add(ActionFactory.getInstance().getRegisteredAction(GenerateAllModelsInModuleAction.class,null,true));
    }
    if (BaseGroup.class.isAssignableFrom(GenerateAllModelsInModuleAction.class)) {
      this.add(new GenerateAllModelsInModuleAction(false));
    }
 else {
      this.add(ActionFactory.getInstance().getRegisteredAction(GenerateAllModelsInModuleAction.class,null,false));
    }
    if (BaseGroup.class.isAssignableFrom(GenerateTextFromAllModelsInSolutionAction.class)) {
      this.add(new GenerateTextFromAllModelsInSolutionAction());
    }
 else {
      this.add(ActionFactory.getInstance().getRegisteredAction(GenerateTextFromAllModelsInSolutionAction.class,null));
    }
{
      IModule language=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().getRegisteredAction(language.getClass("jetbrains.mps.ide.actions.CheckSolution_Action"),language.getModuleFqName()));
    }
    if (BaseGroup.class.isAssignableFrom(OptimizeSolutionImportsAction.class)) {
      this.add(new OptimizeSolutionImportsAction());
    }
 else {
      this.add(ActionFactory.getInstance().getRegisteredAction(OptimizeSolutionImportsAction.class,null));
    }
{
      IModule language=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().getRegisteredAction(language.getClass("jetbrains.mps.ide.actions.AnalyzeClasspath_Action"),language.getModuleFqName()));
    }
    if (BaseGroup.class.isAssignableFrom(ShowModuleDependenciesAction.class)) {
      this.add(new ShowModuleDependenciesAction());
    }
 else {
      this.add(ActionFactory.getInstance().getRegisteredAction(ShowModuleDependenciesAction.class,null));
    }
    this.addSeparator();
{
      IModule language=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().getRegisteredAction(language.getClass("jetbrains.mps.ide.actions.MakeModule_Action"),language.getModuleFqName()));
    }
{
      IModule language=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().getRegisteredAction(language.getClass("jetbrains.mps.ide.actions.RebuildModule_Action"),language.getModuleFqName()));
    }
{
      IModule language=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().getRegisteredAction(language.getClass("jetbrains.mps.ide.actions.CleanModule_Action"),language.getModuleFqName()));
    }
    this.addSeparator();
{
      IModule language=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().getRegisteredAction(language.getClass("jetbrains.mps.ide.actions.SetModuleFolder_Action"),language.getModuleFqName()));
    }
    this.addSeparator();
{
      IModule language=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().getRegisteredAction(language.getClass("jetbrains.mps.ide.actions.SolutionProperties_Action"),language.getModuleFqName()));
    }
    this.addSeparator();
    this.addAnchor(SolutionActions_ActionGroup.LABEL_ID_refactoring);
    this.addSeparator();
  }
 catch (  Throwable t) {
    LOG.error("User group error",t);
  }
}
