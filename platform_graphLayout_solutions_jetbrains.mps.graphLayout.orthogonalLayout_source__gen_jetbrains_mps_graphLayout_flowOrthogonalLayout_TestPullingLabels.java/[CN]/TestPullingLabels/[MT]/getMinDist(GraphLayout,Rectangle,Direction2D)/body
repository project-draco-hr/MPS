{
  int minDist=Integer.MAX_VALUE;
  for (  INode node : SetSequence.fromSet(MapSequence.fromMap(layout.getNodeLayout()).keySet())) {
    Rectangle nodeRect=layout.getNodeLayout(node);
    Point[] points=GeomUtil.getCornerPoints(nodeRect);
    for (    Point point : points) {
      if (rect.contains(point)) {
        minDist=Math.min(minDist,getDist(rect,point,dir));
      }
    }
  }
  for (  IEdge edge : SetSequence.fromSet(MapSequence.fromMap(layout.getLabelLayout()).keySet())) {
    Rectangle nodeRect=layout.getLabelLayout(edge);
    Point[] points=GeomUtil.getCornerPoints(nodeRect);
    for (    Point point : points) {
      if (rect.contains(point)) {
        minDist=Math.min(minDist,getDist(rect,point,dir));
      }
    }
  }
  for (  IEdge edge : SetSequence.fromSet(MapSequence.fromMap(layout.getEdgeLayout()).keySet())) {
    List<Point> points=layout.getEdgeLayout(edge);
    for (    Point point : points) {
      if (rect.contains(point)) {
        minDist=Math.min(minDist,getDist(rect,point,dir));
      }
    }
  }
  return minDist;
}
