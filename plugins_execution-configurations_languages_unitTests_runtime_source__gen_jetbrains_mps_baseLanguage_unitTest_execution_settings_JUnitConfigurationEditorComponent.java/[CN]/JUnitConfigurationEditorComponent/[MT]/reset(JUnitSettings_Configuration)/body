{
  if (settings.getRunType() >= 0 && settings.getRunType() < JUnitRunTypes.values().length) {
    myRunKind=settings.getJUnitRunType();
  }
 else {
    myRunKind=JUnitRunTypes.PROJECT;
  }
  myButtons[myRunKind.ordinal()].setSelected(true);
  final List<ITestNodeWrapper> classes=ListSequence.fromList(new ArrayList<ITestNodeWrapper>());
  myProject.getModelAccess().runReadAction(new Runnable(){
    public void run(){
      Sequence.fromIterable(TestUtils.wrapPointerStrings(myProject,settings.getTestCases())).visitAll(new IVisitor<ITestNodeWrapper>(){
        public void visit(        ITestNodeWrapper it){
          ListSequence.fromList(classes).addElement(it);
        }
      }
);
    }
  }
);
  myClassesList.setData(classes);
  final List<ITestNodeWrapper> methods=ListSequence.fromList(new ArrayList<ITestNodeWrapper>());
  myProject.getModelAccess().runReadAction(new Runnable(){
    public void run(){
      Sequence.fromIterable(TestUtils.wrapPointerStrings(myProject,settings.getTestMethods())).visitAll(new IVisitor<ITestNodeWrapper>(){
        public void visit(        ITestNodeWrapper it){
          ListSequence.fromList(methods).addElement(it);
        }
      }
);
    }
  }
);
  myMethodsList.setData(methods);
  if (settings.getModel() != null) {
    resetEditorModelWith(settings.getModel());
  }
 else {
    final Wrappers._T<ITestNodeWrapper> wrapperToTakeModelFrom=new Wrappers._T<ITestNodeWrapper>(null);
    if (ListSequence.fromList(myClassesList.getItems()).isNotEmpty()) {
      wrapperToTakeModelFrom.value=ListSequence.fromList(myClassesList.getItems()).first();
    }
 else     if (ListSequence.fromList(myMethodsList.getItems()).isNotEmpty()) {
      wrapperToTakeModelFrom.value=ListSequence.fromList(myMethodsList.getItems()).first();
    }
    if (wrapperToTakeModelFrom.value != null) {
      myProject.getModelAccess().runReadAction(new Runnable(){
        public void run(){
          resetEditorModelWith(wrapperToTakeModelFrom.value.getNodePointer().getModelReference().getModelName());
        }
      }
);
    }
  }
  if (settings.getModule() != null) {
    setModuleValue(settings.getModule());
    myModuleChooser.setText(settings.getModule());
  }
  updateCheckBoxes(settings);
  updatePanels();
  myCachesDir.setText(settings.getCachesPath());
}
