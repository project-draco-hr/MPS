{
{
    SAbstractConcept cncpt=c;
    Integer preIndex=indices_4qogsf_a0v.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return props_ActionAsPattern;
      }
    break;
case 1:
  if (true) {
    return props_ActionStatement;
  }
break;
case 2:
if (true) {
return props_AsPattern;
}
break;
case 3:
if (true) {
return props_GeneratorInternal_ChildDescriptor;
}
break;
case 4:
if (true) {
return props_GeneratorInternal_PropertyDescriptor;
}
break;
case 5:
if (true) {
return props_GeneratorInternal_ReferenceDescriptor;
}
break;
case 6:
if (true) {
return props_InsertAfterPosition;
}
break;
case 7:
if (true) {
return props_InsertBeforePosition;
}
break;
case 8:
if (true) {
return props_InsertPosition;
}
break;
case 9:
if (true) {
return props_LinkPatternVariableDeclaration;
}
break;
case 10:
if (true) {
return props_ListPattern;
}
break;
case 11:
if (true) {
return props_OrPattern;
}
break;
case 12:
if (true) {
return props_OrPatternClause;
}
break;
case 13:
if (true) {
return props_OrPatternVariableReference;
}
break;
case 14:
if (true) {
return props_Pattern;
}
break;
case 15:
if (true) {
return props_PatternExpression;
}
break;
case 16:
if (true) {
return props_PatternVariableDeclaration;
}
break;
case 17:
if (true) {
return props_PatternVariableReference;
}
break;
case 18:
if (true) {
return props_PropertyPatternVariableDeclaration;
}
break;
case 19:
if (true) {
return props_WildcardPattern;
}
break;
default :
}
}
throw new IllegalStateException();
}
