{
  SNode result=null;
  Set<SNode> _parameterValues_129834374=new HashSet<SNode>();
  SNode quotedNode_1=null;
  SNode quotedNode_2=null;
  SNode quotedNode_3=null;
  SNode quotedNode_4=null;
{
    quotedNode_1=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.typesystem.structure.JoinType",TypeChecker.getInstance().getRuntimeTypesModel(),GlobalScope.getInstance(),false);
    SNode quotedNode1_1=quotedNode_1;
{
      quotedNode_2=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",TypeChecker.getInstance().getRuntimeTypesModel(),GlobalScope.getInstance(),false);
      SNode quotedNode1_2=quotedNode_2;
      quotedNode1_2.addReference(SReference.create("classifier",quotedNode1_2,SModelReference.fromString("f:java_stub#jetbrains.mps.smodel.search(jetbrains.mps.smodel.search@java_stub)"),SNodeId.fromString("~ISearchScope")));
      quotedNode_1.addChild("argument",quotedNode1_2);
    }
{
      quotedNode_3=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.SequenceType",TypeChecker.getInstance().getRuntimeTypesModel(),GlobalScope.getInstance(),false);
      SNode quotedNode1_3=quotedNode_3;
{
        quotedNode_4=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType",TypeChecker.getInstance().getRuntimeTypesModel(),GlobalScope.getInstance(),false);
        SNode quotedNode1_4=quotedNode_4;
        quotedNode_3.addChild("elementType",quotedNode1_4);
      }
      quotedNode_1.addChild("argument",quotedNode1_3);
    }
    result=quotedNode1_1;
  }
  return result;
}
