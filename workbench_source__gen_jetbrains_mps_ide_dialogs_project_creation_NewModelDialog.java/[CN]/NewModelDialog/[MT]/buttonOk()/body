{
  if (!((myModelRoots.getSelectedItem() instanceof NewModelDialog.ModelRootWrapper))) {
    String message;
    if (myNamespace == null) {
      message="At least one module root should be added to module to create models in this module";
    }
 else {
      message="At least one module root with prefix " + myNamespace + " should be added to module to create models with this namespace";
    }
    setErrorText(message);
    return;
  }
  myResult=ModelAccess.instance().runWriteActionInCommand(new Computable<SModelDescriptor>(){
    public SModelDescriptor compute(){
      String modelName=myModelName.getText();
      if (modelName.length() == 0) {
        setErrorText("Empty model name isn't allowed");
        return null;
      }
      if (!(SourceVersion.isName(modelName))) {
        setErrorText("Model name should be valid Java package");
        return null;
      }
      SModelFqName modelUID=new SModelFqName(modelName,myModelStereotype.getSelectedItem().toString());
      if (SModelRepository.getInstance().getModelDescriptor(modelUID) != null) {
        setErrorText("Model with an uid " + modelName + " already exists");
        return null;
      }
      NewModelDialog.ModelRootWrapper wrapper=(NewModelDialog.ModelRootWrapper)myModelRoots.getSelectedItem();
      String modelPrefix=(wrapper.getNamespace().length() > 0 ? wrapper.getNamespace() + '.' : "");
      if (!((modelName.startsWith(modelPrefix)))) {
        setErrorText("Model name should have a prefix " + wrapper.getNamespace());
        return null;
      }
      if (modelName.length() - modelPrefix.length() == 0) {
        setErrorText("Empty model short name isn't allowed");
        return null;
      }
      if (myModule instanceof Language) {
        for (        LanguageAspect aspect : LanguageAspect.values()) {
          String shortName=modelName.substring(modelPrefix.length());
          if (shortName.equals(aspect.getName())) {
            setErrorText("This name isn't allowed because '" + shortName + "' is language aspect name");
            return null;
          }
        }
      }
      return myModule.createModel(modelUID,wrapper.getModelRoot(),null);
    }
  }
,myContext.getProject());
  if (myResult == null) {
    return;
  }
  StandardDialogs.createModelPropertiesDialog(myResult,myContext).showDialog();
  dispose();
}
