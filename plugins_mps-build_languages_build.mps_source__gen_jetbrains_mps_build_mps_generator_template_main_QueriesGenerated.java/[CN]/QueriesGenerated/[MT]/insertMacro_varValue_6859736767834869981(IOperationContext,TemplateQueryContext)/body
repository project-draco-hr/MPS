{
  SNode project=SNodeOperations.getAncestor(_context.getNode(),"jetbrains.mps.build.structure.BuildProject",true,false);
  if (project == null) {
    _context.showErrorMessage(_context.getNode(),"no context project defined");
    return null;
  }
  DependenciesHelper helper=new DependenciesHelper(_context,project);
  SNode path=SNodeOperations.cast(DependenciesHelper.getOriginalNode(((SNode)_context.getVariable("remotePath")),_context),"jetbrains.mps.build.structure.BuildSourcePath");
  SNode layoutNode=helper.artifacts().get(path);
  if (layoutNode == null) {
    StringBuilder suffix=new StringBuilder();
    SNode current=SNodeOperations.as(path,"jetbrains.mps.build.structure.BuildRelativePath");
    if (current != null) {
      suffix.append("/").append(BuildSourcePath_Behavior.call_getLastSegment_1368030936106771141(path,null));
      current=SNodeOperations.as(BuildSourcePath_Behavior.call_getParent_8654221991637145399(current),"jetbrains.mps.build.structure.BuildRelativePath");
    }
    SNode containingRoot=SNodeOperations.getContainingRoot(path);
    while (current != null) {
      SNode res=helper.artifacts().get(new LocalSourcePathArtifact(containingRoot,BuildSourcePath_Behavior.call_getRelativePath_5481553824944787371(current),true));
      if (res != null) {
        return MultiTuple.<SNode,String>from(SNodeOperations.as(res,"jetbrains.mps.build.structure.BuildLayout_Node"),suffix.substring(1));
      }
      suffix.insert(0,BuildSourcePath_Behavior.call_getLastSegment_1368030936106771141(current,null)).insert(0,"/");
      current=SNodeOperations.as(BuildSourcePath_Behavior.call_getParent_8654221991637145399(current),"jetbrains.mps.build.structure.BuildRelativePath");
    }
  }
  if (layoutNode == null || !(SNodeOperations.isInstanceOf(layoutNode,"jetbrains.mps.build.structure.BuildLayout_File"))) {
    _context.showErrorMessage(_context.getNode(),"path " + BuildSourcePath_Behavior.call_getRelativePath_5481553824944787371(((SNode)_context.getVariable("remotePath"))) + " was not found in the layout");
    return null;
  }
  return MultiTuple.<SNode,Object>from(SNodeOperations.cast(layoutNode,"jetbrains.mps.build.structure.BuildLayout_File"),null);
}
