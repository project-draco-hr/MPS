{
  final SNode project=_context.getNode();
  if (project == null) {
    _context.showErrorMessage(_context.getNode(),"no context project defined");
    return ListSequence.fromList(new ArrayList<SNode>());
  }
  final DependenciesHelper helper=new DependenciesHelper(_context,project);
  return Sequence.fromIterable(((MPSModulesPartitioner)_context.getVariable("var:closure")).getExternal()).sort(new ISelector<SNode,Comparable<?>>(){
    public Comparable<?> select(    SNode it){
      return SPropertyOperations.getString(it,"name");
    }
  }
,true).select(new ISelector<SNode,String>(){
    public String select(    SNode module){
      SNode artifact=SNodeOperations.as(DependenciesHelper.getOriginalNode(module,_context),"jetbrains.mps.build.mps.structure.BuildMps_Module");
      SNode layoutNode=helper.artifacts().get(artifact);
      if (layoutNode == null) {
        _context.showErrorMessage(_context.getNode(),"mps module " + SPropertyOperations.getString(module,"name") + " was not found in the layout of `"+ SPropertyOperations.getString(project,"name")+ "'");
        return null;
      }
      String val=BuildLayout_PathElement_Behavior.call_location_7117056644539862594(layoutNode,helper,artifact);
      if (val == null) {
        _context.showErrorMessage(_context.getNode(),"no location for module" + SPropertyOperations.getString(_context.getNode(),"name"));
        return null;
      }
      return val;
    }
  }
).where(new IWhereFilter<String>(){
    public boolean accept(    String it){
      return it != null;
    }
  }
).distinct().sort(new ISelector<String,Comparable<?>>(){
    public Comparable<?> select(    String it){
      return it;
    }
  }
,true).select(new ISelector<String,SNode>(){
    public SNode select(    String it){
      SNode loopnode=SModelOperations.createNewNode(_context.getOutputModel(),"jetbrains.mps.lang.core.structure.BaseConcept",null);
      loopnode.setProperty("path",it);
      return loopnode;
    }
  }
);
}
