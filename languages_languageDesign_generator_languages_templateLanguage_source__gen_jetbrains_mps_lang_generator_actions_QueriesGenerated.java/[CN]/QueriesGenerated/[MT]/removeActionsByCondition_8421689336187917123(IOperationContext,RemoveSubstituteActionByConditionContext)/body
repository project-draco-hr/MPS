{
  Iterator<SubstituteAction> actions=_context.getSubstituteActions();
  while (actions.hasNext()) {
    SubstituteAction current=actions.next();
    SNode outputConcept=(SNode)current.getOutputConcept();
    SNode applicableConcept=MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506fL,"jetbrains.mps.baseLanguage.structure.Expression").getDeclarationNode();
    Condition<SNode> cond=new Condition<SNode>(){
      public boolean met(      SNode concept){
        return concept != MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf940cd6167L,"jetbrains.mps.baseLanguage.structure.NullLiteral").getDeclarationNode() && concept != MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b201L,"jetbrains.mps.baseLanguage.structure.BooleanConstant").getDeclarationNode() && concept != MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf93d565d10L,"jetbrains.mps.baseLanguage.structure.StringLiteral").getDeclarationNode() && concept != MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc59b314L,"jetbrains.mps.baseLanguage.structure.IntegerConstant").getDeclarationNode() && !(SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(concept),MetaAdapterFactory.getConcept(0xb401a68083254110L,0x8fd384331ff25befL,0x42d71bfbeb1a07e5L,"jetbrains.mps.lang.generator.structure.TemplateArgumentPatternRef"))) && !(SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(concept),MetaAdapterFactory.getConcept(0xb401a68083254110L,0x8fd384331ff25befL,0x380132d742e8ccb0L,"jetbrains.mps.lang.generator.structure.TemplateArgumentQueryExpression"))) && concept != MetaAdapterFactory.getConcept(0xb401a68083254110L,0x8fd384331ff25befL,0x457655815a794e79L,"jetbrains.mps.lang.generator.structure.TemplateArgumentParameterExpression").getDeclarationNode() && concept != MetaAdapterFactory.getConcept(0xb401a68083254110L,0x8fd384331ff25befL,0x3d6f2506d88aa028L,"jetbrains.mps.lang.generator.structure.TemplateArgumentVariableRefExpression").getDeclarationNode();
      }
    }
;
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(applicableConcept),SNodeOperations.asSConcept(outputConcept)) && cond.met(outputConcept)) {
      actions.remove();
    }
  }
}
