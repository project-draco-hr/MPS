{
{
    Iterator<List<RefactoringParticipant.Change<I,F>>> nodeChanges_it=ListSequence.fromList(this.changes).iterator();
    Iterator<FS> newNode_it=ListSequence.fromList(newNodes).iterator();
    List<RefactoringParticipant.Change<I,F>> nodeChanges_var;
    FS newNode_var;
    while (nodeChanges_it.hasNext() && newNode_it.hasNext()) {
      nodeChanges_var=nodeChanges_it.next();
      newNode_var=newNode_it.next();
      final F finalState=factory.getFinal(myParticipant,newNode_var);
      ListSequence.fromList(nodeChanges_var).visitAll(new IVisitor<RefactoringParticipant.Change<I,F>>(){
        public void visit(        RefactoringParticipant.Change<I,F> it){
          it.confirm(finalState,repository,session);
        }
      }
);
    }
  }
}
