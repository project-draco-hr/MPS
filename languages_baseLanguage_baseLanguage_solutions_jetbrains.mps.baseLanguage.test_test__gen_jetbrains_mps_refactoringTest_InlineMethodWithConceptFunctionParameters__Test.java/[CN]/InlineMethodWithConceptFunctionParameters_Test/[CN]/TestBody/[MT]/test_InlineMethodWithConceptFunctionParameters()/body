{
  this.addNodeById("4412735672780107330");
  this.addNodeById("4412735672780109161");
  this.addNodeById("4412735672780116642");
  InlineMethodRefactoring ref=new InlineMethodRefactoring(SNodeOperations.cast(this.getNodeById("4412735672780109165"),"jetbrains.mps.baseLanguage.structure.StaticMethodCall"));
  ref.doRefactor();
{
    List<SNode> nodesBefore=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("4412735672780109162"),"jetbrains.mps.lang.intentions.structure.DescriptionBlock"));
    List<SNode> nodesAfter=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("4412735672780116650"),"jetbrains.mps.lang.intentions.structure.DescriptionBlock"));
    Assert.assertNull("nodes '" + nodesBefore + "' and '"+ nodesAfter+ "' do not match!",NodesMatcher.matchNodes(nodesBefore,nodesAfter));
  }
}
