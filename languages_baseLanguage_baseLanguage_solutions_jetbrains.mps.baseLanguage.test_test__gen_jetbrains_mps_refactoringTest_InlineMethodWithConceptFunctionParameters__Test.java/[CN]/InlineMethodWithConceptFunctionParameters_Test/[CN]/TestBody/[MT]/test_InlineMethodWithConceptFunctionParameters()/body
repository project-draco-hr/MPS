{
  this.addNodeById("4412735672780107330");
  this.addNodeById("4412735672780109161");
  this.addNodeById("4412735672780116642");
  InlineMethodRefactoring ref=new InlineMethodRefactoring(SNodeOperations.cast(this.getNodeById("4412735672780109165"),"jetbrains.mps.baseLanguage.structure.StaticMethodCall"));
  ref.doRefactor();
  Assert.assertNull("nodes '" + SNodeOperations.cast(this.getNodeById("4412735672780109162"),"jetbrains.mps.lang.intentions.structure.DescriptionBlock") + "' and '"+ SNodeOperations.cast(this.getNodeById("4412735672780116650"),"jetbrains.mps.lang.intentions.structure.DescriptionBlock")+ "' do not match!",NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("4412735672780109162"),"jetbrains.mps.lang.intentions.structure.DescriptionBlock")),ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("4412735672780116650"),"jetbrains.mps.lang.intentions.structure.DescriptionBlock"))));
}
