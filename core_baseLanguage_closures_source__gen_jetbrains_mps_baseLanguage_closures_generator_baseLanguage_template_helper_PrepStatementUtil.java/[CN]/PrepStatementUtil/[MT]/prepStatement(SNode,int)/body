{
  if (SNodeOperations.isInstanceOf(stmt,"jetbrains.mps.baseLanguage.structure.WhileStatement")) {
    return this.prepWhileStatement(stmt,label);
  }
 else   if (SNodeOperations.isInstanceOf(stmt,"jetbrains.mps.baseLanguage.structure.DoWhileStatement")) {
    return this.prepDoWhileStatement(stmt,label);
  }
 else   if (SNodeOperations.isInstanceOf(stmt,"jetbrains.mps.baseLanguage.structure.ForStatement")) {
    return this.prepForStatement(stmt,label);
  }
 else   if (SNodeOperations.isInstanceOf(stmt,"jetbrains.mps.baseLanguage.structure.ForeachStatement")) {
    return this.prepForeachStatement(stmt,label);
  }
 else   if (SNodeOperations.isInstanceOf(stmt,"jetbrains.mps.baseLanguage.structure.IfStatement")) {
    return this.prepIfStatement(stmt,label);
  }
 else   if (SNodeOperations.isInstanceOf(stmt,"jetbrains.mps.baseLanguage.structure.SwitchStatement")) {
    return this.prepSwitchStatement(stmt,label);
  }
 else   if (SNodeOperations.isInstanceOf(stmt,"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement")) {
    return this.prepLocalvariableDeclarationStatement(stmt,label);
  }
 else   if (SNodeOperations.isInstanceOf(stmt,"jetbrains.mps.baseLanguage.closures.structure.YieldStatement")) {
    return this.prepYieldStatement(stmt,label);
  }
 else   if (SNodeOperations.isInstanceOf(stmt,"jetbrains.mps.baseLanguage.structure.BreakStatement")) {
    this.prepBreakStatement(stmt);
  }
 else   if (SNodeOperations.isInstanceOf(stmt,"jetbrains.mps.baseLanguage.structure.ContinueStatement")) {
    this.prepContinueStatement(stmt);
  }
 else   if (SNodeOperations.isInstanceOf(stmt,"jetbrains.mps.baseLanguage.structure.BlockStatement")) {
    return this.prepBlockStatement(stmt,label);
  }
  return label;
}
