{
  if (SNodeOperations.isInstanceOf(stmt,"jetbrains.mps.baseLanguage.structure.WhileStatement")) {
    return this.prepWhileStatement(SNodeOperations.cast(stmt,"jetbrains.mps.baseLanguage.structure.WhileStatement"),label);
  }
 else   if (SNodeOperations.isInstanceOf(stmt,"jetbrains.mps.baseLanguage.structure.DoWhileStatement")) {
    return this.prepDoWhileStatement(SNodeOperations.cast(stmt,"jetbrains.mps.baseLanguage.structure.DoWhileStatement"),label);
  }
 else   if (SNodeOperations.isInstanceOf(stmt,"jetbrains.mps.baseLanguage.structure.ForStatement")) {
    return this.prepForStatement(SNodeOperations.cast(stmt,"jetbrains.mps.baseLanguage.structure.ForStatement"),label);
  }
 else   if (SNodeOperations.isInstanceOf(stmt,"jetbrains.mps.baseLanguage.structure.ForeachStatement")) {
    return this.prepForeachStatement(SNodeOperations.cast(stmt,"jetbrains.mps.baseLanguage.structure.ForeachStatement"),label);
  }
 else   if (SNodeOperations.isInstanceOf(stmt,"jetbrains.mps.baseLanguage.structure.IfStatement")) {
    return this.prepIfStatement(SNodeOperations.cast(stmt,"jetbrains.mps.baseLanguage.structure.IfStatement"),label);
  }
 else   if (SNodeOperations.isInstanceOf(stmt,"jetbrains.mps.baseLanguage.structure.SwitchStatement")) {
    return this.prepSwitchStatement(SNodeOperations.cast(stmt,"jetbrains.mps.baseLanguage.structure.SwitchStatement"),label);
  }
 else   if (SNodeOperations.isInstanceOf(stmt,"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement")) {
    return this.prepLocalvariableDeclarationStatement(SNodeOperations.cast(stmt,"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement"),label);
  }
 else   if (SNodeOperations.isInstanceOf(stmt,"jetbrains.mps.baseLanguage.closures.structure.YieldStatement")) {
    return this.prepYieldStatement(SNodeOperations.cast(stmt,"jetbrains.mps.baseLanguage.closures.structure.YieldStatement"),label);
  }
 else   if (SNodeOperations.isInstanceOf(stmt,"jetbrains.mps.baseLanguage.structure.BreakStatement")) {
    this.prepBreakStatement(SNodeOperations.cast(stmt,"jetbrains.mps.baseLanguage.structure.BreakStatement"));
  }
 else   if (SNodeOperations.isInstanceOf(stmt,"jetbrains.mps.baseLanguage.structure.ContinueStatement")) {
    this.prepContinueStatement(SNodeOperations.cast(stmt,"jetbrains.mps.baseLanguage.structure.ContinueStatement"));
  }
 else   if (SNodeOperations.isInstanceOf(stmt,"jetbrains.mps.baseLanguage.structure.BlockStatement")) {
    return this.prepBlockStatement(SNodeOperations.cast(stmt,"jetbrains.mps.baseLanguage.structure.BlockStatement"),label);
  }
  return label;
}
