{
  setModal(true);
  myExceptionContainer.setVisible(false);
  myAnonymousRadio.addChangeListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent e){
      boolean enabled=!myAnonymousRadio.getModel().isSelected();
      myUsername.setEnabled(enabled);
      myPassword.setEnabled(enabled);
      myTestLoginButton.setEnabled(enabled);
    }
  }
);
  myTestLoginButton.setAction(new AbstractAction("Test Login"){
    @Override public void actionPerformed(    ActionEvent e){
      Poster poster=new Poster(myProject);
      Query query=createQuery();
      Response response=poster.test(query);
      if (response.isSuccess()) {
        Messages.showMessageDialog(myProject,response.getMessage(),"Test Login",Messages.getInformationIcon());
      }
 else {
        Messages.showErrorDialog(myProject,response.getMessage(),"Test Login Failed");
        LOG.warning("Submit failed: " + response.getMessage() + ":"+ response.getResponseString(),response.getThrowable());
      }
    }
  }
);
  Dimension size=DimensionService.getInstance().getSize(getDimensionServiceKey());
  if (size == null) {
    myPanel.setPreferredSize(new Dimension(750,550));
  }
  Point location=DimensionService.getInstance().getLocation(getDimensionServiceKey(),myProject);
  if (location == null) {
    setLocation(200,200);
  }
  setOKButtonText("Send");
  setOKButtonMnemonic('C');
  init();
}
