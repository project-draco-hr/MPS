{
  DebugInfoBuilder debugInfoBuilder=new DebugInfoBuilder();
  for (  TextGenerationResult result : results) {
    if (TextGen.NO_TEXTGEN != result.getResult()) {
      debugInfoBuilder.fillDebugInfo(getFileName(result.getRoot()),result.getPositions(),result.getScopePositions(),result.getUnitPositions(),sourceStatus.getOriginalInputModel());
    }
  }
  DebugInfo generatedDebugInfo=debugInfoBuilder.getDebugInfo();
  DebugInfo cachedDebugInfo=TraceInfoCache.getInstance().getLastGeneratedDebugInfo(sourceStatus.getOriginalInputModel());
  if (cachedDebugInfo != null) {
    List<SNodePointer> unchangedRoots=new ArrayList<SNodePointer>();
    String inputModelUid=sourceStatus.getOriginalInputModel().getSModelReference().toString();
    for (    GenerationRootDependencies dependency : unchangedDependencies) {
      String rootId=dependency.getRootId();
      if (rootId == null)       continue;
      unchangedRoots.add(new SNodePointer(inputModelUid,rootId));
    }
    DebugInfoBuilder.completeDebugInfoFromCache(cachedDebugInfo,generatedDebugInfo,unchangedRoots);
  }
  sourceStatus.setDebugInfo(generatedDebugInfo);
}
