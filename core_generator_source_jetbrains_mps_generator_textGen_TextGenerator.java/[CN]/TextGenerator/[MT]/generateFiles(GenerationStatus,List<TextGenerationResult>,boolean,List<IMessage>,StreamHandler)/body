{
  for (  TextGenerationResult result : results) {
    SNode outputRootNode=result.getRoot();
    String name=getFileName(outputRootNode);
    if (name == null) {
      Message m=new Message(MessageKind.ERROR,"Can't create file with no name. Root node [" + outputRootNode.getSNodeId() + "] in model "+ outputRootNode.getModel().getSModelFqName());
      m.setHintObject(new SNodePointer(outputRootNode));
      errors.add(m);
      continue;
    }
    Object contents=result.getResult();
    if (contents instanceof String) {
      streamHandler.saveStream(name,(String)contents,false);
    }
 else {
      streamHandler.saveStream(name,(byte[])contents,false);
    }
  }
  ModelDependencies modelDep=null;
  GenerationDependencies dependencies=status.getDependencies();
  if (dependencies != null) {
    List<GenerationRootDependencies> unchangedDependencies=dependencies.getUnchangedDependencies();
    SModelDescriptor originalInputModel=status.getOriginalInputModel();
    for (    GenerationRootDependencies rdep : unchangedDependencies) {
      for (      String filename : rdep.getFiles()) {
        if (streamHandler.touch(filename,false)) {
          if (modelDep == null) {
            modelDep=BLDependenciesCache.getInstance().get(originalInputModel);
          }
          if (modelDep != null) {
            RootDependencies root=modelDep.getDependency(filename);
            if (root != null) {
              status.getBLDependencies().replaceRoot(root);
            }
          }
        }
      }
    }
    if (unchangedDependencies.isEmpty() || !generateDebugInfo) {
      return;
    }
    DebugInfo generatedDebugInfo=status.getDebugInfo();
    if (generatedDebugInfo == null) {
      generatedDebugInfo=new DebugInfoBuilder().getDebugInfo();
      status.setDebugInfo(generatedDebugInfo);
    }
    DebugInfo cachedDebugInfo=TraceInfoCache.getInstance().getLastGeneratedDebugInfo(status.getOriginalInputModel());
    if (cachedDebugInfo != null) {
      List<SNodePointer> unchangedRoots=new ArrayList<SNodePointer>();
      String inputModelUid=status.getOriginalInputModel().getSModelReference().toString();
      for (      GenerationRootDependencies dependency : dependencies.getUnchangedDependencies()) {
        String rootId=dependency.getRootId();
        if (rootId == null)         continue;
        unchangedRoots.add(new SNodePointer(inputModelUid,rootId));
      }
      DebugInfoBuilder.completeDebugInfoFromCache(cachedDebugInfo,generatedDebugInfo,unchangedRoots);
    }
  }
}
