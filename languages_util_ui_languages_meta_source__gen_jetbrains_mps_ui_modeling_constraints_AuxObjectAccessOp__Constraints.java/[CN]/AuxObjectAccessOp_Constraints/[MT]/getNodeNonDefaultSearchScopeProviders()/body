{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("template",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      SNode uiof=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.ui.modeling.structure.UIObjectFactory",false,false);
      SNode uiot=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.ui.modeling.structure.UIObjectTemplate",false,false);
      SNode uio=((uiof != null) ? SLinkOperations.getTarget(SLinkOperations.getTarget(uiof,"context",true),"uiObject",false) : SLinkOperations.getTarget(uiot,"uiObject",false));
      return SLinkOperations.getTargets(SLinkOperations.getTarget(SNodeOperations.as(HasTemplate_Behavior.call_findTemplate_3939571372331676060(uio,_context.getModel(),operationContext.getScope()),"jetbrains.mps.ui.modeling.structure.UIObjectTemplate"),"auxillary",true),"auxTemplate",true);
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:3cad8b0f-ef3c-442c-8c6f-1ab422f65805(jetbrains.mps.ui.modeling.constraints)","1412244996131808159");
    }
  }
);
  return result;
}
