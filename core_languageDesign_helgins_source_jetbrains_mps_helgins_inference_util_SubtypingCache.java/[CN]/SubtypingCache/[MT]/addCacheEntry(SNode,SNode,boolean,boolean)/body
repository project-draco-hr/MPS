{
  if (!mySubtypingCached) {
    return;
  }
  Map<CacheNodeHandler,Map<CacheNodeHandler,Boolean>> cache=myCache;
  CacheNodeHandler subtypeHandler=new CacheNodeHandler(subtype);
  Map<CacheNodeHandler,Boolean> supertypes=cache.get(subtypeHandler);
  if (supertypes == null) {
    supertypes=new HashMap<CacheNodeHandler,Boolean>();
    cache.put(subtypeHandler,supertypes);
  }
  supertypes.put(new CacheNodeHandler(supertype),answer);
  if (isWeak) {
    cache=myCacheWeak;
    CacheNodeHandler subtypeHandlerWeak=new CacheNodeHandler(subtype);
    Map<CacheNodeHandler,Boolean> supertypesWeak=cache.get(subtypeHandlerWeak);
    if (supertypesWeak == null) {
      supertypesWeak=new HashMap<CacheNodeHandler,Boolean>();
      cache.put(subtypeHandlerWeak,supertypesWeak);
    }
  }
}
