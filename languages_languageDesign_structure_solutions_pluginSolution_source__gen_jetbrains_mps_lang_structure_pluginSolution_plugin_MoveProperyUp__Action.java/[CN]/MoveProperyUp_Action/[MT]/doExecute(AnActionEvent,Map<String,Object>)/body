{
  try {
    final Wrappers._T<SNode> concept=new Wrappers._T<SNode>();
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        concept.value=SNodeOperations.getAncestor(((SNode)MapSequence.fromMap(_params).get("target")),"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration",false,false);
      }
    }
);
    if ((concept.value == null)) {
      return;
    }
    final SNode targetConcept=MoveUpDialog.getConcept(((MPSProject)MapSequence.fromMap(_params).get("project")).getProject(),((SNode)MapSequence.fromMap(_params).get("target")),"property");
    if (targetConcept == null) {
      return;
    }
    ModelAccess.instance().runReadInEDT(new Runnable(){
      public void run(){
        if (!(jetbrains.mps.util.SNodeOperations.isRegistered(((SNode)((SNode)MapSequence.fromMap(_params).get("target"))))) || jetbrains.mps.util.SNodeOperations.isDisposed(((SNode)((SNode)MapSequence.fromMap(_params).get("target"))))) {
          return;
        }
        if (!(jetbrains.mps.util.SNodeOperations.isRegistered(((SNode)targetConcept))) || jetbrains.mps.util.SNodeOperations.isDisposed(((SNode)targetConcept))) {
          return;
        }
        RefactoringAccess.getInstance().getRefactoringFacade().execute(RefactoringContext.createRefactoringContextByName("jetbrains.mps.lang.structure.refactorings.MovePropertyUp",Arrays.asList("targetConcept"),Arrays.asList(targetConcept),((SNode)MapSequence.fromMap(_params).get("target")),((MPSProject)MapSequence.fromMap(_params).get("project"))));
      }
    }
);
  }
 catch (  Throwable t) {
    if (log.isErrorEnabled()) {
      log.error("User's action execute method failed. Action:" + "MoveProperyUp",t);
    }
  }
}
