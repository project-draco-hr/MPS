{
  boolean insertion=myContextMethod != null && myContextMethod.getParent() == myBehavior;
  List<StratergyAddMethodDialog.ContainerStrategy.MethodAddition> methods=new ArrayList<StratergyAddMethodDialog.ContainerStrategy.MethodAddition>();
  for (  SNode methodNode : baseMethods) {
    SNode behaviorNode=myBehavior.getNode();
    ConceptMethodDeclaration method=(ConceptMethodDeclaration)ResolveUtil.processMethodToImplement(behaviorNode,methodNode).getAdapter();
    methods.add(new StratergyAddMethodDialog.ContainerStrategy.MethodAddition(((BaseMethodDeclaration)methodNode.getAdapter()),method));
    method.setIsAbstract(false);
    method.setBody(StatementList.newInstance(myBehavior.getModel()));
    method.setOverriddenMethod((ConceptMethodDeclaration)methodNode.getAdapter());
    if (insertion) {
      myBehavior.insertMethod(myContextMethod,method);
    }
 else {
      myBehavior.addMethod(method);
    }
  }
  return (List<StratergyAddMethodDialog.ContainerStrategy.MethodAddition>)methods;
}
