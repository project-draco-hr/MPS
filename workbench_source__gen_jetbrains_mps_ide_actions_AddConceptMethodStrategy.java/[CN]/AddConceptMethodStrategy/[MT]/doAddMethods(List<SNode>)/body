{
  boolean insertion=this.myContextMethod != null && this.myContextMethod.getParent() == this.myBehavior;
  List<StratergyAddMethodDialog.ContainerStrategy.MethodAddition> methods=new ArrayList<StratergyAddMethodDialog.ContainerStrategy.MethodAddition>();
  for (  SNode methodNode : baseMethods) {
    SNode behaviorNode=this.myBehavior.getNode();
    ConceptMethodDeclaration method=(ConceptMethodDeclaration)ResolveUtil.processMethodToImplement(behaviorNode,methodNode).getAdapter();
    methods.add(new StratergyAddMethodDialog.ContainerStrategy.MethodAddition(((BaseMethodDeclaration)methodNode.getAdapter()),method));
    method.setIsAbstract(false);
    method.setBody(StatementList.newInstance(this.myBehavior.getModel()));
    method.setOverriddenMethod((ConceptMethodDeclaration)methodNode.getAdapter());
    if (insertion) {
      this.myBehavior.insertMethod(this.myContextMethod,method);
    }
 else {
      this.myBehavior.addMethod(method);
    }
  }
  return (List<StratergyAddMethodDialog.ContainerStrategy.MethodAddition>)methods;
}
