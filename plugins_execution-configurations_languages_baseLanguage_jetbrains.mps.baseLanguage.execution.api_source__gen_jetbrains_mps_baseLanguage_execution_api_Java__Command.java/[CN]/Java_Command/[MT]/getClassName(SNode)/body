{
  SModel model=SNodeOperations.getModel(node);
  if (model == null) {
    return null;
  }
  if (!(TraceInfo.hasTrace(model))) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("No trace.info found for model " + model + ". Check that model is generated.");
    }
    return null;
  }
 else {
    Iterable<String> unitNames=TraceInfo.unitNames(node);
    if (Sequence.fromIterable(unitNames).isEmpty()) {
      if (LOG.isEnabledFor(Level.ERROR)) {
        LOG.error("No unitName found for " + node + " in trace.info. Check that model is generated.");
      }
      return null;
    }
 else     if (Sequence.fromIterable(unitNames).count() == 1) {
      return Sequence.fromIterable(unitNames).first();
    }
 else {
      return TraceInfo.unitNameWithPosition(node,new Condition<TraceablePositionInfo>(){
        public boolean met(        TraceablePositionInfo position){
          return (eq_kk96hj_a0a0a0a0a1a0a0b0a2a62(position.getConcept(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbbebabf0aL,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration"))) && (eq_kk96hj_a0a0a0a0a1a0a0b0a2a62_0(position.getPropertyString(),((String)BHReflection.invoke(_quotation_createNode_yvpt_a0a0a0a0a0b0a0a1a0c0b(),SMethodTrimmedId.create("getTraceableProperty",null,"4pl5GY7LKmH")))));
        }
      }
);
    }
  }
}
