{
  final Wrappers._T<String> className=new Wrappers._T<String>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      SModel model=SNodeOperations.getModel(node);
      DebugInfo debugInfo=TraceInfoCache.getInstance().get(model.getModelDescriptor());
      if (debugInfo == null) {
        if (log.isErrorEnabled()) {
          log.error("No trace.info found for model " + model + ". Check that model is generated.");
        }
        className.value=null;
      }
 else {
        List<UnitPositionInfo> unitForNode=debugInfo.getUnitsForNode(node.getId());
        if (ListSequence.fromList(unitForNode).isEmpty()) {
          if (log.isErrorEnabled()) {
            log.error("No unitName found for " + node + " in trace.info. Check that model is generated.");
          }
          className.value=null;
        }
 else         if ((int)ListSequence.fromList(unitForNode).count() == 1) {
          className.value=ListSequence.fromList(unitForNode).first().getUnitName();
        }
 else {
          DebugInfoRoot infoRoot=debugInfo.getRootInfo(SNodeOperations.getContainingRoot(node).getId());
          for (          final TraceablePositionInfo position : SetSequence.fromSet(infoRoot.getPositions())) {
            if (eq_kk96hj_a0a0b0a1a0c0a0a0a0b0c(position.getConceptFqName(),"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration")) {
              if (eq_kk96hj_a0a0a0b0a1a0c0a0a0a0b0c(position.getPropertyString(),((String)BehaviorManager.getInstance().invoke(Object.class,new Java_Command.QuotationClass_kk96hj_a1a0a0a0a0a1a0b0a2a0a0a0a1a2().createNode(),"virtual_getTraceableProperty_5067982036267369901",new Class[]{SNode.class})))) {
                UnitPositionInfo unit=ListSequence.fromList(unitForNode).findFirst(new IWhereFilter<UnitPositionInfo>(){
                  public boolean accept(                  UnitPositionInfo it){
                    return it.isPositionInside(position.getFileName(),position.getStartLine());
                  }
                }
);
                if (unit != null) {
                  className.value=unit.getUnitName();
                  break;
                }
              }
            }
          }
        }
      }
    }
  }
);
  return className.value;
}
