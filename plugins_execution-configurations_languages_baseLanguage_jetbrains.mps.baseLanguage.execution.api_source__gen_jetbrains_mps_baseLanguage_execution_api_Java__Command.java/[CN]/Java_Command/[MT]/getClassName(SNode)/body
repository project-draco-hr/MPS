{
  SModel model=SNodeOperations.getModel(node);
  DebugInfo debugInfo=TraceInfoCache.getInstance().get(model);
  if (debugInfo == null) {
    if (LOG.isEnabledFor(Priority.ERROR)) {
      LOG.error("No trace.info found for model " + model + ". Check that model is generated.");
    }
    return null;
  }
 else {
    Iterable<String> unitNames=(Iterable<String>)TraceDown.unitNames(node);
    if (Sequence.fromIterable(unitNames).isEmpty()) {
      if (LOG.isEnabledFor(Priority.ERROR)) {
        LOG.error("No unitName found for " + node + " in trace.info. Check that model is generated.");
      }
      return null;
    }
 else     if ((int)Sequence.fromIterable(unitNames).count() == 1) {
      return Sequence.fromIterable(unitNames).first();
    }
 else {
      return TraceDown.unitNameWithPosition(node,new _FunctionTypes._return_P1_E0<Boolean,TraceablePositionInfo>(){
        public Boolean invoke(        TraceablePositionInfo position){
          return (eq_kk96hj_a0a0a0a0a1a0a0b0a2a22(position.getConceptFqName(),"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration")) && (eq_kk96hj_a0a0a0a0a1a0a0b0a2a22_0(position.getPropertyString(),BehaviorReflection.invokeVirtual(String.class,_quotation_createNode_yvpt_a0a0a0a1a0a0b0a2a1(),"virtual_getTraceableProperty_5067982036267369901",new Object[]{})));
        }
      }
);
    }
  }
}
