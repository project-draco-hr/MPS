{
  Map<SPropertyId,PropertyConstraintsDescriptor> properties=new HashMap<SPropertyId,PropertyConstraintsDescriptor>();
  properties.put(MetaIdFactory.propId(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l),new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l),this){
    @Override public boolean hasOwnGetter(){
      return true;
    }
    @Override public Object getValue(    SNode node){
      String propertyName="name";
      return SPropertyOperations.getString(SLinkOperations.getTarget(node,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1170345865475l,1170346070688l,"classifier")),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")) + "$anonymous";
    }
    @Override public boolean hasOwnValidator(){
      return true;
    }
    @Override public boolean validateValue(    SNode node,    String propertyValue){
      String propertyName="name";
      return (SPropertyOperations.getString(propertyValue)).matches("[a-zA-Z[_]][a-zA-Z0-9$.[_]]*");
    }
  }
);
  return properties;
}
