{
  super(ProjectHelper.toMPSProject(project));
  myProjectPane=projectPane;
  myHighlighter=new ProjectPaneTreeHighlighter(this,ProjectHelper.toMPSProject(project));
  myHighlighter.init();
  myStructureUpdate=new TreeStructureUpdate(this);
  myStructureUpdate.init();
  addKeyListener(myKeyListener);
  DragSource.getDefaultDragSource().createDefaultDragGestureRecognizer(this,DnDConstants.ACTION_MOVE,new MyDragGestureListener());
  new DropTarget(this,new ProjectPaneDnDListener(this,new MyTransferable(null).getTransferDataFlavors()[0]));
  MessageBusConnection connection=project.getMessageBus().connect();
  Disposer.register(this,connection);
  connection.subscribe(DumbService.DUMB_MODE,new DumbModeListener(){
    @Override public void enteredDumbMode(){
    }
    @Override public void exitDumbMode(){
      myHighlighter.dumbUpdate();
    }
  }
);
}
