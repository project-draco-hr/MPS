{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a,conceptFqName)) {
case 0:
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.AbstractNodeAssert",new String[]{"jetbrains.mps.baseLanguage.structure.Statement"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Statement"});
case 1:
  return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.ActionReference",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 2:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.AnonymousCellAnnotation",new String[]{"jetbrains.mps.lang.test.structure.INodeAnnotattion","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"jetbrains.mps.lang.test.structure.INodeAnnotattion"},new String[]{"jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.NodeAttribute"});
case 3:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.AssertMatch",new String[]{"jetbrains.mps.baseLanguage.structure.Statement"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Statement"});
case 4:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.BootstrapActionReference",new String[]{"jetbrains.mps.lang.test.structure.ActionReference"},new String[]{"jetbrains.mps.lang.test.structure.ActionReference"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 5:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.CheckDataFlowOperation",new String[]{"jetbrains.mps.lang.test.structure.NodeOperation"},new String[]{"jetbrains.mps.lang.test.structure.NodeOperation"},new String[]{"jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod","jetbrains.mps.lang.core.structure.BaseConcept"});
case 6:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.CheckNodeDataflow",new String[]{"jetbrains.mps.lang.test.structure.AbstractNodeAssert"},new String[]{"jetbrains.mps.lang.test.structure.AbstractNodeAssert"},new String[]{"jetbrains.mps.baseLanguage.structure.Statement"});
case 7:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.CheckNodeForErrors",new String[]{"jetbrains.mps.lang.test.structure.AbstractNodeAssert"},new String[]{"jetbrains.mps.lang.test.structure.AbstractNodeAssert"},new String[]{"jetbrains.mps.baseLanguage.structure.Statement"});
case 8:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.EditorComponentExpression",new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Expression"});
case 9:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.EditorExpression",new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Expression"});
case 10:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.EditorOperation",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.structure.IOperation"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.IOperation","jetbrains.mps.lang.core.structure.BaseConcept"});
case 11:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.EditorTestCase",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod","jetbrains.mps.baseLanguage.unitTest.structure.ITestCase"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.unitTest.structure.ITestCase","jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod","jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 12:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.ExpressionContainer",new String[]{"jetbrains.mps.baseLanguage.structure.Statement"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Statement"});
case 13:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.INodeAnnotattion",new String[]{"jetbrains.mps.lang.core.structure.NodeAttribute"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.NodeAttribute"});
case 14:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.InvokeActionStatement",new String[]{"jetbrains.mps.baseLanguage.structure.Statement"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Statement"});
case 15:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.InvokeIntentionStatement",new String[]{"jetbrains.mps.baseLanguage.structure.Statement"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Statement"});
case 16:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.MPSActionReference",new String[]{"jetbrains.mps.lang.test.structure.ActionReference"},new String[]{"jetbrains.mps.lang.test.structure.ActionReference"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 17:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.MockAnnotation",new String[]{"jetbrains.mps.lang.core.structure.NodeAttribute"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.NodeAttribute"});
case 18:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.ModelExpression",new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Expression"});
case 19:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.NodeErrorPropety",new String[]{"jetbrains.mps.lang.test.structure.NodeProperty"},new String[]{"jetbrains.mps.lang.test.structure.NodeProperty"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 20:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.NodeOperation",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod","jetbrains.mps.lang.core.structure.BaseConcept"});
case 21:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.NodeOperationsContainer",new String[]{"jetbrains.mps.lang.test.structure.INodeAnnotattion"},new String[]{"jetbrains.mps.lang.test.structure.INodeAnnotattion"},new String[]{"jetbrains.mps.lang.core.structure.NodeAttribute"});
case 22:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.NodePropertiesContainer",new String[]{"jetbrains.mps.lang.core.structure.NodeAttribute"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.NodeAttribute"});
case 23:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.NodeProperty",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 24:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.NodeReachable",new String[]{"jetbrains.mps.lang.test.structure.NodeProperty"},new String[]{"jetbrains.mps.lang.test.structure.NodeProperty"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 25:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.NodeTypeProperty",new String[]{"jetbrains.mps.lang.test.structure.NodeProperty"},new String[]{"jetbrains.mps.lang.test.structure.NodeProperty"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 26:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.NodeTypeSetProperty",new String[]{"jetbrains.mps.lang.test.structure.NodeProperty"},new String[]{"jetbrains.mps.lang.test.structure.NodeProperty"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 27:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.NodeUnreachable",new String[]{"jetbrains.mps.lang.test.structure.NodeProperty"},new String[]{"jetbrains.mps.lang.test.structure.NodeProperty"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 28:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.NodeWarningProperty",new String[]{"jetbrains.mps.lang.test.structure.NodeProperty"},new String[]{"jetbrains.mps.lang.test.structure.NodeProperty"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 29:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.NodesTestCase",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.unitTest.structure.ITestCase","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.baseLanguage.classifiers.structure.IClassifier"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.classifiers.structure.IClassifier","jetbrains.mps.baseLanguage.unitTest.structure.ITestCase","jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 30:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.NodesTestMethod",new String[]{"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration","jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod","jetbrains.mps.lang.core.structure.INamedConcept"});
case 31:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.PressKeyStatement",new String[]{"jetbrains.mps.baseLanguage.structure.Statement"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Statement"});
case 32:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.ProjectExpression",new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Expression"});
case 33:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.SimpleNodeTest",new String[]{"jetbrains.mps.lang.test.structure.NodesTestMethod"},new String[]{"jetbrains.mps.lang.test.structure.NodesTestMethod"},new String[]{"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration","jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod","jetbrains.mps.lang.core.structure.INamedConcept"});
case 34:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.SwitchToInspector",new String[]{"jetbrains.mps.baseLanguage.structure.Statement"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Statement"});
case 35:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.TestInfo",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 36:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.TestNode",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 37:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.TestNodeAnnotation",new String[]{"jetbrains.mps.lang.test.structure.INodeAnnotattion","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"jetbrains.mps.lang.test.structure.INodeAnnotattion"},new String[]{"jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.NodeAttribute"});
case 38:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.TestNodeReference",new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Expression"});
case 39:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.TypeKeyStatement",new String[]{"jetbrains.mps.baseLanguage.structure.Statement"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Statement"});
case 40:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.TypesCheckOperation",new String[]{"jetbrains.mps.lang.test.structure.NodeOperation"},new String[]{"jetbrains.mps.lang.test.structure.NodeOperation"},new String[]{"jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod","jetbrains.mps.lang.core.structure.BaseConcept"});
case 41:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.VariableInialized",new String[]{"jetbrains.mps.lang.test.structure.NodeProperty"},new String[]{"jetbrains.mps.lang.test.structure.NodeProperty"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 42:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.test.structure.VariableLive",new String[]{"jetbrains.mps.lang.test.structure.NodeProperty"},new String[]{"jetbrains.mps.lang.test.structure.NodeProperty"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
default :
return null;
}
}
