{
  Iterable<String> scriptNames=ListSequence.fromList(SModelOperations.roots(SNodeOperations.getModel(library),MetaAdapterFactory.getConcept(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x2d523c5e4cc45746L,"jetbrains.mps.samples.Kaja.structure.Script"))).select(new ISelector<SNode,String>(){
    public String select(    SNode it){
      return SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
    }
  }
);
  Iterable<String> libraryNames=ListSequence.fromList(SModelOperations.roots(SNodeOperations.getModel(library),MetaAdapterFactory.getConcept(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x3cfcda239f19d316L,"jetbrains.mps.samples.Kaja.structure.Library"))).select(new ISelector<SNode,String>(){
    public String select(    SNode it){
      return SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
    }
  }
);
  List<String> allNames=ListSequence.fromListWithValues(new ArrayList<String>(),scriptNames);
  ListSequence.fromList(allNames).addSequence(Sequence.fromIterable(libraryNames));
  if (ListSequence.fromList(allNames).where(new IWhereFilter<String>(){
    public boolean accept(    String it){
      return it != null && it.equals(SPropertyOperations.getString(library,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")));
    }
  }
).count() > 1) {
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(library,"Script and Library names must be unique","r:af5f8eb9-49c0-4279-87d3-3c80b1a56988(jetbrains.mps.samples.Kaja.typesystem)","1904811872814168242",null,errorTarget);
    }
  }
}
