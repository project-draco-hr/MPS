{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(6991546026468590289l,-9160623158338601007l),6619018968335599081l,6619018968336102388l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(6991546026468590289l,-9160623158338601007l),6619018968335599081l,6619018968336102388l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_s0k26e_a0a0a0a0a1a0b0a1a1;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
{
            List<SNode> creationBlocks=ListSequence.fromList(new ArrayList<SNode>());
            ListSequence.fromList(creationBlocks).addSequence(ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(SNodeOperations.getParent(_context.getEnclosingNode()),MetaAdapterFactory.getConcept(new UUID(6991546026468590289l,-9160623158338601007l),6306886970791033847l,"jetbrains.mps.lang.editor.diagram.structure.CellModel_Diagram")),MetaAdapterFactory.getContainmentLink(new UUID(6991546026468590289l,-9160623158338601007l),6306886970791033847l,8570854907290721333l,"elementsCreation"))));
            ListSequence.fromList(creationBlocks).addSequence(ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(SNodeOperations.getParent(_context.getEnclosingNode()),MetaAdapterFactory.getConcept(new UUID(6991546026468590289l,-9160623158338601007l),6306886970791033847l,"jetbrains.mps.lang.editor.diagram.structure.CellModel_Diagram")),MetaAdapterFactory.getContainmentLink(new UUID(6991546026468590289l,-9160623158338601007l),6306886970791033847l,939897302409114961l,"connectorCreation"))));
            return new SimpleScope(creationBlocks){
              @Nullable public String getReferenceText(              @NotNull SNode target){
                return target.getName();
              }
            }
;
          }
        }
      }
;
    }
  }
);
  return references;
}
