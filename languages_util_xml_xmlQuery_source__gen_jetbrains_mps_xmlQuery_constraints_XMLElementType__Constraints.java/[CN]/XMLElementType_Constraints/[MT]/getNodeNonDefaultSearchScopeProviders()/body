{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("complexType",new BaseNodeReferenceSearchScopeProvider(){
    public boolean hasPresentation(){
      return true;
    }
    public String getPresentation(    final IOperationContext operationContext,    final PresentationReferentConstraintContext _context){
      return SchemaUtil.complexTypePresentation(_context.getParameterNode());
    }
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      return new SubnodesSearchScope(SLinkOperations.getTarget(_context.getReferenceNode(),"schema",false));
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:e79b58b4-ea58-4c9d-b43b-c3a260addf6a(jetbrains.mps.xmlQuery.constraints)","4815471077468703818");
    }
  }
);
  result.put("schema",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
  }
);
  return result;
}
