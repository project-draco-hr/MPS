{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("classifier",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      List<SNode> classifiers=SModelOperations.getRootsIncludingImported(_context.getModel(),operationContext.getScope(),"jetbrains.mps.baseLanguage.classifiers.structure.IClassifier");
      classifiers=ListSequence.fromList(classifiers).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SNodeOperations.getConceptDeclaration(IClassifier_Behavior.call_createType_1213877527970(it)) == SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierType");
        }
      }
).toListSequence();
      return classifiers;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c8959036e(jetbrains.mps.baseLanguage.classifiers.constraints)","1216915259774");
    }
  }
);
  return result;
}
