{
  DevkitDescriptor descriptor=((DevkitDescriptor)myModuleDescriptor);
  SNode devkit=SNodeOperations.cast(myModule,"jetbrains.mps.build.mps.structure.BuildMps_DevKit");
  ListSequence.fromList(SLinkOperations.getTargets(devkit,"extends",true)).clear();
  ListSequence.fromList(SLinkOperations.getTargets(devkit,"exports",true)).clear();
  for (  ModuleReference module : descriptor.getExtendedDevkits()) {
    SNode resolved=SNodeOperations.as(visible.resolve(module.getModuleFqName(),module.getModuleId().toString()),"jetbrains.mps.build.mps.structure.BuildMps_DevKit");
    if (resolved == null) {
      report("cannot find devkit in dependencies: " + module.getModuleFqName(),myModule);
      continue;
    }
    SNode ul=SConceptOperations.createNewNode("jetbrains.mps.build.mps.structure.BuildMps_DevKitRef",null);
    SLinkOperations.setTarget(ul,"devkit",resolved,false);
    ListSequence.fromList(SLinkOperations.getTargets(devkit,"extends",true)).addElement(ul);
  }
  for (  ModuleReference module : descriptor.getExportedLanguages()) {
    SNode resolved=SNodeOperations.as(visible.resolve(module.getModuleFqName(),module.getModuleId().toString()),"jetbrains.mps.build.mps.structure.BuildMps_Language");
    if (resolved == null) {
      report("cannot find exported languages in dependencies: " + module.getModuleFqName(),myModule);
      continue;
    }
    SNode ul=SConceptOperations.createNewNode("jetbrains.mps.build.mps.structure.BuildMps_DevKitExportLanguage",null);
    SLinkOperations.setTarget(ul,"language",resolved,false);
    ListSequence.fromList(SLinkOperations.getTargets(devkit,"exports",true)).addElement(ul);
  }
  for (  ModuleReference module : descriptor.getExportedSolutions()) {
    SNode resolved=SNodeOperations.as(visible.resolve(module.getModuleFqName(),module.getModuleId().toString()),"jetbrains.mps.build.mps.structure.BuildMps_Solution");
    if (resolved == null) {
      report("cannot find exported solution in dependencies: " + module.getModuleFqName(),myModule);
      continue;
    }
    SNode ul=SConceptOperations.createNewNode("jetbrains.mps.build.mps.structure.BuildMps_DevKitExportSolution",null);
    SLinkOperations.setTarget(ul,"solution",resolved,false);
    ListSequence.fromList(SLinkOperations.getTargets(devkit,"exports",true)).addElement(ul);
  }
}
