{
  scheduleRefUpdate(new Runnable(){
    @Override public void run(){
      SNodeReference source=getSource();
      SNode sourceNode=source.resolve(MPSModuleRepository.getInstance());
      SNodePointer oldNode=new SNodePointer(getModelReference(),getNodeId());
      SNodePointer newNode=JavaForeignIdBuilder.computeNodePtr(element).toSNodeReference();
      SReference newRef=StaticReference.create(getRole(),sourceNode,newNode.getModelReference(),newNode.getNodeId());
      sourceNode.setReference(getRole(),newRef);
      if (!oldNode.getModelReference().equals(newNode.getModelReference())) {
        SModel model=sourceNode.getModel();
        SModelReference newTargetModel=newNode.getModelReference();
        ModelImports modelImports=new ModelImports(model);
        modelImports.addModelImport(newTargetModel);
        if (oldNode.getModelReference().resolve(MPSModuleRepository.getInstance()) == null) {
          modelImports.removeModelImport(oldNode.getModelReference());
        }
      }
    }
  }
);
  return MPSPsiJavaRef.this;
}
