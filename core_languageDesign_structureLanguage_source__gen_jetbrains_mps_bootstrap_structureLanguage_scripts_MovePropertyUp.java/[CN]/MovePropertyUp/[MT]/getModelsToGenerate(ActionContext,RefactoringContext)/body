{
{
    Map<IModule,List<SModel>> result=new HashMap<IModule,List<SModel>>();
    SModel model=actionContext.getNode().getModel();
    SModel targetModel=SNodeOperations.getModel(((SNode)refactoringContext.getParameter("targetConcept")));
    Language language=Language.getLanguageFor(model.getModelDescriptor());
    Language targetLanguage=Language.getLanguageFor(targetModel.getModelDescriptor());
    if (language != null) {
      List<SModel> aspectList=SequenceOperations.toList(SequenceOperations.select(((List<SModelDescriptor>)new ArrayList<SModelDescriptor>(language.getAspectModelDescriptors())),new zSelector7(MovePropertyUp.this,null)));
      result.put(language,aspectList);
    }
    if (targetLanguage != null && targetLanguage != language) {
      List<SModel> aspectList=SequenceOperations.toList(SequenceOperations.select(((List<SModelDescriptor>)new ArrayList<SModelDescriptor>(targetLanguage.getAspectModelDescriptors())),new zSelector8(MovePropertyUp.this,null)));
      result.put(targetLanguage,aspectList);
    }
    return result;
  }
}
