{
synchronized (myConcepts) {
    if (!myConcepts.containsKey(id)) {
      String langName=NameUtil.namespaceFromConceptFQName(id);
      IModule module=MPSModuleRepository.getInstance().getModuleByFqName(langName);
      if (!(module instanceof Language)) {
        LOG.error("Can't find language for concept " + id,new Throwable());
      }
 else {
        Language lang=(Language)module;
        SModel strucModel=lang.getStructureModelDescriptor().getSModel();
        for (        SNode root : strucModel.getRootNodes()) {
          myConcepts.put(id,new SConceptNodeAdapter(langName + "." + root.getProperty(SNodeUtil.property_INamedConcept_name)));
        }
        SConcept concept=myConcepts.get(id);
        if (concept == null) {
          LOG.error("Creating a concept descriptor for a concept not yet loaded " + id,new Throwable());
        }
      }
      myConcepts.put(id,new SConceptNodeAdapter(id));
    }
    return myConcepts.get(id);
  }
}
