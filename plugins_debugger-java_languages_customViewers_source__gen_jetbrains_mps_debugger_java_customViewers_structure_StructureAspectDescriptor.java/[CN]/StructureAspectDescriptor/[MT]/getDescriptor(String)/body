{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.debugger.java.customViewers.structure.CanWrapHighLevelValue_ConceptFunction","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.debugger.java.customViewers.structure.CustomWatchable","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"iconPath"},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.debugger.java.customViewers.structure.CustomWatchablesContainer","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{"watchable"},new boolean[]{true},false,false,"custom watchables container","","");
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.debugger.java.customViewers.structure.GetHighLevelValuePresentation_ConceptFunction","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.debugger.java.customViewers.structure.GetHighLevelWatchablesBlock_ConceptFunction","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.debugger.java.customViewers.structure.HighLevelCustomViewer","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{"valueType","canWrap","getPresentation","getWatchables"},new boolean[]{false,false,false,false},false,false,"custom viewer","","");
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.debugger.java.customViewers.structure.HighLevelValue_ConceptFunctionParameter","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{},new String[]{"valueProxyType"},new boolean[]{false},false,false,"value","","");
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.debugger.java.customViewers.structure.HighLevelWatchableCreator","jetbrains.mps.baseLanguage.structure.AbstractCreator",false,new String[]{"jetbrains.mps.baseLanguage.structure.AbstractCreator"},new String[]{},new String[]{"watchable"},new String[]{"value"},new boolean[]{false},false,false,"watchable","","");
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.debugger.java.customViewers.structure.ToProcessMethod","jetbrains.mps.lang.core.structure.NodeAttribute",false,new String[]{"jetbrains.mps.lang.core.structure.NodeAttribute"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"to process method","","");
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.debugger.java.customViewers.structure.WatchableListType","jetbrains.mps.baseLanguage.structure.Type",false,new String[]{"jetbrains.mps.baseLanguage.structure.Type","jetbrains.mps.baseLanguage.structure.IGenericType"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"watchable list","","");
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.debugger.java.customViewers.structure.WatchableType","jetbrains.mps.baseLanguage.structure.Type",false,new String[]{"jetbrains.mps.baseLanguage.structure.Type"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"watchable","","");
case 11:
return new CompiledConceptDescriptor("jetbrains.mps.debugger.java.customViewers.structure.WatchablesListCreator","jetbrains.mps.baseLanguage.structure.AbstractCreator",false,new String[]{"jetbrains.mps.baseLanguage.structure.AbstractCreator"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"watchables array list","","");
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
