{
  List<T> resultList=ListSequence.fromList(new ArrayList<T>());
  for (  T element : Sequence.fromIterable(MapSequence.fromMap(myRoots).values()).where(new IWhereFilter<DebugInfoRoot>(){
    public boolean accept(    DebugInfoRoot it){
      return SetSequence.fromSet(it.getFileNames()).contains(file);
    }
  }
).translate(new ITranslator2<DebugInfoRoot,T>(){
    public Iterable<T> translate(    DebugInfoRoot it){
      return getAllPositionsForRoot.invoke(it);
    }
  }
)) {
    if (element.contains(file,line)) {
      ListSequence.fromList(resultList).addElement(element);
    }
  }
  return ListSequence.fromList(resultList).sort(new ISelector<T,Integer>(){
    public Integer select(    T it){
      return it.getStartLine();
    }
  }
,false).toListSequence();
}
