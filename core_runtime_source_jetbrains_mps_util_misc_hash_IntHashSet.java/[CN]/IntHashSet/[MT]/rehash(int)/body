{
  final int length=HashUtil.adjustTableLength((int)(capacity / loadFactor));
  this.capacity=capacity;
  if (length != table.length) {
    final Iterator<Entry> entries=new HashSetIterator<Entry>(){
      @Override public Entry next(){
        return nextEntry();
      }
    }
;
    allocateTable(length);
    final Entry[] table=this.table;
    final int shift=this.shift;
    final int mask=this.mask;
    while (entries.hasNext()) {
      final Entry e=entries.next();
      final int index=HashUtil.indexFor(e.key,length,shift,mask);
      e.hashNext=table[index];
      table[index]=e;
    }
  }
}
