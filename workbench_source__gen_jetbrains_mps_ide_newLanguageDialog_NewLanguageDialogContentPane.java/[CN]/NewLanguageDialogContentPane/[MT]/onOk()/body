{
  File dir=new File(myThis.getLanguagePath());
  if (!(dir.isAbsolute())) {
    myThis.getDialog().setErrorText("Path should be absolute");
    return;
  }
  if (dir.exists()) {
    myThis.getDialog().setErrorText("Language directory already exists");
    return;
  }
  if (myThis.getLanguageNamespace().length() == 0) {
    myThis.getDialog().setErrorText("Enter namespace");
    return;
  }
  if (MPSModuleRepository.getInstance().getModuleByUID(myThis.getLanguageNamespace()) != null) {
    myThis.getDialog().setErrorText("Language namespace already exists");
    return;
  }
  if (NameUtil.shortNameFromLongName(myThis.getLanguageNamespace()).length() == 0) {
    myThis.getDialog().setErrorText("Enter valid namespace");
    return;
  }
  if (dir.exists() && dir.list().length != 0) {
    myThis.getDialog().setErrorText("The selected folder is not empty. Please select an empty folder to create language");
    return;
  }
  myThis.getDialog().dispose();
  ProgressManager.getInstance().run(new Task.Modal(myThis.getProject().getComponent(Project.class),"Creating",false){
    public void run(    @NotNull() ProgressIndicator indicator){
      indicator.setIndeterminate(true);
      ModelAccess.instance().runWriteAction(new Runnable(){
        public void run(){
          myThis.createNewLanguage();
        }
      }
);
    }
  }
);
}
