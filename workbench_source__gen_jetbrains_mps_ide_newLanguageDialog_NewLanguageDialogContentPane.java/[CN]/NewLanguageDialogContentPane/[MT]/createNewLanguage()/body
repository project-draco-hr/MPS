{
  String descriptorFileName=myThis.getLanguageName();
  final File descriptorFile=new File(myThis.getLanguagePath(),descriptorFileName + MPSExtentions.DOT_LANGUAGE);
  File dir=descriptorFile.getParentFile();
  if (!(dir.exists())) {
    dir.mkdirs();
  }
  final Language language=Language.createLanguage(myThis.getLanguageNamespace(),new FileSystemFile(descriptorFile),myThis.getProject());
  LanguageDescriptor languageDescriptor=language.getModuleDescriptor();
  ModuleReference devkitRef=LanguageDesign_DevKit.MODULE_REFERENCE;
  languageDescriptor.getUsedDevkits().add(devkitRef);
  languageDescriptor.setCompileInMPS(myThis.getCompileInMPS());
  language.setLanguageDescriptor(languageDescriptor,true);
  language.save();
  myThis.getProject().addProjectLanguage(language);
  myThis.setResult(language);
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      VirtualFile file=VFileSystem.refreshAndGetFile(descriptorFile.getParentFile());
      VcsMigrationUtil.getHandler().addFilesToVcs(Collections.singletonList(file),false,true);
    }
  }
,ModalityState.NON_MODAL);
  return language;
}
