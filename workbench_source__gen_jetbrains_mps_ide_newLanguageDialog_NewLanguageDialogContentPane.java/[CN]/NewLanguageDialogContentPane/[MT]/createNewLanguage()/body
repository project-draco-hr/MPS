{
  String descriptorFileName=NameUtil.shortNameFromLongName(myThis.getLanguageNamespace());
  final File descriptorFile=new File(myThis.getLanguagePath(),descriptorFileName + MPSExtentions.DOT_LANGUAGE);
  File dir=descriptorFile.getParentFile();
  if (!(dir.exists())) {
    dir.mkdirs();
  }
  Language language=Language.createLanguage(myThis.getLanguageNamespace(),new FileSystemFile(descriptorFile),myThis.getProject());
  LanguageDescriptor languageDescriptor=language.getLanguageDescriptor();
  ModuleReference devkitRef=new ModuleReference(LanguageDesign_DevKit.MODULE_REFERENCE.toString());
  languageDescriptor.getUsedDevkits().add(devkitRef);
  languageDescriptor.setCompileInMPS(myThis.getCompileInMPS());
  LanguageAspect.STRUCTURE.createNew(language);
  LanguageAspect.EDITOR.createNew(language);
  LanguageAspect.CONSTRAINTS.createNew(language);
  LanguageAspect.TYPESYSTEM.createNew(language);
  language.setLanguageDescriptor(languageDescriptor);
  myThis.getProject().addProjectLanguage(language);
  language.save();
  myThis.setResult(language);
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      ApplicationLevelVcsManager.instance().addFileToVcs(VFileSystem.refreshAndGetFile(descriptorFile.getParentFile()),true);
    }
  }
,ModalityState.NON_MODAL);
}
