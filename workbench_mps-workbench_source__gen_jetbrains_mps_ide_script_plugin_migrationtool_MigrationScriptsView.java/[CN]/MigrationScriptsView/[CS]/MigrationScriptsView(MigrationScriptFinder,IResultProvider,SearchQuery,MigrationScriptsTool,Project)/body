{
  myProject=project;
  if (!(ThreadUtils.isEventDispatchThread())) {
    throw new IllegalStateException("Can't use this outside of EDT");
  }
  myFinder=finder;
  myFinder.addResultsListener(this);
  myQuery=query;
  myTool=tool;
  ViewOptions viewOptions=new ViewOptions();
  viewOptions.myCategories[0]=true;
  viewOptions.myShowSearchedNodes=false;
  viewOptions.myGroupSearchedNodes=false;
  viewOptions.mySearchedNodesButtonsVisible=false;
  myUsagesView=new UsagesView(project,viewOptions){
    public void close(){
      MigrationScriptsView.this.close();
    }
  }
;
  myUsagesView.setRunOptions(provider,query,new UsagesView.ButtonConfiguration(true,true,true),finder.getLastSearchResults());
  myMainPanel=new JPanel(new BorderLayout());
  myMainPanel.add(myUsagesView.getComponent(),BorderLayout.CENTER);
  myControlsPanel=new JPanel(new FlowLayout(FlowLayout.LEFT));
  myApplyButton=new JButton(new AbstractAction("Apply Migrations"){
    public void actionPerformed(    ActionEvent e){
      applyMigrations();
    }
  }
);
  myControlsPanel.add(myApplyButton);
  myStatusPanel=new JPanel(new FlowLayout(FlowLayout.CENTER,5,0));
  myControlsPanel.add(myStatusPanel);
  myMainPanel.add(myControlsPanel,BorderLayout.SOUTH);
  this.myIndicator=new InlineProgressIndicator(true,createTaskInfo());
  this.myController=new MigrationScriptsController(myFinder){
    public void runCommand(    final Runnable cmd){
      ModelAccess.instance().runCommandInEDT(new Runnable(){
        public void run(){
          cmd.run();
        }
      }
,getMPSProject());
    }
  }
;
}
