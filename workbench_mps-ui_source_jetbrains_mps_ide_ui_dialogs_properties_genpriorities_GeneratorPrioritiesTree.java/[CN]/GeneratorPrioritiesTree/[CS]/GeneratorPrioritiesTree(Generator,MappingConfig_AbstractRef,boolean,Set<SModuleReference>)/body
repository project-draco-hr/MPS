{
  myRootNode=new CheckedTreeNodeEx(null,"Generators",createRootIcon());
  final boolean isRight=!isLeft;
  ModelAccess.instance().runReadAction(new Runnable(){
    @Override public void run(){
      initTree(generator);
      if (isRight) {
        for (        SModuleReference ref : depGenerators) {
          SModule gen=ref.resolve(MPSModuleRepository.getInstance());
          if (gen instanceof Generator)           initTree((Generator)gen);
        }
      }
    }
  }
);
  setCheckedStateForRoot(myRootNode,mapping);
  myCheckboxTree=new CheckboxTree(getCheckboxTreeCellRenderer(),myRootNode,new CheckPolicy(true,true,false,true));
  myCheckboxTree.addFocusListener(new FocusListener(){
    @Override public void focusGained(    FocusEvent e){
      if (myCheckboxTree.getSelectionCount() == 0)       myCheckboxTree.setSelectionRow(0);
    }
    @Override public void focusLost(    FocusEvent e){
    }
  }
);
  myCheckboxTree.setRootVisible(isRight);
  expandAllRows(myCheckboxTree);
  checkChildren(myCheckboxTree);
  setCheckedUnder(myRootNode);
}
