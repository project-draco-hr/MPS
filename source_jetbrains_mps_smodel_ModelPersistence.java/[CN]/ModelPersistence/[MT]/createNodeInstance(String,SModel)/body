{
  try {
    Class nodeClass=Class.forName(type,true,ClassLoaderManager.getInstance().getClassLoader());
    Method method=nodeClass.getMethod("newInstance",SModel.class);
    return (SNode)method.invoke(nodeClass,model);
  }
 catch (  ClassNotFoundException e) {
    System.out.println("can't find class " + type);
    LOG.warning("Couldn't find class for node type " + type + " in model "+ model.getUID());
    if (type.endsWith(".ClassType") || type.endsWith(".InterfaceType")) {
      SModelRepository.getInstance().markChanged(model,true);
      return new ClassifierType(model);
    }
    return new UnknownSNode(model);
  }
catch (  NoSuchMethodException e) {
    LOG.error("Couldn't find method newInstance for node type " + type + " in model "+ model.getUID(),e);
  }
catch (  SecurityException e) {
    LOG.error(e);
  }
catch (  IllegalAccessException e) {
    LOG.error(e);
  }
catch (  IllegalArgumentException e) {
    LOG.error(e);
  }
catch (  InvocationTargetException e) {
    LOG.error(e);
  }
  return null;
}
