{
  String type=nodeElement.getAttributeValue(TYPE);
  SNode snode=createNodeInstance(type,smodel);
  if (snode == null) {
    String error="Error reading model " + smodel.getUID() + ": couldn't create instance of node id="+ nodeElement.getAttributeValue(ID);
    LOG.errorWithTrace(error);
    firePersisteneceError();
    return null;
  }
  String myOldId=nodeElement.getAttributeValue(ID);
  if (setID) {
    snode.setId(myOldId);
  }
  if (oldIdsToNodes != null) {
    oldIdsToNodes.put(myOldId,snode);
  }
  String cachedExtResolveInfo=nodeElement.getAttributeValue(EXT_RESOLVE_INFO);
  if (!ExternalResolver.isEmptyExtResolveInfo(cachedExtResolveInfo)) {
    smodel.cacheNodeExtResolveInfo(snode,cachedExtResolveInfo);
  }
  List properties=nodeElement.getChildren(PROPERTY);
  for (Iterator iterator=properties.iterator(); iterator.hasNext(); ) {
    Element propertyElement=(Element)iterator.next();
    String propertyName=propertyElement.getAttributeValue(NAME);
    String propertyValue=propertyElement.getAttributeValue(VALUE);
    if (propertyValue != null) {
      snode.setProperty(propertyName,propertyValue);
    }
  }
  List links=nodeElement.getChildren(LINK);
  for (Iterator iterator=links.iterator(); iterator.hasNext(); ) {
    Element linkElement=(Element)iterator.next();
    String role=linkElement.getAttributeValue(ROLE);
    String resolveInfo=linkElement.getAttributeValue(RESOLVE_INFO);
    String targetClassResolveInfo=linkElement.getAttributeValue(TARGET_CLASS_RESOLVE_INFO);
    String extResolveInfo=linkElement.getAttributeValue(EXT_RESOLVE_INFO);
    String targetNodeId=linkElement.getAttributeValue(TARGET_NODE_ID);
    referenceDescriptors.add(new ReferenceDescriptor(snode,role,targetNodeId,resolveInfo,targetClassResolveInfo,extResolveInfo));
  }
  List childNodes=nodeElement.getChildren(NODE);
  for (Iterator iterator=childNodes.iterator(); iterator.hasNext(); ) {
    Element childNodeElement=(Element)iterator.next();
    String role=childNodeElement.getAttributeValue(ROLE);
    SNode childNode=readNode(childNodeElement,smodel,referenceDescriptors,setID,oldIdsToNodes);
    if (childNode != null) {
      snode.addChild(role,childNode);
    }
 else {
      LOG.errorWithTrace("Error reading child node in node " + snode.getDebugText());
      firePersisteneceError();
    }
  }
  return snode;
}
