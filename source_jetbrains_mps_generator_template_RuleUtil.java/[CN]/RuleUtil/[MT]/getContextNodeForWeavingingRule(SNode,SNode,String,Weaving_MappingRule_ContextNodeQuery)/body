{
  if (aspectId != null) {
    try {
      String methodName="templateWeavingRule_Context_" + aspectId;
      Object[] args=new Object[]{inputNode,myGenerator};
      INodeBuilder nodeBuilder=(INodeBuilder)QueryMethod.invoke(methodName,args,ruleNode.getModel());
      if (nodeBuilder == null) {
        myGenerator.showErrorMessage(inputNode,null,ruleNode,"Query Method returned null");
        return null;
      }
      return nodeBuilder.getTargetNode();
    }
 catch (    Throwable t) {
      myGenerator.showErrorMessage(inputNode,null,ruleNode,t.getClass().getName());
      throw new RuntimeException(t);
    }
  }
  if (query != null) {
    String methodName=TemplateFunctionMethodName.weaving_MappingRule_ContextNodeQuery(query.getNode());
    Object[] args=new Object[]{inputNode,myGenerator};
    try {
      return (SNode)QueryMethodGenerated.invoke(methodName,args,query.getModel());
    }
 catch (    Exception e) {
      myGenerator.showErrorMessage(inputNode,null,ruleNode,"couldn't evaluate rule context query");
      LOG.error(e);
    }
  }
  return null;
}
