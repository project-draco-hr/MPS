{
  IClassPathItem item=ClassPathFactory.getInstance().createFromPath(location.getPath());
  if (item == null) {
    return;
  }
  new ASMModelLoader(item,model,false){
    @Override public SModelReference getModelReferenceFor(    String packageName){
      return StubHelper.uidForPackageInStubs(packageName);
    }
    @Override protected Visibility createVisibility(    ASMMethod m,    SModel model){
      if (m.isPublic() || m.isPrivate() || m.isProtected()) {
        return PublicVisibility.newInstance(model);
      }
      return null;
    }
    @Override protected Visibility createVisibility(    ASMField f,    SModel model){
      if (f.isPublic() || f.isPrivate() || f.isProtected()) {
        return PublicVisibility.newInstance(model);
      }
      return null;
    }
  }
.updateModel();
}
