{
  SNode transactional=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0xf9eb02612eL,"jetbrains.mps.lang.editor.structure.CellModel_Property")),null);
  SLinkOperations.setTarget(transactional,MetaAdapterFactory.getReferenceLink(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x10964446123L,0x10973779681L,"relationDeclaration"),SLinkOperations.getTarget(node,MetaAdapterFactory.getReferenceLink(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x11b35f4f515L,0x11b35f87187L,"property")));
  SLinkOperations.setTarget(node,MetaAdapterFactory.getReferenceLink(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x11b35f4f515L,0x11b35f87187L,"property"),null);
  SNodeOperations.detachNode(SLinkOperations.getTarget(node,MetaAdapterFactory.getContainmentLink(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x11b35f4f515L,0x11b35f85498L,"handlerBlock")));
  for (  SNode child : ListSequence.fromList(jetbrains.mps.util.SNodeOperations.getChildren(node))) {
    String role=child.getRoleInParent();
    node.removeChild(child);
    transactional.addChild(role,child);
  }
  for (  Map.Entry<String,String> propertyEntry : SetSequence.fromSet(jetbrains.mps.util.SNodeOperations.getProperties(node).entrySet())) {
    SNodeAccessUtil.setProperty(transactional,propertyEntry.getKey(),propertyEntry.getValue());
  }
  for (  SReference reference : Sequence.fromIterable(node.getReferences())) {
    transactional.setReference(reference.getRole(),reference);
  }
  SNodeOperations.replaceWithAnother(node,transactional);
}
