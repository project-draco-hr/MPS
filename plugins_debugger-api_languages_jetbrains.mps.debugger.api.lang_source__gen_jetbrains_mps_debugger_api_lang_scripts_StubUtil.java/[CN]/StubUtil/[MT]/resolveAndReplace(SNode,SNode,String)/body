{
  SReference reference=node.getReference(role);
  SNode provider=ListSequence.fromList(SNodeOperations.getAncestors(node,"jetbrains.mps.lang.core.structure.ScopeProvider",false)).findFirst(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return ScopeProvider_Behavior.call_getScope_3734116213129936182(SNodeOperations.cast(it,"jetbrains.mps.lang.core.structure.ScopeProvider"),concept,node) != null;
    }
  }
);
  Scope scope=ScopeProvider_Behavior.call_getScope_3734116213129936182(provider,concept,node);
  SNode candidate=scope.resolve(node,SLinkOperations.getResolveInfo(reference));
  if (candidate != null) {
    SModelReference oldModelReference=reference.getTargetSModelReference();
    SNodeOperations.getModel(node).deleteModelImport(oldModelReference);
    node.setReferent(role,candidate);
    StubRefUtil.addRequiredImports(SNodeOperations.getModel(node),candidate);
  }
 else {
    findAndReplace(node,role,new _FunctionTypes._return_P1_E0<String,SNode>(){
      public String invoke(      SNode candidate){
        return SPropertyOperations.getString(SNodeOperations.cast(candidate,"jetbrains.mps.lang.core.structure.IResolveInfo"),"resolveInfo");
      }
    }
,INamedConcept_Behavior.call_getFqName_1213877404258(concept));
  }
}
