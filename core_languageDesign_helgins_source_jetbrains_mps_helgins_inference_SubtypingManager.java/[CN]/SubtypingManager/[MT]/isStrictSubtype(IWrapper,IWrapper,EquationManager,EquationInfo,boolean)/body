{
  IWrapper subRepresentator=subtype;
  IWrapper superRepresentator=supertype;
  if (equationManager != null) {
    subRepresentator=equationManager.getRepresentatorWrapper(subtype);
    superRepresentator=equationManager.getRepresentatorWrapper(supertype);
  }
  if (superRepresentator instanceof NodeWrapper) {
    SNode node=superRepresentator.getNode();
    if (BaseAdapter.isInstance(node,JoinType.class)) {
      for (      SNode argument : node.getChildren(JoinType.ARGUMENT)) {
        if (isSubtype(subRepresentator,NodeWrapper.createWrapperFromNode(argument,equationManager),equationManager,errorInfo,isWeak)) {
          return true;
        }
      }
    }
  }
  if (subRepresentator instanceof NodeWrapper) {
    SNode node=subRepresentator.getNode();
    if (BaseAdapter.isInstance(node,MeetType.class)) {
      for (      SNode argument : node.getChildren(MeetType.ARGUMENT)) {
        if (isSubtype(NodeWrapper.createWrapperFromNode(argument,equationManager),supertype,equationManager,errorInfo,isWeak)) {
          return true;
        }
      }
    }
    if (searchInSupertypes((NodeWrapper)subRepresentator,superRepresentator,equationManager,errorInfo,isWeak))     return true;
  }
  return false;
}
