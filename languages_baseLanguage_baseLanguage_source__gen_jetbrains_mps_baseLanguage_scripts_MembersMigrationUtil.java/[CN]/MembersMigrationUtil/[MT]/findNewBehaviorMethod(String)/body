{
  List<SNode> methods=ListSequence.fromListWithValues(new ArrayList<SNode>(),Sequence.fromIterable(classifierConcepts()).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(AbstractConceptDeclaration_Behavior.call_findConceptAspect_8360039740498068384(it,LanguageAspect.BEHAVIOR),"jetbrains.mps.lang.behavior.structure.ConceptBehavior");
    }
  }
).translate(new ITranslator2<SNode,SNode>(){
    public Iterable<SNode> translate(    SNode it){
      return SLinkOperations.getTargets(it,"method",true);
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return methodName.equals(SPropertyOperations.getString(it,"name"));
    }
  }
));
  return ((int)ListSequence.fromList(methods).count() == 1 ? ListSequence.fromList(methods).getElement(0) : null);
}
