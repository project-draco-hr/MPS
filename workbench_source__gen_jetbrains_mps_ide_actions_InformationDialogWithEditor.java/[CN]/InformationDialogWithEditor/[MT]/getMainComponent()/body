{
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      Map<SNode,Set<SNode>> movedNodes=InformationDialogWithEditor.this.getRefactoringContext().getMovedNodes();
      Map<SNode,Set<SNode>> sourceNodes=InformationDialogWithEditor.this.getRefactoringContext().getSourceNodes();
      if (movedNodes.isEmpty()) {
        InformationDialogWithEditor.this.myChangedPanel=null;
      }
 else {
        InformationDialogWithEditor.this.collectInformation(movedNodes,"Changed Nodes",InformationDialogWithEditor.this.myChangedPanel);
      }
      if (sourceNodes.isEmpty()) {
        InformationDialogWithEditor.this.mySourcePanel=null;
      }
 else {
        InformationDialogWithEditor.this.collectInformation(sourceNodes,"Source Nodes",InformationDialogWithEditor.this.mySourcePanel);
      }
      InformationDialogWithEditor.this.collectInformation(InformationDialogWithEditor.this.getRefactoringContext().getConceptFeatures());
      if (!(movedNodes.isEmpty())) {
        InformationDialogWithEditor.this.myFirstValidNode=(SNode)movedNodes.keySet().toArray()[0];
        InformationDialogWithEditor.this.myFirstValidNodeChilds=movedNodes.get(InformationDialogWithEditor.this.myFirstValidNode);
      }
    }
  }
);
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      if (InformationDialogWithEditor.this.myFirstValidNode != null) {
        if (InformationDialogWithEditor.this.myEditor == null) {
          SNode copiedRoot=SNodeOperations.copyNode(InformationDialogWithEditor.this.myFirstValidNode);
          InformationDialogWithEditor.this.myEditor=new EmbeddableEditor(InformationDialogWithEditor.this.getOperationContext(),new ModelOwner(){
          }
,copiedRoot,false);
          InformationDialogWithEditor.this.setEditorNode(InformationDialogWithEditor.this.myFirstValidNode);
          InformationDialogWithEditor.this.highlightChanges(InformationDialogWithEditor.this.getCopiedNodes(InformationDialogWithEditor.this.myFirstValidNodeChilds,InformationDialogWithEditor.this.myFirstValidNode,copiedRoot));
        }
      }
    }
  }
);
  JPanel mainPanel=new JPanel(new BorderLayout());
  mainPanel.add(this.getSimplePanel(),BorderLayout.NORTH);
  Splitter splitter=new Splitter(false);
  splitter.setFirstComponent(new JScrollPane(this.getSimplePanel()));
  splitter.setSecondComponent(this.getEditorPanel());
  this.myMainPanel=splitter;
  return this.myMainPanel;
}
