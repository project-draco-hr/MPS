{
  String graphString="6 8  0 1  0 2  1 3  1 4  2 3  2 4  3 5  4 5";
  Graph graph=GraphIO.scanGraph(new Scanner(graphString));
  Map<Edge,Integer> capacity=MapSequence.<Edge,Integer>fromMap(new HashMap<Edge,Integer>());
  setEdgesMap(capacity,graph.getNode(0),ListSequence.<Integer>fromListAndArray(new ArrayList<Integer>(),1,2));
  setEdgesMap(capacity,graph.getNode(1),ListSequence.<Integer>fromListAndArray(new ArrayList<Integer>(),1,1));
  setEdgesMap(capacity,graph.getNode(2),ListSequence.<Integer>fromListAndArray(new ArrayList<Integer>(),2,2));
  setEdgesMap(capacity,graph.getNode(3),ListSequence.<Integer>fromListAndArray(new ArrayList<Integer>(),3));
  setEdgesMap(capacity,graph.getNode(4),ListSequence.<Integer>fromListAndArray(new ArrayList<Integer>(),3));
  Map<Edge,Integer> cost=MapSequence.<Edge,Integer>fromMap(new HashMap<Edge,Integer>());
  setEdgesMap(cost,graph.getNode(0),ListSequence.<Integer>fromListAndArray(new ArrayList<Integer>(),1,1));
  setEdgesMap(cost,graph.getNode(1),ListSequence.<Integer>fromListAndArray(new ArrayList<Integer>(),10,1));
  setEdgesMap(cost,graph.getNode(2),ListSequence.<Integer>fromListAndArray(new ArrayList<Integer>(),1,1));
  setEdgesMap(cost,graph.getNode(3),ListSequence.<Integer>fromListAndArray(new ArrayList<Integer>(),1));
  setEdgesMap(cost,graph.getNode(4),ListSequence.<Integer>fromListAndArray(new ArrayList<Integer>(),1));
  Map<Edge,Integer> flow=test(graph,ListSequence.<Node>fromList(graph.getNodes()).first(),ListSequence.<Node>fromList(graph.getNodes()).last(),capacity,cost);
  Assert.assertTrue(getFlowCost(flow,cost) == 9);
}
