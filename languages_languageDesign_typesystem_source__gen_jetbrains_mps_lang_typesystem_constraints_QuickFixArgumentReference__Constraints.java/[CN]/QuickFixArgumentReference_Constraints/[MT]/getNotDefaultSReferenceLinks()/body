{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(8817443762339858024l,-6091446231697526094l),1216390348809l,1216390348810l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(8817443762339858024l,-6091446231697526094l),1216390348809l,1216390348810l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          List<SNode> nodes=new ArrayList<SNode>();
          SNode quickFix=SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(new UUID(8817443762339858024l,-6091446231697526094l),1216383170661l,"jetbrains.mps.lang.typesystem.structure.TypesystemQuickFix"),false,false);
          if ((quickFix != null)) {
            ListSequence.fromList(nodes).addSequence(ListSequence.fromList(SLinkOperations.getChildren(quickFix,MetaAdapterFactory.getContainmentLink(new UUID(8817443762339858024l,-6091446231697526094l),1216383170661l,1216383476350l,"quickFixArgument"))));
          }
          return nodes;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_tpj9r2_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
