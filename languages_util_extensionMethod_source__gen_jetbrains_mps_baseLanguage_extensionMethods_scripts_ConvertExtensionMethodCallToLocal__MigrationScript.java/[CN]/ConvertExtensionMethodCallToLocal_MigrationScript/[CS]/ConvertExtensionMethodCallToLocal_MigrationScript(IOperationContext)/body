{
  super("Convert ExtensionMethodCall to Local");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ConvertLocalInstanceMethodCall";
    }
    public String getAdditionalInfo(){
      return "ConvertLocalInstanceMethodCall";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      if (!(SNodeOperations.isInstanceOf(IOperation_Behavior.call_getOperand_1213877410070(node),"jetbrains.mps.baseLanguage.extensionMethods.structure.ThisExtensionExpression"))) {
        return false;
      }
      SNode declaration=SLinkOperations.getTarget(node,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141037l,"baseMethodDeclaration"));
      SNode classifier=ExtensionMethodDeclaration_Behavior.call_getClassifier_7685333756920241018(SNodeOperations.getAncestor(node,"jetbrains.mps.baseLanguage.extensionMethods.structure.ExtensionMethodDeclaration",false,false));
      if (classifier == null) {
        return false;
      }
      SNode declarationClassifier=SNodeOperations.getAncestor(declaration,"jetbrains.mps.baseLanguage.structure.Classifier",false,false);
      if (!((classifier == declarationClassifier || ListSequence.fromList(SNodeOperations.getAncestors(classifier,null,false)).contains(declarationClassifier)))) {
        return false;
      }
      while (classifier != declarationClassifier) {
        for (        SNode method : Members.visibleInstanceMethods(BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),classifier,"virtual_getThisType_7405920559687254782",new Object[]{}),node)) {
          if (SPropertyOperations.getString(method,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")).equals(SPropertyOperations.getString(declaration,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")))) {
            return false;
          }
        }
        classifier=SNodeOperations.getAncestor(classifier,"jetbrains.mps.baseLanguage.structure.Classifier",false,false);
      }
      return true;
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode methodCall=SNodeOperations.replaceWithNewChild(SNodeOperations.getParent(node),"jetbrains.mps.baseLanguage.extensionMethods.structure.LocalExtendedMethodCall");
      SLinkOperations.setTarget(methodCall,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141037l,"baseMethodDeclaration"),SLinkOperations.getTarget(node,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141037l,"baseMethodDeclaration")));
      ListSequence.fromList(SLinkOperations.getChildren(methodCall,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141038l,"actualArgument"))).addSequence(ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141038l,"actualArgument"))));
    }
    public boolean isShowAsIntention(){
      return true;
    }
  }
);
}
