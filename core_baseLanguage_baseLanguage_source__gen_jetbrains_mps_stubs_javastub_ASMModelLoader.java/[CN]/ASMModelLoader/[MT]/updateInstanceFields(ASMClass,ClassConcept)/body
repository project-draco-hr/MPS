{
  SModel model=cls.getModel();
  for (  ASMField field : refCls.getDeclaredFields()) {
    if (field.isPrivate()) {
      continue;
    }
    if (field.isStatic()) {
      continue;
    }
    if (field.isCompilerGenerated()) {
      continue;
    }
    FieldDeclaration decl=FieldDeclaration.newInstance(model);
    decl.getNode().setId(ASMNodeId.createId(refCls,field));
    decl.setVisibility(this.createVisibility(field,model));
    decl.setName(field.getName());
    decl.setType(this.getTypeByASMType(field.getGenericType(),null,cls,model));
    decl.setIsDeprecated(field.isDeprecated());
    for (    ASMAnnotation annotation : field.getAnnotations()) {
      decl.addAnnotation(this.createAnnotation(annotation,model));
    }
    cls.addField(decl);
  }
}
