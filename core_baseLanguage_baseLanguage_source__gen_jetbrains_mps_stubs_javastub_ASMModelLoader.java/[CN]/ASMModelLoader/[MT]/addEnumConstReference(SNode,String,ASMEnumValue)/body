{
  if (sourceNode.getReferent(role) != null) {
    return;
  }
  ASMClassType classType=(ASMClassType)enumValue.getType();
  SModelReference targetRef=getModelReferenceFor(NodeNameUtil.getNamespace(classType.getName()));
  SReference reference=null;
  if (sourceNode.getModel().getSModelReference().equals(targetRef)) {
    String modelName=sourceNode.getModel().getLongName();
    String className=NameUtil.shortNameFromLongName(classType.getName());
    Classifier classifier=getAnyClassifier(className,modelName);
    EnumConstantDeclaration constDcl=null;
    if (classifier instanceof EnumClass) {
      EnumClass ec=(EnumClass)classifier;
      for (      EnumConstantDeclaration dcl : ec.getEnumConstants()) {
        if (enumValue.getConstant().equals(dcl.getName())) {
          constDcl=dcl;
          break;
        }
      }
    }
    if (constDcl != null) {
      reference=SReference.create(role,sourceNode,BaseAdapter.fromAdapter(constDcl));
    }
  }
  if (reference == null) {
    SNodeId nodeId=ASMNodeId.createFieldId(classType.getName(),enumValue.getConstant());
    reference=SReference.create(role,sourceNode,targetRef,nodeId);
  }
  sourceNode.addReference(reference);
}
