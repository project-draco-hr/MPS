{
  return new BaseNodePointerModel(project,"root"){
    @Override public SNodeReference[] find(    SearchScope scope){
      final List<SNodeReference> nodes=new ArrayList<SNodeReference>();
      Iterable<SModel> modelDescriptors=scope.getModels();
      Condition<SNode> cond=new Condition<SNode>(){
        @Override public boolean met(        SNode node){
          String name=node.getName();
          return name != null && name.length() > 0;
        }
      }
;
      for (      SModel modelDescriptor : modelDescriptors) {
        if (!SModelStereotype.isUserModel(modelDescriptor))         continue;
        Iterable<SNode> iter=new ConditionalIterable<SNode>(modelDescriptor.getRootNodes(),cond);
        for (        SNode node : iter) {
          ProgressManager.checkCanceled();
          nodes.add(new jetbrains.mps.smodel.SNodePointer(node));
        }
      }
      return nodes.toArray(new SNodeReference[nodes.size()]);
    }
    @Override public boolean willOpenEditor(){
      return true;
    }
  }
;
}
