{
  SNode iterableType=TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(foreachStatement,"iterable",true));
  if (SNodeOperations.isInstanceOf(iterableType,"jetbrains.mps.baseLanguage.structure.ArrayType")) {
    return;
  }
{
    GeneratedMatchingPattern pattern_gn1qzs_c0=new check_ForeachWithErasure_NonTypesystemRule.Pattern_aftnu9_a0a0a2a0();
    SNode coercedNode_gn1qzs_c0=TypeChecker.getInstance().getRuntimeSupport().coerce_(iterableType,pattern_gn1qzs_c0,typeCheckingContext);
    if (coercedNode_gn1qzs_c0 != null) {
    }
 else {
      if (!(MatchingUtil.matchNodes(SLinkOperations.getTarget(SLinkOperations.getTarget(foreachStatement,"variable",true),"type",true),new check_ForeachWithErasure_NonTypesystemRule.QuotationClass_aftnu9_a0a0b0a2a2a0().createNode(typeCheckingContext)))) {
{
          BaseQuickFixProvider intentionProvider=null;
          MessageTarget errorTarget=new NodeMessageTarget();
          IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(SLinkOperations.getTarget(SLinkOperations.getTarget(foreachStatement,"variable",true),"type",true),"java.lang.Object expected","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","4312449433287189198",intentionProvider,errorTarget);
        }
      }
    }
  }
}
