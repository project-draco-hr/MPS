{
  List<SNode> dependencies=ListSequence.fromList(new ArrayList<SNode>());
  dfs(myProject,dependencies,SetSequence.fromSet(new HashSet<SNode>()));
  String basePath=BuildProject_Behavior.call_getBasePath_4959435991187146924(myProject,Context.defaultContext(myGenContext));
  if ((basePath == null || basePath.length() == 0)) {
    return this;
  }
  final RelativePathHelper helper=new RelativePathHelper(basePath);
  ListSequence.fromList(myDependency).addSequence(ListSequence.fromList(dependencies).select(new ISelector<SNode,Tuples._2<SNode,String>>(){
    public Tuples._2<SNode,String> select(    SNode it){
      return MultiTuple.<SNode,String>from(SLinkOperations.getTarget(it,"script",false),calculatePath(it,helper));
    }
  }
));
  return this;
}
