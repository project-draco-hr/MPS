{
  SNode script=SLinkOperations.getTarget(node,MetaAdapterFactory.getReferenceLink(new UUID(8755280088213897754l,-5075149991798053422l),4993211115183325728l,5617550519002745380l,"script"));
  String filePath=BuildProject_Behavior.call_getScriptsPath_4796668409958419284(script,Context.defaultContext(myGenContext));
  if (filePath == null) {
    myGenContext.showErrorMessage(script,"no script path for required script " + SPropertyOperations.getString(script,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")));
    return ".";
  }
  try {
    String relative=helper.makeRelative(filePath);
    if ((relative == null || relative.length() == 0)) {
      return BuildProject_Behavior.call_getOutputFileName_4915877860351551360(script);
    }
    if (!(relative.endsWith("/"))) {
      relative+="/";
    }
    return relative + BuildProject_Behavior.call_getOutputFileName_4915877860351551360(script);
  }
 catch (  RelativePathHelper.PathException ex) {
    myGenContext.showErrorMessage(node,"cannot calculate relative path: " + ex.getMessage());
    return "????";
  }
}
