{
  JComponent contentPane=((JComponent)getContentPane());
  contentPane.setLayout(new BorderLayout());
  contentPane.setBorder(BorderFactory.createEmptyBorder(4,4,4,4));
  contentPane.registerKeyboardAction(new AbstractAction("Dispose dialog"){
    public void actionPerformed(    ActionEvent e){
      setVisible(false);
    }
  }
,KeyStroke.getKeyStroke("ESCAPE"),JComponent.WHEN_IN_FOCUSED_WINDOW);
  JPanel panel=new JPanel(new BorderLayout());
  contentPane.add(panel,BorderLayout.CENTER);
  RunMigrationScriptsDialog.MySortingTableModel tm=new RunMigrationScriptsDialog.MySortingTableModel();
  myTable=new JTable(tm);
  tm.install(myTable);
  TableColumnModel columnModel=myTable.getColumnModel();
  columnModel.getColumn(0).setMaxWidth(20);
  columnModel.getColumn(0).setResizable(false);
  columnModel.getColumn(1).setMinWidth(440);
  panel.add(new JScrollPane(myTable),BorderLayout.CENTER);
  JPanel buttonsFlow=new JPanel();
  myCheckButton=new JButton("Check");
  myUnCheckButton=new JButton("UnCheck");
  myRunCheckedButton=new JButton("Run Checked");
  myOpenSelectedButton=new JButton("Open Selected");
  JButton closeButton=new JButton("Close");
  buttonsFlow.add(myCheckButton);
  buttonsFlow.add(myUnCheckButton);
  buttonsFlow.add(myRunCheckedButton);
  buttonsFlow.add(myOpenSelectedButton);
  buttonsFlow.add(closeButton);
  myCheckButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      int[] ints=myTable.getSelectedRows();
      for (      int i : ints) {
        myTable.setValueAt(true,i,0);
      }
    }
  }
);
  myUnCheckButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      int[] ints=myTable.getSelectedRows();
      for (      int i : ints) {
        myTable.setValueAt(false,i,0);
      }
    }
  }
);
  myRunCheckedButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      myRunChecked=true;
      RunMigrationScriptsDialog.this.setVisible(false);
    }
  }
);
  myOpenSelectedButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      myOpenSelected=true;
      RunMigrationScriptsDialog.this.setVisible(false);
    }
  }
);
  closeButton.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      RunMigrationScriptsDialog.this.setVisible(false);
    }
  }
);
  JPanel buttons=new JPanel(new BorderLayout());
  buttons.setBorder(BorderFactory.createEmptyBorder(4,0,0,0));
  buttons.add(buttonsFlow,BorderLayout.EAST);
  panel.add(buttons,BorderLayout.SOUTH);
  myTable.getModel().addTableModelListener(new TableModelListener(){
    public void tableChanged(    TableModelEvent e){
      RunMigrationScriptsDialog.this.updateButtons();
    }
  }
);
  myTable.getSelectionModel().addListSelectionListener(new ListSelectionListener(){
    public void valueChanged(    ListSelectionEvent e){
      RunMigrationScriptsDialog.this.updateButtons();
    }
  }
);
  updateButtons();
}
