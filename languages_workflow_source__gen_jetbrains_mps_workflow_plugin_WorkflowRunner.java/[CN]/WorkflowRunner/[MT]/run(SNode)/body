{
  report(MessageKind.INFORMATION,"started: " + SPropertyOperations.getString(executable,"name"));
  EvaluationEnvironment env=new EvaluationEnvironment(){
    @Override public void reportError(    String message){
      WorkflowRunner.this.report(MessageKind.ERROR,message);
    }
  }
;
  EvaluationContext rootContext=new EvaluationContext(null,null);
  for (  SNode st : SLinkOperations.getTargets(executable,"statements",true)) {
    if (SNodeOperations.isInstanceOf(st,"jetbrains.mps.workflow.structure.WflowExpressionStatement")) {
      try {
        SNode exprst=SNodeOperations.cast(st,"jetbrains.mps.workflow.structure.WflowExpressionStatement");
        Object result=MqlExpression_Behavior.call_evaluate_1671449901154581105(SLinkOperations.getTarget(exprst,"expression",true),env,rootContext);
        String asString=(result == null ? "null" : result.toString());
        report(MessageKind.INFORMATION,SPropertyOperations.getString(exprst,"varname") + "=" + asString);
      }
 catch (      Exception ex) {
        report(MessageKind.ERROR,ex.toString());
      }
    }
  }
}
