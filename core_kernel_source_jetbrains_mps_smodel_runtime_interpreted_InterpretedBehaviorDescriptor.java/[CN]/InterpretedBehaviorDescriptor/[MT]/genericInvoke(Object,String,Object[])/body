{
  Method method=myMethods.get(methodName);
  if (method == null) {
    method=findMethod(getConceptFqName(),methodName);
    if (method != null) {
      myMethods.put(methodName,method);
    }
 else {
      throw new RuntimeException(new NoSuchMethodException("No such method for " + methodName + " in "+ getConceptFqName()));
    }
  }
  Object[] params=new Object[parameters.length + 1];
  params[0]=arg;
  System.arraycopy(parameters,0,params,1,parameters.length);
  try {
    return method.invoke(this,params);
  }
 catch (  IllegalAccessException e) {
    throw new RuntimeException(e);
  }
catch (  InvocationTargetException e) {
    Throwable cause=e.getCause();
    if (cause instanceof RuntimeException) {
      throw (RuntimeException)cause;
    }
 else     if (cause instanceof Error) {
      throw (Error)cause;
    }
    throw new RuntimeException(e);
  }
}
