{
  try {
    List<SNode> coreBlocks=new ArrayList<SNode>();
    ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:2d21a960-b27b-446c-b511-65afab987b27(jetbrains.mps.build.custommps.modules)","4062013737453621622"));
    ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:2d21a960-b27b-446c-b511-65afab987b27(jetbrains.mps.build.custommps.modules)","767042628922931192"));
    ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:2d21a960-b27b-446c-b511-65afab987b27(jetbrains.mps.build.custommps.modules)","701559220729385454"));
    ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:2d21a960-b27b-446c-b511-65afab987b27(jetbrains.mps.build.custommps.modules)","7678729833318422579"));
    ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:2d21a960-b27b-446c-b511-65afab987b27(jetbrains.mps.build.custommps.modules)","4062013737453621614"));
    ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:2d21a960-b27b-446c-b511-65afab987b27(jetbrains.mps.build.custommps.modules)","4062013737453609732"));
    Iterable<IModule> coreModules=ListSequence.fromList(coreBlocks).translate(new ITranslator2<SNode,SNode>(){
      public Iterable<SNode> translate(      SNode it){
        return SNodeOperations.getDescendants(it,"jetbrains.mps.build.custommpsInternal.structure.MPSModule",false,new String[]{});
      }
    }
).select(new ISelector<SNode,IModule>(){
      public IModule select(      SNode it){
        return Module_Behavior.call_getModule_1213877515148(it);
      }
    }
);
    for (    Solution solution : ListSequence.fromList(MPSModuleRepository.getInstance().getAllSolutions())) {
      if (solution.isStub()) {
        continue;
      }
      if (!(solution.getModuleDescriptor().isDontLoadClasses())) {
        continue;
      }
      for (      Language language : ListSequence.fromList(ModuleUtil.getAllUsedLanguages(solution))) {
        for (        IModule module : ListSequence.fromList(language.getRuntimeDependOnModules())) {
          if (!(Sequence.fromIterable(coreModules).contains(module))) {
            String msg="Module " + module.getModuleFqName() + " should be in core because it's a runtime of language "+ language.getModuleFqName()+ ", which is used by core solution "+ solution.getModuleFqName();
            LOG.error(msg);
          }
        }
      }
    }
  }
 catch (  Throwable t) {
    LOG.error("User's action execute method failed. Action:" + "CheckCoreRuntimeDeps",t);
  }
}
