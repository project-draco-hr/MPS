{
  if (SModelUtil.isAssignableConcept(targetConcept,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.FieldDeclaration"))) {
    return new IReferenceInfoResolver(){
      @Override public SNode resolve(      String referenceInfo,      SModelReference targetModelReference){
        if (referenceInfo == null) {
          return null;
        }
        return ClassifierAndSuperClassifiersScope.this.getFieldByName(referenceInfo);
      }
    }
;
  }
  if (SModelUtil.isAssignableConcept(targetConcept,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration"))) {
    return new IReferenceInfoResolver(){
      @Override public SNode resolve(      String referenceInfo,      SModelReference targetModelReference){
        if (referenceInfo == null) {
          return null;
        }
        return ClassifierAndSuperClassifiersScope.this.getStaticFieldByName(referenceInfo);
      }
    }
;
  }
  if (SModelUtil.isAssignableConcept(targetConcept,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration"))) {
    return new IReferenceInfoResolver(){
      @Override public SNode resolve(      String referenceInfo,      SModelReference targetModelReference){
        if (referenceInfo == null) {
          return null;
        }
        return ClassifierAndSuperClassifiersScope.this.getEnumConstantByName(referenceInfo);
      }
    }
;
  }
  return super.getReferenceInfoResolver(referenceNode,targetConcept);
}
