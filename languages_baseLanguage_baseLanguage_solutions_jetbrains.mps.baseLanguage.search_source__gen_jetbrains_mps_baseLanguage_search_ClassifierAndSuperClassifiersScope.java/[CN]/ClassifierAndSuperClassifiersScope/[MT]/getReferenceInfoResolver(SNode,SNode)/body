{
  SAbstractConcept targetConcept=MetaAdapterByDeclaration.getConcept(targetConceptNode);
  if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(targetConcept),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca68L,"jetbrains.mps.baseLanguage.structure.FieldDeclaration"))) {
    return new IReferenceInfoResolver(){
      @Override public SNode resolve(      String referenceInfo,      SModelReference targetModelReference){
        if (referenceInfo == null) {
          return null;
        }
        return ClassifierAndSuperClassifiersScope.this.getFieldByName(referenceInfo);
      }
    }
;
  }
  if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(targetConcept),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf93c84351fL,"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration"))) {
    return new IReferenceInfoResolver(){
      @Override public SNode resolve(      String referenceInfo,      SModelReference targetModelReference){
        if (referenceInfo == null) {
          return null;
        }
        return ClassifierAndSuperClassifiersScope.this.getStaticFieldByName(referenceInfo);
      }
    }
;
  }
  if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(targetConcept),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367388b3L,"jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration"))) {
    return new IReferenceInfoResolver(){
      @Override public SNode resolve(      String referenceInfo,      SModelReference targetModelReference){
        if (referenceInfo == null) {
          return null;
        }
        return ClassifierAndSuperClassifiersScope.this.getEnumConstantByName(referenceInfo);
      }
    }
;
  }
  return super.getReferenceInfoResolver(referenceNode,targetConceptNode);
}
