{
  Color backgroundColor;
  Color textColor;
  Color textBackgroundColor;
  FontMetrics metrics=getFontMetrics();
  Rectangle2D stringBounds=metrics.getStringBounds(myText,g);
  backgroundColor=getBackgroundColor();
  if (isSelected) {
    textColor=getEffectiveSelectedTextColor();
    textBackgroundColor=getSelectedTextBackgroundColor();
  }
 else {
    textColor=getEffectiveTextColor();
    textBackgroundColor=getTextBackgroundColor();
  }
  if (backgroundColor != null && !g.getColor().equals(backgroundColor) && !isSelected) {
    g.setColor(backgroundColor);
    g.fillRect(shiftX + getLeftInternalInset(),shiftY,(int)stringBounds.getWidth() - 1,myHeight - 1);
  }
  if (textBackgroundColor != null) {
    g.setColor(textBackgroundColor);
    g.fillRect(shiftX + getLeftInternalInset(),shiftY,(int)stringBounds.getWidth() - 1,myHeight - 1);
  }
  g.setFont(getFont());
  if (!g.getColor().equals(textColor)) {
    g.setColor(textColor);
  }
  int deltaShiftX_EndSelection=(myEndTextSelectionPosition <= myText.length()) ? getCaretX(0,myEndTextSelectionPosition) : getLeftInternalInset();
  int deltaShiftX_StartSelection=getCaretX(0,myStartTextSelectionPosition);
  int endLine=getCaretX(shiftX,myText.length());
  int baselineY=shiftY + myHeight - myDescent;
  if (myStartTextSelectionPosition > 0) {
    g.drawString(myText.substring(0,myStartTextSelectionPosition),shiftX + getLeftInternalInset(),baselineY);
    if (isUnderlined()) {
      g.drawLine(shiftX + getLeftInternalInset(),baselineY + 1,shiftX + deltaShiftX_StartSelection,baselineY + 1);
    }
  }
  if (myEndTextSelectionPosition <= myText.length()) {
    g.drawString(myText.substring(myEndTextSelectionPosition),shiftX + deltaShiftX_EndSelection,baselineY);
    if (isUnderlined()) {
      g.drawLine(shiftX + deltaShiftX_EndSelection,baselineY + 1,endLine,baselineY + 1);
    }
  }
  if (myStartTextSelectionPosition < myEndTextSelectionPosition) {
    Rectangle2D selectedStringBounds=metrics.getStringBounds(getTextuallySelectedText(),g);
    g.setColor(myTextSelectedBackgroundColor);
    g.fillRect(shiftX + deltaShiftX_StartSelection + 1,shiftY + 1,(int)selectedStringBounds.getWidth() - 1,myHeight - 1);
    g.setColor(myTextSelectedTextColor);
    g.drawString(getTextuallySelectedText(),shiftX + deltaShiftX_StartSelection,baselineY);
    if (isUnderlined()) {
      g.drawLine(shiftX + deltaShiftX_StartSelection,baselineY + 1,shiftX + deltaShiftX_EndSelection,baselineY + 1);
    }
    g.setColor(textColor);
  }
  if (toShowCaret) {
    drawCaret(g,shiftX,shiftY);
  }
}
