{
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a,descriptor.getConceptFqName())) {
case 0:
    return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new BinaryOperation_Editor()));
case 1:
  return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new FunctionType_Editor()));
case 2:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new LambdaAbstraction_Editor()));
case 3:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new LambdaApplication_Editor()));
case 4:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new LetExpression_Editor()));
case 5:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new MultipleExpression_Editor()));
case 6:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new NumberType_Editor()));
case 7:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new NumericConstant_Editor()));
case 8:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new ParenthesisExpression_Editor()));
case 9:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new Program_Editor()));
case 10:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new StringConstant_Editor()));
case 11:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new StringType_Editor()));
case 12:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new Variable_Editor()));
case 13:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new VariableReference_Editor()));
default :
}
return Collections.<ConceptEditor>emptyList();
}
