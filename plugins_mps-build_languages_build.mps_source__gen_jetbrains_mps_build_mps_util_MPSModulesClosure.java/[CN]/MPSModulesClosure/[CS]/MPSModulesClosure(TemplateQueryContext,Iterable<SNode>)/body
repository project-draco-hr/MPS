{
  this.genContext=genContext;
  this.initialModules=Sequence.fromIterable(initialModules).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.mps.structure.BuildMps_Module");
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(it,"jetbrains.mps.build.mps.structure.BuildMps_Module");
    }
  }
);
  SNode containingRoot=SNodeOperations.getContainingRoot(Sequence.fromIterable(initialModules).first());
  for (  SNode m : Sequence.fromIterable(initialModules)) {
    if (containingRoot != SNodeOperations.getContainingRoot(m)) {
      throw new IllegalArgumentException("all modules should be from the same root");
    }
  }
}
