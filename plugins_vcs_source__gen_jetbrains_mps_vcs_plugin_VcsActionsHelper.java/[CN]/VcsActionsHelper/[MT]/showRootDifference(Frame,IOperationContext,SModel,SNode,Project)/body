{
  try {
    VirtualFile file=VirtualFileUtils.getVirtualFile(((EditableSModelDescriptor)model.getModelDescriptor()).getModelFile());
    AbstractVcs vcs=ProjectLevelVcsManager.getInstance(project).getVcsFor(file);
    final VcsRevisionNumber revisionNumber=vcs.getDiffProvider().getCurrentRevision(file);
    ContentRevision content=vcs.getDiffProvider().createFileContent(revisionNumber,file);
    final SModel oldModel=VcsActionsHelper.loadModel(content.getContent(),model.getModelDescriptor());
    if (ModelDifferenceDialog.isNewDiffEnabled()) {
      final Wrappers._T<ModelDifferenceDialog> modelDialog=new Wrappers._T<ModelDifferenceDialog>();
      final Wrappers._T<SNodeId> id=new Wrappers._T<SNodeId>();
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          modelDialog.value=new ModelDifferenceDialog(project,context,oldModel,model,new SimpleDiffRequest(project,revisionNumber.asString() + " (Read-Only)","Your Version"));
          id.value=node.getSNodeId();
        }
      }
);
      modelDialog.value.invokeRootDifference(id.value);
    }
 else {
      final OldRootDifferenceDialog dialog=new OldRootDifferenceDialog(frame,model,oldModel,true,true);
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          dialog.init(context,node,"Your Version",revisionNumber.asString() + " (Read-Only)");
        }
      }
);
      dialog.showDialog();
    }
  }
 catch (  VcsException e) {
    if (log.isErrorEnabled()) {
      log.error("",e);
    }
  }
}
