{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("quickFixArgument",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      List<SNode> nodes=new ArrayList<SNode>();
      SNode quickFix=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.lang.typesystem.structure.TypesystemQuickFix",false,false);
      if ((quickFix != null)) {
        ListSequence.fromList(nodes).addSequence(ListSequence.fromList(SLinkOperations.getTargets(quickFix,"quickFixArgument",true)));
      }
      return nodes;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c895902ae(jetbrains.mps.lang.typesystem.constraints)","1216390512066");
    }
  }
);
  return result;
}
