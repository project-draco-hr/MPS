{
  try {
    final Project project=((IOperationContext)MapSequence.fromMap(_params).get("operationContext")).getProject();
    final boolean isInEnumConstant=ModelAccess.instance().runReadAction(new Computable<Boolean>(){
      public Boolean compute(){
        return (SNodeOperations.getNodeAncestor(((SNode)MapSequence.fromMap(_params).get("selectedNode")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367388b3L,"jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration"),true,false) != null);
      }
    }
);
    if (isInEnumConstant) {
      new OverrideImplementMethodInEnumConstantAction(project,((SNode)MapSequence.fromMap(_params).get("selectedNode")),((EditorContext)MapSequence.fromMap(_params).get("editorContext")),false).run();
    }
 else {
      new OverrideImplementMethodAction(project,((SNode)MapSequence.fromMap(_params).get("selectedNode")),((EditorContext)MapSequence.fromMap(_params).get("editorContext")),false).run();
    }
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "ImplementMethodsAsIntention",t);
    }
  }
}
