{
  if (MapSequence.fromMap(substitutions).containsKey(SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102467229d8L,0x1024673a581L,"typeVariableDeclaration")))) {
    if (ListSequence.fromList(expTrace).any(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return MatchingUtil.matchNodes(thisNode,it);
      }
    }
)) {
      return thisNode;
    }
    SNode exp=MapSequence.fromMap(substitutions).get(SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102467229d8L,0x1024673a581L,"typeVariableDeclaration")));
    if (SNodeOperations.isInstanceOf(exp,MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x38ff5220e0ac710dL,"jetbrains.mps.baseLanguage.structure.IGenericType"))) {
      ListSequence.fromList(expTrace).addElement(thisNode);
      exp=BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),SNodeOperations.cast(exp,MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x38ff5220e0ac710dL,"jetbrains.mps.baseLanguage.structure.IGenericType")),"virtual_expandGenerics_4122274986016348613",new Object[]{substitutions,expTrace});
    }
    return exp;
  }
  return thisNode;
}
