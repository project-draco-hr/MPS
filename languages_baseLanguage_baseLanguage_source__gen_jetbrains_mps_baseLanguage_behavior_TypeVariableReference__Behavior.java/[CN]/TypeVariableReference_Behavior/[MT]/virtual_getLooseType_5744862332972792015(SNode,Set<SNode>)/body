{
  SNode bound=SLinkOperations.getTarget(SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102467229d8L,0x1024673a581L,"typeVariableDeclaration")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x1024639ed74L,0x11ae375bda0L,"bound"));
  if ((bound != null) && !(SetSequence.fromSet(visitedTypeVariableReferences).contains(thisNode))) {
    SetSequence.fromSet(visitedTypeVariableReferences).addElement(thisNode);
    SNode upperBoundType=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110daeaa84aL,"jetbrains.mps.baseLanguage.structure.UpperBoundType")));
    SLinkOperations.setTarget(upperBoundType,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110daeaa84aL,0x110daeaa84bL,"bound"),BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),bound,"virtual_getLooseType_5744862332972792015",new Object[]{visitedTypeVariableReferences}));
    SetSequence.fromSet(visitedTypeVariableReferences).removeElement(thisNode);
    return upperBoundType;
  }
 else {
    return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110dae5f4a3L,"jetbrains.mps.baseLanguage.structure.WildCardType")));
  }
}
