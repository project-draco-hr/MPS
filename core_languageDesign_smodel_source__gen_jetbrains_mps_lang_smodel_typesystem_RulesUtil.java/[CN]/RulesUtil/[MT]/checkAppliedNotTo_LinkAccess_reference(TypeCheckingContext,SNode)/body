{
  SNode leftExpression=SNodeOperation_Behavior.call_getLeftExpression_1213877508894(op);
  SNode leftType=TypeChecker.getInstance().getTypeOf(leftExpression);
  boolean isGood=true;
  SNode linkAccessT=TypeChecker.getInstance().getRuntimeSupport().coerce_(leftType,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.lang.smodel.structure._LinkAccessT"),false,typeCheckingContext);
  if (linkAccessT != null) {
    if (!(SPropertyOperations.getBoolean(linkAccessT,"aggregation"))) {
      isGood=false;
    }
  }
  if (!(isGood)) {
    BaseIntentionProvider intentionProvider=null;
    IErrorTarget errorTarget=new NodeErrorTarget();
    typeCheckingContext.reportTypeError(op,"operation is not applicable to reference-link-access","r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)","1230333667606",intentionProvider,errorTarget);
  }
}
