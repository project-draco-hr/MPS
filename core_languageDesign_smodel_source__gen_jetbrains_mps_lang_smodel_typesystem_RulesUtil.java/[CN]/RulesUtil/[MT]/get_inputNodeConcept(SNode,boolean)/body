{
  final SNode leftExpression=SNodeOperation_Behavior.call_getLeftExpression_1213877508894(op);
  SNode leftType=TypeChecker.getInstance().getTypeOf(leftExpression);
  SNode conceptDeclaration=null;
  if (SNodeOperations.isInstanceOf(SNodeOperation_Behavior.call_getLeftExpressionOperation_1213877508946(op),"jetbrains.mps.lang.smodel.structure.ILinkAccess")) {
    conceptDeclaration=ILinkAccess_Behavior.call_getTargetConcept_4024382256428848859(SNodeOperations.cast(SNodeOperation_Behavior.call_getLeftExpressionOperation_1213877508946(op),"jetbrains.mps.lang.smodel.structure.ILinkAccess"));
  }
 else   if (SNodeOperations.isInstanceOf(leftType,"jetbrains.mps.lang.smodel.structure._LinkAccessT")) {
    conceptDeclaration=SLinkOperations.getTarget(SNodeOperations.cast(leftType,"jetbrains.mps.lang.smodel.structure._LinkAccessT"),"targetConcept",false);
  }
 else   if (SNodeOperations.isInstanceOf(leftType,"jetbrains.mps.lang.smodel.structure.SNodeType")) {
    conceptDeclaration=SLinkOperations.getTarget(SNodeOperations.cast(leftType,"jetbrains.mps.lang.smodel.structure.SNodeType"),"concept",false);
  }
 else   if (SNodeOperations.isInstanceOf(leftType,"jetbrains.mps.lang.smodel.structure.SConceptType")) {
    if (conceptOfConceptIfInputConcept) {
      conceptDeclaration=SLinkOperations.getTarget(SNodeOperations.cast(leftType,"jetbrains.mps.lang.smodel.structure.SConceptType"),"conceptDeclaraton",false);
    }
 else {
      conceptDeclaration=SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration");
    }
  }
  if (SNodeOperations.isInstanceOf(conceptDeclaration,"jetbrains.mps.lang.typesystem.structure.RuntimeTypeVariable")) {
    conceptDeclaration=SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.core.structure.BaseConcept");
  }
  if (conceptDeclaration == null) {
    conceptDeclaration=SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.core.structure.BaseConcept");
  }
  return conceptDeclaration;
}
