{
  if (SConceptOperations.isExactly(SNodeOperations.getConceptDeclaration(op),"jetbrains.mps.lang.smodel.structure.SNodeOperation")) {
    return;
  }
  final SNode leftExpression=SNodeOperation_Behavior.call_getLeftExpression_1213877508894(op);
  SNode LeftType=TypeChecker.getInstance().getTypeOf(leftExpression);
  boolean isGood=false;
  if (SConceptPropertyOperations.getBoolean(op,"applicableToModel")) {
    if (TypeChecker.getInstance().getSubtypingManager().isSubtype(LeftType,new _Quotations.QuotationClass_33().createNode(typeCheckingContext),false)) {
      isGood=true;
    }
  }
  if (SConceptPropertyOperations.getBoolean(op,"applicableToConcept")) {
    if (TypeChecker.getInstance().getSubtypingManager().isSubtype(LeftType,new _Quotations.QuotationClass_34().createNode(typeCheckingContext),false)) {
      isGood=true;
    }
  }
  if (SConceptPropertyOperations.getBoolean(op,"applicableToNode")) {
    if (TypeChecker.getInstance().getSubtypingManager().isSubtype(LeftType,new _Quotations.QuotationClass_35().createNode(typeCheckingContext),false)) {
      isGood=true;
    }
  }
  if (SConceptPropertyOperations.getBoolean(op,"applicableToLink")) {
    SNode linkAccess=SNodeOperations.as(SNodeOperation_Behavior.call_getLeftExpressionOperation_1213877508946(op),"jetbrains.mps.lang.smodel.structure.ILinkAccess");
    if (linkAccess != null) {
      isGood=ILinkAccess_Behavior.call_isSingularCardinality_4024382256428848847(linkAccess);
      if (isGood) {
        if (SConceptPropertyOperations.getBoolean(op,"applicableToConcept") && !(SConceptPropertyOperations.getBoolean(op,"applicableToNode"))) {
          isGood=TypeChecker.getInstance().getSubtypingManager().isSubtype(LeftType,new _Quotations.QuotationClass_83().createNode(typeCheckingContext));
        }
      }
    }
  }
  if (SConceptPropertyOperations.getBoolean(op,"applicableToLinkList")) {
    SNode linkAccess=SNodeOperations.as(SNodeOperation_Behavior.call_getLeftExpressionOperation_1213877508946(op),"jetbrains.mps.lang.smodel.structure.ILinkAccess");
    if (linkAccess != null) {
      isGood=!(ILinkAccess_Behavior.call_isSingularCardinality_4024382256428848847(linkAccess));
    }
  }
  SNode leftOperation=SNodeOperation_Behavior.call_getLeftExpressionOperation_1213877508946(op);
  if (SConceptPropertyOperations.getBoolean(op,"applicableToSimpleProperty")) {
    if (SConceptOperations.isExactly(SNodeOperations.getConceptDeclaration(leftOperation),"jetbrains.mps.lang.smodel.structure.SPropertyAccess")) {
      SNode propertyDecl=SLinkOperations.getTarget(SNodeOperations.cast(leftOperation,"jetbrains.mps.lang.smodel.structure.SPropertyAccess"),"property",false);
      if (DataTypeDeclaration_Behavior.call_isSimple_1220268671473(SLinkOperations.getTarget(propertyDecl,"dataType",false))) {
        isGood=true;
      }
    }
  }
  if (SConceptPropertyOperations.getBoolean(op,"applicableToEnumProperty")) {
    if (SConceptOperations.isExactly(SNodeOperations.getConceptDeclaration(leftOperation),"jetbrains.mps.lang.smodel.structure.SPropertyAccess")) {
      SNode propertyDecl=SLinkOperations.getTarget(SNodeOperations.cast(leftOperation,"jetbrains.mps.lang.smodel.structure.SPropertyAccess"),"property",false);
      if (DataTypeDeclaration_Behavior.call_isEnum_1220268692373(SLinkOperations.getTarget(propertyDecl,"dataType",false))) {
        isGood=true;
      }
    }
  }
  if (SConceptPropertyOperations.getBoolean(op,"applicableToConceptProperty")) {
    if (SConceptOperations.isExactly(SNodeOperations.getConceptDeclaration(leftOperation),"jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess")) {
      isGood=true;
    }
  }
  if (!(isGood)) {
    BaseIntentionProvider intentionProvider=null;
    IErrorTarget errorTarget=new NodeErrorTarget();
    typeCheckingContext.reportTypeError(op,"operation is not applicable to " + LeftType,"r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)","1186067417054",intentionProvider,errorTarget);
  }
}
