{
  boolean noProblem=true;
  List<SNode> applicableParmConcepts=SLinkOperations.getConceptLinkTargets(op,"applicableParameter");
  for (  SNode parm : Sequence.fromIterable(SLinkOperations.getTargets(op,"parameter",true))) {
    if (!(ListSequence.fromList(applicableParmConcepts).contains(SNodeOperations.getConceptDeclaration(parm)))) {
{
        BaseIntentionProvider intentionProvider=null;
        IErrorTarget errorTarget=new NodeErrorTarget();
        typeCheckingContext.reportTypeError(parm,"not applicable here","r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)","1178302007667",intentionProvider,errorTarget);
      }
      noProblem=false;
    }
  }
  return noProblem;
}
