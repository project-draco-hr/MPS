{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.debugger.api.lang.structure.CreateBreakpointOperation");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<IBreakpointKind> queryResult=new Computable<Iterable<IBreakpointKind>>(){
        public Iterable<IBreakpointKind> compute(){
          SNode debuggerType=TypeChecker.getInstance().getRuntimeSupport().coerce_(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(SNodeOperations.cast(_context.getParentNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,"jetbrains.mps.baseLanguage.structure.DotExpression")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,0x116b46a4416L,"operand"))),HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.debugger.api.lang.structure.DebuggerType"),true);
          if (debuggerType != null && isNotEmptyString(SPropertyOperations.getString(debuggerType,MetaAdapterFactory.getProperty(0xfbc142795e2a4c87L,0xa5d15f7061e6c456L,0xf528808f912bd83L,0x23a852e9c43c456dL,"name")))) {
            IBreakpointsProvider provider=Debuggers.getInstance().getDebuggerByName(SPropertyOperations.getString(debuggerType,MetaAdapterFactory.getProperty(0xfbc142795e2a4c87L,0xa5d15f7061e6c456L,0xf528808f912bd83L,0x23a852e9c43c456dL,"name"))).getBreakpointsProvider();
            if (provider != null) {
              return (List<IBreakpointKind>)provider.getAllKinds();
            }
          }
          return ListSequence.fromList(new ArrayList<IBreakpointKind>());
        }
      }
.compute();
      if (queryResult != null) {
        for (        final IBreakpointKind item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SNode createBreakpointOperation=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xfbc142795e2a4c87L,0xa5d15f7061e6c456L,0x23a852e9c43bcae9L,"jetbrains.mps.debugger.api.lang.structure.CreateBreakpointOperation")),null);
              SPropertyOperations.set(createBreakpointOperation,MetaAdapterFactory.getProperty(0xfbc142795e2a4c87L,0xa5d15f7061e6c456L,0x23a852e9c43bcae9L,0x23a852e9c43bcaebL,"kindName"),(item).getName());
              SPropertyOperations.set(createBreakpointOperation,MetaAdapterFactory.getProperty(0xfbc142795e2a4c87L,0xa5d15f7061e6c456L,0x23a852e9c43bcae9L,0x23a852e9c43bcaecL,"kindPresentation"),(item).getPresentation());
              return createBreakpointOperation;
            }
            public String getMatchingText(            String pattern){
              return (item).getPresentation();
            }
            public String getVisibleMatchingText(            String pattern){
              return getMatchingText(pattern);
            }
            public String getDescriptionText(            String pattern){
              return "create " + (item).getPresentation();
            }
          }
);
        }
      }
    }
  }
  return result;
}
