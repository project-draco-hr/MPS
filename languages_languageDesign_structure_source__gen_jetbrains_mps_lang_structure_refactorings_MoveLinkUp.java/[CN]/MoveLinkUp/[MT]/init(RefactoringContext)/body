{
  final Wrappers._T<SNode> concept=new Wrappers._T<SNode>();
  ModelAccess modelAccess=refactoringContext.getRepository().getModelAccess();
  modelAccess.runReadAction(new Runnable(){
    public void run(){
      concept.value=SNodeOperations.getNodeAncestor(refactoringContext.getSelectedNode(),MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"),false,false);
    }
  }
);
  if ((concept.value == null)) {
    return false;
  }
  if (!(((Boolean)refactoringContext.getParameter("mergeLinks")))) {
    refactoringContext.setParameter("linkToReplace",null);
  }
  modelAccess.runReadAction(new Runnable(){
    public void run(){
      refactoringContext.setParameter("linkToReplace",RefUtil.findLinkToMerge(((SNode)refactoringContext.getParameter("targetConcept")),refactoringContext.getSelectedNode()));
    }
  }
);
  return true;
}
