{
  final Wrappers._T<SNode> concept=new Wrappers._T<SNode>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      concept.value=SNodeOperations.getAncestor(refactoringContext.getSelectedNode(),"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration",false,false);
    }
  }
);
  if ((concept.value == null)) {
    return false;
  }
  if (!(MoveLinkUp.this.ask(refactoringContext))) {
    return false;
  }
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      refactoringContext.setParameter("linkToReplace",RefUtil.findLinkToMerge(((SNode)refactoringContext.getParameter("targetConcept")),refactoringContext.getSelectedNode()));
    }
  }
);
  if ((((SNode)refactoringContext.getParameter("linkToReplace")) != null)) {
    if (!(MoveLinkUp.this.askBool(refactoringContext,"Merge to link with the same name?","mergeLinks",new MoveLinkUp_mergeLinks_Settings(refactoringContext)))) {
      return false;
    }
    if (!(((Boolean)refactoringContext.getParameter("mergeLinks")))) {
      refactoringContext.setParameter("linkToReplace",null);
    }
  }
  return true;
}
