{
  newEriByOldEriMap.put("method ([Classifier]NamedNodeMap).([InstanceMethodDeclaration]getLength() : (jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int))","method ([Classifier]NamedNodeMap).([InstanceMethodDeclaration]getLength())");
  newEriByOldEriMap.put("method ([Classifier]SNode).([InstanceMethodDeclaration]getId() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]SNode).([InstanceMethodDeclaration]getId())");
  newEriByOldEriMap.put("static method ([Classifier]Assert).([StaticMethodDeclaration]assertEquals((jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int), (jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int)) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","static method ([Classifier]Assert).([StaticMethodDeclaration]assertEquals((jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int), (jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int)))");
  newEriByOldEriMap.put("static method ([Classifier]Assert).([StaticMethodDeclaration]assertEquals((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Object]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Object])) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","static method ([Classifier]Assert).([StaticMethodDeclaration]assertEquals((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Object]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Object])))");
  newEriByOldEriMap.put("method ([Classifier]Document).([InstanceMethodDeclaration]createAttribute((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Attr]))","method ([Classifier]Document).([InstanceMethodDeclaration]createAttribute((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("method ([Classifier]DocumentBuilder).([InstanceMethodDeclaration]newDocument() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Document]))","method ([Classifier]DocumentBuilder).([InstanceMethodDeclaration]newDocument())");
  newEriByOldEriMap.put("method ([Classifier]ITemplateGenerator).([InstanceMethodDeclaration]findOutputNodeByInputNodeAndMappingName((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode]))","method ([Classifier]ITemplateGenerator).([InstanceMethodDeclaration]findOutputNodeByInputNodeAndMappingName((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("method ([Classifier]ITransformation).([InstanceMethodDeclaration]getTemplates() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [ITemplates, <any_, any_, any_>]))","method ([Classifier]ITransformation).([InstanceMethodDeclaration]getTemplates())");
  newEriByOldEriMap.put("method ([Classifier]File).([InstanceMethodDeclaration]getPath() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]File).([InstanceMethodDeclaration]getPath())");
  newEriByOldEriMap.put("method ([Classifier]List).([InstanceMethodDeclaration]contains((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Object])) : (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean))","method ([Classifier]List).([InstanceMethodDeclaration]contains((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Object])))");
  newEriByOldEriMap.put("method ([Classifier]Attr).([InstanceMethodDeclaration]getValue() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]Attr).([InstanceMethodDeclaration]getValue())");
  newEriByOldEriMap.put("method ([Classifier]SModelDescriptor).([InstanceMethodDeclaration]getSModel() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SModel]))","method ([Classifier]SModelDescriptor).([InstanceMethodDeclaration]getSModel())");
  newEriByOldEriMap.put("static method ([Classifier]QueriesUtil).([StaticMethodDeclaration]findMatchingTemplates((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [IScope])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [List, <jetbrains.mps.baseLanguage.types.classifier [SNode]>]))","static method ([Classifier]QueriesUtil).([StaticMethodDeclaration]findMatchingTemplates((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [IScope])))");
  newEriByOldEriMap.put("method ([Classifier]Entity).([InstanceMethodDeclaration]getId() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [EntityId]))","method ([Classifier]Entity).([InstanceMethodDeclaration]getId())");
  newEriByOldEriMap.put("method ([Classifier]SNode).([InstanceMethodDeclaration]getName() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]SNode).([InstanceMethodDeclaration]getName())");
  newEriByOldEriMap.put("static method ([Classifier]SModelUtil_new).([StaticMethodDeclaration]findNodeByFQName((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Class, <jetbrains.mps.baseLanguage.types.classifier [Object]>]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [IScope])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Object]))","static method ([Classifier]SModelUtil_new).([StaticMethodDeclaration]findNodeByFQName((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Class, <jetbrains.mps.baseLanguage.types.classifier [Object]>]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [IScope])))");
  newEriByOldEriMap.put("method ([Classifier]INodeBuilder).([InstanceMethodDeclaration]getTargetNode() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode]))","method ([Classifier]INodeBuilder).([InstanceMethodDeclaration]getTargetNode())");
  newEriByOldEriMap.put("static method ([Classifier]XMLAssert).([StaticMethodDeclaration]assertXMLEqual((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Diff]), (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean)) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","static method ([Classifier]XMLAssert).([StaticMethodDeclaration]assertXMLEqual((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Diff]), (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean)))");
  newEriByOldEriMap.put("method ([Classifier]Set).([InstanceMethodDeclaration]clear() : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","method ([Classifier]Set).([InstanceMethodDeclaration]clear())");
  newEriByOldEriMap.put("method ([Classifier]DocumentBuilder).([InstanceMethodDeclaration]parse((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Document]))","method ([Classifier]DocumentBuilder).([InstanceMethodDeclaration]parse((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("method ([Classifier]EditorContext).([InstanceMethodDeclaration]getSelectedNode() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode]))","method ([Classifier]EditorContext).([InstanceMethodDeclaration]getSelectedNode())");
  newEriByOldEriMap.put("method ([Classifier]String).([InstanceMethodDeclaration]length() : (jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int))","method ([Classifier]String).([InstanceMethodDeclaration]length())");
  newEriByOldEriMap.put("method ([Classifier]TransformerFactory).([InstanceMethodDeclaration]newTransformer() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Transformer]))","method ([Classifier]TransformerFactory).([InstanceMethodDeclaration]newTransformer())");
  newEriByOldEriMap.put("static method ([Classifier]String).([StaticMethodDeclaration]valueOf((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Object])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","static method ([Classifier]String).([StaticMethodDeclaration]valueOf((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Object])))");
  newEriByOldEriMap.put("method ([Classifier]PrintStream).([InstanceMethodDeclaration]println() : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","method ([Classifier]PrintStream).([InstanceMethodDeclaration]println())");
  newEriByOldEriMap.put("method ([Classifier]StringBuilder).([InstanceMethodDeclaration]toString() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]StringBuilder).([InstanceMethodDeclaration]toString())");
  newEriByOldEriMap.put("method ([Classifier]Node).([InstanceMethodDeclaration]toHtml() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]Node).([InstanceMethodDeclaration]toHtml())");
  newEriByOldEriMap.put("method ([Classifier]Tag).([InstanceMethodDeclaration]getTagName() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]Tag).([InstanceMethodDeclaration]getTagName())");
  newEriByOldEriMap.put("method ([Classifier]List).([InstanceMethodDeclaration]add((jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any)) : (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean))","method ([Classifier]List).([InstanceMethodDeclaration]add((jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any)))");
  newEriByOldEriMap.put("method ([Classifier]String).([InstanceMethodDeclaration]hashCode() : (jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int))","method ([Classifier]String).([InstanceMethodDeclaration]hashCode())");
  newEriByOldEriMap.put("static method ([Classifier]BaseAdapter).([StaticMethodDeclaration]fromAdapter((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [BaseAdapter])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode]))","static method ([Classifier]BaseAdapter).([StaticMethodDeclaration]fromAdapter((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [BaseAdapter])))");
  newEriByOldEriMap.put("method ([Classifier]ITransformation).([InstanceMethodDeclaration]getContext() : (jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any))","method ([Classifier]ITransformation).([InstanceMethodDeclaration]getContext())");
  newEriByOldEriMap.put("method ([Classifier]Boolean).([InstanceMethodDeclaration]toString() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]Boolean).([InstanceMethodDeclaration]toString())");
  newEriByOldEriMap.put("method ([Classifier]StringBuffer).([InstanceMethodDeclaration]append((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [CharSequence])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [StringBuffer]))","method ([Classifier]StringBuffer).([InstanceMethodDeclaration]append((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [CharSequence])))");
  newEriByOldEriMap.put("method ([Classifier]BaseAdapter).([InstanceMethodDeclaration]getNode() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode]))","method ([Classifier]BaseAdapter).([InstanceMethodDeclaration]getNode())");
  newEriByOldEriMap.put("method ([Classifier]DocumentBuilderFactory).([InstanceMethodDeclaration]newDocumentBuilder() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [DocumentBuilder]))","method ([Classifier]DocumentBuilderFactory).([InstanceMethodDeclaration]newDocumentBuilder())");
  newEriByOldEriMap.put("method ([Classifier]NodeList).([InstanceMethodDeclaration]getLength() : (jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int))","method ([Classifier]NodeList).([InstanceMethodDeclaration]getLength())");
  newEriByOldEriMap.put("method ([Classifier]ITemplateGenerator).([InstanceMethodDeclaration]findNodeBuilderForSource((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [INodeBuilder]))","method ([Classifier]ITemplateGenerator).([InstanceMethodDeclaration]findNodeBuilderForSource((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("method ([Classifier]String).([InstanceMethodDeclaration]equals((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Object])) : (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean))","method ([Classifier]String).([InstanceMethodDeclaration]equals((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Object])))");
  newEriByOldEriMap.put("method ([Classifier]Map).([InstanceMethodDeclaration]put((jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any), (jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any)) : (jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any))","method ([Classifier]Map).([InstanceMethodDeclaration]put((jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any), (jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any)))");
  newEriByOldEriMap.put("method ([Classifier]ITransformation).([InstanceMethodDeclaration]appendChild((jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any)) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","method ([Classifier]ITransformation).([InstanceMethodDeclaration]appendChild((jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any)))");
  newEriByOldEriMap.put("method ([Classifier]AbstractTemplates).([InstanceMethodDeclaration]registerTemplate((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [ITemplate, <any_, any_, any_>])) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","method ([Classifier]AbstractTemplates).([InstanceMethodDeclaration]registerTemplate((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [ITemplate, <any_, any_, any_>])))");
  newEriByOldEriMap.put("method ([Classifier]LocalDate).([InstanceMethodDeclaration]toDateTimeAtMidnight() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [DateTime]))","method ([Classifier]LocalDate).([InstanceMethodDeclaration]toDateTimeAtMidnight())");
  newEriByOldEriMap.put("method ([Classifier]PrintStream).([InstanceMethodDeclaration]println((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Object])) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","method ([Classifier]PrintStream).([InstanceMethodDeclaration]println((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Object])))");
  newEriByOldEriMap.put("method ([Classifier]Element).([InstanceMethodDeclaration]setAttributeNode((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Attr])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Attr]))","method ([Classifier]Element).([InstanceMethodDeclaration]setAttributeNode((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Attr])))");
  newEriByOldEriMap.put("method ([Classifier]Element).([InstanceMethodDeclaration]getTagName() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]Element).([InstanceMethodDeclaration]getTagName())");
  newEriByOldEriMap.put("method ([Classifier]Object).([InstanceMethodDeclaration]getClass() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Class, <jetbrains.mps.baseLanguage.types.classifier [Object]>]))","method ([Classifier]Object).([InstanceMethodDeclaration]getClass())");
  newEriByOldEriMap.put("method ([Classifier]Throwable).([InstanceMethodDeclaration]printStackTrace() : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","method ([Classifier]Throwable).([InstanceMethodDeclaration]printStackTrace())");
  newEriByOldEriMap.put("method ([Classifier]Collection).([InstanceMethodDeclaration]add((jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any)) : (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean))","method ([Classifier]Collection).([InstanceMethodDeclaration]add((jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any)))");
  newEriByOldEriMap.put("method ([Classifier]AbstractMaker).([InstanceMethodDeclaration]createTransformation((jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any)) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [ITransformation, <any_, any_, any_>]))","method ([Classifier]AbstractMaker).([InstanceMethodDeclaration]createTransformation((jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any)))");
  newEriByOldEriMap.put("method ([Classifier]Node).([InstanceMethodDeclaration]replaceChild((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node]))","method ([Classifier]Node).([InstanceMethodDeclaration]replaceChild((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node])))");
  newEriByOldEriMap.put("static method ([Classifier]Calendar).([StaticMethodDeclaration]getInstance() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Calendar]))","static method ([Classifier]Calendar).([StaticMethodDeclaration]getInstance())");
  newEriByOldEriMap.put("method ([Classifier]Attr).([InstanceMethodDeclaration]getName() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]Attr).([InstanceMethodDeclaration]getName())");
  newEriByOldEriMap.put("static method ([Classifier]SModelUtil).([StaticMethodDeclaration]allChildren((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Class])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [List, <jetbrains.mps.baseLanguage.types.classifier [Object]>]))","static method ([Classifier]SModelUtil).([StaticMethodDeclaration]allChildren((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Class])))");
  newEriByOldEriMap.put("method ([Classifier]NamedNodeMap).([InstanceMethodDeclaration]setNamedItem((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node]))","method ([Classifier]NamedNodeMap).([InstanceMethodDeclaration]setNamedItem((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node])))");
  newEriByOldEriMap.put("method ([Classifier]File).([InstanceMethodDeclaration]isFile() : (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean))","method ([Classifier]File).([InstanceMethodDeclaration]isFile())");
  newEriByOldEriMap.put("static method ([Classifier]Arrays).([StaticMethodDeclaration]asList((jetbrains.mps.baseLanguage.types.array/jetbrains.mps.baseLanguage.types.array [-1, jetbrains.mps.baseLanguage.types.classifier [Object]])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [List, <jetbrains.mps.baseLanguage.types.classifier [Object]>]))","static method ([Classifier]Arrays).([StaticMethodDeclaration]asList((jetbrains.mps.baseLanguage.types.array/jetbrains.mps.baseLanguage.types.array [-1, jetbrains.mps.baseLanguage.types.classifier [Object]])))");
  newEriByOldEriMap.put("method ([Classifier]String).([InstanceMethodDeclaration]endsWith((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean))","method ([Classifier]String).([InstanceMethodDeclaration]endsWith((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("method ([Classifier]GenerationSessionContext).([InstanceMethodDeclaration]createUniqueName((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]GenerationSessionContext).([InstanceMethodDeclaration]createUniqueName((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("method ([Classifier]StringBuilder).([InstanceMethodDeclaration]append((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [CharSequence])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [AbstractStringBuilder]))","method ([Classifier]StringBuilder).([InstanceMethodDeclaration]append((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [CharSequence])))");
  newEriByOldEriMap.put("method ([Classifier]NodeList).([InstanceMethodDeclaration]size() : (jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int))","method ([Classifier]NodeList).([InstanceMethodDeclaration]size())");
  newEriByOldEriMap.put("method ([Classifier]Node).([InstanceMethodDeclaration]getChildNodes() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [NodeList]))","method ([Classifier]Node).([InstanceMethodDeclaration]getChildNodes())");
  newEriByOldEriMap.put("method ([Classifier]StringWriter).([InstanceMethodDeclaration]getBuffer() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [StringBuffer]))","method ([Classifier]StringWriter).([InstanceMethodDeclaration]getBuffer())");
  newEriByOldEriMap.put("method ([Classifier]CharSequence).([InstanceMethodDeclaration]charAt((jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int)) : (jetbrains.mps.baseLanguage.types.char/jetbrains.mps.baseLanguage.types.char))","method ([Classifier]CharSequence).([InstanceMethodDeclaration]charAt((jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int)))");
  newEriByOldEriMap.put("method ([Classifier]Map).([InstanceMethodDeclaration]get((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Object])) : (jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any))","method ([Classifier]Map).([InstanceMethodDeclaration]get((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Object])))");
  newEriByOldEriMap.put("method ([Classifier]List).([InstanceMethodDeclaration]isEmpty() : (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean))","method ([Classifier]List).([InstanceMethodDeclaration]isEmpty())");
  newEriByOldEriMap.put("method ([Classifier]NodeList).([InstanceMethodDeclaration]elementAt((jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int)) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node]))","method ([Classifier]NodeList).([InstanceMethodDeclaration]elementAt((jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int)))");
  newEriByOldEriMap.put("method ([Classifier]HttpSession).([InstanceMethodDeclaration]getId() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]HttpSession).([InstanceMethodDeclaration]getId())");
  newEriByOldEriMap.put("method ([Classifier]Node).([InstanceMethodDeclaration]getNodeValue() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]Node).([InstanceMethodDeclaration]getNodeValue())");
  newEriByOldEriMap.put("method ([Classifier]IZeroTransformation).([InstanceMethodDeclaration]make() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Iterable, <any_>]))","method ([Classifier]IZeroTransformation).([InstanceMethodDeclaration]make())");
  newEriByOldEriMap.put("method ([Classifier]String).([InstanceMethodDeclaration]charAt((jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int)) : (jetbrains.mps.baseLanguage.types.char/jetbrains.mps.baseLanguage.types.char))","method ([Classifier]String).([InstanceMethodDeclaration]charAt((jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int)))");
  newEriByOldEriMap.put("static method ([Classifier]WQParser).([StaticMethodDeclaration]parse((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node]))","static method ([Classifier]WQParser).([StaticMethodDeclaration]parse((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("method ([Classifier]Node).([InstanceMethodDeclaration]getParentNode() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node]))","method ([Classifier]Node).([InstanceMethodDeclaration]getParentNode())");
  newEriByOldEriMap.put("method ([Classifier]List).([InstanceMethodDeclaration]addAll((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Collection, <? extends jetbrains.mps.baseLanguage.types.any>])) : (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean))","method ([Classifier]List).([InstanceMethodDeclaration]addAll((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Collection, <? extends jetbrains.mps.baseLanguage.types.any>])))");
  newEriByOldEriMap.put("method ([Classifier]Object).([InstanceMethodDeclaration]clone() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Object]))","method ([Classifier]Object).([InstanceMethodDeclaration]clone())");
  newEriByOldEriMap.put("method ([Classifier]AbstractDateTime).([InstanceMethodDeclaration]toString((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]AbstractDateTime).([InstanceMethodDeclaration]toString((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("method ([Classifier]HttpServletRequest).([InstanceMethodDeclaration]getSession() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [HttpSession]))","method ([Classifier]HttpServletRequest).([InstanceMethodDeclaration]getSession())");
  newEriByOldEriMap.put("method ([Classifier]StringBuilder).([InstanceMethodDeclaration]append((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [CharSequence])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [StringBuilder]))","method ([Classifier]StringBuilder).([InstanceMethodDeclaration]append((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [CharSequence])))");
  newEriByOldEriMap.put("method ([Classifier]Node).([InstanceMethodDeclaration]insertBefore((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node]))","method ([Classifier]Node).([InstanceMethodDeclaration]insertBefore((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node])))");
  newEriByOldEriMap.put("method ([Classifier]Stack).([InstanceMethodDeclaration]push((jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any)) : (jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any))","method ([Classifier]Stack).([InstanceMethodDeclaration]push((jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any)))");
  newEriByOldEriMap.put("method ([Classifier]String).([InstanceMethodDeclaration]getBytes() : (jetbrains.mps.baseLanguage.types.array/jetbrains.mps.baseLanguage.types.array [-1, byte_]))","method ([Classifier]String).([InstanceMethodDeclaration]getBytes())");
  newEriByOldEriMap.put("method ([Classifier]String).([InstanceMethodDeclaration]substring((jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int)) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]String).([InstanceMethodDeclaration]substring((jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int)))");
  newEriByOldEriMap.put("static method ([Classifier]DocumentBuilderFactory).([StaticMethodDeclaration]newInstance() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [DocumentBuilderFactory]))","static method ([Classifier]DocumentBuilderFactory).([StaticMethodDeclaration]newInstance())");
  newEriByOldEriMap.put("method ([Classifier]SNode).([InstanceMethodDeclaration]getParent() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode]))","method ([Classifier]SNode).([InstanceMethodDeclaration]getParent())");
  newEriByOldEriMap.put("method ([Classifier]Object).([InstanceMethodDeclaration]equals((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Object])) : (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean))","method ([Classifier]Object).([InstanceMethodDeclaration]equals((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Object])))");
  newEriByOldEriMap.put("static method ([Classifier]Collections).([StaticMethodDeclaration]singletonList((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Object])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [List, <jetbrains.mps.baseLanguage.types.classifier [Object]>]))","static method ([Classifier]Collections).([StaticMethodDeclaration]singletonList((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Object])))");
  newEriByOldEriMap.put("method ([Classifier]Set).([InstanceMethodDeclaration]containsAll((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Collection])) : (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean))","method ([Classifier]Set).([InstanceMethodDeclaration]containsAll((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Collection])))");
  newEriByOldEriMap.put("method ([Classifier]DateTime).([InstanceMethodDeclaration]toLocalDate() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [LocalDate]))","method ([Classifier]DateTime).([InstanceMethodDeclaration]toLocalDate())");
  newEriByOldEriMap.put("method ([Classifier]SNode).([InstanceMethodDeclaration]getModel() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SModel]))","method ([Classifier]SNode).([InstanceMethodDeclaration]getModel())");
  newEriByOldEriMap.put("method ([Classifier]List).([InstanceMethodDeclaration]get((jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int)) : (jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any))","method ([Classifier]List).([InstanceMethodDeclaration]get((jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int)))");
  newEriByOldEriMap.put("method ([Classifier]SModel).([InstanceMethodDeclaration]addRoot((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode])) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","method ([Classifier]SModel).([InstanceMethodDeclaration]addRoot((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode])))");
  newEriByOldEriMap.put("method ([Classifier]Node).([InstanceMethodDeclaration]getNodeName() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]Node).([InstanceMethodDeclaration]getNodeName())");
  newEriByOldEriMap.put("method ([Classifier]Object).([InstanceMethodDeclaration]notifyAll() : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","method ([Classifier]Object).([InstanceMethodDeclaration]notifyAll())");
  newEriByOldEriMap.put("method ([Classifier]Node).([InstanceMethodDeclaration]getAttributes() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [NamedNodeMap]))","method ([Classifier]Node).([InstanceMethodDeclaration]getAttributes())");
  newEriByOldEriMap.put("static method ([Classifier]Class).([StaticMethodDeclaration]forName((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Class]))","static method ([Classifier]Class).([StaticMethodDeclaration]forName((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("method ([Classifier]AbstractTemplates).([InstanceMethodDeclaration]createTransformation((jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any)) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [ITransformation, <any_, any_, any_>]))","method ([Classifier]AbstractTemplates).([InstanceMethodDeclaration]createTransformation((jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any)))");
  newEriByOldEriMap.put("method ([Classifier]SNode).([InstanceMethodDeclaration]getConceptDeclarationAdapter((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [IScope])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [ConceptDeclaration]))","method ([Classifier]SNode).([InstanceMethodDeclaration]getConceptDeclarationAdapter((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [IScope])))");
  newEriByOldEriMap.put("method ([Classifier]StringBuffer).([InstanceMethodDeclaration]toString() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]StringBuffer).([InstanceMethodDeclaration]toString())");
  newEriByOldEriMap.put("method ([Classifier]List).([InstanceMethodDeclaration]size() : (jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int))","method ([Classifier]List).([InstanceMethodDeclaration]size())");
  newEriByOldEriMap.put("method ([ClassConcept]PrintStream).([InstanceMethodDeclaration]print((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","method ([Classifier]PrintStream).([InstanceMethodDeclaration]print((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("static method ([Classifier]UrlUtil).([StaticMethodDeclaration]getGlobalBaseUrl() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","static method ([Classifier]UrlUtil).([StaticMethodDeclaration]getGlobalBaseUrl())");
  newEriByOldEriMap.put("method ([Classifier]SNode).([InstanceMethodDeclaration]removeChild((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode])) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","method ([Classifier]SNode).([InstanceMethodDeclaration]removeChild((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode])))");
  newEriByOldEriMap.put("method ([Classifier]Cardinality).([InstanceMethodDeclaration]getValueAsString() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]Cardinality).([InstanceMethodDeclaration]getValueAsString())");
  newEriByOldEriMap.put("static method ([Classifier]TransformerFactory).([StaticMethodDeclaration]newInstance() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [TransformerFactory]))","static method ([Classifier]TransformerFactory).([StaticMethodDeclaration]newInstance())");
  newEriByOldEriMap.put("static method ([Classifier]BaseApplication).([StaticMethodDeclaration]getRequest() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [HttpServletRequest]))","static method ([Classifier]BaseApplication).([StaticMethodDeclaration]getRequest())");
  newEriByOldEriMap.put("method ([Classifier]ITransformation).([InstanceMethodDeclaration]applyTemplates((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Iterable, <any_>])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Iterable, <any_>]))","method ([Classifier]ITransformation).([InstanceMethodDeclaration]applyTemplates((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Iterable, <any_>])))");
  newEriByOldEriMap.put("method ([Classifier]ITransformation).([InstanceMethodDeclaration]addContent((jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [IContentClosure, <any_, any_, any_>])) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","method ([Classifier]ITransformation).([InstanceMethodDeclaration]addContent((jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [IContentClosure, <any_, any_, any_>])))");
  newEriByOldEriMap.put("static method ([Classifier]NameUtil).([StaticMethodDeclaration]nodeFQName((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","static method ([Classifier]NameUtil).([StaticMethodDeclaration]nodeFQName((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode])))");
  newEriByOldEriMap.put("static method ([Classifier]SLinkOperations).([StaticMethodDeclaration]getTargets((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]), (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean)) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [List, <jetbrains.mps.baseLanguage.types.classifier [SNode]>]))","static method ([Classifier]SLinkOperations).([StaticMethodDeclaration]getTargets((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]), (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean)))");
  newEriByOldEriMap.put("method ([Classifier]NamedNodeMap).([InstanceMethodDeclaration]removeNamedItem((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node]))","method ([Classifier]NamedNodeMap).([InstanceMethodDeclaration]removeNamedItem((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("method ([Classifier]NodeList).([InstanceMethodDeclaration]item((jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int)) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node]))","method ([Classifier]NodeList).([InstanceMethodDeclaration]item((jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int)))");
  newEriByOldEriMap.put("method ([Classifier]NodeList).([InstanceMethodDeclaration]toHtml() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]NodeList).([InstanceMethodDeclaration]toHtml())");
  newEriByOldEriMap.put("method ([Classifier]Attr).([InstanceMethodDeclaration]setValue((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","method ([Classifier]Attr).([InstanceMethodDeclaration]setValue((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("method ([Classifier]File).([InstanceMethodDeclaration]getParentFile() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [File]))","method ([Classifier]File).([InstanceMethodDeclaration]getParentFile())");
  newEriByOldEriMap.put("static method ([Classifier]Assert).([StaticMethodDeclaration]assertEquals((jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean), (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean)) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","static method ([Classifier]Assert).([StaticMethodDeclaration]assertEquals((jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean), (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean)))");
  newEriByOldEriMap.put("method ([Classifier]ITransformation).([InstanceMethodDeclaration]output((jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any)) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","method ([Classifier]ITransformation).([InstanceMethodDeclaration]output((jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any)))");
  newEriByOldEriMap.put("static method ([Classifier]Annotation_AnnotationLink).([StaticMethodDeclaration]setAnnotation((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Simple1]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Annotator])) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","static method ([Classifier]Annotation_AnnotationLink).([StaticMethodDeclaration]setAnnotation((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Simple1]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Annotator])))");
  newEriByOldEriMap.put("method ([Classifier]AbstractMaker).([InstanceMethodDeclaration]registerMakerTemplate((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [ITemplate, <any_, any_, any_>])) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","method ([Classifier]AbstractMaker).([InstanceMethodDeclaration]registerMakerTemplate((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [ITemplate, <any_, any_, any_>])))");
  newEriByOldEriMap.put("method ([Classifier]Node).([InstanceMethodDeclaration]getParent() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node]))","method ([Classifier]Node).([InstanceMethodDeclaration]getParent())");
  newEriByOldEriMap.put("method ([Classifier]Integer).([InstanceMethodDeclaration]intValue() : (jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int))","method ([Classifier]Integer).([InstanceMethodDeclaration]intValue())");
  newEriByOldEriMap.put("method ([Classifier]SNode).([InstanceMethodDeclaration]toString() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]SNode).([InstanceMethodDeclaration]toString())");
  newEriByOldEriMap.put("method ([Classifier]SModel).([InstanceMethodDeclaration]addLanguage((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","method ([Classifier]SModel).([InstanceMethodDeclaration]addLanguage((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("method ([Classifier]NamedNodeMap).([InstanceMethodDeclaration]item((jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int)) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node]))","method ([Classifier]NamedNodeMap).([InstanceMethodDeclaration]item((jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int)))");
  newEriByOldEriMap.put("method ([Classifier]File).([InstanceMethodDeclaration]isDirectory() : (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean))","method ([Classifier]File).([InstanceMethodDeclaration]isDirectory())");
  newEriByOldEriMap.put("method ([Classifier]File).([InstanceMethodDeclaration]getName() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]File).([InstanceMethodDeclaration]getName())");
  newEriByOldEriMap.put("static method ([Classifier]SModelUtil).([StaticMethodDeclaration]getConceptDeclaration((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [IScope])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [ConceptDeclaration]))","static method ([Classifier]SModelUtil).([StaticMethodDeclaration]getConceptDeclaration((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SNode]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [IScope])))");
  newEriByOldEriMap.put("method ([Classifier]Node).([InstanceMethodDeclaration]appendChild((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node]))","method ([Classifier]Node).([InstanceMethodDeclaration]appendChild((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node])))");
  newEriByOldEriMap.put("static method ([Classifier]Annotation2_AnnotationLink).([StaticMethodDeclaration]setAnnotation2((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Simple1]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Annotator2])) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","static method ([Classifier]Annotation2_AnnotationLink).([StaticMethodDeclaration]setAnnotation2((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Simple1]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Annotator2])))");
  newEriByOldEriMap.put("method ([Classifier]Document).([InstanceMethodDeclaration]createElement((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Element]))","method ([Classifier]Document).([InstanceMethodDeclaration]createElement((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("method ([Classifier]String).([InstanceMethodDeclaration]matches((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean))","method ([Classifier]String).([InstanceMethodDeclaration]matches((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("method ([Classifier]Object).([InstanceMethodDeclaration]toString() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]Object).([InstanceMethodDeclaration]toString())");
  newEriByOldEriMap.put("method ([Classifier]Node).([InstanceMethodDeclaration]getChildren() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [NodeList]))","method ([Classifier]Node).([InstanceMethodDeclaration]getChildren())");
  newEriByOldEriMap.put("method ([Classifier]Element).([InstanceMethodDeclaration]getElementsByTagName((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [NodeList]))","method ([Classifier]Element).([InstanceMethodDeclaration]getElementsByTagName((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("method ([Classifier]Node).([InstanceMethodDeclaration]removeChild((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node]))","method ([Classifier]Node).([InstanceMethodDeclaration]removeChild((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Node])))");
  newEriByOldEriMap.put("method ([Classifier]File).([InstanceMethodDeclaration]listFiles() : (jetbrains.mps.baseLanguage.types.array/jetbrains.mps.baseLanguage.types.array [-1, jetbrains.mps.baseLanguage.types.classifier [File]]))","method ([Classifier]File).([InstanceMethodDeclaration]listFiles())");
  newEriByOldEriMap.put("method ([Classifier]PrintStream).([InstanceMethodDeclaration]println((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","method ([Classifier]PrintStream).([InstanceMethodDeclaration]println((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("method ([Classifier]PrintStream).([InstanceMethodDeclaration]print((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Object])) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","method ([Classifier]PrintStream).([InstanceMethodDeclaration]print((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Object])))");
  newEriByOldEriMap.put("method ([Classifier]ITransformation).([InstanceMethodDeclaration]getNodeFactories() : (jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any))","method ([Classifier]ITransformation).([InstanceMethodDeclaration]getNodeFactories())");
  newEriByOldEriMap.put("method ([Classifier]ITemplates).([InstanceMethodDeclaration]selectorByName((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [ITemplateSelector, <any_, any_, any_>]))","method ([Classifier]ITemplates).([InstanceMethodDeclaration]selectorByName((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("method ([Classifier]IOperationContext).([InstanceMethodDeclaration]getScope() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [IScope]))","method ([Classifier]IOperationContext).([InstanceMethodDeclaration]getScope())");
  newEriByOldEriMap.put("method ([Classifier]DateTime).([InstanceMethodDeclaration]minusDays((jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int)) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [DateTime]))","method ([Classifier]DateTime).([InstanceMethodDeclaration]minusDays((jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int)))");
  newEriByOldEriMap.put("static method ([Classifier]Assert).([StaticMethodDeclaration]assertEquals((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","static method ([Classifier]Assert).([StaticMethodDeclaration]assertEquals((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("static method ([Classifier]Integer).([StaticMethodDeclaration]valueOf((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Integer]))","static method ([Classifier]Integer).([StaticMethodDeclaration]valueOf((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("static method ([Classifier]Annotation_AnnotationLink).([StaticMethodDeclaration]getAnnotation((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Simple1])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Annotator]))","static method ([Classifier]Annotation_AnnotationLink).([StaticMethodDeclaration]getAnnotation((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Simple1])))");
  newEriByOldEriMap.put("method ([Classifier]EntityId).([InstanceMethodDeclaration]toString() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]EntityId).([InstanceMethodDeclaration]toString())");
  newEriByOldEriMap.put("method ([Classifier]String).([InstanceMethodDeclaration]substring((jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int), (jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int)) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]String).([InstanceMethodDeclaration]substring((jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int), (jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int)))");
  newEriByOldEriMap.put("static method ([Classifier]Annotation2_AnnotationLink).([StaticMethodDeclaration]getAnnotation2((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Simple1])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Annotator2]))","static method ([Classifier]Annotation2_AnnotationLink).([StaticMethodDeclaration]getAnnotation2((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Simple1])))");
  newEriByOldEriMap.put("static method ([Classifier]Integer).([StaticMethodDeclaration]parseInt((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int))","static method ([Classifier]Integer).([StaticMethodDeclaration]parseInt((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("method ([Classifier]Set).([InstanceMethodDeclaration]add((jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any)) : (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean))","method ([Classifier]Set).([InstanceMethodDeclaration]add((jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any)))");
  newEriByOldEriMap.put("static method ([Classifier]JavaNameUtil).([StaticMethodDeclaration]fqClassName((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SModel]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","static method ([Classifier]JavaNameUtil).([StaticMethodDeclaration]fqClassName((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [SModel]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("method ([Classifier]Transformer).([InstanceMethodDeclaration]transform((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Source]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Result])) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","method ([Classifier]Transformer).([InstanceMethodDeclaration]transform((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Source]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Result])))");
  newEriByOldEriMap.put("method ([Classifier]Stack).([InstanceMethodDeclaration]pop() : (jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any))","method ([Classifier]Stack).([InstanceMethodDeclaration]pop())");
  newEriByOldEriMap.put("method ([Classifier]ITemplateGenerator).([InstanceMethodDeclaration]getGeneratorSessionContext() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [GenerationSessionContext]))","method ([Classifier]ITemplateGenerator).([InstanceMethodDeclaration]getGeneratorSessionContext())");
  newEriByOldEriMap.put("method ([Classifier]String).([InstanceMethodDeclaration]startsWith((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean))","method ([Classifier]String).([InstanceMethodDeclaration]startsWith((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("method ([Classifier]String).([InstanceMethodDeclaration]toLowerCase() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]String).([InstanceMethodDeclaration]toLowerCase())");
  newEriByOldEriMap.put("method ([Classifier]Boolean).([InstanceMethodDeclaration]booleanValue() : (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean))","method ([Classifier]Boolean).([InstanceMethodDeclaration]booleanValue())");
  newEriByOldEriMap.put("method ([Classifier]Vector).([InstanceMethodDeclaration]isEmpty() : (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean))","method ([Classifier]Vector).([InstanceMethodDeclaration]isEmpty())");
  newEriByOldEriMap.put("method ([Classifier]BaseLexer).([InstanceMethodDeclaration]addLexem((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]), (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","method ([Classifier]BaseLexer).([InstanceMethodDeclaration]addLexem((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]), (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("static method ([Classifier]BaseParser).([StaticMethodDeclaration]pushTreeListBack((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [LexemStream]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [List, <jetbrains.mps.baseLanguage.types.classifier [AbstractNode]>])) : (jetbrains.mps.baseLanguage.types.void/jetbrains.mps.baseLanguage.types.void))","static method ([Classifier]BaseParser).([StaticMethodDeclaration]pushTreeListBack((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [LexemStream]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [List, <jetbrains.mps.baseLanguage.types.classifier [AbstractNode]>])))");
  newEriByOldEriMap.put("static method ([Classifier]Integer).([StaticMethodDeclaration]toString((jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int)) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","static method ([Classifier]Integer).([StaticMethodDeclaration]toString((jetbrains.mps.baseLanguage.types.int/jetbrains.mps.baseLanguage.types.int)))");
  newEriByOldEriMap.put("method ([Classifier]String).([InstanceMethodDeclaration]toString() : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String]))","method ([Classifier]String).([InstanceMethodDeclaration]toString())");
  newEriByOldEriMap.put("method ([Classifier]BaseLexer).([InstanceMethodDeclaration]nextLexemExt((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [LexerState])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Lexem]))","method ([Classifier]BaseLexer).([InstanceMethodDeclaration]nextLexemExt((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [LexerState])))");
  newEriByOldEriMap.put("method ([Classifier]Vector).([InstanceMethodDeclaration]add((jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any)) : (jetbrains.mps.baseLanguage.types.boolean/jetbrains.mps.baseLanguage.types.boolean))","method ([Classifier]Vector).([InstanceMethodDeclaration]add((jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any)))");
  newEriByOldEriMap.put("static method ([Classifier]BaseParser).([StaticMethodDeclaration]readTerm((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [LexemStream]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [AbstractNode]))","static method ([Classifier]BaseParser).([StaticMethodDeclaration]readTerm((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [LexemStream]), (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [String])))");
  newEriByOldEriMap.put("method ([Classifier]LexemStream).([InstanceMethodDeclaration]nextLexem((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [LexerState])) : (jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [Lexem]))","method ([Classifier]LexemStream).([InstanceMethodDeclaration]nextLexem((jetbrains.mps.baseLanguage.types.classifier/jetbrains.mps.baseLanguage.types.classifier [LexerState])))");
  newEriByOldEriMap.put("method ([Classifier]Stack).([InstanceMethodDeclaration]peek() : (jetbrains.mps.baseLanguage.types.any/jetbrains.mps.baseLanguage.types.any))","method ([Classifier]Stack).([InstanceMethodDeclaration]peek())");
}
