{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x11192d97ff9L,0x11192d9d83cL),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x11192d97ff9L,0x11192d9d83cL),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          List<SNode> result=new ArrayList<SNode>();
          SNode rule=SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x1117e7b5c73L,"jetbrains.mps.lang.typesystem.structure.AbstractRule"),false,false);
          if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(rule,MetaAdapterFactory.getContainmentLink(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x1117e7b5c73L,0x1117e7b9c40L,"applicableNode")),MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x1117e2c3e68L,"jetbrains.mps.lang.typesystem.structure.PatternCondition"))) {
            ListSequence.fromList(result).addSequence(ListSequence.fromList(SNodeOperations.getNodeDescendants(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(rule,MetaAdapterFactory.getContainmentLink(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x1117e7b5c73L,0x1117e7b9c40L,"applicableNode")),MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x1117e2c3e68L,"jetbrains.mps.lang.typesystem.structure.PatternCondition")),MetaAdapterFactory.getContainmentLink(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x1117e2c3e68L,0x1117e2ccbe9L,"pattern")),MetaAdapterFactory.getConcept(0xd4615e3bd6714ba9L,0xaf012b78369b0ba7L,0x108a9cb4795L,"jetbrains.mps.lang.pattern.structure.PropertyPatternVariableDeclaration"),false,new SAbstractConcept[]{})));
          }
          SNode coerceStatement=SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x111f05e2451L,"jetbrains.mps.lang.typesystem.structure.CoerceStatement"),false,false);
          while (coerceStatement != null) {
            if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(coerceStatement,MetaAdapterFactory.getContainmentLink(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x111f05e2451L,0x111f05fb92aL,"pattern")),MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x1117e2c3e68L,"jetbrains.mps.lang.typesystem.structure.PatternCondition"))) {
              ListSequence.fromList(result).addSequence(ListSequence.fromList(SNodeOperations.getNodeDescendants(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(coerceStatement,MetaAdapterFactory.getContainmentLink(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x111f05e2451L,0x111f05fb92aL,"pattern")),MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x1117e2c3e68L,"jetbrains.mps.lang.typesystem.structure.PatternCondition")),MetaAdapterFactory.getContainmentLink(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x1117e2c3e68L,0x1117e2ccbe9L,"pattern")),MetaAdapterFactory.getConcept(0xd4615e3bd6714ba9L,0xaf012b78369b0ba7L,0x108a9cb4795L,"jetbrains.mps.lang.pattern.structure.PropertyPatternVariableDeclaration"),false,new SAbstractConcept[]{})));
            }
            coerceStatement=SNodeOperations.getNodeAncestor(coerceStatement,MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x111f05e2451L,"jetbrains.mps.lang.typesystem.structure.CoerceStatement"),false,false);
          }
          SNode matchStatementItem=SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x112295a8fecL,"jetbrains.mps.lang.typesystem.structure.MatchStatementItem"),false,false);
          while (matchStatementItem != null) {
            if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(matchStatementItem,MetaAdapterFactory.getContainmentLink(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x112295a8fecL,0x112295ab642L,"condition")),MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x1117e2c3e68L,"jetbrains.mps.lang.typesystem.structure.PatternCondition"))) {
              ListSequence.fromList(result).addSequence(ListSequence.fromList(SNodeOperations.getNodeDescendants(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(matchStatementItem,MetaAdapterFactory.getContainmentLink(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x112295a8fecL,0x112295ab642L,"condition")),MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x1117e2c3e68L,"jetbrains.mps.lang.typesystem.structure.PatternCondition")),MetaAdapterFactory.getContainmentLink(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x1117e2c3e68L,0x1117e2ccbe9L,"pattern")),MetaAdapterFactory.getConcept(0xd4615e3bd6714ba9L,0xaf012b78369b0ba7L,0x108a9cb4795L,"jetbrains.mps.lang.pattern.structure.PropertyPatternVariableDeclaration"),false,new SAbstractConcept[]{})));
            }
            matchStatementItem=SNodeOperations.getNodeAncestor(matchStatementItem,MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x112295a8fecL,"jetbrains.mps.lang.typesystem.structure.MatchStatementItem"),false,false);
          }
          return result;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_g13cad_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
