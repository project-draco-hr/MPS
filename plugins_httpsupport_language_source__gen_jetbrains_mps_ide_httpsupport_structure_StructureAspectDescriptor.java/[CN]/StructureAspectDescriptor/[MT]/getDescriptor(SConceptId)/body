{
switch (myConceptIndex.index(id)) {
case LanguageConceptSwitch.CanHandleRequestFunction:
    return myConceptCanHandleRequestFunction;
case LanguageConceptSwitch.DefaultParameterConverter:
  return myConceptDefaultParameterConverter;
case LanguageConceptSwitch.DefaultValueFunction:
return myConceptDefaultValueFunction;
case LanguageConceptSwitch.DeserializeFunction:
return myConceptDeserializeFunction;
case LanguageConceptSwitch.HandleRequestFunction:
return myConceptHandleRequestFunction;
case LanguageConceptSwitch.HttpRequestOperation:
return myConceptHttpRequestOperation;
case LanguageConceptSwitch.HttpRequestParameter:
return myConceptHttpRequestParameter;
case LanguageConceptSwitch.IDEAPlatformPortProvider:
return myConceptIDEAPlatformPortProvider;
case LanguageConceptSwitch.IParameterConverter:
return myConceptIParameterConverter;
case LanguageConceptSwitch.MPSIntegrationPortProvider:
return myConceptMPSIntegrationPortProvider;
case LanguageConceptSwitch.MPSInternalPortProvider:
return myConceptMPSInternalPortProvider;
case LanguageConceptSwitch.Node_getURLOperation:
return myConceptNode_getURLOperation;
case LanguageConceptSwitch.ParameterConverterDeclaration:
return myConceptParameterConverterDeclaration;
case LanguageConceptSwitch.ParameterConverterReference:
return myConceptParameterConverterReference;
case LanguageConceptSwitch.ParameterInitializer:
return myConceptParameterInitializer;
case LanguageConceptSwitch.Port:
return myConceptPort;
case LanguageConceptSwitch.PortProvider:
return myConceptPortProvider;
case LanguageConceptSwitch.QueryParameter:
return myConceptQueryParameter;
case LanguageConceptSwitch.QueryParameterReference:
return myConceptQueryParameterReference;
case LanguageConceptSwitch.QueryPath:
return myConceptQueryPath;
case LanguageConceptSwitch.QuerySegment:
return myConceptQuerySegment;
case LanguageConceptSwitch.RequestHandler:
return myConceptRequestHandler;
case LanguageConceptSwitch.RequestType:
return myConceptRequestType;
case LanguageConceptSwitch.RequestURLBuilderExpression:
return myConceptRequestURLBuilderExpression;
case LanguageConceptSwitch.ResponseSendOperation:
return myConceptResponseSendOperation;
case LanguageConceptSwitch.SerializeFunction:
return myConceptSerializeFunction;
case LanguageConceptSwitch.SerializedValueParameter:
return myConceptSerializedValueParameter;
case LanguageConceptSwitch.ValueToSerializeParameter:
return myConceptValueToSerializeParameter;
default :
return null;
}
}
