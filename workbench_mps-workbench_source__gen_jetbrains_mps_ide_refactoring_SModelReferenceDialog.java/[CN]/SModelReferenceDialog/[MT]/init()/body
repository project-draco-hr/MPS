{
  setModal(true);
  setHorizontalStretch(2.5f);
  setVerticalStretch(2);
  BaseModelModel goToModelModel=new BaseModelModel(this.myProject){
    public SModelReference[] find(    IScope scope){
      throw new UnsupportedOperationException("must not be used");
    }
    public NavigationItem doGetNavigationItem(    final SModelReference modelReference){
      return new BaseModelItem(modelReference){
        public void navigate(        boolean p0){
        }
      }
;
    }
    @Override public SModelReference[] find(    boolean checkBoxState){
      return ListSequence.fromList(myModels).toGenericArray(SModelReference.class);
    }
    public boolean loadInitialCheckBoxState(){
      return false;
    }
  }
;
  myChooser=MpsPopupFactory.createPanelForPackage(goToModelModel,false);
  myChooser.invoke(new ChooseByNamePopupComponent.Callback(){
    public void elementChosen(    Object p0){
      doRefactoringAction();
    }
  }
,ModalityState.current(),false);
  super.init();
}
