{
  Graph graph=order.getGraph();
  for (int layer=0; layer < order.getNumLayers() - 1; layer++) {
    List<Node> dummyNodes=ListSequence.fromList(order.getOrder(layer)).where(new IWhereFilter<Node>(){
      public boolean accept(      Node it){
        return it.isDummy();
      }
    }
).toListSequence();
    for (int first=0; first < ListSequence.fromList(dummyNodes).count(); first++) {
      for (int second=first + 1; second < ListSequence.fromList(dummyNodes).count(); second++) {
        Node firstTarget=ListSequence.fromList(ListSequence.fromList(dummyNodes).getElement(first).getOutEdges()).getElement(0).getTarget();
        Node secondTarget=ListSequence.fromList(ListSequence.fromList(dummyNodes).getElement(second).getOutEdges()).getElement(0).getTarget();
        if (firstTarget.isDummy() && secondTarget.isDummy()) {
          List<Node> nextLayerOrder=order.getOrder(layer + 1);
          if (ListSequence.fromList(nextLayerOrder).indexOf(firstTarget) > ListSequence.fromList(nextLayerOrder).indexOf(secondTarget)) {
            return true;
          }
        }
      }
    }
  }
  return false;
}
