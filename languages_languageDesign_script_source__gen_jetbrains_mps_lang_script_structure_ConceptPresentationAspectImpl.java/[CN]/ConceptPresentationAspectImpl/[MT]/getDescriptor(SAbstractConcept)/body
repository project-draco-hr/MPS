{
{
    SAbstractConcept cncpt=c;
    Integer preIndex=indices_lpa09p_a0s.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return props_AbstractClassifierSpecification;
      }
    break;
case 1:
  if (true) {
    return props_AbstractMethodSpecification;
  }
break;
case 2:
if (true) {
return props_CommentMigrationScriptPart;
}
break;
case 3:
if (true) {
return props_DirectClassifierSpecification;
}
break;
case 4:
if (true) {
return props_DirectMethodSpecification;
}
break;
case 5:
if (true) {
return props_ExtractInterfaceMigration;
}
break;
case 6:
if (true) {
return props_FQNameClassifierSpecification;
}
break;
case 7:
if (true) {
return props_FQNameMethodSpecification;
}
break;
case 8:
if (true) {
return props_FactoryMigrationScriptPart;
}
break;
case 9:
if (true) {
return props_MigrationScript;
}
break;
case 10:
if (true) {
return props_MigrationScriptPart;
}
break;
case 11:
if (true) {
return props_MigrationScriptPart_Instance;
}
break;
case 12:
if (true) {
return props_MigrationScriptPart_Instance_Predicate;
}
break;
case 13:
if (true) {
return props_MigrationScriptPart_Instance_Updater;
}
break;
case 14:
if (true) {
return props_MigrationScriptPart_node;
}
break;
case 15:
if (true) {
return props_PullUpMethod;
}
break;
case 16:
if (true) {
return props_WhitespaceMigrationScriptPart;
}
break;
default :
}
}
throw new IllegalStateException();
}
