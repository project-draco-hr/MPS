{
  Tuples._2<Map<ModelVersionChange,ModelVersionChange>,Map<ModelVersionChange,ModelVersionChange>> arranged=this.<ModelVersionChange,ModelVersionChange>arrangeChanges(new _FunctionTypes._return_P1_E0<ModelVersionChange,ModelVersionChange>(){
    public ModelVersionChange invoke(    ModelVersionChange mvc){
      return mvc;
    }
  }
,ModelVersionChange.class);
  if (MapSequence.fromMap(arranged._0()).count() == 1 && MapSequence.fromMap(arranged._1()).count() == 1) {
    addConflict(SetSequence.fromSet(MapSequence.fromMap(arranged._0()).keySet()).first(),SetSequence.fromSet(MapSequence.fromMap(arranged._1()).keySet()).first());
  }
}
