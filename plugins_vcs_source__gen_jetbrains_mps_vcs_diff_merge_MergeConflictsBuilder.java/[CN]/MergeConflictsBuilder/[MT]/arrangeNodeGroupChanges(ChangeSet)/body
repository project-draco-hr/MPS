{
  Map<Tuples._2<SNodeId,String>,List<NodeGroupChange>> nodeRoleToGroupChanges=MapSequence.<Tuples._2<SNodeId,String>,List<NodeGroupChange>>fromMap(new HashMap<Tuples._2<SNodeId,String>,List<NodeGroupChange>>());
  for (  NodeGroupChange change : Sequence.<NodeGroupChange>fromIterable(changeSet.getModelChanges(NodeGroupChange.class))) {
    Tuples._2<SNodeId,String> nodeRole=MultiTuple.<SNodeId,String>from(change.getParentNodeId(),change.getRole());
    if (!(MapSequence.fromMap(nodeRoleToGroupChanges).containsKey(nodeRole))) {
      MapSequence.<Tuples._2<SNodeId,String>,List<NodeGroupChange>>fromMap(nodeRoleToGroupChanges).put(nodeRole,ListSequence.<NodeGroupChange>fromList(new ArrayList<NodeGroupChange>()));
    }
    ListSequence.<NodeGroupChange>fromList(MapSequence.<Tuples._2<SNodeId,String>,List<NodeGroupChange>>fromMap(nodeRoleToGroupChanges).get(nodeRole)).addElement(change);
  }
  return nodeRoleToGroupChanges;
}
