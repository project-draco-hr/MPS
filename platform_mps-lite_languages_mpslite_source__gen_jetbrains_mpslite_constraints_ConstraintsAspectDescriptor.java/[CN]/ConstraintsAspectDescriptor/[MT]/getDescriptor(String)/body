{
  if ("jetbrains.mpslite.structure.Line".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.Line"));
  }
  if ("jetbrains.mpslite.structure.LinePart".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.LinePart"));
  }
  if ("jetbrains.mpslite.structure.ConstantLinePart".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.ConstantLinePart"));
  }
  if ("jetbrains.mpslite.structure.IndentLinePart".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.IndentLinePart"));
  }
  if ("jetbrains.mpslite.structure.ConcreteReferencePart".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.ConcreteReferencePart"));
  }
  if ("jetbrains.mpslite.structure.ChildPart".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.ChildPart"));
  }
  if ("jetbrains.mpslite.structure.OptionalPart".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.OptionalPart"));
  }
  if ("jetbrains.mpslite.structure.ConcreteChildPart".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.ConcreteChildPart"));
  }
  if ("jetbrains.mpslite.structure.ReferencePart".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.ReferencePart"));
  }
  if ("jetbrains.mpslite.structure.MPSLiteConceptDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.MPSLiteConceptDeclaration"));
  }
  if ("jetbrains.mpslite.structure.LineList".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.LineList"));
  }
  if ("jetbrains.mpslite.structure.PropertyPart".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.PropertyPart"));
  }
  if ("jetbrains.mpslite.structure.ConcretePropertyPart".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.ConcretePropertyPart"));
  }
  if ("jetbrains.mpslite.structure.AbstractConceptReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.AbstractConceptReference"));
  }
  if ("jetbrains.mpslite.structure.MPSLiteConceptReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.MPSLiteConceptReference"));
  }
  if ("jetbrains.mpslite.structure.RegularConceptReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.RegularConceptReference"));
  }
  if ("jetbrains.mpslite.structure.IMPSLiteConcept".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.IMPSLiteConcept"));
  }
  if ("jetbrains.mpslite.structure.BinaryOperationConcept".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.BinaryOperationConcept"));
  }
  if ("jetbrains.mpslite.structure.FeatureAccessConcept".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.FeatureAccessConcept"));
  }
  if ("jetbrains.mpslite.structure.VariableConcept".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.VariableConcept"));
  }
  if ("jetbrains.mpslite.structure.NamePropertyNamePart".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new NamePropertyNamePart_Constraints());
  }
  if ("jetbrains.mpslite.structure.TypePart".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new TypePart_Constraints());
  }
  if ("jetbrains.mpslite.structure.ConceptContainer".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ConceptContainer_Constraints());
  }
  if ("jetbrains.mpslite.structure.StatementConcept".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.StatementConcept"));
  }
  if ("jetbrains.mpslite.structure.ExpressionConcept".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.ExpressionConcept"));
  }
  if ("jetbrains.mpslite.structure.BlockConcept".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.BlockConcept"));
  }
  if ("jetbrains.mpslite.structure.BlockBodyPart".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new BlockBodyPart_Constraints());
  }
  if ("jetbrains.mpslite.structure.BlockReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mpslite.structure.BlockReference"));
  }
  return null;
}
