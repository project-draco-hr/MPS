{
  return ModelAccess.instance().runReadAction(new Computable<PsiPackage>(){
    @Override public PsiPackage compute(){
      List<PsiPackage> packages=new ArrayListModel<PsiPackage>();
      List<SModel> models=SModelRepository.getInstance().getModelDescriptorsByModelName(qualifiedName);
      if (models == null || models.size() == 0)       return null;
      for (      SModel model : models) {
        SModule module=model.getModule();
        if (module instanceof SolutionIdea && ((SolutionIdea)module).getIdeaModule().getProject().equals(myProject)) {
          MPSPsiModel psiModel=MPSPsiProvider.getInstance(myProject).getPsi(model);
          if (psiModel == null) {
            return null;
          }
          packages.add(new MPSPackage(psiModel));
        }
      }
      if (packages.isEmpty() || packages.size() > 1) {
        return null;
      }
      return packages.get(0);
    }
  }
);
}
