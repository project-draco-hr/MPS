{
  SRepository repository=ProjectHelper.getProjectRepository(myProject);
  return new ModelAccessHelper(repository.getModelAccess()).runReadAction(new Computable<PsiPackage>(){
    @Override public PsiPackage compute(){
      List<PsiPackage> packages=new ArrayListModel<PsiPackage>();
      SModel model=new ModuleRepositoryFacade(repository).getModelByName(qualifiedName);
      if (model == null) {
        return null;
      }
      SModule module=model.getModule();
      if (!(module instanceof SolutionIdea)) {
        return null;
      }
      if (!((SolutionIdea)module).getIdeaModule().getProject().equals(myProject)) {
        return null;
      }
      MPSPsiModel psiModel=MPSPsiProvider.getInstance(myProject).getPsi(model);
      if (psiModel == null) {
        return null;
      }
      return new MPSPackage(psiModel,PsiManager.getInstance(myProject));
    }
  }
);
}
