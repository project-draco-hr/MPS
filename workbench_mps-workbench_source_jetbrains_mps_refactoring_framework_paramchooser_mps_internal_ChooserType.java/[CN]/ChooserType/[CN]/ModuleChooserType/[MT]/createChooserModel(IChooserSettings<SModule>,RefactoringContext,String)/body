{
  DataContext dataContext=DataManager.getInstance().getDataContext();
  final Project project=MPSDataKeys.PROJECT.getData(dataContext);
  return new BaseModuleModel(project,"module"){
    @Override public NavigationItem doGetNavigationItem(    final SModuleReference module){
      return new BaseModuleItem(module){
        @Override public void navigate(        boolean requestFocus){
          context.setParameter(paramName,ModuleRepositoryFacade.getInstance().getModule(module));
        }
      }
;
    }
    @Override public SModuleReference[] find(    boolean checkboxState){
      List<SModuleReference> filteredModules=new ArrayList<SModuleReference>();
      for (      SModule module : filter(settings,MPSModuleRepository.getInstance().getAllModules())) {
        filteredModules.add(module.getModuleReference());
      }
      return filteredModules.toArray(new SModuleReference[filteredModules.size()]);
    }
    @Override public SModuleReference[] find(    IScope scope){
      throw new UnsupportedOperationException("must not be used");
    }
    @Override public boolean loadInitialCheckBoxState(){
      return false;
    }
    @Override public String getPromptText(){
      return settings.getTitle();
    }
  }
;
}
