{
  DataContext dataContext=DataManager.getInstance().getDataContext();
  final Project project=MPSDataKeys.PROJECT.getData(dataContext);
  return new BaseModelModel(project){
    @Override public NavigationItem doGetNavigationItem(    final SModelReference ref){
      return new BaseModelItem(ref){
        @Override public void navigate(        boolean requestFocus){
          context.setParameter(paramName,getModelReference());
        }
      }
;
    }
    @Override public SModelReference[] find(    boolean checkboxState){
      List<SModelDescriptor> modelDescriptors=SModelRepository.getInstance().getModelDescriptors();
      List<SModelReference> modelReferencess=new ArrayList<SModelReference>(modelDescriptors.size());
      for (      SModelDescriptor md : modelDescriptors)       modelReferencess.add(md.getReference());
      List<SModelReference> filteredModelRefs=filter(settings,modelReferencess);
      return filteredModelRefs.toArray(new SModelReference[filteredModelRefs.size()]);
    }
    @Override public SModelReference[] find(    IScope scope){
      throw new UnsupportedOperationException("must not be used");
    }
    @Override public boolean loadInitialCheckBoxState(){
      return false;
    }
    @Override public String getPromptText(){
      return settings.getTitle();
    }
  }
;
}
