{
  super(new GroupData(group,kind,data),operationContext);
  myData=data;
  GroupKind<D,Object> subGroupKind=kind.getSubGroupKind();
  while (subGroupKind != null && !subGroupKind.isVisible()) {
    subGroupKind=subGroupKind.getSubGroupKind();
  }
  if (subGroupKind == null) {
    for (    D d : myData) {
      add(createDataNode(operationContext,d));
    }
  }
 else {
    Map<Object,Set<D>> sorted=subGroupKind.sortByGroups(myData);
    for (    Object subGroup : sorted.keySet()) {
      if (subGroup != null) {
        add(new GroupTreeNode<Object>(operationContext,subGroupKind,subGroup,sorted.get(subGroup)));
      }
 else {
        for (        D d : sorted.get(subGroup)) {
          add(createDataNode(operationContext,d));
        }
      }
    }
  }
  updatePresentation();
}
