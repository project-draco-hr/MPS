{
  SNode classConcept=SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.ClassConcept");
  List<SNode> fields=SLinkOperations.getTargets(classConcept,"field",true);
  if (ListSequence.fromList(fields).isEmpty()) {
    return false;
  }
  boolean hasAllSetters=true;
  for (  SNode field : fields) {
    boolean fieldHasSetter=false;
    final String setterName="set" + NameUtil.capitalize(SPropertyOperations.getString(field,"name"));
    if (ListSequence.fromList(SLinkOperations.getTargets(classConcept,"method",true)).any(new IWhereFilter<SNode>(){
      public boolean accept(      SNode method){
        return setterName.equals(SPropertyOperations.getString(method,"name")) && ListSequence.fromList(SLinkOperations.getTargets(method,"parameter",true)).count() == 1;
      }
    }
)) {
      fieldHasSetter=true;
    }
    if (!(fieldHasSetter)) {
      hasAllSetters=false;
    }
  }
  return !(hasAllSetters);
}
