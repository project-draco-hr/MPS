{
  try {
    final MessagesViewTool tool=((Project)MapSequence.fromMap(_params).get("project")).getComponent(MessagesViewTool.class);
    if (tool == null) {
      if (log.isErrorEnabled()) {
        log.error("cannot get message view tool");
      }
    }
    IMessageHandler mh=new IMessageHandler(){
      public void handle(      IMessage p0){
        tool.add(p0,"Migrate structure");
      }
      public void clear(){
        tool.clear("Migrate structure");
      }
    }
;
    Language language=(Language)((IModule)MapSequence.fromMap(_params).get("module"));
    mh.handle(new Message(MessageKind.INFORMATION,"converting " + language.getModuleFqName()));
    Language newStructureLanguage=(Language)MPSModuleRepository.getInstance().getModuleByFqName("jetbrains.mps.core.structure");
    language.addUsedLanguage(newStructureLanguage.getModuleReference());
    SModelFqName newModelName=SModelFqName.fromString(language.getModuleFqName() + ".core");
    SModelDescriptor desc=SModelRepository.getInstance().getModelDescriptor(newModelName);
    SModel newStructure;
    SNode converted=new LanguageConverter(language,mh).convert();
    if (desc instanceof DefaultSModelDescriptor) {
      MergeSession session=new MergeSession(mh);
      session.replace((DefaultSModelDescriptor)desc,Sequence.<SNode>singleton(converted));
      session.restoreRefs();
      session.apply();
    }
 else {
      SModelRoot root=Sequence.fromIterable(((Iterable<SModelRoot>)language.getSModelRoots())).where(new IWhereFilter<SModelRoot>(){
        public boolean accept(        SModelRoot it){
          return it.getManager() instanceof DefaultModelRootManager;
        }
      }
).first();
      newStructure=language.createModel(newModelName,root,null).getSModel();
      newStructure.addLanguage(newStructureLanguage.getModuleReference());
      newStructure.addRoot(converted);
    }
  }
 catch (  Throwable t) {
    if (log.isErrorEnabled()) {
      log.error("User's action execute method failed. Action:" + "MigrateStructure",t);
    }
  }
}
