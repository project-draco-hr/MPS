{
  Graph<String> graph=new Graph<String>();
  graph.addEdges("A","B");
  graph.addEdges("C","D","E");
  graph.addEdges("D","F");
  GraphAnalyzer<String> cd=graph.getCycleDetector();
  Utils.assertSameSequence(ListSequence.fromListAndArray(new ArrayList<String>(),"C","E"),cd.precursors("E"));
  graph.addEdges("D","E");
  Utils.assertSameSequence(ListSequence.fromListAndArray(new ArrayList<String>(),"C","D","E"),cd.precursors("E"));
  graph.addEdges("B","C");
  graph.sort(new _FunctionTypes._return_P1_E0<String,String>(){
    public String invoke(    String s){
      return s;
    }
  }
,false);
  Utils.assertSameSequence(ListSequence.fromListAndArray(new ArrayList<String>(),"A","B","C","D","E"),cd.precursors("E"));
}
