{
  BHDescriptor descriptor=myBHDescriptors.get(MetaIdHelper.getConcept(concept));
  if (descriptor != null) {
    return descriptor;
  }
  if (!myStorage.startLoading(concept)) {
    return new IllegalBHDescriptor(concept);
  }
  try {
    try {
      if (!(concept instanceof SAbstractConceptAdapter)) {
        throw new IllegalArgumentException();
      }
      LanguageRuntime languageRuntime=myLanguageRegistry.getLanguage(concept.getLanguage());
      BehaviorAspectDescriptor behaviorAspect=null;
      if (languageRuntime == null) {
        LOG.warn("No language for: " + concept + ", while looking for the behavior descriptor.");
      }
 else {
        behaviorAspect=languageRuntime.getAspect(BehaviorAspectDescriptor.class);
      }
      if (behaviorAspect == null) {
        descriptor=new EmptyBHDescriptor(this,concept);
      }
 else       if (behaviorAspect instanceof BaseBehaviorAspectDescriptor) {
        descriptor=((BaseBehaviorAspectDescriptor)behaviorAspect).getDescriptor(concept);
        if (descriptor == null) {
          descriptor=new EmptyBHDescriptor(this,concept);
        }
      }
 else {
        throw new IllegalArgumentException();
      }
      if (descriptor instanceof BaseBHDescriptor) {
        ((BaseBHDescriptor)descriptor).init();
      }
    }
 catch (    Throwable e) {
      LOG.error("Exception while behavior descriptor creating " + concept,e);
      descriptor=new IllegalBHDescriptor(concept);
    }
    myBHDescriptors.put(MetaIdHelper.getConcept(concept),descriptor);
    return descriptor;
  }
  finally {
    myStorage.finishLoading(concept);
  }
}
