{
  if (SConceptOperations.isSubConceptOf(kind,"jetbrains.mps.build.structure.BuildMacro")) {
    return BuildProject_Behavior.call_getBuildMacroScope_3767587139141108514(thisNode,child);
  }
 else   if (kind == SConceptOperations.findConceptDeclaration("jetbrains.mps.build.structure.BuildSource_JavaOptions")) {
    return new FilteringScope(new SimpleRoleScope(thisNode,SLinkOperations.findLinkDeclaration("jetbrains.mps.build.structure.BuildProject","parts"),"jetbrains.mps.build.structure.BuildSource_JavaOptions"){
      public String getName(      SNode jo){
        String optionsName=SPropertyOperations.getString(SNodeOperations.cast(jo,"jetbrains.mps.build.structure.BuildSource_JavaOptions"),"optionsName");
        return (StringUtils.isEmpty(optionsName) ? "<default options>" : optionsName);
      }
    }
){
      @Override public boolean isExcluded(      SNode node){
        return StringUtils.isEmpty(SPropertyOperations.getString(SNodeOperations.cast(node,"jetbrains.mps.build.structure.BuildSource_JavaOptions"),"optionsName"));
      }
    }
;
  }
  return null;
}
