{
switch (myConceptIndex.index(id)) {
case LanguageConceptSwitch.ActionTestAbstractChild:
    return myConceptActionTestAbstractChild;
case LanguageConceptSwitch.ActionTestAbstractChildWrapper:
  return myConceptActionTestAbstractChildWrapper;
case LanguageConceptSwitch.ActionTestChild1:
return myConceptActionTestChild1;
case LanguageConceptSwitch.ActionTestChild1Child:
return myConceptActionTestChild1Child;
case LanguageConceptSwitch.ActionTestChild1SubConcept:
return myConceptActionTestChild1SubConcept;
case LanguageConceptSwitch.ActionTestChild2:
return myConceptActionTestChild2;
case LanguageConceptSwitch.ActionTestChildToWrap1:
return myConceptActionTestChildToWrap1;
case LanguageConceptSwitch.ActionTestChildToWrap2:
return myConceptActionTestChildToWrap2;
case LanguageConceptSwitch.ActionTestChildWrapper:
return myConceptActionTestChildWrapper;
case LanguageConceptSwitch.ActionTestContainer:
return myConceptActionTestContainer;
case LanguageConceptSwitch.ActionTestDefaultAbstractChild:
return myConceptActionTestDefaultAbstractChild;
case LanguageConceptSwitch.ActionTestDefaultChild1:
return myConceptActionTestDefaultChild1;
case LanguageConceptSwitch.ActionTestDefaultChild2:
return myConceptActionTestDefaultChild2;
case LanguageConceptSwitch.ActionTestSidetransformAbstractChild:
return myConceptActionTestSidetransformAbstractChild;
case LanguageConceptSwitch.ActionTestSidetransformAddConceptAbstractChild:
return myConceptActionTestSidetransformAddConceptAbstractChild;
case LanguageConceptSwitch.ActionTestSidetransformAddConceptChild:
return myConceptActionTestSidetransformAddConceptChild;
case LanguageConceptSwitch.ActionTestSidetransformAnotherAbstractChild:
return myConceptActionTestSidetransformAnotherAbstractChild;
case LanguageConceptSwitch.ActionTestSidetransformAnotherChild1:
return myConceptActionTestSidetransformAnotherChild1;
case LanguageConceptSwitch.ActionTestSidetransformAnotherChild2:
return myConceptActionTestSidetransformAnotherChild2;
case LanguageConceptSwitch.ActionTestSidetransformAnotherChildCommonSuperConcept:
return myConceptActionTestSidetransformAnotherChildCommonSuperConcept;
case LanguageConceptSwitch.ActionTestSidetransformChild1:
return myConceptActionTestSidetransformChild1;
case LanguageConceptSwitch.ActionTestSidetransformTestAncestor:
return myConceptActionTestSidetransformTestAncestor;
case LanguageConceptSwitch.ActionTestSidetransformTestContainer:
return myConceptActionTestSidetransformTestContainer;
default :
return null;
}
}
