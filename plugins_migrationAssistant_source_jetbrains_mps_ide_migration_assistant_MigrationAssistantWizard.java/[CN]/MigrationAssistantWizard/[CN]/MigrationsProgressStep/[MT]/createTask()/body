{
  return new Modal(myProject,"Executing",false){
    @Override public void run(    final ProgressIndicator indicator){
      final MigrationProcessor processor=myProject.getComponent(MigrationProcessor.class);
      final List<?> actions=processor.getActions();
      myExcluded.addAll(actions);
      myExcluded.removeAll(processor.getSelectedActions());
      processor.addCallback(new Callback(){
        @Override public void startingAction(        Object action){
          myDoneAny=true;
          indicator.setIndeterminate(false);
          indicator.setFraction(0.0);
          myList.ensureIndexIsVisible(actions.indexOf(action));
          myList.repaint();
        }
        @Override public void finishedAction(        Object action){
          myMarked.add(action);
          advance(action);
        }
        @Override public void failedAction(        Object action){
          myFailed.add(action);
          advance(action);
        }
        @Override public void finishedAll(){
          myFinished=true;
          processor.removeCallback(this);
          indicator.setFraction(1.0);
          indicator.setText("Done");
          fireStateChanged();
        }
        private void advance(        Object action){
          indicator.setFraction((double)(actions.indexOf(action) + 1) / actions.size());
          myList.ensureIndexIsVisible(actions.indexOf(action));
          myList.repaint();
        }
      }
);
      processor.startProcessing(SwingUtilities.getRootPane(getComponent()));
    }
  }
;
}
