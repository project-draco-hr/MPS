{
  return new Modal(myProject,"executing",false){
    @Override public void run(    final ProgressIndicator indicator){
      indicator.setIndeterminate(true);
      final int[] steps=new int[]{1};
      new Timer("foo",1000){
        @Override protected void onTimer() throws InterruptedException {
          final int step=steps[0]++;
          if (step > 10) {
            this.dispose();
            myFinished=true;
            UIUtil.invokeLaterIfNeeded(new Runnable(){
              @Override public void run(){
                indicator.setFraction(1.0);
                fireStateChanged();
              }
            }
);
          }
 else {
            UIUtil.invokeLaterIfNeeded(new Runnable(){
              @Override public void run(){
                indicator.setIndeterminate(false);
                indicator.setFraction((double)step / 10);
              }
            }
);
          }
        }
      }
.start();
    }
  }
;
}
