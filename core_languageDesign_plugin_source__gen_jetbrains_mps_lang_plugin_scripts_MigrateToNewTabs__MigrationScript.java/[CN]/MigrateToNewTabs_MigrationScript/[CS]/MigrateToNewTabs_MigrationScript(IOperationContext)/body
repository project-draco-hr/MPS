{
  super("Migrate to New Tabs");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Migrate to New Tabs";
    }
    public String getAdditionalInfo(){
      return "Migrate to New Tabs";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.AbstractEditorTab";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return true;
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode tab=new MigrateToNewTabs_MigrationScript.QuotationClass_ruw4tl_a0a0a4a0a0a1a0().createNode(SPropertyOperations.getString(node,"name"),SPropertyOperations.getString(node,"shortcutChar"),SLinkOperations.getTarget(node,"baseNodeConcept",false),SLinkOperations.getTarget(SLinkOperations.getTarget(node,"baseNodeBlock",true),"body",true),SLinkOperations.getTarget(node,"baseNodeConcept",false));
      if (SLinkOperations.getTarget(node,"initBlock",true) != null) {
        SLinkOperations.setNewChild(tab,"listenBlock","jetbrains.mps.lang.plugin.structure.ListenBlock");
        SLinkOperations.setTarget(SLinkOperations.getTarget(tab,"listenBlock",true),"body",SLinkOperations.getTarget(SLinkOperations.getTarget(node,"initBlock",true),"body",true),true);
      }
      if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.lang.plugin.structure.MultitabbedEditorTab")) {
        SNode oldTab=SNodeOperations.cast(node,"jetbrains.mps.lang.plugin.structure.MultitabbedEditorTab");
        if ((SLinkOperations.getTarget(oldTab,"createBlock",true) != null)) {
          SLinkOperations.setNewChild(tab,"createBlock","jetbrains.mps.lang.plugin.structure.NewCreateBlock");
          SLinkOperations.setTarget(SLinkOperations.getTarget(tab,"createBlock",true),"body",SLinkOperations.getTarget(SLinkOperations.getTarget(oldTab,"createBlock",true),"body",true),true);
        }
        if ((SLinkOperations.getTarget(oldTab,"getConceptsBlock",true) != null)) {
          SLinkOperations.setNewChild(tab,"conceptsBlock","jetbrains.mps.lang.plugin.structure.GetConceptsBlock");
          SLinkOperations.setTarget(SLinkOperations.getTarget(tab,"conceptsBlock",true),"body",SLinkOperations.getTarget(SLinkOperations.getTarget(oldTab,"getConceptsBlock",true),"body",true),true);
        }
        SLinkOperations.setNewChild(tab,"nodesBlock","jetbrains.mps.lang.plugin.structure.GetNodesBlock");
        SLinkOperations.setTarget(SNodeOperations.cast(SLinkOperations.getTarget(tab,"nodesBlock",true),"jetbrains.mps.lang.plugin.structure.GetNodesBlock"),"body",SLinkOperations.getTarget(SLinkOperations.getTarget(oldTab,"getNodesBlock",true),"body",true),true);
      }
 else {
        SNode oldTab=SNodeOperations.cast(node,"jetbrains.mps.lang.plugin.structure.SingletabbedEditorTab");
        if ((SLinkOperations.getTarget(oldTab,"createBlock",true) != null)) {
          SLinkOperations.setNewChild(tab,"createBlock","jetbrains.mps.lang.plugin.structure.NewCreateBlock");
          SLinkOperations.setTarget(SLinkOperations.getTarget(tab,"createBlock",true),"body",SLinkOperations.getTarget(SLinkOperations.getTarget(oldTab,"createBlock",true),"body",true),true);
        }
        SLinkOperations.setNewChild(tab,"nodesBlock","jetbrains.mps.lang.plugin.structure.GetNodeBlock");
        SLinkOperations.setTarget(SNodeOperations.cast(SLinkOperations.getTarget(tab,"nodesBlock",true),"jetbrains.mps.lang.plugin.structure.GetNodeBlock"),"body",SLinkOperations.getTarget(SLinkOperations.getTarget(oldTab,"getNodeBlock",true),"body",true),true);
      }
      SModelOperations.addRootNode(SNodeOperations.getModel(node),tab);
      SNodeOperations.deleteNode(node);
    }
    public boolean isShowAsIntention(){
      return true;
    }
  }
);
}
