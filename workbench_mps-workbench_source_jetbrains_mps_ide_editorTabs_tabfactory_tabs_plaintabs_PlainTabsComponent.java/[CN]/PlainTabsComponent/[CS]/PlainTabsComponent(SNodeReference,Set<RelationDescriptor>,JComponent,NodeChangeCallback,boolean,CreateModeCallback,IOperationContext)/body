{
  super(baseNode,possibleTabs,editor,callback,showGrayed,createModeCallback,operationContext);
  DataContext dataContext=DataManager.getInstance().getDataContext(myEditor);
  Project project=PlatformDataKeys.PROJECT.getData(dataContext);
  PrevNextActionsDescriptor navigation=new PrevNextActionsDescriptor(IdeActions.ACTION_NEXT_EDITOR_TAB,IdeActions.ACTION_PREVIOUS_EDITOR_TAB);
  myJbTabs=new AsJBTabs(project,SwingConstants.BOTTOM,navigation,myJbTabsDisposable);
  myJbTabs.getTabs().getPresentation().setPaintBorder(0,0,0,0).setGhostsAlwaysVisible(true);
  getComponent().add(myJbTabs.getTabs().getComponent(),BorderLayout.CENTER);
  updateTabs();
  myJbTabs.addChangeListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent e){
      if (myDisposed)       return;
      if (myRebuilding)       return;
      ModelAccess.instance().runReadAction(new Runnable(){
        @Override public void run(){
          onTabIndexChange();
        }
      }
);
    }
  }
);
  addListeners();
}
