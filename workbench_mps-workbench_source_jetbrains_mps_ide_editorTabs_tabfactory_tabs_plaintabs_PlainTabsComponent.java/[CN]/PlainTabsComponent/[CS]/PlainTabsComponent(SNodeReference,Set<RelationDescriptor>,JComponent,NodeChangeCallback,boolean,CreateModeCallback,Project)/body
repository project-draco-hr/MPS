{
  super(baseNode,possibleTabs,editor,callback,showGrayed,createModeCallback,project);
  myTabs=new JBTabsImpl(project,null,myJbTabsDisposable);
  myTabs.setTabsPosition(JBTabsPosition.bottom).setPaintBorder(0,0,0,0).setTabSidePaintBorder(1).setGhostsAlwaysVisible(false).setUiDecorator(new UiDecorator(){
    @NotNull @Override public UiDecoration getDecoration(){
      return new UiDecoration(null,new Insets(0,8,0,8));
    }
  }
);
  myTabs.setBorder(new EmptyBorder(0,0,1,0));
  getComponent().add(myTabs,BorderLayout.CENTER);
  updateTabs();
  myTabs.addListener(new TabsListener(){
    @Override public void selectionChanged(    TabInfo oldSelection,    TabInfo newSelection){
      if (myDisposed)       return;
      if (myRebuilding)       return;
      ModelAccess.instance().runReadAction(new Runnable(){
        @Override public void run(){
          onTabIndexChange();
        }
      }
);
    }
    @Override public void beforeSelectionChanged(    TabInfo oldSelection,    TabInfo newSelection){
    }
    @Override public void tabRemoved(    TabInfo tabToRemove){
    }
    @Override public void tabsMoved(){
    }
  }
);
  addListeners();
}
