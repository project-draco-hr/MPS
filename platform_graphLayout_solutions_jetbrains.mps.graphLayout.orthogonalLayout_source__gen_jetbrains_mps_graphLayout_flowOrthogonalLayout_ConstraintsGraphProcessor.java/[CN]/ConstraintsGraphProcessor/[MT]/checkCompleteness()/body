{
  for (  Node horSeg : ListSequence.fromList(myHorConstraintsGraph.getNodes())) {
    for (    Node verSeg : ListSequence.fromList(myVerConstraintsGraph.getNodes())) {
      if (isSegmentsIntersect(horSeg,verSeg)) {
        continue;
      }
      if (SHOW_INFO > 0) {
        System.out.println("found separated pair: hor = " + horSeg + ", ver = "+ verSeg);
      }
      Node[] horEnds=getSegmentEndSegments(horSeg,Direction2D.RIGHT);
      Node[] verEnds=getSegmentEndSegments(verSeg,Direction2D.UP);
      if (SHOW_INFO > 0) {
        System.out.println("hor ends: " + Arrays.toString(horEnds));
        System.out.println("ver ends: " + Arrays.toString(verEnds));
      }
      boolean isSeparated=false;
      isSeparated|=hasPath(myHorConstraintsGraph,horSeg,verEnds);
      isSeparated|=hasPath(myVerConstraintsGraph,verSeg,horEnds);
      if (!(isSeparated)) {
        throw new RuntimeException("pair is not separated in constraints graph!!!");
      }
    }
  }
}
