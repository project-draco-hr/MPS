{
  Map<Node,Integer> components=ConnectivityComponents.getComponents(myGraph,new _FunctionTypes._return_P1_E0<Boolean,Edge>(){
    public Boolean invoke(    Edge edge){
      Dart dart=ListSequence.fromList(myEmbeddedGraph.getDarts(edge)).getElement(0);
      return directionFilter.invoke(MapSequence.fromMap(myDirections).get(dart));
    }
  }
);
  List<List<Node>> componentsList=ConnectivityComponents.getComponentsList(components);
  Graph constraintsCraph=new Graph();
  for (  List<Node> nodeList : ListSequence.fromList(componentsList)) {
    Node componentNode=constraintsCraph.addNode();
    for (    Node node : ListSequence.fromList(nodeList)) {
      MapSequence.fromMap(nodeMap).put(node,componentNode);
    }
  }
  return constraintsCraph;
}
