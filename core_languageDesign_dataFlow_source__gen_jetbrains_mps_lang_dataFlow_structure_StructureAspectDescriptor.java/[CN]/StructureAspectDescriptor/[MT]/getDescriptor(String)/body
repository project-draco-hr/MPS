{
  int hash=conceptFqName.hashCode();
  if (hash == 781208318) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.DataFlowBuilderDeclaration","jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.structure.structure.IConceptAspect");
  }
  if (hash == 2109449209) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.BuilderBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction");
  }
  if (hash == -1555277216) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.NodeParameter","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter");
  }
  if (hash == 2034985333) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.EmitStatement","jetbrains.mps.baseLanguage.structure.Statement");
  }
  if (hash == 131060122) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.EmitNopStatement","jetbrains.mps.lang.dataFlow.structure.EmitStatement");
  }
  if (hash == -1548147329) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.EmitReadStatement","jetbrains.mps.lang.dataFlow.structure.BaseEmitVariableStatement");
  }
  if (hash == -681365494) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.EmitWriteStatement","jetbrains.mps.lang.dataFlow.structure.BaseEmitVariableStatement");
  }
  if (hash == -196981368) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.BaseEmitVariableStatement","jetbrains.mps.lang.dataFlow.structure.EmitStatement");
  }
  if (hash == 1565330160) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.Position","jetbrains.mps.lang.core.structure.BaseConcept");
  }
  if (hash == -1271191844) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.RelativePosition","jetbrains.mps.lang.dataFlow.structure.Position");
  }
  if (hash == -1526395313) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.BeforePosition","jetbrains.mps.lang.dataFlow.structure.RelativePosition");
  }
  if (hash == -626591298) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.AfterPosition","jetbrains.mps.lang.dataFlow.structure.RelativePosition");
  }
  if (hash == 33740438) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.BaseEmitJumpStatement","jetbrains.mps.lang.dataFlow.structure.EmitStatement");
  }
  if (hash == -756947382) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.EmitIfJumpStatement","jetbrains.mps.lang.dataFlow.structure.BaseEmitJumpStatement");
  }
  if (hash == 417658343) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.EmitJumpStatement","jetbrains.mps.lang.dataFlow.structure.BaseEmitJumpStatement");
  }
  if (hash == 166027885) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.EmitCodeForStatement","jetbrains.mps.lang.dataFlow.structure.EmitStatement");
  }
  if (hash == 650981384) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.EmitRetStatement","jetbrains.mps.lang.dataFlow.structure.EmitStatement");
  }
  if (hash == -1707265434) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.EmitMayBeUnreachable","jetbrains.mps.baseLanguage.structure.Statement","jetbrains.mps.baseLanguage.structure.Closureoid");
  }
  if (hash == 137733005) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.EmitTryFinallyStatement","jetbrains.mps.lang.dataFlow.structure.EmitStatement");
  }
  if (hash == 182988949) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.EmitLabelStatement","jetbrains.mps.lang.dataFlow.structure.EmitStatement","jetbrains.mps.lang.core.structure.INamedConcept");
  }
  if (hash == 35707606) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.LabelPosition","jetbrains.mps.lang.dataFlow.structure.Position");
  }
  if (hash == -1997831300) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.InsertAfter","jetbrains.mps.lang.dataFlow.structure.InsertPosition");
  }
  if (hash == -1775929889) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.InsertBefore","jetbrains.mps.lang.dataFlow.structure.InsertPosition");
  }
  if (hash == 2009708425) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.InsertPosition","jetbrains.mps.lang.core.structure.BaseConcept");
  }
  if (hash == -1739774491) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.GetCodeForExpression","jetbrains.mps.baseLanguage.structure.Expression");
  }
  if (hash == -361084607) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.InstructionType","jetbrains.mps.baseLanguage.structure.Type");
  }
  if (hash == -1991741667) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.InstructionGetSourceOperation","jetbrains.mps.lang.dataFlow.structure.BaseInstructionOperation");
  }
  if (hash == -403508047) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.BaseInstructionOperation","jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.structure.IOperation");
  }
  if (hash == 1680909342) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.InstructionIsNop","jetbrains.mps.lang.dataFlow.structure.BooleanInstructionOperation");
  }
  if (hash == 1680912880) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.InstructionIsRet","jetbrains.mps.lang.dataFlow.structure.BooleanInstructionOperation");
  }
  if (hash == -676931686) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.BooleanInstructionOperation","jetbrains.mps.lang.dataFlow.structure.BaseInstructionOperation");
  }
  if (hash == 568468671) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.dataFlow.structure.InstructionIsJump","jetbrains.mps.lang.dataFlow.structure.BooleanInstructionOperation");
  }
  return null;
}
