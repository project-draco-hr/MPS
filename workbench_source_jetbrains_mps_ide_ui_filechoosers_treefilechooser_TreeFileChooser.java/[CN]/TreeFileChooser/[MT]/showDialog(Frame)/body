{
  if (owner == null)   owner=JOptionPane.getRootFrame();
  setAdditionalModeFilter(myMode);
  IFile res=null;
  if (UseIdeaFileChooser.useIdeaFileChooser()) {
    FileChooserDescriptor descriptor=new FileChooserDescriptor(myMode != MODE_DIRECTORIES,myMode != MODE_FILES,true,true,false,false){
      public boolean isFileVisible(      VirtualFile file,      boolean showHiddenFiles){
        if (!super.isFileVisible(file,showHiddenFiles))         return false;
        return myFileFilter.accept(new FileSystemFile(file.getPath()));
      }
    }
;
    descriptor.setTitle("Select File");
    descriptor.setShowFileSystemRoots(true);
    FileChooserDialog dialog=FileChooserFactory.getInstance().createFileChooser(descriptor,owner);
    VirtualFile selection=LocalFileSystem.getInstance().findFileByIoFile(ourInitialSelectedFile.toFile());
    VirtualFile[] files=dialog.choose(selection,null);
    if (files.length == 0) {
      res=null;
    }
 else {
      res=new FileSystemFile(files[0].getPath());
    }
  }
 else {
    TreeFileChooserDialog dialog=new TreeFileChooserDialog(owner,myMode,myFileFilter,myContext,ourInitialSelectedFile);
    dialog.setVisible(true);
    if (!dialog.isCancelled()) {
      res=dialog.getSelectedFile();
    }
  }
  if (res != null)   ourInitialSelectedFile=res;
  return res;
}
