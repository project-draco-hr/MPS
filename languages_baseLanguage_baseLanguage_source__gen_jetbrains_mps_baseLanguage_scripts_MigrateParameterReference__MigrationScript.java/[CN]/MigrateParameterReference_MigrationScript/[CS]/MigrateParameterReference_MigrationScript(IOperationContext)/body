{
  super("Migrate parameter reference smodel usages");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Migrate getDescendants(ParameterReference) usages";
    }
    public String getAdditionalInfo(){
      return "Migrate getDescendants(ParameterReference) usages";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.smodel.structure.Node_GetDescendantsOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return ListSequence.fromList(SLinkOperations.getTargets(node,"parameter",true)).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SNodeOperations.isInstanceOf(it,"jetbrains.mps.lang.smodel.structure.OperationParm_Concept");
        }
      }
).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          SNode conceptArg=SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.lang.smodel.structure.OperationParm_Concept"),"conceptArgument",true);
          return SNodeOperations.isInstanceOf(conceptArg,"jetbrains.mps.lang.smodel.structure.RefConcept_Reference") && SLinkOperations.getTarget(SNodeOperations.cast(conceptArg,"jetbrains.mps.lang.smodel.structure.RefConcept_Reference"),"conceptDeclaration",false) == SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterReference");
        }
      }
);
    }
    public void doUpdateInstanceNode(    SNode node){
      Iterable<SNode> parameters=ListSequence.fromList(SLinkOperations.getTargets(node,"parameter",true)).select(new ISelector<SNode,SNode>(){
        public SNode select(        SNode it){
          if (SNodeOperations.isInstanceOf(it,"jetbrains.mps.lang.smodel.structure.OperationParm_Concept")) {
            return new MigrateParameterReference_MigrationScript.QuotationClass_2t56b7_a0a0a0a0a0a0a0a4a0a0a1a0().createNode();
          }
 else {
            return it;
          }
        }
      }
);
      SNode result=new MigrateParameterReference_MigrationScript.QuotationClass_2t56b7_a0a1a4a0a0a1a0().createNode(IOperation_Behavior.call_getOperand_1213877410070(node),Sequence.fromIterable(parameters).toListSequence());
      SNodeOperations.replaceWithAnother(SNodeOperations.getParent(node),result);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Migrate instanceOf(ParameterReference) usages";
    }
    public String getAdditionalInfo(){
      return "Migrate instanceOf(ParameterReference) usages";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.smodel.structure.Node_IsInstanceOfOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node,"conceptArgument",true),"jetbrains.mps.lang.smodel.structure.RefConcept_Reference") && SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(node,"conceptArgument",true),"jetbrains.mps.lang.smodel.structure.RefConcept_Reference"),"conceptDeclaration",false) == SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterReference");
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode result=new MigrateParameterReference_MigrationScript.QuotationClass_2t56b7_a0a0a4a0a0a2a0().createNode(IOperation_Behavior.call_getOperand_1213877410070(node),IOperation_Behavior.call_getOperand_1213877410070(node));
      SNodeOperations.replaceWithAnother(SNodeOperations.getParent(node),result);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Migrate specialized link reference access";
    }
    public String getAdditionalInfo(){
      return "Migrate specialized link reference access";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.smodel.structure.SLinkAccess";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"link",false) == SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ParameterReference","parameterDeclaration");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"link",SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.VariableReference","variableDeclaration"),false);
      SNode result=SNodeOperations.getParent(node);
      if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getParent(node)),"jetbrains.mps.baseLanguage.structure.DotExpression")) {
      }
      SNodeOperations.replaceWithAnother(SNodeOperations.getParent(node),result);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Migrate all SNodeTypes with ParameterReference";
    }
    public String getAdditionalInfo(){
      return "Migrate all SNodeTypes with ParameterReference";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.smodel.structure.SNodeType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"concept",false) == SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)","1068581242874");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"concept",SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)","1068498886296"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Migrate all SNodeListTypes with ParameterReference";
    }
    public String getAdditionalInfo(){
      return "Migrate all SNodeListTypes with ParameterReference";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.smodel.structure.SNodeListType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"elementConcept",false) == SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)","1068581242874");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"elementConcept",SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)","1068498886296"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Migrate Node_ReplaceWithNewOperation";
    }
    public String getAdditionalInfo(){
      return "Migrate Node_ReplaceWithNewOperation";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.smodel.structure.Node_ReplaceWithNewOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"concept",false) == SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)","1068581242874");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"concept",SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)","1068498886296"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Migrate Model_CreateNewNodeOperation";
    }
    public String getAdditionalInfo(){
      return "Migrate Model_CreateNewNodeOperation";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.smodel.structure.Model_CreateNewNodeOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"concept",false) == SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)","1068581242874");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"concept",SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)","1068498886296"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Migrate LinkList_AddNewChildOperation";
    }
    public String getAdditionalInfo(){
      return "Migrate LinkList_AddNewChildOperation";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.smodel.structure.LinkList_AddNewChildOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"concept",false) == SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)","1068581242874");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"concept",SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)","1068498886296"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
