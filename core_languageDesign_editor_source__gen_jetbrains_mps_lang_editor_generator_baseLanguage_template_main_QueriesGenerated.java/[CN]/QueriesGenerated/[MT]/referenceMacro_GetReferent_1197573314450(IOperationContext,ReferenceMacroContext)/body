{
  SNode cellLayout=SLinkOperations.getTarget(_context.getNode(),"cellLayout",true);
  if (cellLayout == null) {
    if (SPropertyOperations.getBoolean(_context.getNode(),"vertical")) {
      return SLinkOperations.getTarget(new _Quotations.QuotationClass_4().createNode(),"baseMethodDeclaration",false);
    }
    return SLinkOperations.getTarget(new _Quotations.QuotationClass_5().createNode(),"baseMethodDeclaration",false);
  }
  if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(),"cellLayout",true),"jetbrains.mps.lang.editor.structure.CellLayout_Vertical")) {
    return SLinkOperations.getTarget(new _Quotations.QuotationClass_6().createNode(),"baseMethodDeclaration",false);
  }
  if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(),"cellLayout",true),"jetbrains.mps.lang.editor.structure.CellLayout_Horizontal")) {
    return SLinkOperations.getTarget(new _Quotations.QuotationClass_7().createNode(),"baseMethodDeclaration",false);
  }
  if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(),"cellLayout",true),"jetbrains.mps.lang.editor.structure.CellLayout_Flow")) {
    return SLinkOperations.getTarget(new _Quotations.QuotationClass_8().createNode(),"baseMethodDeclaration",false);
  }
  return SLinkOperations.getTarget(new _Quotations.QuotationClass_9().createNode(),"baseMethodDeclaration",false);
}
