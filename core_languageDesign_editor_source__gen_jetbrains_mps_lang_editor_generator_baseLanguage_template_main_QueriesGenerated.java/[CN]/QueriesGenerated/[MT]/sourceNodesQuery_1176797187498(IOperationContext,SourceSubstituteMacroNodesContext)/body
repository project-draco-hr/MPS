{
  Set<SNode> classes=SetSequence.fromSet(new LinkedHashSet<SNode>());
  if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(),"returnType",true),"jetbrains.mps.baseLanguage.structure.ClassifierType")) {
    SetSequence.fromSet(classes).addElement(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(),"returnType",true),"jetbrains.mps.baseLanguage.structure.ClassifierType"),"classifier",false));
  }
  for (  SNode pd : SLinkOperations.getTargets(_context.getNode(),"parameter",true)) {
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(pd,"type",true),"jetbrains.mps.baseLanguage.structure.ClassifierType")) {
      SetSequence.fromSet(classes).addElement(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(pd,"type",true),"jetbrains.mps.baseLanguage.structure.ClassifierType"),"classifier",false));
    }
  }
  for (  SNode t : SLinkOperations.getTargets(_context.getNode(),"additionalImport",true)) {
    if (SNodeOperations.isInstanceOf(t,"jetbrains.mps.baseLanguage.structure.ClassifierType")) {
      SetSequence.fromSet(classes).addElement(SLinkOperations.getTarget(SNodeOperations.cast(t,"jetbrains.mps.baseLanguage.structure.ClassifierType"),"classifier",false));
    }
  }
  return ListSequence.fromListWithValues(new ArrayList<SNode>(),classes);
}
