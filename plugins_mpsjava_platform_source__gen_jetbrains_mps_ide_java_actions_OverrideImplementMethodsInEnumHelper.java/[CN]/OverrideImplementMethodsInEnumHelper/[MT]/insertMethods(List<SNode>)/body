{
  int index=(myContextMember != null && SNodeOperations.isInstanceOf(myContextMember,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration")) && SNodeOperations.getParent(myContextMember) == enumConstant ? ListSequence.fromList(SLinkOperations.getChildren(enumConstant,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367388b3L,0x6d60019ab157734L,"method"))).indexOf(SNodeOperations.cast(myContextMember,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration"))) + 1 : -1);
  List<SNode> result=new ArrayList<SNode>();
  for (  SNode m : baseMethods) {
    SNode baseMethod=SNodeOperations.cast(m,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration"));
    SNode method=SNodeOperations.cast(BehaviorReflection.invokeNonVirtual((Class<SNode>)((Class)Object.class),baseMethod,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration","call_getMethodToImplement_69709522611978987",new Object[]{myClassConcept}),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration"));
    SPropertyOperations.set(method,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,0x1126a8d157dL,"isAbstract"),"" + (false));
    SLinkOperations.setTarget(method,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1ffL,"body"),SNodeFactoryOperations.createNewNode(SNodeOperations.getModel(myClassConcept),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b200L,"jetbrains.mps.baseLanguage.structure.StatementList")),null));
    if (index != -1) {
      ListSequence.fromList(SLinkOperations.getChildren(enumConstant,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367388b3L,0x6d60019ab157734L,"method"))).insertElement(index++,method);
    }
 else {
      ListSequence.fromList(SLinkOperations.getChildren(enumConstant,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367388b3L,0x6d60019ab157734L,"method"))).addElement(method);
    }
    update(method,baseMethod);
    ListSequence.fromList(result).addElement(method);
  }
  return result;
}
