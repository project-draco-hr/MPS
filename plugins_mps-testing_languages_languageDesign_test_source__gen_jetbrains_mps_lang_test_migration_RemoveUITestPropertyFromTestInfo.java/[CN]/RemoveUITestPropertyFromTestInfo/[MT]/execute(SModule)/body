{
  final GeneratedMatchingPattern pattern=new RemoveUITestPropertyFromTestInfo.Pattern_vbjplg_a0a0a1();
  Sequence.fromIterable(((Iterable<SModel>)m.getModels())).translate(new ITranslator2<SModel,SNode>(){
    public Iterable<SNode> translate(    SModel it){
      return SModelOperations.nodes(it,SNodeOperations.asSConcept(pattern.getConcept()));
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode n){
      return true;
    }
  }
).sort(new ISelector<SNode,Integer>(){
    public Integer select(    SNode it){
      return ListSequence.fromList(SNodeOperations.getNodeAncestors(it,null,false)).count();
    }
  }
,false).visitAll(new IVisitor<SNode>(){
    public void visit(    final SNode nodeToMigrate){
      if (!(pattern.match(nodeToMigrate))) {
        return;
      }
      applyTransormMigration(nodeToMigrate,new Computable<SNode>(){
        public SNode compute(){
          return new _FunctionTypes._return_P1_E0<SNode,SNode>(){
            public SNode invoke(            SNode node){
              node.setProperty("uiTest",null);
              return node;
            }
          }
.invoke(nodeToMigrate);
        }
      }
);
    }
  }
);
  return null;
}
