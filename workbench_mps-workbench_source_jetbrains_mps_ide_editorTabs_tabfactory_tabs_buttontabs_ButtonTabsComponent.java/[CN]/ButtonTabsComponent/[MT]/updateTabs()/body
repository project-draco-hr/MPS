{
  myRealTabs.clear();
  ArrayList<EditorTabDescriptor> tabs=new ArrayList<EditorTabDescriptor>(myPossibleTabs);
  Collections.sort(tabs,new EditorTabComparator());
  Map<EditorTabDescriptor,List<SNode>> newContent=updateDocumentsAndNodes();
  for (  EditorTabDescriptor tab : tabs) {
    List<SNode> nodes=newContent.get(tab);
    if (nodes != null) {
      myRealTabs.add(new ButtonEditorTab(this,new NodeChangeCallback(){
        public void changeNode(        SNode newNode){
          onNodeChange(newNode);
        }
      }
,myRealTabs.size(),tab,myBaseNode,getColorProvider(),myEditor));
    }
  }
  DefaultActionGroup group=new DefaultActionGroup();
  for (  ButtonEditorTab tab : myRealTabs) {
    group.add(tab.getSelectTabAction());
  }
  if (myToolbar != null) {
    getComponent().remove(myToolbar.getComponent());
  }
  ActionToolbar actionToolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,group,true);
  actionToolbar.setLayoutPolicy(ActionToolbar.WRAP_LAYOUT_POLICY);
  myToolbar=actionToolbar;
  getComponent().add(myToolbar.getComponent(),BorderLayout.CENTER);
}
