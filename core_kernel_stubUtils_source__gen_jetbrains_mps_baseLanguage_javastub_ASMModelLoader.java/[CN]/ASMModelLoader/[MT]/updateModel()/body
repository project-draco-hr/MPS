{
  try {
    ClassifierLoader loader=new ClassifierLoader(new SReferenceCreator(myModule,myModel),mySkipPrivate);
    Iterable<IFile> classFiles=CollectionSequence.fromCollection(myPaths).select(new ISelector<String,IFile>(){
      public IFile select(      String it){
        return FileSystem.getInstance().getFileByPath(it);
      }
    }
).where(new IWhereFilter<IFile>(){
      public boolean accept(      IFile it){
        return it != null;
      }
    }
).translate(new ITranslator2<IFile,IFile>(){
      public Iterable<IFile> translate(      IFile it){
        return it.getChildren();
      }
    }
).where(new IWhereFilter<IFile>(){
      public boolean accept(      IFile it){
        return !(it.isDirectory()) && it.getName().endsWith(".class") && !(ClassifierLoader.getClassName(it).contains("$"));
      }
    }
);
    for (    IFile classfile : classFiles) {
      if (myModel.getNode(ASMNodeId.createId(ClassifierLoader.getClassName(classfile))) != null) {
        continue;
      }
      loader.getClassifier(classfile,new _FunctionTypes._void_P1_E0<SNode>(){
        public void invoke(        SNode n){
          myModel.addRootNode(n);
        }
      }
);
    }
  }
 catch (  Exception e) {
    LOG.error("Exception",e);
  }
}
