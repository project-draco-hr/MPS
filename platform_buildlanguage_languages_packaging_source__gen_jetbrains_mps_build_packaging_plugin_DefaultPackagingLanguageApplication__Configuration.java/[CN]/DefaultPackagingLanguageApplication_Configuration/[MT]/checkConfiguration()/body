{
  final StringBuilder error=new StringBuilder();
{
    String paramsReport=DefaultPackagingLanguageApplication_Configuration.this.getStateObject().myJavaRunParameters.getErrorReport();
    if (paramsReport != null) {
      error.append(paramsReport).append("\n");
    }
    final SNode node=new _FunctionTypes._return_P0_E0<SNode>(){
      public SNode invoke(){
        SNode snode;
        String errorReport;
{
          Tuples._2<SNode,String> _tmp_xsfjxy_c0a0a2a1a1=DefaultPackagingLanguageApplication_Configuration.this.checkNode();
          snode=_tmp_xsfjxy_c0a0a2a1a1._0();
          errorReport=_tmp_xsfjxy_c0a0a2a1a1._1();
        }
        if (snode == null) {
          error.append(errorReport).append("\n");
        }
        return snode;
      }
    }
.invoke();
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        if (!(ListSequence.fromList(SNodeOperations.getDescendants(node,"jetbrains.mps.build.packaging.structure.INotBuildableComponent",false,new String[]{})).isEmpty())) {
          error.append("can not run this node").append("\n");
        }
      }
    }
);
  }
  if (error.length() != 0) {
    throw new RuntimeConfigurationException(error.toString());
  }
}
