{
  Language language=SModelUtil.getDeclaringLanguage(cd);
  if (language == null) {
    return;
  }
  List<SNode> superConcepts=BehaviorReflection.invokeVirtual((Class<List<SNode>>)((Class)(Object.class)),cd,"virtual_getImmediateSuperconcepts_1222430305282",new Object[]{});
  Set<Language> extendedLanguages=LanguageDependenciesManager.getAllExtendedLanguages(language);
  for (  SNode superConcept : superConcepts) {
    Language conceptLanguage=SModelUtil.getDeclaringLanguage(superConcept);
    if (conceptLanguage == null) {
      continue;
    }
    if (conceptLanguage != language && !(SetSequence.fromSet(extendedLanguages).contains(conceptLanguage))) {
{
        MessageTarget errorTarget=new NodeMessageTarget();
        errorTarget=new PropertyMessageTarget("name");
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(cd,"language " + conceptLanguage.getModuleName() + " of concept "+ SPropertyOperations.getString(superConcept,"name")+ " is not extended by "+ language.getModuleName(),"r:00000000-0000-4000-0000-011c8959028f(jetbrains.mps.lang.structure.typesystem)","1235136520823",null,errorTarget);
{
          BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.lang.structure.typesystem.AddExtendedLanguage_QuickFix",false);
          intentionProvider.putArgument("extLang",conceptLanguage);
          intentionProvider.putArgument("lang",language);
          _reporter_2309309498.addIntentionProvider(intentionProvider);
        }
      }
      break;
    }
  }
}
