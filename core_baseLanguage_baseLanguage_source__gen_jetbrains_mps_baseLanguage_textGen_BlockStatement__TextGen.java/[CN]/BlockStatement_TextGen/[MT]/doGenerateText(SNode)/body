{
  TraceInfoGenerationUtil.createPositionInfo(this,node);
  boolean needBrackets=false;
  if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node),"jetbrains.mps.baseLanguage.structure.BlockStatement") || SNodeOperations.isInstanceOf(SNodeOperations.getParent(node),"jetbrains.mps.baseLanguage.structure.StatementList")) {
    if ((SLinkOperations.getTarget(node,"statements",true) != null)) {
      for (      SNode statement : SLinkOperations.getTargets(SLinkOperations.getTarget(node,"statements",true),"statement",true)) {
        if (SNodeOperations.isInstanceOf(statement,"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement")) {
          needBrackets=true;
          break;
        }
      }
    }
  }
 else {
    needBrackets=true;
  }
  if (needBrackets) {
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node),"jetbrains.mps.baseLanguage.structure.IfStatement")) {
      this.append(" {");
    }
 else {
      this.appendNewLine();
      this.appendWithIndent("{");
    }
    this.increaseDepth();
  }
  if ((SLinkOperations.getTarget(node,"statements",true) != null)) {
    TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),SLinkOperations.getTarget(node,"statements",true),this.getSNode());
  }
  if (needBrackets) {
    this.decreaseDepth();
    this.appendNewLine();
    this.appendWithIndent("}");
  }
  TraceInfoGenerationUtil.fillPositionInfo(this,node);
}
