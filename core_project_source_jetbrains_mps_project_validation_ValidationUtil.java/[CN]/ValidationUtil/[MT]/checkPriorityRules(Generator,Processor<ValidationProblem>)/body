{
  boolean goOn=true;
  for (  MappingPriorityRule mpr : generator.getModuleDescriptor().getPriorityRules()) {
    if (!goOn) {
      return false;
    }
    MappingConfig_AbstractRef left=mpr.getLeft();
    MappingConfig_AbstractRef right=mpr.getRight();
    if (left == null || right == null) {
      final String s=mpr.asString(generator.getRepository());
      goOn=processor.process(new ValidationProblem(Severity.ERROR,String.format("Broken priority rule: %s",s)));
      continue;
    }
    if (left.isIncomplete()) {
      final String s=mpr.asString(generator.getRepository());
      goOn=processor.process(new ValidationProblem(Severity.ERROR,String.format("Left-hand side of rule %s is incomplete",s)));
    }
    if (right.isIncomplete()) {
      final String s=mpr.asString(generator.getRepository());
      goOn&=processor.process(new ValidationProblem(Severity.ERROR,String.format("Right-hand side of rule %s is incomplete",s)));
    }
  }
  return true;
}
