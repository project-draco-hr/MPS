{
  validateAbstractModule(generator,consumer);
  for (  SModuleReference gen : generator.getModuleDescriptor().getDepGenerators()) {
    if (ModuleRepositoryFacade.getInstance().getModule(gen) != null)     continue;
    consumer.consume(new ValidationProblem(Severity.ERROR,"Can't find generator dependency: " + gen.getModuleName()));
  }
  Set<String> usedLanguages=new HashSet<String>();
  ModelDependencyScanner depScan=new ModelDependencyScanner();
  depScan.crossModelReferences(true).usedLanguages(false);
  boolean anyGeneratorModelNotLoaded=false;
  for (  SModel model : generator.getModels()) {
    if (!model.isLoaded()) {
      anyGeneratorModelNotLoaded|=SModelStereotype.isGeneratorModel(model);
      continue;
    }
    if (SModelStereotype.isGeneratorModel(model)) {
      usedLanguages.addAll(ModelContentUtil.getUsedLanguageNamespacesInTemplateModel(model));
    }
    depScan.walk(model);
  }
  warnMissingTargetLangRuntime(generator,usedLanguages,consumer);
  if (!anyGeneratorModelNotLoaded) {
    warnStrictGeneratorDependencies(generator,depScan,consumer);
  }
}
