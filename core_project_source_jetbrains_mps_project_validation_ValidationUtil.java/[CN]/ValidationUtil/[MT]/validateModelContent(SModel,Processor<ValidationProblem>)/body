{
  for (  SNode node : SNodeUtil.getDescendants(model)) {
    SLanguage lang=node.getConcept().getLanguage();
    if (((SLanguageAdapter)lang).getLanguageDescriptor() == null) {
      LanguageMissingError error=new LanguageMissingError(node,lang,lang.getSourceModule() == null);
      if (!processor.process(error))       return;
      continue;
    }
    SConcept concept=node.getConcept();
    if (!concept.isValid()) {
      if (!processor.process(new ConceptMissingError(node,concept)))       return;
      continue;
    }
    List<SProperty> props=IterableUtil.asList(concept.getProperties());
    for (    SProperty p : node.getProperties()) {
      if (props.contains(p))       continue;
      if (!processor.process(new ConceptFeatureMissingError(node,p,"property")))       return;
    }
    List<SContainmentLink> links=IterableUtil.asList(concept.getContainmentLinks());
    for (    SNode n : node.getChildren()) {
      SContainmentLink l=n.getContainmentLink();
      if (links.contains(l))       continue;
      if (!processor.process(new ConceptFeatureMissingError(node,l,"link")))       return;
    }
    List<SReferenceLink> refs=IterableUtil.asList(concept.getReferenceLinks());
    for (    SReference r : node.getReferences()) {
      SReferenceLink l=r.getLink();
      if (refs.contains(l))       continue;
      if (!processor.process(new ConceptFeatureMissingError(node,l,"reference")))       return;
    }
  }
}
