{
  Language sourceLanguage=generator.getSourceLanguage();
  usedLanguages.remove(sourceLanguage.getModuleName());
  if (usedLanguages.isEmpty())   return true;
  final HashSet<SModuleReference> compileTimeDeps=new HashSet<SModuleReference>();
  for (  SModule d : new GlobalModuleDependenciesManager(sourceLanguage).getModules(Deptype.COMPILE)) {
    compileTimeDeps.add(d.getModuleReference());
  }
  for (  String lang : usedLanguages) {
    Language language=ModuleRepositoryFacade.getInstance().getModule(lang,Language.class);
    if (language == null || language.getRuntimeModulesReferences().isEmpty())     continue;
    if (compileTimeDeps.containsAll(language.getRuntimeModulesReferences()))     continue;
    if (!processor.process(new ValidationProblem(Severity.WARNING,String.format("%s shall specify language %s as generation target",sourceLanguage,lang))))     return false;
  }
  return true;
}
