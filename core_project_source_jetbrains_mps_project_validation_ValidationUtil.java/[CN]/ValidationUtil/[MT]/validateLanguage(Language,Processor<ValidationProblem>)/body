{
  if (!validateAbstractModule(language,processor))   return;
  for (  SModuleReference el : language.getExtendedLanguageRefs()) {
    if (ModuleRepositoryFacade.getInstance().getModule(el) != null)     continue;
    if (!processor.process(new ValidationProblem(Severity.ERROR,"Can't find extended language: " + el.getModuleName())))     return;
  }
  for (  Language l : LanguageDependenciesManager.getAllExtendedLanguages(language)) {
    SModel descriptor=LanguageAspect.BEHAVIOR.get(l);
    if (descriptor != null)     continue;
    if (!processor.process(new ValidationProblem(Severity.ERROR,language == l ? "Behavior aspect is absent" : "Cannot extend language without behavior aspect: " + l.getModuleName())))     return;
  }
  for (  SModuleReference mr : language.getRuntimeModulesReferences()) {
    SModule runtimeModule=ModuleRepositoryFacade.getInstance().getModule(mr);
    if (runtimeModule == null)     continue;
    if ((runtimeModule instanceof Solution))     continue;
    if (!processor.process(new ValidationProblem(Severity.ERROR,"Runtime module " + runtimeModule + " is not a solution")))     return;
  }
  for (  SModelReference accessory : language.getModuleDescriptor().getAccessoryModels()) {
    org.jetbrains.mps.openapi.model.SModel accModel=accessory.resolve(MPSModuleRepository.getInstance());
    if (accModel == null)     continue;
    if (VisibilityUtil.isVisible(language,accModel))     continue;
    if (!processor.process(new ValidationProblem(Severity.ERROR,"Can't find accessory model: " + accessory.getModelName())))     return;
  }
  if (!checkCyclicInheritance(language)) {
    if (!processor.process(new ValidationProblem(Severity.WARNING,"Cyclic language hierarchy")))     return;
  }
}
