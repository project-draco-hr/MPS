{
  if (!validateAbstractModule(generator,processor)) {
    return;
  }
  final SRepository repository=generator.getRepository();
  for (  SModuleReference gen : generator.getModuleDescriptor().getDepGenerators()) {
    if (gen.resolve(repository) != null) {
      continue;
    }
    if (!processor.process(new ValidationProblem(Severity.ERROR,"Can't find generator dependency: " + gen.getModuleName()))) {
      return;
    }
  }
  if (!checkPriorityRules(generator,processor)) {
    return;
  }
  Set<SLanguage> usedLanguages=new HashSet<SLanguage>();
  ModelDependencyScanner depScan=new ModelDependencyScanner();
  depScan.crossModelReferences(true).usedLanguages(false);
  boolean anyGeneratorModelNotLoaded=false;
  for (  SModel model : generator.getModels()) {
    if (!model.isLoaded()) {
      anyGeneratorModelNotLoaded|=SModelStereotype.isGeneratorModel(model);
      continue;
    }
    if (SModelStereotype.isGeneratorModel(model) && !checkGeneratorModel(model,usedLanguages,processor)) {
      return;
    }
    depScan.walk(model);
  }
  if (!warnMissingTargetLangRuntime(generator,usedLanguages,processor)) {
    return;
  }
  if (!anyGeneratorModelNotLoaded) {
    if (!warnStrictGeneratorDependencies(generator,depScan,processor)) {
      return;
    }
    if (generator.getOwnTemplateModels().isEmpty()) {
      processor.process(new ValidationProblem(Severity.WARNING,"No template models in the generator, generator is no-op"));
    }
  }
}
