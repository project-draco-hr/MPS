{
  for (  SNode root : rootsToCheck) {
    for (    SNode node : SNodeUtil.getDescendants(root)) {
      SConcept concept=node.getConcept();
      if (!concept.isValid()) {
        consumer.consume(new ConceptMissingError(node,concept));
        continue;
      }
      List<SProperty> props=IterableUtil.asList(concept.getProperties());
      for (      SProperty p : node.getProperties()) {
        if (props.contains(p))         continue;
        consumer.consume(new ConceptFeatureMissingError(node,p,"property"));
      }
      List<SContainmentLink> links=IterableUtil.asList(concept.getContainmentLinks());
      for (      SNode n : node.getChildren()) {
        SContainmentLink l=n.getContainmentLink();
        if (links.contains(l))         continue;
        consumer.consume(new ConceptFeatureMissingError(node,l,"link"));
      }
      List<SReferenceLink> refs=IterableUtil.asList(concept.getReferenceLinks());
      for (      SReference r : node.getReferences()) {
        SReferenceLink l=r.getLink();
        if (refs.contains(l))         continue;
        consumer.consume(new ConceptFeatureMissingError(node,l,"reference"));
      }
    }
  }
}
