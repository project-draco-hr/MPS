{
  SNode link=null;
  if (SPropertyOperations.hasValue(linkNode,"metaClass","reference","reference")) {
    link=SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SReference",null);
  }
 else   if (SPropertyOperations.hasValue(linkNode,"metaClass","aggregation","reference")) {
    link=SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SChildLink",null);
  }
  SPropertyOperations.set(link,"name",SPropertyOperations.getString(linkNode,"role"));
  link.addReference(new DynamicReference("target",link,null,SPropertyOperations.getString(SLinkOperations.getTarget(linkNode,"target",false),"name")));
  SLinkOperations.setTarget(link,"cardinality",SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SCardinality",null),true);
  SPropertyOperations.set(SLinkOperations.getTarget(link,"cardinality",true),"isRequired","" + (SPropertyOperations.hasValue(linkNode,"sourceCardinality","1","0..1") || SPropertyOperations.hasValue(linkNode,"sourceCardinality","1..n","0..1")));
  SPropertyOperations.set(SLinkOperations.getTarget(link,"cardinality",true),"isMultiple","" + (SPropertyOperations.hasValue(linkNode,"sourceCardinality","0..n","0..1") || SPropertyOperations.hasValue(linkNode,"sourceCardinality","1..n","0..1")));
  return link;
}
