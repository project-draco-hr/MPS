{
  final SNode result=SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SConcept",null);
  MapSequence.fromMap(map).put(concept,result);
  updateAbstractConceptDeclarationFields(concept,result);
  SPropertyOperations.set(result,"isAbstract","" + (ListSequence.fromList(SLinkOperations.getTargets(concept,"conceptProperty",true)).any(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return isConceptProperty(it,"jetbrains.mps.lang.core.structure.BaseConcept","abstract");
    }
  }
)));
  SPropertyOperations.set(result,"isFinal","" + (ListSequence.fromList(SLinkOperations.getTargets(concept,"conceptProperty",true)).any(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return isConceptProperty(it,"jetbrains.mps.lang.core.structure.BaseConcept","final");
    }
  }
)));
  SPropertyOperations.set(result,"canBeRoot","" + (SPropertyOperations.getBoolean(concept,"rootable")));
  for (  final SNode implementedConcepts : SLinkOperations.getTargets(concept,"implements",true)) {
    final SNode ref=SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SInterfaceReference",null);
    later(new _FunctionTypes._void_P0_E0(){
      public void invoke(){
        SLinkOperations.setTarget(ref,"target",SNodeOperations.as(resolve(SConceptOperations.findConceptDeclaration("jetbrains.mps.core.structure.structure.SInterfaceConcept"),SLinkOperations.getTarget(implementedConcepts,"intfc",false)),"jetbrains.mps.core.structure.structure.SInterfaceConcept"),false);
      }
    }
);
    SNodeOperations.getChildren(result,SLinkOperations.findLinkDeclaration("jetbrains.mps.core.structure.structure.SConcept","implements")).add(ref);
  }
  if ((SLinkOperations.getTarget(concept,"extends",false) != null) && !(SLinkOperations.getTarget(concept,"extends",false) == SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)","1133920641626"))) {
    later(new _FunctionTypes._void_P0_E0(){
      public void invoke(){
        SLinkOperations.setTarget(result,"extends",SNodeOperations.as(resolve(SConceptOperations.findConceptDeclaration("jetbrains.mps.core.structure.structure.SConcept"),SLinkOperations.getTarget(concept,"extends",false)),"jetbrains.mps.core.structure.structure.SConcept"),false);
      }
    }
);
  }
  return result;
}
