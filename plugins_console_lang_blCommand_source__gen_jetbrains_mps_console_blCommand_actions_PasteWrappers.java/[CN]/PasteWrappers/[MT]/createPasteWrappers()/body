{
  List<PasteWrapper> result=ListSequence.fromList(new ArrayList<PasteWrapper>());
  ListSequence.fromList(result).addElement(new PasteWrapper(){
    public String getSourceConceptFqName(){
      return "jetbrains.mps.baseLanguage.structure.Expression";
    }
    public String getTargetConceptFqName(){
      return "jetbrains.mps.console.base.structure.Command";
    }
    public SNode wrap(    PasteWrapperContext _context){
      return createBLExpression_sma98h_a0a0a(SNodeOperations.cast(HUtil.copyIfNecessary(_context.getSourceNode()),"jetbrains.mps.baseLanguage.structure.Expression"));
    }
  }
);
  ListSequence.fromList(result).addElement(new PasteWrapper(){
    public String getSourceConceptFqName(){
      return "jetbrains.mps.console.blCommand.structure.BLExpression";
    }
    public String getTargetConceptFqName(){
      return "jetbrains.mps.baseLanguage.structure.Expression";
    }
    public SNode wrap(    PasteWrapperContext _context){
      return SLinkOperations.getTarget(_context.getSourceNode(),"expression",true);
    }
  }
);
  ListSequence.fromList(result).addElement(new PasteWrapper(){
    public String getSourceConceptFqName(){
      return "jetbrains.mps.console.blCommand.structure.BLExpression";
    }
    public String getTargetConceptFqName(){
      return "jetbrains.mps.baseLanguage.structure.Statement";
    }
    public SNode wrap(    PasteWrapperContext _context){
      return createExpressionStatement_sma98h_a0a0c(SNodeOperations.cast(HUtil.copyIfNecessary(SLinkOperations.getTarget(_context.getSourceNode(),"expression",true)),"jetbrains.mps.baseLanguage.structure.Expression"));
    }
  }
);
  return result;
}
