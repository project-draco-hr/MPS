{
  final BlockView blockView=new BlockView();
  blockView.minimalSize().set(new Vector(10,10));
  blockView.rect.background().set(Color.TRANSPARENT);
  blockView.padding().set(0);
  blockView.contentView.prop(RootTrait.MOVE_HANDLER).set(new MoveHandler(){
    public void move(    Vector delta){
      blockView.move(delta);
      blockView.invalidate();
      requestRelayout();
    }
  }
);
  configureView(blockView,new _FunctionTypes._return_P0_E0<Boolean>(){
    public Boolean invoke(){
      return true;
    }
  }
);
  blockView.prop(JetpadUtils.CONNECTABLE).set(Boolean.TRUE);
  blockView.rect.prop(JetpadUtils.SOURCE).set(getSNode());
  blockView.addTrait(new ViewTraitBuilder().on(ViewEvents.KEY_PRESSED,new ViewEventHandler<KeyEvent>(){
    @Override public void handle(    View view,    KeyEvent e){
      if (!(blockView.focused().get())) {
        return;
      }
      if (e.is(Key.T)) {
        blockView.setPortsDirection(blockView.getPortsDirection().turnClockwise());
      }
 else       if (e.is(Key.T,ModifierKey.SHIFT)) {
        blockView.setPortsDirection(blockView.getPortsDirection().turnCounterclockwise());
      }
    }
  }
).build());
  return blockView;
}
