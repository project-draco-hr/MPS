{
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a,descriptor.getConceptFqName())) {
case 0:
    return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new AbandonInput_RuleConsequence_Editor()));
case 1:
  return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new CopySrcListMacro_Editor()));
case 2:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new CopySrcNodeMacro_Editor()));
case 3:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new CreateRootRule_Editor()));
case 4:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new DismissTopMappingRule_Editor()));
case 5:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new DropRootRule_Editor()));
case 6:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new ExportLabel_Editor()));
case 7:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new ExportMacro_Editor()));
case 8:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new GeneratorMessage_Editor()));
case 9:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new GeneratorParameterReference_Editor()));
case 10:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new IfMacro_Editor()));
case 11:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new IncludeMacro_Editor()));
case 12:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new InlineSwitch_Case_Editor()));
case 13:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new InlineSwitch_RuleConsequence_Editor()));
case 14:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new InlineTemplateWithContext_RuleConsequence_Editor()));
case 15:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new InlineTemplate_RuleConsequence_Editor()));
case 16:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new InsertMacro_Editor()));
case 17:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new LabelMacro_Editor()));
case 18:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new LoopMacro_Editor()));
case 19:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new MapSrcListMacro_Editor()));
case 20:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new MapSrcNodeMacro_Editor()));
case 21:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new MappingConfiguration_Editor()));
case 22:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new MappingLabelDeclaration_Editor()));
case 23:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new MappingScript_Editor()));
case 24:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new MappingScriptReference_Editor()));
case 25:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new NodeMacro_Editor()));
case 26:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new PatternReduction_MappingRule_Editor()));
case 27:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new PropertyMacro_Editor()));
case 28:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new Reduction_MappingRule_Editor()));
case 29:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new ReferenceMacro_Editor()));
case 30:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new RootTemplateAnnotation_Editor()));
case 31:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new Root_MappingRule_Editor()));
case 32:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new RuleConsequence_Editor()));
case 33:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new SwitchMacro_Editor()));
case 34:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new TemplateArgumentLinkPatternRefExpression_Editor()));
case 35:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new TemplateArgumentParameterExpression_Editor()));
case 36:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new TemplateArgumentPatternVarRefExpression_Editor()));
case 37:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new TemplateArgumentPropertyPatternRefExpression_Editor()));
case 38:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new TemplateArgumentQueryExpression_Editor()));
case 39:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new TemplateArgumentVariableRefExpression_Editor()));
case 40:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new TemplateCallMacro_Editor()));
case 41:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new TemplateDeclaration_Editor()));
case 42:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new TemplateDeclarationReference_Editor()));
case 43:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new TemplateFragment_Editor()));
case 44:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new TemplateParameterDeclaration_Editor()));
case 45:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new TemplateSwitch_Editor()));
case 46:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new TemplateSwitchMacro_Editor()));
case 47:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new TemplateSwitchReference_Editor()));
case 48:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new TraceMacro_Editor()));
case 49:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new VarMacro_Editor()));
case 50:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new WeaveEach_RuleConsequence_Editor()));
case 51:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new WeaveMacro_Editor()));
case 52:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new Weaving_MappingRule_Editor()));
default :
}
return Collections.<ConceptEditor>emptyList();
}
