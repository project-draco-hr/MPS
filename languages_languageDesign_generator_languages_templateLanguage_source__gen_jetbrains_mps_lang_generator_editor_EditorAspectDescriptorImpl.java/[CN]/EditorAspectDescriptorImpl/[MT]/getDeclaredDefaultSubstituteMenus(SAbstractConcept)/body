{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_xbvbvu_a0e.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return Collections.<SubstituteMenu>singletonList(new templateCallArguments_Contribution());
      }
    break;
case 1:
  if (true) {
    return Collections.<SubstituteMenu>singletonList(new InlineSwitch_RuleConsequence_SubstituteMenu());
  }
break;
case 2:
if (true) {
return Collections.<SubstituteMenu>singletonList(new PropertyMacro_SubstituteMenu());
}
break;
case 3:
if (true) {
return Collections.<SubstituteMenu>singletonList(new RuleConsequence_SubstituteMenu());
}
break;
case 4:
if (true) {
return Collections.<SubstituteMenu>singletonList(new TemplateFunctionParameter_mainContextNode_SubstituteMenu());
}
break;
case 5:
if (true) {
return Collections.<SubstituteMenu>singletonList(new TemplateFunctionParameter_outputNode_SubstituteMenu());
}
break;
case 6:
if (true) {
return Collections.<SubstituteMenu>singletonList(new TemplateFunctionParameter_parentOutputNode_SubstituteMenu());
}
break;
case 7:
if (true) {
return Collections.<SubstituteMenu>singletonList(new TemplateFunctionParameter_sourceNode_SubstituteMenu());
}
break;
case 8:
if (true) {
return Collections.<SubstituteMenu>singletonList(new TemplateFunctionParameter_templatePropertyValue_SubstituteMenu());
}
break;
case 9:
if (true) {
return Collections.<SubstituteMenu>singletonList(new TemplateFunctionParameter_templateReferent_SubstituteMenu());
}
break;
case 10:
if (true) {
return Collections.<SubstituteMenu>singletonList(new WeaveEach_RuleConsequence_SubstituteMenu());
}
break;
default :
}
}
return Collections.<SubstituteMenu>emptyList();
}
