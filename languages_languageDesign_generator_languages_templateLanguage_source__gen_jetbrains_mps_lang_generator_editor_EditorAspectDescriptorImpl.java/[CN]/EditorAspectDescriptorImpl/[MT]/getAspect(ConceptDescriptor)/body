{
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a,descriptor.getConceptFqName())) {
case 0:
    return new AbandonInput_RuleConsequence_Editor();
case 1:
  return new CopySrcListMacro_Editor();
case 2:
return new CopySrcNodeMacro_Editor();
case 3:
return new CreateRootRule_Editor();
case 4:
return new DismissTopMappingRule_Editor();
case 5:
return new DropRootRule_Editor();
case 6:
return new GeneratorDescriptor_Editor();
case 7:
return new GeneratorMessage_Editor();
case 8:
return new GeneratorParameterReference_Editor();
case 9:
return new IfMacro_Editor();
case 10:
return new IncludeMacro_Editor();
case 11:
return new InlineSwitch_Case_Editor();
case 12:
return new InlineSwitch_RuleConsequence_Editor();
case 13:
return new InlineTemplateWithContext_RuleConsequence_Editor();
case 14:
return new InlineTemplate_RuleConsequence_Editor();
case 15:
return new InsertMacro_Editor();
case 16:
return new LabelMacro_Editor();
case 17:
return new LoopMacro_Editor();
case 18:
return new MapSrcListMacro_Editor();
case 19:
return new MapSrcNodeMacro_Editor();
case 20:
return new MappingConfiguration_Editor();
case 21:
return new MappingLabelDeclaration_Editor();
case 22:
return new MappingScript_Editor();
case 23:
return new MappingScriptReference_Editor();
case 24:
return new NodeMacro_Editor();
case 25:
return new PatternReduction_MappingRule_Editor();
case 26:
return new PropertyMacro_Editor();
case 27:
return new Reduction_MappingRule_Editor();
case 28:
return new ReferenceMacro_Editor();
case 29:
return new RootTemplateAnnotation_Editor();
case 30:
return new Root_MappingRule_Editor();
case 31:
return new RuleConsequence_Editor();
case 32:
return new SwitchMacro_Editor();
case 33:
return new TemplateArgumentLinkPatternRefExpression_Editor();
case 34:
return new TemplateArgumentParameterExpression_Editor();
case 35:
return new TemplateArgumentPatternVarRefExpression_Editor();
case 36:
return new TemplateArgumentPropertyPatternRefExpression_Editor();
case 37:
return new TemplateArgumentQueryExpression_Editor();
case 38:
return new TemplateCallMacro_Editor();
case 39:
return new TemplateDeclaration_Editor();
case 40:
return new TemplateDeclarationReference_Editor();
case 41:
return new TemplateFragment_Editor();
case 42:
return new TemplateParameterDeclaration_Editor();
case 43:
return new TemplateSwitch_Editor();
case 44:
return new TemplateSwitchReference_Editor();
case 45:
return new TraceMacro_Editor();
case 46:
return new VarMacro_Editor();
case 47:
return new WeaveEach_RuleConsequence_Editor();
case 48:
return new WeaveMacro_Editor();
case 49:
return new Weaving_MappingRule_Editor();
default :
}
return null;
}
