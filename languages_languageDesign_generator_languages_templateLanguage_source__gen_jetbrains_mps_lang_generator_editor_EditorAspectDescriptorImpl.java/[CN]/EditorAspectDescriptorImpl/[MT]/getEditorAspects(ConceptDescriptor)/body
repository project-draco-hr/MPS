{
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a,descriptor.getConceptFqName())) {
case 0:
    return Collections.<EditorAspect>singletonList(new AbandonInput_RuleConsequence_Editor());
case 1:
  return Collections.<EditorAspect>singletonList(new CopySrcListMacro_Editor());
case 2:
return Collections.<EditorAspect>singletonList(new CopySrcNodeMacro_Editor());
case 3:
return Collections.<EditorAspect>singletonList(new CreateRootRule_Editor());
case 4:
return Collections.<EditorAspect>singletonList(new DismissTopMappingRule_Editor());
case 5:
return Collections.<EditorAspect>singletonList(new DropRootRule_Editor());
case 6:
return Collections.<EditorAspect>singletonList(new GeneratorDescriptor_Editor());
case 7:
return Collections.<EditorAspect>singletonList(new GeneratorMessage_Editor());
case 8:
return Collections.<EditorAspect>singletonList(new GeneratorParameterReference_Editor());
case 9:
return Collections.<EditorAspect>singletonList(new IfMacro_Editor());
case 10:
return Collections.<EditorAspect>singletonList(new IncludeMacro_Editor());
case 11:
return Collections.<EditorAspect>singletonList(new InlineSwitch_Case_Editor());
case 12:
return Collections.<EditorAspect>singletonList(new InlineSwitch_RuleConsequence_Editor());
case 13:
return Collections.<EditorAspect>singletonList(new InlineTemplateWithContext_RuleConsequence_Editor());
case 14:
return Collections.<EditorAspect>singletonList(new InlineTemplate_RuleConsequence_Editor());
case 15:
return Collections.<EditorAspect>singletonList(new InsertMacro_Editor());
case 16:
return Collections.<EditorAspect>singletonList(new LabelMacro_Editor());
case 17:
return Collections.<EditorAspect>singletonList(new LoopMacro_Editor());
case 18:
return Collections.<EditorAspect>singletonList(new MapSrcListMacro_Editor());
case 19:
return Collections.<EditorAspect>singletonList(new MapSrcNodeMacro_Editor());
case 20:
return Collections.<EditorAspect>singletonList(new MappingConfiguration_Editor());
case 21:
return Collections.<EditorAspect>singletonList(new MappingLabelDeclaration_Editor());
case 22:
return Collections.<EditorAspect>singletonList(new MappingScript_Editor());
case 23:
return Collections.<EditorAspect>singletonList(new MappingScriptReference_Editor());
case 24:
return Collections.<EditorAspect>singletonList(new NodeMacro_Editor());
case 25:
return Collections.<EditorAspect>singletonList(new PatternReduction_MappingRule_Editor());
case 26:
return Collections.<EditorAspect>singletonList(new PropertyMacro_Editor());
case 27:
return Collections.<EditorAspect>singletonList(new Reduction_MappingRule_Editor());
case 28:
return Collections.<EditorAspect>singletonList(new ReferenceMacro_Editor());
case 29:
return Collections.<EditorAspect>singletonList(new RootTemplateAnnotation_Editor());
case 30:
return Collections.<EditorAspect>singletonList(new Root_MappingRule_Editor());
case 31:
return Collections.<EditorAspect>singletonList(new RuleConsequence_Editor());
case 32:
return Collections.<EditorAspect>singletonList(new SwitchMacro_Editor());
case 33:
return Collections.<EditorAspect>singletonList(new TemplateArgumentLinkPatternRefExpression_Editor());
case 34:
return Collections.<EditorAspect>singletonList(new TemplateArgumentParameterExpression_Editor());
case 35:
return Collections.<EditorAspect>singletonList(new TemplateArgumentPatternVarRefExpression_Editor());
case 36:
return Collections.<EditorAspect>singletonList(new TemplateArgumentPropertyPatternRefExpression_Editor());
case 37:
return Collections.<EditorAspect>singletonList(new TemplateArgumentQueryExpression_Editor());
case 38:
return Collections.<EditorAspect>singletonList(new TemplateCallMacro_Editor());
case 39:
return Collections.<EditorAspect>singletonList(new TemplateDeclaration_Editor());
case 40:
return Collections.<EditorAspect>singletonList(new TemplateDeclarationReference_Editor());
case 41:
return Collections.<EditorAspect>singletonList(new TemplateFragment_Editor());
case 42:
return Collections.<EditorAspect>singletonList(new TemplateParameterDeclaration_Editor());
case 43:
return Collections.<EditorAspect>singletonList(new TemplateSwitch_Editor());
case 44:
return Collections.<EditorAspect>singletonList(new TemplateSwitchReference_Editor());
case 45:
return Collections.<EditorAspect>singletonList(new TraceMacro_Editor());
case 46:
return Collections.<EditorAspect>singletonList(new VarMacro_Editor());
case 47:
return Collections.<EditorAspect>singletonList(new WeaveEach_RuleConsequence_Editor());
case 48:
return Collections.<EditorAspect>singletonList(new WeaveMacro_Editor());
case 49:
return Collections.<EditorAspect>singletonList(new Weaving_MappingRule_Editor());
default :
}
return Collections.emptyList();
}
