{
  if (node1 == node2)   return true;
  if (node1 == null)   return false;
  if (node2 == null)   return false;
  if (!node1.getConceptFqName().equals(node2.getConceptFqName()))   return false;
  Set<String> propertyNames=node1.getPropertyNames();
  propertyNames.addAll(node2.getPropertyNames());
  for (  String propertyName : propertyNames) {
    if (!EqualUtil.equals(node1.getProperty(propertyName),node2.getProperty(propertyName)))     return false;
  }
  Set<String> referenceRoles=node1.getReferenceRoles();
  referenceRoles.addAll(node2.getReferenceRoles());
  for (  String role : referenceRoles) {
    SNode target1=node1.getReferent(role);
    SNode target2=node2.getReferent(role);
    if (target2 != target1)     return false;
  }
  Set<String> childRoles=node1.getChildRoles();
  childRoles.addAll(node2.getChildRoles());
  for (  String role : childRoles) {
    List<SNode> children1=node1.getChildren(role);
    List<SNode> children2=node2.getChildren(role);
    Iterator<SNode> childrenIterator=children1.iterator();
    for (    SNode child2 : children2) {
      SNode child1=childrenIterator.hasNext() ? childrenIterator.next() : null;
      if (matchModifier.accept(child1,child2)) {
        matchModifier.performAction(child1,child2);
        continue;
      }
      if (!matchNodes(child1,child2))       return false;
    }
    if (childrenIterator.hasNext() && childrenIterator.next() != null)     return false;
  }
  return true;
}
