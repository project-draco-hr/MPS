{
  AsPattern asPattern=AsPattern_AnnotationLink.getAsPattern((BaseConcept)patternNode);
  ListPattern currentListPattern=asPattern instanceof ListPattern ? (ListPattern)asPattern : (ListPattern)patternNode.getAttribute();
  ourCurrentListPatterns.push(currentListPattern);
  boolean stillMatches=true;
  for (  NodeWrapper nodeWrapper : nodes) {
    boolean matchesNow=matchNodes(nodeWrapper,patternNode,substitution);
    stillMatches=stillMatches && matchesNow;
    if (!stillMatches)     break;
    substitution.addNodeToListBindedWithVar(currentListPattern,nodeWrapper.getNode());
  }
  ListPattern poppedListPattern=ourCurrentListPatterns.pop();
  LOG.assertLog(poppedListPattern == currentListPattern);
  return stillMatches;
}
