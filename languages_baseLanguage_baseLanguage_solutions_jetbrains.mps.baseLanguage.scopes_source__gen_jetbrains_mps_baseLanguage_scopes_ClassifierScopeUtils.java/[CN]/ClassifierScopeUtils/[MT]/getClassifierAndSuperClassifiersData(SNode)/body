{
  if (SNodeOperations.getModel(classifier).getModule() instanceof TransientModelsModule) {
    return new ClassifierScopeUtils.ClassifierAndSuperClassifiersData(classifier);
  }
 else {
    return RepositoryStateCacheUtils.getFromCache(ClassifierScopeUtils.class,classifier,new _FunctionTypes._return_P0_E0<ClassifierScopeUtils.ClassifierAndSuperClassifiersData>(){
      public ClassifierScopeUtils.ClassifierAndSuperClassifiersData invoke(){
        return new ClassifierScopeUtils.ClassifierAndSuperClassifiersData(classifier);
      }
    }
);
  }
}
