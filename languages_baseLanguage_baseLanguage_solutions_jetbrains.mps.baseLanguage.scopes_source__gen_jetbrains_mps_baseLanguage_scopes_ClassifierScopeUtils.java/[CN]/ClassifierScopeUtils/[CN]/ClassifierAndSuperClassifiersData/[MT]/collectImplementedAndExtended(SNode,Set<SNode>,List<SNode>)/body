{
  if (SetSequence.fromSet(subClassifiers).contains(classifier)) {
    return true;
  }
  if ((classifier == null) || SetSequence.fromSet(classifiers).contains(classifier)) {
    return false;
  }
  SetSequence.fromSet(classifiers).addElement(classifier);
  SetSequence.fromSet(subClassifiers).addElement(classifier);
  if (ListSequence.fromList(typeParms).isNotEmpty()) {
    Iterator<SNode> typeVars=ListSequence.fromList(SLinkOperations.getChildren(classifier,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1109279851642l,1109279881614l,"typeVariableDeclaration"))).iterator();
    for (    SNode typeParm : typeParms) {
      if (!(typeVars.hasNext())) {
        break;
      }
      SNode typeVar=typeVars.next();
      MapSequence.fromMap(typeByTypeVariable).put(typeVar,typeParm);
    }
  }
  for (  SNode superType : BehaviorReflection.invokeVirtual((Class<List<SNode>>)((Class)Object.class),classifier,"virtual_getExtendedClassifierTypes_2201875424516179426",new Object[]{})) {
    if (collectImplementedAndExtended(SLinkOperations.getTarget(superType,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1107535924139l,"classifier")),subClassifiers,SLinkOperations.getChildren(superType,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1109201940907l,"parameter")))) {
      return true;
    }
  }
  SetSequence.fromSet(subClassifiers).removeElement(classifier);
  return false;
}
