{
  if (SetSequence.fromSet(subClassifiers).contains(classifier)) {
    return true;
  }
  if ((classifier == null) || SetSequence.fromSet(classifiers).contains(classifier)) {
    return false;
  }
  SetSequence.fromSet(classifiers).addElement(classifier);
  SetSequence.fromSet(subClassifiers).addElement(classifier);
  if (ListSequence.fromList(typeParms).isNotEmpty()) {
    Iterator<SNode> typeVars=ListSequence.fromList(SLinkOperations.getChildren(classifier,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102463b447aL,0x102463bb98eL,"typeVariableDeclaration"))).iterator();
    for (    SNode typeParm : typeParms) {
      if (!(typeVars.hasNext())) {
        break;
      }
      SNode typeVar=typeVars.next();
      MapSequence.fromMap(typeByTypeVariable).put(typeVar,typeParm);
    }
  }
  for (  SNode superType : Classifier_BehaviorDescriptor.getExtendedClassifierTypes_id1UeCwxlWKny.invoke(classifier)) {
    if (collectImplementedAndExtended(SLinkOperations.getTarget(superType,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")),subClassifiers,SLinkOperations.getChildren(superType,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x102419671abL,"parameter")))) {
      return true;
    }
  }
  SetSequence.fromSet(subClassifiers).removeElement(classifier);
  return false;
}
