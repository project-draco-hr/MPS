{
  final zClosureContext1 _zClosureContext1=new zClosureContext1();
  SNode statementNode=SNodeOperations.getAncestor(node,"jetbrains.mps.baseLanguage.structure.Statement",false,false);
  SNode ifNode=SNodeOperations.insertNewPrevSiblingChild(statementNode,"jetbrains.mps.baseLanguage.structure.IfStatement");
  SNode ifTrue=SLinkOperations.setNewChild(ifNode,"ifTrue","jetbrains.mps.baseLanguage.structure.StatementList");
  SNode ifFalse=SLinkOperations.setNewChild(SLinkOperations.setNewChild(ifNode,"ifFalseStatement","jetbrains.mps.baseLanguage.structure.BlockStatement"),"statements","jetbrains.mps.baseLanguage.structure.StatementList");
  SLinkOperations.setTarget(ifNode,"condition",SNodeOperations.copyNode(node),true);
  SLinkOperations.insertChildFirst(ifTrue,"statement",SNodeOperations.copyNode(statementNode));
  SLinkOperations.insertChildFirst(ifFalse,"statement",SNodeOperations.copyNode(statementNode));
  _zClosureContext1.fake_node=node;
  Iterable<SNode> refs;
  refs=SequenceOperations.where(SNodeOperations.getDescendants(SequenceOperations.getFirst(SLinkOperations.getTargets(ifTrue,"statement",true)),null,false),new zPredicate1(null,_zClosureContext1));
  SequenceOperations.forEach(refs,new zForEach1(null,_zClosureContext1));
  refs=SequenceOperations.where(SNodeOperations.getDescendants(SequenceOperations.getFirst(SLinkOperations.getTargets(ifFalse,"statement",true)),null,false),new zPredicate2(null,_zClosureContext1));
  SequenceOperations.forEach(refs,new zForEach2(null,_zClosureContext1));
  SNodeOperations.deleteNode(statementNode);
}
