{
  this.addNodeById("1230053302525");
  this.addNodeById("1230053302541");
  this.addNodeById("1230053302545");
  this.addNodeById("1230053302552");
  MoveStaticMethodRefactoring ref=new MoveStaticMethodRefactoring(SNodeOperations.cast(this.getNodeById("1230053302530"),"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration"),SNodeOperations.cast(this.getNodeById("1230053302542"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
  ref.doRefactoring();
  Assert.assertNull("nodes '" + SNodeOperations.cast(this.getNodeById("1230053302526"),"jetbrains.mps.baseLanguage.structure.ClassConcept") + "' and '"+ SNodeOperations.cast(this.getNodeById("1230053302546"),"jetbrains.mps.baseLanguage.structure.ClassConcept")+ "' do not match!",NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230053302526"),"jetbrains.mps.baseLanguage.structure.ClassConcept"),SNodeOperations.cast(this.getNodeById("1230053302542"),"jetbrains.mps.baseLanguage.structure.ClassConcept")),ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230053302546"),"jetbrains.mps.baseLanguage.structure.ClassConcept"),SNodeOperations.cast(this.getNodeById("1230053302553"),"jetbrains.mps.baseLanguage.structure.ClassConcept"))));
}
