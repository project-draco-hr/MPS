{
  IdeMain.setTestMode(TestMode.NO_TEST);
  TestMain.configureMPS();
  IconLoader.activate();
  final SModel models[]=new SModel[3];
  String resultFile;
  if (args.length == 2 || args.length == 1) {
    try {
      final SModel[] zipped=ModelUtils.loadZippedModels(new File(args[0]),VcsMergeVersion.values());
      models[0]=zipped[0];
      models[1]=zipped[1];
      models[2]=zipped[2];
    }
 catch (    ReadException e) {
      return;
    }
    if (args.length == 1) {
      resultFile=File.createTempFile("mpstmd","").getAbsolutePath();
    }
 else {
      resultFile=args[1];
    }
  }
 else   if (args.length == 4 || args.length == 3) {
    models[0]=ModelUtils.readModel(args[0]);
    models[1]=ModelUtils.readModel(args[1]);
    models[2]=ModelUtils.readModel(args[2]);
    if (args.length == 3) {
      resultFile=File.createTempFile("","").getAbsolutePath();
    }
 else {
      resultFile=args[3];
    }
  }
 else {
    System.err.println("There must be 1-4 parameters");
    return;
  }
  final String finalResultFile=resultFile;
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      MergeModelsDialog dialog=ModelAccess.instance().runReadAction(new Computable<MergeModelsDialog>(){
        public MergeModelsDialog compute(){
          return new MergeModelsDialog(models[0],models[1],models[2],new SimpleDiffRequest(ourProject,"Local Version","Merge Result","Remote Version"));
        }
      }
);
      try {
        Field field=dialog.getClass().getDeclaredField("myMergeTree");
        field.setAccessible(true);
        IdeaTestApplication.getInstance(null).setDataProvider((DiffModelTree)field.get(dialog));
      }
 catch (      Exception e) {
        e.printStackTrace();
      }
      dialog.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
      dialog.showDialog();
      final SModel result=dialog.getResultModel();
      if (result == null) {
        dialog.dispose();
        System.exit(0);
      }
      ModelAccess.instance().runWriteAction(new Runnable(){
        public void run(){
          IFile iFile=FileSystem.getInstance().getFileByPath(finalResultFile);
          if (!iFile.exists())           iFile.createNewFile();
          ModelPersistence.saveModel(result,iFile);
        }
      }
);
      dialog.dispose();
      System.exit(0);
    }
  }
);
}
