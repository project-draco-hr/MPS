{
  SNode parent=SNodeOperations.getParent(op,null,false,false);
  do {
    SNode matchedNode_1=parent;
{
      boolean matches_2=false;
{
        SNode matchingNode_2=parent;
        if (matchingNode_2 != null) {
          matches_2=SModelUtil_new.isAssignableConcept(matchingNode_2.getConceptFqName(),"jetbrains.mps.baseLanguage.ext.collections.lang.structure.SequenceOperationExpression");
        }
      }
      if (matches_2) {
        TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_60().createNode(),op,"jetbrains.mps.baseLanguage.ext.collections.lang.helgins","1205249554164");
        break;
      }
    }
{
      boolean matches_3=false;
{
        SNode matchingNode_3=parent;
        if (matchingNode_3 != null) {
          matches_3=SModelUtil_new.isAssignableConcept(matchingNode_3.getConceptFqName(),"jetbrains.mps.baseLanguage.structure.DotExpression");
        }
      }
      if (matches_3) {
        TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_14().createNode(),op,"jetbrains.mps.baseLanguage.ext.collections.lang.helgins","1178725705174");
        break;
      }
    }
{
      BaseIntentionProvider intentionProvider=null;
      TypeChecker.getInstance().reportTypeError(op,"not expected here","jetbrains.mps.baseLanguage.ext.collections.lang.helgins@5_0","1215607388053",intentionProvider);
    }
  }
 while (false);
}
