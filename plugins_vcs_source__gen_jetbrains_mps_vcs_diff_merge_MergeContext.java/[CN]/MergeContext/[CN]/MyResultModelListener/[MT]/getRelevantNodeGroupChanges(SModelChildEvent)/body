{
  List<ModelChange> nodeChanges=MapSequence.fromMap(myNodeToChanges).get(event.getParent().getSNodeId());
  Iterable<NodeGroupChange> allNodeGroupChanges=ListSequence.fromList(nodeChanges).where(new IWhereFilter<ModelChange>(){
    public boolean accept(    ModelChange c){
      return c instanceof NodeGroupChange;
    }
  }
).<NodeGroupChange>select(new ISelector<ModelChange,NodeGroupChange>(){
    public NodeGroupChange select(    ModelChange c){
      return (NodeGroupChange)c;
    }
  }
);
  return Sequence.fromIterable(allNodeGroupChanges).where(new IWhereFilter<NodeGroupChange>(){
    public boolean accept(    NodeGroupChange ngc){
      return ngc.getRole().equals(event.getChildRole());
    }
  }
).toListSequence();
}
