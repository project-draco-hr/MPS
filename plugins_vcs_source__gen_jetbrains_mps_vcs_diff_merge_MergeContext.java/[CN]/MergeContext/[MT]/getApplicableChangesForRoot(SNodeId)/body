{
  return ListSequence.<ModelChange>fromList(MapSequence.<SNodeId,List<ModelChange>>fromMap(myRootToChanges).get(rootId)).where(new IWhereFilter<ModelChange>(){
    public boolean accept(    ModelChange ch){
      return !(SetSequence.<ModelChange>fromSet(myResolvedChanges).contains(ch)) && Sequence.<ModelChange>fromIterable(getConflictedWith(ch)).isEmpty();
    }
  }
);
}
