{
  Integer index=myIndexMap.get(id);
  if (index == null) {
    return null;
  }
switch (((int)index)) {
case 0:
    return myConceptAutoInitDSLClass;
case 1:
  return myConceptBooleanPropertyInstance;
case 2:
return myConceptCustomMemberDescriptor;
case 3:
return myConceptDSLAnnotation;
case 4:
return myConceptDSLClassMember;
case 5:
return myConceptDSLDescriptor;
case 6:
return myConceptDependentTypeDescriptor;
case 7:
return myConceptDependentTypeInstance;
case 8:
return myConceptEmptyMemberDescriptor;
case 9:
return myConceptGenerateModifier;
case 10:
return myConceptIntegerPropertyInstance;
case 11:
return myConceptMemberInstance;
case 12:
return myConceptMemberModifier;
case 13:
return myConceptMemberPlaceholder;
case 14:
return myConceptMethodDescriptor;
case 15:
return myConceptMethodInstance;
case 16:
return myConceptMethodParameterInstance;
case 17:
return myConceptMultipleModifier;
case 18:
return myConceptParameterDescriptor;
case 19:
return myConceptPlaceholderModifier;
case 20:
return myConceptPropertyDescriptor;
case 21:
return myConceptPropertyInstance;
case 22:
return myConceptRequiredModifier;
case 23:
return myConceptStringPropertyInstance;
default :
throw new IllegalStateException();
}
}
