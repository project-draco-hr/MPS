{
  return (SModelListener)Proxy.newProxyInstance(getClass().getClassLoader(),new Class[]{SModelListener.class},new InvocationHandler(){
    public Object invoke(    Object proxy,    Method method,    Object[] args) throws Throwable {
      if (method.getName().equals("equals") && args.length == 1) {
        return proxy == args[0];
      }
      if (method.getName().equals("hashCode") && args == null) {
        return this.hashCode();
      }
      checkDisposed();
      if (method.getName().equals("beforeChildRemoved")) {
        return null;
      }
      if (args != null && args.length == 1 && args[0] instanceof SModelEvent) {
        SModelEvent e=(SModelEvent)args[0];
        if (myCurrentCommand == null) {
          throw new IllegalStateException("Event outside of a command");
        }
        myEvents.add(e);
      }
      return null;
    }
  }
);
}
