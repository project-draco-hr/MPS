{
  try {
    AbstractModule module=(AbstractModule)((SModel)MapSequence.fromMap(_params).get("model")).getModule();
    TreeFileChooser treeFileChooser=new TreeFileChooser();
    treeFileChooser.setDirectoriesAreAlwaysVisible(true);
    treeFileChooser.setMode(TreeFileChooser.MODE_DIRECTORIES);
    final SModel sModel=((SModel)MapSequence.fromMap(_params).get("model"));
    File initial=ImportSourcesIntoModelUtils.getInitialDirectoryForImport(module,SNodeOperations.getModelLongName(sModel));
    if (initial != null) {
      treeFileChooser.setInitialFile(FileSystem.getInstance().getFileByPath(initial.getAbsolutePath()));
    }
    IFile result=treeFileChooser.showDialog(((Frame)MapSequence.fromMap(_params).get("frame")));
    if (result != null) {
      final DirParser dirParser=new DirParser(module,null,new File(result.getPath()));
      ModelAccess.instance().runWriteAction(new Runnable(){
        public void run(){
          try {
            dirParser.parseDirs();
          }
 catch (          JavaParseException e) {
            throw new RuntimeException(e);
          }
        }
      }
);
    }
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Priority.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "GetModelContentsFromSource",t);
    }
  }
}
