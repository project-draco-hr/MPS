{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(1381097486113260572l,-6346909095260771222l),7288041816792374840l,3816167865390363701l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(1381097486113260572l,-6346909095260771222l),7288041816792374840l,3816167865390363701l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          List<SNode> result=new ArrayList<SNode>();
          SNode container=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilders",true,false);
          for (          SNode builders : SimpleBuilders_Behavior.call_getAncestors_6211769134875410554(container)) {
            for (            SNode dcl : SLinkOperations.getChildren(builders,MetaAdapterFactory.getContainmentLink(new UUID(1381097486113260572l,-6346909095260771222l),7288041816792374843l,7288041816792374845l,"builder"))) {
              if (SNodeOperations.isInstanceOf(dcl,"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderDeclaration")) {
                ListSequence.fromList(result).addElement(SNodeOperations.cast(dcl,"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderDeclaration"));
              }
            }
          }
          return result;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_idnwk4_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
