{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0x132aa4d8a3f7441cL,0xa7eb3fce23492c6aL,0x6524536b2e1a1e38L,0x34f5c07463da7435L,"extends"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x132aa4d8a3f7441cL,0xa7eb3fce23492c6aL,0x6524536b2e1a1e38L,0x34f5c07463da7435L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          List<SNode> result=new ArrayList<SNode>();
          SNode container=SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(0x132aa4d8a3f7441cL,0xa7eb3fce23492c6aL,0x6524536b2e1a1e3bL,"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilders"),true,false);
          for (          SNode builders : SimpleBuilders__BehaviorDescriptor.getAncestors_id5oOCLRAZ01U.invoke(container)) {
            for (            SNode dcl : SLinkOperations.getChildren(builders,MetaAdapterFactory.getContainmentLink(0x132aa4d8a3f7441cL,0xa7eb3fce23492c6aL,0x6524536b2e1a1e3bL,0x6524536b2e1a1e3dL,"builder"))) {
              if (SNodeOperations.isInstanceOf(dcl,MetaAdapterFactory.getConcept(0x132aa4d8a3f7441cL,0xa7eb3fce23492c6aL,0x6524536b2e1a1e38L,"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderDeclaration"))) {
                ListSequence.fromList(result).addElement(SNodeOperations.cast(dcl,MetaAdapterFactory.getConcept(0x132aa4d8a3f7441cL,0xa7eb3fce23492c6aL,0x6524536b2e1a1e38L,"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderDeclaration")));
              }
            }
          }
          return result;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_idnwk4_a0a1a0a0a1a0b0a1a2;
        }
      }
;
    }
  }
);
  return references;
}
