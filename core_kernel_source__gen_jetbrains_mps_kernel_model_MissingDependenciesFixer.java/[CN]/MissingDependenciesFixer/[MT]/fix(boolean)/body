{
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      boolean wereChanges=false;
      SModule module=myModelDescriptor.getModule();
      if (module == null) {
        LOG.error("Module is null: " + myModelDescriptor.getReference().toString());
        return;
      }
      SRepository repository=module.getRepository();
      if (repository == null) {
        LOG.error("Repository is null: " + myModelDescriptor.getReference().toString());
        return;
      }
      SearchScope moduleScope=module.getModuleScope();
      ModuleDescriptor md=((AbstractModule)module).getModuleDescriptor();
      for (      SModelReference modelImport : SModelOperations.getImportedModelUIDs(myModelDescriptor)) {
        if (moduleScope.resolve(modelImport) != null) {
          continue;
        }
        SModel sm=modelImport.resolve(repository);
        if (sm == null) {
          sm=(modelImport.getModelName() != null ? SModelRepository.getInstance().getModelDescriptor(modelImport.getModelName()) : null);
          if (sm == null) {
            continue;
          }
        }
        SModule anotherModule=sm.getModule();
        if (anotherModule == null || anotherModule == module) {
          continue;
        }
        Dependency dep=new Dependency();
        dep.setModuleRef((ModuleReference)anotherModule.getModuleReference());
        md.getDependencies().add(dep);
        wereChanges=true;
      }
      for (      ModuleReference namespace : CollectionUtil.union(((SModelInternal)myModelDescriptor).importedLanguages(),((SModelInternal)myModelDescriptor).engagedOnGenerationLanguages())) {
        if (moduleScope.resolve(namespace) instanceof Language) {
          continue;
        }
        Language lang=ScopeOperations.resolveModule(GlobalScope.getInstance(),namespace,Language.class);
        if (lang == null) {
          continue;
        }
        ModuleReference ref=ModuleReference.fromString(namespace.toString());
        md.getUsedLanguages().add(ref);
        wereChanges=true;
      }
      for (      ModuleReference devKitNamespace : ((SModelInternal)myModelDescriptor).importedDevkits()) {
        if (moduleScope.resolve(devKitNamespace) instanceof DevKit) {
          continue;
        }
        DevKit devKit=ScopeOperations.resolveModule(GlobalScope.getInstance(),devKitNamespace,DevKit.class);
        if (devKit == null) {
          continue;
        }
        ModuleReference ref=ModuleReference.fromString(devKitNamespace.toString());
        md.getUsedDevkits().add(ref);
        wereChanges=true;
      }
      if (wereChanges) {
        AbstractModule mod=(AbstractModule)module;
        mod.setModuleDescriptor(md,reload);
        mod.invalidateCaches();
        mod.invalidateDependencies();
      }
    }
  }
);
}
