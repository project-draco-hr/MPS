{
switch (myConceptIndex.index(id)) {
case LanguageConceptSwitch.AbstractContainerCreator:
    return myConceptAbstractContainerCreator;
case LanguageConceptSwitch.AbstractContainerType:
  return myConceptAbstractContainerType;
case LanguageConceptSwitch.AbstractEnumeratorOperation:
return myConceptAbstractEnumeratorOperation;
case LanguageConceptSwitch.AbstractIteratorOperation:
return myConceptAbstractIteratorOperation;
case LanguageConceptSwitch.AbstractMappingOperation:
return myConceptAbstractMappingOperation;
case LanguageConceptSwitch.AbstractSetOperation:
return myConceptAbstractSetOperation;
case LanguageConceptSwitch.AddAllElementsOperation:
return myConceptAddAllElementsOperation;
case LanguageConceptSwitch.AddAllSetElementsOperation:
return myConceptAddAllSetElementsOperation;
case LanguageConceptSwitch.AddElementOperation:
return myConceptAddElementOperation;
case LanguageConceptSwitch.AddFirstElementOperation:
return myConceptAddFirstElementOperation;
case LanguageConceptSwitch.AddLastElementOperation:
return myConceptAddLastElementOperation;
case LanguageConceptSwitch.AddSetElementOperation:
return myConceptAddSetElementOperation;
case LanguageConceptSwitch.AllConstant:
return myConceptAllConstant;
case LanguageConceptSwitch.AllOperation:
return myConceptAllOperation;
case LanguageConceptSwitch.AlsoSortOperation:
return myConceptAlsoSortOperation;
case LanguageConceptSwitch.AnyOperation:
return myConceptAnyOperation;
case LanguageConceptSwitch.AsSequenceOperation:
return myConceptAsSequenceOperation;
case LanguageConceptSwitch.AsSynchronizedOperation:
return myConceptAsSynchronizedOperation;
case LanguageConceptSwitch.AsUnmodifiableOperation:
return myConceptAsUnmodifiableOperation;
case LanguageConceptSwitch.BinaryOperation:
return myConceptBinaryOperation;
case LanguageConceptSwitch.ChunkOperation:
return myConceptChunkOperation;
case LanguageConceptSwitch.ClearAllElementsOperation:
return myConceptClearAllElementsOperation;
case LanguageConceptSwitch.ClearSetOperation:
return myConceptClearSetOperation;
case LanguageConceptSwitch.CollectionType:
return myConceptCollectionType;
case LanguageConceptSwitch.ComparatorSortOperation:
return myConceptComparatorSortOperation;
case LanguageConceptSwitch.ConcatOperation:
return myConceptConcatOperation;
case LanguageConceptSwitch.ContainerIteratorType:
return myConceptContainerIteratorType;
case LanguageConceptSwitch.ContainsAllOperation:
return myConceptContainsAllOperation;
case LanguageConceptSwitch.ContainsKeyOperation:
return myConceptContainsKeyOperation;
case LanguageConceptSwitch.ContainsOperation:
return myConceptContainsOperation;
case LanguageConceptSwitch.ContainsValueOperation:
return myConceptContainsValueOperation;
case LanguageConceptSwitch.CustomContainerCreator:
return myConceptCustomContainerCreator;
case LanguageConceptSwitch.CustomContainerDeclaration:
return myConceptCustomContainerDeclaration;
case LanguageConceptSwitch.CustomContainers:
return myConceptCustomContainers;
case LanguageConceptSwitch.CustomMapCreator:
return myConceptCustomMapCreator;
case LanguageConceptSwitch.CutOperation:
return myConceptCutOperation;
case LanguageConceptSwitch.DequeType:
return myConceptDequeType;
case LanguageConceptSwitch.DisjunctOperation:
return myConceptDisjunctOperation;
case LanguageConceptSwitch.DistinctOperation:
return myConceptDistinctOperation;
case LanguageConceptSwitch.DowncastExpression:
return myConceptDowncastExpression;
case LanguageConceptSwitch.EnumeratorType:
return myConceptEnumeratorType;
case LanguageConceptSwitch.ExcludeOperation:
return myConceptExcludeOperation;
case LanguageConceptSwitch.FindFirstOperation:
return myConceptFindFirstOperation;
case LanguageConceptSwitch.FindLastOperation:
return myConceptFindLastOperation;
case LanguageConceptSwitch.FoldLeftOperation:
return myConceptFoldLeftOperation;
case LanguageConceptSwitch.FoldRightOperation:
return myConceptFoldRightOperation;
case LanguageConceptSwitch.ForEachStatement:
return myConceptForEachStatement;
case LanguageConceptSwitch.ForEachVariable:
return myConceptForEachVariable;
case LanguageConceptSwitch.ForEachVariableReference:
return myConceptForEachVariableReference;
case LanguageConceptSwitch.GetCurrentOperation:
return myConceptGetCurrentOperation;
case LanguageConceptSwitch.GetElementOperation:
return myConceptGetElementOperation;
case LanguageConceptSwitch.GetEnumeratorOperation:
return myConceptGetEnumeratorOperation;
case LanguageConceptSwitch.GetFirstOperation:
return myConceptGetFirstOperation;
case LanguageConceptSwitch.GetIndexOfOperation:
return myConceptGetIndexOfOperation;
case LanguageConceptSwitch.GetIteratorOperation:
return myConceptGetIteratorOperation;
case LanguageConceptSwitch.GetKeysOperation:
return myConceptGetKeysOperation;
case LanguageConceptSwitch.GetLastIndexOfOperation:
return myConceptGetLastIndexOfOperation;
case LanguageConceptSwitch.GetLastOperation:
return myConceptGetLastOperation;
case LanguageConceptSwitch.GetNextOperation:
return myConceptGetNextOperation;
case LanguageConceptSwitch.GetSizeOperation:
return myConceptGetSizeOperation;
case LanguageConceptSwitch.GetValuesOperation:
return myConceptGetValuesOperation;
case LanguageConceptSwitch.HasNextOperation:
return myConceptHasNextOperation;
case LanguageConceptSwitch.HashMapCreator:
return myConceptHashMapCreator;
case LanguageConceptSwitch.HashSetCreator:
return myConceptHashSetCreator;
case LanguageConceptSwitch.HeadListOperation:
return myConceptHeadListOperation;
case LanguageConceptSwitch.HeadMapOperation:
return myConceptHeadMapOperation;
case LanguageConceptSwitch.HeadSetOperation:
return myConceptHeadSetOperation;
case LanguageConceptSwitch.IApplicableToCollection:
return myConceptIApplicableToCollection;
case LanguageConceptSwitch.IApplicableToDeque:
return myConceptIApplicableToDeque;
case LanguageConceptSwitch.IApplicableToList:
return myConceptIApplicableToList;
case LanguageConceptSwitch.IApplicableToNothing:
return myConceptIApplicableToNothing;
case LanguageConceptSwitch.IApplicableToQueue:
return myConceptIApplicableToQueue;
case LanguageConceptSwitch.IApplicableToStack:
return myConceptIApplicableToStack;
case LanguageConceptSwitch.ICollectionOperation:
return myConceptICollectionOperation;
case LanguageConceptSwitch.IContainerOperation:
return myConceptIContainerOperation;
case LanguageConceptSwitch.IDequeOperation:
return myConceptIDequeOperation;
case LanguageConceptSwitch.IListOperation:
return myConceptIListOperation;
case LanguageConceptSwitch.IQueueOperation:
return myConceptIQueueOperation;
case LanguageConceptSwitch.IStackOperation:
return myConceptIStackOperation;
case LanguageConceptSwitch.InsertElementOperation:
return myConceptInsertElementOperation;
case LanguageConceptSwitch.InternalSequenceOperation:
return myConceptInternalSequenceOperation;
case LanguageConceptSwitch.IntersectOperation:
return myConceptIntersectOperation;
case LanguageConceptSwitch.IsEmptyOperation:
return myConceptIsEmptyOperation;
case LanguageConceptSwitch.IsNotEmptyOperation:
return myConceptIsNotEmptyOperation;
case LanguageConceptSwitch.IteratorType:
return myConceptIteratorType;
case LanguageConceptSwitch.JoinOperation:
return myConceptJoinOperation;
case LanguageConceptSwitch.KeyAccessOperation:
return myConceptKeyAccessOperation;
case LanguageConceptSwitch.LinkedHashMapCreator:
return myConceptLinkedHashMapCreator;
case LanguageConceptSwitch.LinkedHashSetCreator:
return myConceptLinkedHashSetCreator;
case LanguageConceptSwitch.LinkedListCreator:
return myConceptLinkedListCreator;
case LanguageConceptSwitch.LinkedListType:
return myConceptLinkedListType;
case LanguageConceptSwitch.ListCreatorWithInit:
return myConceptListCreatorWithInit;
case LanguageConceptSwitch.ListElementAccessExpression:
return myConceptListElementAccessExpression;
case LanguageConceptSwitch.ListType:
return myConceptListType;
case LanguageConceptSwitch.MapAsSequenceVarRef:
return myConceptMapAsSequenceVarRef;
case LanguageConceptSwitch.MapClearOperation:
return myConceptMapClearOperation;
case LanguageConceptSwitch.MapElement:
return myConceptMapElement;
case LanguageConceptSwitch.MapEntry:
return myConceptMapEntry;
case LanguageConceptSwitch.MapInitializer:
return myConceptMapInitializer;
case LanguageConceptSwitch.MapOperation:
return myConceptMapOperation;
case LanguageConceptSwitch.MapOperationExpression:
return myConceptMapOperationExpression;
case LanguageConceptSwitch.MapRemoveOperation:
return myConceptMapRemoveOperation;
case LanguageConceptSwitch.MapType:
return myConceptMapType;
case LanguageConceptSwitch.MappingType:
return myConceptMappingType;
case LanguageConceptSwitch.MappingsSetOperation:
return myConceptMappingsSetOperation;
case LanguageConceptSwitch.MoveNextOperation:
return myConceptMoveNextOperation;
case LanguageConceptSwitch.MultiForEachPair:
return myConceptMultiForEachPair;
case LanguageConceptSwitch.MultiForEachStatement:
return myConceptMultiForEachStatement;
case LanguageConceptSwitch.MultiForEachVariable:
return myConceptMultiForEachVariable;
case LanguageConceptSwitch.MultiForEachVariableReference:
return myConceptMultiForEachVariableReference;
case LanguageConceptSwitch.NoArgumentsSequenceOperation:
return myConceptNoArgumentsSequenceOperation;
case LanguageConceptSwitch.OfTypeOperation:
return myConceptOfTypeOperation;
case LanguageConceptSwitch.PageOperation:
return myConceptPageOperation;
case LanguageConceptSwitch.PeekOperation:
return myConceptPeekOperation;
case LanguageConceptSwitch.PopOperation:
return myConceptPopOperation;
case LanguageConceptSwitch.PriorityQueueCreator:
return myConceptPriorityQueueCreator;
case LanguageConceptSwitch.PushOperation:
return myConceptPushOperation;
case LanguageConceptSwitch.PutAllOperation:
return myConceptPutAllOperation;
case LanguageConceptSwitch.QueueType:
return myConceptQueueType;
case LanguageConceptSwitch.ReduceLeftOperation:
return myConceptReduceLeftOperation;
case LanguageConceptSwitch.ReduceRightOperation:
return myConceptReduceRightOperation;
case LanguageConceptSwitch.RemoveAllElementsOperation:
return myConceptRemoveAllElementsOperation;
case LanguageConceptSwitch.RemoveAllSetElementsOperation:
return myConceptRemoveAllSetElementsOperation;
case LanguageConceptSwitch.RemoveAtElementOperation:
return myConceptRemoveAtElementOperation;
case LanguageConceptSwitch.RemoveElementOperation:
return myConceptRemoveElementOperation;
case LanguageConceptSwitch.RemoveFirstElementOperation:
return myConceptRemoveFirstElementOperation;
case LanguageConceptSwitch.RemoveLastElementOperation:
return myConceptRemoveLastElementOperation;
case LanguageConceptSwitch.RemoveOperation:
return myConceptRemoveOperation;
case LanguageConceptSwitch.RemoveSetElementOperation:
return myConceptRemoveSetElementOperation;
case LanguageConceptSwitch.RemoveWhereOperation:
return myConceptRemoveWhereOperation;
case LanguageConceptSwitch.ReverseOperation:
return myConceptReverseOperation;
case LanguageConceptSwitch.SelectOperation:
return myConceptSelectOperation;
case LanguageConceptSwitch.SequenceCreator:
return myConceptSequenceCreator;
case LanguageConceptSwitch.SequenceOperation:
return myConceptSequenceOperation;
case LanguageConceptSwitch.SequenceType:
return myConceptSequenceType;
case LanguageConceptSwitch.SetElementOperation:
return myConceptSetElementOperation;
case LanguageConceptSwitch.SetType:
return myConceptSetType;
case LanguageConceptSwitch.SingleArgumentSequenceOperation:
return myConceptSingleArgumentSequenceOperation;
case LanguageConceptSwitch.SingletonSequenceCreator:
return myConceptSingletonSequenceCreator;
case LanguageConceptSwitch.SkipOperation:
return myConceptSkipOperation;
case LanguageConceptSwitch.SkipStatement:
return myConceptSkipStatement;
case LanguageConceptSwitch.SmartClosureParameterDeclaration:
return myConceptSmartClosureParameterDeclaration;
case LanguageConceptSwitch.SortDirection:
return myConceptSortDirection;
case LanguageConceptSwitch.SortOperation:
return myConceptSortOperation;
case LanguageConceptSwitch.SortedMapOperation:
return myConceptSortedMapOperation;
case LanguageConceptSwitch.SortedMapType:
return myConceptSortedMapType;
case LanguageConceptSwitch.SortedSetOperation:
return myConceptSortedSetOperation;
case LanguageConceptSwitch.SortedSetType:
return myConceptSortedSetType;
case LanguageConceptSwitch.StackType:
return myConceptStackType;
case LanguageConceptSwitch.StopStatement:
return myConceptStopStatement;
case LanguageConceptSwitch.SubListOperation:
return myConceptSubListOperation;
case LanguageConceptSwitch.SubMapOperation:
return myConceptSubMapOperation;
case LanguageConceptSwitch.SubSetOperation:
return myConceptSubSetOperation;
case LanguageConceptSwitch.TailListOperation:
return myConceptTailListOperation;
case LanguageConceptSwitch.TailMapOperation:
return myConceptTailMapOperation;
case LanguageConceptSwitch.TailOperation:
return myConceptTailOperation;
case LanguageConceptSwitch.TailSetOperation:
return myConceptTailSetOperation;
case LanguageConceptSwitch.TakeOperation:
return myConceptTakeOperation;
case LanguageConceptSwitch.TestAddElementOperation:
return myConceptTestAddElementOperation;
case LanguageConceptSwitch.TestRemoveElementOperation:
return myConceptTestRemoveElementOperation;
case LanguageConceptSwitch.ToArrayOperation:
return myConceptToArrayOperation;
case LanguageConceptSwitch.ToIteratorOperation:
return myConceptToIteratorOperation;
case LanguageConceptSwitch.ToListOperation:
return myConceptToListOperation;
case LanguageConceptSwitch.TranslateOperation:
return myConceptTranslateOperation;
case LanguageConceptSwitch.TreeMapCreator:
return myConceptTreeMapCreator;
case LanguageConceptSwitch.TreeSetCreator:
return myConceptTreeSetCreator;
case LanguageConceptSwitch.UnionOperation:
return myConceptUnionOperation;
case LanguageConceptSwitch.ValueAccessOperation:
return myConceptValueAccessOperation;
case LanguageConceptSwitch.VisitAllOperation:
return myConceptVisitAllOperation;
case LanguageConceptSwitch.WhereOperation:
return myConceptWhereOperation;
default :
return null;
}
}
