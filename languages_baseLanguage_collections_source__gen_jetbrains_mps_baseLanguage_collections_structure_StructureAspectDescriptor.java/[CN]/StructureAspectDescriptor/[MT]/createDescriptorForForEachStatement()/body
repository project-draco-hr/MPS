{
  return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.collections.structure.ForEachStatement",MetaIdFactory.conceptId(0x8388864671ce4f1cL,0x9c53c54016f6ad4fL,0x10cac65f399L)).super_("jetbrains.mps.baseLanguage.structure.AbstractLoopStatement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10cb1ac5adeL)).parents("jetbrains.mps.baseLanguage.structure.AbstractLoopStatement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10cb1ac5adeL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x10cac7231f1L,"variable",MetaIdFactory.conceptId(0x8388864671ce4f1cL,0x9c53c54016f6ad4fL,0x10cac6f0962L),false,false,false),new ConceptDescriptorBuilder.Link(0x10cac72911aL,"inputSequence",MetaIdFactory.conceptId(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506fL),false,false,false)).children(new String[]{"variable","inputSequence"},new boolean[]{false,false}).alias("foreach","foreach <e> in <sequence>").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c8959032e(jetbrains.mps.baseLanguage.collections.structure)","1153943597977")).create();
}
