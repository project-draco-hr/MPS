{
  SNode linkDeclaration=((SNode)BehaviorManager.getInstance().invoke(Object.class,SNodeOperations.getConceptDeclaration(sourceNode),"call_findLinkDeclaration_1213877394467",new Class[]{SNode.class,String.class},reference.getRole()));
  if (linkDeclaration == null) {
    return false;
  }
  final SNode referentConcept=SLinkOperations.getTarget(linkDeclaration,"target",false);
  return TypeContextManager.getInstance().runResolveAction(new Computable<Boolean>(){
    @Override public Boolean compute(){
      Scope refScope=ModelConstraintsUtil.getScope(reference,operationContext);
      if (refScope instanceof ErrorScope) {
        LOG.error("Couldn't create referent search scope : " + ((ErrorScope)refScope).getMessage());
        return false;
      }
      SNode result=null;
      String resolveInfo=reference.getResolveInfo();
      for (      SNode node : refScope.getAvailableElements(null)) {
        if (!(SNodeOperations.isInstanceOf(node,NameUtil.nodeFQName(referentConcept)))) {
          continue;
        }
        if (resolveInfo != null && (resolveInfo.equals(node.getName()) || resolveInfo.equals(node.getProperty("nestedName")))) {
          if (result == null) {
            result=node;
          }
 else {
            return false;
          }
        }
      }
      if (result == null) {
        return false;
      }
      sourceNode.setReferent(reference.getRole(),result,false);
      return true;
    }
  }
);
}
