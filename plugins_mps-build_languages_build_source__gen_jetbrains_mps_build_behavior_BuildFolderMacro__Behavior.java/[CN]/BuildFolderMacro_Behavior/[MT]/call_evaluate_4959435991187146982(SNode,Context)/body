{
  String key="usedMacro";
  Set<String> usedMacro=context.<Set<String>>get(key);
  if (usedMacro == null) {
    usedMacro=SetSequence.fromSet(new HashSet<String>());
    context.put(key,usedMacro);
  }
  if (SetSequence.fromSet(usedMacro).contains(SPropertyOperations.getString(thisNode,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")))) {
    return null;
  }
  SetSequence.fromSet(usedMacro).addElement(SPropertyOperations.getString(thisNode,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")));
  try {
    return BehaviorReflection.invokeVirtual(String.class,SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x668c6cfbafadd002L,0x668c6cfbafadf0eaL,"defaultPath")),"virtual_getLocalPath_5481553824944787364",new Object[]{context});
  }
  finally {
    SetSequence.fromSet(usedMacro).removeElement(SPropertyOperations.getString(thisNode,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")));
  }
}
