{
  final Wrappers._T<Set<ILocationBreakpoint>> result=new Wrappers._T<Set<ILocationBreakpoint>>(new HashSet<ILocationBreakpoint>());
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      final SNode editedNode=editorComponent.getEditedNode();
      if (editedNode == null) {
        return;
      }
      if (SNodeOperations.isDisposed(editedNode)) {
        Set<IBreakpoint> allBreakpoints=myBreakpointsManagerComponent.getAllIBreakpoints();
        Set<ILocationBreakpoint> locationBreakpoints=new HashSet<ILocationBreakpoint>();
        for (        IBreakpoint breakpoint : allBreakpoints) {
          if (breakpoint instanceof ILocationBreakpoint) {
            locationBreakpoints.add((ILocationBreakpoint)breakpoint);
          }
        }
        result.value=locationBreakpoints;
        return;
      }
      SNode rootNode=(editedNode.getModel() == null ? null : editedNode.getContainingRoot());
      SNodeReference rootPointer=rootNode.getReference();
      if (rootPointer == null) {
        return;
      }
      final Set<ILocationBreakpoint> breakpointsForRoot=myBreakpointsManagerComponent.getBreakpoints(rootPointer);
      if (breakpointsForRoot == null) {
        return;
      }
      for (      ILocationBreakpoint locationBreakpoint : breakpointsForRoot) {
        SNode node=locationBreakpoint.getLocation().getSNode();
        if (node != null && EditorComponentUtil.isNodeShownInTheComponent(editorComponent,node)) {
          result.value.add(locationBreakpoint);
        }
      }
    }
  }
);
  return result.value;
}
