{
  Set<SNode> nodesToCheck=SetSequence.fromSet(new HashSet<SNode>());
  for (  SNode call : ListSequence.fromList(SNodeOperations.getDescendants(body,null,false,new String[]{}))) {
    if (MethodCallAdapter.isMethodCall(call)) {
      SetSequence.fromSet(nodesToCheck).addElement(new MethodCallAdapter(call).getMethodDeclaration());
    }
  }
  for (  SNode call : ListSequence.fromList(SNodeOperations.getDescendants(body,"jetbrains.mps.baseLanguage.structure.FieldReferenceOperation",false,new String[]{}))) {
    SetSequence.fromSet(nodesToCheck).addElement(SLinkOperations.getTarget(call,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1197029447546l,1197029500499l,"fieldDeclaration")));
  }
  for (  SNode call : ListSequence.fromList(SNodeOperations.getDescendants(body,"jetbrains.mps.baseLanguage.structure.StaticFieldReference",false,new String[]{}))) {
    SetSequence.fromSet(nodesToCheck).addElement(SLinkOperations.getTarget(call,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,1068581517664l,"variableDeclaration")));
  }
  for (  SNode call : ListSequence.fromList(SNodeOperations.getDescendants(body,"jetbrains.mps.baseLanguage.structure.VariableReference",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.baseLanguage.structure.VariableReference"),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,1068581517664l,"variableDeclaration")),"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration");
    }
  }
)) {
    SetSequence.fromSet(nodesToCheck).addElement(SLinkOperations.getTarget(call,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,1068581517664l,"variableDeclaration")));
  }
  return nodesToCheck;
}
