{
  if (!(SNodeOperations.getConcept(node).isValid())) {
    return IdeIcons.UNKNOWN_ICON;
  }
  Icon mainIcon=SNodeOperations.getConcept(node).getIcon();
  if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(SNodeOperations.getConcept(node)),MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979ba0450L,"jetbrains.mps.lang.structure.structure.ConceptDeclaration"))) {
    Icon alternativeIcon=ConceptRegistry.getInstance().getConstraintsDescriptor(SNodeOperations.getConcept(node)).getInstanceIcon(node);
    if (alternativeIcon != null) {
      mainIcon=alternativeIcon;
    }
 else {
      mainIcon=SNodeOperations.getConcept(node).getIcon();
    }
  }
  if (mainIcon == null) {
    if ((SNodeOperations.getParent(node) == null)) {
      return IdeIcons.DEFAULT_ROOT_ICON;
    }
 else {
      return IdeIcons.DEFAULT_NODE_ICON;
    }
  }
  SModel model=SNodeOperations.getModel(node);
  if (model == null || jetbrains.mps.util.SNodeOperations.isModelDisposed(model)) {
    return mainIcon;
  }
  if (!(SModelStereotype.isUserModel(model)) || model instanceof EditableSModel && model.isReadOnly()) {
    mainIcon=new LayeredIcon(mainIcon,PlatformIcons.LOCKED_ICON);
  }
  RowIcon result=new RowIcon(2);
  result.setIcon(mainIcon,0);
  result.setIcon(((Icon)BHReflection.invoke(node,SMethodTrimmedId.create("getAdditionalIcon",null,"4mxbjAOAE$e"))),1);
  List<Icon> markIcons=((List<Icon>)BHReflection.invoke(node,SMethodTrimmedId.create("getMarkIcons",null,"3pOfV45ExLD")));
  if (markIcons != null) {
    LayeredIcon layeredIcon=new LayeredIcon(markIcons.size() + 1);
    layeredIcon.setIcon(result,0);
    for (int i=0; i < markIcons.size(); i++) {
      layeredIcon.setIcon(markIcons.get(i),i + 1);
    }
    return layeredIcon;
  }
  return result;
}
