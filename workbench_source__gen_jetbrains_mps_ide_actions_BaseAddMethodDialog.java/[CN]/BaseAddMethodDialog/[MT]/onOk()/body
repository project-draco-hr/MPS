{
  this.dispose();
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      List<TreePath> paths=new ArrayList<TreePath>(Arrays.asList(BaseAddMethodDialog.this.myTree.getSelectionPaths()));
      List<BaseAddMethodDialog.MethodTreeNode> methodNodes=new ArrayList<BaseAddMethodDialog.MethodTreeNode>();
      for (      TreePath path : paths) {
        if (path.getLastPathComponent() instanceof BaseAddMethodDialog.MethodTreeNode) {
          methodNodes.add((BaseAddMethodDialog.MethodTreeNode)path.getLastPathComponent());
        }
      }
      List<BaseMethodDeclaration> methods=BaseAddMethodDialog.this.doAddMethods(methodNodes);
      if (methods.isEmpty()) {
        return;
      }
      Collections.sort(methods,new Comparator<BaseMethodDeclaration>(){
        public int compare(        BaseMethodDeclaration m1,        BaseMethodDeclaration m2){
          return BaseAddMethodDialog.this.compareMethods(m1,m2);
        }
      }
);
      if (methods.size() == 1) {
        SNode node=methods.get(0).getNode();
        BaseAddMethodDialog.this.myContext.selectAfter(node);
      }
 else {
        SNode first=methods.get(methods.size() - 1).getNode();
        SNode last=methods.get(0).getNode();
        BaseAddMethodDialog.this.myContext.select(first);
        BaseAddMethodDialog.this.myContext.selectRange(first,last);
      }
    }
  }
);
}
