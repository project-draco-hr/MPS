{
  this.myLines.clear();
  this.myArrowHeads.clear();
  this.myMaxLineIndentRight=0;
  this.myMaxLineIndentLeft=0;
  this.myFreeZoneMap=new HashMap<Integer,FreeZone>();
  for (  IBlock block : this.myBlocks) {
    block.relayout(this.myComponent);
  }
  int maxWidth=0;
  int maxHeight=0;
  for (  IBlock block : this.myBlocks) {
    maxWidth=Math.max(maxWidth,block.getWidth());
    maxHeight=Math.max(maxHeight,block.getHeight());
  }
  int y=MARGIN_Y;
  for (  IBlock block : this.myBlocks) {
    block.setWidth(maxWidth);
    block.setX(MARGIN_X);
    block.setY(y);
    y+=block.getHeight();
    y+=maxHeight / 2;
  }
  for (int i=0; i < this.myBlocks.size(); i++) {
    IBlock block=this.myBlocks.get(i);
    for (    IBlock succBlock : block.succ()) {
      if (this.myBlocks.indexOf(succBlock) == i + 1) {
        ControlFlowGraph.this.addSimpleLine(block,succBlock);
      }
 else {
        ControlFlowGraph.this.addAdditionalLine(block,succBlock);
      }
    }
  }
  ControlFlowGraph.this.shiftLeft(this.myMaxLineIndentLeft * LINE_SEGMENT_SIZE);
  this.myWidth=MARGIN_X * 2 + maxWidth + (this.myMaxLineIndentRight + this.myMaxLineIndentLeft) * LINE_SEGMENT_SIZE;
  this.myHeight=y + MARGIN_Y;
}
