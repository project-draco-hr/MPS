{
  TableModelCreator creator=new TableModelCreator(){
    public TableModel getTable(    final SNode node,    EditorContext editorContext){
      return new AbstractTableModel(){
        public int getColumnsNumber(){
          return 1 + ListSequence.fromList(SLinkOperations.getTargets(node,"events",true)).count();
        }
        public int getRowsNumber(){
          return 1 + ListSequence.fromList(SLinkOperations.getTargets(node,"states",true)).count();
        }
        public SNode getValueAt(        int row,        int column){
          if (row == 0 && column > 0) {
            return ListSequence.fromList(SLinkOperations.getTargets(node,"events",true)).getElement(column - 1);
          }
          if (column == 0 && row > 0) {
            return ListSequence.fromList(SLinkOperations.getTargets(node,"states",true)).getElement(row - 1);
          }
          if (row > 0 && column > 0) {
            SNode event=ListSequence.fromList(SLinkOperations.getTargets(node,"events",true)).getElement(column - 1);
            SNode state=ListSequence.fromList(SLinkOperations.getTargets(node,"states",true)).getElement(row - 1);
            for (            SNode transition : ListSequence.fromList(SLinkOperations.getTargets(node,"transitions",true))) {
              if (SLinkOperations.getTarget(SLinkOperations.getTarget(transition,"trigger",true),"event",false) == event && SLinkOperations.getTarget(SLinkOperations.getTarget(transition,"fromState",true),"state",false) == state) {
                return transition;
              }
            }
          }
          return null;
        }
        @Override public void createElement(        int row,        int column){
          if (row > 0 && column > 0) {
            SNode event=ListSequence.fromList(SLinkOperations.getTargets(node,"events",true)).getElement(column - 1);
            SNode state=ListSequence.fromList(SLinkOperations.getTargets(node,"states",true)).getElement(row - 1);
            SNode transition=SConceptOperations.createNewNode("jetbrains.mps.samples.editorTables.structure.Transition",null);
            SLinkOperations.setTarget(transition,"trigger",SConceptOperations.createNewNode("jetbrains.mps.samples.editorTables.structure.EventReference",null),true);
            SLinkOperations.setTarget(SLinkOperations.getTarget(transition,"trigger",true),"event",event,false);
            SLinkOperations.setTarget(transition,"fromState",SConceptOperations.createNewNode("jetbrains.mps.samples.editorTables.structure.StateReference",null),true);
            SLinkOperations.setTarget(SLinkOperations.getTarget(transition,"fromState",true),"state",state,false);
            ListSequence.fromList(SLinkOperations.getTargets(node,"transitions",true)).addElement(transition);
          }
        }
        public void deleteRow(        int row){
        }
      }
;
    }
  }
;
  EditorCell_Collection editorCell=EditorCell_Table.createTable(editorContext,node,creator.getTable(node,editorContext));
  editorCell.setCellId("Table_qpt50r_c0");
  return editorCell;
}
