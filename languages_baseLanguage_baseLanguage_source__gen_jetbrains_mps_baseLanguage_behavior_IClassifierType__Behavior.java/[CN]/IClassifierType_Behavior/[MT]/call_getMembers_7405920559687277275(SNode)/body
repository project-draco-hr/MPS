{
  if (thisNode == null) {
    return Collections.emptyList();
  }
  Tuples._2<SNode,List<SNode>> cacheKey=MultiTuple.<SNode,List<SNode>>from(IClassifierType_Behavior.call_getClassifier_7405920559687237513(thisNode),new ArrayList<SNode>());
  for (  SNode typeParameter : IClassifierType_Behavior.call_getTypeParameters_7405920559687237518(thisNode)) {
    if (SNodeOperations.isInstanceOf(typeParameter,"jetbrains.mps.baseLanguage.structure.TypeVariableReference")) {
      ListSequence.fromList(cacheKey._1()).addElement(SLinkOperations.getTarget(SNodeOperations.cast(typeParameter,"jetbrains.mps.baseLanguage.structure.TypeVariableReference"),"typeVariableDeclaration",false));
    }
 else {
      ListSequence.fromList(cacheKey._1()).addElement(typeParameter);
    }
  }
  return RepositoryStateCacheUtils.getFromCache(IClassifierType_Behavior.class,cacheKey,new _FunctionTypes._return_P0_E0<ISequence<SNode>>(){
    public ISequence<SNode> invoke(){
      MembersPopulatingContext scope=new MembersPopulatingContext();
      IClassifierType_Behavior.call_populateMembers_7405920559687241253(thisNode,scope,thisNode);
      return Sequence.fromIterable(scope.getMembers()).select(new ISelector<SNode,SNode>(){
        public SNode select(        SNode it){
          return SNodeOperations.cast(it,"jetbrains.mps.baseLanguage.structure.IClassifierMember");
        }
      }
);
    }
  }
);
}
