{
  setSourceElement(new MPSPsiElement(source));
  final Wrappers._T<SNode> layout=new Wrappers._T<SNode>();
  final Wrappers._boolean isApplicable=new Wrappers._boolean();
  final Wrappers._T<String> configurationId=new Wrappers._T<String>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      layout.value=SNodeOperations.getAncestor(source,"jetbrains.mps.build.packaging.structure.Layout",false,true);
      isApplicable.value=(layout.value != null) && ListSequence.fromList(SNodeOperations.getDescendants(layout.value,"jetbrains.mps.build.packaging.structure.INotBuildableComponent",false,new String[]{})).isEmpty();
      configurationId.value=source.getSNodeId().toString();
    }
  }
);
  if (!(isApplicable.value)) {
    return null;
  }
  PackagingBuildScript_Configuration configuration=((PackagingBuildScript_Configuration)getConfigurationFactory().createConfiguration(SPropertyOperations.getString(layout.value,"name") + "." + SPropertyOperations.getString(source,"name"),(PackagingBuildScript_Configuration)RunManagerImpl.getInstanceImpl(getContext().getProject()).getConfigurationTemplate(getConfigurationFactory()).getConfiguration()));
  configuration.getNode().setNode(layout.value);
  configuration.setConfigurationId(configurationId.value);
  return configuration;
}
