{
  final Wrappers._T<Iterable<SModel>> models=new Wrappers._T<Iterable<SModel>>(null);
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      for (      SModule mod : withGenerators(Collections.singletonList(module))) {
        models.value=Sequence.fromIterable(models.value).concat(Sequence.fromIterable(((Iterable<SModel>)mod.getModels())).where(new IWhereFilter<SModel>(){
          public boolean accept(          SModel it){
            return SNodeOperations.isGeneratable(it);
          }
        }
));
      }
    }
  }
);
  return new ModelsToResources(Sequence.fromIterable(models.value).where(new IWhereFilter<SModel>(){
    public boolean accept(    SModel smd){
      return GenerationFacade.canGenerate(smd);
    }
  }
)).resources(false);
}
