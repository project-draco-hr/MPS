{
  return new ModelAccessHelper(project.getModelAccess()).runReadAction(new Computable<Iterable<IResource>>(){
    public Iterable<IResource> compute(){
      Iterable<SModel> models=Sequence.fromIterable(withGenerators(Collections.singletonList(module))).translate(new ITranslator2<SModule,SModel>(){
        public Iterable<SModel> translate(        SModule mod){
          return mod.getModels();
        }
      }
).where(new IWhereFilter<SModel>(){
        public boolean accept(        SModel it){
          return GenerationFacade.canGenerate(it);
        }
      }
);
      return new ModelsToResources(models).resources(false);
    }
  }
);
}
