{
  int resCount=searchResults.getSearchResults().size();
  if (resCount == 0) {
    final ToolWindowManager manager=ToolWindowManager.getInstance(getProject());
    manager.notifyByBalloon(TOOL_WINDOW_ID,MessageType.INFO,notFoundMsg,null,null);
  }
 else   if (resCount == 1 && !showOne) {
    ModelAccess.instance().runWriteInEDT(new Runnable(){
      @Override public void run(){
        SNode node=((SearchResult<SNode>)searchResults.getSearchResults().get(0)).getObject();
        if (node != null) {
          IOperationContext context=new ProjectOperationContext(ProjectHelper.toMPSProject(getProject()));
          NavigationSupport.getInstance().openNode(context,node,true,!(node.getModel() != null && node.getParent() == null));
        }
      }
    }
);
  }
 else {
    int index=getCurrentTabIndex();
    ModelAccess.instance().runReadAction(new Runnable(){
      @Override public void run(){
        UsageViewData usageViewData=new UsageViewData();
        usageViewData.createUsageView();
        myUsageViewsData.add(usageViewData);
        usageViewData.myUsagesView.setRunOptions(provider,query,new ButtonConfiguration(isRerunnable).showSettingsButton(true),searchResults);
        Icon icon=usageViewData.myUsagesView.getIcon();
        String caption=usageViewData.myUsagesView.getCaption();
        JComponent component=usageViewData.myUsagesView.getComponent();
        Content content=addContent(component,caption,icon,true);
        getContentManager().setSelectedContent(content);
      }
    }
);
    if (!forceNewTab) {
      closeLastUnpinnedTab(index);
    }
    openTool(true);
  }
}
