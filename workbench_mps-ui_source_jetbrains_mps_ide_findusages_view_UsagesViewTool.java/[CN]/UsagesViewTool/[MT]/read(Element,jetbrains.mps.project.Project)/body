{
  Element versionXML=element.getChild(VERSION);
  if (versionXML == null) {
    return;
  }
  String version=versionXML.getAttribute(ID).getValue();
  if (!VERSION_NUMBER.equals(version)) {
    return;
  }
  Element tabsXML=element.getChild(TABS);
  if (tabsXML != null) {
    for (    Element tabXML : tabsXML.getChildren()) {
      final UsageViewData usageViewData;
      try {
        usageViewData=UsageViewData.read(this,tabXML,project);
      }
 catch (      CantLoadSomethingException e) {
        continue;
      }
      register(usageViewData);
      SwingUtilities.invokeLater(new Runnable(){
        @Override public void run(){
          final String caption=usageViewData.myUsagesView.getCaption();
          final Icon icon=usageViewData.myUsagesView.getIcon();
          addContent(usageViewData.myUsagesView.getComponent(),caption,icon,true);
        }
      }
);
    }
  }
  Element defaultViewOptionsXML=element.getChild(DEFAULT_VIEW_OPTIONS);
  myDefaultViewOptions.read(defaultViewOptionsXML,project);
  SwingUtilities.invokeLater(new Runnable(){
    @Override public void run(){
      if (getContentManager().getContentCount() == 0) {
        makeUnavailableLater();
      }
    }
  }
);
}
