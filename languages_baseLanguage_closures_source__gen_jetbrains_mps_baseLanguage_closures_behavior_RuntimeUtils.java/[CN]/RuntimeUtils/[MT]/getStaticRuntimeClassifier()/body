{
synchronized (RuntimeUtils.class) {
    if (STATIC_RUNTIME_CLASSIFIERS == null) {
      STATIC_RUNTIME_CLASSIFIERS=MapSequence.fromMap(new HashMap<String,SNode>());
      for (      SNode cls : ListSequence.fromList(SModelOperations.roots(getStaticRuntimeModel(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"))).translate(new ITranslator2<SNode,SNode>(){
        public Iterable<SNode> translate(        SNode it){
          return SLinkOperations.getChildren(it,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x4a9a46de59132803L,"member"));
        }
      }
).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"));
        }
      }
).select(new ISelector<SNode,SNode>(){
        public SNode select(        SNode it){
          return SNodeOperations.cast(it,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"));
        }
      }
)) {
        MapSequence.fromMap(STATIC_RUNTIME_CLASSIFIERS).put(SPropertyOperations.getString(cls,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x11a134c900dL,"nestedName")),cls);
      }
      ClassLoaderManager.getInstance().addClassesHandler(new MPSClassesListenerAdapter(){
        @Override public void beforeClassesUnloaded(        Set<? extends ReloadableModuleBase> modules){
synchronized (RuntimeUtils.class) {
            STATIC_RUNTIME_CLASSIFIERS=null;
          }
          ClassLoaderManager.getInstance().removeClassesHandler(this);
        }
      }
);
    }
  }
  return STATIC_RUNTIME_CLASSIFIERS;
}
