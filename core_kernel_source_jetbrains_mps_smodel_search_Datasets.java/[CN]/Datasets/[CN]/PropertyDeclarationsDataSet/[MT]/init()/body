{
  List<SNode> allProperties=new ArrayList<SNode>();
  myPropertyByName=null;
  myProperties=null;
  SNode[] concepts=((ConceptAndSuperConceptsCache)getOwnerCache()).getConcepts();
  for (int i=concepts.length - 1; i >= 0; i--) {
    Iterable<SNode> props=SNodeUtil.getConcept_PropertyDeclarations(concepts[i]);
    for (    SNode prop : props) {
      allProperties.add(prop);
      String name=prop.getName();
      if (name == null)       continue;
      if (myPropertyByName != null && myPropertyByName.containsKey(name)) {
        continue;
      }
      if (myProperties == null) {
        myProperties=new ArrayList<SNode>(1);
      }
      myProperties.add(prop);
      if (myPropertyByName == null) {
        myPropertyByName=new THashMap<String,SNode>(1);
      }
      myPropertyByName.put(name,prop);
    }
  }
  myDependsOnNodes=new THashSet<SNode>();
  myDependsOnNodes.addAll(Arrays.asList(concepts));
  for (  SNode prop : allProperties) {
    myDependsOnNodes.add(prop);
  }
}
