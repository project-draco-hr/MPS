{
  SNode classConcept=SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.ClassConcept");
  List<SNode> fields=SLinkOperations.getTargets(classConcept,"field",true);
  for (  final SNode field : fields) {
    final String getterName="get" + NameUtil.capitalize(SPropertyOperations.getString(field,"name"));
    if (ListSequence.fromList(SLinkOperations.getTargets(classConcept,"method",true)).any(new IWhereFilter<SNode>(){
      public boolean accept(      SNode method){
        return getterName.equals(SPropertyOperations.getString(method,"name")) && ListSequence.fromList(SLinkOperations.getTargets(method,"parameter",true)).isEmpty();
      }
    }
)) {
      continue;
    }
    Pair p;
    final SNode thisExpression=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ThisExpression",null);
    SLinkOperations.addChild(classConcept,"method",new _Quotations.QuotationClass_15().createNode(SLinkOperations.getTarget(field,"type",true),thisExpression,field,getterName));
  }
}
