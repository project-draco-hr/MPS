{
  List<SNode> fields=SLinkOperations.getTargets(SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"field",true);
  if (ListSequence.<SNode>fromList(fields).isEmpty()) {
    return false;
  }
  boolean allGettersImplemented=true;
  for (  SNode fieldDeclaration : fields) {
    Project project=editorContext.getOperationContext().getProject();
    final String getterName=GenerateGettersAndSettersUtil.getFieldGetterName(fieldDeclaration,project);
    boolean fieldHasGetter=false;
    if (ListSequence.<SNode>fromList(SLinkOperations.getTargets(SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"method",true)).any(new IWhereFilter<SNode>(){
      public boolean accept(      SNode method){
        return getterName.equals(SPropertyOperations.getString(method,"name")) && ListSequence.<SNode>fromList(SLinkOperations.getTargets(method,"parameter",true)).isEmpty();
      }
    }
)) {
      fieldHasGetter=true;
    }
    if (!(fieldHasGetter)) {
      allGettersImplemented=false;
    }
  }
  return !(allGettersImplemented);
}
