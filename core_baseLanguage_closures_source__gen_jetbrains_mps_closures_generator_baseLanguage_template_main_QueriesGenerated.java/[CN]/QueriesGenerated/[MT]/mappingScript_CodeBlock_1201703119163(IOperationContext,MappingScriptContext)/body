{
  List<SNode> aes=SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.baseLanguage.structure.AssignmentExpression");
  for (  SNode ae : aes) {
    SNode ltype=TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(ae,"lValue",true));
    SNode rtype=TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(ae,"rValue",true));
    SNode lCType=(SNodeOperations.isInstanceOf(ltype,"jetbrains.mps.baseLanguage.structure.ClassifierType") ? ltype : null);
    SNode rCType=(SNodeOperations.isInstanceOf(rtype,"jetbrains.mps.baseLanguage.structure.ClassifierType") ? rtype : null);
    SNode lFType=(SNodeOperations.isInstanceOf(ltype,"jetbrains.mps.closures.structure.FunctionType") ? ltype : null);
    SNode rFType=(SNodeOperations.isInstanceOf(rtype,"jetbrains.mps.closures.structure.FunctionType") ? rtype : null);
    if ((lCType != null) && (rFType != null)) {
      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(ae,"rValue",true),"jetbrains.mps.closures.structure.ClosureLiteral")) {
        ClosureLiteralUtil.addAdaptableClosureLiteralTarget(SLinkOperations.getTarget(ae,"rValue",true),lCType,_context.getGenerator());
      }
 else {
        FunctionTypeUtil.addAdaptableClassifierTypeTarget(ClassifierTypeUtil.getClassifierType(rFType),lCType,_context.getGenerator());
        FunctionTypeUtil.putPrepData(SLinkOperations.getTarget(ae,"rValue",true),INamedConcept_Behavior.call_getFqName_1213877404258(SLinkOperations.getTarget(lCType,"classifier",false)),_context.getGenerator());
      }
    }
 else     if ((lFType != null) && (rCType != null)) {
      FunctionTypeUtil.addAdaptableClassifierTypeTarget(rCType,ClassifierTypeUtil.getClassifierType(lFType),_context.getGenerator());
      FunctionTypeUtil.putPrepData(SLinkOperations.getTarget(ae,"rValue",true),INamedConcept_Behavior.call_getFqName_1213877404258(SLinkOperations.getTarget(ClassifierTypeUtil.getClassifierType(lFType),"classifier",false)),_context.getGenerator());
    }
  }
}
