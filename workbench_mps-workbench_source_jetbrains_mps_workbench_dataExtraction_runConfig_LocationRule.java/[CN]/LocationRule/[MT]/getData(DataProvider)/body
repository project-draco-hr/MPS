{
  MPSProject mpsProject=MPSDataKeys.MPS_PROJECT.getData(dataProvider);
  if (mpsProject == null) {
    Project ideaProject=MPSDataKeys.PROJECT.getData(dataProvider);
    if (ideaProject == null) {
      Frame frame=MPSDataKeys.FRAME.getData(dataProvider);
      if (frame instanceof IdeFrame) {
        ideaProject=((IdeFrame)frame).getProject();
      }
    }
    if (ideaProject == null) {
      return null;
    }
    mpsProject=ProjectHelper.fromIdeaProject(ideaProject);
    if (mpsProject == null) {
      return null;
    }
  }
  List<SNode> nodes=MPSDataKeys.NODES.getData(dataProvider);
  if (nodes != null && nodes.size() > 1) {
    return new MPSLocation(mpsProject,new MPSPsiElement(nodes,mpsProject));
  }
  SNode node=MPSDataKeys.NODE.getData(dataProvider);
  if (node != null) {
    return new MPSLocation(mpsProject,new MPSPsiElement(node,mpsProject));
  }
  SModel model=MPSDataKeys.MODEL.getData(dataProvider);
  if (model != null) {
    return new MPSLocation(mpsProject,new MPSPsiElement(model,mpsProject));
  }
  SModule module=MPSDataKeys.MODULE.getData(dataProvider);
  if (module != null) {
    return new MPSLocation(mpsProject,new MPSPsiElement(module,mpsProject));
  }
  return new MPSLocation(mpsProject,new MPSPsiElement(mpsProject));
}
