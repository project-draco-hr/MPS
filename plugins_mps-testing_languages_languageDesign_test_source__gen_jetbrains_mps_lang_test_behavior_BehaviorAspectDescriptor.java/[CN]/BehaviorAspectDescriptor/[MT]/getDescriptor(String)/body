{
switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0b,fqName)) {
case 44:
    return new TestNodeAnnotation_BehaviorDescriptor();
case 45:
  return new TestNodeReference_BehaviorDescriptor();
case 1:
return new AssertMatch_BehaviorDescriptor();
case 6:
return new CheckNodeForErrors_BehaviorDescriptor();
case 23:
return new NodePropertiesContainer_BehaviorDescriptor();
case 20:
return new NodeErrorCheckOperation_BehaviorDescriptor();
case 32:
return new NodeWarningCheckOperation_BehaviorDescriptor();
case 24:
return new NodeReachable_BehaviorDescriptor();
case 25:
return new NodeTypeCheckOperation_BehaviorDescriptor();
case 22:
return new NodeOperationsContainer_BehaviorDescriptor();
case 5:
return new CheckNodeForErrorMessagesOperation_BehaviorDescriptor();
case 3:
return new CheckDataFlowOperation_BehaviorDescriptor();
case 31:
return new NodeUnreachable_BehaviorDescriptor();
case 50:
return new VariableInitialized_BehaviorDescriptor();
case 49:
return new VariableAlive_BehaviorDescriptor();
case 33:
return new NodesTestCase_BehaviorDescriptor();
case 43:
return new TestNode_BehaviorDescriptor();
case 4:
return new CheckNodeDataflow_BehaviorDescriptor();
case 36:
return new ProjectExpression_BehaviorDescriptor();
case 17:
return new ModelExpression_BehaviorDescriptor();
case 40:
return new SimpleNodeTest_BehaviorDescriptor();
case 9:
return new EditorExpression_BehaviorDescriptor();
case 14:
return new InvokeIntentionStatement_BehaviorDescriptor();
case 12:
return new INodeAnnotation_BehaviorDescriptor();
case 46:
return new TypeKeyStatement_BehaviorDescriptor();
case 34:
return new PressKeyStatement_BehaviorDescriptor();
case 10:
return new EditorTestCase_BehaviorDescriptor();
case 0:
return new AnonymousCellAnnotation_BehaviorDescriptor();
case 16:
return new MockAnnotation_BehaviorDescriptor();
case 26:
return new NodeTypeSetCheckOperation_BehaviorDescriptor();
case 11:
return new ExpressionContainer_BehaviorDescriptor();
case 41:
return new SwitchToInspector_BehaviorDescriptor();
case 8:
return new EditorComponentExpression_BehaviorDescriptor();
case 42:
return new TestInfo_BehaviorDescriptor();
case 13:
return new InvokeActionStatement_BehaviorDescriptor();
case 2:
return new BootstrapActionReference_BehaviorDescriptor();
case 15:
return new MPSActionReference_BehaviorDescriptor();
case 21:
return new NodeExpectedTypeCheckOperation_BehaviorDescriptor();
case 39:
return new ScopesTest_BehaviorDescriptor();
case 38:
return new ScopesExpectedNode_BehaviorDescriptor();
case 37:
return new ReportErrorStatementReference_BehaviorDescriptor();
case 51:
return new WarningStatementReference_BehaviorDescriptor();
case 27:
return new NodeTypeSystemErrorCheckOperation_BehaviorDescriptor();
case 28:
return new NodeTypeSystemWarningCheckOperation_BehaviorDescriptor();
case 47:
return new UnknownRuleReference_BehaviorDescriptor();
case 29:
return new NodeUnknownErrorCheckOperation_BehaviorDescriptor();
case 18:
return new NodeConstraintsErrorCheckOperation_BehaviorDescriptor();
case 19:
return new NodeConstraintsWarningCheckOperation_BehaviorDescriptor();
case 30:
return new NodeUnknownWarningCheckOperation_BehaviorDescriptor();
case 35:
return new PressMouseStatement_BehaviorDescriptor();
case 7:
return new DragMouseStatement_BehaviorDescriptor();
case 48:
return new UntypedExpression_BehaviorDescriptor();
default :
return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
}
}
