{
switch (type.getSort()) {
case Type.VOID:
    return ASMPrimitiveType.VOID;
case Type.BOOLEAN:
  return ASMPrimitiveType.BOOLEAN;
case Type.CHAR:
return ASMPrimitiveType.CHAR;
case Type.BYTE:
return ASMPrimitiveType.BYTE;
case Type.SHORT:
return ASMPrimitiveType.SHORT;
case Type.INT:
return ASMPrimitiveType.INT;
case Type.FLOAT:
return ASMPrimitiveType.FLOAT;
case Type.LONG:
return ASMPrimitiveType.LONG;
case Type.DOUBLE:
return ASMPrimitiveType.DOUBLE;
case Type.OBJECT:
return new ASMClassType(type.getClassName());
case Type.ARRAY:
{
ASMType result=new ASMArrayType(TypeUtil.fromType(type.getElementType()));
for (int i=1; i < type.getDimensions(); i++) {
result=new ASMArrayType(result);
}
return result;
}
default :
}
return null;
}
