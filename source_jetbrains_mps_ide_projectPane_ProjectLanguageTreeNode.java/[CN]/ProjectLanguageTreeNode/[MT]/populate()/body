{
  IOperationContext operationContext=getOperationContext();
  SModelDescriptor structureModelDescriptor=myLanguage.getStructureModelDescriptor();
  this.add(new SModelTreeNode(structureModelDescriptor,null,operationContext,false));
  SModelDescriptor editorModelDescriptor=myLanguage.getEditorModelDescriptor();
  if (editorModelDescriptor != null) {
    this.add(new SModelTreeNode(editorModelDescriptor,null,operationContext,false));
  }
  SModelDescriptor helginsModelDescriptor=myLanguage.getHelginsTypesystemModelDescriptor();
  if (helginsModelDescriptor != null) {
    this.add(new SModelTreeNode(helginsModelDescriptor,null,operationContext,false));
  }
  SModelDescriptor actionsModelDescriptor=myLanguage.getActionsModelDescriptor();
  if (actionsModelDescriptor != null) {
    this.add(new SModelTreeNode(actionsModelDescriptor,null,operationContext,false));
  }
  SModelDescriptor constraintsModelDescriptor=myLanguage.getConstraintsModelDescriptor();
  if (constraintsModelDescriptor != null) {
    this.add(new SModelTreeNode(constraintsModelDescriptor,null,operationContext,false));
  }
  SModelDescriptor intentionsModelDescriptor=myLanguage.getIntentionsModelDescriptor();
  if (intentionsModelDescriptor != null) {
    this.add(new SModelTreeNode(intentionsModelDescriptor,null,operationContext,false));
  }
  SModelDescriptor findUsagesModelDescriptor=myLanguage.getFindUsagesModelDescriptor();
  if (findUsagesModelDescriptor != null) {
    this.add(new SModelTreeNode(findUsagesModelDescriptor,null,operationContext,false));
  }
  SModelDescriptor scriptsModelDescriptor=myLanguage.getScriptsModelDescriptor();
  if (scriptsModelDescriptor != null) {
    this.add(new SModelTreeNode(scriptsModelDescriptor,null,operationContext,false));
  }
  SModelDescriptor documentationModelDescriptor=myLanguage.getDocumentationModelDescriptor();
  if (documentationModelDescriptor != null) {
    this.add(new SModelTreeNode(documentationModelDescriptor,null,operationContext,false));
  }
  SModelDescriptor cfaModelDescriptor=myLanguage.getCFAModelDescriptor();
  if (cfaModelDescriptor != null) {
    this.add(new SModelTreeNode(cfaModelDescriptor,null,operationContext,false));
  }
  if (myLanguage.getAccessoryModels().size() > 0) {
    TextTreeNode accessories=new TextTreeNode("accessories"){
      public Icon getIcon(      boolean expanded){
        return Icons.LIB_ICON;
      }
    }
;
    List<SModelDescriptor> sortedModels=SortUtil.sortModels(myLanguage.getAccessoryModels());
    for (    SModelDescriptor model : sortedModels) {
      accessories.add(new SModelTreeNode(model,null,operationContext));
    }
    this.add(accessories);
  }
  for (  Generator generator : myLanguage.getGenerators()) {
    MPSTreeNode generatorNode=new GeneratorTreeNode(generator,myProject);
    this.add(generatorNode);
  }
}
