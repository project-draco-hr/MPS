{
  SNode ct=SConceptOperations.createNewNode("jetbrains.mps.nanoj.structure.ClassifierType",null);
  SLinkOperations.setTarget(ct,"classifier",SNodeOperations.getParent(SLinkOperations.getTarget(argument,"constructor",false),null,false,false),false);
  TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(argument,"jetbrains.mps.nanoj.helgins","1197555135257",true),ct,argument,null,"jetbrains.mps.nanoj.helgins","1197555135256");
  if (SequenceOperations.getSize(SLinkOperations.getTargets(argument,"parameter",true)) != SequenceOperations.getSize(SLinkOperations.getTargets(SLinkOperations.getTarget(argument,"constructor",false),"parameter",true))) {
    TypeChecker.getInstance().reportTypeError(argument,"Wrong parameters number","jetbrains.mps.nanoj.helgins","1197555135262");
    return;
  }
  List<SNode> args=SLinkOperations.getTargets(argument,"parameter",true);
  List<SNode> params=SLinkOperations.getTargets(SLinkOperations.getTarget(argument,"constructor",false),"parameter",true);
  for (int i=0; i < SequenceOperations.getSize(SLinkOperations.getTargets(argument,"parameter",true)); i=i + 1) {
    TypeChecker.getInstance().getRuntimeSupport().createLessThanInequationStrong(TypeChecker.getInstance().getRuntimeSupport().typeOf(ListOperations.getElement(args,i),"jetbrains.mps.nanoj.helgins","1197555135314",true),SLinkOperations.getTarget(ListOperations.getElement(params,i),"type",true),ListOperations.getElement(args,i),null,"jetbrains.mps.nanoj.helgins","1197555135312");
  }
}
