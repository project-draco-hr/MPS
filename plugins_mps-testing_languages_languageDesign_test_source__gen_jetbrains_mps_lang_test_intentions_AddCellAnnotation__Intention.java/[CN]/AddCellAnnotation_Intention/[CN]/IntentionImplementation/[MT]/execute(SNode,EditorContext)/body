{
  SNode ancessor=node;
  while (ancessor != null && !(SNodeOperations.isInstanceOf(SNodeOperations.getParent(ancessor),"jetbrains.mps.lang.test.structure.EditorTestCase"))) {
    ancessor=SNodeOperations.getParent(ancessor);
  }
  for (  SNode oldAnnotation : SNodeOperations.getDescendants(ancessor,"jetbrains.mps.lang.test.structure.AnonymousCellAnnotation",false,new String[]{})) {
    SNodeOperations.deleteNode(oldAnnotation);
  }
  SNode newAnnotation=SNodeFactoryOperations.createNewNode("jetbrains.mps.lang.test.structure.AnonymousCellAnnotation",null);
  EditorCell contextCell=editorContext.getContextCell();
  if (editorContext.getEditorComponent() instanceof InspectorEditorComponent) {
    SPropertyOperations.set(newAnnotation,"isInInspector","" + (true));
  }
  if (contextCell instanceof EditorCell_Label) {
    EditorCell_Label label=(EditorCell_Label)contextCell;
    int caretPosition=label.getCaretPosition();
    if (caretPosition == label.getText().length()) {
      SPropertyOperations.set(newAnnotation,"isLastPosition","" + (true));
    }
 else {
      SPropertyOperations.set(newAnnotation,"caretPosition","" + (caretPosition));
    }
    SPropertyOperations.set(newAnnotation,"useLabelSelection","" + (true));
    SPropertyOperations.set(newAnnotation,"selectionStart","" + (label.getSelectionStart()));
    SPropertyOperations.set(newAnnotation,"selectionEnd","" + (label.getSelectionEnd()));
  }
 else {
    SPropertyOperations.set(newAnnotation,"caretPosition","" + (0));
  }
  SPropertyOperations.set(newAnnotation,"cellId",contextCell.getCellId());
  Selection selection=((EditorComponent)editorContext.getEditorComponent()).getSelectionManager().getSelection();
  if (selection instanceof NodeRangeSelection) {
    NodeRangeSelection nodeRangeSelection=(NodeRangeSelection)selection;
    SLinkOperations.setTarget(newAnnotation,"nodeRangeSelectionStart",nodeRangeSelection.getFirstNode(),false);
    SLinkOperations.setTarget(newAnnotation,"nodeRangeSelectionEnd",nodeRangeSelection.getLastNode(),false);
  }
  AttributeOperations.setAttribute(node,new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.test.structure.INodeAnnotattion")),newAnnotation);
  SelectionUtil.selectNode(editorContext,newAnnotation);
}
