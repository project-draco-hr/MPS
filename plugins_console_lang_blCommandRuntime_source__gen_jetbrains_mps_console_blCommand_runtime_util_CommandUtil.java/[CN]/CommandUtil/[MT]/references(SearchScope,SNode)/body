{
  Iterable<SReference> allReferences=Sequence.fromIterable(nodes(scope,null)).translate(new ITranslator2<SNode,SReference>(){
    public Iterable<SReference> translate(    SNode it){
      return SNodeOperations.getReferences(it);
    }
  }
);
  if (concept == null) {
    return allReferences;
  }
 else {
    return Sequence.fromIterable(allReferences).where(new IWhereFilter<SReference>(){
      public boolean accept(      SReference it){
        return SNodeOperations.isInstanceOf(SLinkOperations.getTargetNode(it),NameUtil.nodeFQName(concept));
      }
    }
);
  }
}
