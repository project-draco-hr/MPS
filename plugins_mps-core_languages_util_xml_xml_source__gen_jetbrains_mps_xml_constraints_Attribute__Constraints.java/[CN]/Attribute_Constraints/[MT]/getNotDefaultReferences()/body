{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("attributeDeclaration",new BaseReferenceConstraintsDescriptor("attributeDeclaration",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          ISearchScope searchScope;
          SNode elementDeclaration=ElementUtil.getParentElementDeclaration(_context.getEnclosingNode(),operationContext.getScope());
          if ((elementDeclaration == null)) {
            searchScope=SModelSearchUtil.createModelAndImportedModelsScope(_context.getModel(),operationContext.getScope());
          }
 else {
            searchScope=new SimpleSearchScope(ElementDeclaration_Behavior.call_getAttributeDeclarations_1213877429821(elementDeclaration));
          }
          return searchScope;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_oyfip5_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
