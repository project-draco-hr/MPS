{
  initEditor("1560508619094015368","1560508619094015372");
  final Wrappers._T<SNode> node=new Wrappers._T<SNode>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      node.value=SNodeOperations.cast(TestBody.this.getNodeById("1560508619094050075"),MetaAdapterFactory.getConcept(0x50560c9658e49c5L,0xb8e79e4db4c7e97fL,0x4ce40ecaf41f71f2L,"jetbrains.mps.lang.editor.diagram.testLanguage.structure.InputPort"));
    }
  }
);
  Mapper descendantMapper;
  descendantMapper=DecoratorTestRunner.prepareAndGetMapper(node.value,this.getEditorComponent(),PortCell.class);
  Assert.assertTrue(descendantMapper != null);
  Assert.assertTrue(descendantMapper.getTarget() != null);
  Assert.assertTrue(descendantMapper.getTarget() instanceof PortDecoratorView);
  PortDecoratorView portDecoratorView=((PortDecoratorView)descendantMapper.getTarget());
  Assert.assertTrue(portDecoratorView.hasError.get());
  View errorView=Sequence.fromIterable(JetpadUtils.getAllChildren(portDecoratorView)).findFirst(new IWhereFilter<View>(){
    public boolean accept(    View it){
      return it instanceof SelectionFrameView;
    }
  }
);
  Assert.assertTrue(errorView != null);
  Assert.assertTrue(errorView.visible().get());
}
