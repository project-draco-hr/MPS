{
  return new IJob(){
    public IResult execute(    final Iterable<IResource> input,    final IJobMonitor monitor,    final IParametersPool pool){
      final Wrappers._T<Iterable<IResource>> _output_fi61u2_a0d=new Wrappers._T<Iterable<IResource>>(null);
switch (0) {
case 0:
        MessagesViewTool mvt=pool.parameters(new ITarget.Name("checkParameters"),Generate_Facet.Target_fi61u2_a.Variables.class).project().getComponent(MessagesViewTool.class);
      if (mvt != null) {
        mvt.openToolLater(false);
      }
    boolean generationOk;
  GeneratorManager gm=pool.parameters(new ITarget.Name("checkParameters"),Generate_Facet.Target_fi61u2_a.Variables.class).project().getComponent(GeneratorManager.class);
if (!(pool.parameters(new ITarget.Name("configure"),Generate_Facet.Target_fi61u2_c.Variables.class).saveTransient())) {
  pool.parameters(new ITarget.Name("checkParameters"),Generate_Facet.Target_fi61u2_a.Variables.class).project().getComponent(GenerationTracer.class).discardTracing();
}
GenerationHandler gh=new GenerationHandler(new _FunctionTypes._return_P1_E0<Boolean,GResource>(){
public Boolean invoke(GResource data){
  monitor.currentProgress().advanceWork("Generating",1000);
  _output_fi61u2_a0d.value=Sequence.fromIterable(_output_fi61u2_a0d.value).concat(Sequence.fromIterable(Sequence.<IResource>singleton(data)));
  return true;
}
}
);
monitor.currentProgress().beginWork("Generating",Sequence.fromIterable(input).foldLeft(0,new ILeftCombinator<IResource,Integer>(){
public Integer combine(Integer s,IResource it){
return s + Sequence.fromIterable(((MResource)it).models()).count() * 1000;
}
}
),monitor.currentProgress().workLeft());
generationOk=gm.generateModels(Sequence.fromIterable(input).<SModelDescriptor>translate(new ITranslator2<IResource,SModelDescriptor>(){
public Iterable<SModelDescriptor> translate(IResource in){
return ((MResource)in).models();
}
}
).toListSequence(),pool.parameters(new ITarget.Name("checkParameters"),Generate_Facet.Target_fi61u2_a.Variables.class).operationContext(),gh,pool.parameters(new ITarget.Name("checkParameters"),Generate_Facet.Target_fi61u2_a.Variables.class).pindGet().invoke(),new DefaultMessageHandler(pool.parameters(new ITarget.Name("checkParameters"),Generate_Facet.Target_fi61u2_a.Variables.class).project()){
@Override public void clear(){
}
}
,pool.parameters(new ITarget.Name("configure"),Generate_Facet.Target_fi61u2_c.Variables.class).generationOptions().create());
monitor.currentProgress().finishWork("Generating");
if (!(generationOk)) {
return new IResult.FAILURE(_output_fi61u2_a0d.value);
}
default :
return new IResult.SUCCESS(_output_fi61u2_a0d.value);
}
}
}
;
}
