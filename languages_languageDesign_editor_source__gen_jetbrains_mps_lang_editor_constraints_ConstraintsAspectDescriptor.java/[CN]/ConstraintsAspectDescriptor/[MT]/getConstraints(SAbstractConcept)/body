{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_2qnle6_a0c.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return new AbstractComponent_Constraints();
      }
    break;
case 1:
  if (true) {
    return new AttributeStyleClassItem_Constraints();
  }
break;
case 2:
if (true) {
return new CellActionMapDeclaration_Constraints();
}
break;
case 3:
if (true) {
return new CellIdReferenceSelector_Constraints();
}
break;
case 4:
if (true) {
return new CellKeyMapDeclaration_Constraints();
}
break;
case 5:
if (true) {
return new CellMenuComponent_Constraints();
}
break;
case 6:
if (true) {
return new CellMenuComponentFeature_Link_Constraints();
}
break;
case 7:
if (true) {
return new CellMenuComponentFeature_Property_Constraints();
}
break;
case 8:
if (true) {
return new CellMenuPart_ReplaceNode_CustomNodeConcept_Constraints();
}
break;
case 9:
if (true) {
return new CellModel_Component_Constraints();
}
break;
case 10:
if (true) {
return new CellModel_NextEditor_Constraints();
}
break;
case 11:
if (true) {
return new CellModel_Property_Constraints();
}
break;
case 12:
if (true) {
return new CellModel_RefCell_Constraints();
}
break;
case 13:
if (true) {
return new CellModel_RefNode_Constraints();
}
break;
case 14:
if (true) {
return new CellModel_RefNodeList_Constraints();
}
break;
case 15:
if (true) {
return new CellModel_ReferencePresentation_Constraints();
}
break;
case 16:
if (true) {
return new CellModel_TransactionalProperty_Constraints();
}
break;
case 17:
if (true) {
return new CellModel_WithRole_Constraints();
}
break;
case 18:
if (true) {
return new ConceptEditorDeclaration_Constraints();
}
break;
case 19:
if (true) {
return new ConceptEditorHintDeclaration_Constraints();
}
break;
case 20:
if (true) {
return new ContextVariable_Constraints();
}
break;
case 21:
if (true) {
return new EditorComponentDeclaration_Constraints();
}
break;
case 22:
if (true) {
return new IStyle_Constraints();
}
break;
case 23:
if (true) {
return new NavigatableReferenceStyleClassItem_Constraints();
}
break;
case 24:
if (true) {
return new PropertyDeclarationCellSelector_Constraints();
}
break;
case 25:
if (true) {
return new RGBColor_Constraints();
}
break;
case 26:
if (true) {
return new StyleClassItem_Constraints();
}
break;
case 27:
if (true) {
return new StyleSheet_Constraints();
}
break;
case 28:
if (true) {
return new TransformationFeature_Constraints();
}
break;
case 29:
if (true) {
return new TransformationLocation_Constraints();
}
break;
case 30:
if (true) {
return new TransformationMenu_Constraints();
}
break;
case 31:
if (true) {
return new TransformationMenuReference_Default_Constraints();
}
break;
case 32:
if (true) {
return new TransformationMenuReference_Named_Constraints();
}
break;
case 33:
if (true) {
return new TransformationMenu_Default_Constraints();
}
break;
default :
}
}
return new BaseConstraintsDescriptor(concept);
}
