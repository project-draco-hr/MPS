{
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0c,descriptor.getConceptFqName())) {
case 0:
    return Collections.<ConceptEditor>singletonList(new ActionHandler_Editor());
case 1:
  return Collections.<ConceptEditor>singletonList(new AfterConstructionBlock_Editor());
case 2:
return Collections.<ConceptEditor>singletonList(new AttributeDeclaration_Editor());
case 3:
return Collections.<ConceptEditor>singletonList(new AttributeReferenceOperation_Editor());
case 4:
return Collections.<ConceptEditor>singletonList(new AttributeValue_Editor());
case 5:
return Collections.<ConceptEditor>singletonList(new BeanCreator_Editor());
case 6:
return Collections.<ConceptEditor>singletonList(new BeanDeclaration_Editor());
case 7:
return Collections.<ConceptEditor>singletonList(new BeanType_Editor());
case 8:
return Collections.<ConceptEditor>singletonList(new BeforeConstructionBlock_Editor());
case 9:
return Collections.<ConceptEditor>singletonList(new BindExpression_Editor());
case 10:
return Collections.<ConceptEditor>singletonList(new CellRendererAttribute_Editor());
case 11:
return Collections.<ConceptEditor>singletonList(new ComponentController_Editor());
case 12:
return Collections.<ConceptEditor>singletonList(new ComponentCreator_Editor());
case 13:
return Collections.<ConceptEditor>singletonList(new ComponentDeclaration_Editor());
case 14:
return Collections.<ConceptEditor>singletonList(new ComponentInstance_Editor());
case 15:
return Collections.<ConceptEditor>singletonList(new ComponentReference_Editor());
case 16:
return Collections.<ConceptEditor>singletonList(new ComponentType_Editor());
case 17:
return Collections.<ConceptEditor>singletonList(new EventAccessOperation_Editor());
case 18:
return Collections.<ConceptEditor>singletonList(new EventDeclaration_Editor());
case 19:
return Collections.<ConceptEditor>singletonList(new EventHandlerReference_Editor());
case 20:
return Collections.<ConceptEditor>singletonList(new Form_Editor());
case 21:
return Collections.<ConceptEditor>singletonList(new FormPart_Editor());
case 22:
return Collections.<ConceptEditor>singletonList(new Grid_Editor());
case 23:
return Collections.<ConceptEditor>singletonList(new GridRow_Editor());
case 24:
return Collections.<ConceptEditor>singletonList(new InlineEventHandler_Editor());
case 25:
return Collections.<ConceptEditor>singletonList(new InlineRenderer_Editor());
case 26:
return Collections.<ConceptEditor>singletonList(new LayoutConstraint_Editor());
case 27:
return Collections.<ConceptEditor>singletonList(new ListElements_Editor());
case 28:
return Collections.<ConceptEditor>singletonList(new PngIcon_Editor());
case 29:
return Collections.<ConceptEditor>singletonList(new RaiseInternalStatement_Editor());
case 30:
return Collections.<ConceptEditor>singletonList(new RaiseOperation_Editor());
case 31:
return Collections.<ConceptEditor>singletonList(new RenderingObject_Editor());
case 32:
return Collections.<ConceptEditor>singletonList(new Scroller_Editor());
case 33:
return Collections.<ConceptEditor>singletonList(new StandardDialog_Editor());
case 34:
return Collections.<ConceptEditor>singletonList(new StandardDialogButton_Editor());
case 35:
return Collections.<ConceptEditor>singletonList(new StubCellRendererInfo_Editor());
default :
}
return Collections.emptyList();
}
