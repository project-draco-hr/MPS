{
  final ClassType referenceType=findClassType(className,getVM());
  final Method constructor=findConstructor(referenceType,jniSignature);
  final List<Value> argValues=MirrorUtil.getValues(getThreadReference(),args);
  return handleInvocationExceptions(new Invocatable<IObjectValueProxy>(){
    @Override public IObjectValueProxy invoke() throws InvocationException, InvalidTypeException, ClassNotLoadedException, IncompatibleThreadStateException {
      Value result=referenceType.newInstance(getThreadReference(),constructor,argValues,0);
      return (IObjectValueProxy)MirrorUtil.getValueProxy(result,getThreadReference());
    }
  }
);
}
