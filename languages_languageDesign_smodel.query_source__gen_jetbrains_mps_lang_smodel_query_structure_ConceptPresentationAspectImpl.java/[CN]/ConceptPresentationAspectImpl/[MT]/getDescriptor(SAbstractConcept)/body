{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case 0:
    return props_AbstractPrintExpression_old;
case 1:
  return props_BLCommand_old;
case 2:
return props_BLExpression_old;
case 3:
return props_CustomScope;
case 4:
return props_ExpressionHelpProvider;
case 5:
return props_GlobalScope_old;
case 6:
return props_HelpProvider;
case 7:
return props_InstancesExpression;
case 8:
return props_ModelScope;
case 9:
return props_ModelsExpression;
case 10:
return props_ModulesExpression;
case 11:
return props_ModulesScope;
case 12:
return props_NodesExpression;
case 13:
return props_OperationHelpProvider;
case 14:
return props_PrintExpression_old;
case 15:
return props_PrintNodeExpression_old;
case 16:
return props_PrintNodeReferenceExpression_old;
case 17:
return props_PrintSequenceExpression_old;
case 18:
return props_PrintTextExpression_old;
case 19:
return props_ProjectExpression_old;
case 20:
return props_ProjectScope_old;
case 21:
return props_QueryExpression;
case 22:
return props_QueryParameter;
case 23:
return props_QueryParameterIncludeReadOnly;
case 24:
return props_QueryParameterList;
case 25:
return props_QueryParameterScope;
case 26:
return props_ReferencesExpression;
case 27:
return props_ScopeParameter;
case 28:
return props_ShowExpression_old;
case 29:
return props_UsagesExpression;
case 30:
return props_WithStatement;
}
throw new IllegalStateException("Unknown concept " + c);
}
