{
  return new AbstractProjectViewSelectInTarget(myProject,getId(),getWeight(),getTitle()){
    public VirtualFile myFile;
    public boolean canSelect(    SelectInContext context){
      VirtualFile virtualFile=context.getVirtualFile();
      if (!(virtualFile instanceof MPSNodeVirtualFile)) {
        myFile=virtualFile;
        if (isInitialized() && getNode(virtualFile) == null)         return false;
        return true;
      }
      final MPSNodeVirtualFile nodeVirtualFile=(MPSNodeVirtualFile)virtualFile;
      SModel smodel=ModelAccess.instance().runReadAction(new Computable<SModel>(){
        public SModel compute(){
          return nodeVirtualFile.getNode().getModel();
        }
      }
);
      SModelDescriptor d=smodel.getModelDescriptor();
      if (!(d instanceof DefaultSModelDescriptor))       return false;
      IFile modelFile=((DefaultSModelDescriptor)d).getModelFile();
      VirtualFile realFile=null;
      if (modelFile != null) {
        realFile=VirtualFileUtils.getVirtualFile(modelFile);
      }
      myFile=realFile;
      if ((realFile == null) || (isInitialized() && getNode(realFile) == null))       return false;
      return true;
    }
    @Override protected void doSelectIn(    SelectInContext context,    boolean requestFocus){
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          selectNode(myFile,true);
        }
      }
);
    }
  }
;
}
