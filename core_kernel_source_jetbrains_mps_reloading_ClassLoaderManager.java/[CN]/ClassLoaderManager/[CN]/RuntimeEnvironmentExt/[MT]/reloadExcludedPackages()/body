{
  myExcludedPackages=new HashSet();
  Set<Language> bootstrapLanguages=LibraryInitializer.getInstance().getBootstrapModules(Language.class);
  for (  RBundle<ModuleReference> bundle : getBundles()) {
    IModule module=MPSModuleRepository.getInstance().getModule(bundle.getId());
    if (!(module instanceof Language)) {
      continue;
    }
    Language l=(Language)module;
    boolean bootstrapModule=bootstrapLanguages.contains(l);
    for (    LanguageAspect aspect : LanguageAspect.values()) {
      if (bootstrapModule && aspect == LanguageAspect.STRUCTURE) {
        SModelDescriptor modelDescriptor=aspect.get(l);
        myExcludedPackages.add(modelDescriptor.getLongName().replaceAll("\\.structure$",".unittest"));
        continue;
      }
      SModelDescriptor modelDescriptor=aspect.get(l);
      if (modelDescriptor != null) {
        myExcludedPackages.add(modelDescriptor.getLongName());
      }
    }
    for (    SModelDescriptor model : l.getUtilModels()) {
      myExcludedPackages.add(model.getLongName());
    }
    for (    Generator generator : l.getGenerators()) {
      for (      SModelDescriptor templateModel : generator.getOwnModelDescriptors()) {
        if (isNotStubModel(templateModel)) {
          myExcludedPackages.add(templateModel.getLongName());
        }
      }
    }
  }
}
