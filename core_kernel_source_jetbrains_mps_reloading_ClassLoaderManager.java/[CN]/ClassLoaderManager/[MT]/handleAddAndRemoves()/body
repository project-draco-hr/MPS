{
  try {
    Set<String> toReload=new LinkedHashSet<String>(myToAdd);
    toReload.retainAll(myToRemove);
    Set<String> toRemove=new LinkedHashSet<String>(myToRemove);
    toRemove.removeAll(myToAdd);
    Set<String> toAdd=new LinkedHashSet<String>(myToAdd);
    toAdd.removeAll(myToRemove);
    if (!toReload.isEmpty()) {
      String[] reloadList=toReload.toArray(new String[0]);
      Bundle[] bundles=new Bundle[reloadList.length];
      for (int i=0; i < reloadList.length; i++) {
        bundles[i]=myOSGIBundles.get(reloadList[i]);
      }
      refreshBundles(bundles,true);
    }
    if (!toRemove.isEmpty()) {
      String[] unloadList=toRemove.toArray(new String[0]);
      Bundle[] bundles=new Bundle[unloadList.length];
      for (int i=0; i < unloadList.length; i++) {
        try {
          Bundle bundle=myOSGIBundles.get(unloadList[i]);
          bundles[i]=bundle;
          bundle.uninstall();
          myOSGIBundles.remove(unloadList[i]);
        }
 catch (        BundleException e) {
          LOG.error(e);
        }
      }
      refreshBundles(bundles,false);
    }
    if (!toAdd.isEmpty()) {
      for (      String moduleUID : toAdd) {
        addModule(moduleUID);
      }
    }
  }
  finally {
    myToRemove.clear();
    myToAdd.clear();
  }
}
