{
  this.addNodeById("1230052444310");
  ExtractMethodRefactoringAnalyzer a=new ExtractMethodRefactoringAnalyzer(ListSequence.<SNode>fromArray(SNodeOperations.cast(this.getNodeById("1230052444319"),"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement"),SNodeOperations.cast(this.getNodeById("1230052444324"),"jetbrains.mps.baseLanguage.structure.ExpressionStatement"),SNodeOperations.cast(this.getNodeById("1230052444331"),"jetbrains.mps.baseLanguage.structure.ExpressionStatement")));
  List<MethodParameter> vars=a.getInputVariables();
  Assert.assertEquals(1,ListSequence.fromList(vars).count());
  Assert.assertEquals(SNodeOperations.cast(this.getNodeById("1230052444315"),"jetbrains.mps.baseLanguage.structure.ParameterDeclaration"),ListSequence.fromList(vars).getElement(0).getDeclaration());
}
