{
  final String packageName=psiPackage.getQualifiedName();
  return ModelAccess.instance().runReadAction(new Computable<PsiClass[]>(){
    @Override public PsiClass[] compute(){
      SConcept classifierConcept=SNodeOperations.getConcept("jetbrains.mps.baseLanguage.structure.Classifier");
      CollectConsumer<SModel> consumer=new CollectConsumer<SModel>(new ArrayList<SModel>());
      findMPSPackage(packageName,consumer);
      List<SNode> result=new ArrayList<SNode>();
      for (      SModel model : consumer.getResult()) {
        for (        SNode root : model.getRootNodes()) {
          if (root.getConcept().isSubConceptOf(classifierConcept)) {
            result.add(root);
          }
        }
      }
      return toPsiClasses(result);
    }
  }
);
}
