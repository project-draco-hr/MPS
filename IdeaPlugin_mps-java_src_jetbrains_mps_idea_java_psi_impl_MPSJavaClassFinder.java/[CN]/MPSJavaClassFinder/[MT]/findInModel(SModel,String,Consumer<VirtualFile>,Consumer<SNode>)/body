{
  String packageName=model.getModelName();
  if (!qname.startsWith(packageName + "."))   return;
  DataSource dataSource=model.getSource();
  if (dataSource instanceof FileSystemBasedDataSource) {
    for (    IFile iFile : ((FileSystemBasedDataSource)dataSource).getAffectedFiles()) {
      VirtualFile vFile=LocalFileSystem.getInstance().findFileByPath(iFile.getPath());
      if (vFile != null) {
        processedConsumer.consume(vFile);
      }
    }
  }
  FastNodeFinder fastFinder=((SModelInternal)model).getFastNodeFinder();
  List<SNode> classes=fastFinder.getNodes(ConceptNames.Classifier,true);
  if (classes.isEmpty())   return;
  for (  SNode claz : classes) {
    if (qname.equals(ClassUtil.getClassFQName(claz))) {
      consumer.consume(claz);
    }
  }
}
