{
  ApplicationManager.getApplication().assertReadAccessAllowed();
  Project project=scope.getProject();
  if (project == null) {
    return PsiClass.EMPTY_ARRAY;
  }
  return new ModelAccessHelper(ProjectHelper.getModelAccess(project)).runReadAction(new Computable<PsiClass[]>(){
    @Override public PsiClass[] compute(){
      CollectConsumer<SNode> consumer=new CollectConsumer<SNode>(new ArrayList<SNode>());
      findMPSClasses(qualifiedName,consumer,scope);
      return toPsiClasses(consumer.getResult());
    }
  }
);
}
