{
synchronized (myLock) {
    if (!myInitialized) {
      initCache();
    }
    Map<String,Set<SNode>> map=myNodesNoInheritance;
    if (includeInherited) {
      map=myNodesAll;
    }
    if (map.containsKey(conceptFqName)) {
      final List<SNode> result=new ArrayList<SNode>();
      for (      SNode n : map.get(conceptFqName)) {
        SNode node=n;
        if (node != null) {
          result.add(node);
        }
      }
      Collections.sort(result,new Comparator<SNode>(){
        public int compare(        SNode o1,        SNode o2){
          return o1.getSNodeId().compareTo(o2.getSNodeId());
        }
      }
);
      return result;
    }
    return Collections.EMPTY_LIST;
  }
}
