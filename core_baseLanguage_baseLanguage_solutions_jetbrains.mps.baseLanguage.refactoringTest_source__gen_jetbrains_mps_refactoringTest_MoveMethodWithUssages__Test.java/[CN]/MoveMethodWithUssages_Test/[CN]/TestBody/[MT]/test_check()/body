{
  this.addNodeById("1230053302653");
  this.addNodeById("1230053302662");
  this.addNodeById("1230053302673");
  this.addNodeById("1230053302677");
  MoveMethodRefactoring ref=new MoveMethodRefactoring(SNodeOperations.cast(this.getNodeById("1230053302655"),"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration"),SNodeOperations.cast(this.getNodeById("1230053302663"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
  ref.setUssages(ListSequence.<SNode>fromArray(SNodeOperations.cast(this.getNodeById("1230053302669"),"jetbrains.mps.baseLanguage.structure.StaticMethodCall")));
  ref.doRefactoring();
  Assert.assertEquals(null,NodesMatcher.matchNodes(ListSequence.<SNode>fromArray(SNodeOperations.cast(this.getNodeById("1230053302654"),"jetbrains.mps.baseLanguage.structure.ClassConcept"),SNodeOperations.cast(this.getNodeById("1230053302663"),"jetbrains.mps.baseLanguage.structure.ClassConcept")),ListSequence.<SNode>fromArray(SNodeOperations.cast(this.getNodeById("1230053302674"),"jetbrains.mps.baseLanguage.structure.ClassConcept"),SNodeOperations.cast(this.getNodeById("1230053302678"),"jetbrains.mps.baseLanguage.structure.ClassConcept"))));
}
