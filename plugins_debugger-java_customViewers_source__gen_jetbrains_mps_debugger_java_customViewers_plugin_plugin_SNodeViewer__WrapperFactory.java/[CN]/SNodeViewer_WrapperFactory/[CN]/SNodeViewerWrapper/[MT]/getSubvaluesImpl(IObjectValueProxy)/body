{
  List<CustomJavaWatchable> result=new ArrayList<CustomJavaWatchable>();
  IObjectValueProxy node=(IObjectValueProxy)value;
  result.add(new SNodeWatchables.MyWatchable_text(CustomViewersManager.getInstance().fromJdi(((IObjectValueProxy)node.invokeMethod("getPresentation","()Ljava/lang/String;",getThreadReference())).getJDIValue(),getThreadReference()),"text"));
  result.add(new SNodeWatchables.MyWatchable_id(CustomViewersManager.getInstance().fromJdi(((IObjectValueProxy)node.getFieldValue("myId")).getJDIValue(),getThreadReference()),"id"));
  result.add(new SNodeWatchables.MyWatchable_model(CustomViewersManager.getInstance().fromJdi(((IObjectValueProxy)node.invokeMethod("getModel","()Lorg/jetbrains/mps/openapi/model/SModel;",getThreadReference())).getJDIValue(),getThreadReference()),"model"));
  result.add(new SNodeWatchables.MyWatchable_concept(CustomViewersManager.getInstance().fromJdi(((IObjectValueProxy)((IObjectValueProxy)node.getFieldValue("myConcept")).invokeMethod("getName","()Ljava/lang/String;",getThreadReference())).getJDIValue(),getThreadReference()),"concept"));
  if (!(ProxyEqualsUtil.javaEquals(((IObjectValueProxy)node.getFieldValue("parent")),null))) {
    result.add(new SNodeWatchables.MyWatchable_parent(CustomViewersManager.getInstance().fromJdi(((IObjectValueProxy)node.getFieldValue("parent")).getJDIValue(),getThreadReference()),"parent"));
  }
  IObjectValueProxy properties=((IObjectValueProxy)node.invokeMethod("getPropertyNames","()Ljava/util/Collection;",getThreadReference()));
  if (!((Boolean)((((PrimitiveValueProxy)properties.invokeMethod("isEmpty","()Z",getThreadReference())))).getJavaValue())) {
    for (    IObjectValueProxy property : EvaluationUtils.getInstance().<IObjectValueProxy>toIterableProxy(((IObjectValueProxy)((IObjectValueProxy)EvaluationUtils.getInstance().invokeStaticMethod("jetbrains.mps.util.SNodeOperations","getProperties","(Lorg/jetbrains/mps/openapi/model/SNode;)Ljava/util/Map;",getThreadReference(),value)).invokeMethod("entrySet","()Ljava/util/Set;",getThreadReference())),getThreadReference())) {
      result.add(new SNodeWatchables.MyWatchable_property(CustomViewersManager.getInstance().fromJdi(property.getJDIValue(),getThreadReference()),"property"));
    }
  }
  IObjectValueProxy currentChild=((IObjectValueProxy)node.getFieldValue("first"));
  while (!(ProxyEqualsUtil.javaEquals(currentChild,null))) {
    result.add(new SNodeWatchables.MyWatchable_child(CustomViewersManager.getInstance().fromJdi(currentChild.getJDIValue(),getThreadReference()),"child"));
    currentChild=((IObjectValueProxy)node.getFieldValue("next"));
  }
  IArrayValueProxy references=((IArrayValueProxy)node.getFieldValue("myReferences"));
  if (!(ProxyEqualsUtil.javaEquals(references,null))) {
    for (int i=0; i < ((IArrayValueProxy)references).getLength(); i++) {
      result.add(new SNodeWatchables.MyWatchable_reference(CustomViewersManager.getInstance().fromJdi(((IObjectValueProxy)references.getElementAt(i)).getJDIValue(),getThreadReference()),"reference"));
    }
  }
  return result;
}
