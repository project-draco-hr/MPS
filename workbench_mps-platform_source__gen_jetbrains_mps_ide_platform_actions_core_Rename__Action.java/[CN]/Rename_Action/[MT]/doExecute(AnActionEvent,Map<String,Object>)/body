{
  FeatureUsageTracker.getInstance().triggerFeatureUsed("refactoring.rename");
  final Wrappers._T<String> oldName=new Wrappers._T<String>();
  final Wrappers._boolean canBeRenamed=new Wrappers._boolean();
  ((MPSProject)MapSequence.fromMap(_params).get("project")).getRepository().getModelAccess().runReadAction(new Runnable(){
    public void run(){
      canBeRenamed.value=RenameUtil.canBeRenamed(((SNode)MapSequence.fromMap(_params).get("target")));
      oldName.value=SPropertyOperations.getString(((SNode)MapSequence.fromMap(_params).get("target")),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
    }
  }
);
  if (!(canBeRenamed.value)) {
    JOptionPane.showMessageDialog(((Frame)MapSequence.fromMap(_params).get("frame")),"Nodes with getter or setter for the \"name\" property can't be renamed","Node can't be renamed",JOptionPane.INFORMATION_MESSAGE);
    return;
  }
  final String newName=RenameDialog.getNewName(((MPSProject)MapSequence.fromMap(_params).get("project")).getProject(),oldName.value,"node");
  if (newName == null) {
    return;
  }
  Iterable<? extends RefactoringParticipant<?,?,SNode,String>> participants=new ExtensionPoint<RenameNodeRefactoringParticipant<?,?>>("jetbrains.mps.ide.platform.RenameNodeParticipantEP").getObjects();
  RefactoringProcessor.performRefactoring(((MPSProject)MapSequence.fromMap(_params).get("project")),"Rename node",participants,ListSequence.fromListAndArray(new ArrayList<SNode>(),((SNode)MapSequence.fromMap(_params).get("target"))),new _FunctionTypes._return_P2_E0<_FunctionTypes._return_P1_E0<? extends String,? super SNode>,Map<RefactoringParticipant,RefactoringParticipant.ParticipantState<?,?,SNode,String,SNode,String>>,RefactoringSession>(){
    public _FunctionTypes._return_P1_E0<? extends String,? super SNode> invoke(    Map<RefactoringParticipant,RefactoringParticipant.ParticipantState<?,?,SNode,String,SNode,String>> changes,    RefactoringSession refactoringSession){
      SPropertyOperations.set(((SNode)MapSequence.fromMap(_params).get("target")),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),newName);
      return new _FunctionTypes._return_P1_E0<String,SNode>(){
        public String invoke(        SNode nodeToRename){
          return newName;
        }
      }
;
    }
  }
);
}
