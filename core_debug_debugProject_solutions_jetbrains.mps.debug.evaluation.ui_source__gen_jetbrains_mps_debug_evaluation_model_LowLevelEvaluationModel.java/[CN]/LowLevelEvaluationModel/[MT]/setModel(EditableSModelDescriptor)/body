{
  super.setModel(model);
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      LowLevelEvaluationModel.this.importStubForFqName(getLocationModel().getSModelFqName().toString());
    }
  }
);
  createVars();
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      for (      SNode ref : ListSequence.fromList(SNodeOperations.getDescendants(myEvaluator,"jetbrains.mps.debug.evaluation.structure.LowLevelVariableReference",false,new String[]{}))) {
        SReference sReference=ref.getReference(LinkDeclaration_Behavior.call_getGenuineRole_1213877254542(SLinkOperations.findLinkDeclaration("jetbrains.mps.debug.evaluation.structure.LowLevelVariableReference","variableDeclaration")));
        if (sReference == null) {
          continue;
        }
        for (        SNode var : ListSequence.fromList(SLinkOperations.getTargets(myEvaluator,"variables",true))) {
          if (SPropertyOperations.getString(var,"name").equals(sReference.getResolveInfo())) {
            SLinkOperations.setTarget(ref,"baseVariableDeclaration",var,false);
            break;
          }
        }
      }
    }
  }
);
}
