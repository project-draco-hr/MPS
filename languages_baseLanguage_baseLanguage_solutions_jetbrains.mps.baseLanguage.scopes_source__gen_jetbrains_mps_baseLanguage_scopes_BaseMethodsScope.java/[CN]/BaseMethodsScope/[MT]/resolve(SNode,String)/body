{
  List<SNode> methods=Sequence.fromIterable(this.getAvailableElements(refText)).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(it,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration");
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return refText.equals(SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")));
    }
  }
).toListSequence();
  if (methods.isEmpty()) {
    return null;
  }
  if (methods.size() == 1) {
    return ListSequence.fromList(methods).first();
  }
  if (!(SNodeOperations.isInstanceOf(contextNode,"jetbrains.mps.baseLanguage.structure.IMethodCall"))) {
    return null;
  }
  List<SNode> actualArguments=SLinkOperations.getChildren((SNodeOperations.cast(contextNode,"jetbrains.mps.baseLanguage.structure.IMethodCall")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141038l,"actualArgument"));
  methods=MethodResolveUtil.selectByParmCount(methods,actualArguments);
  if (methods.size() == 1) {
    return ListSequence.fromList(methods).first();
  }
  return resolveMethod(contextNode,refText,actualArguments,methods);
}
