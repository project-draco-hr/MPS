{
  List<SNode> methods=Sequence.fromIterable(this.getAvailableElements(refText)).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(it,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"));
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return refText.equals(SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")));
    }
  }
).toListSequence();
  if (methods.isEmpty()) {
    return null;
  }
  if (methods.size() == 1) {
    return ListSequence.fromList(methods).first();
  }
  if (!(SNodeOperations.isInstanceOf(contextNode,MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,"jetbrains.mps.baseLanguage.structure.IMethodCall")))) {
    return null;
  }
  List<SNode> actualArguments=SLinkOperations.getChildren((SNodeOperations.cast(contextNode,MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,"jetbrains.mps.baseLanguage.structure.IMethodCall"))),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301aeL,"actualArgument"));
  methods=MethodResolveUtil.selectByParmCount(methods,actualArguments);
  if (methods.size() == 1) {
    return ListSequence.fromList(methods).first();
  }
  return resolveMethod(contextNode,refText,actualArguments,methods);
}
