{
  Set<SNode> roots=SetSequence.fromSet(new HashSet<SNode>());
  for (  SNode applicableNodeReference : SNodeOperations.getDescendants(inferenceRule,"jetbrains.mps.lang.typesystem.structure.ApplicableNodeReference",false,new String[]{})) {
    if (SLinkOperations.getTarget(applicableNodeReference,"applicableNode",false) == SLinkOperations.getTarget(inferenceRule,"applicableNode",true)) {
      SetSequence.fromSet(roots).addElement(applicableNodeReference);
    }
  }
  int prevSize=SetSequence.fromSet(MapSequence.fromMap(dependencies).keySet()).count();
  int leavesSize=SetSequence.fromSet(leaves).count();
  for (  SNode root : roots) {
    MapSequence.fromMap(dependencies).put(root,null);
  }
  while (SetSequence.fromSet(MapSequence.fromMap(dependencies).keySet()).count() > prevSize || SetSequence.fromSet(leaves).count() > leavesSize) {
    prevSize=SetSequence.fromSet(MapSequence.fromMap(dependencies).keySet()).count();
    leavesSize=SetSequence.fromSet(leaves).count();
    for (    SNode node : SetSequence.fromSetWithValues(new HashSet<SNode>(),MapSequence.fromMap(dependencies).keySet())) {
      SNode parent=SNodeOperations.getParent(node);
      do {
        SNode matchedNode_bcwvc2_b0c0f0a=parent;
{
          boolean matches_bcwvc2_a1a2a5a0=false;
{
            SNode matchingNode_bcwvc2_a1a2a5a0=parent;
            if (matchingNode_bcwvc2_a1a2a5a0 != null) {
              matches_bcwvc2_a1a2a5a0=SModelUtil_new.isAssignableConcept(matchingNode_bcwvc2_a1a2a5a0.getConceptFqName(),"jetbrains.mps.lang.typesystem.structure.TypeOfExpression");
            }
          }
          if (matches_bcwvc2_a1a2a5a0) {
            if (!(SetSequence.fromSet(roots).contains(node))) {
              SetSequence.fromSet(leaves).addElement(node);
            }
            break;
          }
        }
{
          boolean matches_bcwvc2_b1a2a5a0=false;
{
            SNode matchingNode_bcwvc2_b1a2a5a0=parent;
            if (matchingNode_bcwvc2_b1a2a5a0 != null) {
              matches_bcwvc2_b1a2a5a0=SModelUtil_new.isAssignableConcept(matchingNode_bcwvc2_b1a2a5a0.getConceptFqName(),"jetbrains.mps.baseLanguage.structure.AssignmentExpression");
            }
          }
          if (matches_bcwvc2_b1a2a5a0) {
            if (SLinkOperations.getTarget(matchedNode_bcwvc2_b0c0f0a,"rValue",true) == node) {
              MapSequence.fromMap(dependencies).put(SLinkOperations.getTarget(matchedNode_bcwvc2_b0c0f0a,"lValue",true),new Pair<SNode,SNode>(node,new DependenciesCollector.QuotationClass_bcwvc2_a1a1a0a0a0a0c0c0b0c0f0a().createNode()));
            }
            break;
          }
        }
{
          boolean matches_bcwvc2_c1a2a5a0=false;
{
            SNode matchingNode_bcwvc2_c1a2a5a0=parent;
            if (matchingNode_bcwvc2_c1a2a5a0 != null) {
              matches_bcwvc2_c1a2a5a0=SModelUtil_new.isAssignableConcept(matchingNode_bcwvc2_c1a2a5a0.getConceptFqName(),"jetbrains.mps.baseLanguage.structure.VariableDeclaration");
            }
          }
          if (matches_bcwvc2_c1a2a5a0) {
            if (SLinkOperations.getTarget(matchedNode_bcwvc2_b0c0f0a,"initializer",true) == node) {
              MapSequence.fromMap(dependencies).put(matchedNode_bcwvc2_b0c0f0a,new Pair<SNode,SNode>(node,new DependenciesCollector.QuotationClass_bcwvc2_a1a1a0a0a0a0c0d0b0c0f0a().createNode()));
            }
            break;
          }
        }
        do {
          SNode matchedNode_bcwvc2_a1a2a5a0=node;
{
            boolean matches_bcwvc2_a0b0c0f0a=false;
{
              SNode matchingNode_bcwvc2_a0b0c0f0a=node;
              if (matchingNode_bcwvc2_a0b0c0f0a != null) {
                matches_bcwvc2_a0b0c0f0a=SModelUtil_new.isAssignableConcept(matchingNode_bcwvc2_a0b0c0f0a.getConceptFqName(),"jetbrains.mps.baseLanguage.structure.VariableDeclaration");
              }
            }
            if (matches_bcwvc2_a0b0c0f0a) {
              for (              SNode variableReference : SNodeOperations.getDescendants(inferenceRule,"jetbrains.mps.baseLanguage.structure.VariableReference",false,new String[]{})) {
                if (SLinkOperations.getTarget(variableReference,"variableDeclaration",false) == node) {
                  MapSequence.fromMap(dependencies).put(variableReference,new Pair<SNode,SNode>(node,new DependenciesCollector.QuotationClass_bcwvc2_a1a1a0a0a0a0a0c0b0e0b0c0f0a().createNode()));
                }
              }
              break;
            }
          }
{
            boolean matches_bcwvc2_b0b0c0f0a=false;
{
              SNode matchingNode_bcwvc2_b0b0c0f0a=node;
              if (matchingNode_bcwvc2_b0b0c0f0a != null) {
                matches_bcwvc2_b0b0c0f0a=SModelUtil_new.isAssignableConcept(matchingNode_bcwvc2_b0b0c0f0a.getConceptFqName(),"jetbrains.mps.baseLanguage.structure.VariableReference");
              }
            }
            if (matches_bcwvc2_b0b0c0f0a) {
{
                SNode variableDeclaration=SLinkOperations.getTarget(matchedNode_bcwvc2_a1a2a5a0,"variableDeclaration",false);
                for (                SNode reference : SNodeOperations.getDescendants(inferenceRule,"jetbrains.mps.baseLanguage.structure.VariableReference",false,new String[]{})) {
                  if (SLinkOperations.getTarget(matchedNode_bcwvc2_a1a2a5a0,"variableDeclaration",false) == variableDeclaration) {
                    SNode nodeStatement=SNodeOperations.getAncestor(matchedNode_bcwvc2_a1a2a5a0,"jetbrains.mps.baseLanguage.structure.Statement",false,false);
                    SNode usageStatement=SNodeOperations.getAncestor(reference,"jetbrains.mps.baseLanguage.structure.Statement",false,false);
                    while (SNodeOperations.getParent(nodeStatement) != SNodeOperations.getParent(usageStatement)) {
                      usageStatement=SNodeOperations.getAncestor(usageStatement,"jetbrains.mps.baseLanguage.structure.Statement",false,false);
                    }
                    List<SNode> list=CollectionUtil.filter(SNodeOperations.getParent(nodeStatement).getChildren(),new Condition(){
                      public boolean met(                      Object p0){
                        return SNodeOperations.isInstanceOf(((SNode)p0),"jetbrains.mps.baseLanguage.structure.Statement");
                      }
                    }
);
                    if (ListSequence.fromList(list).indexOf(nodeStatement) <= ListSequence.fromList(list).indexOf(usageStatement)) {
                      MapSequence.fromMap(dependencies).put(reference,new Pair<SNode,SNode>(node,new DependenciesCollector.QuotationClass_bcwvc2_a1a1a0a0e0a0b0a0c0c0e0b0c0f0a().createNode()));
                    }
                  }
                }
              }
              break;
            }
          }
        }
 while (false);
      }
 while (false);
    }
  }
}
