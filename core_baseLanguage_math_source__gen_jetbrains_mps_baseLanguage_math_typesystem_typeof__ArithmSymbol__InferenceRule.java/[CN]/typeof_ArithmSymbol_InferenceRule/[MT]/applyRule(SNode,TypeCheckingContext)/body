{
{
    SNode _nodeToCheck_1029348928467=symbol;
    BaseIntentionProvider intentionProvider=null;
    typeCheckingContext.createEquation((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467,"r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)","1418611629042199450",true),(SNode)typeCheckingContext.typeOf(SLinkOperations.getTarget(symbol,"expression",true),"r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)","1418611629042201546",true),_nodeToCheck_1029348928467,null,"r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)","1418611629042199446",intentionProvider);
  }
{
    final SNode t=typeCheckingContext.typeOf(symbol,"r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)","1418611629042132166",true);
    typeCheckingContext.whenConcrete(t,new Runnable(){
      public void run(){
        if (TypeChecker.getInstance().getSubtypingManager().isSubtype(typeCheckingContext.getEquationManager().getRepresentator(t),MathTypeUtil.qBigComplex)) {
{
            SNode _nodeToCheck_1029348928467=symbol;
            BaseIntentionProvider intentionProvider=null;
            typeCheckingContext.createLessThanInequation((SNode)SNodeOperations.copyNode(MathTypeUtil.qInt),(SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467,"r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)","1418611629042133323",true),_nodeToCheck_1029348928467,null,"r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)","1418611629042133318",true,0,intentionProvider);
          }
        }
 else         if (SNodeOperations.isInstanceOf(typeCheckingContext.getEquationManager().getRepresentator(t),"jetbrains.mps.baseLanguage.math.structure.MatrixType") || SNodeOperations.isInstanceOf(typeCheckingContext.getEquationManager().getRepresentator(t),"jetbrains.mps.baseLanguage.math.structure.VectorType")) {
        }
 else {
          String s="";
          if (SNodeOperations.isInstanceOf(symbol,"jetbrains.mps.baseLanguage.math.structure.BigProdExpression")) {
            s="Multiplicand's ";
          }
          if (SNodeOperations.isInstanceOf(symbol,"jetbrains.mps.baseLanguage.math.structure.BigSumExpression")) {
            s="Summand's ";
          }
{
            BaseIntentionProvider intentionProvider=null;
            IErrorTarget errorTarget=new NodeErrorTarget();
            typeCheckingContext.reportTypeError(symbol,s + "type should be subtype of numeral type or matrix type","r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)","1418611629042133341",intentionProvider,errorTarget);
          }
        }
      }
    }
,"r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)","1418611629042132163",false,false);
  }
}
