{
  SNode nodeMacro=QueriesUtil.addNodeMacro(node);
  SNode copySrcMacro=SConceptOperations.createNewNode("jetbrains.mps.lang.generator.structure.CopySrcNodeMacro",null);
  SNodeOperations.replaceWithAnother(nodeMacro,copySrcMacro);
  SNode referentValue=SConceptOperations.createNewNode("jetbrains.mps.lang.generator.structure.SourceSubstituteMacro_SourceNodeQuery",null);
  SNode dotExpression=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.DotExpression",null);
  SNode linkAccess=SConceptOperations.createNewNode("jetbrains.mps.lang.smodel.structure.SLinkAccess",null);
  SLinkOperations.setTarget(linkAccess,"link",this.myParameter,false);
  SLinkOperations.setTarget(dotExpression,"operation",linkAccess,true);
  SLinkOperations.setTarget(dotExpression,"operand",SConceptOperations.createNewNode("jetbrains.mps.lang.generator.structure.TemplateFunctionParameter_sourceNode",null),true);
  SNode expressionStatement=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ExpressionStatement",null);
  SLinkOperations.setTarget(expressionStatement,"expression",dotExpression,true);
  SLinkOperations.addChild(SLinkOperations.getTarget(referentValue,"body",true),"statement",expressionStatement);
  SLinkOperations.setTarget(copySrcMacro,"sourceNodeQuery",referentValue,true);
  editorContext.selectAndSetCaret(copySrcMacro,2);
}
