{
  TestMain.testOnProjectCopy(PROJECT_ARCHIVE,DESTINATION_PROJECT_DIR,PROJECT_FILE,new ProjectRunnable(){
    public boolean execute(    final MPSProject project){
      return ModelAccess.instance().runReadAction(new Computable<Boolean>(){
        @Override public Boolean compute(){
          final SModelDescriptor structureModelDescriptor=SModelRepository.getInstance().getModelDescriptor(SModelFqName.fromString(PACKAGED_LANGUAGE + ".structure"));
          if (structureModelDescriptor == null) {
            Assert.fail("Could not find structure model");
            return false;
          }
          final SModel structureModel=structureModelDescriptor.getSModel();
          if (structureModel == null) {
            Assert.fail("Could not load structure model");
            return false;
          }
          if (structureModel.rootsCount() == 0) {
            Assert.fail("No roots in structure model");
            return false;
          }
          final Iterable<SNode> roots=structureModel.roots();
          for (          SNode root : roots) {
            if (!"PackagedConcept".equals(root.getProperty("name"))) {
              Assert.fail("Unknown root in structure model");
              return false;
            }
            final SNode propertyDeclaration=root.getChild("propertyDeclaration");
            if (propertyDeclaration == null) {
              Assert.fail("Can't find child propertyDeclaration");
              return false;
            }
            if (!"someProperty".equals(propertyDeclaration.getProperty("name"))) {
              Assert.fail("Wrong property name");
              return false;
            }
          }
          final SModelDescriptor editorModelDescriptor=SModelRepository.getInstance().getModelDescriptor(SModelFqName.fromString(PACKAGED_LANGUAGE + ".editor"));
          if (editorModelDescriptor == null) {
            Assert.fail("Could not find editor model");
            return false;
          }
          final SModel editorModel=structureModelDescriptor.getSModel();
          if (editorModel == null) {
            Assert.fail("Could not load editor model");
            return false;
          }
          if (editorModel.rootsCount() == 0) {
            Assert.fail("No roots in editor model");
            return false;
          }
          return true;
        }
      }
);
    }
  }
);
}
