{
  if (LatticeUtil.isJoin(superType)) {
    for (    SNode argument : LatticeUtil.getJoinArguments(superType)) {
      if (myState.isConcrete(argument) && isSubTypeByReplacementRules(subType,argument)) {
        return true;
      }
      if (isSubType(subType,argument,info,isWeak,checkOnly)) {
        return true;
      }
    }
  }
  if (LatticeUtil.isMeet(subType)) {
    for (    SNode argument : LatticeUtil.getMeetArguments(subType)) {
      if (myState.isConcrete(argument) && isSubTypeByReplacementRules(argument,superType)) {
        return true;
      }
      if (isSubType(argument,superType,info,isWeak,checkOnly)) {
        return true;
      }
    }
  }
  return false;
}
