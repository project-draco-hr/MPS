{
  return new IJob.Stub(){
    public IResult execute(    final Iterable<IResource> input,    final IJobMonitor monitor,    final IPropertiesAccessor pa){
      Iterable<IResource> _output_mtqq_a0a=null;
switch (0) {
case 0:
        if (pa.global().properties(Target_diff.this.getName(),Diff_Facet.Target_diff.Parameters.class).path2tmp() != null) {
          monitor.currentProgress().beginWork("Diffing",100 * Sequence.fromIterable(input).count(),monitor.currentProgress().workLeft());
          for (          IResource resource : input) {
            String fqn=((TResource)resource).module().getModuleFqName();
            monitor.currentProgress().advanceWork("Diffing",1,fqn);
            for (            String diff : new Differ(pa.global().properties(Target_diff.this.getName(),Diff_Facet.Target_diff.Parameters.class).path2tmp()).diff()) {
              monitor.reportFeedback(new IFeedback.ERROR(String.valueOf(diff)));
            }
            monitor.currentProgress().advanceWork("Diffing",99,fqn);
          }
          monitor.currentProgress().finishWork("Diffing");
          MapSequence.fromMap(pa.global().properties(Target_diff.this.getName(),Diff_Facet.Target_diff.Parameters.class).path2tmp()).clear();
        }
default :
      return new IResult.SUCCESS(_output_mtqq_a0a);
  }
}
}
;
}
