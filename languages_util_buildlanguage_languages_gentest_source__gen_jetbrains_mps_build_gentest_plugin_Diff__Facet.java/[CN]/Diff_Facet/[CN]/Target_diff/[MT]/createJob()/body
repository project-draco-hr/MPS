{
  return new IJob.Stub(){
    public IResult execute(    final Iterable<IResource> input,    final IJobMonitor monitor,    final IPropertiesAccessor pa){
      Iterable<IResource> _output_mtqq_a0a=null;
switch (0) {
case 0:
        if (pa.global().properties(Target_diff.this.getName(),Diff_Facet.Target_diff.Parameters.class).fileToPath() != null) {
          monitor.currentProgress().beginWork("Diffing",100 * Sequence.fromIterable(input).count(),monitor.currentProgress().workLeft());
          for (          IResource resource : input) {
            TResource tgres=((TResource)resource);
            String fqn=tgres.modelDescriptor().getSModelReference().getSModelFqName().getLongName();
            monitor.currentProgress().advanceWork("Diffing",1,fqn);
            DeltaReconciler dr=new DeltaReconciler(tgres.delta());
            final Set<String> retainedPaths=SetSequence.fromSet(new HashSet<String>());
            dr.visitAll(new FilesDelta.Visitor(){
              @Override public boolean acceptKept(              IFile file){
                SetSequence.fromSet(retainedPaths).addElement(pa.global().properties(Target_diff.this.getName(),Diff_Facet.Target_diff.Parameters.class).fileToPath().invoke(file));
                return true;
              }
            }
);
            final Differ differ=new Differ(retainedPaths,pa.global().properties(Target_diff.this.getName(),Diff_Facet.Target_diff.Parameters.class).excludedFiles());
            final StringBuilder errors=new StringBuilder();
            dr.visitAll(new FilesDelta.Visitor(){
              @Override public boolean acceptRoot(              IFile root){
                for (                String diff : differ.diff(pa.global().properties(Target_diff.this.getName(),Diff_Facet.Target_diff.Parameters.class).fileToPath().invoke(root),root.getPath())) {
                  errors.append("\n").append(diff);
                }
                return true;
              }
            }
);
            if (errors.length() > 0) {
              monitor.reportFeedback(new IFeedback.ERROR(String.valueOf("Differences\n" + errors.toString())));
            }
            monitor.currentProgress().advanceWork("Diffing",99,fqn);
          }
          monitor.currentProgress().finishWork("Diffing");
        }
default :
      return new IResult.SUCCESS(_output_mtqq_a0a);
  }
}
}
;
}
