{
  if ("jetbrains.mps.lang.structure.structure.ConceptDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ConceptDeclaration_Constraints());
  }
  if ("jetbrains.mps.lang.structure.structure.LinkDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new LinkDeclaration_Constraints());
  }
  if ("jetbrains.mps.lang.structure.structure.PropertyDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new PropertyDeclaration_Constraints());
  }
  if ("jetbrains.mps.lang.structure.structure.DataTypeDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.structure.structure.DataTypeDeclaration"));
  }
  if ("jetbrains.mps.lang.structure.structure.EnumerationDataTypeDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EnumerationDataTypeDeclaration_Constraints());
  }
  if ("jetbrains.mps.lang.structure.structure.ConstrainedDataTypeDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ConstrainedDataTypeDeclaration_Constraints());
  }
  if ("jetbrains.mps.lang.structure.structure.EnumerationMemberDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EnumerationMemberDeclaration_Constraints());
  }
  if ("jetbrains.mps.lang.structure.structure.PrimitiveDataTypeDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.structure.structure.PrimitiveDataTypeDeclaration"));
  }
  if ("jetbrains.mps.lang.structure.structure.ConceptPropertyDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.structure.structure.ConceptPropertyDeclaration"));
  }
  if ("jetbrains.mps.lang.structure.structure.IntegerConceptPropertyDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.structure.structure.IntegerConceptPropertyDeclaration"));
  }
  if ("jetbrains.mps.lang.structure.structure.BooleanConceptPropertyDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.structure.structure.BooleanConceptPropertyDeclaration"));
  }
  if ("jetbrains.mps.lang.structure.structure.StringConceptPropertyDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.structure.structure.StringConceptPropertyDeclaration"));
  }
  if ("jetbrains.mps.lang.structure.structure.ConceptProperty".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ConceptProperty_Constraints());
  }
  if ("jetbrains.mps.lang.structure.structure.IntegerConceptProperty".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.structure.structure.IntegerConceptProperty"));
  }
  if ("jetbrains.mps.lang.structure.structure.BooleanConceptProperty".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.structure.structure.BooleanConceptProperty"));
  }
  if ("jetbrains.mps.lang.structure.structure.StringConceptProperty".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.structure.structure.StringConceptProperty"));
  }
  if ("jetbrains.mps.lang.structure.structure.ConceptLinkDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ConceptLinkDeclaration_Constraints());
  }
  if ("jetbrains.mps.lang.structure.structure.ConceptLink".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ConceptLink_Constraints());
  }
  if ("jetbrains.mps.lang.structure.structure.ReferenceConceptLink".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ReferenceConceptLink_Constraints());
  }
  if ("jetbrains.mps.lang.structure.structure.AggregationConceptLink".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.structure.structure.AggregationConceptLink"));
  }
  if ("jetbrains.mps.lang.structure.structure.AggregationConceptLinkDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.structure.structure.AggregationConceptLinkDeclaration"));
  }
  if ("jetbrains.mps.lang.structure.structure.ReferenceConceptLinkDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.structure.structure.ReferenceConceptLinkDeclaration"));
  }
  if ("jetbrains.mps.lang.structure.structure.AnnotationLinkDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AnnotationLinkDeclaration_Constraints());
  }
  if ("jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AbstractConceptDeclaration_Constraints());
  }
  if ("jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new InterfaceConceptDeclaration_Constraints());
  }
  if ("jetbrains.mps.lang.structure.structure.InterfaceConceptReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.structure.structure.InterfaceConceptReference"));
  }
  if ("jetbrains.mps.lang.structure.structure.DeprecatedNodeAnnotation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.structure.structure.DeprecatedNodeAnnotation"));
  }
  if ("jetbrains.mps.lang.structure.structure.IStructureDeprecatable".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.structure.structure.IStructureDeprecatable"));
  }
  if ("jetbrains.mps.lang.structure.structure.IConceptAspect".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.structure.structure.IConceptAspect"));
  }
  return null;
}
