{
  IRefactoring ref=OldRefactoringAdapter.createAdapterFor(new SafeDeleteModelRefactoring(deleteFiles));
  GenericRefactoringAction safeDeleteAction=new GenericRefactoringAction(ref){
    protected Applicability getMinApplicabilityLevel(){
      return Applicability.OVERRIDDEN;
    }
  }
;
  DataContext dc=new DataContext(){
    private DataContext myRealContext=DataManager.getInstance().getDataContext();
    @Nullable public Object getData(    @NonNls String dataId){
      if (dataId.equals(MPSDataKeys.MPS_PROJECT.getName()))       return project.getComponent(MPSProjectHolder.class).getMPSProject();
 else       if (dataId.equals(MPSDataKeys.CONTEXT_MODEL.getName()))       return modelDescriptor;
 else       return myRealContext.getData(dataId);
    }
  }
;
  AnActionEvent event=ActionUtils.createEvent(ActionPlaces.UNKNOWN,dc);
  ActionUtils.updateAndPerformAction(safeDeleteAction,event);
}
