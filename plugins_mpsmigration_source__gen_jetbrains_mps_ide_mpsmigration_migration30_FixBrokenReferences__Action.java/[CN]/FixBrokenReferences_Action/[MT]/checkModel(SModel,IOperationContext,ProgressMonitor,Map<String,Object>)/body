{
  if (model == null || model.getModule() == null) {
    return;
  }
  IScope scope=model.getModule().getScope();
  String title="Checking " + SModelOperations.getModelName(model) + " for unresolved references...";
  monitor.start(title,1);
  for (  SNode node : ListSequence.fromList(SModelOperations.getNodes(model,null))) {
    if (monitor.isCanceled()) {
      break;
    }
    for (    SReference ref : Sequence.fromIterable(SNodeOperations.getReferences(node))) {
      if (jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(ref) == null) {
        ResolverComponent.getInstance().resolve(ref,operationContext);
      }
      SModelReference uid=ref.getTargetSModelReference();
      if (uid == null) {
        continue;
      }
      SModel descriptor=SModelRepository.getInstance().getModelDescriptor(uid);
      if (scope.getModelDescriptor(uid) == null && descriptor != null) {
        if (scope.getModelDescriptor(uid) == null && SModelRepository.getInstance().getModelDescriptor(uid) != null) {
          SModel sm=SModelRepository.getInstance().getModelDescriptor(uid);
          SModuleReference moduleReference=check_9fpjqh_a0b0a0h0c0f0a(check_9fpjqh_a0a1a0a7a2a5a0(sm));
          if (moduleReference == null) {
            continue;
          }
          SModule module=check_9fpjqh_a0d0a0h0c0f0a(model);
          if (module == null) {
            continue;
          }
          ((IModule)module).addDependency(moduleReference,false);
        }
      }
    }
  }
  monitor.done();
}
