{
  if (SNodeOperations.isInstanceOf(name,"jetbrains.mps.baseLanguage.structure.Classifier")) {
    return isClassifierAccessible(context,SNodeOperations.cast(name,"jetbrains.mps.baseLanguage.structure.Classifier"));
  }
  if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(name,"visibility",true),"jetbrains.mps.baseLanguage.structure.PublicVisibility") || SNodeOperations.isInstanceOf(name,"jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration")) {
    return true;
  }
  if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(name,"visibility",true),"jetbrains.mps.baseLanguage.structure.PrivateVisibility")) {
    return topClassifier(context) == topClassifier(name);
  }
  if (packageName(context).equals(packageName(name))) {
    return true;
  }
  if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(name,"visibility",true),"jetbrains.mps.baseLanguage.structure.ProtectedVisibility")) {
    SNode classifier=SNodeOperations.getAncestor(name,"jetbrains.mps.baseLanguage.structure.Classifier",false,false);
    for (    SNode cls : ListSequence.fromList(SNodeOperations.getAncestors(context,"jetbrains.mps.baseLanguage.structure.Classifier",true))) {
      if (BaseLanguageUtil.isAssignable(((Classifier)SNodeOperations.getAdapter(cls)),((Classifier)SNodeOperations.getAdapter(classifier)))) {
        if (SNodeOperations.isInstanceOf(name,"jetbrains.mps.baseLanguage.structure.FieldDeclaration") && SNodeOperations.isInstanceOf(context,"jetbrains.mps.baseLanguage.structure.FieldReferenceOperation") || SNodeOperations.isInstanceOf(name,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration") && SNodeOperations.isInstanceOf(context,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation")) {
          SNode qualifier=SLinkOperations.getTarget(SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(context),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)),"jetbrains.mps.baseLanguage.structure.ClassifierType"),"classifier",false);
          if (BaseLanguageUtil.isAssignable(((Classifier)SNodeOperations.getAdapter(qualifier)),((Classifier)SNodeOperations.getAdapter(cls)))) {
            return true;
          }
        }
 else         if (SNodeOperations.isInstanceOf(name,"jetbrains.mps.baseLanguage.structure.ConstructorDeclaration")) {
          return SNodeOperations.isInstanceOf(context,"jetbrains.mps.baseLanguage.structure.SuperConstructorInvocation") || SNodeOperations.isInstanceOf(context,"jetbrains.mps.baseLanguage.structure.AnonymousClass") || SNodeOperations.isInstanceOf(context,"jetbrains.mps.baseLanguage.structure.AnonymousClassCreator");
        }
 else {
          return true;
        }
      }
    }
  }
  return false;
}
