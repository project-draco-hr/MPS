{
  Macros macros=Macros.projectDescriptor();
  Element projectElement=new Element(PROJECT);
  projectElement.setAttribute(AUTO_IMPORT_CLASSPATH,"" + getImportClasspath());
  Element projectSolutionsElement=new Element(PROJECT_SOLUTIONS);
  projectElement.addContent(projectSolutionsElement);
  for (  Path solutionPath : mySolutions) {
    Element solutionPathElement=new Element(SOLUTION_PATH);
    if (solutionPath.getPath() != null) {
      solutionPathElement.setAttribute(PATH,macros.shrinkPath(solutionPath.getPath(),file));
    }
    if (solutionPath.getMPSFolder() != null) {
      solutionPathElement.setAttribute(FOLDER,solutionPath.getMPSFolder());
    }
    projectSolutionsElement.addContent(solutionPathElement);
  }
  Element projectLanguagesElement=new Element(PROJECT_LANGUAGES);
  projectElement.addContent(projectLanguagesElement);
  for (  Path languagePath : myLanguages) {
    Element languagePathElement=new Element(LANGUAGE_PATH);
    if (languagePath.getPath() != null) {
      languagePathElement.setAttribute(PATH,macros.shrinkPath(languagePath.getPath(),file));
    }
    if (languagePath.getMPSFolder() != null) {
      languagePathElement.setAttribute(FOLDER,languagePath.getMPSFolder());
    }
    projectLanguagesElement.addContent(languagePathElement);
  }
  Element projectDevkitsElement=new Element(PROJECT_DEVKITS);
  projectElement.addContent(projectDevkitsElement);
  for (  Path devkitPath : myDevkits) {
    Element devkit=new Element(DEVKIT_PATH);
    if (devkitPath.getPath() != null) {
      devkit.setAttribute(PATH,macros.shrinkPath(devkitPath.getPath(),file));
    }
    if (devkitPath.getMPSFolder() != null) {
      devkit.setAttribute(FOLDER,devkitPath.getMPSFolder());
    }
    projectDevkitsElement.addContent(devkit);
  }
  Element tests=new Element(GEN_CONFS);
  projectElement.addContent(tests);
  for (  BaseTestConfiguration tc : myTestConfigurations) {
    if (tc instanceof ModelsTestConfiguration) {
      ModelsTestConfiguration mgc=(ModelsTestConfiguration)tc;
      Element t=new Element(GEN_CONF);
      if (mgc.getName() != null) {
        t.setAttribute(NAME,mgc.getName());
      }
      Element models=new Element(MODELS);
      for (      Model m : mgc.getModels()) {
        Element model=new Element(MODEL);
        model.setAttribute(MODEL_UID,m.getModelRef());
        models.addContent(model);
      }
      t.addContent(models);
      tests.addContent(t);
    }
    if (tc instanceof ModuleTestConfiguration) {
      ModuleTestConfiguration sgc=(ModuleTestConfiguration)tc;
      Element t=new Element(GEN_CONF_MODULE);
      if (sgc.getName() != null) {
        t.setAttribute(NAME,sgc.getName());
      }
      if (sgc.getModuleUID() != null) {
        t.setAttribute(MODULE_UID,sgc.getModuleUID());
      }
      tests.addContent(t);
    }
  }
  return projectElement;
}
