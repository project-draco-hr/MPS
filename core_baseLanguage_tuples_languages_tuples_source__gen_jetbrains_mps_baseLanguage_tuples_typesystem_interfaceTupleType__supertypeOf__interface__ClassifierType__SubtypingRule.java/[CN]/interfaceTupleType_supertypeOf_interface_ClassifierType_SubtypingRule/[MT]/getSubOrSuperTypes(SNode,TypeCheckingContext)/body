{
  List<SNode> result=new ArrayList<SNode>();
  if (false && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(classifierType,"classifier",false),"jetbrains.mps.baseLanguage.structure.Interface") && TupleIntefaceUtils.isTupleInterface(SNodeOperations.cast(SLinkOperations.getTarget(classifierType,"classifier",false),"jetbrains.mps.baseLanguage.structure.Interface"))) {
    SNode tupleType=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.tuples.structure.InterfaceTupleType",null);
    SLinkOperations.setTarget(tupleType,"iface",SNodeOperations.cast(SLinkOperations.getTarget(classifierType,"classifier",false),"jetbrains.mps.baseLanguage.structure.Interface"),false);
    for (    SNode p : ListSequence.fromList(SLinkOperations.getTargets(classifierType,"parameter",true))) {
      ListSequence.fromList(SLinkOperations.getTargets(tupleType,"parameterType",true)).addElement(SNodeOperations.copyNode(p));
    }
    ListSequence.fromList(result).addElement(tupleType);
  }
  return result;
}
