{
  for (  String cls : item.getAvailableClasses(pack)) {
    if (cls.contains("$"))     continue;
    byte[] content=item.getClass("".equals(pack) ? cls : pack + "." + cls);
    String conceptFqName=ClassConcept.concept;
switch (ClassPathModelProvider.getClassifierKind(content)) {
case CLASS:
      conceptFqName=ClassConcept.concept;
    break;
case INTERFACE:
  conceptFqName=Interface.concept;
break;
case ANNOTATIONS:
conceptFqName=Annotation.concept;
break;
case ENUM:
conceptFqName=EnumClass.concept;
break;
case UNKNOWNG:
continue;
}
result.add(new SNodeDescriptor(cls,conceptFqName,0,0,0){
@Override public SModelReference getModelReference(){
return ClassPathModelProvider.uidForPackage(pack);
}
}
);
}
for (String subpack : item.getSubpackages(pack)) {
iterateClassPath(item,result,subpack);
}
}
