{
  try {
    String value=JOptionPane.showInputDialog(((Frame)MapSequence.fromMap(_params).get("frame")),"Enter node ID:","Find node in model " + ((SModelDescriptor)MapSequence.fromMap(_params).get("model")).getLongName(),JOptionPane.QUESTION_MESSAGE);
    if (value == null) {
      return;
    }
    value=StringUtils.trim(value);
    final Wrappers._T<SNode> node=new Wrappers._T<SNode>();
    final SNodeId id=SNodeId.fromString(value);
    if (id == null) {
      JOptionPane.showMessageDialog(((Frame)MapSequence.fromMap(_params).get("frame")),"Wrong node ID format " + value);
      return;
    }
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        node.value=((SModelDescriptor)MapSequence.fromMap(_params).get("model")).getSModel().getNodeById(id);
      }
    }
);
    if (node.value == null) {
      JOptionPane.showMessageDialog(((Frame)MapSequence.fromMap(_params).get("frame")),"Can't find node with id " + value);
      return;
    }
    ((Project)MapSequence.fromMap(_params).get("project")).getComponent(MPSEditorOpener.class).editNode(node.value,((IOperationContext)MapSequence.fromMap(_params).get("context")));
  }
 catch (  Throwable t) {
    if (log.isErrorEnabled()) {
      log.error("User's action execute method failed. Action:" + "GoToNodeById",t);
    }
  }
}
