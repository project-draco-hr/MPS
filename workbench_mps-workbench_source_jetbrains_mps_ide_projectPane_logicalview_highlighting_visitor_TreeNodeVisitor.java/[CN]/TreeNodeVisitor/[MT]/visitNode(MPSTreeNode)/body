{
  if (!(node instanceof SModelTreeNode || node instanceof ProjectModuleTreeNode || node instanceof ProjectTreeNode)) {
    return;
  }
  myExecutor.execute(new Runnable(){
    public void run(){
      boolean disposed=ModelAccess.instance().runReadAction(new Computable<Boolean>(){
        public Boolean compute(){
          return !TreeNodeUpdater.checkDisposed(node);
        }
      }
);
      if (disposed)       return;
      Project project=ProjectHelper.toIdeaProject(node.getOperationContext().getProject());
      if (project != null) {
        DumbService.getInstance(project).waitForSmartMode();
      }
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          if (node instanceof SModelTreeNode) {
            visitModelNode(((SModelTreeNode)node));
          }
          if (node instanceof ProjectModuleTreeNode) {
            visitModuleNode(((ProjectModuleTreeNode)node));
          }
          if (node instanceof ProjectTreeNode) {
            visitProjectNode(((ProjectTreeNode)node));
          }
        }
      }
);
    }
  }
);
}
