{
  final SNode smartReference=ReferenceConceptUtil.getCharacteristicReference(smartConcept);
  if (smartReference == null) {
    throw new IllegalArgumentException("smartConcept has no characteristic reference: " + smartConcept.getName());
  }
  SNode linkDeclaration=role != null ? enclosingNode.getLinkDeclaration(role) : null;
  if (linkDeclaration != null && SNodeUtil.getLinkDeclaration_IsReference(linkDeclaration)) {
    throw new IllegalArgumentException("for reference role smartConcept should be null");
  }
  reference=null;
  sourceNodeConcept=smartConcept;
  genuineRole=SModelUtil.getGenuineLinkRole(smartReference);
  contextRole=role;
  this.enclosingNode=enclosingNode;
  referenceNode=null;
  linkTarget=SModelUtil.getLinkDeclarationTarget(smartReference);
  containingLinkDeclaration=linkDeclaration;
  this.index=index;
  scopeProvider=getScopeProvider(sourceNodeConcept,genuineRole);
  contextNode=referenceNode != null ? referenceNode : enclosingNode;
  model=contextNode != null ? contextNode.getModel() : null;
  module=getModule(model);
  exists=reference != null;
}
