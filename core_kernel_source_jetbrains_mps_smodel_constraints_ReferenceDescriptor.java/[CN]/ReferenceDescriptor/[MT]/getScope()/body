{
  final ReferentConstraintContext context=new ReferentConstraintContext(model,exists,contextNode,role,index,enclosingNode,referenceNode,linkTarget,containingLinkDeclaration);
  ;
  return TypeContextManager.getInstance().runResolveAction(new Computable<Scope>(){
    @Override public Scope compute(){
      try {
        if (scopeProvider != null) {
          Scope searchScope=scopeProvider.createScope(getOperationContext(module),context);
          if (searchScope != null) {
            if (reference != null && searchScope instanceof Adapter) {
              return new RefAdapter(((Adapter)searchScope).getSearchScope(),reference);
            }
            return searchScope;
          }
        }
        return new jetbrains.mps.scope.DefaultScope(model,getModuleScope(module),NameUtil.nodeFQName(linkTarget));
      }
 catch (      Exception t) {
        LOG.error(t,contextNode);
        return new ErrorScope("can't create search scope for role `" + refRole + "' in '"+ sourceNodeConcept.getName()+ "'");
      }
    }
  }
);
}
