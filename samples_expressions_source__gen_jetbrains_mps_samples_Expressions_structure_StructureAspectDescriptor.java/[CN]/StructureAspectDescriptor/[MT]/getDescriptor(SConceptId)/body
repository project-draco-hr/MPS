{
  Integer index=myIndexMap.get(id);
  if (index == null) {
    return null;
  }
switch (((int)index)) {
case 0:
    return myConceptAndSimpleMathExpression;
case 1:
  return myConceptArithmeticSimpleMathExpression;
case 2:
return myConceptBinarySimpleMathExpression;
case 3:
return myConceptLogicalSimpleMathExpression;
case 4:
return myConceptNotSimpleMathExpression;
case 5:
return myConceptOrSimpleMathExpression;
case 6:
return myConceptSimpleMathAssignment;
case 7:
return myConceptSimpleMathBooleanConstant;
case 8:
return myConceptSimpleMathBooleanType;
case 9:
return myConceptSimpleMathElementType;
case 10:
return myConceptSimpleMathExpression;
case 11:
return myConceptSimpleMathFloatConstant;
case 12:
return myConceptSimpleMathFloatType;
case 13:
return myConceptSimpleMathIntegerConstant;
case 14:
return myConceptSimpleMathIntegerType;
case 15:
return myConceptSimpleMathLongConstant;
case 16:
return myConceptSimpleMathLongType;
case 17:
return myConceptSimpleMathNumberType;
case 18:
return myConceptSimpleMathType;
case 19:
return myConceptSimpleMathTypedVarDeclaration;
case 20:
return myConceptSimpleMathVarDeclaration;
case 21:
return myConceptSimpleMathVarReference;
case 22:
return myConceptSimpleMathWrapper;
case 23:
return myConceptUnarySimpleMathExpression;
default :
throw new IllegalStateException();
}
}
