{
  SNode parent=SNodeOperations.getAncestor(thisNode,"jetbrains.mps.baseLanguage.structure.Classifier",false,false);
  if (SNodeOperations.isInstanceOf(parent,"jetbrains.mps.baseLanguage.structure.AnonymousClass")) {
    parent=SLinkOperations.getTarget(SNodeOperations.cast(parent,"jetbrains.mps.baseLanguage.structure.AnonymousClass"),"classifier",false);
  }
 else   if (SNodeOperations.isInstanceOf(parent,"jetbrains.mps.baseLanguage.structure.ClassConcept")) {
    parent=((SLinkOperations.getTarget(SNodeOperations.cast(parent,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"superclass",true) == null) ? SNodeOperations.getNode("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)","~Object") : SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.cast(parent,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"superclass",true),"classifier",false));
  }
  ClassifierAndSuperClassifiersScope scope=new ClassifierAndSuperClassifiersScope(parent,IClassifiersSearchScope.INSTANCE_METHOD);
  List<SNode> methodDeclarations=(List<SNode>)(scope.getNodes(new IsInstanceCondition("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration")));
  for (  SNode methodCandidate : methodDeclarations) {
    if (methodCandidate != thisNode && eq_4b3xw6_a0a0a0e0h(SPropertyOperations.getString(methodCandidate,"name"),SPropertyOperations.getString(thisNode,"name")) && (int)(ListSequence.fromList(SLinkOperations.getTargets(methodCandidate,"parameter",true)).count()) == (int)(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"parameter",true)).count())) {
      if (BaseMethodDeclaration_Behavior.call_hasSameSignature_1213877350435(methodCandidate,thisNode)) {
        return methodCandidate;
      }
    }
  }
  return null;
}
