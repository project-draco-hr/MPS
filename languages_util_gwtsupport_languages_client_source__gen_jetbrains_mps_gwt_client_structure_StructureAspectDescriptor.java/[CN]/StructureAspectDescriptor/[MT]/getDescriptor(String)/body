{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.gwt.client.structure.Attr").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").abstract_().create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.gwt.client.structure.CaseSensitive").super_("jetbrains.mps.gwt.client.structure.Attr").parents("jetbrains.mps.gwt.client.structure.Attr").properties("value").alias("casesensitive","").create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.gwt.client.structure.DefaultExcludes").super_("jetbrains.mps.gwt.client.structure.Attr").parents("jetbrains.mps.gwt.client.structure.Attr").properties("value").alias("defaultexcludes","").create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.gwt.client.structure.Element").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.gwt.client.structure.EntryPoint").super_("jetbrains.mps.gwt.client.structure.Element").parents("jetbrains.mps.gwt.client.structure.Element").references("entryPoint").alias("entry-point","").create();
case 5:
return new ConceptDescriptorBuilder("jetbrains.mps.gwt.client.structure.Exclude").super_("jetbrains.mps.gwt.client.structure.PatternHolder").parents("jetbrains.mps.gwt.client.structure.PatternHolder").alias("exclude","").create();
case 6:
return new ConceptDescriptorBuilder("jetbrains.mps.gwt.client.structure.Excludes").super_("jetbrains.mps.gwt.client.structure.Attr").parents("jetbrains.mps.gwt.client.structure.Attr").children(new String[]{"pattern"},new boolean[]{false}).alias("excludes","").create();
case 7:
return new ConceptDescriptorBuilder("jetbrains.mps.gwt.client.structure.GWTModule").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.IResolveInfo").children(new String[]{"renameTo","element"},new boolean[]{false,true}).alias("GWT module","").create();
case 8:
return new ConceptDescriptorBuilder("jetbrains.mps.gwt.client.structure.Include").super_("jetbrains.mps.gwt.client.structure.PatternHolder").parents("jetbrains.mps.gwt.client.structure.PatternHolder").alias("include","").create();
case 9:
return new ConceptDescriptorBuilder("jetbrains.mps.gwt.client.structure.Includes").super_("jetbrains.mps.gwt.client.structure.Attr").parents("jetbrains.mps.gwt.client.structure.Attr").children(new String[]{"pattern"},new boolean[]{false}).alias("includes","").create();
case 10:
return new ConceptDescriptorBuilder("jetbrains.mps.gwt.client.structure.Inherits").super_("jetbrains.mps.gwt.client.structure.Element").parents("jetbrains.mps.gwt.client.structure.Element").references("module").alias("inherits","").create();
case 11:
return new ConceptDescriptorBuilder("jetbrains.mps.gwt.client.structure.Path").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("value").alias("path","").create();
case 12:
return new ConceptDescriptorBuilder("jetbrains.mps.gwt.client.structure.Pattern").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("value").create();
case 13:
return new ConceptDescriptorBuilder("jetbrains.mps.gwt.client.structure.PatternFilter").super_("jetbrains.mps.gwt.client.structure.Element").parents("jetbrains.mps.gwt.client.structure.Element").children(new String[]{"path","attr","pattern"},new boolean[]{false,true,true}).abstract_().create();
case 14:
return new ConceptDescriptorBuilder("jetbrains.mps.gwt.client.structure.PatternHolder").super_("jetbrains.mps.gwt.client.structure.Element").parents("jetbrains.mps.gwt.client.structure.Element").children(new String[]{"pattern"},new boolean[]{false}).abstract_().create();
case 15:
return new ConceptDescriptorBuilder("jetbrains.mps.gwt.client.structure.Public").super_("jetbrains.mps.gwt.client.structure.PatternFilter").parents("jetbrains.mps.gwt.client.structure.PatternFilter").alias("public","").create();
case 16:
return new ConceptDescriptorBuilder("jetbrains.mps.gwt.client.structure.RenameTo").super_("jetbrains.mps.gwt.client.structure.Attr").parents("jetbrains.mps.gwt.client.structure.Attr").properties("value").alias("rename-to","").create();
case 17:
return new ConceptDescriptorBuilder("jetbrains.mps.gwt.client.structure.Source").super_("jetbrains.mps.gwt.client.structure.PatternFilter").parents("jetbrains.mps.gwt.client.structure.PatternFilter").alias("source","").create();
case 18:
return new ConceptDescriptorBuilder("jetbrains.mps.gwt.client.structure.SuperSource").super_("jetbrains.mps.gwt.client.structure.PatternFilter").parents("jetbrains.mps.gwt.client.structure.PatternFilter").alias("super-source","").create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
