{
  if (outputNodeToWeave == null) {
    return;
  }
  TracingUtil.fillOriginalNode(inputNode,outputNodeToWeave,false);
  RoleValidator v=generator.getChildRoleValidator(contextParentNode,childRole);
  RoleValidationStatus status=v.validate(outputNodeToWeave);
  if (status != null) {
    status.reportProblem(false,contextParentNode,"",GeneratorUtil.describe(inputNode,"input"),GeneratorUtil.describe(templateNode.resolve(MPSModuleRepository.getInstance()),"template"));
  }
  SNode childLinkDeclaration=SModelSearchUtil.findLinkDeclaration(((jetbrains.mps.smodel.SNode)contextParentNode).getConceptDeclarationNode(),childRole);
  if (childLinkDeclaration == null) {
    contextParentNode.addChild(childRole,outputNodeToWeave);
  }
 else {
    if (SModelUtil.isMultipleLinkDeclaration(childLinkDeclaration)) {
      contextParentNode.addChild(childRole,outputNodeToWeave);
    }
 else {
      SNode oldChild=jetbrains.mps.util.SNodeOperations.getChild(contextParentNode,childRole);
      if (oldChild != null) {
        contextParentNode.removeChild(oldChild);
      }
      contextParentNode.addChild(childRole,outputNodeToWeave);
    }
  }
}
