{
  SNode result=null;
  Set<SNode> _parameterValues_129834374=new HashSet<SNode>();
  SNode quotedNode_0=null;
  SNode quotedNode_1=null;
  SNode quotedNode_2=null;
  SNode quotedNode_3=null;
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  SNode quotedNode_7=null;
  SNode quotedNode_8=null;
{
    quotedNode_0=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement",TypeChecker.getInstance().getRuntimeTypesModel(),GlobalScope.getInstance(),false);
    SNode quotedNode1_0=quotedNode_0;
{
      quotedNode_1=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",TypeChecker.getInstance().getRuntimeTypesModel(),GlobalScope.getInstance(),false);
      SNode quotedNode1_1=quotedNode_1;
{
        quotedNode_2=(SNode)parameter_7474_0;
        SNode quotedNode1_2;
        if (_parameterValues_129834374.contains(quotedNode_2)) {
          quotedNode1_2=CopyUtil.copy(quotedNode_2);
        }
 else {
          _parameterValues_129834374.add(quotedNode_2);
          quotedNode1_2=quotedNode_2;
        }
        if (quotedNode1_2 != null) {
          quotedNode_1.addChild("operand",HUtil.copyIfNecessary(quotedNode1_2));
        }
      }
{
        quotedNode_3=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation",TypeChecker.getInstance().getRuntimeTypesModel(),GlobalScope.getInstance(),false);
        SNode quotedNode1_3=quotedNode_3;
        quotedNode1_3.addReference(SReference.create("baseMethodDeclaration",quotedNode1_3,SModelReference.fromString("f:java_stub#org.jdom(org.jdom@java_stub)"),SNodeId.fromString("~Element.setAttribute(java.lang.String,java.lang.String):org.jdom.Element")));
{
          quotedNode_5=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral",TypeChecker.getInstance().getRuntimeTypesModel(),GlobalScope.getInstance(),false);
          SNode quotedNode1_4=quotedNode_5;
          quotedNode1_4.setProperty("value",(String)parameter_7474_1);
          quotedNode_3.addChild("actualArgument",quotedNode1_4);
        }
{
          quotedNode_6=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PlusExpression",TypeChecker.getInstance().getRuntimeTypesModel(),GlobalScope.getInstance(),false);
          SNode quotedNode1_5=quotedNode_6;
{
            quotedNode_7=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral",TypeChecker.getInstance().getRuntimeTypesModel(),GlobalScope.getInstance(),false);
            SNode quotedNode1_6=quotedNode_7;
            quotedNode1_6.setProperty("value","");
            quotedNode_6.addChild("leftExpression",quotedNode1_6);
          }
{
            quotedNode_8=(SNode)parameter_7474_2;
            SNode quotedNode1_7;
            if (_parameterValues_129834374.contains(quotedNode_8)) {
              quotedNode1_7=CopyUtil.copy(quotedNode_8);
            }
 else {
              _parameterValues_129834374.add(quotedNode_8);
              quotedNode1_7=quotedNode_8;
            }
            if (quotedNode1_7 != null) {
              quotedNode_6.addChild("rightExpression",HUtil.copyIfNecessary(quotedNode1_7));
            }
          }
          quotedNode_3.addChild("actualArgument",quotedNode1_5);
        }
        quotedNode_1.addChild("operation",quotedNode1_3);
      }
      quotedNode_0.addChild("expression",quotedNode1_1);
    }
    result=quotedNode1_0;
  }
  return result;
}
