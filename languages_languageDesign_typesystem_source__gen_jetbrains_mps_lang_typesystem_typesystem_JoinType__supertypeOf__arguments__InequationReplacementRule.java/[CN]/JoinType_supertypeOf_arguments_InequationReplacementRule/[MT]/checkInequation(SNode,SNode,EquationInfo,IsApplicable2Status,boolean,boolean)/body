{
  boolean result_14532009=true;
  for (  SNode arg : SLinkOperations.getTargets(supertype,"argument",true)) {
    if (MatchingUtil.matchNodes(arg,subtype)) {
      result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)subtype,(SNode)arg,true);
      return result_14532009;
    }
  }
  for (  SNode arg : SLinkOperations.getTargets(supertype,"argument",true)) {
    if (SNodeOperations.getConceptDeclaration(arg) == SNodeOperations.getConceptDeclaration(subtype)) {
      result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)subtype,(SNode)arg,true);
      return result_14532009;
    }
  }
  for (  SNode arg : SLinkOperations.getTargets(supertype,"argument",true)) {
    if (TypeChecker.getInstance().getSubtypingManager().isSubtype(subtype,arg)) {
      result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)subtype,(SNode)arg,true);
      return result_14532009;
    }
  }
  for (  SNode arg : SLinkOperations.getTargets(supertype,"argument",true)) {
    if (CoerceUtil.canBeCoerced(subtype,SNodeOperations.getConceptDeclaration(arg)) && CoerceUtil.canBeCoerced(arg,SNodeOperations.getConceptDeclaration(subtype))) {
      result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)subtype,(SNode)arg,true);
      break;
    }
  }
  return result_14532009;
}
