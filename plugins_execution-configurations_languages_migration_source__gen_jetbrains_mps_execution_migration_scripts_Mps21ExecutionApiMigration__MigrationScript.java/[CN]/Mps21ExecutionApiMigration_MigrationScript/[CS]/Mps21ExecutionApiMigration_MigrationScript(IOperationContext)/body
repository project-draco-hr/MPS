{
  super("Execution Api Migration");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ITestNodeWrapper";
    }
    public String getAdditionalInfo(){
      return "ITestNodeWrapper";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isClassifierType(node,SModelReference.fromString("r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)"),"4087070200985064052");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps21ExecutionApiMigration_MigrationScript.QuotationClass_h8utij_a1a0a4a0a0a1a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ITestNodeWrapper.getNode()";
    }
    public String getAdditionalInfo(){
      return "ITestNodeWrapper.getNode()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,SModelReference.fromString("r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)"),"4087070200985064321");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(new Mps21ExecutionApiMigration_MigrationScript.QuotationClass_h8utij_a0b0a0e0a0a0c0a().createNode(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ITestNodeWrapper.getTestMethods()";
    }
    public String getAdditionalInfo(){
      return "ITestNodeWrapper.getTestMethods()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,SModelReference.fromString("r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)"),"2595782876361293165");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(new Mps21ExecutionApiMigration_MigrationScript.QuotationClass_h8utij_a0b0a0e0a0a0d0a().createNode(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "LanguageTestWrapper";
    }
    public String getAdditionalInfo(){
      return "LanguageTestWrapper";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isClassCreator(node,SModelReference.fromString("r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)"),"4087070200985064317");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps21ExecutionApiMigration_MigrationScript.QuotationClass_h8utij_a1a0a4a0a0a4a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
