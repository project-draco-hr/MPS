{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("parameter",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      SNode args=SLinkOperations.getTarget(SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.constructors.structure.CustomConstructor",false,false),"arguments",true);
      if (SNodeOperations.isInstanceOf(args,"jetbrains.mps.baseLanguage.constructors.structure.ListArgumentsClause")) {
        List<SNode> result=new ArrayList<SNode>();
        ListSequence.fromList(result).addElement(SLinkOperations.getTarget(SNodeOperations.cast(args,"jetbrains.mps.baseLanguage.constructors.structure.ListArgumentsClause"),"list",true));
        return result;
      }
 else       if (SNodeOperations.isInstanceOf(args,"jetbrains.mps.baseLanguage.constructors.structure.CustomArgumentClause")) {
        return SLinkOperations.getTargets(SNodeOperations.cast(args,"jetbrains.mps.baseLanguage.constructors.structure.CustomArgumentClause"),"parameter",true);
      }
 else {
        return null;
      }
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:79d4c714-b426-4aae-a835-35e7add55090(jetbrains.mps.baseLanguage.constructors.constraints)","3778783095368652009");
    }
  }
);
  return result;
}
