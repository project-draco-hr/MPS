{
  SNode node=((SNode)tab.getBaseNode());
  final Language language=SModelUtil.getDeclaringLanguage(node,GlobalScope.getInstance());
  tab.addNodeAdditionListener(new Condition<SModelDescriptor>(){
    public boolean met(    SModelDescriptor modelDescriptor){
      return Language.getLanguageFor(modelDescriptor) == language && Language.getModelAspect(modelDescriptor) == aspect;
    }
  }
,new SModelAdapter(){
    public void referenceAdded(    SModelReferenceEvent event){
      this.reinitIfNeeded(event.getReference().getSourceNode().getContainingRoot());
    }
    public void referenceRemoved(    SModelReferenceEvent event){
      this.reinitIfNeeded(event.getReference().getSourceNode().getContainingRoot());
    }
    public void rootAdded(    SModelRootEvent event){
      this.reinitIfNeeded(event.getRoot());
    }
    private void reinitIfNeeded(    SNode root){
      if (!(SNodeOperations.isInstanceOf(root,"jetbrains.mps.lang.structure.structure.IConceptAspect"))) {
        return;
      }
      if (!(tab.newNode())) {
        return;
      }
      tab.reinit();
    }
  }
);
}
