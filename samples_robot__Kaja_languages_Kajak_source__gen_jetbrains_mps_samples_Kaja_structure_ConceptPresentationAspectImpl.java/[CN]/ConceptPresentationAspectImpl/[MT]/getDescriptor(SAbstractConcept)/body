{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case LanguageConceptSwitch.AbstractCommand:
    return props_AbstractCommand;
case LanguageConceptSwitch.CommandList:
  return props_CommandList;
case LanguageConceptSwitch.CommentLine:
return props_CommentLine;
case LanguageConceptSwitch.Direction:
return props_Direction;
case LanguageConceptSwitch.Drop:
return props_Drop;
case LanguageConceptSwitch.East:
return props_East;
case LanguageConceptSwitch.EmptyLine:
return props_EmptyLine;
case LanguageConceptSwitch.Heading:
return props_Heading;
case LanguageConceptSwitch.IfStatement:
return props_IfStatement;
case LanguageConceptSwitch.IsFull:
return props_IsFull;
case LanguageConceptSwitch.IsMark:
return props_IsMark;
case LanguageConceptSwitch.IsWall:
return props_IsWall;
case LanguageConceptSwitch.LeftTurn:
return props_LeftTurn;
case LanguageConceptSwitch.Library:
return props_Library;
case LanguageConceptSwitch.LogicalExpression:
return props_LogicalExpression;
case LanguageConceptSwitch.Looking:
return props_Looking;
case LanguageConceptSwitch.North:
return props_North;
case LanguageConceptSwitch.Not:
return props_Not;
case LanguageConceptSwitch.Pick:
return props_Pick;
case LanguageConceptSwitch.Repeat:
return props_Repeat;
case LanguageConceptSwitch.Require:
return props_Require;
case LanguageConceptSwitch.RoutineCall:
return props_RoutineCall;
case LanguageConceptSwitch.RoutineDefinition:
return props_RoutineDefinition;
case LanguageConceptSwitch.Script:
return props_Script;
case LanguageConceptSwitch.South:
return props_South;
case LanguageConceptSwitch.Step:
return props_Step;
case LanguageConceptSwitch.TraceMessage:
return props_TraceMessage;
case LanguageConceptSwitch.West:
return props_West;
case LanguageConceptSwitch.While:
return props_While;
}
return null;
}
