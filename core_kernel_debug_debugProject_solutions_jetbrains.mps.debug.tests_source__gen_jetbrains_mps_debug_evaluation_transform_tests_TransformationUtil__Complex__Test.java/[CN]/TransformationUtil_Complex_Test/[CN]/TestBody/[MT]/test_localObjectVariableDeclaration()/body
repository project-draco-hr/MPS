{
  this.addNodeById("7696059916860905166");
  this.addNodeById("7696059916860905175");
  this.addNodeById("7413144797245913930");
  this.addNodeById("7413144797245913907");
  this.addNodeById("770214570644685900");
  this.addNodeById("770214570644685874");
  this.addNodeById("7413144797245913984");
  this.addNodeById("7413144797245913951");
  this.addNodeById("770214570644685972");
  this.addNodeById("770214570644685987");
  this.addNodeById("7413144797245757993");
  this.addNodeById("7413144797245757970");
  this.addNodeById("7413144797245923854");
  this.addNodeById("7413144797245923874");
  this.addNodeById("7413144797245923956");
  this.addNodeById("7413144797245923931");
  new Transformator(SNodeOperations.cast(this.getNodeById("770214570644685976"),"jetbrains.mps.baseLanguage.structure.BlockStatement"),true).transform();
  Assert.assertEquals(null,NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("770214570644685976"),"jetbrains.mps.baseLanguage.structure.BlockStatement")),ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("770214570644685988"),"jetbrains.mps.baseLanguage.structure.BlockStatement"))));
}
