{
  checkNotDisposed();
  List<ClassLoader> classLoadersToCheck=new ArrayList<ClassLoader>();
  classLoadersToCheck.add(this);
  classLoadersToCheck.addAll(getDependencyClassLoaders());
  for (  ClassLoader dep : classLoadersToCheck) {
    if (dep instanceof ModuleClassLoader) {
      URL res;
      try {
        res=((ModuleClassLoader)dep).mySupport.findResource(name);
      }
 catch (      ModuleIsNotLoadableException e) {
        throw new RuntimeException(e);
      }
      if (res != null)       return res;
    }
  }
  return null;
}
