{
  Collection<? extends ClassLoader> dependencyClassLoaders=getDependencyClassLoaders();
  for (  ClassLoader depCL : dependencyClassLoaders) {
    if (depCL instanceof ModuleClassLoader) {
      if (depCL == this)       continue;
      ModuleClassLoader depCL1=(ModuleClassLoader)depCL;
      if (depCL1.mySupport.canFindClass(name)) {
        return depCL1.loadOwnClass(name);
      }
    }
  }
  for (  ClassLoader depCL : dependencyClassLoaders) {
    if (!(depCL instanceof ModuleClassLoader)) {
      try {
        return Class.forName(name,false,depCL);
      }
 catch (      ClassNotFoundException ignored) {
      }
    }
  }
  if (dependencyClassLoaders.contains(getParent()))   return null;
 else   return loadFromParent(name);
}
