{
  checkNotDisposed();
  Class<?> aClass=getClassFromCache(fqName);
  if (aClass != null)   return aClass;
  if (fqName.startsWith("java.")) {
    return Class.forName(fqName,false,BOOTSTRAP_CLASSLOADER);
  }
synchronized (this) {
    aClass=loadFromSelf(fqName);
    try {
      if (aClass != null)       return aClass;
      if (!onlyFromSelf) {
        aClass=loadFromDeps(fqName);
      }
      if (aClass == null)       throw createCLNFException(fqName);
      if (resolve)       resolveClass(aClass);
      return aClass;
    }
  finally {
      myClasses.put(fqName,aClass);
    }
  }
}
