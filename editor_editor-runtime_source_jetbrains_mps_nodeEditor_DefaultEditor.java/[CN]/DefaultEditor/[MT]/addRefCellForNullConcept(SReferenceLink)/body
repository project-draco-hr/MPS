{
  SReference reference=mySNode.getReference(link);
  if (reference == null) {
    addLabel("<no target>");
    return;
  }
  final SNode referentNode=reference.getTargetNode();
  if (referentNode == null || referentNode.getModel() == null || !VisibilityUtil.isVisible(myEditorContext.getModel(),referentNode.getModel())) {
    String resolveInfo=((jetbrains.mps.smodel.SReference)reference).getResolveInfo();
    String myErrorText=resolveInfo != null ? resolveInfo : "?" + link.getRoleName() + "?";
    addErrorCell(myErrorText);
    return;
  }
  EditorCell cell=myEditorContext.getEditorComponent().getUpdater().getCurrentUpdateSession().updateReferencedNodeCell(new Computable<EditorCell>(){
    @Override public EditorCell compute(){
      return createReferentEditorCell(myEditorContext,link,referentNode);
    }
  }
,referentNode,link.getRoleName());
  setSemanticNodeToCells(cell,mySNode);
  if (cell.getRole() == null) {
    cell.setRole(link.getRoleName());
    cell.setReferenceCell(true);
  }
  addCell(cell);
}
