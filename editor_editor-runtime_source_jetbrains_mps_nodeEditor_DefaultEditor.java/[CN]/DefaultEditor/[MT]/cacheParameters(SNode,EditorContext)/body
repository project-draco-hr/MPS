{
  myEditorContext=editorContext;
  mySNode=node;
  myAllSuperConcepts=SConceptUtil.getAllSuperConcepts(node.getConcept(),false);
  String qualifiedName=node.getConcept().getQualifiedName();
  ConceptDescriptor conceptDescriptor=ConceptRegistry.getInstance().getConceptDescriptor(qualifiedName);
  ConceptDescriptor baseConceptDescriptor=ConceptRegistry.getInstance().getConceptDescriptor("jetbrains.mps.lang.core.structure.BaseConcept");
  myPropertyNames=conceptDescriptor.getPropertyNames();
  List<String> basePropertyNames=baseConceptDescriptor.getPropertyNames();
  myPropertyNames.removeAll(basePropertyNames);
  for (  SAbstractConcept concept : myAllSuperConcepts) {
    for (    SLink link : concept.getLinks()) {
      if (link.isReference()) {
        myReferences.add(link);
      }
 else {
        myChildren.add(link);
      }
    }
    for (    SProperty property : concept.getProperties()) {
      myProperties.add(property);
    }
  }
  cacheNameProperty();
}
