{
  myEditorContext=editorContext;
  mySNode=node;
  SConcept concept=node.getConcept();
  String qualifiedName=null;
  if (concept != null) {
    qualifiedName=concept.getQualifiedName();
  }
  myConceptDescriptor=ConceptRegistry.getInstance().getConceptDescriptor(qualifiedName);
  if (concept == null || myConceptDescriptor instanceof IllegalConceptDescriptor) {
    myNullConcept=true;
  }
  ConceptDescriptor baseConceptDescriptor=ConceptRegistry.getInstance().getConceptDescriptor("jetbrains.mps.lang.core.structure.BaseConcept");
  if (!myNullConcept) {
    myPropertyNames=myConceptDescriptor.getPropertyNames();
    myReferencesNames=myConceptDescriptor.getReferenceNames();
    myChildrenNames=myConceptDescriptor.getChildrenNames();
  }
 else {
    for (    String name : mySNode.getPropertyNames()) {
      myPropertyNames.add(name);
    }
    for (    SReference ref : mySNode.getReferences()) {
      myReferencesNames.add(ref.getRole());
    }
    for (    SNode sNode : mySNode.getChildren()) {
      myChildrenNames.add(sNode.getRoleInParent());
    }
  }
  List<String> basePropertyNames=baseConceptDescriptor.getPropertyNames();
  List<String> baseRefNames=baseConceptDescriptor.getReferenceNames();
  List<String> baseChildNames=baseConceptDescriptor.getChildrenNames();
  myPropertyNames.removeAll(basePropertyNames);
  myReferencesNames.removeAll(baseRefNames);
  myChildrenNames.removeAll(baseChildNames);
  cacheNameProperty();
}
