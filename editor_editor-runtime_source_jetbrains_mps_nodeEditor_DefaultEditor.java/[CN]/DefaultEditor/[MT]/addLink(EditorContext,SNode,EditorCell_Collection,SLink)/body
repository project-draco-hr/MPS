{
  EditorCell_Collection collection=EditorCell_Collection.createHorizontal(editorContext,node);
  addIdent(editorContext,node,collection,1);
  String role=link.getRole();
  if (role == null) {
    role="<no role>";
  }
  StringBuilder name=new StringBuilder(role);
  if (link.isMultiple()) {
    name.append('s');
  }
  name.append(':');
  EditorCell_Constant label=new EditorCell_Constant(editorContext,node,name.toString(),false);
  collection.addEditorCell(label);
  EditorCell editorCell;
  if (link.isMultiple()) {
    AbstractCellListHandler handler=new ListHandler(node,role,editorContext);
    editorCell=handler.createCells(editorContext,new CellLayout_Vertical(),false);
    editorCell.setRole(handler.getElementRole());
  }
 else {
    CellProviderWithRole provider;
    if (link.isReference()) {
      provider=new RefCellCellProvider(node,editorContext);
      provider.setAuxiliaryCellProvider(new MyAbstractCellProvider());
    }
 else {
      provider=new RefNodeCellProvider(node,editorContext);
    }
    provider.setRole(role);
    provider.setNoTargetText("<no " + role + ">");
    editorCell=provider.createEditorCell(editorContext);
    editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
  }
  collection.addEditorCell(editorCell);
  cellCollection.addEditorCell(collection);
}
