{
  for (  SAbstractConcept concept : myAllSuperConcepts) {
    for (    SLink link : concept.getLinks()) {
      EditorCell_Collection collection=EditorCell_Collection.createHorizontal(editorContext,node);
      collection.addEditorCell(new EditorCell_Indent(editorContext,node));
      collection.addEditorCell(new EditorCell_Indent(editorContext,node));
      String role=link.getRole();
      if (role == null) {
        role="<no role>";
      }
      StringBuffer name=new StringBuffer(role);
      if (link.isMultiple()) {
        name.append('s');
      }
      name.append(':');
      EditorCell constant=new EditorCell_Constant(editorContext,node,name.toString(),false);
      collection.addEditorCell(constant);
      EditorCell editorCell;
      if (link.isMultiple()) {
        AbstractCellListHandler handler=new annotationListHandler(node,role,editorContext);
        editorCell=handler.createCells(editorContext,new CellLayout_Vertical(),false);
        editorCell.setRole(handler.getElementRole());
      }
 else {
        CellProviderWithRole provider=new RefNodeCellProvider(node,editorContext);
        provider.setRole(role);
        provider.setNoTargetText("<no " + role + ">");
        editorCell=provider.createEditorCell(editorContext);
        editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
      }
      collection.addEditorCell(editorCell);
      cellCollection.addEditorCell(collection);
    }
  }
}
