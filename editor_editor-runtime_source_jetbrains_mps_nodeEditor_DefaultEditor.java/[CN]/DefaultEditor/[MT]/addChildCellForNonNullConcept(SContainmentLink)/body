{
  if (link.isMultiple()) {
  }
 else {
    Iterator<? extends SNode> childIterator=mySNode.getChildren().iterator();
    SNode child=childIterator.hasNext() ? childIterator.next() : null;
    if (child == null) {
      String noTargetText="<no " + link.getRoleName() + ">";
      jetbrains.mps.nodeEditor.cells.EditorCell_Label noRefCell=link.isOptional() ? new EditorCell_Constant(myEditorContext,mySNode,"") : new EditorCell_Error(myEditorContext,mySNode,noTargetText);
      noRefCell.setText("");
      noRefCell.setEditable(true);
      noRefCell.setDefaultText(noTargetText);
      noRefCell.setAction(CellActionType.DELETE,new CellAction_DeleteEasily(mySNode));
      noRefCell.setAction(CellActionType.BACKSPACE,new CellAction_DeleteEasily(mySNode));
      noRefCell.setAction(CellActionType.INSERT,new CellAction_Insert(mySNode,link.getRoleName()));
      noRefCell.setAction(CellActionType.INSERT_BEFORE,new CellAction_Insert(mySNode,link.getRoleName()));
      noRefCell.setCellId("empty_" + link.getRoleName());
      noRefCell.setRole(link.getRoleName());
      noRefCell.setSubstituteInfo(new DefaultContainmentSubstituteInfo(mySNode,link,myEditorContext));
      setIndent(noRefCell);
      addCell(noRefCell);
    }
 else {
      EditorCell editorCell=myEditorContext.getEditorComponent().getUpdater().getCurrentUpdateSession().updateChildNodeCell(child);
      setIndent(editorCell);
      editorCell.setAction(CellActionType.DELETE,new CellAction_DeleteSmart(mySNode,link.getDeclarationNode(),child));
      editorCell.setAction(CellActionType.BACKSPACE,new CellAction_DeleteSmart(mySNode,link.getDeclarationNode(),child));
      editorCell.setSubstituteInfo(new DefaultContainmentSubstituteInfo(mySNode,child,link,myEditorContext));
      addCell(editorCell);
    }
  }
  addNewLine();
}
