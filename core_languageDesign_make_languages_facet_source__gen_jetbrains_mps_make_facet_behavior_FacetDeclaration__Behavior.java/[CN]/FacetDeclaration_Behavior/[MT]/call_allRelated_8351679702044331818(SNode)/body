{
  Set<SNode> result=SetSequence.fromSet(new LinkedHashSet<SNode>());
  Queue<SNode> queue=QueueSequence.fromQueueAndArray(new LinkedList<SNode>(),thisNode);
  while (QueueSequence.fromQueue(queue).isNotEmpty()) {
    SNode fd=QueueSequence.fromQueue(queue).removeFirstElement();
    if (!(SetSequence.fromSet(result).contains(fd))) {
      SetSequence.fromSet(result).addElement(fd);
      QueueSequence.fromQueue(queue).addSequence(ListSequence.fromList(SLinkOperations.getTargets(fd,"required",true)).select(new ISelector<SNode,SNode>(){
        public SNode select(        SNode it){
          return SLinkOperations.getTarget(it,"facet",false);
        }
      }
));
      QueueSequence.fromQueue(queue).addSequence(ListSequence.fromList(SLinkOperations.getTargets(fd,"optional",true)).select(new ISelector<SNode,SNode>(){
        public SNode select(        SNode it){
          return SLinkOperations.getTarget(it,"facet",false);
        }
      }
));
    }
  }
  return result;
}
