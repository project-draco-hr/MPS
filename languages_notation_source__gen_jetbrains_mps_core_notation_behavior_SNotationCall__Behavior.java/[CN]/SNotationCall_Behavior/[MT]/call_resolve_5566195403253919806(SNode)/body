{
  final NotationContext context=SNotationContextProvider_Behavior.call_getContext_8632884680339357870(thisNode);
  if (context == null) {
    return null;
  }
  Scope lscope=Scope.getScope(thisNode,null,SConceptOperations.findConceptDeclaration("jetbrains.mps.core.notation.structure.SNotation"));
  Iterable<SNode> result=Sequence.fromIterable(lscope.getAvailableElements(null)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.core.notation.structure.SNotation") && SNotationContext_Behavior.call_isApplicable_5566195403253848024(SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.core.notation.structure.SNotation"),"context",true),context);
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return eq_8mrnxb_a0a0a0a0a0a0d0b(SPropertyOperations.getString(SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.core.notation.structure.SNotation"),"context",true),"id"),SPropertyOperations.getString(thisNode,"id"));
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(it,"jetbrains.mps.core.notation.structure.SNotation");
    }
  }
);
  if (SNodeOperations.isInstanceOf(context.getNode(),"jetbrains.mps.core.structure.structure.SAbstractConcept")) {
    SNode concept=SNodeOperations.cast(context.getNode(),"jetbrains.mps.core.structure.structure.SAbstractConcept");
    final SNode nearestConcept=ConceptUtil.getNearestConcept(concept,Sequence.fromIterable(result).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it,"context",true),"jetbrains.mps.core.notation.structure.SNotationConceptContext");
      }
    }
).select(new ISelector<SNode,SNode>(){
      public SNode select(      SNode it){
        return SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(it,"context",true),"jetbrains.mps.core.notation.structure.SNotationConceptContext"),"element",false);
      }
    }
));
    SNode prioNode=Sequence.fromIterable(result).findFirst(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it,"context",true),"jetbrains.mps.core.notation.structure.SNotationConceptContext") && SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(it,"context",true),"jetbrains.mps.core.notation.structure.SNotationConceptContext"),"element",false) == nearestConcept;
      }
    }
);
    if (prioNode != null) {
      return prioNode;
    }
  }
  return Sequence.fromIterable(result).first();
}
