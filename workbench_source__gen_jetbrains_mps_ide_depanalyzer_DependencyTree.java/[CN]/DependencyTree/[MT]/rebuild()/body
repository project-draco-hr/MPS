{
  SetSequence.fromSet(myCycles).clear();
  if (myModules == null || ListSequence.fromList(myModules).isEmpty()) {
    return new TextMPSTreeNode("No Content",null);
  }
  SetSequence.fromSet(myCycles).addSequence(ListSequence.fromList(myModules).translate(new ITranslator2<IModule,Tuples._2<DependencyUtil.Role,IModule>>(){
    public Iterable<Tuples._2<DependencyUtil.Role,IModule>> translate(    IModule it){
      return DependencyUtil.getLoops(DependencyUtil.Role.None,it,isShowRuntime());
    }
  }
));
  ModuleDependencyNode root=new ModuleDependencyNode(myModules,null);
  if (SetSequence.fromSet(myCycles).select(new ISelector<Tuples._2<DependencyUtil.Role,IModule>,IModule>(){
    public IModule select(    Tuples._2<DependencyUtil.Role,IModule> it){
      return it._1();
    }
  }
).intersect(ListSequence.fromList(myModules)).isNotEmpty()) {
    root.setCyclic();
  }
  expandRoot();
  return root;
}
