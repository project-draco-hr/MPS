{
  myLocation=new StubLocation(path,prefix,module);
  SModelRepository repository=SModelRepository.getInstance();
  stub:   for (  SModelDescriptor descriptor : getModelDescriptors(myLocation)) {
    if (repository.getModelDescriptor(descriptor.getSModelReference()) == null) {
      repository.registerModelDescriptor(descriptor,module);
      if (repository.getOwners(descriptor).size() > 1) {
        LOG.warning("Loading the same java_stub package twice : " + descriptor.getLongName() + " from "+ repository.getOwners(descriptor));
      }
    }
 else {
      if (descriptor instanceof BaseSModelDescriptor) {
        ((BaseSModelDescriptor)descriptor).setModelRootManager(this);
      }
      if (!descriptor.isInitialized()) {
        if (!myDescriptorsWithListener.contains(descriptor)) {
          descriptor.addModelListener(myInitializationListener);
          myDescriptorsWithListener.add(descriptor);
        }
      }
 else {
        if (descriptor instanceof BaseStubModelDescriptor) {
          for (          StubPath notChanged : notChangedStubs) {
            if (StubPath.equalStubPaths(notChanged,((BaseStubModelDescriptor)descriptor).getSp())) {
              continue stub;
            }
          }
        }
        updateModelInLoadingState(descriptor,descriptor.getSModel());
      }
    }
  }
}
