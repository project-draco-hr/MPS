{
  List<SReference> referencesToSort=new ArrayList<SReference>(references);
  Collections.sort(referencesToSort,new Comparator<SReference>(){
    public int compare(    SReference o1,    SReference o2){
      SNode node1=o1.getSourceNode();
      SNode node2=o2.getSourceNode();
      if (node1.isAncestorOf(node2))       return 1;
      if (node2.isAncestorOf(node1))       return -1;
      return 0;
    }
  }
);
  while (true) {
    int size=referencesToSort.size();
    for (    SReference reference : new ArrayList<SReference>(referencesToSort)) {
      boolean resolved=resolve1(reference,operationContext);
      if (resolved) {
        referencesToSort.remove(reference);
      }
    }
    if (size <= referencesToSort.size()) {
      break;
    }
  }
  return referencesToSort;
}
