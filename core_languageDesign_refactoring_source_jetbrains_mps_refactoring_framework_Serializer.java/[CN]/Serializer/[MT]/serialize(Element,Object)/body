{
  if (value instanceof String) {
    element.setAttribute(OBJECT_TYPE,STRING);
    element.setAttribute(STRING_VALUE,(String)value);
    return;
  }
  if (value instanceof SNode) {
    element.setAttribute(OBJECT_TYPE,SNODE);
    FullNodeId fullNodeId=new FullNodeId((SNode)value);
    fullNodeId.toElement(element);
    return;
  }
  if (value instanceof SModel) {
    element.setAttribute(OBJECT_TYPE,SMODEL);
    element.setAttribute(MODEL_UID,((SModel)value).toString());
    return;
  }
  if (value instanceof SModelDescriptor) {
    element.setAttribute(OBJECT_TYPE,SMODEL_DESCRIPTOR);
    element.setAttribute(MODEL_UID,((SModelDescriptor)value).toString());
    return;
  }
  if (value instanceof ISerializable) {
    element.setAttribute(OBJECT_TYPE,ISERIALIZABLE);
    element.setAttribute(CLASS_NAME,value.getClass().getName());
    ((ISerializable)value).toElement(element);
    return;
  }
  if (value instanceof Collection) {
    element.setAttribute(OBJECT_TYPE,COLLECTION);
    element.setAttribute(CLASS_NAME,value.getClass().getName());
    for (    Object o : (Collection)value) {
      Element childElement=new Element(ITEM);
      serialize(childElement,o);
      element.addContent(childElement);
    }
  }
{
    element.setAttribute(OBJECT_TYPE,DEFAULT);
    Element child=new Element(XSTREAM_VALUE);
    XStream xStream=new XStream();
    JDomWriter writer=new JDomWriter(child);
    xStream.marshal(value,writer);
    element.setContent(child);
  }
}
