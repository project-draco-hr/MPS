{
  String objectType=element.getAttributeValue(OBJECT_TYPE);
  if (STRING.equals(objectType)) {
    return element.getAttributeValue(STRING_VALUE);
  }
  if (SNODE.equals(OBJECT_TYPE)) {
    FullNodeId fullNodeId=new FullNodeId(element);
    return fullNodeId.getNode();
  }
  if (SMODEL_DESCRIPTOR.equals(OBJECT_TYPE)) {
    return SModelRepository.getInstance().getModelDescriptor(SModelUID.fromString(element.getAttributeValue(MODEL_UID)));
  }
  if (SMODEL.equals(OBJECT_TYPE)) {
    SModelDescriptor modelDescriptor=SModelRepository.getInstance().getModelDescriptor(SModelUID.fromString(element.getAttributeValue(MODEL_UID)));
    if (modelDescriptor == null) {
      return null;
    }
    return modelDescriptor.getSModel();
  }
  if (ISERIALIZABLE.equals(OBJECT_TYPE)) {
    String className=element.getAttributeValue(CLASS_NAME);
    try {
      Class<ISerializable> c=(Class<ISerializable>)Class.forName(className);
    }
 catch (    Throwable t) {
      LOG.error(t);
    }
  }
  if (DEFAULT.equals(OBJECT_TYPE)) {
    Element child=element.getChild(XSTREAM_VALUE);
    XStream xStream=new XStream();
    JDomReader reader=new JDomReader(child);
    return xStream.unmarshal(reader);
  }
  return null;
}
