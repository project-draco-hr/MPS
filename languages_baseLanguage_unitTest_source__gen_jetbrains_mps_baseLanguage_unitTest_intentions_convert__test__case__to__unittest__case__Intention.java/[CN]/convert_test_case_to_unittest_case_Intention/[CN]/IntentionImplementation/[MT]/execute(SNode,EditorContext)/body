{
  SNode testCase=SNodeFactoryOperations.replaceWithNewChild(node,"jetbrains.mps.baseLanguage.unitTest.structure.BTestCase");
  SPropertyOperations.set(testCase,"name",SPropertyOperations.getString(node,"name"));
  SPropertyOperations.set(testCase,"testCaseName",SPropertyOperations.getString(node,"name"));
  if ((SLinkOperations.getTarget(node,"superclass",true) != null) && SLinkOperations.getTarget(SLinkOperations.getTarget(node,"superclass",true),"classifier",false) != SLinkOperations.getTarget(_quotation_createNode_g240td_a0a0d0a(),"classifier",false)) {
    SLinkOperations.setTarget(SLinkOperations.getTarget(testCase,"superclass",true),"classifier",SLinkOperations.getTarget(SLinkOperations.getTarget(node,"superclass",true),"classifier",false),false);
  }
  for (  SNode m : Sequence.fromIterable(Classifier_Behavior.call_methods_5292274854859311639(node))) {
    if (SPropertyOperations.getString(m,"name").startsWith("test")) {
      ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(testCase,"testMethodList",true),"testMethod",true)).addElement(_quotation_createNode_g240td_a0a0a0a4a0(SNodeOperations.detachNode(SLinkOperations.getTarget(m,"body",true)),SPropertyOperations.getString(m,"name").substring("test".length())));
    }
 else {
      ListSequence.fromList(SLinkOperations.getTargets(testCase,"member",true)).addElement(SNodeOperations.detachNode(m));
    }
  }
  for (  SNode f : Sequence.fromIterable(Classifier_Behavior.call_staticFields_5292274854859223538(node))) {
    ListSequence.fromList(SLinkOperations.getTargets(testCase,"member",true)).addElement(SNodeOperations.detachNode(f));
  }
}
