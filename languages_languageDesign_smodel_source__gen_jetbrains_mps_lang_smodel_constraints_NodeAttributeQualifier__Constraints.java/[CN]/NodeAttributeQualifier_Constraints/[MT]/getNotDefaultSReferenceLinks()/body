{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(8675788371017092295l,-9098312342032910879l),6407023681583036853l,6407023681583036854l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(8675788371017092295l,-9098312342032910879l),6407023681583036853l,6407023681583036854l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public boolean hasPresentation(){
          return true;
        }
        @Override public String getPresentation(        final IOperationContext operationContext,        final ReferencePresentationContext _context){
          try {
            String role=AttributeDesignTimeOperations.getAttributeRole(_context.getParameterNode());
            if (role != null) {
              return role;
            }
          }
 catch (          Exception ex) {
          }
          return SPropertyOperations.getString(_context.getParameterNode(),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"));
        }
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return AttributeDesignTimeOperations.getApplicableAttributes(SNodeOperations.as(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(new UUID(8675788371017092295l,-9098312342032910879l),6407023681583031218l,"jetbrains.mps.lang.smodel.structure.AttributeAccess")),SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)","3364660638048049748"));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_40vqv7_a0a3a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
