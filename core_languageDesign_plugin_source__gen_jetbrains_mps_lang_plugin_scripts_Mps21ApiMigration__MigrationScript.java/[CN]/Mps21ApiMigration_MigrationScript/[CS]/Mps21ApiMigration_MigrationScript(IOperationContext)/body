{
  super("API Migration");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MacrosUtil.expandPath()";
    }
    public String getAdditionalInfo(){
      return "MacrosUtil.expandPath()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isStaticMethodCall(node,"jetbrains.mps.plugins.MacrosUtil.expandPath(java.lang.String,java.lang.String):java.lang.String");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a1a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "IOperationContext.getProject()";
    }
    public String getAdditionalInfo(){
      return "IOperationContext.getProject()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.DotExpression";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"jetbrains.mps.smodel.IOperationContext.getProject():com.intellij.openapi.project.Project");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceNode(node,new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a2a0().createNode(SLinkOperations.getTarget(node,"operand",true)));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "IOperationContext.getMainFrame()";
    }
    public String getAdditionalInfo(){
      return "IOperationContext.getMainFrame()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.DotExpression";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"jetbrains.mps.smodel.IOperationContext.getMainFrame():java.awt.Frame");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceNode(node,new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a3a0().createNode(SLinkOperations.getTarget(node,"operand",true)));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ModelCommandExecutor.runWriteActionWithProgressSynchronously()";
    }
    public String getAdditionalInfo(){
      return "ModelCommandExecutor.runWriteActionWithProgressSynchronously()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.smodel.ModelCommandExecutor.runWriteActionWithProgressSynchronously(com.intellij.openapi.progress.Progressive,java.lang.String,boolean,com.intellij.openapi.project.Project):void");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceNode(node,SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0e0a().createNode(ListSequence.fromList(SLinkOperations.getTargets(node,"actualArgument",true)).getElement(0),ListSequence.fromList(SLinkOperations.getTargets(node,"actualArgument",true)).getElement(1),ListSequence.fromList(SLinkOperations.getTargets(node,"actualArgument",true)).getElement(1),ListSequence.fromList(SLinkOperations.getTargets(node,"actualArgument",true)).getElement(1),ListSequence.fromList(SLinkOperations.getTargets(node,"actualArgument",true)).getElement(2),ListSequence.fromList(SLinkOperations.getTargets(node,"actualArgument",true)).getElement(3)),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "FindUsagesManager.findUsages()";
    }
    public String getAdditionalInfo(){
      return "FindUsagesManager.findUsages()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.findUsages.FindUsagesManager.findUsages(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IScope,jetbrains.mps.ide.progress.IAdaptiveProgressMonitor):java.util.Set");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0f0a().createNode(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "FindUsagesManager.findUsages()";
    }
    public String getAdditionalInfo(){
      return "FindUsagesManager.findUsages()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.findUsages.FindUsagesManager.findUsages(java.util.Set,jetbrains.mps.smodel.IScope,jetbrains.mps.ide.progress.IAdaptiveProgressMonitor,boolean):java.util.Set");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0g0a().createNode(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "FindUsagesManager.ProgressAdapter";
    }
    public String getAdditionalInfo(){
      return "FindUsagesManager.ProgressAdapter";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isClassCreator(node,"jetbrains.mps.findUsages.FindUsagesManager$ProgressAdapter.<init>(com.intellij.openapi.progress.ProgressIndicator)");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a7a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "AbstractModule.getDependOn()";
    }
    public String getAdditionalInfo(){
      return "AbstractModule.getDependOn()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.project.AbstractModule.getDependOn():java.util.List");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceNode(node,SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0i0a().createNode(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ParenthesisUtil.rotateTree()";
    }
    public String getAdditionalInfo(){
      return "ParenthesisUtil.rotateTree()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isStaticMethodCall(node,SModelReference.fromString("r:00000000-0000-4000-0000-011c895902c8(jetbrains.mps.baseLanguage.plugin)"),"155142699038773182","155142699038773979");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a9a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ParenthesisUtil.isBadPriority()";
    }
    public String getAdditionalInfo(){
      return "ParenthesisUtil.isBadPriority()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isStaticMethodCall(node,SModelReference.fromString("r:00000000-0000-4000-0000-011c895902c8(jetbrains.mps.baseLanguage.plugin)"),"155142699038773182","155142699038774033");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a01a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
