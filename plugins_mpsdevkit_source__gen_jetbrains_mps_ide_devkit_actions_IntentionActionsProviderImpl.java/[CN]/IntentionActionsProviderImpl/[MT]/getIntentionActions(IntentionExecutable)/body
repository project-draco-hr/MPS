{
  Icon icon=intention.getDescriptor().getType().getIcon();
  AnAction[] actions={new BaseAction("Go to Intention Declaration","Go to declaration of this intention",icon){
    @Override protected void doExecute(    AnActionEvent e,    Map<String,Object> params){
      final Project mpsProject=e.getData(MPSCommonDataKeys.MPS_PROJECT);
      mpsProject.getModelAccess().runWriteInEDT(new Runnable(){
        public void run(){
          SNodeReference nodeRef=intention.getDescriptor().getIntentionNodeReference();
          SNode intentionNode=(nodeRef == null ? null : nodeRef.resolve(mpsProject.getRepository()));
          if (intentionNode == null) {
            Messages.showErrorDialog(ProjectHelper.toIdeaProject(mpsProject),String.format("Could not find declaration for %s intention (%s)",intention.getClass().getSimpleName(),intention.getClass().getName()),"Intention Declaration");
          }
 else {
            NavigationSupport.getInstance().openNode(mpsProject,intentionNode,true,true);
            NavigationSupport.getInstance().selectInTree(mpsProject,intentionNode,false);
          }
        }
      }
);
    }
  }
,new BaseAction("Disable This Intention","Disables this intention type",icon){
    @Override protected void doExecute(    AnActionEvent e,    Map<String,Object> params){
      IntentionsManager.getInstance().disableIntention(intention.getDescriptor().getPersistentStateKey());
    }
  }
};
  return actions;
}
