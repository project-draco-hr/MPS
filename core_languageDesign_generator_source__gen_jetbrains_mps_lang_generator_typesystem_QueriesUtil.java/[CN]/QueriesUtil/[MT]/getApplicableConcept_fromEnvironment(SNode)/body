{
  SNode ancestor=SNodeOperations.getAncestorWhereConceptInList(node,new String[]{"jetbrains.mps.lang.generator.structure.TemplateDeclaration","jetbrains.mps.lang.generator.structure.BaseMappingRule","jetbrains.mps.lang.generator.structure.PatternReduction_MappingRule"},false,false);
  if (SNodeOperations.isInstanceOf(ancestor,"jetbrains.mps.lang.generator.structure.TemplateDeclaration")) {
    return SLinkOperations.getTarget(SNodeOperations.cast(ancestor,"jetbrains.mps.lang.generator.structure.TemplateDeclaration"),"applicableConcept",false);
  }
  if (SNodeOperations.isInstanceOf(ancestor,"jetbrains.mps.lang.generator.structure.PatternReduction_MappingRule")) {
    return PatternReduction_MappingRule_Behavior.call_getConcept_1805153994417064763(SNodeOperations.cast(ancestor,"jetbrains.mps.lang.generator.structure.PatternReduction_MappingRule"));
  }
  if (SNodeOperations.isInstanceOf(ancestor,"jetbrains.mps.lang.generator.structure.BaseMappingRule")) {
    return SLinkOperations.getTarget(SNodeOperations.cast(ancestor,"jetbrains.mps.lang.generator.structure.BaseMappingRule"),"applicableConcept",false);
  }
  SNode rootAnnotation=SLinkOperations.getTarget(SNodeOperations.getContainingRoot(node),AttributesRolesUtil.childRoleFromAttributeRole("rootTemplateAnnotation"),true);
  return SLinkOperations.getTarget(SNodeOperations.cast(rootAnnotation,"jetbrains.mps.lang.generator.structure.RootTemplateAnnotation"),"applicableConcept",false);
}
