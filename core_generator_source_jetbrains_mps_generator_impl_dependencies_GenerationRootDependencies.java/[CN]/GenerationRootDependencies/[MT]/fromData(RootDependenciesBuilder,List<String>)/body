{
  final Collection<SNode> localNodes=l.getDependsOn();
  final Collection<SModelDescriptor> externalModels=l.getDependsOnModels();
  List<String> local=new ArrayList<String>(localNodes.size());
  for (  SNode n : localNodes) {
    local.add(n.getNodeId().toString());
  }
  Collections.sort(local);
  List<String> external=new ArrayList<String>(externalModels.size());
  for (  SModelDescriptor m : externalModels) {
    final SModelReference modelRef=m.getReference();
    if (modelRef == null) {
      continue;
    }
    external.add(modelRef.toString());
  }
  Collections.sort(external);
  Collections.sort(generatedFiles);
  final SNode originalRoot=l.getOriginalRoot();
  return new GenerationRootDependencies(originalRoot != null ? originalRoot.getNodeId().toString() : null,originalRoot != null ? originalRoot.getName() : null,l.getHash(),l.isDependsOnConditionals(),l.isDependsOnModelNodes(),local,external,generatedFiles);
}
