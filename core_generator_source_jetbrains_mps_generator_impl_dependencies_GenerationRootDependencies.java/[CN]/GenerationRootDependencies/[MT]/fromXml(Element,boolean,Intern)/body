{
  String rootId=isCommon ? null : intern.value(getValue(element,ATTR_ID));
  String rootName=getValue(element,ATTR_NAME);
  String rootHash=getValue(element,ATTR_HASH);
  boolean dependsOnConditionals="true".equals(getValue(element,ATTR_DEPENDS_ON_CONDITIONALS));
  boolean dependsOnNodes="true".equals(getValue(element,ATTR_DEPENDS_ON_NODES));
  ArrayList<String> local=new ArrayList<String>();
  ArrayList<String> external=new ArrayList<String>();
  ArrayList<String> files=new ArrayList<String>();
  for (  Element e : element.getChildren(NODE_DEPENDS_ON)) {
    Attribute attr=e.getAttribute(ATTR_ROOT_ID);
    if (attr != null) {
      local.add(intern.value(attr.getValue()));
    }
 else     if ((attr=e.getAttribute(ATTR_MODEL_ID)) != null) {
      external.add(intern.value(attr.getValue()));
    }
  }
  for (  Element e : element.getChildren(NODE_FILE)) {
    String v=getValue(e,ATTR_NAME);
    if (v != null) {
      files.add(intern.value(v));
    }
  }
  local.trimToSize();
  external.trimToSize();
  files.trimToSize();
  return new GenerationRootDependencies(rootId,rootName,rootHash,dependsOnConditionals,dependsOnNodes,local,external,files);
}
