{
  final String resolveInfo=getResolveInfo(reference,sourceNode);
  if (resolveInfo == null) {
    return null;
  }
  final EditorResolver.FakeEditorComponent fakeEditor=new EditorResolver.FakeEditorComponent(SNodeOperations.getContainingRoot(sourceNode),operationContext);
  EditorCell cellWithRole=fakeEditor.findNodeCellWithRole(sourceNode,reference.getRole());
  if (cellWithRole == null) {
    return null;
  }
  NodeSubstituteInfo substituteInfo=cellWithRole.getSubstituteInfo();
  final INodeSubstituteAction applicableSubstituteAction=getApplicableSubstituteAction(substituteInfo,resolveInfo);
  if (applicableSubstituteAction != null) {
    return new AbstractResolveResult(sourceNode,reference.getRole()){
      @Override public void setTarget(){
        applicableSubstituteAction.substitute(fakeEditor.getEditorContext(),resolveInfo);
        fakeEditor.dispose();
      }
      public boolean isNewTargetFromSameModel(      @NotNull SModelReference reference){
        return true;
      }
    }
;
  }
  return null;
}
