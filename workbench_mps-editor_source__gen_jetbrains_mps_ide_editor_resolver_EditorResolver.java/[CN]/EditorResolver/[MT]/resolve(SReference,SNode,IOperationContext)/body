{
  final String resolveInfo=getResolveInfo(reference,sourceNode);
  if (resolveInfo == null) {
    return false;
  }
  final EditorResolver.FakeEditorComponent fakeEditor=new EditorResolver.FakeEditorComponent(SNodeOperations.getContainingRoot(sourceNode),operationContext.getProject());
  try {
    EditorCell cellWithRole=fakeEditor.findNodeCellWithRole(sourceNode,reference.getRole());
    if (cellWithRole == null) {
      return false;
    }
    SubstituteInfo substituteInfo=cellWithRole.getSubstituteInfo();
    if (substituteInfo == null) {
      return false;
    }
    final SubstituteAction applicableSubstituteAction=getApplicableSubstituteAction(substituteInfo,resolveInfo);
    if (applicableSubstituteAction == null) {
      return false;
    }
    applicableSubstituteAction.substitute(fakeEditor.getEditorContext(),resolveInfo);
  }
  finally {
    fakeEditor.dispose();
  }
  return true;
}
