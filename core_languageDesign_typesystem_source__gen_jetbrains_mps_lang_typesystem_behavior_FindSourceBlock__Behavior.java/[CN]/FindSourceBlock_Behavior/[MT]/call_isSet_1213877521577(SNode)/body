{
  Iterable<SNode> returnStatements=RulesFunctions_BaseLanguage.collectReturnStatements(thisNode);
  SNode lastStatement=ListSequence.<SNode>fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(thisNode,"body",true),"statement",true)).last();
  Set<SNode> expressions=SetSequence.<SNode>fromSet(new HashSet<SNode>());
  for (  SNode returnStatement : returnStatements) {
    SetSequence.fromSet(expressions).addElement(SLinkOperations.getTarget(returnStatement,"expression",true));
  }
  if (SNodeOperations.isInstanceOf(lastStatement,"jetbrains.mps.baseLanguage.structure.ExpressionStatement")) {
    SetSequence.fromSet(expressions).addElement(SLinkOperations.getTarget(SNodeOperations.cast(lastStatement,"jetbrains.mps.baseLanguage.structure.ExpressionStatement"),"expression",true));
  }
  for (  SNode expr : expressions) {
    SNode type=TypeChecker.getInstance().getTypeOf(expr);
    if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type,new FindSourceBlock_Behavior.QuotationClass_1go9bg_a1a0a1a5a2().createNode()) && !(SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.NullType"))) {
      return true;
    }
  }
  return false;
}
