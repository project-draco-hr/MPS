{
{
    final SNode t=subtype;
    typeCheckingContext.whenConcrete(t,new Runnable(){
      public void run(){
{
          _Patterns.Pattern_9 pattern_1=new _Patterns.Pattern_9(SLinkOperations.getTarget(supertype,"classifier",false));
          SNode coercedNode_1=TypeChecker.getInstance().getRuntimeSupport().coerce_(typeCheckingContext.getEquationManager().getRepresentator(t),pattern_1,typeCheckingContext);
          if (coercedNode_1 != null) {
{
              SNode typeParam;
              SNode myParam;
              Iterator<SNode> typeParam_iterator=ListSequence.fromList(SLinkOperations.getTargets(coercedNode_1,"parameter",true)).iterator();
              Iterator<SNode> myParam_iterator=ListSequence.fromList(SLinkOperations.getTargets(supertype,"parameter",true)).iterator();
              while (true) {
                if (!(typeParam_iterator.hasNext())) {
                  break;
                }
                if (!(myParam_iterator.hasNext())) {
                  break;
                }
                typeParam=typeParam_iterator.next();
                myParam=myParam_iterator.next();
{
                  final SNode finalTypeParam=typeParam;
{
                    SNode _nodeToCheck_1029348928467=equationInfo.getNodeWithError();
                    BaseIntentionProvider intentionProvider=null;
                    EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1220535076789",0,intentionProvider);
                    _info_12389875345.pushOuterRuleId((equationInfo).getRuleModel(),(equationInfo).getRuleId());
                    _info_12389875345.setInequationGroup("default");
                    typeCheckingContext.createLessThanInequation((SNode)finalTypeParam,(SNode)myParam,false,_info_12389875345);
                  }
{
                    final SNode concreteParam=myParam;
                    typeCheckingContext.whenConcrete(concreteParam,new Runnable(){
                      public void run(){
                        if (!(SNodeOperations.isInstanceOf(typeCheckingContext.getEquationManager().getRepresentator(concreteParam),"jetbrains.mps.baseLanguage.structure.WildCardType") || SNodeOperations.isInstanceOf(typeCheckingContext.getEquationManager().getRepresentator(concreteParam),"jetbrains.mps.baseLanguage.structure.UpperBoundType"))) {
{
                            SNode _nodeToCheck_1029348928467=equationInfo.getNodeWithError();
                            BaseIntentionProvider intentionProvider=null;
                            EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1220523357903",0,intentionProvider);
                            _info_12389875345.pushOuterRuleId((equationInfo).getRuleModel(),(equationInfo).getRuleId());
                            typeCheckingContext.createEquation((SNode)finalTypeParam,(SNode)typeCheckingContext.getEquationManager().getRepresentator(concreteParam),_info_12389875345);
                          }
                        }
                      }
                    }
,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1220523357880",false,false);
                  }
                }
              }
            }
          }
 else {
            SNode nodeWithError=equationInfo.getNodeWithError();
            SNode methodCall=null;
            if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(nodeWithError),"jetbrains.mps.baseLanguage.structure.IMethodCall")) {
              methodCall=SNodeOperations.cast(SNodeOperations.getParent(nodeWithError),"jetbrains.mps.baseLanguage.structure.IMethodCall");
            }
 else             if (SNodeOperations.isInstanceOf(nodeWithError,"jetbrains.mps.baseLanguage.structure.IMethodCall")) {
              methodCall=SNodeOperations.cast(nodeWithError,"jetbrains.mps.baseLanguage.structure.IMethodCall");
            }
            if (methodCall != null) {
{
                BaseIntentionProvider intentionProvider=null;
                IErrorTarget errorTarget=new NodeErrorTarget();
                IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(nodeWithError,BaseConcept_Behavior.call_getPresentation_1213877396640(subtype) + " is not a subtype of " + BaseConcept_Behavior.call_getPresentation_1213877396640(supertype),"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1227259028675",intentionProvider,errorTarget);
                _reporter_2309309498.addAdditionalRuleId((equationInfo).getRuleModel(),(equationInfo).getRuleId());
              }
            }
 else {
{
                BaseIntentionProvider intentionProvider=null;
                IErrorTarget errorTarget=new NodeErrorTarget();
                IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(nodeWithError,BaseConcept_Behavior.call_getPresentation_1213877396640(subtype) + " is not a subtype of " + BaseConcept_Behavior.call_getPresentation_1213877396640(supertype),"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1220523357915",intentionProvider,errorTarget);
                _reporter_2309309498.addAdditionalRuleId((equationInfo).getRuleModel(),(equationInfo).getRuleId());
              }
            }
          }
        }
      }
    }
,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1220523357849",false,true);
  }
}
