{
  boolean result_14532009=true;
{
    final SNode t=subtype;
{
      GeneratedMatchingPattern pattern_a0a0=new subtypesOfClassifierTypeWWildcards_InequationReplacementRule.Pattern_1s2zdh_a0a0a0a0a1a2(SLinkOperations.getTarget(supertype,"classifier",false));
      SNode coercedNode_a0a0=TypeChecker.getInstance().getRuntimeSupport().coerce_(t,pattern_a0a0,inequalityIsWeak);
      if (coercedNode_a0a0 != null) {
        Iterator<SNode> typeParam_it=ListSequence.fromList(SLinkOperations.getTargets(coercedNode_a0a0,"parameter",true)).iterator();
        Iterator<SNode> myParam_it=ListSequence.fromList(SLinkOperations.getTargets(supertype,"parameter",true)).iterator();
        SNode typeParam_var;
        SNode myParam_var;
        while (typeParam_it.hasNext() && myParam_it.hasNext()) {
          typeParam_var=typeParam_it.next();
          myParam_var=myParam_it.next();
          final SNode finalTypeParam=typeParam_var;
          result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)finalTypeParam,(SNode)myParam_var,true);
          final SNode finalMyParam=myParam_var;
{
            final SNode concreteParam=finalMyParam;
            if (!(SNodeOperations.isInstanceOf(concreteParam,"jetbrains.mps.baseLanguage.structure.WildCardType") || SNodeOperations.isInstanceOf(concreteParam,"jetbrains.mps.baseLanguage.structure.UpperBoundType") || SNodeOperations.isInstanceOf(concreteParam,"jetbrains.mps.baseLanguage.structure.LowerBoundType"))) {
              result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)concreteParam,(SNode)finalTypeParam,true);
            }
          }
        }
      }
 else {
        SNode nodeWithError=equationInfo.getNodeWithError();
        result_14532009=false;
      }
    }
  }
  return result_14532009;
}
