{
{
    final SNode t=subtype;
    typeCheckingContext.whenConcrete(t,new Runnable(){
      public void run(){
{
          GeneratedMatchingPattern pattern_n8ubly_a0a0=new subtypesOfClassifierTypeWWildcards_InequationReplacementRule.Pattern_1s2zdh_a0a0a0a0a0(SLinkOperations.getTarget(supertype,"classifier",false));
          SNode coercedNode_n8ubly_a0a0=TypeChecker.getInstance().getRuntimeSupport().coerce_(typeCheckingContext.getRepresentative(t),pattern_n8ubly_a0a0,typeCheckingContext);
          if (coercedNode_n8ubly_a0a0 != null) {
{
              SNode typeParam;
              SNode myParam;
              Iterator<SNode> typeParam_iterator=ListSequence.fromList(SLinkOperations.getTargets(coercedNode_n8ubly_a0a0,"parameter",true)).iterator();
              Iterator<SNode> myParam_iterator=ListSequence.fromList(SLinkOperations.getTargets(supertype,"parameter",true)).iterator();
              while (true) {
                if (!(typeParam_iterator.hasNext())) {
                  break;
                }
                if (!(myParam_iterator.hasNext())) {
                  break;
                }
                typeParam=typeParam_iterator.next();
                myParam=myParam_iterator.next();
{
                  final SNode finalTypeParam=typeParam;
{
                    SNode _nodeToCheck_1029348928467=equationInfo.getNodeWithError();
                    EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","6281385834685063550",0,null);
                    _info_12389875345.getOuterRulesIdFromInfo(equationInfo);
                    typeCheckingContext.createGreaterThanInequation((SNode)myParam,(SNode)finalTypeParam,false,_info_12389875345);
                  }
{
                    final SNode concreteParam=myParam;
                    typeCheckingContext.whenConcrete(concreteParam,new Runnable(){
                      public void run(){
                        if (!(SNodeOperations.isInstanceOf(typeCheckingContext.getRepresentative(concreteParam),"jetbrains.mps.baseLanguage.structure.WildCardType") || SNodeOperations.isInstanceOf(typeCheckingContext.getRepresentative(concreteParam),"jetbrains.mps.baseLanguage.structure.UpperBoundType") || SNodeOperations.isInstanceOf(typeCheckingContext.getRepresentative(concreteParam),"jetbrains.mps.baseLanguage.structure.LowerBoundType"))) {
{
                            SNode _nodeToCheck_1029348928467=equationInfo.getNodeWithError();
                            EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1220523357903",0,null);
                            _info_12389875345.getOuterRulesIdFromInfo(equationInfo);
                            typeCheckingContext.createEquation((SNode)finalTypeParam,(SNode)typeCheckingContext.getRepresentative(concreteParam),_info_12389875345);
                          }
                        }
                      }
                    }
,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1220523357880",false,false);
                  }
                }
              }
            }
          }
 else {
            SNode nodeWithError=equationInfo.getNodeWithError();
{
              MessageTarget errorTarget=new NodeMessageTarget();
              IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(nodeWithError,BaseConcept_Behavior.call_getDetailedPresentation_2354269628709769373(subtype) + " is not a subtype of " + BaseConcept_Behavior.call_getDetailedPresentation_2354269628709769373(supertype),"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1227259028675",null,errorTarget);
              HUtil.addAdditionalRuleIdsFromInfo(_reporter_2309309498,equationInfo);
            }
          }
        }
      }
    }
,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1220523357849",false,true);
  }
}
