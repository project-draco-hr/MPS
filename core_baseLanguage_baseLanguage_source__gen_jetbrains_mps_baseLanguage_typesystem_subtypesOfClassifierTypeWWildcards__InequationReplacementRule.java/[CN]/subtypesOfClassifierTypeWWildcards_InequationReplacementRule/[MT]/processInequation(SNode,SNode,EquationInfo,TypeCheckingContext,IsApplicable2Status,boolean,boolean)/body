{
{
    final SNode t=subtype;
    typeCheckingContext.whenConcrete(t,new Runnable(){
      public void run(){
{
          GeneratedMatchingPattern pattern_n8ubly_a0a0=new subtypesOfClassifierTypeWWildcards_InequationReplacementRule.Pattern_1s2zdh_a0a0a0a0a1(SLinkOperations.getTarget(supertype,"classifier",false));
          SNode coercedNode_n8ubly_a0a0=TypeChecker.getInstance().getRuntimeSupport().coerce_(typeCheckingContext.getRepresentative(t),pattern_n8ubly_a0a0,inequalityIsWeak);
          if (coercedNode_n8ubly_a0a0 != null) {
            Iterator<SNode> typeParam_it=ListSequence.fromList(SLinkOperations.getTargets(coercedNode_n8ubly_a0a0,"parameter",true)).iterator();
            Iterator<SNode> myParam_it=ListSequence.fromList(SLinkOperations.getTargets(supertype,"parameter",true)).iterator();
            SNode typeParam_var;
            SNode myParam_var;
            while (typeParam_it.hasNext() && myParam_it.hasNext()) {
              typeParam_var=typeParam_it.next();
              myParam_var=myParam_it.next();
              final SNode finalTypeParam=typeParam_var;
{
                SNode _nodeToCheck_1029348928467=equationInfo.getNodeWithError();
                EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","4186504230211332093",0,null);
                _info_12389875345.getOuterRulesIdFromInfo(equationInfo);
                typeCheckingContext.createGreaterThanInequality((SNode)myParam_var,(SNode)finalTypeParam,false,true,_info_12389875345);
              }
              final SNode finalMyParam=myParam_var;
{
                final SNode concreteParam=finalMyParam;
                typeCheckingContext.whenConcrete(concreteParam,new Runnable(){
                  public void run(){
                    if (!(SNodeOperations.isInstanceOf(typeCheckingContext.getRepresentative(concreteParam),"jetbrains.mps.baseLanguage.structure.WildCardType") || SNodeOperations.isInstanceOf(typeCheckingContext.getRepresentative(concreteParam),"jetbrains.mps.baseLanguage.structure.UpperBoundType") || SNodeOperations.isInstanceOf(typeCheckingContext.getRepresentative(concreteParam),"jetbrains.mps.baseLanguage.structure.LowerBoundType"))) {
{
                        SNode _nodeToCheck_1029348928467=equationInfo.getNodeWithError();
                        EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","4186504230211332124",0,null);
                        _info_12389875345.getOuterRulesIdFromInfo(equationInfo);
                        typeCheckingContext.createGreaterThanInequality((SNode)finalTypeParam,(SNode)typeCheckingContext.getRepresentative(concreteParam),false,true,_info_12389875345);
                      }
                    }
                  }
                }
,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","4186504230211332105",false,false);
              }
            }
          }
 else {
            SNode nodeWithError=equationInfo.getNodeWithError();
{
              MessageTarget errorTarget=new NodeMessageTarget();
              IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(nodeWithError,BaseConcept_Behavior.call_getDetailedPresentation_2354269628709769373(subtype) + " is not a subtype of " + BaseConcept_Behavior.call_getDetailedPresentation_2354269628709769373(supertype),"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1227259028675",null,errorTarget);
              HUtil.addAdditionalRuleIdsFromInfo(_reporter_2309309498,equationInfo);
            }
          }
        }
      }
    }
,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1220523357849",false,true);
  }
}
