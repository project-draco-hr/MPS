{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(-7640176555408995168l,-6458594812920713925l),187226666892683652l,682890046602395482l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(-7640176555408995168l,-6458594812920713925l),187226666892683652l,682890046602395482l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public boolean hasPresentation(){
          return true;
        }
        @Override public String getPresentation(        final IOperationContext operationContext,        final ReferencePresentationContext _context){
          return SPropertyOperations.getString(_context.getParameterNode(),MetaAdapterFactory.getProperty(new UUID(-7640176555408995168l,-6458594812920713925l),187226666892683650l,682890046602602769l,"workName"));
        }
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return SNodeOperations.getNodeDescendants(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(new UUID(-7640176555408995168l,-6458594812920713925l),2360002718792625579l,"jetbrains.mps.make.script.structure.JobDefinition"),false,false),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1137021947720l,1137022507850l,"body")),MetaAdapterFactory.getConcept(new UUID(-7640176555408995168l,-6458594812920713925l),187226666892683650l,"jetbrains.mps.make.script.structure.BeginWorkStatement"),false,new SAbstractConcept[]{});
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_vuepmh_a0a3a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
