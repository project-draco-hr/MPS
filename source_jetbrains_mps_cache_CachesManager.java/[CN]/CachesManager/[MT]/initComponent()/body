{
  SModelRepository.getInstance().addModelRepositoryListener(new SModelRepositoryListener(){
    public void modelRemoved(    SModelDescriptor modelDescriptor){
      List keysToRemove=new ArrayList();
      SModelUID uid=modelDescriptor.getModelUID();
      for (      Object key : myDependsOnModels.keySet()) {
        List<SModelDescriptor> dependsOnModels=myDependsOnModels.get(key);
        for (        SModelDescriptor dependsOnModel : dependsOnModels) {
          if (dependsOnModel.getModelUID().equals(uid)) {
            keysToRemove.add(key);
          }
        }
      }
      for (      Object key : keysToRemove) {
        removeCache(key);
      }
    }
  }
);
}
