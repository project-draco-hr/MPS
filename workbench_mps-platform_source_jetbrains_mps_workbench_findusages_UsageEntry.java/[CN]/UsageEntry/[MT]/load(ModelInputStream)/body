{
  byte token=mis.readByte();
  if (token != TOKEN_CONCEPT_INSTANCE && token != TOKEN_MODEL_USE && token != TOKEN_NODE_USE) {
    throw new IOException(String.format("Bad UsageEntry identifier: %x",token));
  }
switch (token) {
case TOKEN_CONCEPT_INSTANCE:
    return new ConceptInstance(MetaIdFactory.conceptId(mis.readUUID(),mis.readLong()));
case TOKEN_NODE_USE:
  return new NodeUse(mis.readNodeId());
case TOKEN_MODEL_USE:
return new ModelUse(mis.readModuleID(),mis.readModelID());
}
throw new IllegalStateException();
}
