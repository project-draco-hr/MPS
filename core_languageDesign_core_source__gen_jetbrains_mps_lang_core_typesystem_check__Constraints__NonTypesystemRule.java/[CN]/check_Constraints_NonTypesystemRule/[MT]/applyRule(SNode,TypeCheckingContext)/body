{
  IOperationContext operationContext=typeCheckingContext.getOperationContext();
  if (operationContext == null) {
    return;
  }
  ModelConstraintsManager cm=ModelConstraintsManager.getInstance();
  if (SNodeOperations.getParent(node) != null && !(SNodeOperations.getParent(node).isUnknown())) {
    SNode link=SNodeOperations.getContainingLinkDeclaration(node);
    if (!(node.isAttribute())) {
      if (link == null) {
{
          BaseIntentionProvider intentionProvider=null;
          IErrorTarget errorTarget=new NodeErrorTarget();
          IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(node,"Child in a role with unknown link","r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)","4950342498455637390",intentionProvider,errorTarget);
        }
        return;
      }
    }
    if (!(cm.canBeChild(node.getConceptFqName(),operationContext,SNodeOperations.getParent(node),link))) {
{
        BaseIntentionProvider intentionProvider=null;
        IErrorTarget errorTarget=new NodeErrorTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(node,"Node isn't applicable in the context","r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)","5622704259074610949",intentionProvider,errorTarget);
{
          SNode _foreign_34989546=cm.getCanBeChildBlock(operationContext,node.getConceptFqName());
          if (_foreign_34989546 != null) {
            _reporter_2309309498.addAdditionalRuleId(_foreign_34989546.getModel().toString(),_foreign_34989546.getId());
          }
        }
      }
    }
  }
  if (node.isRoot()) {
    boolean canBeRoot=cm.canBeRoot(operationContext,node.getConceptFqName(),SNodeOperations.getModel(node));
    if (!(canBeRoot)) {
{
        BaseIntentionProvider intentionProvider=null;
        IErrorTarget errorTarget=new NodeErrorTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(node,"Not rootable concept added as root","r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)","5622704259074611001",intentionProvider,errorTarget);
{
          SNode _foreign_34989546=cm.getCanBeRootBlock(operationContext,node.getConceptFqName());
          if (_foreign_34989546 != null) {
            _reporter_2309309498.addAdditionalRuleId(_foreign_34989546.getModel().toString(),_foreign_34989546.getId());
          }
        }
      }
    }
  }
  for (  SNode child : SNodeOperations.getChildren(node)) {
    SNode childConcept=SNodeOperations.getConceptDeclaration(child);
    SNode childLink=SNodeOperations.getContainingLinkDeclaration(child);
    if (childLink == null) {
      continue;
    }
    if (!(cm.canBeParent(node,childConcept,childLink,operationContext))) {
{
        BaseIntentionProvider intentionProvider=null;
        IErrorTarget errorTarget=new NodeErrorTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(node,"Node isn't applicable in the context","r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)","5622704259074611096",intentionProvider,errorTarget);
{
          SNode _foreign_34989546=cm.getCanBeParentBlock(node,operationContext);
          if (_foreign_34989546 != null) {
            _reporter_2309309498.addAdditionalRuleId(_foreign_34989546.getModel().toString(),_foreign_34989546.getId());
          }
        }
      }
    }
    if (!(cm.canBeAncestor(node,childConcept,operationContext))) {
{
        BaseIntentionProvider intentionProvider=null;
        IErrorTarget errorTarget=new NodeErrorTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(child,"Node isn't applicable in the context","r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)","1998770035420757821",intentionProvider,errorTarget);
      }
    }
  }
  SNode concept=SNodeOperations.getConceptDeclaration(node);
  ConceptAndSuperConceptsScope chs=new ConceptAndSuperConceptsScope(((AbstractConceptDeclaration)SNodeOperations.getAdapter(concept)));
  List<PropertyDeclaration> props=chs.getAdapters(PropertyDeclaration.class);
  for (  PropertyDeclaration p : ListSequence.fromList(props)) {
    PropertySupport ps=PropertySupport.getPropertySupport(p);
    String propertyName=p.getName();
    if (propertyName == null) {
      LOG.error("Property declaration has a null name, declaration id: " + p.getNode().getSNodeId() + ", model: "+ p.getModel().getSModelFqName());
      continue;
    }
    String value=ps.fromInternalValue(node.getProperty(propertyName));
    if (!(ps.canSetValue(node,p.getName(),value,operationContext.getScope(),false))) {
{
        BaseIntentionProvider intentionProvider=null;
        intentionProvider=new BaseIntentionProvider("jetbrains.mps.lang.core.typesystem.RemoveUndeclaredProperty_QuickFix",false);
        intentionProvider.putArgument("propertyName",p.getName());
        IErrorTarget errorTarget=new NodeErrorTarget();
        errorTarget=new PropertyErrorTarget(p.getName());
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(node,"Property constraint violation for property \"" + p.getName() + "\"","r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)","3618120580763111372",intentionProvider,errorTarget);
      }
    }
  }
  for (  String name : SetSequence.fromSet(node.getPropertyNames())) {
    if (node.isRoot() && SNode.PACK.equals(name)) {
      continue;
    }
    if (SModelSearchUtil.findPropertyDeclaration(((AbstractConceptDeclaration)SNodeOperations.getAdapter(concept)),name) == null) {
{
        BaseIntentionProvider intentionProvider=null;
        intentionProvider=new BaseIntentionProvider("jetbrains.mps.lang.core.typesystem.RemoveUndeclaredProperty_QuickFix",false);
        intentionProvider.putArgument("propertyName",name);
        IErrorTarget errorTarget=new NodeErrorTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportWarning(node,"Usage of undeclared property \"" + name + "\"","r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)","4049502122675887138",intentionProvider,errorTarget);
      }
    }
  }
}
