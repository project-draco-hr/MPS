{
  IOperationContext operationContext=typeCheckingContext.getOperationContext();
  if (operationContext == null) {
    return;
  }
  SNode node=baseConcept;
  ModelConstraintsManager cm=ModelConstraintsManager.getInstance();
  if (!(node.isAttribute())) {
    if (node.getParent() != null && !(node.getParent().isUnknown())) {
      String role=node.getRole_();
      LinkDeclaration link=node.getParent().getLinkDeclaration(role);
      if (link == null) {
{
          BaseIntentionProvider intentionProvider=null;
          IErrorTarget errorTarget=new NodeErrorTarget();
          typeCheckingContext.reportTypeError(node,"Child in a role with unknown link","r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)","4950342498455637390",intentionProvider,errorTarget);
        }
        return;
      }
      boolean canBeChild=cm.canBeChild(node.getConceptFqName(),operationContext,node.getParent(),link.getNode());
      if (!(canBeChild)) {
{
          BaseIntentionProvider intentionProvider=null;
          IErrorTarget errorTarget=new NodeErrorTarget();
          typeCheckingContext.reportTypeError(node,"Node isn't applicable in the context","r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)","5622704259074610949",intentionProvider,errorTarget);
        }
      }
    }
    if (node.isRoot()) {
      boolean canBeRoot=cm.canBeRoot(operationContext,node.getConceptFqName(),node.getModel());
      if (!(canBeRoot)) {
{
          BaseIntentionProvider intentionProvider=null;
          IErrorTarget errorTarget=new NodeErrorTarget();
          typeCheckingContext.reportTypeError(node,"Not rootable concept added as root","r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)","5622704259074611001",intentionProvider,errorTarget);
        }
      }
    }
  }
  for (  SNode child : node.getChildren()) {
    SNode childConcept=BaseAdapter.fromAdapter(child.getConceptDeclarationAdapter());
    LinkDeclaration link=node.getLinkDeclaration(child.getRole_());
    if (!(cm.canBeParent(node,childConcept,link.getNode(),operationContext))) {
{
        BaseIntentionProvider intentionProvider=null;
        IErrorTarget errorTarget=new NodeErrorTarget();
        typeCheckingContext.reportTypeError(node,"Node isn't applicable in the context","r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)","5622704259074611096",intentionProvider,errorTarget);
      }
    }
  }
}
