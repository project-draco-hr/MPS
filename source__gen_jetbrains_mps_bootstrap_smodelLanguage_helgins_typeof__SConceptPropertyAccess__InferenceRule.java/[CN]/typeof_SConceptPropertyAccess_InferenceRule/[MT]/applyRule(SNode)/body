{
  RulesUtil.checkAppliedCorrectly_generic(argument);
  final SNode conceptPropertyDecl=SLinkOperations.getTarget(argument,"conceptProperty",false);
  if (!((conceptPropertyDecl != null))) {
    TypeChecker.getInstance().reportTypeError(argument,"no concept property","jetbrains.mps.bootstrap.smodelLanguage.helgins","1186060067253");
  }
  SNode leftExpression=RulesUtil.leftExpression(argument);
  final SNode LeftType_typevar_1186059933158=TypeChecker.getInstance().getRuntimeSupport().createNewRuntimeTypesVariable(false);
  TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(leftExpression,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1186059945864"),TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType_typevar_1186059933158),leftExpression,null,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1186059950336");
  TypeChecker.getInstance().getRuntimeSupport().whenConcrete(TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType_typevar_1186059933158),new Runnable(){
    public void run(){
      SNode leftConcept=null;
      SNode maybeSConceptType=TypeChecker.getInstance().getRuntimeSupport().coerce(TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType_typevar_1186059933158),HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.bootstrap.smodelLanguage.structure.SConceptType"),false);
      if (maybeSConceptType != null) {
        leftConcept=SLinkOperations.getTarget(maybeSConceptType,"conceptDeclaraton",false);
      }
 else {
        SNode maybeSNodeType=TypeChecker.getInstance().getRuntimeSupport().coerce(TypeChecker.getInstance().getEquationManager().getRepresentator(LeftType_typevar_1186059933158),HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.bootstrap.smodelLanguage.structure.SNodeType"),false);
        if (maybeSNodeType != null) {
          leftConcept=SLinkOperations.getTarget(maybeSNodeType,"concept",false);
          if (leftConcept == null) {
            leftConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.core.structure.BaseConcept");
          }
        }
 else {
          if (!(false)) {
            TypeChecker.getInstance().reportTypeError(argument,"can't compute SNodeType from left expression","jetbrains.mps.bootstrap.smodelLanguage.helgins","1186060015897");
          }
        }
      }
      SNode declaringConcept=SNodeOperations.getParent(conceptPropertyDecl,null,false,false);
      RulesUtil.checkAssignableConcept(leftConcept,declaringConcept,argument,"operation is applied to wrong concept");
    }
  }
,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1186060002359");
  if (SNodeOperations.isInstanceOf(conceptPropertyDecl,"jetbrains.mps.bootstrap.structureLanguage.structure.StringConceptPropertyDeclaration")) {
    TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_19().createNode(),argument,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1186059822677");
  }
 else   if (SNodeOperations.isInstanceOf(conceptPropertyDecl,"jetbrains.mps.bootstrap.structureLanguage.structure.IntegerConceptPropertyDeclaration")) {
    TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_20().createNode(),argument,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1186059822687");
  }
 else   if (SNodeOperations.isInstanceOf(conceptPropertyDecl,"jetbrains.mps.bootstrap.structureLanguage.structure.BooleanConceptPropertyDeclaration")) {
    TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_21().createNode(),argument,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1186059822697");
  }
 else {
    TypeChecker.getInstance().reportTypeError(argument,"unknown type of concept property: " + conceptPropertyDecl,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1186059822707");
  }
}
