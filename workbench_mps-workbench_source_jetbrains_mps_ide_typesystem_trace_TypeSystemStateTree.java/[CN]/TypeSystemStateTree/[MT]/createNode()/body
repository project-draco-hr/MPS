{
  TypeSystemStateTreeNode result=new TypeSystemStateTreeNode("Type system state",myOperationContext);
  result.add(new TypeSystemStateTreeNode("Solving inequalities in process: " + myState.getInequalities().isSolvingInProcess(),myOperationContext));
  TypeSystemStateTreeNode[] nodes={createInequalitiesNode(),createNode("Comparable",myState.getBlocks(BlockKind.COMPARABLE),null),createNode("When concrete",myState.getBlocks(BlockKind.WHEN_CONCRETE),null),createNode("Errors",myState.getNodeMaps().getErrorListPresentation(),Color.RED),createNode("Check-only equations",myState.getBlocks(BlockKind.CHECK_EQUATION),null),createEquationsNode()};
  for (  TypeSystemStateTreeNode node : nodes) {
    if (node.children().hasMoreElements()) {
      result.add(node);
    }
  }
  return result;
}
