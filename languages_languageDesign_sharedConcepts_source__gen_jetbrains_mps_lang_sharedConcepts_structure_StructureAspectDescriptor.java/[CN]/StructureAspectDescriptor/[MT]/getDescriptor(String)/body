{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.lang.sharedConcepts.structure.ConceptFunctionParameter_editorContext","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"editorContext","current EditorContext instance","");
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.lang.sharedConcepts.structure.ConceptFunctionParameter_model","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"model","model of the reference node","");
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.lang.sharedConcepts.structure.ConceptFunctionParameter_node","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"node","","");
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.lang.sharedConcepts.structure.ConceptFunctionParameter_operationContext","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"operationContext","IOperationContext","");
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.lang.sharedConcepts.structure.ConceptFunctionParameter_progressMonitor","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"monitor","progress monitor","");
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.lang.sharedConcepts.structure.ConceptFunctionParameter_scope","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"scope","context (IScope)","");
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
