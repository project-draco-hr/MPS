{
  for (  SNode n1 : nodes) {
    fillConcept(n1);
    fillProperties(n1);
    fillAssociations(n1);
    if (n1.getParent() != null) {
      fillAggregation(n1);
    }
    for (    SNode n2 : SNodeUtil.getDescendants(n1,null,false)) {
      fillConcept(n2);
      fillProperties(n2);
      fillAssociations(n2);
      fillAggregation(n2);
    }
  }
  for (  ConceptInfo ci : myRegistry.values()) {
    for (    AggregationLinkInfo li : ci.getAggregationsInUse()) {
      li.setUnordered(metaInfoProvider.isUnordered(li.getLinkId()));
    }
    final StaticScope scope=metaInfoProvider.getScope(ci.getConceptId());
    final ConceptKind kind=metaInfoProvider.getKind(ci.getConceptId());
    ci.setImplementationKind(scope,kind);
    if (kind == ConceptKind.IMPLEMENTATION_WITH_STUB) {
      ci.setStubCounterpart(metaInfoProvider.getStubConcept(ci.getConceptId()));
    }
    if (ci.isNameSet()) {
      continue;
    }
    String conceptName=metaInfoProvider.getConceptName(ci.getConceptId());
    ci.setName(conceptName);
  }
  for (  LangInfo li : myLanguagesInUse.values()) {
    li.setName(metaInfoProvider.getLanguageName(li.getLanguageId()));
  }
  initializeIndexValues();
}
