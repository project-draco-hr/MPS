{
  if (!(CustomActionsHandler.canHandleAbstractConceptDeclarationMemberActions(node,editorContext))) {
    return;
  }
  SNode containingAbstractConcept=SNodeOperations.cast(SNodeOperations.getParent(node),"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration");
  if (!(CustomActionsHandler.backspaceElementFromCollectionAndSetSelection(node,ListSequence.fromList(SLinkOperations.getTargets(containingAbstractConcept,"linkDeclaration",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SPropertyOperations.getString_def(it,"metaClass","reference") == SPropertyOperations.getString_def(node,"metaClass","reference");
    }
  }
),editorContext))) {
    if (SNodeOperations.isInstanceOf(containingAbstractConcept,"jetbrains.mps.lang.structure.structure.ConceptDeclaration")) {
      SNode cd=SNodeOperations.cast(containingAbstractConcept,"jetbrains.mps.lang.structure.structure.ConceptDeclaration");
      if (SPropertyOperations.hasValue(node,"metaClass","aggregation","reference")) {
        SelectionUtil.selectLabelCellAnSetCaret(editorContext,cd,"emptyChildrenPlaceHolder",0);
      }
 else {
        SelectionUtil.selectLabelCellAnSetCaret(editorContext,cd,"emptyRefPlaceHolder",0);
      }
    }
 else     if (SNodeOperations.isInstanceOf(containingAbstractConcept,"jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration")) {
      SNode id=SNodeOperations.cast(containingAbstractConcept,"jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration");
      if (SPropertyOperations.hasValue(node,"metaClass","aggregation","reference")) {
        SelectionUtil.selectLabelCellAnSetCaret(editorContext,id,"emptyChildrenPlaceHolder",0);
      }
 else {
        SelectionUtil.selectLabelCellAnSetCaret(editorContext,id,"emptyRefPlaceHolder",0);
      }
    }
  }
}
