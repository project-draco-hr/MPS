{
  _firstGenerationQueue=new LinkedHashMap<K,V>(){
    protected boolean removeEldestEntry(    final Map.Entry<K,V> eldest){
      final boolean result=size() + _secondGenerationQueue.size() > _size;
      if (result) {
        fireListenersAboutDeletion(eldest.getKey(),eldest.getValue());
      }
      return result;
    }
  }
;
  final int secondGenSizeBound=(int)(_size * _secondGenSizeRatio);
  _secondGenerationQueue=new LinkedHashMap<K,V>(){
    protected boolean removeEldestEntry(    final Map.Entry<K,V> eldest){
      final boolean result=size() > secondGenSizeBound;
      if (result) {
        _firstGenerationQueue.put(eldest.getKey(),eldest.getValue());
      }
      return result;
    }
  }
;
}
