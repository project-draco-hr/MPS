{
  SNode logStatement=ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(),MetaAdapterFactory.getConcept(0x760a0a8ceabb4521L,0x8bfd65db761a9ba3L,0x10fc428b1dfL,"jetbrains.mps.baseLanguage.logging.structure.LogStatement"),false,new SAbstractConcept[]{})).first();
  final SNode usage=_context.getOutputNodeByInputNodeAndMappingLabel(logStatement,"logFieldUsage");
  return ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.as(_context.getMainContextNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x4a9a46de59132803L,"member"))).findFirst(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return ListSequence.fromList(SNodeOperations.getNodeDescendants(it,null,false,new SAbstractConcept[]{})).contains(usage);
    }
  }
);
}
