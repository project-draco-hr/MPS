{
  SNode logStatement=ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(),MetaAdapterFactory.getConcept(0x760a0a8ceabb4521L,0x8bfd65db761a9ba3L,0x10fc428b1dfL,"jetbrains.mps.baseLanguage.logging.structure.LogStatement"),false,new SAbstractConcept[]{})).first();
  SNode usage=_context.getOutputNodeByInputNodeAndMappingLabel(logStatement,"logFieldUsage");
  SNode ancestor=SNodeOperations.getNodeAncestor(usage,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"),false,true);
  if (ancestor != null) {
    return ancestor;
  }
  SNode outputNode=_context.getCopiedOutputNodeForInputNode(_context.getNode());
  if (outputNode == null) {
    _context.showErrorMessage(_context.getNode(),"Can't find copy of the class concept in the target model");
  }
  return outputNode;
}
