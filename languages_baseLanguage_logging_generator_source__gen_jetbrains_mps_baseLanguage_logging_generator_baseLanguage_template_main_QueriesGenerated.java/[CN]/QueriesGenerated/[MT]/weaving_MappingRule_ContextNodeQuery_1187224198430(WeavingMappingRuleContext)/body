{
  SNode logStatement=ListSequence.fromList(SNodeOperations.getNodeDescendants(_context.getNode(),MetaAdapterFactory.getConcept(new UUID(8505622446592443681l,-8359413340076074077l),1167227138527l,"jetbrains.mps.baseLanguage.logging.structure.LogStatement"),false,new SConcept[]{})).first();
  SNode usage=_context.getOutputNodeByInputNodeAndMappingLabel(logStatement,"logFieldUsage");
  SNode ancestor=SNodeOperations.getNodeAncestor(usage,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept"),false,true);
  if (ancestor != null) {
    return ancestor;
  }
  SNode outputNode=_context.getCopiedOutputNodeForInputNode(_context.getNode());
  if (outputNode == null) {
    _context.showErrorMessage(_context.getNode(),"Can't find copy of the class concept in the target model");
  }
  return outputNode;
}
