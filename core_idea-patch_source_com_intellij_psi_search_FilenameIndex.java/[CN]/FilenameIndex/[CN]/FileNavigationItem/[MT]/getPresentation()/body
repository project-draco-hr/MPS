{
  return new ItemPresentation(){
    @Override public String getPresentableText(){
      return name;
    }
    @Override public String getLocationString(){
      return getContainerText();
    }
    private String getContainerText(){
      final String directory=file.getPath();
      if (directory == null)       return null;
      final String relativePath=getRelativePath(project);
      if (relativePath == null)       return "( " + File.separator + " )";
      return "(" + relativePath + ")";
    }
    @Nullable private String getRelativePath(    final Project project){
      String url=file.getPresentableUrl();
      if (project == null) {
        return url;
      }
      final VirtualFile baseDir=project.getBaseDir();
      if (baseDir != null) {
        final String projectHomeUrl=baseDir.getPresentableUrl();
        if (url.startsWith(projectHomeUrl)) {
          final String cont=url.substring(projectHomeUrl.length());
          if (cont.length() == 0)           return null;
          url="..." + cont;
        }
      }
      return url;
    }
    @Override public Icon getIcon(    boolean open){
      return file.getIcon();
    }
    @Override public TextAttributesKey getTextAttributesKey(){
      return null;
    }
  }
;
}
