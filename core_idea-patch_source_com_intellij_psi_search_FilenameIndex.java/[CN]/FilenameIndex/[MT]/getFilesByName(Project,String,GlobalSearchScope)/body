{
  final Collection<VirtualFile> files=FileBasedIndex.getInstance().getContainingFiles(NAME,name,scope);
  if (files.isEmpty())   return NavigationItem.EMPTY_NAVIGATION_ITEM_ARRAY;
  List<NavigationItem> result=new ArrayList<NavigationItem>();
  for (  final VirtualFile file : files) {
    if (!file.isValid())     continue;
    NavigationItem item=new NavigationItem(){
      @Override public String getName(){
        return name;
      }
      @Override public ItemPresentation getPresentation(){
        return new ItemPresentation(){
          @Override public String getPresentableText(){
            return name;
          }
          @Override public String getLocationString(){
            return file.getPath();
          }
          @Override public Icon getIcon(          boolean open){
            return file.getIcon();
          }
          @Override public TextAttributesKey getTextAttributesKey(){
            return null;
          }
        }
;
      }
      @Override public FileStatus getFileStatus(){
        return FileStatus.NOT_CHANGED;
      }
      @Override public void navigate(      boolean requestFocus){
      }
      @Override public boolean canNavigate(){
        return true;
      }
      @Override public boolean canNavigateToSource(){
        return true;
      }
      @Override public String toString(){
        return getName();
      }
    }
;
    result.add(item);
  }
  return result.toArray(new NavigationItem[result.size()]);
}
