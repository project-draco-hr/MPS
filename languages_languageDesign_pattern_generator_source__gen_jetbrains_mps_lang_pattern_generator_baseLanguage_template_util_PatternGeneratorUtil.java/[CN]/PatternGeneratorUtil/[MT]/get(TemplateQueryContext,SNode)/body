{
  List<SNode> nodes=genContext.getAllOutputNodesByInputNodeAndMappingLabel(var,"patternVarField");
  if (ListSequence.fromList(nodes).count() == 1) {
    return ListSequence.fromList(nodes).first();
  }
  SNode varPattern=SNodeOperations.getAncestor(var,"jetbrains.mps.lang.pattern.structure.PatternExpression",false,false);
  SNode patternClass=genContext.getOutputNodeByInputNodeAndMappingLabel(varPattern,"patternClass");
  for (  SNode field : nodes) {
    if (SNodeOperations.getAncestor(field,"jetbrains.mps.baseLanguage.structure.ClassConcept",false,false) == patternClass) {
      return field;
    }
  }
  return null;
}
