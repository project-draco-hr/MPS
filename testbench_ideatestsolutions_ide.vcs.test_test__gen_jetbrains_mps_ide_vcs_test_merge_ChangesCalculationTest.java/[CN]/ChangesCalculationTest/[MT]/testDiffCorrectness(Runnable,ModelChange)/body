{
  final Wrappers._T<SModel> modelCopy=new Wrappers._T<SModel>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      modelCopy.value=PersistenceUtil.loadModel(PersistenceUtil.saveModel(getTestModel(),getDefaultExt()),getDefaultExt());
    }
  }
);
  makeChangeAndWait(todo);
  ModelChangeSet diff=ChangeSetBuilder.buildChangeSet(modelCopy.value,getTestModel());
  Assert.assertEquals(ListSequence.fromList(diff.getModelChanges()).count(),changes.length);
  for (int i=0; i < changes.length; i++) {
    ModelChange real=ListSequence.fromList(diff.getModelChanges()).getElement(i);
    ModelChange expected=changes[i];
    Assert.assertEquals(real.toString(),expected.toString());
  }
}
