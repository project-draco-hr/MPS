{
  Map<String,String> vars=MapSequence.fromMap(new HashMap<String,String>());
  MapSequence.fromMap(vars).put("basedir","basedir");
  MapSequence.fromMap(vars).put("\\n","line.separator");
  MapSequence.fromMap(vars).put("/","file.separator");
  MapSequence.fromMap(vars).put(":","path.separator");
  MapSequence.fromMap(vars).put("date","DSTAMP");
  if (ListSequence.fromList(SLinkOperations.getTargets(thisNode,"configuration",true)).isEmpty()) {
    SLinkOperations.addChild(thisNode,"configuration",SConceptOperations.createNewNode("jetbrains.mps.build.packaging.structure.Configuration",null));
  }
  SPropertyOperations.set(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"configuration",true)).first(),"name","default");
  for (  String s : Sequence.fromIterable(MapSequence.fromMap(vars).keySet())) {
    SNode var=SConceptOperations.createNewNode("jetbrains.mps.build.packaging.structure.Variable",null);
    SPropertyOperations.set(var,"name",s);
    SPropertyOperations.set(var,"antName",vars.get(s));
    SLinkOperations.addChild(thisNode,"builtInVariable",var);
  }
}
