{
  return new IJob.Stub(){
    @Override public IResult execute(    final Iterable<IResource> rawInput,    final IJobMonitor monitor,    final IPropertiesAccessor pa,    @NotNull final ProgressMonitor progressMonitor){
      Iterable<IResource> _output_i849au_a0a=null;
      final Iterable<TResource> input=(Iterable<TResource>)(Iterable)rawInput;
switch (0) {
case 0:
        final Collection<? extends SModule> toReload=Sequence.fromIterable(input).select(new ISelector<TResource,SModule>(){
          public SModule select(          TResource it){
            return it.module();
          }
        }
).distinct().toListSequence();
      monitor.currentProgress().beginWork("Reloading classes",1,monitor.currentProgress().workLeft());
    ModelAccess.instance().requireWrite(new Runnable(){
      public void run(){
        ClassLoaderManager.getInstance().unloadClasses(toReload,new EmptyProgressMonitor());
        ClassLoaderManager.getInstance().loadAllPossibleClasses(new EmptyProgressMonitor());
      }
    }
);
  monitor.currentProgress().advanceWork("Reloading classes",1);
monitor.currentProgress().finishWork("Reloading classes");
default :
return new IResult.SUCCESS(_output_i849au_a0a);
}
}
}
;
}
