{
  SModel model=SNodeOperations.getModel(classifier);
  if (SNodeOperations.isInstanceOf(parameterObject,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration")) {
    SNode newNode=SNodeFactoryOperations.createNewNode(model,"jetbrains.mps.baseLanguage.structure.StaticMethodCall",null);
    return QueriesUtil.fillStaticMethodCall(newNode,parameterObject,classifier,oldNode);
  }
  if (SNodeOperations.isInstanceOf(parameterObject,"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration")) {
    SNode newNode=SNodeFactoryOperations.createNewNode(model,"jetbrains.mps.baseLanguage.structure.StaticFieldReference",null);
    SLinkOperations.setTarget(newNode,"variableDeclaration",SNodeOperations.cast(parameterObject,"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration"),false);
    SLinkOperations.setTarget(newNode,"classifier",classifier,false);
    return newNode;
  }
  if (SNodeOperations.isInstanceOf(parameterObject,"jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration")) {
    SNode newNode=SNodeFactoryOperations.createNewNode(model,"jetbrains.mps.baseLanguage.structure.EnumConstantReference",null);
    SLinkOperations.setTarget(newNode,"enumConstantDeclaration",SNodeOperations.cast(parameterObject,"jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration"),false);
    SLinkOperations.setTarget(newNode,"enumClass",SNodeOperations.cast(classifier,"jetbrains.mps.baseLanguage.structure.EnumClass"),false);
    return newNode;
  }
  if (SNodeOperations.isInstanceOf(parameterObject,"jetbrains.mps.baseLanguage.structure.EnumValueOfExpression")) {
    SNode newNode=SNodeFactoryOperations.createNewNode(model,"jetbrains.mps.baseLanguage.structure.EnumValueOfExpression",null);
    SLinkOperations.setTarget(newNode,"enumClass",SNodeOperations.cast(classifier,"jetbrains.mps.baseLanguage.structure.EnumClass"),false);
    return newNode;
  }
  if (SNodeOperations.isInstanceOf(parameterObject,"jetbrains.mps.baseLanguage.structure.EnumValuesExpression")) {
    SNode newNode=SNodeFactoryOperations.createNewNode(model,"jetbrains.mps.baseLanguage.structure.EnumValuesExpression",null);
    SLinkOperations.setTarget(newNode,"enumClass",SNodeOperations.cast(classifier,"jetbrains.mps.baseLanguage.structure.EnumClass"),false);
    return newNode;
  }
  throw new RuntimeException("Bad parameter object " + parameterObject);
}
