{
  List<SNode> members=(List<SNode>)searchScope.getNodes();
  List<SNode> result=ListSequence.fromList(members).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1081236700938l,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration")) || SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123165l,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration")) || SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1083245299891l,"jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration"));
    }
  }
).toListSequence();
  if (SNodeOperations.isInstanceOf(classifier,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1083245097125l,"jetbrains.mps.baseLanguage.structure.EnumClass"))) {
    ListSequence.fromList(result).addElement(SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1224575136086l,"jetbrains.mps.baseLanguage.structure.EnumValueOfExpression")),null));
    ListSequence.fromList(result).addElement(SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1224573963862l,"jetbrains.mps.baseLanguage.structure.EnumValuesExpression")),null));
  }
  return result;
}
