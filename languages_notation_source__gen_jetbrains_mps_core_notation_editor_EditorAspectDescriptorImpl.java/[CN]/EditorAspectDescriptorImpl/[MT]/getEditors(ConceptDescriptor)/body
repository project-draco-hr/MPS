{
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a,descriptor.getConceptFqName())) {
case 0:
    return Collections.<ConceptEditor>singletonList(new SAllNotationsSelector_Editor());
case 1:
  return Collections.<ConceptEditor>singletonList(new SAllTermsSelector_Editor());
case 2:
return Collections.<ConceptEditor>singletonList(new SConceptNotationSelector_Editor());
case 3:
return Collections.<ConceptEditor>singletonList(new SConcreteNotationSelector_Editor());
case 4:
return Collections.<ConceptEditor>singletonList(new SEnumLiteralEntityRef_Editor());
case 5:
return Collections.<ConceptEditor>singletonList(new SNotation_Editor());
case 6:
return Collections.<ConceptEditor>singletonList(new SNotationBreak_Editor());
case 7:
return Collections.<ConceptEditor>singletonList(new SNotationCall_Editor());
case 8:
return Collections.<ConceptEditor>singletonList(new SNotationConceptContext_Editor());
case 9:
return Collections.<ConceptEditor>singletonList(new SNotationContext_Editor());
case 10:
return Collections.<ConceptEditor>singletonList(new SNotationEnumContext_Editor());
case 11:
return Collections.<ConceptEditor>singletonList(new SNotationLabel_Editor());
case 12:
return Collections.<ConceptEditor>singletonList(new SNotationMapping_Editor());
case 13:
return Collections.<ConceptEditor>singletonList(new SNotationNewLine_Editor());
case 14:
return Collections.<ConceptEditor>singletonList(new SNotationNospace_Editor());
case 15:
return Collections.<ConceptEditor>singletonList(new SNotationParentheses_Editor());
case 16:
return Collections.<ConceptEditor>singletonList(new SNotationPart_Editor());
case 17:
return Collections.<ConceptEditor>singletonList(new SNotationPartList_Editor());
case 18:
return Collections.<ConceptEditor>singletonList(new SNotationPredicate_Editor());
case 19:
return Collections.<ConceptEditor>singletonList(new SNotationQuantifier_Editor());
case 20:
return Collections.<ConceptEditor>singletonList(new SNotationStyle_Editor());
case 21:
return Collections.<ConceptEditor>singletonList(new SNotationStyleClass_Editor());
case 22:
return Collections.<ConceptEditor>singletonList(new SNotationStyleColor_Editor());
case 23:
return Collections.<ConceptEditor>singletonList(new SNotationStyleContent_Editor());
case 24:
return Collections.<ConceptEditor>singletonList(new SNotationStyleEmptyLine_Editor());
case 25:
return Collections.<ConceptEditor>singletonList(new SNotationStyleIndent_Editor());
case 26:
return Collections.<ConceptEditor>singletonList(new SNotationStylePart_Editor());
case 27:
return Collections.<ConceptEditor>singletonList(new SNotationStyleSelector_Editor());
case 28:
return Collections.<ConceptEditor>singletonList(new SNotationStylesImport_Editor());
case 29:
return Collections.<ConceptEditor>singletonList(new SNotationTab_Editor());
case 30:
return Collections.<ConceptEditor>singletonList(new SNotationTermClassSelector_Editor());
case 31:
return Collections.<ConceptEditor>singletonList(new SNotationTermTextSelector_Editor());
case 32:
return Collections.<ConceptEditor>singletonList(new SNotationUnorderedGroup_Editor());
case 33:
return Collections.<ConceptEditor>singletonList(new SStructureEntityRef_Editor());
case 34:
return Collections.<ConceptEditor>singletonList(new SStructureLinkRef_Editor());
case 35:
return Collections.<ConceptEditor>singletonList(new SStructurePropertyRef_Editor());
default :
}
return Collections.emptyList();
}
