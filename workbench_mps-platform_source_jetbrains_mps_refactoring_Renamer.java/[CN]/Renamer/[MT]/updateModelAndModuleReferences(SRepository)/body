{
  ModelAccess.assertLegalWrite();
  List<SModuleReference> refs=new ArrayList<SModuleReference>();
  for (  SModule module : repo.getModules()) {
    if (module.isReadOnly())     continue;
    refs.add(module.getModuleReference());
  }
  RefUpdateUtil.updateModuleRefs(refs);
  for (  SModule m : repo.getModules()) {
    if (m.isReadOnly())     continue;
    if (!(m instanceof AbstractModule))     continue;
    AbstractModule module=(AbstractModule)m;
    module.updateSModelReferences();
    module.updateModuleReferences();
    for (    SModel sm : m.getModels()) {
      if (sm.isReadOnly())       continue;
      final SModelInternal model=(SModelInternal)sm;
      if ((model.updateSModelReferences() | model.updateModuleReferences()) && (sm instanceof EditableSModel)) {
        ((EditableSModel)sm).setChanged(true);
      }
    }
  }
}
