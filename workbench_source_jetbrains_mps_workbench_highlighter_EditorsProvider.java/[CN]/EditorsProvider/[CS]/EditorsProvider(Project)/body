{
  myProject=project;
  updateInformation();
  myMessageBusConnection=myProject.getMessageBus().connect();
  myMessageBusConnection.subscribe(FileEditorManagerListener.FILE_EDITOR_MANAGER,new FileEditorManagerListener(){
    public void fileOpened(    FileEditorManager source,    VirtualFile file){
      updateInformation();
      FileEditor selectedEditor=source.getSelectedEditor(file);
      if (selectedEditor instanceof MPSFileNodeEditor) {
        MPSFileNodeEditor editor=(MPSFileNodeEditor)selectedEditor;
        fireEditorOpened(editor);
      }
    }
    public void fileClosed(    FileEditorManager source,    VirtualFile file){
      updateInformation();
    }
    public void selectionChanged(    FileEditorManagerEvent event){
      updateInformation();
    }
  }
);
  myMessageBusConnection.subscribe(FileEditorManagerListener.Before.FILE_EDITOR_MANAGER,new Before(){
    public void beforeFileOpened(    FileEditorManager source,    VirtualFile file){
    }
    public void beforeFileClosed(    FileEditorManager source,    VirtualFile file){
      updateInformation();
      FileEditor selectedEditor=source.getSelectedEditor(file);
      if (selectedEditor instanceof MPSFileNodeEditor) {
        MPSFileNodeEditor editor=(MPSFileNodeEditor)selectedEditor;
        fireEditorClosed(editor);
      }
    }
  }
);
}
