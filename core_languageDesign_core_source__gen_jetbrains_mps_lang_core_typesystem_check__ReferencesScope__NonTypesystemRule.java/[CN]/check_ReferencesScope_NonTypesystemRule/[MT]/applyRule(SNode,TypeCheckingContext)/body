{
  long t0=new Date().getTime();
  int cnt=0;
  IOperationContext context=typeCheckingContext.getOperationContext();
  if (context == null || !(ReferencesScopeCheckingOptionEditor.ourRefScopeChecking)) {
    return;
  }
  AbstractConceptDeclaration concept=node.getConceptDeclarationAdapter();
  for (  SReference ref : SNodeOperations.getReferences(node)) {
    SearchScopeStatus sss=ModelConstraintsUtil.getSearchScope(SNodeOperations.getParent(node),node,concept,SLinkOperations.getRole(ref),context);
    SNode target=ref.getTargetNode();
    if (sss.isError()) {
{
        BaseIntentionProvider intentionProvider=null;
        IErrorTarget errorTarget=new NodeErrorTarget();
        errorTarget=new ReferenceErrorTarget(ref.getRole());
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(node,sss.getMessage(),"r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)","4942048232752368615",intentionProvider,errorTarget);
      }
    }
 else     if (sss.isDefault()) {
    }
 else     if (!(sss.getSearchScope().isInScope(target))) {
      String name=(target == null ? "" : target.getName());
{
        BaseIntentionProvider intentionProvider=null;
        IErrorTarget errorTarget=new NodeErrorTarget();
        errorTarget=new ReferenceErrorTarget(ref.getRole());
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(node,"reference" + ((name == null ? "" : " " + name)) + " ("+ ref.getRole()+ ") is out of"+ ((sss.isDefault() ? " global" : " search"))+ " scope","r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)","4942048232752376292",intentionProvider,errorTarget);
{
          SNode _foreign_34989546=sss.getSearchScopeFactoryNode();
          if (_foreign_34989546 != null) {
            _reporter_2309309498.addAdditionalRuleId(_foreign_34989546.getModel().toString(),_foreign_34989546.getId());
          }
        }
      }
    }
    ++cnt;
  }
  ReferencesScopeCheckingOptionEditor.ourTime+=new Date().getTime() - t0;
  ReferencesScopeCheckingOptionEditor.ourRefs+=cnt;
  ++ReferencesScopeCheckingOptionEditor.ourNodes;
}
