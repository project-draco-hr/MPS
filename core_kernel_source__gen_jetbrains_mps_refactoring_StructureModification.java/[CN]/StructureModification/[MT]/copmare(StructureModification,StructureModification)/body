{
  Map<SModelReference,Integer> aa=a.getDependencies();
  Map<SModelReference,Integer> bb=b.getDependencies();
  boolean eq=(int)MapSequence.fromMap(aa).count() == (int)MapSequence.fromMap(bb).count();
  for (  SModelReference k : SetSequence.fromSet(MapSequence.fromMap(aa).keySet())) {
    if (!(MapSequence.fromMap(bb).containsKey(k))) {
      eq=false;
      continue;
    }
    if ((int)MapSequence.fromMap(aa).get(k) == (int)MapSequence.fromMap(bb).get(k)) {
      continue;
    }
    return (MapSequence.fromMap(aa).get(k) < MapSequence.fromMap(bb).get(k) ? StructureModification.Relation.BEFORE : StructureModification.Relation.AFTER);
  }
  return (eq ? StructureModification.Relation.EQUAL : StructureModification.Relation.NONE);
}
