{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141037l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141037l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          List<SNode> result=new ArrayList<SNode>();
          if (SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration",false,false) != null) {
            return result;
          }
          SNode classifier=ExtensionMethodDeclaration_Behavior.call_getClassifier_7685333756920241018(SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.extensionMethods.structure.ExtensionMethodDeclaration",false,false));
          if (classifier == null) {
            return result;
          }
          Set<String> names=SetSequence.fromSet(new HashSet<String>());
          while (classifier != null) {
            Iterable<SNode> methods=Members.visibleInstanceMethods(BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),classifier,"virtual_getThisType_7405920559687254782",new Object[]{}),_context.getEnclosingNode());
            for (            SNode method : methods) {
              if (!(SetSequence.fromSet(names).contains(SPropertyOperations.getString(method,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"))))) {
                ListSequence.fromList(result).addElement(method);
              }
            }
            for (            SNode method : methods) {
              SetSequence.fromSet(names).addElement(SPropertyOperations.getString(method,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")));
            }
            classifier=SNodeOperations.getAncestor(classifier,"jetbrains.mps.baseLanguage.structure.Classifier",false,false);
          }
          return result;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_rxyf25_a0a1a0a0a1a0b0a1a3;
        }
      }
;
    }
  }
);
  return references;
}
