{
  Scanner scanner=new Scanner(myTextArea.getText());
  Map<Node,Dimension> nodeDimensions=MapSequence.fromMap(new HashMap<Node,Dimension>());
  Map<Edge,Dimension> edgeDimensions=MapSequence.fromMap(new HashMap<Edge,Dimension>());
  Graph g=null;
  try {
    g=GraphIO.scanGraph(scanner);
    int numNodeSizes=scanner.nextInt();
    for (int i=0; i < numNodeSizes; i++) {
      Node node=g.getNode(scanner.nextInt());
      MapSequence.fromMap(nodeDimensions).put(node,new Dimension(scanner.nextInt(),scanner.nextInt()));
    }
    int edgeLabelSizes=scanner.nextInt();
    for (int i=0; i < edgeLabelSizes; i++) {
      Node source=g.getNode(scanner.nextInt());
      final Node target=g.getNode(scanner.nextInt());
      Edge edge=ListSequence.fromList(source.getOutEdges()).where(new IWhereFilter<Edge>(){
        public boolean accept(        Edge it){
          return it.getTarget() == target;
        }
      }
).first();
      MapSequence.fromMap(edgeDimensions).put(edge,new Dimension(scanner.nextInt(),scanner.nextInt()));
    }
  }
 catch (  IllegalArgumentException e) {
    JOptionPane.showMessageDialog(this,"something is wrong in graph...");
  }
  if (g != null) {
    for (    Node node : ListSequence.fromList(g.getNodes())) {
      if (MapSequence.fromMap(nodeDimensions).get(node) == null) {
        MapSequence.fromMap(nodeDimensions).put(node,new Dimension(DEFAULT_NODE_SIZE,DEFAULT_NODE_SIZE));
      }
    }
    if (myLayoutChoice.isSetLabels()) {
      for (      Edge edge : ListSequence.fromList(g.getEdges())) {
        if (MapSequence.fromMap(edgeDimensions).get(edge) == null) {
          MapSequence.fromMap(edgeDimensions).put(edge,new Dimension(DEFAULT_EDGE_X_SIZE,DEFAULT_EDGE_Y_SIZE));
        }
      }
    }
    myCurrentLayout=myLayouter.doLayout(g,nodeDimensions);
  }
}
