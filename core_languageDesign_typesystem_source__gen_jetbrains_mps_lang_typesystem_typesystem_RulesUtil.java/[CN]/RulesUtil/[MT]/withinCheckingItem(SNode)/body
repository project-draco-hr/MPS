{
  if ((SNodeOperations.getAncestor(node,"jetbrains.mps.lang.typesystem.structure.AbstractSubtypingRule",true,false) != null)) {
    return true;
  }
  if ((SNodeOperations.getAncestor(node,"jetbrains.mps.lang.typesystem.structure.AbstractCheckingRule",true,false) != null)) {
    return true;
  }
  List<SNode> annotations=SLinkOperations.getTargets(SNodeOperations.getAncestor(node,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration",true,false),"annotation",true);
  for (  SNode annotation : annotations) {
    if (SLinkOperations.getTarget(annotation,"annotation",false) == SLinkOperations.getTarget(new _Quotations.QuotationClass_54().createNode(),"classifier",false) || SLinkOperations.getTarget(annotation,"annotation",false) == SLinkOperations.getTarget(new _Quotations.QuotationClass_55().createNode(),"classifier",false)) {
      return true;
    }
  }
  return false;
}
