{
  SNode castVariable=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement",null);
  SNode de=SNodeOperations.cast(SLinkOperations.getTarget(node,"condition",true),"jetbrains.mps.baseLanguage.structure.DotExpression");
  SNode conceptDeclaration=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(de,"operation",true),"jetbrains.mps.lang.smodel.structure.Node_IsInstanceOfOperation"),"conceptArgument",true),"jetbrains.mps.lang.smodel.structure.RefConcept_Reference"),"conceptDeclaration",false);
  SNode declaration=SLinkOperations.getTarget(castVariable,"localVariableDeclaration",true);
  SLinkOperations.setTarget(SNodeFactoryOperations.setNewChild(declaration,"type","jetbrains.mps.lang.smodel.structure.SNodeType"),"concept",conceptDeclaration,false);
  SPropertyOperations.set(declaration,"name",NameUtil.decapitalize(SPropertyOperations.getString(conceptDeclaration,"name")));
  SNode expression=SLinkOperations.getTarget(de,"operand",true);
  if (SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(expression),"jetbrains.mps.lang.smodel.structure.SNodeType")) {
    SNode nodeTypeCastExpression=SNodeFactoryOperations.setNewChild(declaration,"initializer","jetbrains.mps.lang.smodel.structure.SNodeTypeCastExpression");
    SLinkOperations.setTarget(nodeTypeCastExpression,"concept",conceptDeclaration,false);
    SLinkOperations.setTarget(nodeTypeCastExpression,"leftExpression",SNodeOperations.copyNode(expression),true);
  }
 else {
    SNode castExpression=SNodeFactoryOperations.setNewChild(declaration,"initializer","jetbrains.mps.baseLanguage.structure.CastExpression");
    SLinkOperations.setTarget(castExpression,"type",SNodeOperations.copyNode(SLinkOperations.getTarget(declaration,"type",true)),true);
    SLinkOperations.setTarget(castExpression,"expression",SNodeOperations.copyNode(expression),true);
  }
  ListSequence.<SNode>fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(node,"ifTrue",true),"statement",true)).insertElement(0,castVariable);
}
