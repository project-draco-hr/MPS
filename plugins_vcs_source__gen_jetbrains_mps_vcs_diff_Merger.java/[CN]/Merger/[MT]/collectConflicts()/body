{
  myConflicts.clear();
  myConflictingChanges.clear();
  collectConflictsByClass(AddLanguageAspectChange.class);
  collectConflictsByClass(SetPropertyChange.class);
  collectConflictsByClass(SetReferenceChange.class);
  collectSetNodeConflicts();
  collectConflictsByClass(DeleteNodeChange.class);
  collectConflictsByClass(AddNodeChange.class);
  collectConflictsByClass(AddRootChange.class);
  collectDeleteDependencyConflicts();
  collectConflictsByClass(MoveNodeChange.class);
  collectConflictsByClass(ChangeConceptChange.class);
  for (  Change change : new ArrayList<Change>(myConflictingChanges)) {
    myConflictingChanges.addAll(getChangeGroupOf(change));
  }
}
