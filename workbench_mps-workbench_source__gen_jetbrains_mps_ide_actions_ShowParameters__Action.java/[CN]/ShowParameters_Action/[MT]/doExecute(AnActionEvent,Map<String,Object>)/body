{
  try {
    FeatureUsageTracker.getInstance().triggerFeatureUsed("editing.showParameters");
    Point p=new Point(((EditorCell)MapSequence.fromMap(_params).get("cell")).getX() + ((EditorCell)MapSequence.fromMap(_params).get("cell")).getWidth(),((EditorCell)MapSequence.fromMap(_params).get("cell")).getY() + ((EditorCell)MapSequence.fromMap(_params).get("cell")).getHeight());
    EditorCell currentCell=((EditorCell)MapSequence.fromMap(_params).get("cell"));
    while (currentCell != null) {
      ParametersInformation parametersInformation=currentCell.getStyle().get(StyleAttributes.PARAMETERS_INFORMATION);
      if (parametersInformation != null) {
        Component component=ShowParameters_Action.this.createComponent(parametersInformation,currentCell.getSNode(),_params);
        MPSToolTipManager.getInstance().showToolTip(new ToolTipData(component),((EditorComponent)MapSequence.fromMap(_params).get("editor")),p);
        return;
      }
      currentCell=(EditorCell)currentCell.getParent();
    }
  }
 catch (  Throwable t) {
    LOG.error("User's action execute method failed. Action:" + "ShowParameters",t);
  }
}
