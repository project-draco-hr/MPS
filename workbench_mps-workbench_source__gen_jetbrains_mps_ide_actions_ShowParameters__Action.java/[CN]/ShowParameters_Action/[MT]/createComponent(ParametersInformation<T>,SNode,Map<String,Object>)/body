{
  JPanel panel=new JPanel(new GridBagLayout());
  panel.setBackground(ToolTip.BACKGROUND_COLOR);
  panel.setBorder(new EmptyBorder(0,4,0,4));
  Iterable<T> methods=parametersInformation.getMethods(node,((EditorContext)MapSequence.fromMap(_params).get("editorContext")));
  int lineNumber=0;
  for (  T method : Sequence.fromIterable(methods)) {
    StyledTextPrinterImpl printer=new StyledTextPrinterImpl();
    parametersInformation.getStyledMethodPresentation(node,((EditorContext)MapSequence.fromMap(_params).get("editorContext")),method,printer);
    JTextPane textPane=new JTextPane(printer.getDocument());
    textPane.setBorder(null);
    textPane.setFont(EditorSettings.getInstance().getDefaultEditorFont());
    textPane.setOpaque(true);
    if (Sequence.fromIterable(methods).count() > 1 && parametersInformation.isMethodCurrent(node,((EditorContext)MapSequence.fromMap(_params).get("editorContext")),method)) {
      textPane.setBackground(new JBColor(new Color(231,254,234),Gray._100));
    }
 else {
      textPane.setBackground(ToolTip.BACKGROUND_COLOR);
    }
    textPane.setForeground(JBColor.foreground());
    GridBagConstraints constraints=new GridBagConstraints();
    constraints.fill=GridBagConstraints.BOTH;
    constraints.gridy=lineNumber++;
    panel.add(textPane,constraints);
    if (Sequence.fromIterable(methods).last() != method) {
      constraints=new GridBagConstraints();
      constraints.fill=GridBagConstraints.HORIZONTAL;
      constraints.gridy=lineNumber++;
      panel.add(new Line(),constraints);
    }
  }
  return panel;
}
