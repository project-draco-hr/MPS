{
  List<String> errors=new ArrayList<String>(super.getErrors());
  for (  ModuleReference lang : myModule.getExtendedLanguageRefs()) {
    if (MPSModuleRepository.getInstance().getModule(lang) == null) {
      errors.add("Can't find extended language: " + lang.getModuleFqName());
    }
  }
  for (  SModelReference accessory : myModule.getModuleDescriptor().getAccessoryModels()) {
    if (myModule.getScope().getModelDescriptor(accessory) == null) {
      errors.add("Can't find accessory model: " + accessory.getLongName());
    }
  }
  for (  Dependency runtimeModule : myModule.getModuleDescriptor().getRuntimeModules()) {
    if (MPSModuleRepository.getInstance().getModule(runtimeModule.getModuleRef()) == null) {
      errors.add("Can't find runtime module: " + runtimeModule.getModuleRef().getModuleFqName());
    }
  }
  for (  ModelRoot stubModelsEntry : myModule.getModuleDescriptor().getRuntimeStubModels()) {
    IFile file=FileSystem.getInstance().getFileByPath(stubModelsEntry.getPath());
    if (file == null || !file.exists()) {
      errors.add("Can't find runtime library: " + stubModelsEntry.getPath());
    }
  }
  return errors;
}
