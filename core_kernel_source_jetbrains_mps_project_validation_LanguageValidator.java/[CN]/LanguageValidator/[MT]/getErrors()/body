{
  List<String> errors=new ArrayList<String>(super.getErrors());
  for (  ModuleReference lang : myModule.getExtendedLanguageRefs()) {
    if (MPSModuleRepository.getInstance().getModule(lang) == null) {
      errors.add("Can't find extended language: " + lang.getModuleFqName());
    }
  }
  checkBehaviorAspectPresence(myModule,errors);
  for (  ModuleReference mr : myModule.getRuntimeModulesReferences()) {
    IModule runtimeModule=MPSModuleRepository.getInstance().getModule(mr);
    if (runtimeModule == null)     continue;
    if (!(runtimeModule instanceof Solution)) {
      errors.add("Runtime module " + runtimeModule + " is not a solution");
    }
  }
  for (  SModelReference accessory : myModule.getModuleDescriptor().getAccessoryModels()) {
    if (myModule.getScope().getModelDescriptor(accessory) == null) {
      errors.add("Can't find accessory model: " + SModelStereotype.withoutStereotype(accessory.getModelName()));
    }
  }
  for (  ModuleReference ref : myModule.getModuleDescriptor().getRuntimeModules()) {
    if (MPSModuleRepository.getInstance().getModule(ref) == null) {
      errors.add("Can't find runtime module: " + ref.getModuleFqName());
    }
  }
  return errors;
}
