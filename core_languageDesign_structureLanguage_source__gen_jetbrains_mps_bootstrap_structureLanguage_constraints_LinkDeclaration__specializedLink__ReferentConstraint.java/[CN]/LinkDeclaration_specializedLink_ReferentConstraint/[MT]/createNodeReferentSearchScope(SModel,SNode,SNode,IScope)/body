{
  final zClosureContext _zClosureContext=new zClosureContext();
  _zClosureContext.aggregation=SPropertyOperations.hasValue(referenceNode,"metaClass","aggregation",null);
  List<SNode> result=new ArrayList<SNode>();
  SNode enclosingConcept=SNodeOperations.getAncestor(enclosingNode,"jetbrains.mps.bootstrap.structureLanguage.structure.AbstractConceptDeclaration",true,false);
  List<SNode> directSupers=SConceptOperations.getDirectSuperConcepts(enclosingConcept);
{
    ICursor<SNode> _zCursor=CursorFactory.createCursor(directSupers);
    try {
      while (_zCursor.moveToNext()) {
        SNode concept=_zCursor.getCurrent();
{
          List<SNode> links=AbstractConceptDeclaration_Behavior.call_getLinkDeclarationsExcludingOverridden_1196820678380(concept);
          ListOperations.addAllElements(result,SequenceOperations.where(links,new zPredicate(null,_zClosureContext)));
        }
      }
    }
  finally {
      _zCursor.release();
    }
  }
  return new SimpleSearchScope(result);
}
