{
  JoinType joinType=JoinType.newInstance(TypeChecker.getInstance().getRuntimeTypesModel());
  if (isJoinNode(wrapper1.getNode())) {
    JoinType joinWrapper1=(JoinType)wrapper1.getNode().getAdapter();
    for (    BaseConcept bc : joinWrapper1.getArguments()) {
      joinType.addArgument(HUtil.copyIfNecessary(bc));
    }
    if (isJoinNode(wrapper2.getNode())) {
      JoinType joinWrapper2=(JoinType)wrapper2.getNode().getAdapter();
      for (      BaseConcept bc : joinWrapper2.getArguments()) {
        joinType.addArgument(HUtil.copyIfNecessary(bc));
      }
    }
 else {
      joinType.addArgument(HUtil.copyIfNecessary((BaseConcept)(BaseAdapter.fromNode(wrapper2.getNode()))));
    }
  }
 else   if (isJoinNode(wrapper2.getNode())) {
    JoinType joinWrapper2=(JoinType)wrapper2.getNode().getAdapter();
    joinType.addArgument(HUtil.copyIfNecessary((BaseConcept)(BaseAdapter.fromNode(wrapper1.getNode()))));
    for (    BaseConcept bc : joinWrapper2.getArguments()) {
      joinType.addArgument(HUtil.copyIfNecessary(bc));
    }
  }
 else {
    joinType.addArgument(HUtil.copyIfNecessary((BaseConcept)(BaseAdapter.fromNode(wrapper1.getNode()))));
    joinType.addArgument(HUtil.copyIfNecessary((BaseConcept)(BaseAdapter.fromNode(wrapper2.getNode()))));
  }
  return NodeWrapper.createWrapperFromNode(joinType.getNode(),null);
}
