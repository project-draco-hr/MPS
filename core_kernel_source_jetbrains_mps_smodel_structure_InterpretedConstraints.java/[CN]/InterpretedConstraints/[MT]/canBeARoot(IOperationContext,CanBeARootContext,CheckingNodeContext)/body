{
  if (!ModelAccess.instance().runReadAction(new Computable<Boolean>(){
    @Override public Boolean compute(){
      SNode concept=SModelUtil.findConceptDeclaration(fqName,operationContext.getScope());
      if (!(SNodeUtil.isInstanceOfConceptDeclaration(concept) && SNodeUtil.getConceptDeclaration_IsRootable(concept))) {
        if (checkingNodeContext != null) {
          checkingNodeContext.breakingNodePointer=new SNodePointer(concept);
        }
        return false;
      }
 else {
        return true;
      }
    }
  }
)) {
    return false;
  }
  boolean result=invokeCanBeASomethingMethod(canBeARootMethod,operationContext,_context);
  if (checkingNodeContext != null && !result) {
    checkingNodeContext.breakingNodePointer=getConceptConstraint(canBeARootMethod,operationContext,"canBeRoot");
  }
  return result;
}
