{
  return ModelAccess.instance().runReadAction(new Computable<T>(){
    @Override public T compute(){
      SNode topConcept=SModelUtil.findConceptDeclaration(topConceptFqName,GlobalScope.getInstance());
      if (topConcept != null) {
        List<SNode> conceptAndSuperConcepts=SModelUtil_new.getConceptAndSuperConcepts(topConcept);
        for (        SNode concept : conceptAndSuperConcepts) {
          String fqName=NameUtil.nodeFQName(concept);
          T result=computeFunction.fun(Pair.create(fqName,context));
          if (result != null) {
            return result;
          }
        }
      }
      return null;
    }
  }
);
}
