{
  if (!(SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.structure.ArrayClassExpression"))) {
    return;
  }
  SNode statedType=SLinkOperations.getTarget(SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.ArrayClassExpression"),"arrayType",true);
  if (SNodeOperations.isInstanceOf(statedType,"jetbrains.mps.baseLanguage.structure.ClassifierType")) {
    SNode replacing=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ClassifierClassExpression",null);
    SLinkOperations.setTarget(replacing,"classifier",SLinkOperations.getTarget(SNodeOperations.cast(statedType,"jetbrains.mps.baseLanguage.structure.ClassifierType"),"classifier",false),false);
    SNodeOperations.replaceWithAnother(node,replacing);
  }
 else   if (SNodeOperations.isInstanceOf(statedType,"jetbrains.mps.baseLanguage.structure.PrimitiveType")) {
    SNode replacing=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.PrimitiveClassExpression",null);
    SLinkOperations.setTarget(replacing,"primitiveType",SNodeOperations.cast(statedType,"jetbrains.mps.baseLanguage.structure.PrimitiveType"),true);
    SNodeOperations.replaceWithAnother(node,replacing);
  }
}
