{
  if (scriptNode == null) {
    return null;
  }
  String fqClassName=ScriptNameUtil.getMigrationScriptFqClassName(scriptNode);
  Class<BaseMigrationScript> aClass;
  String languageNamespace=NameUtil.namespaceFromLongName(fqClassName);
  languageNamespace=languageNamespace.substring(0,languageNamespace.length() - ".scripts".length());
  IModule mod=ModuleRepositoryFacade.getInstance().getModule(languageNamespace,Language.class);
  if (mod == null) {
    Solution sol=ModuleRepositoryFacade.getInstance().getModule(languageNamespace,Solution.class);
    if (sol != null && sol.getModuleDescriptor().getKind() == SolutionKind.PLUGIN_OTHER) {
      mod=sol;
    }
  }
  if (mod == null) {
    LOG.error("Module not found: " + languageNamespace);
    return null;
  }
  aClass=mod.getClass(fqClassName);
  if (aClass == null) {
    return null;
  }
  try {
    Constructor<BaseMigrationScript> constructor=aClass.getConstructor(IOperationContext.class);
    return constructor.newInstance(context);
  }
 catch (  InstantiationException e) {
    throw new RuntimeException(e);
  }
catch (  IllegalAccessException e) {
    throw new RuntimeException(e);
  }
catch (  NoSuchMethodException e) {
    throw new RuntimeException(e);
  }
catch (  InvocationTargetException e) {
    throw new RuntimeException(e);
  }
}
