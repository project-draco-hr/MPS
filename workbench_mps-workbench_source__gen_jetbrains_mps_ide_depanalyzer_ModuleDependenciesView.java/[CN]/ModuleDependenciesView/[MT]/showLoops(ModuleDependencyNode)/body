{
  final SModule module=ListSequence.fromList(node.getModules()).first();
  final MPSTree tree=node.getTree();
  ModuleDependencyNode parent=node.getFromNode();
  if (parent != null && ListSequence.fromList(parent.getModules()).count() == 1 && ListSequence.fromList(parent.getModules()).first() == module) {
    return;
  }
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      tree.expandPath(new TreePath(node.getPath()));
      for (      MPSTreeNode child : Sequence.fromIterable(node)) {
        ModuleDependencyNode n=as_jxc64t_a0a0a1a0a0a0a6a01(child,ModuleDependencyNode.class);
        if (n == null) {
          continue;
        }
        if (ListSequence.fromList(n.getModules()).first() == module) {
          tree.selectNode(n);
        }
      }
    }
  }
);
}
