{
  final MPSTree tree=node.getTree();
  final ModuleDependencyNode parent=node.getFromNode();
  if (ListSequence.fromList(parent.getModules()).isEmpty()) {
    return;
  }
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      tree.expandPath(new TreePath(node.getPath()));
      for (      MPSTreeNode child : Sequence.fromIterable(node)) {
        ModuleDependencyNode n=as_jxc64t_a0a0a2a0a0a0a4a8(child,ModuleDependencyNode.class);
        if (n == null) {
          continue;
        }
        if (ListSequence.fromList(parent.getModules()).contains(ListSequence.fromList(n.getModules()).first())) {
          tree.selectNode(n);
          break;
        }
      }
    }
  }
);
}
