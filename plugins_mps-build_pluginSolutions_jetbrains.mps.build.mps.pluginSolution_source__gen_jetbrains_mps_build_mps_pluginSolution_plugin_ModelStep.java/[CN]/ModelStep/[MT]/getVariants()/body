{
  final Solution solution=this.myGenerator.getSolution();
  if (solution == null) {
    return new SModel[0];
  }
 else {
    List<SModel> models=ModelAccess.instance().runReadAction(new Computable<List<SModel>>(){
      @Override public List<SModel> compute(){
        Iterable<SModel> models=Sequence.fromIterable(Collections.<SModel>emptyList());
        for (        ModelRoot mr : solution.getModelRoots()) {
          models=Sequence.fromIterable(models).concat(Sequence.fromIterable(mr.getModels()));
        }
        return Sequence.fromIterable(models).where(new IWhereFilter<SModel>(){
          public boolean accept(          SModel it){
            return it instanceof EditableSModel && !(((EditableSModel)it).isReadOnly());
          }
        }
).toListSequence();
      }
    }
);
    return ListSequence.fromList(models).toGenericArray(SModel.class);
  }
}
