{
  String result="Supported parameters:\n";
  if (Sequence.fromIterable(BehaviorReflection.invokeVirtualStatic((Class<Iterable<SNode>>)((Class)Object.class),SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SConceptOperations.findConceptDeclaration(thisConcept.getQualifiedName()))),"virtual_getSupportedParameters_4307205004146936444",new Object[]{})).contains(SConceptOperations.findConceptDeclaration("jetbrains.mps.console.blCommand.structure.QueryParameterScope"))) {
    result+="scope  (default = project)   scope where to search\n";
  }
  if (Sequence.fromIterable(BehaviorReflection.invokeVirtualStatic((Class<Iterable<SNode>>)((Class)Object.class),SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SConceptOperations.findConceptDeclaration(thisConcept.getQualifiedName()))),"virtual_getSupportedParameters_4307205004146936444",new Object[]{})).contains(SConceptOperations.findConceptDeclaration("jetbrains.mps.console.blCommand.structure.QueryParameterIncludeReadOnly"))) {
    result+="r/o+   (default = false)     also search in read-only models\n";
  }
 else {
    result+="Note: read-only models are included in search scope\n";
  }
  return result;
}
