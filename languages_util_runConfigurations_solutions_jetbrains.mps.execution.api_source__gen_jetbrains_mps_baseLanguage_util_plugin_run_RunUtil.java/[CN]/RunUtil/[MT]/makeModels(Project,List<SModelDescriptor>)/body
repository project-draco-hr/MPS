{
  if (ListSequence.<SModelDescriptor>fromList(models).isEmpty()) {
    return true;
  }
  MakeSession session=new MakeSession(ProjectOperationContext.get(project),null,true);
  if (IMakeService.INSTANCE.get().openNewSession(session)) {
    Future<IResult> future=IMakeService.INSTANCE.get().make(session,new ModelsToResources(ProjectOperationContext.get(project),models).resources(false));
    IResult result=null;
    try {
      result=future.get();
    }
 catch (    CancellationException ignore) {
    }
catch (    InterruptedException ignore) {
    }
catch (    ExecutionException ignore) {
    }
    return result != null && result.isSucessful();
  }
  return true;
}
