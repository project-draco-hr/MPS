{
  super(context);
  myBaseNode=baseNode;
  myPossibleTabs=possibleTabs;
  myContext=context;
  myColorProvider=Extensions.getRootArea().getExtensionPoint(TabColorProvider.EP_NAME).getExtension();
  myTabsComponent=TabComponentFactory.createTabsComponent(baseNode,possibleTabs,getComponent(),new NodeChangeCallback(){
    public void changeNode(    SNode newNode){
      showNodeInternal(newNode,!newNode.isRoot(),true);
    }
  }
,new CreateModeCallback(){
    public void exitCreateMode(){
      showEditor();
    }
    public void enterCreateMode(    JComponent replace){
      showComponent(replace);
    }
  }
);
  showNode(baseNode.getNode(),false);
  JComponent c=myTabsComponent.getComponent();
  if (c != null) {
    getComponent().add(c,BorderLayout.SOUTH);
  }
  myNextTabAction=new BaseNavigationAction(IdeActions.ACTION_NEXT_EDITOR_TAB,getComponent()){
    public void actionPerformed(    AnActionEvent e){
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          myTabsComponent.nextTab();
        }
      }
);
    }
  }
;
  myPrevTabAction=new BaseNavigationAction(IdeActions.ACTION_PREVIOUS_EDITOR_TAB,getComponent()){
    public void actionPerformed(    AnActionEvent e){
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          myTabsComponent.prevTab();
        }
      }
);
    }
  }
;
}
