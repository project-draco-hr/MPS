{
  SNode rule=SNodeOperations.getAncestor(templateReference,"jetbrains.mps.lang.generator.structure.BaseMappingRule",false,false);
  if (rule != null) {
    SNode templateApplicableConcept=SLinkOperations.getTarget(SLinkOperations.getTarget(templateReference,"template",false),"applicableConcept",false);
    SNode ruleApplicableConcept=SLinkOperations.getTarget(rule,"applicableConcept",false);
    if (ruleApplicableConcept != null && templateApplicableConcept != null) {
      if (!(SConceptOperations.isSubConceptOf(ruleApplicableConcept,NameUtil.nodeFQName(templateApplicableConcept)))) {
{
          BaseIntentionProvider intentionProvider=null;
          typeCheckingContext.reportTypeError(templateReference,"template is not applicable to the rule concept '" + SPropertyOperations.getString(ruleApplicableConcept,"name") + "'","r:00000000-0000-4000-0000-011c895902e4(jetbrains.mps.lang.generator.helgins)","1183153489205",intentionProvider);
        }
      }
    }
  }
}
