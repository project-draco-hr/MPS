{
  final String[] result={"OK"};
  ApplicationManager.getApplication().invokeAndWait(new Runnable(){
    public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          LocalFileSystem lfs=LocalFileSystem.getInstance();
          Project project=myProjectManager.newProject(path + File.separator + name+ ".ipr",true,false);
          ProjectRootManagerEx projectRootManager=(ProjectRootManagerEx)ProjectRootManagerEx.getInstance(project);
          projectRootManager.setLanguageLevel(LanguageLevel.JDK_1_5);
          ModuleManager moduleManager=project.getComponent(ModuleManager.class);
          Module module=moduleManager.newModule(path + File.separator + name+ ".iml",ModuleType.JAVA);
          ModuleRootManager rootManager=module.getComponent(ModuleRootManager.class);
          ModifiableRootModel rootModel=rootManager.getModifiableModel();
          ProjectJdk jdk=findSuitableJDK();
          if (jdk == null) {
            result[0]="Can't find suitable JDK";
            return;
          }
          rootModel.setJdk(jdk);
          VirtualFile contentRootFile=lfs.refreshAndFindFileByIoFile(new File(path));
          if (contentRootFile == null)           return;
          rootModel.addContentEntry(contentRootFile);
          try {
            if (contentRootFile.findChild("classes") == null) {
              contentRootFile.createChildDirectory(this,"classes");
            }
            rootModel.setCompilerOutputPath(contentRootFile.findChild("classes"));
            rootModel.setExcludeOutput(true);
          }
 catch (          IOException e) {
            e.printStackTrace();
          }
          rootModel.commit();
          myProjectManager.openProject(project);
          project.save();
        }
      }
);
    }
  }
,ModalityState.NON_MODAL);
  return result[0];
}
