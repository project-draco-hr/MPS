{
  JPanel usedLangsTab=new JPanel();
  usedLangsTab.setLayout(new GridLayoutManager(1,1,INSETS,-1,-1));
  final JBTable usedLangsTable=new JBTable();
  usedLangsTable.setShowHorizontalLines(false);
  usedLangsTable.setShowVerticalLines(false);
  usedLangsTable.setAutoCreateRowSorter(false);
  usedLangsTable.setAutoscrolls(true);
  usedLangsTable.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
  myUsedLangsTableModel=getUsedLangsTableModel();
  usedLangsTable.setModel(myUsedLangsTableModel);
  myUsedLangsTable=usedLangsTable;
  usedLangsTable.setDefaultRenderer(UsedLangsTableModel.Import.class,getTableCellRender());
  ToolbarDecorator decorator=createToolbar(usedLangsTable);
  decorator.setPreferredSize(new Dimension(500,300));
  JPanel table=decorator.createPanel();
  table.setBorder(IdeBorderFactory.createBorder());
  usedLangsTab.add(table,new GridConstraints(0,0,1,1,GridConstraints.ANCHOR_CENTER,GridConstraints.FILL_BOTH,GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,null,null,null,0,false));
  setTabComponent(usedLangsTab);
  new TableColumnSearch(usedLangsTable,UsedLangsTableModel.ITEM_COLUMN).setComparator(new SpeedSearchComparator(false,true));
}
