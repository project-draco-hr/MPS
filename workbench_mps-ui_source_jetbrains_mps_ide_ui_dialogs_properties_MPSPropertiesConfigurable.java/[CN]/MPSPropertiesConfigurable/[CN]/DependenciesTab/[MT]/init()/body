{
  JPanel dependenciesTab=new JPanel();
  dependenciesTab.setLayout(new GridLayoutManager(1,1,INSETS,-1,-1));
  final JBTable tableDepend=new JBTable();
  tableDepend.setShowHorizontalLines(false);
  tableDepend.setShowVerticalLines(false);
  tableDepend.setAutoCreateRowSorter(false);
  tableDepend.setAutoscrolls(true);
  tableDepend.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
  myDependTableModel=getDependTableModel();
  tableDepend.setModel(myDependTableModel);
  tableDepend.setDefaultRenderer(DependenciesTableItem.class,getTableCellRender());
  tableDepend.setDefaultRenderer(Boolean.class,new BooleanTableCellRenderer());
  tableDepend.setDefaultRenderer(SDependencyScope.class,new ComboBoxTableRenderer<SDependencyScope>(SDependencyScope.values()));
  tableDepend.setDefaultEditor(SDependencyScope.class,getTableCellEditor());
  TableColumn column=null;
  if (myDependTableModel.getExportColumnIndex() >= 0) {
    column=tableDepend.getTableHeader().getColumnModel().getColumn(myDependTableModel.getExportColumnIndex());
    column.setMinWidth(20);
    column.setPreferredWidth(50);
    column.setMaxWidth(50);
  }
  if (myDependTableModel.getRoleColumnIndex() >= 0) {
    column=tableDepend.getTableHeader().getColumnModel().getColumn(myDependTableModel.getRoleColumnIndex());
    column.setMinWidth(80);
    column.setPreferredWidth(130);
    column.setMaxWidth(200);
  }
  if (myDependTableModel.getItemColumnIndex() >= 0) {
    column=tableDepend.getTableHeader().getColumnModel().getColumn(myDependTableModel.getItemColumnIndex());
    column.setPreferredWidth(250);
  }
  ToolbarDecorator decorator=ToolbarDecorator.createDecorator(tableDepend);
  decorator.setAddAction(getAnActionButtonRunnable()).setRemoveAction(new RemoveEntryAction(tableDepend){
    @Override protected boolean confirmRemove(    int row){
      return DependenciesTab.this.confirmRemove(myDependTableModel.getValueAt(row,myDependTableModel.getItemColumnIndex()));
    }
  }
);
  FindAnActionButton findAnActionButton=getFindAnAction(tableDepend);
  if (findAnActionButton != null)   decorator.addExtraAction(findAnActionButton);
  decorator.setPreferredSize(new Dimension(500,300));
  JPanel table=decorator.createPanel();
  table.setBorder(IdeBorderFactory.createBorder());
  dependenciesTab.add(table,new GridConstraints(0,0,1,1,GridConstraints.ANCHOR_CENTER,GridConstraints.FILL_BOTH,GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,null,null,null,0,false));
  setTabComponent(dependenciesTab);
  new TableColumnSearch(tableDepend,myDependTableModel.getItemColumnIndex()).setComparator(new SpeedSearchComparator(false,true));
}
