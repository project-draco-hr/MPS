{
  if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.structure.ConstructorDeclaration")) {
    return false;
  }
  SNode contextNode=editorContext.getSelectedNode();
  if (contextNode == null) {
    return true;
  }
  List<SNode> includingStatementLists=SNodeOperations.getAncestors(contextNode,"jetbrains.mps.baseLanguage.structure.StatementList",true);
  Iterable<SNode> includingBodies=ListSequence.fromList(includingStatementLists).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.hasRole(it,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration","body");
    }
  }
);
  return Sequence.fromIterable(includingBodies).isEmpty();
}
