{
  super.onAdd();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      updatePresentation();
    }
  }
);
  if (isWithModelListener()) {
    myEventsCollector=new MyEventsCollector();
    mySNodeModelListener=new MySNodeModelListener();
    myTreeUpdater=new SNodeTreeUpdater(getOperationContext(),new DependencyRecorder<SNodeTreeNode>(),getTree());
    myTreeUpdater.addListener(new SNodeTreeListener(this){
      public void addAndRemoveRoots(      Set<SNode> removedRoots,      Set<SNode> addedRoots){
        DefaultTreeModel treeModel=(DefaultTreeModel)getTree().getModel();
        for (        SNode removedRoot : removedRoots) {
          if (removedRoot.equals(getSNode())) {
            treeModel.removeNodeFromParent(SNodeTreeNode.this);
          }
        }
      }
      public void addAndRemoveVisibleChildren(      Set<SNode> removedNodes,      Set<SNode> addedNodes){
      }
      public void updateChangedPresentations(      Set<SNode> nodesWithChangedPresentations){
      }
      public void updateChangedRefs(      Set<SNode> nodesWithChangedRefs){
      }
      public void updateNodesWithChangedPackages(      Set<SNode> nodesWithChangedPackages){
      }
    }
);
    addListeners();
  }
}
