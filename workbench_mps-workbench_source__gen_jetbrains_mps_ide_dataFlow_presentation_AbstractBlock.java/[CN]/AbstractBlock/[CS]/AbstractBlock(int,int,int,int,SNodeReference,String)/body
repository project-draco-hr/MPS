{
  this.myX=x;
  this.myY=y;
  this.myWidth=width;
  this.myHeight=height;
  this.mySourceNode=sourceNode;
  this.myCaption=caption;
  if (mySourceNode != null) {
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        for (        SNode concept : ListSequence.fromList(SConceptOperations.getAllSuperConcepts(SNodeOperations.getConceptDeclaration(((SNode)mySourceNode.resolve(MPSModuleRepository.getInstance()))),true))) {
          SNode dataFlow=BehaviorReflection.invokeNonVirtual((Class<SNode>)((Class)Object.class),((SNode)concept),"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration","call_findConceptAspect_8360039740498068384",new Object[]{LanguageAspect.DATA_FLOW});
          if (dataFlow != null) {
            myRuleNode=dataFlow.getReference();
            return;
          }
        }
      }
    }
);
  }
}
