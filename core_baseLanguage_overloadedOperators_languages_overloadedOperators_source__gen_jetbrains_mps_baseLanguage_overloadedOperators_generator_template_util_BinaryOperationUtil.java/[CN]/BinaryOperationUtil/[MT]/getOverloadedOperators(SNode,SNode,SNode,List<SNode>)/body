{
  Map<SNode,Boolean> result=MapSequence.<SNode,Boolean>fromMap(new HashMap<SNode,Boolean>());
  if (!(SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.structure.BinaryOperation"))) {
    return result;
  }
  for (  SNode operator : operators) {
    if (isOverloading(SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.BinaryOperation"),leftType,rightType,operator)) {
      MapSequence.<SNode,Boolean>fromMap(result).put(operator,false);
    }
    if (SPropertyOperations.getBoolean(operator,"commutative") && isOverloading(SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.BinaryOperation"),rightType,leftType,operator)) {
      MapSequence.<SNode,Boolean>fromMap(result).put(operator,true);
    }
  }
  return result;
}
