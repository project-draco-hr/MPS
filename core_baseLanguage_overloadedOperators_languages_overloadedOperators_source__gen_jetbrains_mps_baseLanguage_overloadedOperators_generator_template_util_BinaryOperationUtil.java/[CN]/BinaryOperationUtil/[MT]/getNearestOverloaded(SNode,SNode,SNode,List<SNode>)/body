{
  if (!(SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.structure.BinaryOperation"))) {
    return null;
  }
  operators=getOverloadedOperators(SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.BinaryOperation"),leftType,rightType,operators);
  if (ListSequence.fromList(operators).count() == 0) {
    return null;
  }
  SNode result=ListSequence.fromList(operators).first();
  for (  SNode operator : operators) {
    if (isSubTypeOperator(operator,result)) {
      result=operator;
    }
  }
  return result;
}
