{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case 0:
    return props_GenerationContextOp_Base;
case 1:
  return props_GenerationContextOp_ContextVarRef;
case 2:
return props_GenerationContextOp_CopyWithTrace;
case 3:
return props_GenerationContextOp_CreateUniqueName;
case 4:
return props_GenerationContextOp_DirtyNode;
case 5:
return props_GenerationContextOp_GenParameterRef;
case 6:
return props_GenerationContextOp_GetCopiedOutputByInput;
case 7:
return props_GenerationContextOp_GetExport;
case 8:
return props_GenerationContextOp_GetInputModel;
case 9:
return props_GenerationContextOp_GetInvocationContext;
case 10:
return props_GenerationContextOp_GetOriginalCopiedInputByOutput;
case 11:
return props_GenerationContextOp_GetOriginalInputModel;
case 12:
return props_GenerationContextOp_GetOutputByLabel;
case 13:
return props_GenerationContextOp_GetOutputByLabelAndInput;
case 14:
return props_GenerationContextOp_GetOutputByLabelAndInputAndReferenceScope;
case 15:
return props_GenerationContextOp_GetOutputListByLabelAndInput;
case 16:
return props_GenerationContextOp_GetOutputModel;
case 17:
return props_GenerationContextOp_GetPrevInputByLabel;
case 18:
return props_GenerationContextOp_GetTemplateNode;
case 19:
return props_GenerationContextOp_LinkPatternRef;
case 20:
return props_GenerationContextOp_NodePatternRef;
case 21:
return props_GenerationContextOp_ParameterRef;
case 22:
return props_GenerationContextOp_PatternRef;
case 23:
return props_GenerationContextOp_PropertyPatternRef;
case 24:
return props_GenerationContextOp_RegisterLabel;
case 25:
return props_GenerationContextOp_SessionObjectAccess;
case 26:
return props_GenerationContextOp_ShowErrorMessage;
case 27:
return props_GenerationContextOp_ShowInfoMessage;
case 28:
return props_GenerationContextOp_ShowMessageBase;
case 29:
return props_GenerationContextOp_ShowWarningMessage;
case 30:
return props_GenerationContextOp_StepObjectAccess;
case 31:
return props_GenerationContextOp_TransientObjectAccess;
case 32:
return props_GenerationContextOp_UserObjectAccessBase;
case 33:
return props_GenerationContextOp_VarRef;
case 34:
return props_GenerationContextType;
case 35:
return props_TemplateFunctionParameter_generationContext;
}
throw new IllegalStateException("Unknown concept " + c);
}
