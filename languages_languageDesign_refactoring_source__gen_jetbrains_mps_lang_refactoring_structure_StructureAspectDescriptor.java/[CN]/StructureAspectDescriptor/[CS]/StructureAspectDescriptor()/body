{
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.AbstractMoveExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodeExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodesExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.AffectedNodesClause",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.ChangeFeatureNameExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_Model",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_Module",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_SModel",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_SNode",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.ContextType",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.CreateRefactoringContext",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.DeleteFeatureExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.DoRefactorClause",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.DoWhenDoneClause",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.ExecuteRefactoringStatement",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.GetModelsToUpdateClause",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.InitClause",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.IsApplicableToModelClause",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.IsApplicableToModuleClause",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.IsApplicableToNodeClause",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.IsRefactoringApplicable",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.MainProjectOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.MergeNodeWithAnotherNodeExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.ModelDescriptorOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.ModelTarget",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.ModelsToGenerateByDefault",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.ModelsToGenerateClause",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.ModuleOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.ModuleTarget",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.MoveNodeToModelExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.MoveNodeToNodeExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.MoveNodesToModelExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.MoveNodesToNodeExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.NodeOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.NodeTarget",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.NodesOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.OperationContextOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.ProjectOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.Refactoring",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.RefactoringAction",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.RefactoringArgument",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.RefactoringArgumentReference",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.RefactoringContext_ConceptFunctionParameter",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.RefactoringField",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.RefactoringFieldReference",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.RefactoringParameter",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.RefactoringParameterReference",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.RefactoringTarget",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.RepositoryOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.ScopeOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.UpdateModelByDefaultOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.UpdateModelClause",null);
  myFqNameToConcept.put("jetbrains.mps.lang.refactoring.structure.UpdateModelProcedure",null);
}
