{
  clearForTypesModel(typesModel);
  for (  ContextDeclaration contextDeclaration : typesModel.getRoots(ContextDeclaration.class)) {
    ContextsManager.getInstance().registerNewContext(contextDeclaration.getName());
  }
  for (  VariableSetDeclaration varset : typesModel.getRoots(VariableSetDeclaration.class)) {
    TypeVariablesManager.getInstance().registerNewVarset(varset);
  }
  for (  EquationSetDeclaration equationSet : typesModel.getRoots(EquationSetDeclaration.class)) {
  }
  ourRules=new ArrayList<Rule>();
  for (  Rule rule : typesModel.getRoots(Rule.class)) {
    ourRules.add(rule);
  }
  doCheckTypes(root);
  Set<Set<Pair<SNode,NodeWrapperType>>> allContexts=ContextsManager.getInstance().getAllContexts();
  if (allContexts.isEmpty())   return;
  Set<Pair<SNode,NodeWrapperType>> mainContext=allContexts.iterator().next();
  for (  Pair<SNode,NodeWrapperType> contextEntry : mainContext) {
    SNode term=contextEntry.o1;
    term.putUserObject(TYPE_OF_TERM,contextEntry.o2);
  }
}
