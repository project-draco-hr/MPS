{
  clearForTypesModel(typesModel);
  for (  ContextDeclaration contextDeclaration : typesModel.getRoots(ContextDeclaration.class)) {
    ContextsManager.getInstance().registerNewContext(contextDeclaration.getName());
  }
  for (  EquationSetDeclaration equationSet : typesModel.getRoots(EquationSetDeclaration.class)) {
  }
  List<Rule> rules=new ArrayList<Rule>();
  for (  Rule rule : typesModel.getRoots(Rule.class)) {
    rules.add(rule);
  }
  List<SNode> frontier=new ArrayList<SNode>();
  List<SNode> newFrontier=new ArrayList<SNode>();
  frontier.add(root);
  while (!(frontier.isEmpty())) {
    for (    SNode node : frontier) {
      newFrontier.addAll(node.getChildren());
      for (      Rule rule : rules) {
        Interpretator.interpretate(node,rule);
      }
    }
    frontier=newFrontier;
    newFrontier=new ArrayList<SNode>();
  }
  Set<Set<Pair<SNode,IType>>> allContexts=ContextsManager.getInstance().getAllContexts();
  if (allContexts.isEmpty())   return;
  Set<Pair<SNode,IType>> mainContext=allContexts.iterator().next();
  for (  Pair<SNode,IType> contextEntry : mainContext) {
    SNode term=contextEntry.o1;
    term.putUserObject(TYPE_OF_TERM,contextEntry.o2);
  }
}
