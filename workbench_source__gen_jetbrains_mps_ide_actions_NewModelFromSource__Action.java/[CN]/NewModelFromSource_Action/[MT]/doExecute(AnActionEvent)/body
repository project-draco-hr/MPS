{
  try {
    if (NewModelFromSource_Action.this.module.getSModelRoots().size() == 0) {
      int code=JOptionPane.showConfirmDialog(NewModelFromSource_Action.this.frame,"There are no model roots. Do you want to create one?","",JOptionPane.YES_NO_OPTION);
      if (code != JOptionPane.YES_OPTION) {
        return;
      }
 else {
        NewModelUtil.ShowModulePropertiesDialog(NewModelFromSource_Action.this.module,NewModelFromSource_Action.this.context);
      }
    }
    if (NewModelFromSource_Action.this.module.getSModelRoots().size() == 0) {
      JOptionPane.showMessageDialog(NewModelFromSource_Action.this.frame,"Can't create a model in solution with no model roots","Can't create model",JOptionPane.ERROR_MESSAGE);
      return;
    }
    final Wrappers._T<NewModelDialog> dialog=new Wrappers._T<NewModelDialog>();
    final IOperationContext localContext=NewModelFromSource_Action.this.context;
    final IModule localModule=(localContext.getModule() != null ? localContext.getModule() : NewModelFromSource_Action.this.module);
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        String stereotype=NewModelFromSource_Action.this.getStereotype();
        dialog.value=new NewModelDialog(localModule,NewModelFromSource_Action.this.getNamespace(),localContext,stereotype,NewModelFromSource_Action.this.isStrict());
      }
    }
);
    dialog.value.showDialog();
    SModelDescriptor result=dialog.value.getResult();
    if (result != null) {
      TreeFileChooser treeFileChooser=new TreeFileChooser();
      treeFileChooser.setDirectoriesAreAlwaysVisible(true);
      treeFileChooser.setMode(TreeFileChooser.MODE_DIRECTORIES);
      final SModel sModel=result.getSModel();
      treeFileChooser.setFileFilter(new IFileFilter(){
        public boolean accept(        IFile file){
          return JavaCompiler.checkBaseModelMatchesSourceDirectory(sModel,file.toFile());
        }
      }
);
      String generatorOutputPath=NewModelFromSource_Action.this.module.getGeneratorOutputPath();
      File initial=null;
      File output=new File(generatorOutputPath);
      if (output.exists()) {
        initial=output;
        File sourceRoot=new File(initial.getParentFile(),"source");
        if (!(sourceRoot.exists())) {
          sourceRoot=new File(initial.getParentFile(),"src");
        }
        initial=sourceRoot;
        if (sourceRoot.exists()) {
          File modelSource=new File(sourceRoot,NameUtil.pathFromNamespace(sModel.getLongName()));
          if (modelSource.exists()) {
            initial=modelSource;
          }
        }
      }
      if (initial != null) {
        treeFileChooser.setInitialFile(new FileSystemFile(initial));
      }
      IFile resultFile=treeFileChooser.showDialog(NewModelFromSource_Action.this.frame);
      if (resultFile != null) {
        JavaCompiler javaCompiler=new JavaCompiler(NewModelFromSource_Action.this.context,NewModelFromSource_Action.this.module,resultFile.toFile(),false,sModel);
        javaCompiler.compile();
      }
      SModelDescriptor modelDescriptor=result;
      ProjectPane.getInstance(NewModelFromSource_Action.this.project).selectModel(modelDescriptor);
    }
  }
 catch (  Throwable t) {
    if (log.isErrorEnabled()) {
      log.error("User's action execute method failed. Action:" + "NewModelFromSource",t);
    }
  }
}
