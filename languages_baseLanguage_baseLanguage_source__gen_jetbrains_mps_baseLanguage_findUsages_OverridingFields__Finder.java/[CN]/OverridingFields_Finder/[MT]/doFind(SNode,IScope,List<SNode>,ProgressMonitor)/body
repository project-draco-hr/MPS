{
  monitor.start(getDescription(),1);
  try {
    for (    SNode classNode : ListSequence.fromList(FindUtils.executeFinder("jetbrains.mps.baseLanguage.findUsages.DerivedClasses_Finder",SNodeOperations.getParent(node),scope,monitor.subTask(1)))) {
      Iterable<SNode> fieldsOfSameKind;
      if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.structure.FieldDeclaration")) {
        fieldsOfSameKind=SLinkOperations.getTargets(SNodeOperations.cast(classNode,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"field",true);
      }
 else {
        fieldsOfSameKind=SLinkOperations.getTargets(SNodeOperations.cast(classNode,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"staticField",true);
      }
      for (      SNode field : Sequence.fromIterable(fieldsOfSameKind)) {
        if (SPropertyOperations.getString(field,"name").equals(SPropertyOperations.getString(node,"name")) && BehaviorReflection.invokeVirtual(String.class,SLinkOperations.getTarget(field,"type",true),"virtual_getErasureSignature_1213877337313",new Object[]{}).equals(BehaviorReflection.invokeVirtual(String.class,SLinkOperations.getTarget(node,"type",true),"virtual_getErasureSignature_1213877337313",new Object[]{}))) {
          ListSequence.fromList(_results).addElement(field);
        }
      }
    }
  }
  finally {
    monitor.done();
  }
}
