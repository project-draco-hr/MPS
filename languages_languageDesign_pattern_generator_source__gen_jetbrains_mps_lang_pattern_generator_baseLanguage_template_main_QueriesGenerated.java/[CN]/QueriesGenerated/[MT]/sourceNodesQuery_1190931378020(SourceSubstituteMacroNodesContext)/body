{
  final List<SNode> result=new ArrayList<SNode>();
  final Set<SContainmentLink> processedRoles=SetSequence.fromSet(new HashSet<SContainmentLink>());
  for (  SNode child : Sequence.fromIterable(_context.getNode().getChildren())) {
    if (AttributeOperations.isAttribute(child)) {
      continue;
    }
    SContainmentLink role=child.getContainmentLink();
    if (SetSequence.fromSet(processedRoles).contains(role)) {
      continue;
    }
    SetSequence.fromSet(processedRoles).addElement(role);
    SNode childRoleNode=SModelOperations.createNewNode(_context.getOutputModel(),null,SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xd4615e3bd6714ba9L,0xaf012b78369b0ba7L,0x7e881d31a4196e17L,"jetbrains.mps.lang.pattern.structure.GeneratorInternal_ChildDescriptor")));
    SLinkOperations.setTarget(childRoleNode,MetaAdapterFactory.getReferenceLink(0xd4615e3bd6714ba9L,0xaf012b78369b0ba7L,0x7e881d31a4196e17L,0x7e881d31a41979c5L,"childLinkDeclaration"),(SNode)role.getDeclarationNode());
    SLinkOperations.setTarget(childRoleNode,MetaAdapterFactory.getReferenceLink(0xd4615e3bd6714ba9L,0xaf012b78369b0ba7L,0x7e881d31a4196e17L,0x7e881d31a4197b70L,"mainNode"),_context.getNode());
    ListSequence.fromList(result).addElement(childRoleNode);
  }
  return result;
}
