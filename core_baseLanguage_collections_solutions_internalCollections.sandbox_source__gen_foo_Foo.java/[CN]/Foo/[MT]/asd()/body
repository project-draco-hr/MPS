{
  List<Integer> l=null;
  ListSequence.<Integer>fromList(l).addSequence(ListSequence.<Integer>fromList(l));
  ListSequence.<Integer>fromList(l).insertElement(0,1);
  Queue<Integer> q=QueueSequence.<Integer>fromQueue(new PriorityQueue<Integer>());
  QueueSequence.fromQueue(q).addSequence(ListSequence.<Integer>fromList(l));
  QueueSequence.fromQueue(q).addSequence(QueueSequence.<Integer>fromQueue(q));
  Deque<Integer> d=DequeSequence.<Integer>fromDeque(new LinkedList<Integer>());
  DequeSequence.fromDeque(d).addSequence(DequeSequence.<Integer>fromDeque(d));
  DequeSequence.fromDeque(d).addFirstElement(1);
  DequeSequence.fromDeque(d).addLastElement(1);
  Deque<Integer> s=DequeSequence.<Integer>fromDeque(new LinkedList<Integer>());
  DequeSequence.fromDeque(s).addFirstElement(1);
  DequeSequence.fromDeque(s).popElement();
  DequeSequence.fromDeque(s).pushElement(1);
}
