{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0x97a52717898f4598L,0x8150573d9fd03868L,0x3a887e9da0b4cedcL,0x3a887e9da0b4cee5L,"instruction"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x97a52717898f4598L,0x8150573d9fd03868L,0x3a887e9da0b4cedcL,0x3a887e9da0b4cee5L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          List<SNode> result=new ArrayList<SNode>();
          SNode analyzer=SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getContextNode(),MetaAdapterFactory.getConcept(0x97a52717898f4598L,0x8150573d9fd03868L,0x5faaa6bbd57b6c8L,"jetbrains.mps.lang.dataFlow.analyzers.structure.Rule"),false,false),MetaAdapterFactory.getReferenceLink(0x97a52717898f4598L,0x8150573d9fd03868L,0x5faaa6bbd57b6c8L,0x3952cf7bd76e6440L,"analyzer"));
          ListSequence.fromList(result).addSequence(ListSequence.fromList(SLinkOperations.getChildren(analyzer,MetaAdapterFactory.getContainmentLink(0x97a52717898f4598L,0x8150573d9fd03868L,0x5bd9e43c93f46789L,0x2e25b6b7919ac138L,"instruction"))).concat(ListSequence.fromList(SLinkOperations.getChildren(analyzer,MetaAdapterFactory.getContainmentLink(0x97a52717898f4598L,0x8150573d9fd03868L,0x5bd9e43c93f46789L,0x73e1fea9c173f804L,"usedContainers"))).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return (SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(0x97a52717898f4598L,0x8150573d9fd03868L,0x73e1fea9c1738798L,0x73e1fea9c1738799L,"containter")) != null);
            }
          }
).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(0x97a52717898f4598L,0x8150573d9fd03868L,0x73e1fea9c1738798L,0x73e1fea9c1738799L,"containter"));
            }
          }
).translate(new ITranslator2<SNode,SNode>(){
            public Iterable<SNode> translate(            SNode it){
              return SLinkOperations.getChildren(it,MetaAdapterFactory.getContainmentLink(0x97a52717898f4598L,0x8150573d9fd03868L,0x73e1fea9c172b8b1L,0x73e1fea9c172d0e9L,"instruction"));
            }
          }
)));
          return result;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_yymroq_a0a1a0a0a1a0b0a1a2;
        }
      }
;
    }
  }
);
  return references;
}
