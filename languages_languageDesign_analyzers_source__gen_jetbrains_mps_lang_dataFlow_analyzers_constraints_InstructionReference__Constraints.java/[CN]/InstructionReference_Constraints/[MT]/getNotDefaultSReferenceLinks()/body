{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(-7519561020779575912l,-9128700522494150552l),4217760266503638748l,4217760266503638757l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(-7519561020779575912l,-9128700522494150552l),4217760266503638748l,4217760266503638757l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          List<SNode> result=new ArrayList<SNode>();
          for (          SNode analyzer : SModelOperations.rootsIncludingImported(_context.getModel(),MetaAdapterFactory.getConcept(new UUID(-7519561020779575912l,-9128700522494150552l),6618572076229093257l,"jetbrains.mps.lang.dataFlow.analyzers.structure.Analyzer"))) {
            ListSequence.fromList(result).addSequence(ListSequence.fromList(SLinkOperations.getChildren(analyzer,MetaAdapterFactory.getContainmentLink(new UUID(-7519561020779575912l,-9128700522494150552l),6618572076229093257l,3325264799421088056l,"instruction"))));
          }
          return result;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_yymroq_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
