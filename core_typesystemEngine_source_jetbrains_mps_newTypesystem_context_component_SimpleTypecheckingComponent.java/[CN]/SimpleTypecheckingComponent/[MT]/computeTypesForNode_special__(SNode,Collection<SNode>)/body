{
  SNode type=null;
  SNode prevNode=null;
  SNode node=initialNode;
  long start=System.currentTimeMillis();
  setTarget(initialNode);
  while (node != null) {
    Collection<SNode> additionalNodes=givenAdditionalNodes;
    if (prevNode != null) {
      additionalNodes=new ArrayList<SNode>(additionalNodes);
      additionalNodes.add(prevNode);
    }
    computeTypesSpecial(node,false,additionalNodes,false,initialNode);
    type=typeCalculated(initialNode);
    if (type == null) {
      if (node.getModel() != null && node.getModel().isRoot(node)) {
        computeTypes(initialNode,node);
        type=getType(initialNode);
        if (type == null && node != initialNode) {
          TypeSystemComponent.LOG.error("No typesystem rule for " + org.jetbrains.mps.openapi.model.SNodeUtil.getDebugText(initialNode) + " in root "+ initialNode.getContainingRoot()+ ": type calculation took "+ (System.currentTimeMillis() - start)+ " ms",new Throwable(),new SNodePointer(initialNode));
        }
        return type;
      }
      prevNode=node;
      node=node.getParent();
    }
 else {
      type=typeCalculated(initialNode);
      return type;
    }
  }
  return type;
}
