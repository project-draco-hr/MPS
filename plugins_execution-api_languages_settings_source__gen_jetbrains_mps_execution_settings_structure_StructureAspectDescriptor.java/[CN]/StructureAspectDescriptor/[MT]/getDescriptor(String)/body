{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0hb,conceptFqName)) {
case 0:
    return myConceptApplyTo_Function;
case 1:
  return myConceptCheckProperitesOperation;
case 2:
return myConceptCheckProperties_Function;
case 3:
return myConceptConfiguration_Parameter;
case 4:
return myConceptCreateEditor_Function;
case 5:
return myConceptDeprecatedAnnotation;
case 6:
return myConceptDispose_Function;
case 7:
return myConceptEditorExpression;
case 8:
return myConceptEditorOperationCall;
case 9:
return myConceptEditorOperationDeclaration;
case 10:
return myConceptEditorPropertyDeclaration;
case 11:
return myConceptEditorPropertyReference;
case 12:
return myConceptGetEditorOperation;
case 13:
return myConceptGridBagConstraints;
case 14:
return myConceptIPersistentPropertyHolder;
case 15:
return myConceptPersistentConfiguration;
case 16:
return myConceptPersistentConfigurationAssistent;
case 17:
return myConceptPersistentConfigurationMethod;
case 18:
return myConceptPersistentConfigurationTemplate;
case 19:
return myConceptPersistentConfigurationTemplateInitializer;
case 20:
return myConceptPersistentConfigurationType;
case 21:
return myConceptPersistentPropertyDeclaration;
case 22:
return myConceptPersistentPropertyReferenceOperation;
case 23:
return myConceptReportConfigurationErrorStatement;
case 24:
return myConceptResetFrom_Function;
case 25:
return myConceptSettingsEditor;
case 26:
return myConceptSettingsEditorType;
case 27:
return myConceptTemplateParameter;
case 28:
return myConceptTemplateParameterReference;
case 29:
return myConceptTemplatePersistentConfigurationType;
default :
throw new IllegalStateException("Wrong fqName of the concept " + conceptFqName);
}
}
