{
  Set<SModelDescriptor> directSearch=new THashSet<SModelDescriptor>();
  Set<SModelDescriptor> cacheSearch=new THashSet<SModelDescriptor>();
  for (  SModelDescriptor model : scope.getModelDescriptors()) {
    if ((model instanceof EditableSModelDescriptor) && ((EditableSModelDescriptor)model).isChanged()) {
      directSearch.add(model);
    }
 else {
      cacheSearch.add(model);
    }
  }
  if (myCacheHandler != null) {
    directSearch.addAll(type.findMatchingModelsInCache(nodes,cacheSearch,myCacheHandler,null));
  }
 else {
    directSearch.addAll(cacheSearch);
  }
  Set<T> result=new HashSet<T>();
  if (monitor == null)   monitor=new EmptyProgressMonitor();
  monitor.start("Finding usages...",directSearch.size());
  try {
    result.addAll(type.findInModel(nodes,directSearch,new MyProgressNotifier(monitor)));
  }
  finally {
    monitor.done();
  }
  return result;
}
