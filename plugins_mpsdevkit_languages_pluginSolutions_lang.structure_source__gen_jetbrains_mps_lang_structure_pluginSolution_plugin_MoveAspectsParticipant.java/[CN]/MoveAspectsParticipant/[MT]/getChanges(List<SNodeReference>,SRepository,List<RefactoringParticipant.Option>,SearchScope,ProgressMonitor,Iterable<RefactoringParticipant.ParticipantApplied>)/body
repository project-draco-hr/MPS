{
  return ListSequence.fromList(initialStates).select(new ISelector<SNodeReference,List<RefactoringParticipant.Change<SNodeReference,SNodeReference>>>(){
    public List<RefactoringParticipant.Change<SNodeReference,SNodeReference>> select(    SNodeReference initialState){
      return getChanges(initialState,repository,selectedOptions,searchScope,progressMonitor,parents);
    }
  }
).toListSequence();
}
