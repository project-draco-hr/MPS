{
  Project project=getProject();
  PsiClass claz=JavaPsiFacade.getInstance(project).findClass(getClassName(),GlobalSearchScope.allScope(project));
  MPSPsiNode[] childTypeNodes=getChildTypeNodes();
  PsiType[] psiChildTypes=new PsiType[childTypeNodes.length];
  for (int i=0; i < childTypeNodes.length; i++) {
    MPSPsiNode typeNode=childTypeNodes[i];
    PsiType psiType;
    if (typeNode instanceof ComputesPsiType) {
      psiType=((ComputesPsiType)typeNode).getPsiType();
    }
 else {
      psiType=new NonJavaMPSType(PsiAnnotation.EMPTY_ARRAY);
    }
    psiChildTypes[i]=psiType;
  }
  PsiSubstitutor subst=PsiSubstitutor.EMPTY.putAll(claz,psiChildTypes);
  return new PsiImmediateClassType(claz,subst);
}
