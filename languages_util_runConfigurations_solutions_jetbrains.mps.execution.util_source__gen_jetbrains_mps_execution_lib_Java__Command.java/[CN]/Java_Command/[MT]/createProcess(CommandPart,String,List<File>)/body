{
  File java=Java_Command.getJavaCommand(myJrePath);
  if (StringUtils.isEmpty(className)) {
    throw new ExecutionException("Classname is empty");
  }
  if (check_yvpt_a0c0a2(programParameterCommand) >= Java_Command.getMaxCommandLine()) {
    File tmpFile=FileUtil.createTmpFile();
    tmpFile.deleteOnExit();
    try {
      PrintWriter writer=new PrintWriter(tmpFile);
      writer.append(IterableUtils.join(ListSequence.fromList(programParameterCommand.getCommandList())," "));
      writer.flush();
      writer.close();
      return new ProcessHandlerBuilder().append(java).append(myVirtualMachineParameterCommand).append(myDebuggerSettings).append(new KeyValueCommandPart("-" + "classpath",new ListCommandPart(classPathFiles,File.pathSeparator))).append(ClassRunner.class.getName()).append(new KeyValueCommandPart("-" + ClassRunner.CLASS_PREFIX,className)).append(new KeyValueCommandPart("-" + ClassRunner.FILE_PREFIX,tmpFile)).build(myWorkingDirectory);
    }
 catch (    FileNotFoundException e) {
      throw new ExecutionException("Could not create temporal file for program parameters.",e);
    }
  }
 else {
    return new ProcessHandlerBuilder().append(java).append(myVirtualMachineParameterCommand).append(myDebuggerSettings).append(new KeyValueCommandPart("-" + "classpath",new ListCommandPart(ListSequence.fromListAndArray(new ArrayList(),classPathFiles,className),File.pathSeparator))).append(className).append(programParameterCommand).build(myWorkingDirectory);
  }
}
