{
  setupEnvironment();
  Map<File,List<String>> mpsProjects=myWhatToDo.getMPSProjectFiles();
  for (  File file : mpsProjects.keySet()) {
    if (!file.getName().endsWith(MPSExtentions.DOT_MPS_PROJECT))     continue;
    final MPSProject p=TestMain.loadProject(file);
    info("Loaded project " + p);
    executeTask(p,new ObjectsToProcess(Collections.singleton(p),new java.util.HashSet<IModule>(),new java.util.HashSet<SModelDescriptor>()));
    disposeProject(p);
    dispose();
  }
  com.intellij.openapi.project.Project ideaProject=ProjectManager.getInstance().getDefaultProject();
  File projectFile=FileUtil.createTmpFile();
  final MPSProject project=new MPSProject(ideaProject);
  project.init(projectFile,new ProjectDescriptor());
  LinkedHashSet<IModule> modules=new LinkedHashSet<IModule>();
  LinkedHashSet<SModelDescriptor> models=new LinkedHashSet<SModelDescriptor>();
  collectFromModuleFiles(modules);
  collectFromModelFiles(models);
  executeTask(project,new ObjectsToProcess(Collections.EMPTY_SET,modules,models));
  generatePerformanceReport();
  projectFile.deleteOnExit();
  dispose();
  showStatistic();
}
