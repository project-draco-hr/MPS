{
  String currentTestName=myBuildServerMessageFormat.escapeBuildMessage(cycle.toString());
  System.out.println(myBuildServerMessageFormat.formatTestStart(currentTestName));
  final TesterGenerationType generationType=new TesterGenerationType(true);
  cycle.generate(gm,generationType,emptyProgressIndicator,myMessageHandler);
  List<String> diffReports;
  if (Boolean.parseBoolean(myWhatToDo.getProperty(TestGenerationOnTeamcity.SHOW_DIFF))) {
    diffReports=ModelAccess.instance().runReadAction(new Computable<List<String>>(){
      public List<String> compute(){
        return DiffReporter.createDiffReports(generationType);
      }
    }
);
  }
 else {
    diffReports=new ArrayList<String>();
  }
  final List<SModel> outputModels=new ArrayList<SModel>();
  outputModels.addAll(generationType.getOutputModels());
  List<CompilationResult> compilationResult;
  if (Boolean.parseBoolean(myWhatToDo.getProperty(GenerateTask.COMPILE))) {
    compilationResult=ModelAccess.instance().runReadAction(new Computable<List<CompilationResult>>(){
      public List<CompilationResult> compute(){
        return generationType.compile(IAdaptiveProgressMonitor.NULL_PROGRESS_MONITOR);
      }
    }
);
  }
 else {
    compilationResult=Collections.EMPTY_LIST;
  }
  List<TestFailure> testResults;
  if (Boolean.parseBoolean(myWhatToDo.getProperty(TestGenerationOnTeamcity.INVOKE_TESTS)) && Boolean.parseBoolean(myWhatToDo.getProperty(GenerateTask.COMPILE))) {
    testResults=ModelAccess.instance().runReadAction(new Computable<List<TestFailure>>(){
      public List<TestFailure> compute(){
        return ProjectTester.invokeTests(generationType,outputModels);
      }
    }
);
  }
 else {
    testResults=Collections.EMPTY_LIST;
  }
  StringBuffer sb=createDetailedReport(compilationResult,testResults,diffReports);
  myMessageHandler.clean();
  if (sb.length() > 0) {
    myTestFailed=true;
    System.out.append(myBuildServerMessageFormat.formatTestFailure(currentTestName,"Generation Errors",sb));
    System.out.println("");
  }
  System.out.println(myBuildServerMessageFormat.formatTestFinish(currentTestName));
}
