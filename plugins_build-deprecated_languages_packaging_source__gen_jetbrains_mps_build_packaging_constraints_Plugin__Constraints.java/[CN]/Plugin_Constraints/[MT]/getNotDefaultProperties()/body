{
  Map<String,PropertyConstraintsDescriptor> properties=new HashMap();
  properties.put("name",new BasePropertyConstraintsDescriptor("name",this){
    @Override public boolean hasOwnGetter(){
      return true;
    }
    @Override public Object getValue(    SNode node,    IScope scope){
      String propertyName="name";
{
        String suffix="";
        if (ListSequence.fromList(SLinkOperations.getTargets(node,"entry",true)).isEmpty()) {
          suffix=".jar";
        }
        if ((SLinkOperations.getTarget(node,"title",true) != null)) {
          return IStringExpression_Behavior.call_getValue_1213877173054(SLinkOperations.getTarget(node,"title",true)) + suffix;
        }
        return Path_Behavior.call_getName_1221141245424(SLinkOperations.getTarget(node,"sourcePath",true)) + suffix;
      }
    }
  }
);
  return properties;
}
