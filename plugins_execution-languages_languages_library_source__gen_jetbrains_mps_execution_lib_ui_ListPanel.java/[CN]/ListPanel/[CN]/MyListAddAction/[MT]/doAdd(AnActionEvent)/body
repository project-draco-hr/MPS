{
  List<SNodeReference> nodesList=getCandidates();
  NodeChooserDialog chooserDialog=new NodeChooserDialog(myProject,nodesList);
  chooserDialog.show();
  final SNodeReference resultNode=chooserDialog.getResult();
  if (resultNode == null) {
    return -1;
  }
  final Wrappers._T<T> wrapper=new Wrappers._T<T>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      wrapper.value=wrap(((SNodePointer)resultNode).resolve(MPSModuleRepository.getInstance()));
    }
  }
);
  if (wrapper.value == null) {
    return -1;
  }
  ListSequence.fromList(ListPanel.this.myValues).addElement(wrapper.value);
  if (ListPanel.this.myListener != null) {
    ListPanel.this.myListener.actionPerformed(null);
  }
  ListPanel.this.myListComponent.updateUI();
  ListPanel.this.myListModel.fireSomethingChanged();
  return ListSequence.fromList(ListPanel.this.myValues).indexOf(wrapper.value);
}
