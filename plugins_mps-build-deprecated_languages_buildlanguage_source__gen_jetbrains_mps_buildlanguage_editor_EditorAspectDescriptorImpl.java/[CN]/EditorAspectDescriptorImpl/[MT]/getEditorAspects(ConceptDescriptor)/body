{
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a,descriptor.getConceptFqName())) {
case 0:
    return Collections.<EditorAspect>singletonList(new BinaryOperation_Editor());
case 1:
  return Collections.<EditorAspect>singletonList(new BooleanLiteral_Editor());
case 2:
return Collections.<EditorAspect>singletonList(new CallReference_Editor());
case 3:
return Collections.<EditorAspect>singletonList(new CallReferenceType_Editor());
case 4:
return Collections.<EditorAspect>singletonList(new Enum_Editor());
case 5:
return Collections.<EditorAspect>singletonList(new ExternalPropertyDeclaration_Editor());
case 6:
return Collections.<EditorAspect>singletonList(new FileName_Editor());
case 7:
return Collections.<EditorAspect>singletonList(new ImportProject_Editor());
case 8:
return Collections.<EditorAspect>singletonList(new ImportPropertiesFromFile_Editor());
case 9:
return Collections.<EditorAspect>singletonList(new ImportPropertyNode_Editor());
case 10:
return Collections.<EditorAspect>singletonList(new IntLiteral_Editor());
case 11:
return Collections.<EditorAspect>singletonList(new MultiLineString_Editor());
case 12:
return Collections.<EditorAspect>singletonList(new PlusOperation_Editor());
case 13:
return Collections.<EditorAspect>singletonList(new Project_Editor());
case 14:
return Collections.<EditorAspect>singletonList(new PropertyDeclaration_Editor());
case 15:
return Collections.<EditorAspect>singletonList(new PropertyReference_Editor());
case 16:
return Collections.<EditorAspect>singletonList(new PropertyType_Editor());
case 17:
return Collections.<EditorAspect>singletonList(new StringLiteral_Editor());
case 18:
return Collections.<EditorAspect>singletonList(new TargetDeclaration_Editor());
case 19:
return Collections.<EditorAspect>singletonList(new TargetReference_Editor());
case 20:
return Collections.<EditorAspect>singletonList(new TargetReferencePropertyValueExpression_Editor());
case 21:
return Collections.<EditorAspect>singletonList(new XmlStringLiteral_Editor());
default :
}
return Collections.emptyList();
}
