{
  try {
    String value=JOptionPane.showInputDialog(((Frame)MapSequence.fromMap(_params).get("frame")),"Enter node ID:","Find node in model " + ((SModelDescriptor)MapSequence.fromMap(_params).get("CONTEXT_MODEL")).getLongName(),JOptionPane.QUESTION_MESSAGE);
    if (value == null) {
      return;
    }
    value=((value == null ? null : value.trim()));
    final SNodeId id=SNodeId.fromString(value);
    if (id == null) {
      JOptionPane.showMessageDialog(((Frame)MapSequence.fromMap(_params).get("frame")),"Wrong node ID format " + value);
      return;
    }
    final String trimmedValue=value;
    ModelAccess.instance().runWriteInEDT(new Runnable(){
      public void run(){
        SNode node;
        node=((SModelDescriptor)MapSequence.fromMap(_params).get("CONTEXT_MODEL")).getSModel().getNodeById(id);
        if (node == null) {
          JOptionPane.showMessageDialog(((Frame)MapSequence.fromMap(_params).get("frame")),"Can't find node with id " + trimmedValue);
          return;
        }
        NavigationSupport.getInstance().openNode(((IOperationContext)MapSequence.fromMap(_params).get("context")),node,true,true);
      }
    }
);
  }
 catch (  Throwable t) {
    if (log.isErrorEnabled()) {
      log.error("User's action execute method failed. Action:" + "GoToNodeById",t);
    }
  }
}
