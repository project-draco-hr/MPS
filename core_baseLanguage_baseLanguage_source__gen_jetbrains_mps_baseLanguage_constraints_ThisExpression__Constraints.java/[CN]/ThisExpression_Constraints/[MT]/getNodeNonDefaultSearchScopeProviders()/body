{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("classConcept",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      if (!(SNodeOperations.isInstanceOf(_context.getReferenceNode(),"jetbrains.mps.baseLanguage.structure.ThisExpression"))) {
        return Sequence.fromIterable(Collections.<SNode>emptyList());
      }
      return ThisExpression_Behavior.call_getPossibleClassifiers_1215682129821(SNodeOperations.cast(_context.getReferenceNode(),"jetbrains.mps.baseLanguage.structure.ThisExpression"));
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c895902c1(jetbrains.mps.baseLanguage.constraints)","1213104846936");
    }
  }
);
  return result;
}
