{
  Equations equations=myState.getEquations();
  subType=equations.getRepresentative(subType);
  superType=equations.getRepresentative(superType);
  if (subType == null || superType == null || subType == superType) {
    return;
  }
  if (!myState.isConcrete(subType) || !myState.isConcrete(superType)) {
    addSubTyping(subType,superType,isWeak,check,info);
    return;
  }
  SubTyping subTyping=myState.getTypeCheckingContext().getSubTyping();
  if (subTyping.isSubType(subType,superType,info,isWeak,myState)) {
    return;
  }
  reportError(subType,superType,info,isWeak);
}
