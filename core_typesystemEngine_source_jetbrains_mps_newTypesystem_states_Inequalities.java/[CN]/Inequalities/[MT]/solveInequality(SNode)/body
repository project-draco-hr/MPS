{
  Map<SNode,EquationInfo> subTypes=myWeakInequalities.getSubTypes(var);
  Map<SNode,EquationInfo> strongSubTypes=myStrongInequalities.getSubTypes(var);
  Map<SNode,EquationInfo> superTypes=myWeakInequalities.getSuperTypes(var);
  Map<SNode,EquationInfo> strongSuperTypes=myStrongInequalities.getSuperTypes(var);
  if (emptyOrNull(subTypes) && emptyOrNull(strongSubTypes)) {
    if (emptyOrNull(strongSuperTypes)) {
      if (superTypes != null && superTypes.size() == 1) {
        SNode type=superTypes.keySet().iterator().next();
        myState.addEquation(var,superTypes.keySet().iterator().next(),superTypes.get(type));
      }
    }
  }
  if (emptyOrNull(superTypes) && emptyOrNull(strongSuperTypes)) {
    if (emptyOrNull(strongSubTypes)) {
      if (subTypes != null && subTypes.size() == 1) {
        SNode type=subTypes.keySet().iterator().next();
        myState.addEquation(var,type,subTypes.get(type));
      }
    }
  }
}
