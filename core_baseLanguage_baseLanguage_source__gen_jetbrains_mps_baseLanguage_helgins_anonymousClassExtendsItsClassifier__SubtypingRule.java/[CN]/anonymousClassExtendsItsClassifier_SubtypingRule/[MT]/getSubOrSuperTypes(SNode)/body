{
  List<SNode> result=new ArrayList<SNode>();
  do {
    SNode matchedNode_0=SLinkOperations.getTarget(classifierType,"classifier",false);
{
      boolean matches_0=false;
{
        SNode matchingNode_0=SLinkOperations.getTarget(classifierType,"classifier",false);
        if (matchingNode_0 != null) {
          matches_0=SModelUtil_new.isAssignableConcept(matchingNode_0.getConceptFqName(),"jetbrains.mps.baseLanguage.structure.AnonymousClass");
        }
      }
      if (matches_0) {
        ListSequence.fromList(result).addElement(new QuotationClass_101().createNode(SLinkOperations.getTargets(matchedNode_0,"typeParameter",true),SLinkOperations.getTarget(matchedNode_0,"classifier",false)));
        break;
      }
    }
  }
 while (false);
  return result;
}
