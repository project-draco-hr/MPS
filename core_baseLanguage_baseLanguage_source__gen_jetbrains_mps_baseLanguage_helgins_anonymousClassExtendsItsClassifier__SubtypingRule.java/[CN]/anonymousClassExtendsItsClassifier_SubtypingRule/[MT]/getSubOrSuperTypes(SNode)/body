{
  List<SNode> result=new ArrayList<SNode>();
  do {
    SNode matchedNode_=SLinkOperations.getTarget(classifierType,"classifier",false);
{
      boolean matches_=false;
{
        SNode matchingNode_=SLinkOperations.getTarget(classifierType,"classifier",false);
        if (matchingNode_ != null) {
          matches_=SModelUtil_new.isAssignableConcept(matchingNode_.getConceptFqName(),"jetbrains.mps.baseLanguage.structure.AnonymousClass");
        }
      }
      if (matches_) {
        ListSequence.fromList(result).addElement(new QuotationClass_102().createNode(SLinkOperations.getTargets(matchedNode_,"typeParameter",true),SLinkOperations.getTarget(matchedNode_,"classifier",false)));
        break;
      }
    }
  }
 while (false);
  return result;
}
