{
  AbstractCellProvider provider=new _FunctionTypes._return_P0_E0<AbstractCellProvider>(){
    public AbstractCellProvider invoke(){
      return new AbstractCellProvider(){
        @Override public EditorCell createEditorCell(        EditorContext context){
          EditorCell_Collection collection=jetbrains.mps.nodeEditor.cells.EditorCell_Collection.createVertical(context,node);
          collection.addEditorCell(new EditorCell_Constant(context,node,"Concept function help:"));
          if (SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(node),MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0x403a32c5772bbe20L,"conceptShortDescription")) != null) {
            collection.addEditorCell(new EditorCell_Constant(context,node,SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(node),MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0x403a32c5772bbe20L,"conceptShortDescription"))));
          }
          collection.addEditorCell(new EditorCell_Constant(context,node,""));
          collection.addEditorCell(new EditorCell_Constant(context,node,"Parameter help:"));
          for (          SNode cfp : BehaviorReflection.invokeVirtual((Class<List<SNode>>)((Class)Object.class),node,"virtual_getParameters_1213877374450",new Object[]{})) {
            String alias=SPropertyOperations.getString(cfp,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0x46ab0ad5826c74caL,"conceptAlias"));
            String description=SPropertyOperations.getString(cfp,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0x403a32c5772bbe20L,"conceptShortDescription"));
            if (description == null) {
              description="<no help. use conceptShortDescription concept function property to create one>";
            }
            EditorCell_Constant message=new EditorCell_Constant(context,node,alias + " : " + description);
            collection.addEditorCell(message);
          }
          return collection;
        }
      }
;
    }
  }
.invoke();
  EditorCell editorCell=provider.createEditorCell(editorContext);
  editorCell.setCellId("Custom_qilpva_a");
  EditorCell bigCell=BigCellUtil.findBigCell(editorCell,node);
  if (bigCell != null) {
    bigCell.setBig(true);
  }
  return editorCell;
}
