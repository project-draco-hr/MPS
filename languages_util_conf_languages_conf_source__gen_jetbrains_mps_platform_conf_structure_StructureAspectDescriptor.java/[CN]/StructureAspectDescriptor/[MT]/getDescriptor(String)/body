{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.AbstractAction").super_("jetbrains.mps.platform.conf.structure.ConfigurationXmlNode").parents("jetbrains.mps.platform.conf.structure.ConfigurationXmlNode","jetbrains.mps.platform.conf.structure.IConfigurationElement","jetbrains.mps.lang.core.structure.IResolveInfo").properties("id","text","description","icon","popup").children(new String[]{"addToGroup"},new boolean[]{true}).abstract_().create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.Action").super_("jetbrains.mps.platform.conf.structure.AbstractAction").parents("jetbrains.mps.platform.conf.structure.AbstractAction","jetbrains.mps.platform.conf.structure.IActionItem").references("actionClass").children(new String[]{"shortcut"},new boolean[]{true}).alias("action","").create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.ActionReference").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.platform.conf.structure.IActionItem").references("action").create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.Actions").super_("jetbrains.mps.platform.conf.structure.ConfigurationXmlNode").parents("jetbrains.mps.platform.conf.structure.ConfigurationXmlNode","jetbrains.mps.platform.conf.structure.IConfiguration").alias("actions","").create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.BeanExtension").super_("jetbrains.mps.platform.conf.structure.Extension").parents("jetbrains.mps.platform.conf.structure.Extension").references("beanExtensionPoint").children(new String[]{"attribute"},new boolean[]{true}).alias("extension","").create();
case 5:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.BeanExtensionAttribute").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").properties("value").create();
case 6:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.BeanExtensionPoint").super_("jetbrains.mps.platform.conf.structure.ExtensionPoint").parents("jetbrains.mps.platform.conf.structure.ExtensionPoint").references("beanClass").alias("extensionPoint","").create();
case 7:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.Component").super_("jetbrains.mps.platform.conf.structure.ConfigurationXmlNode").parents("jetbrains.mps.platform.conf.structure.ConfigurationXmlNode","jetbrains.mps.platform.conf.structure.IConfigurationElement").references("ifaceClass","implClass").create();
case 8:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.ComponentRoot").super_("jetbrains.mps.platform.conf.structure.ConfigurationXmlRootNode").parents("jetbrains.mps.platform.conf.structure.ConfigurationXmlRootNode","jetbrains.mps.platform.conf.structure.IConfiguration").alias("component","").create();
case 9:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.Components").super_("jetbrains.mps.platform.conf.structure.ConfigurationXmlNode").parents("jetbrains.mps.platform.conf.structure.ConfigurationXmlNode","jetbrains.mps.platform.conf.structure.IConfiguration","jetbrains.mps.platform.conf.structure.HasLevel").create();
case 10:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.ComponentsRoot").super_("jetbrains.mps.platform.conf.structure.ConfigurationXmlRootNode").parents("jetbrains.mps.platform.conf.structure.ConfigurationXmlRootNode","jetbrains.mps.platform.conf.structure.IConfiguration").alias("components","").create();
case 11:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.ConfigurationXmlDocument").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"root"},new boolean[]{false}).create();
case 12:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.ConfigurationXmlNode").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.platform.conf.structure.IConfigurationFragment").abstract_().create();
case 13:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.ConfigurationXmlRootNode").super_("jetbrains.mps.platform.conf.structure.ConfigurationXmlNode").parents("jetbrains.mps.platform.conf.structure.ConfigurationXmlNode","jetbrains.mps.platform.conf.structure.IConfiguration").children(new String[]{"node"},new boolean[]{true}).abstract_().create();
case 14:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.Extension").super_("jetbrains.mps.platform.conf.structure.ConfigurationXmlNode").parents("jetbrains.mps.platform.conf.structure.ConfigurationXmlNode","jetbrains.mps.platform.conf.structure.IConfigurationElement").references("extensionPoint").abstract_().alias("extension","").create();
case 15:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.ExtensionPoint").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.IResolveInfo","jetbrains.mps.platform.conf.structure.IConfigurationElement").abstract_().alias("extensionPoint","").create();
case 16:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.ExtensionPoints").super_("jetbrains.mps.platform.conf.structure.ConfigurationXmlNode").parents("jetbrains.mps.platform.conf.structure.ConfigurationXmlNode","jetbrains.mps.platform.conf.structure.IConfiguration").alias("extensionPoints","").create();
case 17:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.Extensions").super_("jetbrains.mps.platform.conf.structure.ConfigurationXmlNode").parents("jetbrains.mps.platform.conf.structure.ConfigurationXmlNode","jetbrains.mps.platform.conf.structure.IConfiguration").alias("extensions","").create();
case 18:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.Group").super_("jetbrains.mps.platform.conf.structure.AbstractAction").parents("jetbrains.mps.platform.conf.structure.AbstractAction").references("groupClass").children(new String[]{"actionItem"},new boolean[]{true}).alias("group","").create();
case 19:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.GroupReference").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("position").references("group","anchor").alias("add to group","").create();
case 20:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.HasLevel").interface_().properties("level").create();
case 21:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.IActionItem").interface_().create();
case 22:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.IConfiguration").interface_().parents("jetbrains.mps.platform.conf.structure.IConfigurationFragment").children(new String[]{"fragment"},new boolean[]{true}).create();
case 23:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.IConfigurationElement").interface_().parents("jetbrains.mps.platform.conf.structure.IConfigurationFragment").create();
case 24:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.IConfigurationElementFragment").interface_().create();
case 25:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.IConfigurationFragment").interface_().create();
case 26:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.IExternalConfigurationFragment").interface_().parents("jetbrains.mps.platform.conf.structure.IConfigurationFragment").create();
case 27:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.IPluginConfigurationFragment").interface_().create();
case 28:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.IdeaPluginRoot").super_("jetbrains.mps.platform.conf.structure.ConfigurationXmlRootNode").parents("jetbrains.mps.platform.conf.structure.ConfigurationXmlRootNode","jetbrains.mps.platform.conf.structure.IConfiguration").abstract_().alias("idea-plugin","").create();
case 29:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.IdeaVersion").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("sinceBuild","untilBuild").create();
case 30:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.IntefaceExtensionPoint").super_("jetbrains.mps.platform.conf.structure.ExtensionPoint").parents("jetbrains.mps.platform.conf.structure.ExtensionPoint").references("iface").alias("extensionPoint","").create();
case 31:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.InterfaceExtension").super_("jetbrains.mps.platform.conf.structure.Extension").parents("jetbrains.mps.platform.conf.structure.Extension").references("intefaceExtensionPoint","impl").alias("extension","").create();
case 32:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.KeyboardShortcut").super_("jetbrains.mps.platform.conf.structure.Shortcut").parents("jetbrains.mps.platform.conf.structure.Shortcut").alias("keyboard shortcut","").create();
case 33:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.MouseShortcut").super_("jetbrains.mps.platform.conf.structure.Shortcut").parents("jetbrains.mps.platform.conf.structure.Shortcut").alias("mouse shortcut","").create();
case 34:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.Plugin").super_("jetbrains.mps.platform.conf.structure.IdeaPluginRoot").parents("jetbrains.mps.platform.conf.structure.IdeaPluginRoot","jetbrains.mps.platform.conf.structure.IConfigurationFragment","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.IResolveInfo").properties("id","version").children(new String[]{"vendor","ideaVersion","helpset","depends","details"},new boolean[]{false,false,false,true,true}).alias("plugin","").create();
case 35:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.PluginDependency").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("optional","config").references("plugin").create();
case 36:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.PluginDetails").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("kind","value").create();
case 37:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.PluginHelpset").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("file","path").create();
case 38:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.PluginVendor").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").properties("url","email","logo").create();
case 39:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.RootRoot").super_("jetbrains.mps.platform.conf.structure.ConfigurationXmlRootNode").parents("jetbrains.mps.platform.conf.structure.ConfigurationXmlRootNode","jetbrains.mps.platform.conf.structure.IConfiguration").alias("root","").create();
case 40:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.Separator").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.platform.conf.structure.IActionItem").alias("---- (separator)","").create();
case 41:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.Service").super_("jetbrains.mps.platform.conf.structure.Extension").parents("jetbrains.mps.platform.conf.structure.Extension","jetbrains.mps.platform.conf.structure.HasLevel").references("serviceIface","serviceImpl").create();
case 42:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.Shortcut").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("keystroke","keystroke2","keymap").alias("shortcut","").create();
case 43:
return new ConceptDescriptorBuilder("jetbrains.mps.platform.conf.structure.XInclude").super_("jetbrains.mps.platform.conf.structure.ConfigurationXmlNode").parents("jetbrains.mps.platform.conf.structure.ConfigurationXmlNode","jetbrains.mps.platform.conf.structure.IExternalConfigurationFragment").properties("includeRoot").references("document").alias("include","").create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
