{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.AbstractAction","jetbrains.mps.platform.conf.structure.ConfigurationXmlNode",false,new String[]{"jetbrains.mps.platform.conf.structure.ConfigurationXmlNode","jetbrains.mps.platform.conf.structure.IConfigurationElement","jetbrains.mps.lang.core.structure.IResolveInfo"},new String[]{"id","text","description","icon","popup"},new String[]{},new String[]{"addToGroup"},new boolean[]{true},true,false,"","","");
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.Action","jetbrains.mps.platform.conf.structure.AbstractAction",false,new String[]{"jetbrains.mps.platform.conf.structure.AbstractAction","jetbrains.mps.platform.conf.structure.IActionItem"},new String[]{},new String[]{"actionClass"},new String[]{"shortcut"},new boolean[]{true},false,false,"action","","");
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.ActionReference","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.platform.conf.structure.IActionItem"},new String[]{},new String[]{"action"},new String[]{},new boolean[]{},false,false,"","","");
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.Actions","jetbrains.mps.platform.conf.structure.ConfigurationXmlNode",false,new String[]{"jetbrains.mps.platform.conf.structure.ConfigurationXmlNode","jetbrains.mps.platform.conf.structure.IConfiguration"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"actions","","");
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.BeanExtension","jetbrains.mps.platform.conf.structure.Extension",false,new String[]{"jetbrains.mps.platform.conf.structure.Extension"},new String[]{},new String[]{"beanExtensionPoint"},new String[]{"attribute"},new boolean[]{true},false,false,"extension","","");
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.BeanExtensionAttribute","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"value"},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.BeanExtensionPoint","jetbrains.mps.platform.conf.structure.ExtensionPoint",false,new String[]{"jetbrains.mps.platform.conf.structure.ExtensionPoint"},new String[]{},new String[]{"beanClass"},new String[]{},new boolean[]{},false,false,"extensionPoint","","");
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.Component","jetbrains.mps.platform.conf.structure.ConfigurationXmlNode",false,new String[]{"jetbrains.mps.platform.conf.structure.ConfigurationXmlNode","jetbrains.mps.platform.conf.structure.IConfigurationElement"},new String[]{},new String[]{"ifaceClass","implClass"},new String[]{},new boolean[]{},false,false,"","","");
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.ComponentRoot","jetbrains.mps.platform.conf.structure.ConfigurationXmlRootNode",false,new String[]{"jetbrains.mps.platform.conf.structure.ConfigurationXmlRootNode","jetbrains.mps.platform.conf.structure.IConfiguration"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"component","","");
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.Components","jetbrains.mps.platform.conf.structure.ConfigurationXmlNode",false,new String[]{"jetbrains.mps.platform.conf.structure.ConfigurationXmlNode","jetbrains.mps.platform.conf.structure.IConfiguration","jetbrains.mps.platform.conf.structure.HasLevel"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.ComponentsRoot","jetbrains.mps.platform.conf.structure.ConfigurationXmlRootNode",false,new String[]{"jetbrains.mps.platform.conf.structure.ConfigurationXmlRootNode","jetbrains.mps.platform.conf.structure.IConfiguration"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"components","","");
case 11:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.ConfigurationXmlDocument","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{"root"},new boolean[]{false},false,false,"","","");
case 12:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.ConfigurationXmlNode","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.platform.conf.structure.IConfigurationFragment"},new String[]{},new String[]{},new String[]{},new boolean[]{},true,false,"","","");
case 13:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.ConfigurationXmlRootNode","jetbrains.mps.platform.conf.structure.ConfigurationXmlNode",false,new String[]{"jetbrains.mps.platform.conf.structure.ConfigurationXmlNode","jetbrains.mps.platform.conf.structure.IConfiguration"},new String[]{},new String[]{},new String[]{"node"},new boolean[]{true},true,false,"","","");
case 14:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.Extension","jetbrains.mps.platform.conf.structure.ConfigurationXmlNode",false,new String[]{"jetbrains.mps.platform.conf.structure.ConfigurationXmlNode","jetbrains.mps.platform.conf.structure.IConfigurationElement"},new String[]{},new String[]{"extensionPoint"},new String[]{},new boolean[]{},true,false,"extension","","");
case 15:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.ExtensionPoint","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.IResolveInfo","jetbrains.mps.platform.conf.structure.IConfigurationElement"},new String[]{},new String[]{},new String[]{},new boolean[]{},true,false,"extensionPoint","","");
case 16:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.ExtensionPoints","jetbrains.mps.platform.conf.structure.ConfigurationXmlNode",false,new String[]{"jetbrains.mps.platform.conf.structure.ConfigurationXmlNode","jetbrains.mps.platform.conf.structure.IConfiguration"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"extensionPoints","","");
case 17:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.Extensions","jetbrains.mps.platform.conf.structure.ConfigurationXmlNode",false,new String[]{"jetbrains.mps.platform.conf.structure.ConfigurationXmlNode","jetbrains.mps.platform.conf.structure.IConfiguration"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"extensions","","");
case 18:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.Group","jetbrains.mps.platform.conf.structure.AbstractAction",false,new String[]{"jetbrains.mps.platform.conf.structure.AbstractAction"},new String[]{},new String[]{"groupClass"},new String[]{"actionItem"},new boolean[]{true},false,false,"group","","");
case 19:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.GroupReference","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"position"},new String[]{"group","anchor"},new String[]{},new boolean[]{},false,false,"add to group","","");
case 20:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.HasLevel",null,true,new String[]{},new String[]{"level"},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 21:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.IActionItem",null,true,new String[]{},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 22:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.IConfiguration",null,true,new String[]{"jetbrains.mps.platform.conf.structure.IConfigurationFragment"},new String[]{},new String[]{},new String[]{"fragment"},new boolean[]{true},false,false,"","","");
case 23:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.IConfigurationElement",null,true,new String[]{"jetbrains.mps.platform.conf.structure.IConfigurationFragment"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 24:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.IConfigurationElementFragment",null,true,new String[]{},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 25:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.IConfigurationFragment",null,true,new String[]{},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 26:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.IExternalConfigurationFragment",null,true,new String[]{"jetbrains.mps.platform.conf.structure.IConfigurationFragment"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 27:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.IPluginConfigurationFragment",null,true,new String[]{},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 28:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.IdeaPluginRoot","jetbrains.mps.platform.conf.structure.ConfigurationXmlRootNode",false,new String[]{"jetbrains.mps.platform.conf.structure.ConfigurationXmlRootNode","jetbrains.mps.platform.conf.structure.IConfiguration"},new String[]{},new String[]{},new String[]{},new boolean[]{},true,false,"idea-plugin","","");
case 29:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.IdeaVersion","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"sinceBuild","untilBuild"},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 30:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.IntefaceExtensionPoint","jetbrains.mps.platform.conf.structure.ExtensionPoint",false,new String[]{"jetbrains.mps.platform.conf.structure.ExtensionPoint"},new String[]{},new String[]{"iface"},new String[]{},new boolean[]{},false,false,"extensionPoint","","");
case 31:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.InterfaceExtension","jetbrains.mps.platform.conf.structure.Extension",false,new String[]{"jetbrains.mps.platform.conf.structure.Extension"},new String[]{},new String[]{"intefaceExtensionPoint","impl"},new String[]{},new boolean[]{},false,false,"extension","","");
case 32:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.KeyboardShortcut","jetbrains.mps.platform.conf.structure.Shortcut",false,new String[]{"jetbrains.mps.platform.conf.structure.Shortcut"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"keyboard shortcut","","");
case 33:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.MouseShortcut","jetbrains.mps.platform.conf.structure.Shortcut",false,new String[]{"jetbrains.mps.platform.conf.structure.Shortcut"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"mouse shortcut","","");
case 34:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.Plugin","jetbrains.mps.platform.conf.structure.IdeaPluginRoot",false,new String[]{"jetbrains.mps.platform.conf.structure.IdeaPluginRoot","jetbrains.mps.platform.conf.structure.IConfigurationFragment","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.IResolveInfo"},new String[]{"id","version"},new String[]{},new String[]{"vendor","ideaVersion","helpset","depends","details"},new boolean[]{false,false,false,true,true},false,false,"plugin","","");
case 35:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.PluginDependency","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"optional","config"},new String[]{"plugin"},new String[]{},new boolean[]{},false,false,"","","");
case 36:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.PluginDetails","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"kind","value"},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 37:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.PluginHelpset","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"file","path"},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 38:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.PluginVendor","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"url","email","logo"},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 39:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.RootRoot","jetbrains.mps.platform.conf.structure.ConfigurationXmlRootNode",false,new String[]{"jetbrains.mps.platform.conf.structure.ConfigurationXmlRootNode","jetbrains.mps.platform.conf.structure.IConfiguration"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"root","","");
case 40:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.Separator","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.platform.conf.structure.IActionItem"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"---- (separator)","","");
case 41:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.Service","jetbrains.mps.platform.conf.structure.Extension",false,new String[]{"jetbrains.mps.platform.conf.structure.Extension","jetbrains.mps.platform.conf.structure.HasLevel"},new String[]{},new String[]{"serviceIface","serviceImpl"},new String[]{},new boolean[]{},false,false,"","","");
case 42:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.Shortcut","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"keystroke","keystroke2","keymap"},new String[]{},new String[]{},new boolean[]{},false,false,"shortcut","","");
case 43:
return new CompiledConceptDescriptor("jetbrains.mps.platform.conf.structure.XInclude","jetbrains.mps.platform.conf.structure.ConfigurationXmlNode",false,new String[]{"jetbrains.mps.platform.conf.structure.ConfigurationXmlNode","jetbrains.mps.platform.conf.structure.IExternalConfigurationFragment"},new String[]{"includeRoot"},new String[]{"document"},new String[]{},new boolean[]{},false,false,"include","","");
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
