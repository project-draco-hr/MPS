{
  final SNode parentElement;
{
    Calculable calc=new Calculable(){
      public Object calculate(){
        return ElementUtil.getParentElement(parentNode);
      }
    }
;
    parentElement=(SNode)calc.calculate();
  }
  while (actions.hasNext()) {
    INodeSubstituteAction current=actions.next();
    final SNode concept=(SNode)current.getParameterObject();
    Condition cond=new Condition(){
      public boolean met(      Object object){
        return SConceptOperations.isExactly(childConcept,"webr.xml.structure.Content") && SConceptOperations.isAssignableFrom(SConceptOperations.findConceptDeclaration("webr.xml.structure.BaseText"),concept);
      }
    }
;
    if (cond.met(null)) {
      actions.remove();
    }
  }
}
