{
  final SNode parentElement;
  final boolean isMixed;
{
    Calculable calc=new Calculable(){
      public Object calculate(){
        return ElementUtil.getParentElementDeclaration(_context.getParentNode(),operationContext.getScope());
      }
    }
;
    parentElement=(SNode)calc.calculate();
  }
{
    Calculable calc=new Calculable(){
      public Object calculate(){
        return (parentElement == null) || TypeExpression_Behavior.call_isMixed_1183649029971(parentElement);
      }
    }
;
    isMixed=(Boolean)calc.calculate();
  }
  Iterator<INodeSubstituteAction> actions=_context.getActions();
  while (actions.hasNext()) {
    INodeSubstituteAction current=actions.next();
    if (!(current.getParameterObject() instanceof SNode)) {
      continue;
    }
    final SNode concept=(SNode)current.getParameterObject();
    Condition cond=new Condition(){
      public boolean met(      Object object){
        return SConceptOperations.isExactly(_context.getChildConcept(),"webr.xml.structure.Content") && SConceptOperations.isAssignableFrom(SConceptOperations.findConceptDeclaration("webr.xml.structure.BaseText"),concept) && !(isMixed);
      }
    }
;
    if (cond.met(null)) {
      actions.remove();
    }
  }
}
