{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)LanguageRegistry.getInstance().getLanguage(MetaAdapterFactory.getLanguage(SLanguageId.deserialize("f2801650-65d5-424e-bb1b-463a8781b786"),"jetbrains.mps.baseLanguage.javadoc")).getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case 0:
    return props_AuthorBlockDocTag;
case 1:
  return props_BaseBlockDocTag;
case 2:
return props_BaseDocComment;
case 3:
return props_BaseDocReference;
case 4:
return props_BaseInlineDocTag;
case 5:
return props_BaseParameterReference;
case 6:
return props_BaseVariableDocReference;
case 7:
return props_ClassifierDocComment;
case 8:
return props_ClassifierDocReference;
case 9:
return props_CodeInlineDocTag;
case 10:
return props_CodeSnippet;
case 11:
return props_CommentLine;
case 12:
return props_CommentLinePart;
case 13:
return props_DeprecatedBlockDocTag;
case 14:
return props_DocMethodParameterReference;
case 15:
return props_DocTypeParameterReference;
case 16:
return props_EmptyBlockDocTag;
case 17:
return props_FieldDocComment;
case 18:
return props_FieldDocReference;
case 19:
return props_HTMLElement;
case 20:
return props_InheritDocInlineDocTag;
case 21:
return props_InlineTagCommentLinePart;
case 22:
return props_LinkInlineDocTag;
case 23:
return props_MethodDocComment;
case 24:
return props_MethodDocReference;
case 25:
return props_ParameterBlockDocTag;
case 26:
return props_ReturnBlockDocTag;
case 27:
return props_SeeBlockDocTag;
case 28:
return props_SinceBlockDocTag;
case 29:
return props_StaticFieldDocReference;
case 30:
return props_TextCommentLinePart;
case 31:
return props_ThrowsBlockDocTag;
case 32:
return props_ValueInlineDocTag;
case 33:
return props_VersionBlockDocTag;
}
throw new IllegalStateException();
}
