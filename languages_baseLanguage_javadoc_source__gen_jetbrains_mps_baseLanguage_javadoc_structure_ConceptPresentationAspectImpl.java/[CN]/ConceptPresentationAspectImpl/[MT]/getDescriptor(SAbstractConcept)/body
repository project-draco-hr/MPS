{
{
    SAbstractConcept cncpt=c;
    Integer preIndex=indices_lpa09p_a0jb.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return props_AuthorBlockDocTag;
      }
    break;
case 1:
  if (true) {
    return props_BaseBlockDocTag;
  }
break;
case 2:
if (true) {
return props_BaseDocComment;
}
break;
case 3:
if (true) {
return props_BaseDocReference;
}
break;
case 4:
if (true) {
return props_BaseInlineDocTag;
}
break;
case 5:
if (true) {
return props_BaseParameterReference;
}
break;
case 6:
if (true) {
return props_BaseVariableDocReference;
}
break;
case 7:
if (true) {
return props_ClassifierDocComment;
}
break;
case 8:
if (true) {
return props_ClassifierDocReference;
}
break;
case 9:
if (true) {
return props_CodeInlineDocTag;
}
break;
case 10:
if (true) {
return props_CodeSnippet;
}
break;
case 11:
if (true) {
return props_CommentLine;
}
break;
case 12:
if (true) {
return props_CommentLinePart;
}
break;
case 13:
if (true) {
return props_DeprecatedBlockDocTag;
}
break;
case 14:
if (true) {
return props_DocMethodParameterReference;
}
break;
case 15:
if (true) {
return props_DocTypeParameterReference;
}
break;
case 16:
if (true) {
return props_EmptyBlockDocTag;
}
break;
case 17:
if (true) {
return props_FieldDocComment;
}
break;
case 18:
if (true) {
return props_FieldDocReference;
}
break;
case 19:
if (true) {
return props_HTMLElement;
}
break;
case 20:
if (true) {
return props_InheritDocInlineDocTag;
}
break;
case 21:
if (true) {
return props_InlineTagCommentLinePart;
}
break;
case 22:
if (true) {
return props_LinkInlineDocTag;
}
break;
case 23:
if (true) {
return props_MethodDocComment;
}
break;
case 24:
if (true) {
return props_MethodDocReference;
}
break;
case 25:
if (true) {
return props_ParameterBlockDocTag;
}
break;
case 26:
if (true) {
return props_ReturnBlockDocTag;
}
break;
case 27:
if (true) {
return props_SeeBlockDocTag;
}
break;
case 28:
if (true) {
return props_SinceBlockDocTag;
}
break;
case 29:
if (true) {
return props_StaticFieldDocReference;
}
break;
case 30:
if (true) {
return props_TextCommentLinePart;
}
break;
case 31:
if (true) {
return props_ThrowsBlockDocTag;
}
break;
case 32:
if (true) {
return props_ValueInlineDocTag;
}
break;
case 33:
if (true) {
return props_VersionBlockDocTag;
}
break;
default :
}
}
throw new IllegalStateException();
}
