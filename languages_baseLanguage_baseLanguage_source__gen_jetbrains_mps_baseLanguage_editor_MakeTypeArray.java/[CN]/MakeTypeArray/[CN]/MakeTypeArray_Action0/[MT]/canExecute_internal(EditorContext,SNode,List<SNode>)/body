{
  final String text=((EditorCell_Label)editorContext.getSelectedCell()).getText();
  boolean hasType=ListSequence.fromList(SConceptOperations.getAllSubConcepts2(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506dL,"jetbrains.mps.baseLanguage.structure.Type"),SNodeOperations.getModel(node))).any(new IWhereFilter<SConcept>(){
    public boolean accept(    SConcept it){
      return eq_u3xwmg_a0a0a0a0a0a1a5b(it.getConceptAlias(),text);
    }
  }
);
  if (hasType) {
    return true;
  }
  boolean hasClassifier=ListSequence.fromList(SModelOperations.nodesIncludingImported(SNodeOperations.getModel(node),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"))).any(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return eq_u3xwmg_a0a0a0a0a0a3a5b(SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")),text);
    }
  }
);
  return hasClassifier;
}
