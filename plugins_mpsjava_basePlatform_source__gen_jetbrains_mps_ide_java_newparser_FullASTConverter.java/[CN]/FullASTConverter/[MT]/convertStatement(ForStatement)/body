{
  SNode forStatement=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ForStatement",null);
  List<SNode> init=convertStatements(x.initializations);
  SNode result=forStatement;
  if (ListSequence.fromList(init).any(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.baseLanguage.structure.ExpressionStatement");
    }
  }
)) {
    result=_quotation_createNode_f46ocm_a0b0d0ib(init,forStatement);
  }
 else   if (!(init.isEmpty())) {
    boolean first=true;
    for (    SNode statement : init) {
      if (SNodeOperations.isInstanceOf(statement,"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement")) {
        SNode lvds=SNodeOperations.cast(statement,"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement");
        SNode variableDeclaration=SLinkOperations.getTarget(lvds,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068581242864l,1068581242865l,"localVariableDeclaration"));
        if (first) {
          SLinkOperations.setTarget(forStatement,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1144230876926l,1144230900587l,"variable"),variableDeclaration);
          first=false;
        }
 else {
          SNode additionalForLoopVariable=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.AdditionalForLoopVariable",null);
          SPropertyOperations.set(additionalForLoopVariable,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"),SPropertyOperations.getString(variableDeclaration,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")));
          SNode inititalizer=SLinkOperations.getTarget(variableDeclaration,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068431474542l,1068431790190l,"initializer"));
          if ((inititalizer != null)) {
            SLinkOperations.setTarget(additionalForLoopVariable,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068431474542l,1068431790190l,"initializer"),inititalizer);
          }
          ListSequence.fromList(SLinkOperations.getChildren(forStatement,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1144231330558l,1032195626824963089l,"additionalVar"))).addElement(additionalForLoopVariable);
        }
      }
    }
  }
  SNode expr=convertExpressionWrap(x.condition);
  SLinkOperations.setTarget(forStatement,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1144231330558l,1144231399730l,"condition"),expr);
  List<SNode> incr=convertExpressionStatements(x.increments);
  if (!(incr.isEmpty())) {
    for (    SNode expressionStatement : incr) {
      SNode expression=SLinkOperations.getTarget(expressionStatement,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123155l,1068580123156l,"expression"));
      SNodeOperations.detachNode(expression);
      ListSequence.fromList(SLinkOperations.getChildren(forStatement,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1144231330558l,1144231408325l,"iteration"))).addElement(expression);
    }
  }
  SNode loopBody=convertStatementWrap(x.action);
  SNode body=getStatementListFromStatement(loopBody,x.action);
  SLinkOperations.setTarget(forStatement,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1154032098014l,1154032183016l,"body"),body);
  return result;
}
