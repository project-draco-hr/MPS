{
  try {
    IScope scope=AbstractMigrationScriptHelper.createMigrationScope(RunMigrationScripts_Action.this.models,RunMigrationScripts_Action.this.modules,RunMigrationScripts_Action.this.selectionOnly);
    if (!(scope.getModelDescriptors().iterator().hasNext())) {
      return;
    }
    ScriptsActionGroupHelper.sortScripts(RunMigrationScripts_Action.this.scripts);
    RunMigrationScriptsDialog dialog=new RunMigrationScriptsDialog(RunMigrationScripts_Action.this.frame,RunMigrationScripts_Action.this.scripts,ScriptsActionGroupHelper.getSelectedScripts());
    int x=RunMigrationScripts_Action.this.frame.getX() + RunMigrationScripts_Action.this.frame.getWidth() / 2 - dialog.getWidth() / 2;
    int y=RunMigrationScripts_Action.this.frame.getY() + RunMigrationScripts_Action.this.frame.getHeight() / 2 - dialog.getHeight() / 2;
    dialog.setLocation(x,y);
    dialog.setVisible(true);
    if (dialog.isRunChecked()) {
      AbstractMigrationScriptHelper.doRunScripts(dialog.getCheckedScripts(),scope,RunMigrationScripts_Action.this.context);
    }
 else     if (dialog.isOpenSelected()) {
      RunMigrationScripts_Action.this.project.getComponent(MPSEditorOpener.class).editNode(dialog.getSelectedScripts().get(0).getNode(),RunMigrationScripts_Action.this.context);
    }
  }
 catch (  Throwable t) {
    LOG.error("User's action execute method failed. Action:" + "RunMigrationScripts",t);
  }
}
