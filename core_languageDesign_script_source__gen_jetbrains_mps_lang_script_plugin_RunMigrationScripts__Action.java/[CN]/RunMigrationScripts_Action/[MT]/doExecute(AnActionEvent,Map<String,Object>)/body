{
  try {
    IScope scope=AbstractMigrationScriptHelper.createMigrationScope(((List<SModelDescriptor>)MapSequence.fromMap(_params).get("models")),((List<IModule>)MapSequence.fromMap(_params).get("modules")),RunMigrationScripts_Action.this.selectionOnly);
    if (!(scope.getModelDescriptors().iterator().hasNext())) {
      return;
    }
    ScriptsActionGroupHelper.sortScripts(RunMigrationScripts_Action.this.scripts);
    RunMigrationScriptsDialog dialog=new RunMigrationScriptsDialog(((Frame)MapSequence.fromMap(_params).get("frame")),RunMigrationScripts_Action.this.scripts,ScriptsActionGroupHelper.getSelectedScripts());
    int x=((Frame)MapSequence.fromMap(_params).get("frame")).getX() + ((Frame)MapSequence.fromMap(_params).get("frame")).getWidth() / 2 - dialog.getWidth() / 2;
    int y=((Frame)MapSequence.fromMap(_params).get("frame")).getY() + ((Frame)MapSequence.fromMap(_params).get("frame")).getHeight() / 2 - dialog.getHeight() / 2;
    dialog.setLocation(x,y);
    dialog.setVisible(true);
    if (dialog.isRunChecked()) {
      AbstractMigrationScriptHelper.doRunScripts(dialog.getCheckedScripts(),scope,((IOperationContext)MapSequence.fromMap(_params).get("context")));
    }
 else     if (dialog.isOpenSelected()) {
      ((Project)MapSequence.fromMap(_params).get("project")).getComponent(MPSEditorOpener.class).editNode(dialog.getSelectedScripts().get(0).getNode(),((IOperationContext)MapSequence.fromMap(_params).get("context")));
    }
  }
 catch (  Throwable t) {
    LOG.error("User's action execute method failed. Action:" + "RunMigrationScripts",t);
  }
}
