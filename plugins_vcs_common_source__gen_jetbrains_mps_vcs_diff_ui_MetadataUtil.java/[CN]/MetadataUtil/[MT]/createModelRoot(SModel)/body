{
  SNode root=SConceptOperations.createNewNode("jetbrains.mps.ide.vcs.modelmetadata.structure.Model",null);
  SPropertyOperations.set(root,"longname",SNodeOperations.getModelLongName(model));
  SPropertyOperations.set(root,"uuid",model.getModelId() + "");
  SPropertyOperations.set(root,"version","" + (model.getVersion()));
  if (model instanceof DefaultSModel) {
    SPropertyOperations.set(root,"donotgenerate","" + (check_ca1g54_a0a0e0c(((DefaultSModel)model).getSModelHeader())));
  }
  for (  ModuleReference language : ListSequence.fromList(((ABCDE)model).importedLanguages())) {
    ListSequence.fromList(SLinkOperations.getTargets(root,"language",true)).addElement(createModuleRefNode(language));
  }
  for (  ModuleReference genlanguage : ListSequence.fromList(model.engagedOnGenerationLanguages())) {
    ListSequence.fromList(SLinkOperations.getTargets(root,"languageEngagedOnGeneration",true)).addElement(createModuleRefNode(genlanguage));
  }
  for (  ModuleReference devkit : ListSequence.fromList(model.importedDevkits())) {
    ListSequence.fromList(SLinkOperations.getTargets(root,"devkit",true)).addElement(createModuleRefNode(devkit));
  }
  for (  SModel.ImportElement impmodel : ListSequence.fromList(model.importedModels())) {
    ListSequence.fromList(SLinkOperations.getTargets(root,"import",true)).addElement(createModelRefNode(impmodel));
  }
  SPropertyOperations.set(root,"name","Model Properties");
  ((jetbrains.mps.smodel.SNode)root).setId(SNodeId.fromString("~root"));
  return root;
}
