{
  SModelBase modelBase=(SModelBase)model;
  SNode root=SConceptOperations.createNewNode("jetbrains.mps.ide.vcs.modelmetadata.structure.Model",null);
  SPropertyOperations.set(root,"longname",SModelOperations.getModelName(model));
  SPropertyOperations.set(root,"version","" + (modelBase.getVersion()));
  if (model instanceof GeneratableSModel) {
    SPropertyOperations.set(root,"donotgenerate","" + (check_ca1g54_a0a0f0d(((GeneratableSModel)model))));
  }
  for (  SModuleReference language : ListSequence.fromList(modelBase.importedLanguages())) {
    ListSequence.fromList(SLinkOperations.getTargets(root,"language",true)).addElement(createModuleRefNode(language));
  }
  for (  SModuleReference genlanguage : ListSequence.fromList(modelBase.engagedOnGenerationLanguages())) {
    ListSequence.fromList(SLinkOperations.getTargets(root,"languageEngagedOnGeneration",true)).addElement(createModuleRefNode(genlanguage));
  }
  for (  SModuleReference devkit : ListSequence.fromList(modelBase.importedDevkits())) {
    ListSequence.fromList(SLinkOperations.getTargets(root,"devkit",true)).addElement(createModuleRefNode(devkit));
  }
  for (  jetbrains.mps.smodel.SModel.ImportElement impmodel : ListSequence.fromList(modelBase.importedModels())) {
    ListSequence.fromList(SLinkOperations.getTargets(root,"import",true)).addElement(createModelRefNode(impmodel));
  }
  SPropertyOperations.set(root,"name","Model Properties");
  ((jetbrains.mps.smodel.SNode)root).setId(SNodeId.fromString("~root"));
  return root;
}
