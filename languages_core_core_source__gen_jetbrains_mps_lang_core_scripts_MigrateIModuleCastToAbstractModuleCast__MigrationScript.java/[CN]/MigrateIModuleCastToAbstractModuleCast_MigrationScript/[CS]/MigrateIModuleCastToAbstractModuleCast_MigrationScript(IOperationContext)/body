{
  super("Migrate IModule casts to AbstractModule casts (run *after* SModule OpenAPI migration)");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Migrate IModule casts to AbstractModule casts";
    }
    public String getAdditionalInfo(){
      return "Migrate IModule casts to AbstractModule casts";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.CastExpression";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(SNodeOperations.cast(SLinkOperations.getTarget(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1070534934090l,1070534934091l,"type")),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType")),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1107535924139l,"classifier"),SNodeOperations.getNode("6ed54515-acc8-4d1e-a16c-9fd6cfe951ea/f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.project(MPS.Core/jetbrains.mps.project@java_stub)","~AbstractModule"));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
