{
  SNode typeCopy=SNodeOperations.copyNode(type);
  for (  SNode typeVariableRef : ListSequence.fromList(SNodeOperations.getDescendants(typeCopy,"jetbrains.mps.baseLanguage.structure.TypeVariableReference",false,new String[]{}))) {
    if (!(SetSequence.fromSet(typeParams).contains(SLinkOperations.getTarget(typeVariableRef,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1109283449304l,1109283546497l,"typeVariableDeclaration"))))) {
      continue;
    }
    if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(typeVariableRef),"jetbrains.mps.baseLanguage.structure.UpperBoundType") && SNodeOperations.hasRole(typeVariableRef,"jetbrains.mps.baseLanguage.structure.UpperBoundType","bound") || SNodeOperations.isInstanceOf(SNodeOperations.getParent(typeVariableRef),"jetbrains.mps.baseLanguage.structure.LowerBoundType") && SNodeOperations.hasRole(typeVariableRef,"jetbrains.mps.baseLanguage.structure.LowerBoundType","bound")) {
      SNodeOperations.replaceWithNewChild(SNodeOperations.getParent(typeVariableRef),"jetbrains.mps.baseLanguage.structure.WildCardType");
    }
 else {
      SNodeOperations.replaceWithNewChild(typeVariableRef,"jetbrains.mps.baseLanguage.structure.WildCardType");
    }
  }
  return typeCopy;
}
