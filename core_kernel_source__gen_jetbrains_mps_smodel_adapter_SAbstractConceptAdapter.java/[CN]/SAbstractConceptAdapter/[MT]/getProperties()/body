{
  ConceptDescriptor d=ConceptRegistry.getInstance().getConceptDescriptor(myConceptName);
  if (d instanceof IllegalConceptDescriptor) {
    illegalConceptDescriptorWarning();
    return Collections.<SProperty>emptyList();
  }
  final ConceptAndSuperConceptsScope scope=new ConceptAndSuperConceptsScope(getConceptDeclarationNode());
  return SetSequence.fromSet(((Set<String>)d.getPropertyNames())).select(new ISelector<String,SProperty>(){
    public SProperty select(    String it){
      SNode propNode=scope.getPropertyDeclarationByName(it);
      if (propNode == null) {
        return null;
      }
      return ((SProperty)new SPropertyAdapter(MetaIdByDeclaration.getPropId((jetbrains.mps.smodel.SNode)propNode)));
    }
  }
);
}
