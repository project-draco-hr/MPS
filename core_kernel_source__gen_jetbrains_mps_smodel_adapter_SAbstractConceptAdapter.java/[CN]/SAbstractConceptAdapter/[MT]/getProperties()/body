{
  ConceptDescriptor d=ConceptRegistry.getInstance().getConceptDescriptor(getQualifiedName());
  if (d instanceof IllegalConceptDescriptor) {
    illegalConceptDescriptorWarning();
    return Collections.emptyList();
  }
  final ConceptAndSuperConceptsScope scope=new ConceptAndSuperConceptsScope(getConceptDeclarationNode());
  return SetSequence.fromSet(((Set<String>)d.getPropertyNames())).select(new ISelector<String,SProperty>(){
    public SProperty select(    String it){
      SNode propNode=scope.getPropertyDeclarationByName(it);
      if (propNode == null)       return null;
      return new SPropertyAdapter(IdHelper.getPropId((jetbrains.mps.smodel.SNode)propNode));
    }
  }
);
}
