{
  ConceptDescriptor d=myConceptId != null ? ConceptRegistry.getInstance().getConceptDescriptor(myConceptId) : ConceptRegistry.getInstance().getConceptDescriptor(myConceptName);
  if (d instanceof IllegalConceptDescriptor) {
    illegalConceptDescriptorWarning();
    return Collections.emptyList();
  }
  Iterable<SAbstractLink> seq=SetSequence.fromSet(((Set<String>)d.getChildrenNames())).select(new ISelector<String,SAbstractLink>(){
    public SAbstractLink select(    String it){
      SAbstractLinkId id=((DebugRegistryImpl)MPSModuleRepository.getInstance().getDebugRegistry()).getLinkId(myConceptId,it);
      if (myConceptId != null) {
        return (SAbstractLink)new SContainmentLinkAdapter(id);
      }
 else {
        return (SAbstractLink)(new SContainmentLinkAdapter(myConceptName,it));
      }
    }
  }
);
  return Sequence.fromIterable(seq).concat(SetSequence.fromSet(((Set<String>)d.getReferenceNames())).select(new ISelector<String,SReferenceLinkAdapter>(){
    public SReferenceLinkAdapter select(    String it){
      SAbstractLinkId id=((DebugRegistryImpl)MPSModuleRepository.getInstance().getDebugRegistry()).getLinkId(myConceptId,it);
      if (myConceptId != null) {
        return new SReferenceLinkAdapter(id);
      }
 else {
        return new SReferenceLinkAdapter(myConceptName,it);
      }
    }
  }
));
}
