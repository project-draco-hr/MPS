{
  this.dataHolder=dataHolder;
  if (dataHolder.getNodeDefaultSearchScopeProvider() != null) {
    defaultScopeProvider=new INodeReferentSearchScopeProviderWrapper(dataHolder.getNodeDefaultSearchScopeProvider());
  }
  properties=new HashMap<String,PropertyConstraintsDescriptor>();
  Set<String> overriddenProperties=new HashSet<String>();
  overriddenProperties.addAll(dataHolder.getNodePropertyGetters().keySet());
  overriddenProperties.addAll(dataHolder.getNodePropertySetters().keySet());
  overriddenProperties.addAll(dataHolder.getNodePropertyValidators().keySet());
  for (  String propertyName : overriddenProperties) {
    properties.put(propertyName,PropertyWrapper.getProperty(propertyName,DataHolderConstraintsDescriptor.this,dataHolder.getNodePropertyGetters().get(propertyName),dataHolder.getNodePropertySetters().get(propertyName),dataHolder.getNodePropertyValidators().get(propertyName)));
  }
  references=new HashMap<String,ReferenceConstraintsDescriptor>();
  Set<String> overriddenReferences=new HashSet<String>();
  overriddenReferences.addAll(dataHolder.getNodeReferentSetEventHandlers().keySet());
  overriddenReferences.addAll(dataHolder.getNodeNonDefaultSearchScopeProviders().keySet());
  for (  String role : overriddenReferences) {
    references.put(role,ReferenceWrapper.getReference(role,DataHolderConstraintsDescriptor.this,dataHolder.getNodeNonDefaultSearchScopeProviders().get(role),dataHolder.getNodeReferentSetEventHandlers().get(role)));
  }
  calcInheritance();
}
