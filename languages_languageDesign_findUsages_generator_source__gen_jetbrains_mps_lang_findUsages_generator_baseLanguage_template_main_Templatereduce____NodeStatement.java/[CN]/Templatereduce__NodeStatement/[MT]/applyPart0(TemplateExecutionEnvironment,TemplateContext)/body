{
  final SNode tnode1=environment.createOutputNode("jetbrains.mps.baseLanguage.structure.ExpressionStatement");
  try {
    environment.nodeCopied(context,tnode1,"tpl/r:00000000-0000-4000-0000-011c8959035c/1206533809810");
{
      final SNode tnode2=environment.createOutputNode("jetbrains.mps.baseLanguage.structure.DotExpression");
      try {
        environment.nodeCopied(context,tnode2,"tpl/r:00000000-0000-4000-0000-011c8959035c/1206533809811");
{
          final SNode tnode3=environment.createOutputNode("jetbrains.mps.baseLanguage.structure.VariableReference");
          try {
            environment.nodeCopied(context,tnode3,"tpl/r:00000000-0000-4000-0000-011c8959035c/3021153905151599942");
            environment.resolveInTemplateLater(tnode3,"variableDeclaration",templateNode_rm6jd2_c0a1a1a1a1a1a1a2,"tpl/r:00000000-0000-4000-0000-011c8959035c/1206533796715","_results",context);
          }
  finally {
          }
          if (tnode3 != null) {
            tnode2.addChild("operand",tnode3);
          }
        }
{
          final SNode tnode4=environment.createOutputNode("jetbrains.mps.baseLanguage.collections.structure.AddElementOperation");
          try {
            environment.nodeCopied(context,tnode4,"tpl/r:00000000-0000-4000-0000-011c8959035c/1206533809813");
{
              Collection<SNode> tlist5=null;
              final SNode copySrcInput5=QueriesGenerated.sourceNodeQuery_1206533809816(new SourceSubstituteMacroNodeContext(context,copySrcMacro_rm6jd2_b0a0c0b0b0c0b0b0b0c));
              tlist5=environment.copyNodes(TemplateUtil.singletonList(copySrcInput5),copySrcMacro_rm6jd2_b0a0c0b0b0c0b0b0b0c,"tpl/r:00000000-0000-4000-0000-011c8959035c/1206533809814",context);
              for (              SNode child6 : TemplateUtil.asNotNull(tlist5)) {
                tnode4.addChild("argument",child6);
              }
            }
          }
  finally {
          }
          if (tnode4 != null) {
            tnode2.addChild("operation",tnode4);
          }
        }
      }
  finally {
      }
      if (tnode2 != null) {
        tnode1.addChild("expression",tnode2);
      }
    }
  }
  finally {
  }
  return tnode1;
}
