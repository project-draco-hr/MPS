{
  if ((SNodeOperations.getPrevSibling(node) != null)) {
    this.appendNewLine();
    this.indentBuffer();
  }
  this.append("<");
  this.append(SPropertyOperations.getString(node,"tagName"));
  if (ListSequence.fromList(SLinkOperations.getTargets(node,"attributes",true)).isNotEmpty()) {
    this.append(" ");
  }
  this.increaseDepth();
{
    Iterable<SNode> collection=SLinkOperations.getTargets(node,"attributes",true);
    final SNode lastItem=Sequence.fromIterable(collection).last();
    for (    SNode item : collection) {
      appendNode(item);
      if (item != lastItem) {
        append(" ");
      }
    }
  }
  this.decreaseDepth();
  if (ListSequence.fromList(SLinkOperations.getTargets(node,"content",true)).isEmpty() && SPropertyOperations.getBoolean(node,"shortEmptyNotation")) {
    this.append(" />");
    return;
  }
  this.append(">");
  if (XmlElement_Behavior.call_isMultiline_8886258982030574875(node)) {
    this.appendNewLine();
    this.increaseDepth();
    this.indentBuffer();
{
      Iterable<SNode> collection=SLinkOperations.getTargets(node,"content",true);
      for (      SNode item : collection) {
        appendNode(item);
      }
    }
    this.decreaseDepth();
    this.appendNewLine();
    this.indentBuffer();
  }
 else {
    this.increaseDepth();
    this.increaseDepth();
{
      Iterable<SNode> collection=SLinkOperations.getTargets(node,"content",true);
      for (      SNode item : collection) {
        appendNode(item);
      }
    }
    this.decreaseDepth();
    this.decreaseDepth();
  }
  this.append("</");
  this.append(SPropertyOperations.getString(node,"tagName"));
  this.append(">");
}
