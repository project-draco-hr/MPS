{
  SNode type=SLinkOperations.getTarget(node,"type",true);
  if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.ClassifierType")) {
    if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguageInternal.structure.InternalClassifierType")) {
      SNode icf=SNodeOperations.cast(type,"jetbrains.mps.baseLanguageInternal.structure.InternalClassifierType");
      String pack=NameUtil.namespaceFromLongName(SPropertyOperations.getString(icf,"fqClassName"));
      String name=NameUtil.shortNameFromLongName(SPropertyOperations.getString(icf,"fqClassName"));
      BaseLanguageTextGen.internalClassName(pack,name,node,this);
    }
 else {
      BaseLanguageTextGen.internalClassifierName(SLinkOperations.getTarget(SNodeOperations.cast(type,"jetbrains.mps.baseLanguage.structure.ClassifierType"),"classifier",false),node,this);
    }
  }
 else {
    TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),type,this.getSNode());
  }
  this.append(".class");
}
