{
  initEditor("141381309807688262","141381309807688282");
  Mapper descendantMapper;
  final Wrappers._T<SNode> node=new Wrappers._T<SNode>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      node.value=SNodeOperations.cast(TestBody.this.getNodeById("141381309807688263"),"jetbrains.mps.lang.editor.diagram.testLanguage.structure.NodeWithName");
    }
  }
);
  descendantMapper=DecoratorTestRunner.prepareAndGetMapper(node.value,this.getEditorComponent(),BlockCell.class);
  Assert.assertTrue(descendantMapper != null);
  Assert.assertTrue(descendantMapper.getTarget() != null);
  Assert.assertTrue(descendantMapper.getTarget() instanceof NodeDecoratorView);
  NodeDecoratorView nodeDecoratorView=((NodeDecoratorView)descendantMapper.getTarget());
  Assert.assertTrue(nodeDecoratorView.hasError.get());
  View errorView=Sequence.fromIterable(JetpadUtils.getAllChildren(nodeDecoratorView)).findFirst(new IWhereFilter<View>(){
    public boolean accept(    View it){
      return it instanceof SelectionFrameView;
    }
  }
);
  Assert.assertTrue(errorView != null);
  Assert.assertTrue(errorView.visible().get());
}
