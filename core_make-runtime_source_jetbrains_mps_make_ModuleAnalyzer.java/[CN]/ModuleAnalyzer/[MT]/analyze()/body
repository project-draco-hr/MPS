{
  List<IMessage> errors=new ArrayList<IMessage>();
  boolean hasJavaToCompile=false;
  boolean hasResourcesToUpdate=false;
  for (  SModule module : myModulesContainer.getModules()) {
    if (!myModulesContainer.areClassesUpToDate(module)) {
      if (ModulesContainer.isCompileInMps(module)) {
        ModuleSources sources=myModulesContainer.getSources(module);
        hasResourcesToUpdate|=!sources.isResourcesUpToDate();
        hasJavaToCompile|=!sources.isJavaUpToDate();
      }
 else {
        String msg=String.format(COMPILED_IN_IDEA_DEPENDS_ON_COMPILED_IN_MPS,module.getModuleName());
        mySender.warn(msg,module);
      }
    }
  }
  Set<SModule> modulesWithRemovals=new HashSet<SModule>();
  Set<File> filesToDelete=new HashSet<File>();
  for (  SModule module : myModulesContainer.getModules()) {
    if (!myModulesContainer.areClassesUpToDate(module)) {
      if (ModulesContainer.isCompileInMps(module)) {
        modulesWithRemovals.add(module);
        filesToDelete.addAll(myModulesContainer.getSources(module).getFilesToDelete());
      }
    }
  }
  return ModuleAnalyzerResult.build(hasJavaToCompile,hasResourcesToUpdate,modulesWithRemovals,filesToDelete,errors);
}
