{
  try {
    for (    IModule _module : ListSequence.fromList(((MPSProject)MapSequence.fromMap(_params).get("project")).getModules())) {
      if (!(_module instanceof AbstractModule)) {
        continue;
      }
      AbstractModule module=((AbstractModule)_module);
      ModuleDescriptor descriptor=module.getModuleDescriptor();
      if (descriptor == null) {
        continue;
      }
      JavaModuleFacet facet=module.getFacet(JavaModuleFacet.class);
      if (facet == null) {
        continue;
      }
      final IFile classesGen=facet.getClassesGen();
      if (classesGen == null) {
        continue;
      }
      Collection<String> sp=descriptor.getSourcePaths();
      if (sp == null || sp.isEmpty()) {
        continue;
      }
      Collection<ModelRootDescriptor> mrs=descriptor.getModelRootDescriptors();
      boolean exist=CollectionSequence.fromCollection(mrs).select(new ISelector<ModelRootDescriptor,ModelRoot>(){
        public ModelRoot select(        ModelRootDescriptor it){
          return it.getRoot();
        }
      }
).where(new IWhereFilter<ModelRoot>(){
        public boolean accept(        ModelRoot it){
          return it != null && LanguageID.JAVA_MANAGER.equals(it.getManager()) && EqualUtil.equals(it.getPath(),classesGen.getPath());
        }
      }
).isNotEmpty();
      if (exist) {
        continue;
      }
      CollectionSequence.fromCollection(mrs).addElement(ModelRootDescriptor.getJavaStubsModelRoot(classesGen.getPath()));
      module.setModuleDescriptor(descriptor,false);
      module.save();
    }
    ClassLoaderManager.getInstance().reloadAll(new EmptyProgressMonitor());
  }
 catch (  Throwable t) {
    LOG.error("User's action execute method failed. Action:" + "AddSourcesToModelRoots",t);
  }
}
