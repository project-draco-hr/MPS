{
  return ModelAccess.instance().runReadAction(new Computable<TypeCheckingContext>(){
    public TypeCheckingContext compute(){
      if (node == null || node.isDisposed())       return null;
      SNode root=node.getContainingRoot();
      if (root == null)       return null;
synchronized (myLock) {
        TypeCheckingContext typeCheckingContext=getTypeCheckingContext(root);
        if (typeCheckingContext != null) {
          return typeCheckingContext;
        }
        typeCheckingContext=new TypeCheckingContext(root,myTypeChecker);
        myNodesToContexts.put(typeCheckingContext.getNode(),typeCheckingContext);
        SModel sModel=root.getModel();
        SModelDescriptor descriptor=sModel.getModelDescriptor();
        if (descriptor != null && !descriptor.hasModelListener(myModelListener)) {
          descriptor.addModelListener(myModelListener);
        }
        return typeCheckingContext;
      }
    }
  }
);
}
