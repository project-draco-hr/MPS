{
  final SModelReference model=StubHelper.uidForPackageInStubs(pName,LanguageID.JAVA,module,false);
  for (  final String cls : item.getRootClasses(pName)) {
    result.add(new IStubRootNodeDescriptor(){
      public String getName(){
        return cls;
      }
      public SNode getConcept(){
        ClassifierKind kind=item.getClassifierKind(("".equals(pName) ? cls : pName + "." + cls));
        if (kind == ClassifierKind.CLASS) {
          return SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassConcept");
        }
        if (kind == ClassifierKind.INTERFACE) {
          return SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Interface");
        }
        if (kind == ClassifierKind.ANNOTATIONS) {
          return SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Annotation");
        }
        if (kind == ClassifierKind.ENUM) {
          return SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.EnumClass");
        }
        return SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassConcept");
      }
      public SModelReference getModelReference(){
        return model;
      }
    }
);
  }
  for (  String subpack : item.getSubpackages(pName)) {
    iterateClassPath(module,item,result,subpack);
  }
}
