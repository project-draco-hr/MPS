{
  Set<SModule> result=new HashSet<SModule>();
  for (  SDependency dependency : module.getDeclaredDependencies()) {
    SModule m=dependency.getTarget();
    if (m == null) {
      if (dependency.getScope() == SDependencyScope.GENERATES_INTO || dependency.getScope() == SDependencyScope.DESIGN) {
        continue;
      }
      if (!checked) {
        continue;
      }
 else {
        throw new AbsentDependencyException(dependency);
      }
    }
    boolean isExport=dependency.isReexport() || dependency.getScope() == SDependencyScope.EXTENDS;
    if (includeNonReexport || isExport) {
      result.add(m);
    }
  }
  if (includeNonReexport) {
    if (runtimes) {
      for (      SLanguage l : module.getUsedLanguages()) {
        if (l.getSourceModule() == null) {
          if (!checked) {
            continue;
          }
 else {
            throw new AbsentDependencyException(l);
          }
        }
        for (        SModuleReference runtimeRef : l.getLanguageRuntimes()) {
          SModule runtime=ModuleRepositoryFacade.getInstance().getModule(runtimeRef);
          if (runtime != null) {
            result.add(runtime);
          }
        }
      }
    }
  }
  return result;
}
