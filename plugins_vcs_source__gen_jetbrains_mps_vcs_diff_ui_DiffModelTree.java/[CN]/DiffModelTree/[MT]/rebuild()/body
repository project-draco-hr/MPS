{
  final DiffModelTree.ModelTreeNode modelNode=new DiffModelTree.ModelTreeNode();
  Sequence.fromIterable(getAffectedRoots()).<DiffModelTree.RootTreeNode>select(new ISelector<SNodeId,DiffModelTree.RootTreeNode>(){
    public DiffModelTree.RootTreeNode select(    SNodeId r){
      return new DiffModelTree.RootTreeNode(r);
    }
  }
).sort(new ISelector<DiffModelTree.RootTreeNode,Comparable<?>>(){
    public Comparable<?> select(    DiffModelTree.RootTreeNode rtn){
      return rtn.myPresentation;
    }
  }
,true).visitAll(new IVisitor<DiffModelTree.RootTreeNode>(){
    public void visit(    DiffModelTree.RootTreeNode rtn){
      modelNode.add(rtn);
    }
  }
);
  return modelNode;
}
