{
  return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.GeneratorModulePointer",MetaIdFactory.conceptId(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x73246de9adecb80dL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").version(1).super_(MetaIdFactory.conceptId(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.smodel.structure.GeneratorIdentity").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x10802efe25aL),MetaIdFactory.conceptId(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x73246de9adeca173L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x73246de9adecb874L,"module",MetaIdFactory.conceptId(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x5ef5a1e853388b3L),false,false,false,new SNodePointer("r:00000000-0000-4000-0000-011c89590301(jetbrains.mps.lang.smodel.structure)","8296877263936075892"))).children(new String[]{"module"},new boolean[]{false}).alias("","As long as there's no runtime identity for generators (like SLanguage for language), GeneratorIdentity doesn't specify any behaviour methods, and we use SModuleReference here.").sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590301(jetbrains.mps.lang.smodel.structure)","8296877263936075789")).create();
}
