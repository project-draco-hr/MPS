{
switch (myConceptIndex.index(id)) {
case LanguageConceptSwitch.AbstractNodeRefExpression:
    return myConceptAbstractNodeRefExpression;
case LanguageConceptSwitch.AbstractOperationParameter:
  return myConceptAbstractOperationParameter;
case LanguageConceptSwitch.AbstractTypeCastExpression:
return myConceptAbstractTypeCastExpression;
case LanguageConceptSwitch.AggregationIdentity:
return myConceptAggregationIdentity;
case LanguageConceptSwitch.AllAttributeQualifier:
return myConceptAllAttributeQualifier;
case LanguageConceptSwitch.AsNodeOperation:
return myConceptAsNodeOperation;
case LanguageConceptSwitch.AsSConcept:
return myConceptAsSConcept;
case LanguageConceptSwitch.AssociationIdentity:
return myConceptAssociationIdentity;
case LanguageConceptSwitch.AttributeAccess:
return myConceptAttributeAccess;
case LanguageConceptSwitch.AttributeQualifier:
return myConceptAttributeQualifier;
case LanguageConceptSwitch.BootstrapAwareMetaObject:
return myConceptBootstrapAwareMetaObject;
case LanguageConceptSwitch.CheckedModuleQualifiedName:
return myConceptCheckedModuleQualifiedName;
case LanguageConceptSwitch.CheckedModuleReference:
return myConceptCheckedModuleReference;
case LanguageConceptSwitch.ChildAttributeQualifier:
return myConceptChildAttributeQualifier;
case LanguageConceptSwitch.ChildNodeRefExpression:
return myConceptChildNodeRefExpression;
case LanguageConceptSwitch.ConceptAliasOperation:
return myConceptConceptAliasOperation;
case LanguageConceptSwitch.ConceptFqNameRefExpression:
return myConceptConceptFqNameRefExpression;
case LanguageConceptSwitch.ConceptId:
return myConceptConceptId;
case LanguageConceptSwitch.ConceptIdRefExpression:
return myConceptConceptIdRefExpression;
case LanguageConceptSwitch.ConceptIdentity:
return myConceptConceptIdentity;
case LanguageConceptSwitch.ConceptMemberIdentity:
return myConceptConceptMemberIdentity;
case LanguageConceptSwitch.ConceptNodeType:
return myConceptConceptNodeType;
case LanguageConceptSwitch.ConceptRefExpression:
return myConceptConceptRefExpression;
case LanguageConceptSwitch.ConceptReference:
return myConceptConceptReference;
case LanguageConceptSwitch.ConceptShortDescriptionOperation:
return myConceptConceptShortDescriptionOperation;
case LanguageConceptSwitch.ConceptSwitchStatement:
return myConceptConceptSwitchStatement;
case LanguageConceptSwitch.Concept_GetAllSubConcepts:
return myConceptConcept_GetAllSubConcepts;
case LanguageConceptSwitch.Concept_GetAllSuperConcepts:
return myConceptConcept_GetAllSuperConcepts;
case LanguageConceptSwitch.Concept_GetDirectSuperConcepts:
return myConceptConcept_GetDirectSuperConcepts;
case LanguageConceptSwitch.Concept_GetHierarchy:
return myConceptConcept_GetHierarchy;
case LanguageConceptSwitch.Concept_IsExactlyOperation:
return myConceptConcept_IsExactlyOperation;
case LanguageConceptSwitch.Concept_IsSubConceptOfOperation:
return myConceptConcept_IsSubConceptOfOperation;
case LanguageConceptSwitch.Concept_IsSuperConceptOfOperation:
return myConceptConcept_IsSuperConceptOfOperation;
case LanguageConceptSwitch.Concept_NewInstance:
return myConceptConcept_NewInstance;
case LanguageConceptSwitch.ContainmentLinkId:
return myConceptContainmentLinkId;
case LanguageConceptSwitch.EnumMemberReference:
return myConceptEnumMemberReference;
case LanguageConceptSwitch.EnumMemberValueRefExpression:
return myConceptEnumMemberValueRefExpression;
case LanguageConceptSwitch.EnumMember_NameOperation:
return myConceptEnumMember_NameOperation;
case LanguageConceptSwitch.EnumMember_ValueOperation:
return myConceptEnumMember_ValueOperation;
case LanguageConceptSwitch.EqualsStructurallyExpression:
return myConceptEqualsStructurallyExpression;
case LanguageConceptSwitch.ExactConceptCase:
return myConceptExactConceptCase;
case LanguageConceptSwitch.GeneratorIdentity:
return myConceptGeneratorIdentity;
case LanguageConceptSwitch.GeneratorModulePointer:
return myConceptGeneratorModulePointer;
case LanguageConceptSwitch.IConceptSwitchCase:
return myConceptIConceptSwitchCase;
case LanguageConceptSwitch.ILinkAccess:
return myConceptILinkAccess;
case LanguageConceptSwitch.ILinkAccessQualifier:
return myConceptILinkAccessQualifier;
case LanguageConceptSwitch.ILinkAccessQualifierContainer:
return myConceptILinkAccessQualifierContainer;
case LanguageConceptSwitch.ILinkQualifier:
return myConceptILinkQualifier;
case LanguageConceptSwitch.IPropertyQualifier:
return myConceptIPropertyQualifier;
case LanguageConceptSwitch.IRefConceptArg:
return myConceptIRefConceptArg;
case LanguageConceptSwitch.IReferenceOperation:
return myConceptIReferenceOperation;
case LanguageConceptSwitch.IfInstanceOfStatement:
return myConceptIfInstanceOfStatement;
case LanguageConceptSwitch.IfInstanceOfVarReference:
return myConceptIfInstanceOfVarReference;
case LanguageConceptSwitch.IfInstanceOfVariable:
return myConceptIfInstanceOfVariable;
case LanguageConceptSwitch.LanguageId:
return myConceptLanguageId;
case LanguageConceptSwitch.LanguageIdentity:
return myConceptLanguageIdentity;
case LanguageConceptSwitch.LanguageRefExpression:
return myConceptLanguageRefExpression;
case LanguageConceptSwitch.LanguageReferenceExpression:
return myConceptLanguageReferenceExpression;
case LanguageConceptSwitch.LinkAttributeQualifier:
return myConceptLinkAttributeQualifier;
case LanguageConceptSwitch.LinkIdRefExpression:
return myConceptLinkIdRefExpression;
case LanguageConceptSwitch.LinkList_AddNewChildOperation:
return myConceptLinkList_AddNewChildOperation;
case LanguageConceptSwitch.LinkNameRefExpression:
return myConceptLinkNameRefExpression;
case LanguageConceptSwitch.LinkQualifier:
return myConceptLinkQualifier;
case LanguageConceptSwitch.LinkRefExpression:
return myConceptLinkRefExpression;
case LanguageConceptSwitch.LinkRefQualifier:
return myConceptLinkRefQualifier;
case LanguageConceptSwitch.Link_SetNewChildOperation:
return myConceptLink_SetNewChildOperation;
case LanguageConceptSwitch.Link_SetTargetOperation:
return myConceptLink_SetTargetOperation;
case LanguageConceptSwitch.ModelReferenceExpression:
return myConceptModelReferenceExpression;
case LanguageConceptSwitch.Model_AddRootOperation:
return myConceptModel_AddRootOperation;
case LanguageConceptSwitch.Model_CreateNewNodeOperation:
return myConceptModel_CreateNewNodeOperation;
case LanguageConceptSwitch.Model_CreateNewRootNodeOperation:
return myConceptModel_CreateNewRootNodeOperation;
case LanguageConceptSwitch.Model_GetLongNameOperation:
return myConceptModel_GetLongNameOperation;
case LanguageConceptSwitch.Model_GetModule:
return myConceptModel_GetModule;
case LanguageConceptSwitch.Model_NodesIncludingImportedOperation:
return myConceptModel_NodesIncludingImportedOperation;
case LanguageConceptSwitch.Model_NodesOperation:
return myConceptModel_NodesOperation;
case LanguageConceptSwitch.Model_RootsIncludingImportedOperation:
return myConceptModel_RootsIncludingImportedOperation;
case LanguageConceptSwitch.Model_RootsOperation:
return myConceptModel_RootsOperation;
case LanguageConceptSwitch.ModuleIdentity:
return myConceptModuleIdentity;
case LanguageConceptSwitch.ModulePointer:
return myConceptModulePointer;
case LanguageConceptSwitch.ModuleRefExpression:
return myConceptModuleRefExpression;
case LanguageConceptSwitch.ModuleReferenceExpression:
return myConceptModuleReferenceExpression;
case LanguageConceptSwitch.NodeAttributeQualifier:
return myConceptNodeAttributeQualifier;
case LanguageConceptSwitch.NodePointerExpression:
return myConceptNodePointerExpression;
case LanguageConceptSwitch.NodeRefExpression:
return myConceptNodeRefExpression;
case LanguageConceptSwitch.Node_ConceptMethodCall:
return myConceptNode_ConceptMethodCall;
case LanguageConceptSwitch.Node_CopyOperation:
return myConceptNode_CopyOperation;
case LanguageConceptSwitch.Node_DeleteOperation:
return myConceptNode_DeleteOperation;
case LanguageConceptSwitch.Node_DetachOperation:
return myConceptNode_DetachOperation;
case LanguageConceptSwitch.Node_GetAllSiblingsOperation:
return myConceptNode_GetAllSiblingsOperation;
case LanguageConceptSwitch.Node_GetAncestorOperation:
return myConceptNode_GetAncestorOperation;
case LanguageConceptSwitch.Node_GetAncestorsOperation:
return myConceptNode_GetAncestorsOperation;
case LanguageConceptSwitch.Node_GetChildrenAndChildAttributesOperation:
return myConceptNode_GetChildrenAndChildAttributesOperation;
case LanguageConceptSwitch.Node_GetChildrenOperation:
return myConceptNode_GetChildrenOperation;
case LanguageConceptSwitch.Node_GetConceptOperation:
return myConceptNode_GetConceptOperation;
case LanguageConceptSwitch.Node_GetContainingLinkOperation:
return myConceptNode_GetContainingLinkOperation;
case LanguageConceptSwitch.Node_GetContainingRoleOperation:
return myConceptNode_GetContainingRoleOperation;
case LanguageConceptSwitch.Node_GetContainingRootOperation:
return myConceptNode_GetContainingRootOperation;
case LanguageConceptSwitch.Node_GetDescendantsOperation:
return myConceptNode_GetDescendantsOperation;
case LanguageConceptSwitch.Node_GetIndexInParentOperation:
return myConceptNode_GetIndexInParentOperation;
case LanguageConceptSwitch.Node_GetModelOperation:
return myConceptNode_GetModelOperation;
case LanguageConceptSwitch.Node_GetNextSiblingOperation:
return myConceptNode_GetNextSiblingOperation;
case LanguageConceptSwitch.Node_GetNextSiblingsOperation:
return myConceptNode_GetNextSiblingsOperation;
case LanguageConceptSwitch.Node_GetParentOperation:
return myConceptNode_GetParentOperation;
case LanguageConceptSwitch.Node_GetPrevSiblingOperation:
return myConceptNode_GetPrevSiblingOperation;
case LanguageConceptSwitch.Node_GetPrevSiblingsOperation:
return myConceptNode_GetPrevSiblingsOperation;
case LanguageConceptSwitch.Node_GetReferenceOperation:
return myConceptNode_GetReferenceOperation;
case LanguageConceptSwitch.Node_GetReferencesOperation:
return myConceptNode_GetReferencesOperation;
case LanguageConceptSwitch.Node_GetReferentSearchScopeOperation:
return myConceptNode_GetReferentSearchScopeOperation;
case LanguageConceptSwitch.Node_GetSConceptOperation:
return myConceptNode_GetSConceptOperation;
case LanguageConceptSwitch.Node_InsertNewNextSiblingOperation:
return myConceptNode_InsertNewNextSiblingOperation;
case LanguageConceptSwitch.Node_InsertNewPrevSiblingOperation:
return myConceptNode_InsertNewPrevSiblingOperation;
case LanguageConceptSwitch.Node_InsertNextSiblingOperation:
return myConceptNode_InsertNextSiblingOperation;
case LanguageConceptSwitch.Node_InsertPrevSiblingOperation:
return myConceptNode_InsertPrevSiblingOperation;
case LanguageConceptSwitch.Node_IsAttributeOperation:
return myConceptNode_IsAttributeOperation;
case LanguageConceptSwitch.Node_IsInstanceOfOperation:
return myConceptNode_IsInstanceOfOperation;
case LanguageConceptSwitch.Node_IsNotNullOperation:
return myConceptNode_IsNotNullOperation;
case LanguageConceptSwitch.Node_IsNullOperation:
return myConceptNode_IsNullOperation;
case LanguageConceptSwitch.Node_IsRoleOperation:
return myConceptNode_IsRoleOperation;
case LanguageConceptSwitch.Node_PointerOperation:
return myConceptNode_PointerOperation;
case LanguageConceptSwitch.Node_ReplaceWithAnotherOperation:
return myConceptNode_ReplaceWithAnotherOperation;
case LanguageConceptSwitch.Node_ReplaceWithNewOperation:
return myConceptNode_ReplaceWithNewOperation;
case LanguageConceptSwitch.OfConceptOperation:
return myConceptOfConceptOperation;
case LanguageConceptSwitch.OperationParm_Concept:
return myConceptOperationParm_Concept;
case LanguageConceptSwitch.OperationParm_ConceptList:
return myConceptOperationParm_ConceptList;
case LanguageConceptSwitch.OperationParm_Inclusion:
return myConceptOperationParm_Inclusion;
case LanguageConceptSwitch.OperationParm_LinkQualifier:
return myConceptOperationParm_LinkQualifier;
case LanguageConceptSwitch.OperationParm_Root:
return myConceptOperationParm_Root;
case LanguageConceptSwitch.OperationParm_SameMetaLevel:
return myConceptOperationParm_SameMetaLevel;
case LanguageConceptSwitch.OperationParm_StopConceptList:
return myConceptOperationParm_StopConceptList;
case LanguageConceptSwitch.PoundExpression:
return myConceptPoundExpression;
case LanguageConceptSwitch.PropertyAttributeQualifier:
return myConceptPropertyAttributeQualifier;
case LanguageConceptSwitch.PropertyId:
return myConceptPropertyId;
case LanguageConceptSwitch.PropertyIdRefExpression:
return myConceptPropertyIdRefExpression;
case LanguageConceptSwitch.PropertyIdentity:
return myConceptPropertyIdentity;
case LanguageConceptSwitch.PropertyNameRefExpression:
return myConceptPropertyNameRefExpression;
case LanguageConceptSwitch.PropertyQualifier:
return myConceptPropertyQualifier;
case LanguageConceptSwitch.Property_HasValue_Enum:
return myConceptProperty_HasValue_Enum;
case LanguageConceptSwitch.Property_HasValue_Simple:
return myConceptProperty_HasValue_Simple;
case LanguageConceptSwitch.Property_RemoveOperation:
return myConceptProperty_RemoveOperation;
case LanguageConceptSwitch.Property_SetOperation:
return myConceptProperty_SetOperation;
case LanguageConceptSwitch.RefConcept_Reference:
return myConceptRefConcept_Reference;
case LanguageConceptSwitch.ReferenceLinkId:
return myConceptReferenceLinkId;
case LanguageConceptSwitch.Reference_GetLinkDeclarationOperation:
return myConceptReference_GetLinkDeclarationOperation;
case LanguageConceptSwitch.Reference_GetResolveInfo:
return myConceptReference_GetResolveInfo;
case LanguageConceptSwitch.Reference_GetRoleOperation:
return myConceptReference_GetRoleOperation;
case LanguageConceptSwitch.Reference_GetTargetOperation:
return myConceptReference_GetTargetOperation;
case LanguageConceptSwitch.SConceptOperation:
return myConceptSConceptOperation;
case LanguageConceptSwitch.SConceptType:
return myConceptSConceptType;
case LanguageConceptSwitch.SConceptTypeCastExpression:
return myConceptSConceptTypeCastExpression;
case LanguageConceptSwitch.SConceptTypeLiteral:
return myConceptSConceptTypeLiteral;
case LanguageConceptSwitch.SEnumMemberOperation:
return myConceptSEnumMemberOperation;
case LanguageConceptSwitch.SEnumMemberType:
return myConceptSEnumMemberType;
case LanguageConceptSwitch.SEnumOperation:
return myConceptSEnumOperation;
case LanguageConceptSwitch.SEnumOperationInvocation:
return myConceptSEnumOperationInvocation;
case LanguageConceptSwitch.SEnum_MemberForNameOperation:
return myConceptSEnum_MemberForNameOperation;
case LanguageConceptSwitch.SEnum_MemberForValueOperation:
return myConceptSEnum_MemberForValueOperation;
case LanguageConceptSwitch.SEnum_MemberOperation:
return myConceptSEnum_MemberOperation;
case LanguageConceptSwitch.SEnum_MembersOperation:
return myConceptSEnum_MembersOperation;
case LanguageConceptSwitch.SLinkAccess:
return myConceptSLinkAccess;
case LanguageConceptSwitch.SLinkImplicitSelect:
return myConceptSLinkImplicitSelect;
case LanguageConceptSwitch.SLinkListAccess:
return myConceptSLinkListAccess;
case LanguageConceptSwitch.SModelType:
return myConceptSModelType;
case LanguageConceptSwitch.SNodeCreator:
return myConceptSNodeCreator;
case LanguageConceptSwitch.SNodeListCreator:
return myConceptSNodeListCreator;
case LanguageConceptSwitch.SNodeListType:
return myConceptSNodeListType;
case LanguageConceptSwitch.SNodeOperation:
return myConceptSNodeOperation;
case LanguageConceptSwitch.SNodeType:
return myConceptSNodeType;
case LanguageConceptSwitch.SNodeTypeCastExpression:
return myConceptSNodeTypeCastExpression;
case LanguageConceptSwitch.SPropertyAccess:
return myConceptSPropertyAccess;
case LanguageConceptSwitch.SReferenceType:
return myConceptSReferenceType;
case LanguageConceptSwitch.SearchScopeType:
return myConceptSearchScopeType;
case LanguageConceptSwitch.SearchScope_ContainsOperation:
return myConceptSearchScope_ContainsOperation;
case LanguageConceptSwitch.SemanticDowncastExpression:
return myConceptSemanticDowncastExpression;
case LanguageConceptSwitch.SubconceptCase:
return myConceptSubconceptCase;
default :
return null;
}
}
