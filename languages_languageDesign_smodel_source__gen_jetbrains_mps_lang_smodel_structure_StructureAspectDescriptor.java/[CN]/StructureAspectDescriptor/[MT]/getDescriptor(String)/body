{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.AbstractNodeRefExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").abstract_().alias("","abstract node reference expression").staticScope(StaticScope.NONE).create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.AbstractOperationParameter").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.AllAttributeQualifier").super_("jetbrains.mps.lang.smodel.structure.AttributeQualifier").parents("jetbrains.mps.lang.smodel.structure.AttributeQualifier").alias("<all>","all attributes").create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.AsNodeOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("asNode","").staticScope(StaticScope.NONE).create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.AttributeAccess").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation","jetbrains.mps.lang.smodel.structure.ILinkAccess").children(new String[]{"qualifier"},new boolean[]{false}).alias("@","attribute access").staticScope(StaticScope.NONE).create();
case 5:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.AttributeQualifier").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
case 6:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.CheckedModuleQualifiedName").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").properties("moduleId").alias("module qualified name","").staticScope(StaticScope.NONE).create();
case 7:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.CheckedModuleReference").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").properties("moduleId").alias("module reference","").staticScope(StaticScope.NONE).create();
case 8:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.ChildNodeRefExpression").super_("jetbrains.mps.lang.smodel.structure.AbstractNodeRefExpression").parents("jetbrains.mps.lang.smodel.structure.AbstractNodeRefExpression","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").references("targetNode").children(new String[]{"parent"},new boolean[]{false}).alias("childNode","").staticScope(StaticScope.NONE).create();
case 9:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.ConceptFqNameRefExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").references("conceptDeclaration").alias("concept qualified name/<name>/","").staticScope(StaticScope.NONE).create();
case 10:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.ConceptPropertyNameRefExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").references("conceptDeclaration","conceptPropertyDeclaration").alias("concept property name/<name>/","").staticScope(StaticScope.NONE).create();
case 11:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.ConceptProperty_SetOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").children(new String[]{"value"},new boolean[]{false}).alias("set","").staticScope(StaticScope.NONE).create();
case 12:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.ConceptRefExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").references("conceptDeclaration").alias("concept/<name>/","concept reference").staticScope(StaticScope.NONE).create();
case 13:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.ConceptReference").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("concept").create();
case 14:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.ConceptSwitchStatement").super_("jetbrains.mps.baseLanguage.structure.Statement").parents("jetbrains.mps.baseLanguage.structure.Statement").children(new String[]{"expression","case"},new boolean[]{false,true}).alias("concept switch","").staticScope(StaticScope.NONE).create();
case 15:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.ConceptSwitchStatementCase").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"concept","body"},new boolean[]{false,false}).create();
case 16:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Concept_FindInstances").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").children(new String[]{"scope"},new boolean[]{false}).alias("find instances","").staticScope(StaticScope.NONE).create();
case 17:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Concept_GetAllSubConcepts").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").children(new String[]{"smodel","scope"},new boolean[]{false,false}).alias("sub-concepts","").staticScope(StaticScope.NONE).create();
case 18:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Concept_GetAllSuperConcepts").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("super-concepts/all","").staticScope(StaticScope.NONE).create();
case 19:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Concept_GetDirectSuperConcepts").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("super-concepts/direct","").staticScope(StaticScope.NONE).create();
case 20:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Concept_GetHierarchy").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("hierarchy","").staticScope(StaticScope.NONE).create();
case 21:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Concept_IsExactlyOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").children(new String[]{"conceptArgument"},new boolean[]{false}).alias("isExactly","concept declaration is exactly the same").staticScope(StaticScope.NONE).create();
case 22:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Concept_IsSubConceptOfOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").children(new String[]{"conceptArgument"},new boolean[]{false}).alias("isSubConceptOf","").staticScope(StaticScope.NONE).create();
case 23:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Concept_IsSuperConceptOfOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").children(new String[]{"conceptArgument"},new boolean[]{false}).alias("isSuperConceptOf","").staticScope(StaticScope.NONE).create();
case 24:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Concept_NewInstance").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").children(new String[]{"prototypeNode"},new boolean[]{false}).alias("new instance","create new node").staticScope(StaticScope.NONE).create();
case 25:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.EnumMemberReference").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").references("enumMember").alias("<<{enumMember}>>","").staticScope(StaticScope.NONE).create();
case 26:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.EnumMemberValueRefExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").references("enum","member").alias("enum member value/<name>/","value").staticScope(StaticScope.NONE).create();
case 27:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.EnumMember_NameOperation").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.smodel.structure.SEnumMemberOperation","jetbrains.mps.lang.core.structure.BaseConcept").alias("name","enum member name").staticScope(StaticScope.NONE).create();
case 28:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.EnumMember_ValueOperation").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.smodel.structure.SEnumMemberOperation","jetbrains.mps.lang.core.structure.BaseConcept").alias("value","enum member value").staticScope(StaticScope.NONE).create();
case 29:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.EqualsStructurallyExpression").super_("jetbrains.mps.baseLanguage.structure.BinaryOperation").parents("jetbrains.mps.baseLanguage.structure.BinaryOperation").alias("matches","nodes structural equality operation").staticScope(StaticScope.NONE).create();
case 30:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.ILinkAccess").interface_().create();
case 31:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.ILinkAccessQualifier").interface_().create();
case 32:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.ILinkAccessQualifierContainer").interface_().create();
case 33:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.ILinkQualifier").interface_().create();
case 34:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.IPropertyAccessQualifier").interface_().create();
case 35:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.IPropertyQualifier").interface_().create();
case 36:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.IRefConceptArg").interface_().create();
case 37:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.IReferenceOperation").interface_().parents("jetbrains.mps.baseLanguage.structure.IOperation").create();
case 38:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.IfInstanceOfStatement").super_("jetbrains.mps.baseLanguage.structure.Statement").parents("jetbrains.mps.baseLanguage.structure.Statement").references("nodeConcept").children(new String[]{"nodeExpression","body","variable"},new boolean[]{false,false,false}).alias("ifInstanceOf","if a node is instance of concept").staticScope(StaticScope.NONE).create();
case 39:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.IfInstanceOfVarReference").super_("jetbrains.mps.baseLanguage.structure.BaseVariableReference").parents("jetbrains.mps.baseLanguage.structure.BaseVariableReference").references("instanceOfVariable").staticScope(StaticScope.NONE).create();
case 40:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.IfInstanceOfVariable").super_("jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration").parents("jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration").create();
case 41:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.LanguageReferenceExpression").super_("jetbrains.mps.lang.smodel.structure.ModuleReferenceExpression").parents("jetbrains.mps.lang.smodel.structure.ModuleReferenceExpression").alias("language","").staticScope(StaticScope.NONE).create();
case 42:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.LinkAttributeQualifier").super_("jetbrains.mps.lang.smodel.structure.AttributeQualifier").parents("jetbrains.mps.lang.smodel.structure.AttributeQualifier").references("attributeConcept").children(new String[]{"linkQualifier"},new boolean[]{false}).create();
case 43:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.LinkList_AddAllOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").children(new String[]{"childNodes"},new boolean[]{false}).alias("add all","add children").staticScope(StaticScope.NONE).create();
case 44:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.LinkList_AddChildOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").children(new String[]{"childNode"},new boolean[]{false}).alias("add","add child").staticScope(StaticScope.NONE).create();
case 45:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.LinkList_AddNewChildOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").references("concept").alias("add new","add new child").staticScope(StaticScope.NONE).create();
case 46:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.LinkList_InsertChildFirstOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").children(new String[]{"childNode"},new boolean[]{false}).alias("insert first","insert child at first position").staticScope(StaticScope.NONE).create();
case 47:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.LinkList_RemoveAllChildrenOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("remove all","remove children").staticScope(StaticScope.NONE).create();
case 48:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.LinkNameRefExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").references("conceptDeclaration","linkDeclaration").alias("link name/<role>/","name").staticScope(StaticScope.NONE).create();
case 49:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.LinkQualifier").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.smodel.structure.ILinkQualifier").references("link").create();
case 50:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.LinkRefExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").references("conceptDeclaration","linkDeclaration").alias("link/<role>/","link reference").staticScope(StaticScope.NONE).create();
case 51:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.LinkRefQualifier").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.smodel.structure.ILinkAccessQualifier").references("link").create();
case 52:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Link_DeleteChildOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("remove","remove child").staticScope(StaticScope.NONE).create();
case 53:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Link_SetNewChildOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").references("concept").alias("set new","set new child").staticScope(StaticScope.NONE).create();
case 54:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Link_SetTargetOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").children(new String[]{"linkTarget"},new boolean[]{false}).alias("set","set child or referent").staticScope(StaticScope.NONE).create();
case 55:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.ModelReferenceExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").properties("name","stereotype","fqName").alias("model","").staticScope(StaticScope.NONE).create();
case 56:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Model_AddRootOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").children(new String[]{"nodeArgument"},new boolean[]{false}).alias("add root","").staticScope(StaticScope.NONE).create();
case 57:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Model_CreateNewNodeOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").references("concept").children(new String[]{"nodeId","prototypeNode"},new boolean[]{false,false}).alias("new node","").staticScope(StaticScope.NONE).create();
case 58:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Model_CreateNewRootNodeOperation").super_("jetbrains.mps.lang.smodel.structure.Model_CreateNewNodeOperation").parents("jetbrains.mps.lang.smodel.structure.Model_CreateNewNodeOperation").alias("new root node","").staticScope(StaticScope.NONE).create();
case 59:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Model_GetLongNameOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("name","").staticScope(StaticScope.NONE).create();
case 60:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Model_GetModule").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("module","").staticScope(StaticScope.NONE).create();
case 61:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Model_NodesIncludingImportedOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").references("concept").children(new String[]{"scope"},new boolean[]{false}).alias("nodesIncludingImported","").staticScope(StaticScope.NONE).create();
case 62:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Model_NodesOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").references("concept").alias("nodes","").staticScope(StaticScope.NONE).create();
case 63:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Model_RootsIncludingImportedOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").references("concept").children(new String[]{"scope"},new boolean[]{false}).alias("rootsIncludingImported","").staticScope(StaticScope.NONE).create();
case 64:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Model_RootsOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").references("concept").alias("roots","").staticScope(StaticScope.NONE).create();
case 65:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.ModuleReferenceExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").properties("name","moduleId").alias("module","").staticScope(StaticScope.NONE).create();
case 66:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.NodeAttributeQualifier").super_("jetbrains.mps.lang.smodel.structure.AttributeQualifier").parents("jetbrains.mps.lang.smodel.structure.AttributeQualifier").references("attributeConcept").create();
case 67:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.NodePointerExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").references("referentNode").alias("nodePointer /<name>/","named node pointer").staticScope(StaticScope.NONE).create();
case 68:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.NodeRefExpression").super_("jetbrains.mps.lang.smodel.structure.AbstractNodeRefExpression").parents("jetbrains.mps.lang.smodel.structure.AbstractNodeRefExpression").references("referentNode").alias("node /<name>/","named node reference").staticScope(StaticScope.NONE).create();
case 69:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation","jetbrains.mps.baseLanguage.structure.IMethodCall").properties("directCall").references("conceptMethodDeclaration").staticScope(StaticScope.NONE).create();
case 70:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_CopyOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("copy","creates copy of this node").staticScope(StaticScope.NONE).create();
case 71:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_DeleteOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("delete","delete this node").staticScope(StaticScope.NONE).create();
case 72:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_DetachOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("detach","removes from container").staticScope(StaticScope.NONE).create();
case 73:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_GetAllSiblingsOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("siblings","").staticScope(StaticScope.NONE).create();
case 74:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_GetAncestorOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("ancestor","").staticScope(StaticScope.NONE).create();
case 75:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_GetAncestorsOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("ancestors","").staticScope(StaticScope.NONE).create();
case 76:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_GetChildrenOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("children","").staticScope(StaticScope.NONE).create();
case 77:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_GetConceptOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("concept","get node's concept declaration").staticScope(StaticScope.NONE).create();
case 78:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_GetContainingLinkOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("containingLink","").staticScope(StaticScope.NONE).create();
case 79:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_GetContainingRoleOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("containingRole","").staticScope(StaticScope.NONE).create();
case 80:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_GetContainingRootOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("containing root","").staticScope(StaticScope.NONE).create();
case 81:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_GetDescendantsOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("descendants","").staticScope(StaticScope.NONE).create();
case 82:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_GetIndexInParentOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("index","gets node's index in parent's collection").staticScope(StaticScope.NONE).create();
case 83:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_GetModelOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("model","").staticScope(StaticScope.NONE).create();
case 84:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_GetNextSiblingOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("next-sibling","").staticScope(StaticScope.NONE).create();
case 85:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_GetNextSiblingsOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("next-siblings","").staticScope(StaticScope.NONE).create();
case 86:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_GetParentOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("parent","").staticScope(StaticScope.NONE).create();
case 87:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_GetPrevSiblingOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("prev-sibling","").staticScope(StaticScope.NONE).create();
case 88:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_GetPrevSiblingsOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("prev-siblings","").staticScope(StaticScope.NONE).create();
case 89:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_GetReferenceOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").children(new String[]{"linkQualifier"},new boolean[]{false}).alias("reference","").staticScope(StaticScope.NONE).create();
case 90:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_GetReferencesOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("references","").staticScope(StaticScope.NONE).create();
case 91:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_GetReferentSearchScopeOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").references("referenceLink").children(new String[]{"operationContext"},new boolean[]{false}).alias("search scope","obtain referent search scope").staticScope(StaticScope.NONE).create();
case 92:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_InsertNewNextSiblingOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").references("concept").alias("new next-sibling","").staticScope(StaticScope.NONE).create();
case 93:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_InsertNewPrevSiblingOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").references("concept").alias("new prev-sibling","").staticScope(StaticScope.NONE).create();
case 94:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_InsertNextSiblingOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").children(new String[]{"insertedNode"},new boolean[]{false}).alias("add next-sibling","").staticScope(StaticScope.NONE).create();
case 95:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_InsertPrevSiblingOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").children(new String[]{"insertedNode"},new boolean[]{false}).alias("add prev-sibling","").staticScope(StaticScope.NONE).create();
case 96:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_IsAttributeOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("isAttribute","").staticScope(StaticScope.NONE).create();
case 97:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_IsInstanceOfOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").children(new String[]{"conceptArgument"},new boolean[]{false}).alias("isInstanceOf","").staticScope(StaticScope.NONE).create();
case 98:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_IsNotNullOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("isNotNull","").staticScope(StaticScope.NONE).create();
case 99:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_IsNullOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("isNull","").staticScope(StaticScope.NONE).create();
case 100:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_IsRoleOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").references("conceptOfParent","linkInParent").alias("hasRole","test role of the node").staticScope(StaticScope.NONE).create();
case 101:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_ReplaceWithAnotherOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").children(new String[]{"replacementNode"},new boolean[]{false}).alias("replace with","").staticScope(StaticScope.NONE).create();
case 102:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Node_ReplaceWithNewOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").references("concept").alias("replace with new","").staticScope(StaticScope.NONE).create();
case 103:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.OfConceptOperation").super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").parents("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").children(new String[]{"requestedConcept"},new boolean[]{false}).alias("ofConcept","select elements of the specified concept").create();
case 104:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.OperationParm_Concept").super_("jetbrains.mps.lang.smodel.structure.AbstractOperationParameter").parents("jetbrains.mps.lang.smodel.structure.AbstractOperationParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").children(new String[]{"conceptArgument"},new boolean[]{false}).alias("concept","").create();
case 105:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.OperationParm_ConceptList").super_("jetbrains.mps.lang.smodel.structure.AbstractOperationParameter").parents("jetbrains.mps.lang.smodel.structure.AbstractOperationParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").children(new String[]{"concept"},new boolean[]{true}).alias("concept in","").create();
case 106:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.OperationParm_Inclusion").super_("jetbrains.mps.lang.smodel.structure.AbstractOperationParameter").parents("jetbrains.mps.lang.smodel.structure.AbstractOperationParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("+","inclusion").create();
case 107:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.OperationParm_LinkQualifier").super_("jetbrains.mps.lang.smodel.structure.AbstractOperationParameter").parents("jetbrains.mps.lang.smodel.structure.AbstractOperationParameter","jetbrains.mps.lang.smodel.structure.ILinkAccessQualifierContainer").children(new String[]{"linkQualifier"},new boolean[]{false}).alias("linkQualifier","").create();
case 108:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.OperationParm_Root").super_("jetbrains.mps.lang.smodel.structure.AbstractOperationParameter").parents("jetbrains.mps.lang.smodel.structure.AbstractOperationParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("root","").create();
case 109:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.OperationParm_SameMetaLevel").super_("jetbrains.mps.lang.smodel.structure.AbstractOperationParameter").parents("jetbrains.mps.lang.smodel.structure.AbstractOperationParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("M","same metalevel").create();
case 110:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.OperationParm_StopConceptList").super_("jetbrains.mps.lang.smodel.structure.AbstractOperationParameter").parents("jetbrains.mps.lang.smodel.structure.AbstractOperationParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").children(new String[]{"concept"},new boolean[]{true}).alias("stop concepts are","").create();
case 111:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.PoundExpression").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.smodel.structure.IPropertyAccessQualifier","jetbrains.mps.lang.smodel.structure.IPropertyQualifier","jetbrains.mps.lang.smodel.structure.ILinkAccessQualifier","jetbrains.mps.lang.smodel.structure.ILinkQualifier","jetbrains.mps.lang.smodel.structure.IRefConceptArg").children(new String[]{"expression"},new boolean[]{false}).alias("# <expr>","expression").create();
case 112:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.PropertyAttributeQualifier").super_("jetbrains.mps.lang.smodel.structure.AttributeQualifier").parents("jetbrains.mps.lang.smodel.structure.AttributeQualifier").references("attributeConcept").children(new String[]{"propertyQualifier"},new boolean[]{false}).create();
case 113:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.PropertyNameRefExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").references("conceptDeclaration","propertyDeclaration").alias("property name/<role>/","name").staticScope(StaticScope.NONE).create();
case 114:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.PropertyQualifier").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.smodel.structure.IPropertyQualifier").references("property").create();
case 115:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Property_HasValue_Enum").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").children(new String[]{"value"},new boolean[]{false}).alias("is","check value of enum property").staticScope(StaticScope.NONE).create();
case 116:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Property_HasValue_Simple").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").children(new String[]{"value"},new boolean[]{false}).alias("is","check value of property").staticScope(StaticScope.NONE).create();
case 117:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Property_RemoveOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").alias("remove","").staticScope(StaticScope.NONE).create();
case 118:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Property_SetOperation").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").children(new String[]{"value"},new boolean[]{false}).alias("set","").staticScope(StaticScope.NONE).create();
case 119:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.ReadConceptReferenceExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").references("conceptDeclaration").alias("read concept","concept reference").staticScope(StaticScope.NONE).create();
case 120:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.RefConcept_Reference").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.smodel.structure.IRefConceptArg").references("conceptDeclaration").staticScope(StaticScope.NONE).create();
case 121:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Reference_GetLinkDeclarationOperation").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.smodel.structure.IReferenceOperation").alias("linkDeclaration","").staticScope(StaticScope.NONE).create();
case 122:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Reference_GetResolveInfo").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.smodel.structure.IReferenceOperation").alias("resolveInfo","").staticScope(StaticScope.NONE).create();
case 123:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Reference_GetRoleOperation").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.smodel.structure.IReferenceOperation").alias("role","").staticScope(StaticScope.NONE).create();
case 124:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.Reference_GetTargetOperation").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.smodel.structure.IReferenceOperation").alias("target","").staticScope(StaticScope.NONE).create();
case 125:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SConceptLinkAccess").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").references("conceptLinkDeclaration").staticScope(StaticScope.NONE).create();
case 126:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").references("conceptProperty").staticScope(StaticScope.NONE).create();
case 127:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SConceptType").super_("jetbrains.mps.baseLanguage.structure.Type").parents("jetbrains.mps.baseLanguage.structure.Type").references("conceptDeclaraton").alias("concept< >","concept type").staticScope(StaticScope.NONE).create();
case 128:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SEnumMemberOperation").interface_().parents("jetbrains.mps.baseLanguage.structure.IOperation").create();
case 129:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SEnumMemberType").super_("jetbrains.mps.baseLanguage.structure.Type").parents("jetbrains.mps.baseLanguage.structure.Type").references("enum").alias("enummember< >","enum member type").staticScope(StaticScope.NONE).create();
case 130:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SEnumOperation").interface_().create();
case 131:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SEnumOperationInvocation").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").references("enumDeclaration").children(new String[]{"operation"},new boolean[]{false}).alias("enum/<name>/.operation","enum operation").staticScope(StaticScope.NONE).create();
case 132:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SEnum_MemberForNameOperation").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.smodel.structure.SEnumOperation").children(new String[]{"nameExpression"},new boolean[]{false}).alias("memberForName()","parse enum name").create();
case 133:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SEnum_MemberForValueOperation").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.smodel.structure.SEnumOperation").children(new String[]{"valueExpression"},new boolean[]{false}).alias("memberForValue()","parse enum value").create();
case 134:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SEnum_MemberOperation").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.smodel.structure.SEnumOperation").references("member").alias("<{member}>","enum member access").create();
case 135:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SEnum_MembersOperation").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.smodel.structure.SEnumOperation").alias("members","members list").create();
case 136:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SLinkAccess").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation","jetbrains.mps.lang.smodel.structure.ILinkAccess").references("link").staticScope(StaticScope.NONE).create();
case 137:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SLinkImplicitSelect").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.structure.IOperation").references("link").staticScope(StaticScope.NONE).create();
case 138:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SLinkListAccess").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation","jetbrains.mps.lang.smodel.structure.ILinkAccess").references("link").staticScope(StaticScope.NONE).create();
case 139:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SModelType").super_("jetbrains.mps.baseLanguage.structure.Type").parents("jetbrains.mps.baseLanguage.structure.Type").alias("model","model type").staticScope(StaticScope.NONE).create();
case 140:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SNodeCreator").super_("jetbrains.mps.baseLanguage.structure.AbstractCreator").parents("jetbrains.mps.baseLanguage.structure.AbstractCreator").children(new String[]{"createdType","prototypeNode"},new boolean[]{false,false}).alias("node<>","create new node").staticScope(StaticScope.NONE).create();
case 141:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SNodeListCreator").super_("jetbrains.mps.baseLanguage.structure.AbstractCreator").parents("jetbrains.mps.baseLanguage.structure.AbstractCreator").children(new String[]{"createdType"},new boolean[]{false}).alias("nlist","list of (s)nodes").staticScope(StaticScope.NONE).create();
case 142:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SNodeListType").super_("jetbrains.mps.baseLanguage.structure.Type").parents("jetbrains.mps.baseLanguage.structure.Type","jetbrains.mps.baseLanguage.structure.IGenericType").references("elementConcept").alias("nlist<>","list of nodes").staticScope(StaticScope.NONE).create();
case 143:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SNodeOperation").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.structure.IOperation").children(new String[]{"parameter"},new boolean[]{true}).abstract_().staticScope(StaticScope.NONE).create();
case 144:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SNodeType").super_("jetbrains.mps.baseLanguage.structure.Type").parents("jetbrains.mps.baseLanguage.structure.Type").references("concept").alias("node<>","node type").staticScope(StaticScope.NONE).create();
case 145:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SNodeTypeCastExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").properties("asCast").references("concept").children(new String[]{"leftExpression"},new boolean[]{false}).alias(":","").staticScope(StaticScope.NONE).create();
case 146:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SPropertyAccess").super_("jetbrains.mps.lang.smodel.structure.SNodeOperation").parents("jetbrains.mps.lang.smodel.structure.SNodeOperation").references("property").staticScope(StaticScope.NONE).create();
case 147:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SReferenceType").super_("jetbrains.mps.baseLanguage.structure.Type").parents("jetbrains.mps.baseLanguage.structure.Type").alias("reference","reference type").staticScope(StaticScope.NONE).create();
case 148:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SearchScopeType").super_("jetbrains.mps.baseLanguage.structure.Type").parents("jetbrains.mps.baseLanguage.structure.Type").alias("search scope","search scope type").staticScope(StaticScope.NONE).create();
case 149:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SearchScope_ContainsOperation").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.structure.IOperation").children(new String[]{"nodeToCheck"},new boolean[]{false}).alias("contains","test node visibility in scope").staticScope(StaticScope.NONE).create();
case 150:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.SemanticDowncastExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").children(new String[]{"leftExpression"},new boolean[]{false}).alias("/","downcast to lower semantic level").staticScope(StaticScope.NONE).create();
case 151:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure.StaticConceptMethodCall").super_("jetbrains.mps.baseLanguage.structure.BaseMethodCall").parents("jetbrains.mps.baseLanguage.structure.BaseMethodCall").references("concept","methodDeclaration").alias("<static concept method call>","").staticScope(StaticScope.NONE).create();
case 152:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.structure._LinkAccessT").super_("jetbrains.mps.baseLanguage.structure.Type").parents("jetbrains.mps.baseLanguage.structure.Type","jetbrains.mps.baseLanguage.structure.IInternalType").properties("singularCradinality","aggregation").references("targetConcept").alias("link acc","").staticScope(StaticScope.NONE).create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
