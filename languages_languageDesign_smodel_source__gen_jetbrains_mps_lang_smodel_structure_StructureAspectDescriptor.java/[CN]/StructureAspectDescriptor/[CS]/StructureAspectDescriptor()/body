{
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.AbstractNodeRefExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.AbstractOperationParameter",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.AllAttributeQualifier",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.AsNodeOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.AttributeAccess",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.AttributeQualifier",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.CheckedModuleQualifiedName",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.CheckedModuleReference",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.ChildNodeRefExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.ConceptFqNameRefExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.ConceptRefExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.ConceptReference",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.ConceptSwitchStatement",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.ConceptSwitchStatementCase",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Concept_GetAllSubConcepts",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Concept_GetAllSuperConcepts",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Concept_GetDirectSuperConcepts",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Concept_GetHierarchy",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Concept_IsExactlyOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Concept_IsSubConceptOfOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Concept_IsSuperConceptOfOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Concept_NewInstance",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.EnumMemberReference",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.EnumMemberValueRefExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.EnumMember_NameOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.EnumMember_ValueOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.EqualsStructurallyExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.ILinkAccess",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.ILinkAccessQualifier",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.ILinkAccessQualifierContainer",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.ILinkQualifier",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.IPropertyAccessQualifier",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.IPropertyQualifier",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.IRefConceptArg",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.IReferenceOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.IfInstanceOfStatement",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.IfInstanceOfVarReference",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.IfInstanceOfVariable",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.LanguageReferenceExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.LinkAttributeQualifier",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.LinkList_AddNewChildOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.LinkNameRefExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.LinkQualifier",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.LinkRefExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.LinkRefQualifier",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Link_SetNewChildOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Link_SetTargetOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.ModelReferenceExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Model_AddRootOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Model_CreateNewNodeOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Model_CreateNewRootNodeOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Model_GetLongNameOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Model_GetModule",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Model_NodesIncludingImportedOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Model_NodesOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Model_RootsIncludingImportedOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Model_RootsOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.ModuleReferenceExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.NodeAttributeQualifier",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.NodePointerExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.NodeRefExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_CopyOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_DeleteOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_DetachOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_GetAllSiblingsOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_GetAncestorOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_GetAncestorsOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_GetChildrenOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_GetConceptOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_GetContainingLinkOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_GetContainingRoleOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_GetContainingRootOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_GetDescendantsOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_GetIndexInParentOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_GetModelOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_GetNextSiblingOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_GetNextSiblingsOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_GetParentOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_GetPrevSiblingOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_GetPrevSiblingsOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_GetReferenceOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_GetReferencesOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_GetReferentSearchScopeOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_InsertNewNextSiblingOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_InsertNewPrevSiblingOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_InsertNextSiblingOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_InsertPrevSiblingOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_IsAttributeOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_IsInstanceOfOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_IsNotNullOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_IsNullOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_IsRoleOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_ReplaceWithAnotherOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Node_ReplaceWithNewOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.OfConceptOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.OperationParm_Concept",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.OperationParm_ConceptList",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.OperationParm_Inclusion",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.OperationParm_LinkQualifier",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.OperationParm_Root",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.OperationParm_SameMetaLevel",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.OperationParm_StopConceptList",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.PoundExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.PropertyAttributeQualifier",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.PropertyNameRefExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.PropertyQualifier",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Property_HasValue_Enum",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Property_HasValue_Simple",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Property_RemoveOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Property_SetOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.RefConcept_Reference",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Reference_GetLinkDeclarationOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Reference_GetResolveInfo",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Reference_GetRoleOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.Reference_GetTargetOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SConceptType",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SEnumMemberOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SEnumMemberType",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SEnumOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SEnumOperationInvocation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SEnum_MemberForNameOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SEnum_MemberForValueOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SEnum_MemberOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SEnum_MembersOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SLinkAccess",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SLinkImplicitSelect",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SLinkListAccess",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SModelType",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SNodeCreator",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SNodeListCreator",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SNodeListType",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SNodeOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SNodeType",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SNodeTypeCastExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SPropertyAccess",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SReferenceType",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SearchScopeType",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SearchScope_ContainsOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.smodel.structure.SemanticDowncastExpression",null);
}
