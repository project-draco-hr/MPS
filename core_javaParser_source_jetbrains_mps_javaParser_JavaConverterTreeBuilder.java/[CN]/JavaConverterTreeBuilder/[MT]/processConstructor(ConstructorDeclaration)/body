{
  jetbrains.mps.baseLanguage.structure.ConstructorDeclaration ctor=(jetbrains.mps.baseLanguage.structure.ConstructorDeclaration)myTypesProvider.getRaw(x.binding);
  try {
    myCurrentMethod=ctor;
    ConstructorInvocationStatement superOrThisCall=null;
    ExplicitConstructorCall ctorCall=x.constructorCall;
    if (ctorCall != null) {
      superOrThisCall=processExpression(ctorCall);
    }
    StatementList body=ctor.getBody();
    if (body == null) {
      body=StatementList.newInstance(myCurrentModel);
      ctor.setBody(body);
    }
    if (superOrThisCall != null) {
      body.addStatement(superOrThisCall);
    }
    for (    Statement statement : processStatements(x.statements)) {
      body.addStatement(statement);
    }
    myCurrentMethod=null;
  }
 catch (  Throwable e) {
    throw new JavaConverterException(e);
  }
}
