{
  if (variable instanceof LocalVariableDeclaration) {
    LocalVariableReference reference=LocalVariableReference.newInstance(myCurrentModel);
    reference.setLocalVariableDeclaration((LocalVariableDeclaration)variable);
    return reference;
  }
 else   if (variable instanceof ParameterDeclaration) {
    ParameterReference parameterReference=ParameterReference.newInstance(myCurrentModel);
    parameterReference.setParameterDeclaration((ParameterDeclaration)variable);
    return parameterReference;
  }
 else   if (variable instanceof FieldDeclaration) {
    FieldDeclaration field=(FieldDeclaration)variable;
    FieldReferenceOperation fro=FieldReferenceOperation.newInstance(myCurrentModel);
    fro.setFieldDeclaration(field);
    DotExpression dotExpression=DotExpression.newInstance(myCurrentModel);
    ThisExpression thisExpression=ThisExpression.newInstance(myCurrentModel);
    if (!myCurrentClass.equals(field.getParent())) {
      thisExpression.setClassConcept((Classifier)field.getParent());
    }
    dotExpression.setOperand(thisExpression);
    dotExpression.setOperation(fro);
    return dotExpression;
  }
 else   if (variable instanceof StaticFieldDeclaration) {
    LocalStaticFieldReference lsfr=LocalStaticFieldReference.newInstance(myCurrentModel);
    lsfr.setStaticFieldDeclaration((StaticFieldDeclaration)variable);
    return lsfr;
  }
  throw new JavaConverterException("Unknown VariableDeclaration subclass.");
}
