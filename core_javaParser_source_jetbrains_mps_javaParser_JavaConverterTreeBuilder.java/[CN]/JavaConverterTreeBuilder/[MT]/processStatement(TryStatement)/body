{
  Statement tryBlock=processStatementRefl(x.tryBlock);
  List<Statement> catchBlocks=new ArrayList<Statement>();
  Statement finallyBlock=processStatementRefl(x.finallyBlock);
  if (x.catchBlocks != null) {
    for (int i=0, c=x.catchArguments.length; i < c; ++i) {
    }
    for (int i=0, c=x.catchBlocks.length; i < c; ++i) {
      catchBlocks.add(processStatementRefl(x.catchBlocks[i]));
    }
  }
  if (finallyBlock != null) {
    jetbrains.mps.baseLanguage.structure.TryStatement tryStatement=jetbrains.mps.baseLanguage.structure.TryStatement.newInstance(myCurrentModel);
    for (    Statement catchBlock : catchBlocks) {
      CatchClause catchClause=CatchClause.newInstance(myCurrentModel);
      tryStatement.addCatchClause(catchClause);
      catchClause.setCatchBody(getStatementListFromStatement(catchBlock));
    }
    tryStatement.setFinallyBody(getStatementListFromStatement(finallyBlock));
    tryStatement.setBody(getStatementListFromStatement(tryBlock));
    return tryStatement;
  }
 else {
    TryCatchStatement tryCatchStatement=TryCatchStatement.newInstance(myCurrentModel);
    for (    Statement catchBlock : catchBlocks) {
      CatchClause catchClause=CatchClause.newInstance(myCurrentModel);
      tryCatchStatement.addCatchClause(catchClause);
      catchClause.setCatchBody(getStatementListFromStatement(catchBlock));
    }
    tryCatchStatement.setBody(getStatementListFromStatement(tryBlock));
    return tryCatchStatement;
  }
}
