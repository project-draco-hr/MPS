{
  if (binding instanceof ProblemBinding) {
    LocalVariableReference varReference=LocalVariableReference.newInstance(myCurrentModel);
    SReference reference=myTypesProvider.createErrorReference(LocalVariableReference.VARIABLE_DECLARATION,new String(((ProblemBinding)binding).name),varReference.getNode());
    varReference.getNode().addReference(reference);
    return varReference;
  }
  INodeAdapter target=myTypesProvider.getRaw(binding);
  if (!(target instanceof VariableDeclaration)) {
    return null;
  }
  VariableDeclaration variable=(VariableDeclaration)target;
  jetbrains.mps.baseLanguage.structure.Expression result;
  if (variable instanceof LocalVariableDeclaration) {
    LocalVariableReference reference=LocalVariableReference.newInstance(myCurrentModel);
    reference.setLocalVariableDeclaration((LocalVariableDeclaration)variable);
    result=reference;
  }
 else   if (variable instanceof ParameterDeclaration) {
    ParameterReference parameterReference=ParameterReference.newInstance(myCurrentModel);
    parameterReference.setParameterDeclaration((ParameterDeclaration)variable);
    result=parameterReference;
  }
 else {
    throw new JavaConverterException("Unknown VariableDeclaration subclass.");
  }
  return result;
}
