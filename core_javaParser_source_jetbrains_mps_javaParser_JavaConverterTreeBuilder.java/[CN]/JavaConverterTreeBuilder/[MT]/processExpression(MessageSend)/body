{
  BaseMethodDeclaration method=(BaseMethodDeclaration)myBindingMap.get(x.binding);
  IMethodCall methodCall=null;
  jetbrains.mps.baseLanguage.structure.Expression result;
  if (x.receiver instanceof SuperReference || x.receiver instanceof QualifiedSuperReference) {
    SuperMethodCall smc=SuperMethodCall.newInstance(myCurrentModel);
    smc.setInstanceMethodDeclaration((InstanceMethodDeclaration)method);
    methodCall=smc;
    result=smc;
  }
 else {
    jetbrains.mps.baseLanguage.structure.Expression qualifier;
    InstanceMethodCallOperation imco=InstanceMethodCallOperation.newInstance(myCurrentModel);
    methodCall=imco;
    if (x.receiver instanceof ThisReference) {
      if (method instanceof StaticMethodDeclaration) {
        qualifier=null;
        return null;
      }
 else {
        if (x.receiver instanceof QualifiedThisReference) {
          qualifier=processExpressionRefl(x.receiver);
        }
 else {
          qualifier=processExpressionRefl(x.receiver);
        }
      }
    }
 else {
      methodCall=InstanceMethodCallOperation.newInstance(myCurrentModel);
      qualifier=processExpressionRefl(x.receiver);
    }
    methodCall.setBaseMethodDeclaration(method);
    DotExpression dotExpression=DotExpression.newInstance(myCurrentModel);
    dotExpression.setOperand(qualifier);
    dotExpression.setOperation(imco);
    result=dotExpression;
  }
  addCallArgs(x.arguments,methodCall);
  return result;
}
