{
  runUpdateTask(new _FunctionTypes._void_P0_E0(){
    public void invoke(){
      SNodeId nodeId=event.getNode().getSNodeId();
      final String propertyName=event.getPropertyName();
      Set<ModelChange> changes=myNodesToDirectChanges.getByFirst(nodeId);
      ModelChange old=SetSequence.fromSet(changes).findFirst(new IWhereFilter<ModelChange>(){
        public boolean accept(        ModelChange ch){
          return ch instanceof SetPropertyChange && eq_5iuzi5_a0a0a0a0a0a0e0a0a0a0a0a(propertyName,((SetPropertyChange)ch).getPropertyName());
        }
      }
);
      if (old != null) {
        removeChange(old);
      }
      ChangeSet cs=myDifference.getChangeSet();
      ChangeSetBuilder builder=ChangeSetBuilder.createBuilder(cs);
      builder.buildPropertyChanges(cs.getOldModel().getNodeById(nodeId),event.getNode(),propertyName);
      ListSequence.fromList(builder.getNewChanges()).visitAll(new IVisitor<ModelChange>(){
        public void visit(        ModelChange ch){
          addChange(ch);
        }
      }
);
    }
  }
,event.getNode());
}
