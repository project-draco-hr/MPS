{
  if ("jetbrains.mps.ui.modeling.structure.UIObject".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new UIObject_Constraints());
  }
  if ("jetbrains.mps.ui.modeling.structure.UIProperty".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.UIProperty"));
  }
  if ("jetbrains.mps.ui.modeling.structure.Event".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.Event"));
  }
  if ("jetbrains.mps.ui.modeling.structure.EventProducer".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.EventProducer"));
  }
  if ("jetbrains.mps.ui.modeling.structure.EditableUIProperty".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.EditableUIProperty"));
  }
  if ("jetbrains.mps.ui.modeling.structure.UIObjectTemplate".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.UIObjectTemplate"));
  }
  if ("jetbrains.mps.ui.modeling.structure.UIPropertyAccessCode".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new UIPropertyAccessCode_Constraints());
  }
  if ("jetbrains.mps.ui.modeling.structure.UIPropertySetter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.UIPropertySetter"));
  }
  if ("jetbrains.mps.ui.modeling.structure.ThisUIObjectParam".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.ThisUIObjectParam"));
  }
  if ("jetbrains.mps.ui.modeling.structure.PropertyValueParam".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.PropertyValueParam"));
  }
  if ("jetbrains.mps.ui.modeling.structure.UIPropertyGetter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.UIPropertyGetter"));
  }
  if ("jetbrains.mps.ui.modeling.structure.EventHandlerTemplate".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EventHandlerTemplate_Constraints());
  }
  if ("jetbrains.mps.ui.modeling.structure.ThisEventParam".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.ThisEventParam"));
  }
  if ("jetbrains.mps.ui.modeling.structure.EventHandlerParam".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.EventHandlerParam"));
  }
  if ("jetbrains.mps.ui.modeling.structure.EventProducerParam".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.EventProducerParam"));
  }
  if ("jetbrains.mps.ui.modeling.structure.EventHandlerSetup".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.EventHandlerSetup"));
  }
  if ("jetbrains.mps.ui.modeling.structure.EventProperty".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.EventProperty"));
  }
  if ("jetbrains.mps.ui.modeling.structure.EventPropertyGetter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EventPropertyGetter_Constraints());
  }
  if ("jetbrains.mps.ui.modeling.structure.PropertyChangeHandlerSetup".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.PropertyChangeHandlerSetup"));
  }
  if ("jetbrains.mps.ui.modeling.structure.EditableUIPropertyAccessCode".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EditableUIPropertyAccessCode_Constraints());
  }
  if ("jetbrains.mps.ui.modeling.structure.PropertyChangeHandlerParam".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.PropertyChangeHandlerParam"));
  }
  if ("jetbrains.mps.ui.modeling.structure.HasTemplate".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.HasTemplate"));
  }
  if ("jetbrains.mps.ui.modeling.structure.Container".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Container_Constraints());
  }
  if ("jetbrains.mps.ui.modeling.structure.ContainerTemplate".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ContainerTemplate_Constraints());
  }
  if ("jetbrains.mps.ui.modeling.structure.ItemUIObjectParam".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.ItemUIObjectParam"));
  }
  if ("jetbrains.mps.ui.modeling.structure.ContainerItemAdder".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.ContainerItemAdder"));
  }
  if ("jetbrains.mps.ui.modeling.structure.UIObjectFactory".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.UIObjectFactory"));
  }
  if ("jetbrains.mps.ui.modeling.structure.ContextUIObjectParam".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ContextUIObjectParam_Constraints());
  }
  if ("jetbrains.mps.ui.modeling.structure.Context".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Context_Constraints());
  }
  if ("jetbrains.mps.ui.modeling.structure.AuxObjectTemplate".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.AuxObjectTemplate"));
  }
  if ("jetbrains.mps.ui.modeling.structure.AuxObjectFactory".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.AuxObjectFactory"));
  }
  if ("jetbrains.mps.ui.modeling.structure.Auxillary".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.Auxillary"));
  }
  if ("jetbrains.mps.ui.modeling.structure.AuxObjectAccessOp".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AuxObjectAccessOp_Constraints());
  }
  if ("jetbrains.mps.ui.modeling.structure.OverrideAnnotation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.OverrideAnnotation"));
  }
  if ("jetbrains.mps.ui.modeling.structure.ChildAspectDefinition".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.ChildAspectDefinition"));
  }
  if ("jetbrains.mps.ui.modeling.structure.ContainerItemIterator".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.ContainerItemIterator"));
  }
  if ("jetbrains.mps.ui.modeling.structure.ContainerItemRemover".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.ContainerItemRemover"));
  }
  if ("jetbrains.mps.ui.modeling.structure.BeforeUIObjectParam".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.BeforeUIObjectParam"));
  }
  if ("jetbrains.mps.ui.modeling.structure.ContainerItemInserter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.ContainerItemInserter"));
  }
  if ("jetbrains.mps.ui.modeling.structure.ContainerItemClearer".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.ContainerItemClearer"));
  }
  if ("jetbrains.mps.ui.modeling.structure.Geometry".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.Geometry"));
  }
  if ("jetbrains.mps.ui.modeling.structure.ForceLayoutCode".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.ForceLayoutCode"));
  }
  if ("jetbrains.mps.ui.modeling.structure.HorizontalConstraint".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.HorizontalConstraint"));
  }
  if ("jetbrains.mps.ui.modeling.structure.VerticalConstraint".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.VerticalConstraint"));
  }
  if ("jetbrains.mps.ui.modeling.structure.LayoutConstraint".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.LayoutConstraint"));
  }
  if ("jetbrains.mps.ui.modeling.structure.LayoutConstraintType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new LayoutConstraintType_Constraints());
  }
  if ("jetbrains.mps.ui.modeling.structure.LayoutConstraintExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.LayoutConstraintExpression"));
  }
  if ("jetbrains.mps.ui.modeling.structure.BoxLayoutConstraint".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.BoxLayoutConstraint"));
  }
  if ("jetbrains.mps.ui.modeling.structure.ExpressionWithUnit".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.ExpressionWithUnit"));
  }
  if ("jetbrains.mps.ui.modeling.structure.UnitType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.UnitType"));
  }
  if ("jetbrains.mps.ui.modeling.structure.ApplyConstraintStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.ApplyConstraintStatement"));
  }
  if ("jetbrains.mps.ui.modeling.structure.CellLayoutConstraint".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.CellLayoutConstraint"));
  }
  if ("jetbrains.mps.ui.modeling.structure.ColumnLayoutConstraint".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.ColumnLayoutConstraint"));
  }
  if ("jetbrains.mps.ui.modeling.structure.RowLayoutConstraint".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.RowLayoutConstraint"));
  }
  if ("jetbrains.mps.ui.modeling.structure.UIAction".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.UIAction"));
  }
  if ("jetbrains.mps.ui.modeling.structure.UIActionCode".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.UIActionCode"));
  }
  if ("jetbrains.mps.ui.modeling.structure.AlignmentLayoutConstraint".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.AlignmentLayoutConstraint"));
  }
  if ("jetbrains.mps.ui.modeling.structure.VerticalAlignment".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.VerticalAlignment"));
  }
  if ("jetbrains.mps.ui.modeling.structure.HorizontalAlignment".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.HorizontalAlignment"));
  }
  if ("jetbrains.mps.ui.modeling.structure.AspectParameterDecl".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AspectParameterDecl_Constraints());
  }
  if ("jetbrains.mps.ui.modeling.structure.AspectParameterRef".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AspectParameterRef_Constraints());
  }
  if ("jetbrains.mps.ui.modeling.structure.IAspectParameterHolder".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.IAspectParameterHolder"));
  }
  if ("jetbrains.mps.ui.modeling.structure.IPartiallyDefinedStub".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.ui.modeling.structure.IPartiallyDefinedStub"));
  }
  return null;
}
