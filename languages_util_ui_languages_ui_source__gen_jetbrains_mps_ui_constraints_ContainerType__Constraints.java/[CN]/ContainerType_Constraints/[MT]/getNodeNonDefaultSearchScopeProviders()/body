{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("container",new BaseNodeReferenceSearchScopeProvider(){
    public boolean hasPresentation(){
      return true;
    }
    public String getPresentation(    final IOperationContext operationContext,    final PresentationReferentConstraintContext _context){
      return (SPropertyOperations.getString(_context.getParameterNode(),"name") + "@" + SPropertyOperations.getString(SNodeOperations.as(SNodeOperations.getParent(_context.getParameterNode()),"jetbrains.mps.lang.core.structure.INamedConcept"),"name"));
    }
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      return ListSequence.fromList(SModelOperations.getNodesIncludingImported(_context.getModel(),operationContext.getScope(),"jetbrains.mps.ui.modeling.structure.UIObject")).<SNode>translate(new ITranslator2<SNode,SNode>(){
        public Iterable<SNode> translate(        SNode o){
          return SLinkOperations.getTargets(o,"compartment",true);
        }
      }
);
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:383ba4d2-f4ec-41a6-8e7f-108e84a7c9f9(jetbrains.mps.ui.constraints)","5776545240964509131");
    }
  }
);
  return result;
}
