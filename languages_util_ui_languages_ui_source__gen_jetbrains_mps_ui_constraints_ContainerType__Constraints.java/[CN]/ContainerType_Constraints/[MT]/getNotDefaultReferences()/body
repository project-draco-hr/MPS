{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("container",new BaseReferenceConstraintsDescriptor("container",this){
    @Override public boolean hasOwnOnReferenceSetHandler(){
      return true;
    }
    @Override public boolean validate(    final SNode referenceNode,    final SNode oldReferentNode,    final SNode newReferentNode,    final IScope scope){
      return true;
    }
    @Override public void onReferenceSet(    final SNode referenceNode,    final SNode oldReferentNode,    final SNode newReferentNode,    final IScope scope){
      SLinkOperations.setTarget(referenceNode,"container",newReferentNode,false);
      SLinkOperations.setTarget(referenceNode,"uiObject",SNodeOperations.as(SNodeOperations.getParent(newReferentNode),"jetbrains.mps.ui.modeling.structure.UIObject"),false);
    }
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public boolean hasPresentation(){
          return true;
        }
        @Override public String getPresentation(        final IOperationContext operationContext,        final ReferencePresentationContext _context){
          return (SPropertyOperations.getString(_context.getParameterNode(),"name") + "@" + SPropertyOperations.getString(SNodeOperations.as(SNodeOperations.getParent(_context.getParameterNode()),"jetbrains.mps.lang.core.structure.INamedConcept"),"name"));
        }
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return ListSequence.fromList(SModelOperations.getNodesIncludingImported(_context.getModel(),operationContext.getScope(),"jetbrains.mps.ui.modeling.structure.UIObject")).translate(new ITranslator2<SNode,SNode>(){
            public Iterable<SNode> translate(            SNode o){
              return SLinkOperations.getTargets(o,"compartment",true);
            }
          }
);
        }
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_l7bg5l_a0a3a0a0a4a0b0a1a0;
        }
      }
;
    }
  }
);
  return references;
}
