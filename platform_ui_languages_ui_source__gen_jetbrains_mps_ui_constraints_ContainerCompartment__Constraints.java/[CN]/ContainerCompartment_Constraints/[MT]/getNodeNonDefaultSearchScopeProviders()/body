{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("container",new BaseNodeReferenceSearchScopeProvider(){
    public boolean hasPresentation(){
      return true;
    }
    public String getPresentation(    final IOperationContext operationContext,    final PresentationReferentConstraintContext _context){
      return SPropertyOperations.getString(_context.getParameterNode(),"name");
    }
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      Iterable<SNode> allConts=Sequence.fromIterable(UIObject_Behavior.call_allExtends_8115675450774407592(SLinkOperations.getTarget(SNodeOperations.as(_context.getEnclosingNode(),"jetbrains.mps.ui.structure.UIObjectStatement"),"uiObject",false))).<SNode>translate(new ITranslator2<SNode,SNode>(){
        public Iterable<SNode> translate(        SNode uio){
          return SLinkOperations.getTargets(uio,"compartment",true);
        }
      }
);
      Iterable<SNode> specializedConts=Sequence.fromIterable(UIObject_Behavior.call_allExtends_8115675450774407592(SLinkOperations.getTarget(SNodeOperations.as(_context.getEnclosingNode(),"jetbrains.mps.ui.structure.UIObjectStatement"),"uiObject",false))).<SNode>translate(new ITranslator2<SNode,SNode>(){
        public Iterable<SNode> translate(        SNode uio){
          return SLinkOperations.getTargets(uio,"compartment",true);
        }
      }
).<SNode>select(new ISelector<SNode,SNode>(){
        public SNode select(        SNode comp){
          return SLinkOperations.getTarget(comp,"specializes",false);
        }
      }
).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode comp){
          return comp != null;
        }
      }
);
      Iterable<SNode> existingConts=ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.as(_context.getEnclosingNode(),"jetbrains.mps.ui.structure.UIObjectStatement"),"compartment",true)).<SNode>select(new ISelector<SNode,SNode>(){
        public SNode select(        SNode comp){
          return SLinkOperations.getTarget(comp,"container",false);
        }
      }
);
      return Sequence.fromIterable(allConts).subtract(Sequence.fromIterable(specializedConts)).subtract(Sequence.fromIterable(existingConts));
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:383ba4d2-f4ec-41a6-8e7f-108e84a7c9f9(jetbrains.mps.ui.constraints)","4391079257750083009");
    }
  }
);
  return result;
}
