{
  Set<SReference> result=new HashSet<SReference>();
  if (progress == null)   progress=IAdaptiveProgressMonitor.NULL_PROGRESS_MONITOR;
  progressTasks(manageTasks,ModelsProgressUtil.TASK_KIND_FIND_NODE_USAGES,"Finding usages...",progress,scope);
  for (  SNode node : nodes) {
    result.addAll(findUsagesOfNodeInCache(node,scope));
  }
  for (  SModelDescriptor sm : scope.getModelDescriptors()) {
    if (!(sm instanceof EditableSModelDescriptor))     continue;
    EditableSModelDescriptor esm=(EditableSModelDescriptor)sm;
    if (SModelRepository.getInstance().isChanged(esm)) {
      sm.getSModel();
      result.addAll(new ModelFindOperations(sm).findUsages(nodes));
    }
  }
  return result;
}
