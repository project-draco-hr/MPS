{
  SNode node=ListSequence.fromList(this.myNodesToRefactor).first();
  while (node != null) {
    if (SNodeOperations.isInstanceOf(node,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"))) {
      return node;
    }
    if (SNodeOperations.isInstanceOf(node,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x108bbca0f48L,"jetbrains.mps.baseLanguage.structure.ConceptFunction"))) {
      return node;
    }
    node=SNodeOperations.getParent(node);
  }
  throw new IllegalStateException("can't be applied in this case");
}
