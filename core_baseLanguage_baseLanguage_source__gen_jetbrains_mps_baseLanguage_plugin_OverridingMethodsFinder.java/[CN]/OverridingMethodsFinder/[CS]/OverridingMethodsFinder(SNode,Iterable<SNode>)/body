{
  Map<String,Set<SNode>> nameToMethodsMap=MapSequence.<String,Set<SNode>>fromMap(new HashMap<String,Set<SNode>>());
  for (  SNode methodToCheck : Sequence.<SNode>fromIterable(methods).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return canOverride(it);
    }
  }
)) {
    SetSequence.fromSet(safeGet(nameToMethodsMap,SPropertyOperations.getString(methodToCheck,"name"))).addElement(methodToCheck);
  }
  if (MapSequence.<String,Set<SNode>>fromMap(nameToMethodsMap).isNotEmpty()) {
    collectOverridingMethodsInClassifierHierarchy(container,nameToMethodsMap,SetSequence.<SNode>fromSet(new HashSet<SNode>()));
  }
}
