{
  SNode dotOperand=IOperation_Behavior.call_getOperand_1213877410070(SNodeOperations.cast(SNodeOperations.getParent(SNodeOperations.cast(_context.getEnclosingNode(),"jetbrains.mps.lang.smodel.structure.LinkAttributeAccessQualifier")),"jetbrains.mps.baseLanguage.structure.IOperation"));
  SNode nodeType=TypeChecker.getInstance().getRuntimeSupport().coerce_(TypeChecker.getInstance().getTypeOf(dotOperand),HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.lang.smodel.structure.SNodeType"),true);
  if (nodeType == null) {
    return null;
  }
  SNode dotOperandConcept=SLinkOperations.getTarget(nodeType,"concept",false);
  if (dotOperandConcept == null) {
    dotOperandConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.core.structure.BaseConcept");
  }
  List<SNode> links=AbstractConceptDeclaration_Behavior.call_getLinkDeclarations_1213877394480(dotOperandConcept);
  links=ListSequence.fromList(links).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SPropertyOperations.hasValue(it,"metaClass","reference","reference");
    }
  }
).toListSequence();
  return links;
}
