{
  final Wrappers._T<List<SModuleReference>> langRefs=new Wrappers._T<List<SModuleReference>>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      Iterable<Language> langs=ModuleRepositoryFacade.getInstance().getAllModules(Language.class);
      langRefs.value=Sequence.fromIterable(langs).where(new IWhereFilter<Language>(){
        public boolean accept(        Language it){
          return VisibleModuleRegistry.getInstance().isVisible(it);
        }
      }
).select(new ISelector<Language,SModuleReference>(){
        public SModuleReference select(        Language lang){
          return lang.getModuleReference();
        }
      }
).toListSequence();
    }
  }
);
  return CommonChoosers.showDialogModuleCollectionChooser(null,"language",langRefs.value,null);
}
