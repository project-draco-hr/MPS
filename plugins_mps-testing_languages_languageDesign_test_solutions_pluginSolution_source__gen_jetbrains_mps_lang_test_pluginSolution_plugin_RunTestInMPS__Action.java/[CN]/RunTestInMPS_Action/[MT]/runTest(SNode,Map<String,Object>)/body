{
  try {
    final String className=ITestCase_BehaviorDescriptor.getClassName_idhGBnqtL.invoke(ITestMethod_BehaviorDescriptor.getTestCase_idhGBgWVd.invoke(test));
    final String testName=ITestMethod_BehaviorDescriptor.getTestName_idhGBohAB.invoke(test);
    System.out.println("Test " + className + "."+ testName);
    final Class c=ClassLoaderManager.getInstance().getClass(((SModel)MapSequence.fromMap(_params).get("model")).getModule(),ITestCase_BehaviorDescriptor.getClassName_idhGBnqtL.invoke(ITestMethod_BehaviorDescriptor.getTestCase_idhGBgWVd.invoke(test)));
    final Method meth=c.getMethod("runTest",String.class,String.class,Boolean.TYPE);
    Constructor ctor=c.getConstructor(Project.class,SModel.class);
    final Object testClass=ctor.newInstance(((Project)MapSequence.fromMap(_params).get("project")),((SModel)MapSequence.fromMap(_params).get("model")));
    Thread thread=new Thread(new Runnable(){
      @Override public void run(){
        try {
          meth.invoke(testClass,className + "$" + NodesTestCase_BehaviorDescriptor.getTestBodyName_idhOw0ICJ.invoke(SNodeOperations.asSConcept(MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L,0x98deb16074f1d86cL,0x11b55b49e46L,"jetbrains.mps.lang.test.structure.NodesTestCase").getDeclarationNode())),testName,true);
        }
 catch (        Throwable e) {
          e.printStackTrace();
        }
      }
    }
);
    thread.start();
  }
 catch (  Throwable e) {
    e.printStackTrace();
  }
}
