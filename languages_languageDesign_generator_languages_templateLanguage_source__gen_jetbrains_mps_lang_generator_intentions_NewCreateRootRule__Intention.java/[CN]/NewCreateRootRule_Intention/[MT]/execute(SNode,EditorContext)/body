{
  List<SNode> configs=SModelOperations.getRoots(SNodeOperations.getModel(node),"jetbrains.mps.lang.generator.structure.MappingConfiguration");
  if (ListSequence.fromList(configs).count() > 1) {
    Iterable<SNode> sameVPackConfigs=ListSequence.fromList(configs).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return Comparing.equal(SPropertyOperations.getString(it,"virtualPackage"),SPropertyOperations.getString(node,"virtualPackage"));
      }
    }
);
    if (Sequence.fromIterable(sameVPackConfigs).isNotEmpty()) {
      configs=Sequence.fromIterable(sameVPackConfigs).toListSequence();
    }
  }
  if (ListSequence.fromList(configs).count() > 1) {
  }
  SNode rule=SNodeFactoryOperations.addNewChild(ListSequence.fromList(configs).first(),"createRootRule","jetbrains.mps.lang.generator.structure.CreateRootRule");
  SLinkOperations.setTarget(rule,"templateNode",node,false);
  MPSEditorOpener opener=editorContext.getOperationContext().getComponent(MPSEditorOpener.class);
  opener.editNode(rule,editorContext.getOperationContext());
}
