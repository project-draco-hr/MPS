{
  result.append("(");
  List<SNode> parameters=ConceptFunction_BehaviorDescriptor.getParameters_idhEwIGRM.invoke(__thisNode__);
  boolean isFirst=true;
  for (  SNode cfp : parameters) {
    if (!(isFirst)) {
      result.append(", ");
    }
    isFirst=false;
    result.append(SPropertyOperations.getString(cfp,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0x46ab0ad5826c74caL,"conceptAlias")));
  }
  result.append(")->");
  SNode expectedReturnType=ConceptFunction_BehaviorDescriptor.getExpectedReturnType_idhEwIGRD.invoke(__thisNode__);
  if (expectedReturnType == null) {
    result.append("void");
  }
 else {
    result.append(BaseConcept_BehaviorDescriptor.getPresentation_idhEwIMiw.invoke(expectedReturnType));
  }
  if (ListSequence.fromList(IMethodLike_BehaviorDescriptor.getThrowableTypes_id5op8ooRkkc7.invoke(__thisNode__)).isNotEmpty()) {
    result.append(" throws ");
    boolean isFirstThrowable=true;
    for (    SNode throwableType : IMethodLike_BehaviorDescriptor.getThrowableTypes_id5op8ooRkkc7.invoke(__thisNode__)) {
      if (!(isFirstThrowable)) {
        result.append(", ");
      }
      isFirstThrowable=false;
      result.append(BaseConcept_BehaviorDescriptor.getPresentation_idhEwIMiw.invoke(throwableType));
    }
  }
  return result.toString();
}
