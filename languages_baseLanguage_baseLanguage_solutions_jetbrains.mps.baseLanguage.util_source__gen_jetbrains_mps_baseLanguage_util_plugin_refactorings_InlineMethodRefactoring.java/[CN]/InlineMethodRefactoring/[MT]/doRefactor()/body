{
  SNode body=SNodeOperations.copyNode(SLinkOperations.getTarget(this.myMethodDeclaration,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1ffL,"body")));
  Map<SNode,SNode> paramsMap=this.compareParameters();
  SNode callStatement=SNodeOperations.getNodeAncestor(this.myMethodCall,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b215L,"jetbrains.mps.baseLanguage.structure.Statement"),false,false);
  SNode returnVar=null;
  if (!(SNodeOperations.isInstanceOf(this.myReturnType,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc6bf96dL,"jetbrains.mps.baseLanguage.structure.VoidType")))) {
    this.addLastReturnStatement(body);
  }
  if (this.myHasManyReturns && !(SNodeOperations.isInstanceOf(this.myReturnType,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc6bf96dL,"jetbrains.mps.baseLanguage.structure.VoidType")))) {
    returnVar=this.createLocalVariableDeclaration(callStatement,"result",this.myReturnType);
    SNode stat=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc67c7f0L,"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement"));
    SLinkOperations.setTarget(stat,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc67c7f0L,0xf8cc67c7f1L,"localVariableDeclaration"),returnVar);
    SNodeOperations.insertPrevSiblingChild(callStatement,stat);
  }
  this.replaceParameters(body,paramsMap);
  if (this.myOperand != null) {
    this.replaceThisByOperand(body);
  }
  this.replaceReturnSatements(body,returnVar,callStatement);
  if (returnVar != null) {
    SNode ref=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c77f1e98L,"jetbrains.mps.baseLanguage.structure.VariableReference"));
    SLinkOperations.setTarget(ref,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c77f1e98L,0xf8cc6bf960L,"variableDeclaration"),returnVar);
    SNodeOperations.replaceWithAnother(this.myMethodCall,ref);
    SNodeOperations.insertNextSiblingChild(callStatement,SNodeOperations.copyNode(callStatement));
  }
  SNode classAncestor=SNodeOperations.getNodeAncestor(this.myMethodDeclaration,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"),false,false);
  if (classAncestor != null && classAncestor != SNodeOperations.getNodeAncestor(this.myMethodCall,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"),false,false)) {
    this.replaceLocalStaticMethodCalls(body,classAncestor);
    this.replaceLocalInstanceCalls(body,classAncestor);
  }
  for (  SNode statement : ListSequence.fromList(SLinkOperations.getChildren(body,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b200L,0xf8cc6bf961L,"statement")))) {
    SNodeOperations.insertPrevSiblingChild(callStatement,statement);
  }
  SNodeOperations.deleteNode(callStatement);
}
