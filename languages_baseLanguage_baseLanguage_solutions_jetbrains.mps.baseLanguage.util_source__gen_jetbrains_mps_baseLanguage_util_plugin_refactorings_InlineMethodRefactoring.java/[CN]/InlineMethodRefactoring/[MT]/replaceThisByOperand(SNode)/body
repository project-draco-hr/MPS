{
  if (!((SNodeOperations.isInstanceOf(this.myOperand,MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),1224609861009l,"jetbrains.mps.baseLanguage.structure.IThisExpression")) || SNodeOperations.isInstanceOf(this.myOperand,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,"jetbrains.mps.baseLanguage.structure.VariableReference")) || SNodeOperations.isInstanceOf(this.myOperand,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1070475926800l,"jetbrains.mps.baseLanguage.structure.StringLiteral"))))) {
    SNode statement=SNodeOperations.getNodeAncestor(this.myMethodCall,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123157l,"jetbrains.mps.baseLanguage.structure.Statement"),false,false);
    SNode typeForMethodCall=getTypeForMethodCall(myMethodCall);
    SNode type=(typeForMethodCall != null ? typeForMethodCall : SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(myOperand),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068431790189l,"jetbrains.mps.baseLanguage.structure.Type")));
    this.myOperand=this.createVariable(statement,"instance",type,this.myOperand);
  }
  for (  SNode thisExpr : ListSequence.fromList(SNodeOperations.getNodeDescendants(body,MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),1224609861009l,"jetbrains.mps.baseLanguage.structure.IThisExpression"),false,new SAbstractConcept[]{}))) {
    SNodeOperations.replaceWithAnother(thisExpr,SNodeOperations.copyNode(this.myOperand));
  }
}
