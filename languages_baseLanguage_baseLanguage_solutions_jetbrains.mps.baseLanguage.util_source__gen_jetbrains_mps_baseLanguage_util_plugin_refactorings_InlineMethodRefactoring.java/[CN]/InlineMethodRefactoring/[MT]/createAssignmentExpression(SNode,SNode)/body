{
  SNode expression=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068498886294l,"jetbrains.mps.baseLanguage.structure.AssignmentExpression")));
  SNode ref=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,"jetbrains.mps.baseLanguage.structure.VariableReference")));
  SLinkOperations.setTarget(expression,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1215693861676l,1068498886295l,"lValue"),ref);
  SLinkOperations.setTarget(ref,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,1068581517664l,"variableDeclaration"),returnVar);
  SLinkOperations.setTarget(expression,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1215693861676l,1068498886297l,"rValue"),SNodeOperations.copyNode(returnExpression));
  SNode statement=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123155l,"jetbrains.mps.baseLanguage.structure.ExpressionStatement")));
  SLinkOperations.setTarget(statement,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123155l,1068580123156l,"expression"),expression);
  return statement;
}
