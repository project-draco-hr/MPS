{
  final boolean[] result={false};
  ModelAccess.instance().runReadAction(new Runnable(){
    @Override public void run(){
      SNode testNode=ts.getNode();
      SNode rootNode=SNodeOperations.getContainingRoot(testNode);
      if (!(SNodeOperations.isInstanceOf(testNode,"jetbrains.mps.baseLanguage.unitTest.structure.ITestable"))) {
        result[0]=false;
        return;
      }
      if (BehaviorReflection.invokeNonVirtualStatic(Boolean.TYPE,SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.test.structure.TestInfo"))),"call_reOpenProject_1031873601093419509",new Object[]{SNodeOperations.getModel(rootNode)})) {
        result[0]=false;
        return;
      }
      result[0]=BehaviorReflection.invokeNonVirtual(Boolean.TYPE,SNodeOperations.cast(testNode,"jetbrains.mps.baseLanguage.unitTest.structure.ITestable"),"jetbrains.mps.baseLanguage.unitTest.structure.ITestCase","call_canRunInProcess_6436735966448788391",new Object[]{});
    }
  }
);
  return result[0];
}
