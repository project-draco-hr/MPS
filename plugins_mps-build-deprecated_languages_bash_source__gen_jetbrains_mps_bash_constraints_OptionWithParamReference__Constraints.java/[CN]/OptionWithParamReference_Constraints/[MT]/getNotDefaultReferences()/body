{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("optionWithParam",new BaseReferenceConstraintsDescriptor("optionWithParam",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          SNode call=SNodeOperations.cast(_context.getEnclosingNode(),"jetbrains.mps.bash.structure.ExternalCommandCall");
          return ExternalCommandCall_Behavior.call_getUnusedOptionsWithParam_3263637656468078237(call);
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_ti9ddk_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
