{
  Method method=ourInstance.getQueryMethod(sourceModel,methodName,suppressErrorLogging);
  try {
    Object[] arguments;
    if (method.getParameterTypes().length == 2) {
      arguments=new Object[]{context,contextObject};
    }
 else {
      arguments=new Object[]{contextObject};
    }
    @SuppressWarnings("unchecked") T result=(T)method.invoke(null,arguments);
    return result;
  }
 catch (  IllegalArgumentException e) {
    throw new RuntimeException("error invocation method: \"" + methodName + "\" in "+ method.getDeclaringClass().getName(),e);
  }
catch (  IllegalAccessException e) {
    throw new RuntimeException("error invocation method: \"" + methodName + "\" in "+ method.getDeclaringClass().getName(),e);
  }
catch (  InvocationTargetException e) {
    if (e.getCause() instanceof IllegalModelChangeError) {
      throw (IllegalModelChangeError)e.getCause();
    }
    String message="error invocation method: \"" + methodName + "\" in "+ method.getDeclaringClass().getName();
    LOG.error(message,e.getCause());
    throw new RuntimeException(message,e.getCause());
  }
}
