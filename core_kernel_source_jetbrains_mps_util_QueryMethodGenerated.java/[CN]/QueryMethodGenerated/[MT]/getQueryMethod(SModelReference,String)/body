{
  final Method method=ourInstance.getQueryMethod(sourceModel,methodName,true);
  final boolean needOpContext=ourInstance.needsOpContext(method.getDeclaringClass());
  return new QueryMethod<T>(){
    @Override @SuppressWarnings("unchecked") public T invoke(    IOperationContext context,    Object contextObject){
      try {
        if (needOpContext) {
          return (T)method.invoke(null,context,contextObject);
        }
 else {
          return (T)method.invoke(null,contextObject);
        }
      }
 catch (      IllegalArgumentException e) {
        throw new RuntimeException("error invocation method: \"" + method.getName() + "\" in "+ method.getDeclaringClass().getName(),e);
      }
catch (      IllegalAccessException e) {
        throw new RuntimeException("error invocation method: \"" + method.getName() + "\" in "+ method.getDeclaringClass().getName(),e);
      }
catch (      InvocationTargetException e) {
        Throwable cause=e.getCause();
        if (cause instanceof IllegalModelChangeError) {
          throw (IllegalModelChangeError)cause;
        }
        String message="error invocation method: \"" + method.getName() + "\" in "+ method.getDeclaringClass().getName();
        LOG.error(cause.toString(),cause);
        throw new RuntimeException(message,cause);
      }
    }
  }
;
}
