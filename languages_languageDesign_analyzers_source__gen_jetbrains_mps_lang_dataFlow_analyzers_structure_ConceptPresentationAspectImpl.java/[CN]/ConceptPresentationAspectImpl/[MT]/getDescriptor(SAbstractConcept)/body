{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case LanguageConceptSwitch.AnalysisDirection:
    return props_AnalysisDirection;
case LanguageConceptSwitch.Analyzer:
  return props_Analyzer;
case LanguageConceptSwitch.AnalyzerConstructorParameter:
return props_AnalyzerConstructorParameter;
case LanguageConceptSwitch.AnalyzerConstructorParameterReference:
return props_AnalyzerConstructorParameterReference;
case LanguageConceptSwitch.AnalyzerFunFunction:
return props_AnalyzerFunFunction;
case LanguageConceptSwitch.AnalyzerFunParameterInput:
return props_AnalyzerFunParameterInput;
case LanguageConceptSwitch.AnalyzerFunParameterProgramState:
return props_AnalyzerFunParameterProgramState;
case LanguageConceptSwitch.AnalyzerFunParameterStateValues:
return props_AnalyzerFunParameterStateValues;
case LanguageConceptSwitch.AnalyzerFunctionResultType:
return props_AnalyzerFunctionResultType;
case LanguageConceptSwitch.AnalyzerInitialFunction:
return props_AnalyzerInitialFunction;
case LanguageConceptSwitch.AnalyzerMergeFunction:
return props_AnalyzerMergeFunction;
case LanguageConceptSwitch.AnalyzerMergeParameterInput:
return props_AnalyzerMergeParameterInput;
case LanguageConceptSwitch.AnalyzerParameterProgram:
return props_AnalyzerParameterProgram;
case LanguageConceptSwitch.AnalyzerRunnerAnalyzeOperation:
return props_AnalyzerRunnerAnalyzeOperation;
case LanguageConceptSwitch.AnalyzerRunnerClassKeeper:
return props_AnalyzerRunnerClassKeeper;
case LanguageConceptSwitch.AnalyzerRunnerCreator:
return props_AnalyzerRunnerCreator;
case LanguageConceptSwitch.AnalyzerRunnerType:
return props_AnalyzerRunnerType;
case LanguageConceptSwitch.ApplicableCondition:
return props_ApplicableCondition;
case LanguageConceptSwitch.ApplicableNodeReference:
return props_ApplicableNodeReference;
case LanguageConceptSwitch.BackwardDirection:
return props_BackwardDirection;
case LanguageConceptSwitch.ConceptCondition:
return props_ConceptCondition;
case LanguageConceptSwitch.CustomInstructionsContainer:
return props_CustomInstructionsContainer;
case LanguageConceptSwitch.CustomInstructionsContainerReference:
return props_CustomInstructionsContainerReference;
case LanguageConceptSwitch.EmitInstruction:
return props_EmitInstruction;
case LanguageConceptSwitch.ForwardDirection:
return props_ForwardDirection;
case LanguageConceptSwitch.InsertAfterPosition:
return props_InsertAfterPosition;
case LanguageConceptSwitch.InsertBeforePosition:
return props_InsertBeforePosition;
case LanguageConceptSwitch.InsertPosition:
return props_InsertPosition;
case LanguageConceptSwitch.Instruction:
return props_Instruction;
case LanguageConceptSwitch.InstructionClassKeeper:
return props_InstructionClassKeeper;
case LanguageConceptSwitch.InstructionParameter:
return props_InstructionParameter;
case LanguageConceptSwitch.InstructionReference:
return props_InstructionReference;
case LanguageConceptSwitch.IsOperation:
return props_IsOperation;
case LanguageConceptSwitch.PatternCondition:
return props_PatternCondition;
case LanguageConceptSwitch.ProgramParameter:
return props_ProgramParameter;
case LanguageConceptSwitch.Rule:
return props_Rule;
case LanguageConceptSwitch.RuleReference:
return props_RuleReference;
}
return null;
}
