{
  SNode result=SNodeOperations.copyNode(SLinkOperations.getTarget(SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getReferenceLink(new UUID(1381097486113260572l,-6346909095260771222l),7288041816793071802l,7288041816793071803l,"declaration")),MetaAdapterFactory.getContainmentLink(new UUID(1381097486113260572l,-6346909095260771222l),7288041816792374840l,7288041816793525038l,"creator")));
  List<SNode> params=SLinkOperations.getChildren(SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getReferenceLink(new UUID(1381097486113260572l,-6346909095260771222l),7288041816793071802l,7288041816793071803l,"declaration")),MetaAdapterFactory.getContainmentLink(new UUID(1381097486113260572l,-6346909095260771222l),7288041816792374840l,5425713840853683089l,"parameter"));
  List<SNode> args=SLinkOperations.getChildren(thisNode,MetaAdapterFactory.getContainmentLink(new UUID(1381097486113260572l,-6346909095260771222l),7288041816793071802l,4315270135340629600l,"argument"));
  if (ListSequence.fromList(params).count() != ListSequence.fromList(args).count()) {
    throw new RuntimeException();
  }
  for (  SNode ref : SNodeOperations.getDescendants(result,"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderParameterReference",false,new String[]{})) {
    int index=ListSequence.fromList(params).indexOf(SLinkOperations.getTarget(ref,MetaAdapterFactory.getReferenceLink(new UUID(1381097486113260572l,-6346909095260771222l),5425713840853785828l,5425713840853785829l,"parameter")));
    SNodeOperations.replaceWithAnother(ref,SNodeOperations.copyNode(ListSequence.fromList(args).getElement(index)));
  }
  return result;
}
