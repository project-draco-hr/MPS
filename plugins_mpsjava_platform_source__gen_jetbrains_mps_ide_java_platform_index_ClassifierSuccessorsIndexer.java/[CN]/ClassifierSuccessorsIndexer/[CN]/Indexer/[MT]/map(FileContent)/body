{
  final Map<GlobalSNodeId,List<GlobalSNodeId>> result=MapSequence.fromMap(new HashMap<GlobalSNodeId,List<GlobalSNodeId>>());
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      SModel sModel=RootNodeNameIndex.doModelParsing(inputData);
      if (sModel == null) {
        return;
      }
      for (      final SNode nextNode : SNodeUtil.getDescendants(sModel)) {
        if (isInstanceOfClassConcept(nextNode)) {
          SNode classNode=(SNode)nextNode;
          if (SLinkOperations.getTarget(classNode,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x10f6353296dL,"superclass")) != null) {
            safeMap(result,SLinkOperations.getTarget(classNode,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x10f6353296dL,"superclass")),classNode);
          }
          for (          SNode implementedInterface : ListSequence.fromList(SLinkOperations.getChildren(classNode,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0xff2ac0b419L,"implementedInterface")))) {
            safeMap(result,implementedInterface,classNode);
          }
          if (isInstanceOfAnonymousClassConcept(classNode)) {
            safeMap(result,classNode.getReference("classifier"),classNode);
          }
        }
 else         if (isInstanceOfInterfaceConcept(nextNode)) {
          SNode interfaceNode=(SNode)nextNode;
          for (          SNode extendedInterface : ListSequence.fromList(SLinkOperations.getChildren(interfaceNode,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,0x101eddadad7L,"extendedInterface")))) {
            safeMap(result,extendedInterface,interfaceNode);
          }
        }
      }
    }
  }
);
  return result;
}
