{
  List<INodeSubstituteAction> result=new ArrayList<INodeSubstituteAction>();
{
    ConceptDeclaration concept=SModelUtil_new.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.TryCatchStatement",operationContext.getScope());
    result.add(new AbstractRTransformHintSubstituteAction(BaseAdapter.fromAdapter(concept),_parameterObject.getSourceNode()){
      public SNode doSubstitute(      String pattern){
        SLinkOperations.addNewChild(_parameterObject.getSourceNode(),"catchClause","jetbrains.mps.baseLanguage.structure.CatchClause");
        return SequenceOperations.getFirst(SLinkOperations.getTargets(_parameterObject.getSourceNode(),"catchClause",true));
      }
      public String getMatchingText(      String pattern){
        return "catch";
      }
    }
);
  }
  return result;
}
