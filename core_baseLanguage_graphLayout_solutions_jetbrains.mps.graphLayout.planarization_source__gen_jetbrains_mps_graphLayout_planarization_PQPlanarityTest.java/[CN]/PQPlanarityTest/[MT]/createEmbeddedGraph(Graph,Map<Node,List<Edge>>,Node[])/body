{
  EmbeddedGraph embeddedGraph=new EmbeddedGraph(graph);
  Map<Face,Node> leftEnd=MapSequence.fromMap(new HashMap<Face,Node>());
  Map<Face,Node> rightEnd=MapSequence.fromMap(new HashMap<Face,Node>());
  Node lastNode=nodeOrder[nodeOrder.length - 1];
  Face outerFace=new Face(graph);
  embeddedGraph.addFace(outerFace);
  embeddedGraph.setOuterFace(outerFace);
  MapSequence.fromMap(leftEnd).put(outerFace,lastNode);
  MapSequence.fromMap(rightEnd).put(outerFace,lastNode);
  for (int i=nodeOrder.length - 1; i > 0; i--) {
    Node node=nodeOrder[i];
    Edge prevEdge=null;
    for (    Edge edge : ListSequence.fromList(MapSequence.fromMap(myInEdgeOrder).get(node))) {
      if (prevEdge != null) {
        Face newFace=new Face(graph);
        embeddedGraph.addFace(newFace);
        embeddedGraph.addLastDart(newFace,new Dart(prevEdge,node));
        embeddedGraph.addFirstDart(newFace,new Dart(edge,edge.getSource()));
        MapSequence.fromMap(leftEnd).put(newFace,prevEdge.getSource());
        MapSequence.fromMap(rightEnd).put(newFace,edge.getSource());
      }
      prevEdge=edge;
    }
    Edge firstEdge=ListSequence.fromList(MapSequence.fromMap(myInEdgeOrder).get(node)).first();
    Face leftFace=null;
    for (    Face face : SetSequence.fromSet(MapSequence.fromMap(rightEnd).keySet())) {
      if (MapSequence.fromMap(rightEnd).get(face) == node) {
        leftFace=face;
      }
    }
    embeddedGraph.addFirstDart(leftFace,new Dart(firstEdge,firstEdge.getSource()));
    MapSequence.fromMap(rightEnd).put(leftFace,firstEdge.getSource());
    if (MapSequence.fromMap(leftEnd).get(leftFace) == MapSequence.fromMap(rightEnd).get(leftFace)) {
      MapSequence.fromMap(leftEnd).removeKey(leftFace);
      MapSequence.fromMap(rightEnd).removeKey(leftFace);
    }
    Edge lastEdge=ListSequence.fromList(MapSequence.fromMap(myInEdgeOrder).get(node)).last();
    Face rightFace=null;
    for (    Face face : SetSequence.fromSet(MapSequence.fromMap(leftEnd).keySet())) {
      if (MapSequence.fromMap(leftEnd).get(face) == node) {
        rightFace=face;
      }
    }
    embeddedGraph.addLastDart(rightFace,new Dart(lastEdge,node));
    MapSequence.fromMap(leftEnd).put(rightFace,lastEdge.getSource());
    if (MapSequence.fromMap(leftEnd).get(rightFace) == MapSequence.fromMap(rightEnd).get(rightFace)) {
      MapSequence.fromMap(leftEnd).removeKey(rightFace);
      MapSequence.fromMap(rightEnd).removeKey(rightFace);
    }
  }
  return embeddedGraph;
}
