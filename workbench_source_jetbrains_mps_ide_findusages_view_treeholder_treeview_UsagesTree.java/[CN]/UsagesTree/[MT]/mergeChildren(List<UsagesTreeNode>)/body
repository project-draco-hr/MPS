{
  List<UsagesTreeNode> mergedChildren=new ArrayList<UsagesTreeNode>();
  Map<Object,UsagesTreeNode> childMap=new HashMap<Object,UsagesTreeNode>();
  for (  UsagesTreeNode child : children) {
    Object additionID=child.getUserObject().getData().getIdObject();
    if (additionID == null) {
      mergedChildren.add(child);
    }
 else {
      UsagesTreeNode addToNode=childMap.get(additionID);
      if (addToNode == null) {
        childMap.put(additionID,child);
      }
 else {
        Object addToNodeID=addToNode.getUserObject().getData().getIdObject();
        if (additionID.equals(addToNodeID)) {
          for (          UsagesTreeNode additionChild : child.internalGetChildren()) {
            addToNode.add(additionChild);
          }
        }
 else {
          childMap.put(additionID,child);
        }
      }
    }
  }
  mergedChildren.addAll(childMap.values());
  for (  UsagesTreeNode child : mergedChildren) {
    mergeChildren(child.internalGetChildren());
  }
  children=mergedChildren;
}
