{
  return CommandProcessor.instance().executeLightweightCommand(new Calculable<UsagesTreeNode>(){
    public UsagesTreeNode calculate(){
      UsagesTreeNode root=new UsagesTreeNode("");
      if (myShowSearchedNodes) {
        HashSet<String> searchedNodesPathProvider=new HashSet<String>();
        searchedNodesPathProvider.add("");
        if (myGroupSearchedNodes) {
          searchedNodesPathProvider.add(NodeRootNodePath.class.getName());
          searchedNodesPathProvider.add(NodeRootToNodePath.class.getName());
        }
        searchedNodesPathProvider.add(NodePlainPath.class.getName());
        root.add(buildSubtree(myContents.getTreeRoot().getChild(0),searchedNodesPathProvider).get(0));
      }
      root.add(buildSubtree(myContents.getTreeRoot().getChild(1),myResultPathProvider).get(0));
      makeAllNodesHTMLNodes(root);
      setTreeIcons((UsagesTreeNode)root.getChildAt(0));
      if (myShowSearchedNodes) {
        setTreeIcons((UsagesTreeNode)root.getChildAt(1));
      }
      return root;
    }
  }
);
}
