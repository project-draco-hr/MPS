{
  return CommandProcessor.instance().executeLightweightCommand(new Calculable<UsagesTreeNode>(){
    public UsagesTreeNode calculate(){
      UsagesTreeNode root=new UsagesTreeNode("");
      if (myShowSearchedNodes) {
        HashSet<PathItemRole> searchedNodesPathProvider=new HashSet<PathItemRole>();
        searchedNodesPathProvider.add(PathItemRole.ROLE_MAIN_SEARCHED_NODES);
        if (myGroupSearchedNodes) {
          searchedNodesPathProvider.add(PathItemRole.ROLE_ROOT);
          searchedNodesPathProvider.add(PathItemRole.ROLE_ROOT_TO_TARGET_NODE);
        }
        searchedNodesPathProvider.add(PathItemRole.ROLE_TARGET_NODE);
        root.add(buildGoodSubtreeWithIcons(myContents.getTreeRoot().getChild(0),searchedNodesPathProvider).get(0));
      }
      root.add(buildGoodSubtreeWithIcons(myContents.getTreeRoot().getChild(1),myResultPathProvider).get(0));
      makeAllNodesHTMLNodes(root);
      return root;
    }
  }
);
}
