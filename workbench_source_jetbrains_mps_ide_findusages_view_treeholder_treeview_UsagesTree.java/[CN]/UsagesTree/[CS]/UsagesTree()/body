{
  myAdditionalInfoNeeded=false;
  myResultPathProvider.add(PathItemRole.ROLE_MAIN_RESULTS);
  myResultPathProvider.add(PathItemRole.ROLE_TARGET_NODE);
  setRootVisible(false);
  getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0),COMMAND_OPEN_NODE_IN_PROJECT);
  getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_F4,0),COMMAND_OPEN_NODE_IN_PROJECT);
  getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_F1,InputEvent.ALT_MASK),COMMAND_OPEN_NODE_IN_TREE);
  KeyStroke deleteKeyStroke=KeyStroke.getKeyStroke(KeyEvent.VK_DELETE,0);
  getInputMap().put(deleteKeyStroke,COMMAND_EXCLUDE);
  if (SystemInfo.isMac) {
  }
 else {
    KeyStroke insertKeyStroke=KeyStroke.getKeyStroke(KeyEvent.VK_INSERT,0);
    getInputMap().put(insertKeyStroke,COMMAND_INCLUDE);
  }
  addTreeExpansionListener(new TreeExpansionListener(){
    public void treeExpanded(    TreeExpansionEvent event){
      BaseNodeData data=((UsagesTreeNode)event.getPath().getLastPathComponent()).getUserObject().getData();
      data.setExpanded(true);
    }
    public void treeCollapsed(    TreeExpansionEvent event){
      BaseNodeData data=((UsagesTreeNode)event.getPath().getLastPathComponent()).getUserObject().getData();
      data.setExpanded(false);
    }
  }
);
  getActionMap().put(COMMAND_OPEN_NODE_IN_PROJECT,new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      openCurrentNodeLink(false,!isUnstableWindow());
    }
  }
);
  getActionMap().put(COMMAND_OPEN_NODE_IN_TREE,new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      openCurrentNodeLink(true,!isUnstableWindow());
    }
  }
);
  getActionMap().put(COMMAND_EXCLUDE,new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      setCurrentNodesExclusion(true);
    }
  }
);
  getActionMap().put(COMMAND_INCLUDE,new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      setCurrentNodesExclusion(false);
    }
  }
);
  addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      boolean goOneClick=e.getClickCount() == 1 && myAutoscroll && e.getButton() == MouseEvent.BUTTON1;
      boolean goTwoClick=e.getClickCount() == 2 && e.getButton() == MouseEvent.BUTTON1;
      if (goOneClick || goTwoClick) {
        boolean focus=goTwoClick || !isUnstableWindow();
        openCurrentNodeLink(false,focus);
      }
    }
  }
);
}
