{
  myCountersNeeded=false;
  myAdditionalInfoNeeded=false;
  myResultPathProvider.add(PlainPath.class.getName());
  setRootVisible(false);
  getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0),COMMAND_OPEN_NODE_IN_PROJECT);
  getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_F4,0),COMMAND_OPEN_NODE_IN_PROJECT);
  getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_F1,InputEvent.ALT_MASK),COMMAND_OPEN_NODE_IN_TREE);
  getActionMap().put(COMMAND_OPEN_NODE_IN_PROJECT,new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      openCurrentNodeLink(false);
    }
  }
);
  getActionMap().put(COMMAND_OPEN_NODE_IN_TREE,new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      openCurrentNodeLink(true);
    }
  }
);
  addMouseListener(new MouseAdapter(){
    public void mouseClicked(    MouseEvent e){
      if ((e.getButton() == MouseEvent.BUTTON1) && ((e.getClickCount() == 2) || (e.getClickCount() == 1 && myAutoscroll))) {
        openCurrentNodeLink(false);
      }
      if (e.getButton() == MouseEvent.BUTTON3) {
        changeCurrentNodeExclusion();
      }
    }
  }
);
}
