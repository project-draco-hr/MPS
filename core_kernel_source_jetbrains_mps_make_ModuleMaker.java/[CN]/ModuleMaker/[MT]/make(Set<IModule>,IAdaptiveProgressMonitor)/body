{
  try {
    monitor.start("Compiling...",1000 * modules.size());
    Set<IModule> toCompile=new LinkedHashSet<IModule>();
    Set<IModule> candidates=new HashSet<IModule>();
    candidates.addAll(modules);
    for (    IModule m : modules) {
      candidates.addAll(m.getAllDependOnModules(IModule.class));
    }
    for (    IModule c : candidates) {
      if (!isUpToDate(c)) {
        toCompile.add(c);
      }
    }
    int errorCount=0;
    for (    Set<IModule> cycle : new MakeScheduleBuilder().buildSchedule(toCompile)) {
      monitor.addText("Compiling modules: " + cycle + "...");
      errorCount+=compile(cycle).getErrors();
      if (errorCount != 0) {
        break;
      }
    }
    return new jetbrains.mps.plugin.CompilationResult(errorCount,0,false);
  }
  finally {
    monitor.finish();
  }
}
