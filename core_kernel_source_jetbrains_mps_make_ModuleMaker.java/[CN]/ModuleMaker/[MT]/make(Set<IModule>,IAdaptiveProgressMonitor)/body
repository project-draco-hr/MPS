{
  try {
    monitor.start("Compiling...",1000 * modules.size());
    Set<IModule> toCompile=getModulesToCompile(modules);
    int errorCount=0;
    List<Set<IModule>> schedule=new MakeScheduleBuilder<IModule>(){
      protected List<IModule> getDependOnModules(      IModule m){
        return m.getExplicitlyDependOnModules();
      }
    }
.buildSchedule(toCompile);
    for (    Set<IModule> cycle : schedule) {
      if (monitor.isCanceled()) {
        monitor.addText("Canceled");
        break;
      }
      monitor.addText("Compiling modules: " + cycle + "...");
      int currentErrorsCount=compile(cycle).getErrors();
      if (currentErrorsCount != 0) {
        monitor.addText("There were compilation errors in these modules. See messages view for more information.");
      }
      errorCount+=currentErrorsCount;
    }
    return new jetbrains.mps.plugin.CompilationResult(errorCount,0,false);
  }
  finally {
    monitor.finish();
  }
}
