{
  IModule module=Module_Behavior.call_getModule_1213877515148(thisNode);
  if (module instanceof Language) {
    List<StubPath> paths=((Language)module).getRuntimeStubPaths();
    List<SNode> result=ListSequence.fromList(Module_Behavior.call_getPathHolders_1213877515000(thisNode,ListSequence.fromList(paths).<String>select(new ISelector<StubPath,String>(){
      public String select(      StubPath it){
        return it.getPath();
      }
    }
).distinct().toListSequence(),true)).subtract(ListSequence.fromList(Module_Behavior.call_getClassPath_1213877515083(thisNode))).toListSequence();
    if (includeRuntimeSolutions) {
      for (      Dependency rdep : ListSequence.fromList(((Language)module).getRuntimeDependOn())) {
        IModule rs=MPSModuleRepository.getInstance().getModule(rdep.getModuleRef());
        if (rs instanceof Solution) {
          Solution sol=(Solution)rs;
          paths=sol.getAllStubPaths();
          ListSequence.fromList(result).addSequence(ListSequence.fromList(Module_Behavior.call_getPathHolders_1213877515000(thisNode,ListSequence.fromList(paths).<String>select(new ISelector<StubPath,String>(){
            public String select(            StubPath it){
              return it.getPath();
            }
          }
).toListSequence(),true)));
        }
      }
    }
    return result;
  }
  return new ArrayList<SNode>();
}
