{
  List<SNode> result=new ArrayList<SNode>();
  String projectBasedir="";
  if (onlyUnderProjectBasedir) {
    projectBasedir=Module_Behavior.call_getProjectBasedir_1213877514893(thisNode);
    if (projectBasedir == null) {
      projectBasedir=Module_Behavior.call_getBasedir_1213877514794(thisNode);
    }
    projectBasedir=AbstractProjectComponent_Behavior.call_getHomePath_1213877333764(thisNode) + File.separator + projectBasedir;
  }
  for (  String cp : ListSequence.fromList(classpath)) {
    if (!(onlyUnderProjectBasedir) || cp.startsWith(projectBasedir)) {
      SNode nodeCP=SConceptOperations.createNewNode("jetbrains.mps.build.packaging.structure.PathHolder",null);
      SPropertyOperations.set(nodeCP,"fullPath",ModuleUtil.getRelativePath(cp,AbstractProjectComponent_Behavior.call_getHomePath_1213877333764(thisNode).getPath()));
      if (SPropertyOperations.getString(nodeCP,"fullPath").equals(cp)) {
        ModuleUtil.findMacro(nodeCP,SLinkOperations.getTargets(SNodeOperations.getAncestor(thisNode,"jetbrains.mps.build.packaging.structure.MPSLayout",true,true),"macro",true));
      }
      SLinkOperations.setTarget(nodeCP,"module",thisNode,false);
      ListSequence.fromList(result).addElement(nodeCP);
    }
  }
  return result;
}
