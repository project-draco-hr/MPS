{
  List<SpecificChecker> specificCheckers=ListSequence.fromList(new ArrayList<SpecificChecker>());
  ListSequence.fromList(specificCheckers).addElement(new UnavailableConceptsChecker(modelChecker));
  if (this.isCheckUnresolvedReferences()) {
    ListSequence.fromList(specificCheckers).addElement(new UnresolvedReferencesChecker(modelChecker));
  }
  if (this.isCheckConstraints()) {
    ListSequence.fromList(specificCheckers).addElement(new ConstraintsChecker(modelChecker));
  }
  if (this.isCheckScopes()) {
    ListSequence.fromList(specificCheckers).addElement(new ScopesChecker(modelChecker));
  }
  if (this.isCheckTypesystem()) {
    ListSequence.fromList(specificCheckers).addElement(new TypesystemChecker(modelChecker));
  }
  return specificCheckers;
}
