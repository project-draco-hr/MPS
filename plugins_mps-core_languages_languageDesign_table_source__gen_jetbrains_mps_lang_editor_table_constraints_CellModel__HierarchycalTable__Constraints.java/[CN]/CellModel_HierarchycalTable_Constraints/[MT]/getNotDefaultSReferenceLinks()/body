{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(0x272d3b44cc8481eL,0x9e2f07793fbfcb41L,0x1f44bcab4ea21b62L,0x5643e6bf317e9d11L),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x272d3b44cc8481eL,0x9e2f07793fbfcb41L,0x1f44bcab4ea21b62L,0x5643e6bf317e9d11L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return ListSequence.fromList(AbstractConceptDeclaration__BehaviorDescriptor.getAggregationLinkDeclarations_idhEwILLp.invoke(CellModel_HierarchycalTable__BehaviorDescriptor.getContainingConceptDeclaration_id5p3TFWLvETA.invoke(_context.getReferenceNode()))).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return !(LinkDeclaration__BehaviorDescriptor.isSingular_idhEwIfAt.invoke(it));
            }
          }
).toListSequence();
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_6tiwsq_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  references.put(MetaIdFactory.refId(0x272d3b44cc8481eL,0x9e2f07793fbfcb41L,0x1f44bcab4ea21b62L,0x5643e6bf317e9d12L),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x272d3b44cc8481eL,0x9e2f07793fbfcb41L,0x1f44bcab4ea21b62L,0x5643e6bf317e9d12L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return ListSequence.fromList(AbstractConceptDeclaration__BehaviorDescriptor.getAggregationLinkDeclarations_idhEwILLp.invoke(CellModel_HierarchycalTable__BehaviorDescriptor.getContainingConceptDeclaration_id5p3TFWLvETA.invoke(_context.getReferenceNode()))).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return !(LinkDeclaration__BehaviorDescriptor.isSingular_idhEwIfAt.invoke(it));
            }
          }
);
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_6tiwsq_a0a1a0a0a1a0b0a2a1;
        }
      }
;
    }
  }
);
  references.put(MetaIdFactory.refId(0x272d3b44cc8481eL,0x9e2f07793fbfcb41L,0x1f44bcab4ea21b62L,0x5643e6bf317e9d13L),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x272d3b44cc8481eL,0x9e2f07793fbfcb41L,0x1f44bcab4ea21b62L,0x5643e6bf317e9d13L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          if ((SLinkOperations.getTarget(_context.getReferenceNode(),MetaAdapterFactory.getReferenceLink(0x272d3b44cc8481eL,0x9e2f07793fbfcb41L,0x1f44bcab4ea21b62L,0x5643e6bf317e9d12L,"rowsLinkDeclaration")) == null)) {
            return null;
          }
          return ListSequence.fromList(AbstractConceptDeclaration__BehaviorDescriptor.getAggregationLinkDeclarations_idhEwILLp.invoke(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getReferenceNode(),MetaAdapterFactory.getReferenceLink(0x272d3b44cc8481eL,0x9e2f07793fbfcb41L,0x1f44bcab4ea21b62L,0x5643e6bf317e9d12L,"rowsLinkDeclaration")),MetaAdapterFactory.getReferenceLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086aL,0xf98055fef0L,"target")))).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return !(LinkDeclaration__BehaviorDescriptor.isSingular_idhEwIfAt.invoke(it));
            }
          }
);
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_6tiwsq_a0a1a0a0a1a0b0a3a1;
        }
      }
;
    }
  }
);
  return references;
}
