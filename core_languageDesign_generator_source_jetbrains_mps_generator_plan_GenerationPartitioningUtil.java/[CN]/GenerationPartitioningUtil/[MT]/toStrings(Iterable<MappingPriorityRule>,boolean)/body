{
  List<Pair<MappingPriorityRule,String>> list=new ArrayList<Pair<MappingPriorityRule,String>>();
  for (  MappingPriorityRule rule : priorityRules) {
    GeneratorDescriptor enclosingGenerator=rule.findParent(GeneratorDescriptor.class);
    String text=asString(rule,moreDetails);
    if (moreDetails) {
      text=asString(enclosingGenerator) + ": " + text;
    }
 else {
      if (text.length() > 120) {
        text=text.substring(0,120) + "...";
      }
    }
    list.add(new Pair(rule,text));
  }
  Collections.sort(list,new Comparator<Pair<MappingPriorityRule,String>>(){
    public int compare(    Pair<MappingPriorityRule,String> o1,    Pair<MappingPriorityRule,String> o2){
      return o1.second.compareTo(o2.second);
    }
  }
);
  return list;
}
