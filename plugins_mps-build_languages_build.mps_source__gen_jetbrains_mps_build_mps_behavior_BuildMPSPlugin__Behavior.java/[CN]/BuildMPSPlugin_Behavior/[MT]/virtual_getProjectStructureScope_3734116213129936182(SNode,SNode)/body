{
  if (SConceptOperations.isSubConceptOf(kind,"jetbrains.mps.build.mps.structure.BuildMps_AbstractModule") || SConceptOperations.isSubConceptOf(kind,"jetbrains.mps.build.mps.structure.BuildMps_IdeaPlugin") || SConceptOperations.isSubConceptOf(kind,"jetbrains.mps.build.mps.structure.BuildMps_Group")) {
    Iterable<DescendantsScope> forAllVisible=Sequence.fromIterable(BuildProject_Behavior.call_getVisibleProjects_1224588814561807665(BuildPlugin_Behavior.call_getProject_1224588814561866657(thisNode),false)).select(new ISelector<SNode,DescendantsScope>(){
      public DescendantsScope select(      SNode it){
        return DescendantsScope.forNamedElements(it,SLinkOperations.findLinkDeclaration("jetbrains.mps.build.structure.BuildProject","parts"),kind);
      }
    }
);
    Iterable<DescendantsScope> forThis=Sequence.<DescendantsScope>singleton(DescendantsScope.forNamedElements(BuildPlugin_Behavior.call_getProject_1224588814561866657(thisNode),SLinkOperations.findLinkDeclaration("jetbrains.mps.build.structure.BuildProject","parts"),kind));
    return new CompositeScope(Sequence.fromIterable(forAllVisible).concat(Sequence.fromIterable(forThis)).toGenericArray(DescendantsScope.class));
  }
  return null;
}
