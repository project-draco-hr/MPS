{
  SNode project=artifacts.getProject();
  DependenciesHelper helper=new DependenciesHelper(artifacts.getGenContext(),artifacts.getProject());
  VisibleModules visibleModules=new VisibleModules(project,artifacts.getGenContext());
  visibleModules.collect();
  BuildMPSPlugin_Behavior.call_findModule_3643570831019325688(thisNode,visibleModules,"jetbrains.mps.ant","77c9a130-703f-4530-bf21-6580757768d0",artifacts,builder,helper);
  BuildMPSPlugin_Behavior.call_findModule_3643570831019325688(thisNode,visibleModules,"jetbrains.mps.lang.descriptor","f4ad079d-bc71-4ffb-9600-9328705cf998",artifacts,builder,helper);
  SNode originalProject=SNodeOperations.as(DependenciesHelper.getOriginalNode(project,artifacts.getGenContext()),"jetbrains.mps.build.structure.BuildProject");
  SNode mpsCoreModule=SNodeOperations.as(ScopeProvider_Behavior.call_getScope_7722139651431880752(originalProject,SConceptOperations.findConceptDeclaration("jetbrains.mps.build.structure.BuildSource_JavaModule"),"parts",0).resolve(originalProject,"mps-core"),"jetbrains.mps.build.structure.BuildSource_JavaModule");
  if ((mpsCoreModule != null)) {
    SNode mpsCoreJar=SNodeOperations.as(artifacts.findArtifact(mpsCoreModule),"jetbrains.mps.build.structure.BuildLayout_Node");
    if ((mpsCoreJar != null)) {
      helper.artifacts().put("mps-core",mpsCoreJar);
      builder.add(mpsCoreJar,mpsCoreModule);
    }
  }
  SNode jdom=ScopeUtil.getVisibleJarsScope(originalProject).resolve(originalProject,"IDEA::lib/jdom.jar");
  if ((jdom != null)) {
    SNode jdomJar=SNodeOperations.as(artifacts.findArtifact(jdom),"jetbrains.mps.build.structure.BuildLayout_Node");
    if ((jdomJar != null)) {
      helper.artifacts().put("jdom",jdomJar);
      builder.add(jdomJar,jdom);
    }
  }
  SNode log4j=ScopeUtil.getVisibleJarsScope(originalProject).resolve(originalProject,"IDEA::lib/log4j.jar");
  if ((log4j != null)) {
    SNode log4jJar=SNodeOperations.as(artifacts.findArtifact(log4j),"jetbrains.mps.build.structure.BuildLayout_Node");
    if ((log4jJar != null)) {
      helper.artifacts().put("log4j",log4jJar);
      builder.add(log4jJar,log4j);
    }
  }
}
