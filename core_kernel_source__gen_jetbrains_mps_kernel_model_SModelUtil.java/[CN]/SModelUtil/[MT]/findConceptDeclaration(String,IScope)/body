{
  SNode cd=MapSequence.fromMap(myFQNameToConcepDecl).get(conceptFQName);
  if (cd != null) {
    return cd;
  }
  if (conceptFQName.equals("jetbrains.mps.smodel.structure.ModelPersistence$UnknownSNode")) {
    return null;
  }
  return NodeReadAccessCasterInEditor.runReadTransparentAction(new Computable<SNode>(){
    public SNode compute(){
      String languageFqName=NameUtil.namespaceFromConceptFQName(conceptFQName);
      Language language=scope.getLanguage(new ModuleReference(languageFqName));
      if (language == null) {
        return null;
      }
      String conceptName=NameUtil.shortNameFromLongName(conceptFQName);
      AbstractConceptDeclaration resultAdapter=language.findConceptDeclaration(conceptName);
      SNode result=((SNode)BaseAdapter.fromAdapter(resultAdapter));
      MapSequence.fromMap(SModelUtil.myFQNameToConcepDecl).put(InternUtil.intern(conceptFQName),result);
      return result;
    }
  }
);
}
