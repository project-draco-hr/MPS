{
  MyState persistentState=new MyState();
  persistentState.mySaveTransientModels=myState.isSaveTransientModels();
  persistentState.myCheckModelsBeforeGeneration=myState.isCheckModelsBeforeGeneration();
  persistentState.myParallelGenerator=myState.isParallelGenerator();
  persistentState.myStrictMode=myState.isStrictMode();
  persistentState.myNumberOfParallelThreads=myState.getNumberOfParallelThreads();
  persistentState.myPerformanceTracingLevel=myState.getPerformanceTracingLevel();
  persistentState.myNumberOfModelsToKeep=myState.getNumberOfModelsToKeep();
  persistentState.myShowInfo=myState.isShowInfo();
  persistentState.myShowWarnings=myState.isShowWarnings();
  persistentState.myKeepModelsWithWarnings=myState.isKeepModelsWithWarnings();
  persistentState.myIncremental=myState.isIncremental();
  persistentState.myIncrementalUseCache=myState.isIncrementalUseCache();
  persistentState.myFailOnMissingTextGen=myState.isFailOnMissingTextGen();
  persistentState.myGenerateDebugInfo=myState.isGenerateDebugInfo();
  persistentState.myShowBadChildWarning=myState.isShowBadChildWarning();
  persistentState.myDebugIncrementalDependencies=myState.isDebugIncrementalDependencies();
  persistentState.myActiveInplaceTransform=myState.useInplaceTransofrmations();
  GenTraceSettings gts=myState.getTraceSettings();
  if (gts != null) {
    persistentState.myTraceUseLegacy=false;
    persistentState.myTraceCompactTemplates=gts.isCompactTemplates();
    persistentState.myTraceGroupSteps=gts.isGroupByStep();
    persistentState.myTraceShowEmptySteps=gts.isShowEmptySteps();
  }
 else {
    persistentState.myTraceUseLegacy=true;
  }
  return persistentState;
}
