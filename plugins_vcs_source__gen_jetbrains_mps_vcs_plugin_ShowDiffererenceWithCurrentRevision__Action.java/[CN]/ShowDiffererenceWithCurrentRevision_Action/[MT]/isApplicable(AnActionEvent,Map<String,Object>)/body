{
  DataSource dataSource=event.getData(MPSCommonDataKeys.CONTEXT_MODEL).getSource();
  if (dataSource instanceof FileDataSource) {
    VirtualFile virtualFile=VirtualFileUtils.getVirtualFile(((FileDataSource)event.getData(MPSCommonDataKeys.CONTEXT_MODEL).getSource()).getFile());
    if (SNodeOperations.isRoot(event.getData(MPSCommonDataKeys.NODE)) && ProjectLevelVcsManager.getInstance(event.getData(CommonDataKeys.PROJECT)).getVcsFor(virtualFile) != null) {
      FileStatus fileStatus=event.getData(CommonDataKeys.PROJECT).getComponent(VcsFileStatusProvider.class).getFileStatus(virtualFile);
      return FileStatus.ADDED != fileStatus && FileStatus.UNKNOWN != fileStatus;
    }
  }
 else   if (dataSource instanceof FilePerRootDataSource) {
    if (!(SNodeOperations.isRoot(event.getData(MPSCommonDataKeys.NODE)))) {
      return false;
    }
    String rootName=ModelAccess.instance().runReadAction(new Computable<String>(){
      public String compute(){
        return event.getData(MPSCommonDataKeys.NODE).getName();
      }
    }
);
    VirtualFile virtualFile=VirtualFileUtils.getVirtualFile(((FilePerRootDataSource)event.getData(MPSCommonDataKeys.CONTEXT_MODEL).getSource()).getFile(rootName + "." + MPSExtentions.MODEL_ROOT));
    if (ProjectLevelVcsManager.getInstance(event.getData(CommonDataKeys.PROJECT)).getVcsFor(virtualFile) != null) {
      FileStatus fileStatus=event.getData(CommonDataKeys.PROJECT).getComponent(VcsFileStatusProvider.class).getFileStatus(virtualFile);
      return FileStatus.ADDED != fileStatus && FileStatus.UNKNOWN != fileStatus;
    }
  }
  return false;
}
