{
  DataSource dataSource=((SModel)MapSequence.fromMap(_params).get("model")).getSource();
  if (dataSource instanceof FileDataSource) {
    VirtualFile virtualFile=VirtualFileUtils.getVirtualFile(((FileDataSource)((SModel)MapSequence.fromMap(_params).get("model")).getSource()).getFile());
    if (SNodeOperations.isRoot(((SNode)MapSequence.fromMap(_params).get("node"))) && ProjectLevelVcsManager.getInstance(((Project)MapSequence.fromMap(_params).get("project"))).getVcsFor(virtualFile) != null) {
      FileStatus fileStatus=((Project)MapSequence.fromMap(_params).get("project")).getComponent(VcsFileStatusProvider.class).getFileStatus(virtualFile);
      return FileStatus.ADDED != fileStatus && FileStatus.UNKNOWN != fileStatus;
    }
  }
 else   if (dataSource instanceof FilePerRootDataSource) {
    if (!(SNodeOperations.isRoot(((SNode)MapSequence.fromMap(_params).get("node"))))) {
      return false;
    }
    String rootName=ModelAccess.instance().runReadAction(new Computable<String>(){
      public String compute(){
        return ((SNode)MapSequence.fromMap(_params).get("node")).getName();
      }
    }
);
    VirtualFile virtualFile=VirtualFileUtils.getVirtualFile(((FilePerRootDataSource)((SModel)MapSequence.fromMap(_params).get("model")).getSource()).getFile(rootName + "." + MPSExtentions.MODEL_ROOT));
    if (ProjectLevelVcsManager.getInstance(((Project)MapSequence.fromMap(_params).get("project"))).getVcsFor(virtualFile) != null) {
      FileStatus fileStatus=((Project)MapSequence.fromMap(_params).get("project")).getComponent(VcsFileStatusProvider.class).getFileStatus(virtualFile);
      return FileStatus.ADDED != fileStatus && FileStatus.UNKNOWN != fileStatus;
    }
  }
  return false;
}
