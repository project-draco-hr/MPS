{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("property",new BaseReferenceConstraintsDescriptor("property",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_57atcm_a0a0a0a0a1a0b0a1a0;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
{
            if (!(SNodeOperations.isInstanceOf(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.DotExpression"))) {
              return null;
            }
            SNode opClassifier=DotExpression_Behavior.call_getClassifier_1213877410697(SNodeOperations.cast(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.DotExpression"));
            if (opClassifier == null) {
              return null;
            }
            return Classifier_Behavior.call_getVisibleMembers_8083692786967356611(opClassifier,_context.getContextNode(),SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Property"));
          }
        }
      }
;
    }
  }
);
  return references;
}
