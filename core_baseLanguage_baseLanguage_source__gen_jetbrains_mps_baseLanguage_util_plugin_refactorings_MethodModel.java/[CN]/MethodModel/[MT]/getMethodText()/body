{
  final StringBuffer text=new StringBuffer();
  if (this.isStatic) {
    text.append("static ");
  }
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      text.append(MethodModel.this.getReturnType());
    }
  }
);
  text.append("");
  text.append(this.getName());
  text.append("(");
  if (ListSequence.fromList(this.getParametersNames()).count() > 0) {
    text.append("\n");
    boolean first=true;
    for (    String parameter : ListSequence.fromList(this.getParametersNames())) {
      if (!(first)) {
        text.append(",\n");
      }
      text.append("  ").append(parameter);
      first=false;
    }
  }
  text.append(")");
  if (ListSequence.fromList(this.getThrowItems()).count() > 0) {
    text.append("throws\n");
    boolean first=true;
    for (    String exception : ListSequence.fromList(this.getThrowItems())) {
      if (!(first)) {
        text.append(",\n");
      }
      text.append(" ").append(exception);
      first=false;
    }
  }
  return text.toString();
}
