{
  List<SNode> result=new ArrayList<SNode>();
  NullableUtil.getAndExpressions(SLinkOperations.getTarget(node,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfaa4bf0f2fL,0xfaa4bf0f30L,"condition")),result);
  for (  SNode condition : result) {
    if (SNodeOperations.isInstanceOf(condition,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf9e20e303fL,"jetbrains.mps.baseLanguage.structure.NotEqualsExpression"))) {
      SNode notNullNode=NullableUtil.getOtherThanNull(SNodeOperations.cast(condition,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbdeb6fecfL,"jetbrains.mps.baseLanguage.structure.BinaryOperation")));
      if (notNullNode != null) {
{
          Object object=condition;
          if (((Program)o).contains(object)) {
            boolean before=false;
            int position=((Program)(o)).getEnd(object);
            Instruction instruction=new notNullInstruction(notNullNode);
            instruction.setRuleReference("r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/7718715537694335485");
            instruction.setSource(node);
            ((Program)(o)).insert(instruction,position,true,before);
          }
        }
{
          Object object=node;
          if (((Program)o).contains(object)) {
            boolean before=false;
            int position=((Program)(o)).getEnd(object);
            Instruction instruction=new nullableInstruction(notNullNode);
            instruction.setRuleReference("r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/7718715537694335490");
            instruction.setSource(node);
            ((Program)(o)).insert(instruction,position,true,before);
          }
        }
      }
    }
  }
}
