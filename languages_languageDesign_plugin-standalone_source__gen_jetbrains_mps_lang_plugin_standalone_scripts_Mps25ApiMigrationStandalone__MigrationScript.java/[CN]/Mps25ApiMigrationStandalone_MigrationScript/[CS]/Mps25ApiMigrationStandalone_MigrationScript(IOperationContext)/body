{
  super("API Migration Standalone");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "GetToolOperation";
    }
    public String getAdditionalInfo(){
      return "GetToolOperation";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.DotExpression";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SNode operation=SLinkOperations.getTarget(node,"operation",true);
      return SNodeOperations.getConceptDeclaration(operation) == null && "jetbrains.mps.lang.plugin.structure.GetToolOperation".equals(operation.getConcept().getId());
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode operation=SLinkOperations.getTarget(node,"operation",true);
      SNode tool=null;
      if (operation.getReferences().size() > 0) {
        SReference sref=operation.getReferences().get(0);
        tool=sref.getTargetNode();
      }
      StubRefUtil.replaceNode(node,_quotation_createNode_rdc33q_b0d0a0(tool,SLinkOperations.getTarget(node,"operand",true)));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
