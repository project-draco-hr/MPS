{
  final ClassType referenceType=(ClassType)findClassType(className,threadReference.virtualMachine());
  final Method method=findMethod(referenceType,methodName,jniSignature);
  final List<Value> argValues=MirrorUtil.getValues(threadReference,args);
  return EvaluationUtils.handleInvocationExceptions(new ThreadInvocatable<Value>(threadReference){
    @Override public Value invoke() throws InvocationException, InvalidTypeException, ClassNotLoadedException, IncompatibleThreadStateException {
      return referenceType.invokeMethod(threadReference,method,argValues,0);
    }
  }
);
}
