{
  final Composite dc=this.uidemo.getDemoContainer();
  for (Iterator<Control> it=new ControlIterator(dc){
    @Override public boolean accept(    Control item){
      return DockLayoutData.CENTER == item.getLayoutData();
    }
  }
; it.hasNext(); ) {
    it.next();
    it.remove();
  }
  final TabFolder widget_vdkvtt_b0b0e=new TabFolder(dc,SWT.BORDER);
  final Composite widget_vdkvtt_a0a1a1a4=new _FunctionTypes._return_P1_E0<Composite,Composite>(){
    public Composite invoke(    Composite context_vdkvtt_a_4){
      Composite cmp=new Composite(widget_vdkvtt_b0b0e,SWT.NONE);
      RowLayout rlt=new RowLayout(SWT.HORIZONTAL);
      rlt.wrap=true;
      rlt.fill=false;
      rlt.justify=false;
      cmp.setLayout(rlt);
      return cmp;
    }
  }
.invoke(widget_vdkvtt_b0b0e);
  for (int i=1; i <= 100; i++) {
    final Button widget_vdkvtt_a0a0a0a0b0b0e=new Button(widget_vdkvtt_a0a1a1a4,SWT.PUSH);
    widget_vdkvtt_a0a0a0a0b0b0e.setText("Button" + i);
  }
  new _FunctionTypes._void_P0_E0(){
    public void invoke(){
      TabItem ti=new TabItem(widget_vdkvtt_b0b0e,SWT.NONE);
      ti.setText("Flow");
      ti.setControl((Control)widget_vdkvtt_a0a1a1a4);
    }
  }
.invoke();
  widget_vdkvtt_b0b0e.setLayoutData(DockLayoutData.CENTER);
  dc.layout();
}
