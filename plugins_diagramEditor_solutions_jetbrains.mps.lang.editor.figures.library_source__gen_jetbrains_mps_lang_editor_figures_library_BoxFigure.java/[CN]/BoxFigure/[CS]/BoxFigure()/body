{
  background().set(Color.WHITE);
  myPolyLine.color().set(Color.GRAY);
  children().add(myPolyLine);
  new Mapper<BoxFigure,BoxFigure>(this,this){
    @Override protected void registerSynchronizers(    Mapper.SynchronizersConfiguration configuration){
      super.registerSynchronizers(configuration);
      configuration.add(Synchronizers.forProperty(figureWidth,new Runnable(){
        public void run(){
          adjustPolyLinePoints();
        }
      }
));
      configuration.add(Synchronizers.forProperty(figureWidth,new Runnable(){
        public void run(){
          prop(PREFERRED_SIZE).set(new Vector(figureWidth.get(),figureHeight.get()));
        }
      }
));
      configuration.add(Synchronizers.forProperty(figureHeight,new Runnable(){
        public void run(){
          adjustPolyLinePoints();
        }
      }
));
      configuration.add(Synchronizers.forProperty(figureHeight,new Runnable(){
        public void run(){
          prop(PREFERRED_SIZE).set(new Vector(figureWidth.get(),figureHeight.get()));
        }
      }
));
      configuration.add(Synchronizers.forProperty(lineWidth,new Runnable(){
        public void run(){
          adjustPolyLinePoints();
        }
      }
));
      configuration.add(Synchronizers.forProperty(lineWidth,myPolyLine.width()));
    }
  }
.attachRoot();
}
