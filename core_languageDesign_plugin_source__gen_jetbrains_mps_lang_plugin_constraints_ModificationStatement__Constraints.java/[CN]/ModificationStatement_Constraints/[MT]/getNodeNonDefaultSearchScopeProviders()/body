{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("point",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      SNode contents=SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.cast(_context.getReferenceNode(),"jetbrains.mps.lang.plugin.structure.ModificationStatement"),"modifiedGroup",false),"contents",true);
      if (SNodeOperations.isInstanceOf(contents,"jetbrains.mps.lang.plugin.structure.ElementListContents")) {
        return ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(contents,"jetbrains.mps.lang.plugin.structure.ElementListContents"),"reference",true)).where(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return SNodeOperations.isInstanceOf(it,"jetbrains.mps.lang.plugin.structure.GroupAnchor");
          }
        }
).toListSequence();
      }
      return new ArrayList<SNode>();
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c89590361(jetbrains.mps.lang.plugin.constraints)","1213104860270");
    }
  }
);
  result.put("modifiedGroup",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      List<SNode> actionGroupDeclarations=SModelOperations.getRootsIncludingImported(_context.getModel(),operationContext.getScope(),"jetbrains.mps.lang.plugin.structure.ActionGroupDeclaration");
      SNode groupDeclaration=SNodeOperations.getAncestor(_context.getReferenceNode(),"jetbrains.mps.lang.plugin.structure.ActionGroupDeclaration",false,false);
      List<SNode> thisGroupChildGroups=((List<SNode>)ListSequence.fromList(SNodeOperations.getDescendants(groupDeclaration,null,false,new String[]{})).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SNodeOperations.isInstanceOf(it,"jetbrains.mps.lang.plugin.structure.ActionGroupDeclaration");
        }
      }
).toListSequence());
      ListSequence.fromList(thisGroupChildGroups).addElement(groupDeclaration);
      return ListSequence.fromList(actionGroupDeclarations).subtract(ListSequence.fromList(thisGroupChildGroups)).toListSequence();
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c89590361(jetbrains.mps.lang.plugin.constraints)","1213104860311");
    }
  }
);
  return result;
}
