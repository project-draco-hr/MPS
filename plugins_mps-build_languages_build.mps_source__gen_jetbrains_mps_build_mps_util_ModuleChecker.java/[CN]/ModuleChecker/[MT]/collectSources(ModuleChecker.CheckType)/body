{
  SNode module=SNodeOperations.cast(myModule,MetaAdapterFactory.getConcept(0xcf935df46994e9cL,0xa132fa109541cba3L,0x48e82d508331930cL,"jetbrains.mps.build.mps.structure.BuildMps_Module"));
  Iterable<ModelRootDescriptor> modelRoots=myModuleDescriptor.getModelRootDescriptors();
  boolean hasModels=false;
  for (  ModelRootDescriptor modelRootDescriptor : modelRoots) {
    if (!(PersistenceRegistry.DEFAULT_MODEL_ROOT.equals(modelRootDescriptor.getType()))) {
      continue;
    }
    DefaultModelRoot mr=new DefaultModelRoot();
    mr.load(modelRootDescriptor.getMemento());
    for (    String path : mr.getFiles(DefaultModelRoot.SOURCE_ROOTS)) {
      if (path == null) {
        continue;
      }
      SNode p=ListSequence.fromList(convertPath(path)).first();
      if (p == null) {
        continue;
      }
      if (type.doFullImport) {
        new ModuleChecker.BuildModuleFacade(module).addModelSources(p);
      }
      hasModels=true;
    }
  }
  final boolean doNotCompile;
  if (myModuleDescriptor instanceof SolutionDescriptor && SNodeOperations.isInstanceOf(module,MetaAdapterFactory.getConcept(0xcf935df46994e9cL,0xa132fa109541cba3L,0x2c446791464290f7L,"jetbrains.mps.build.mps.structure.BuildMps_Solution"))) {
    SNode solutionModule=SNodeOperations.cast(module,MetaAdapterFactory.getConcept(0xcf935df46994e9cL,0xa132fa109541cba3L,0x2c446791464290f7L,"jetbrains.mps.build.mps.structure.BuildMps_Solution"));
    final boolean gotSourcesToCompile=((boolean)BuildMps_Solution__BehaviorDescriptor.hasSources_id6ogfLD6hwDf.invoke(solutionModule) && hasModels) || (boolean)BuildMps_Solution__BehaviorDescriptor.hasTestsSources_id6ogfLD6evrW.invoke(solutionModule) || !(myModuleDescriptor.getSourcePaths().isEmpty());
    doNotCompile=!(((SolutionDescriptor)myModuleDescriptor).getCompileInMPS()) || !(gotSourcesToCompile);
  }
 else {
    doNotCompile=false;
  }
  if (type.doCheck && SPropertyOperations.getBoolean(module,MetaAdapterFactory.getProperty(0xcf935df46994e9cL,0xa132fa109541cba3L,0x48e82d508331930cL,0x14d3fb6fb84ac614L,"doNotCompile")) != doNotCompile) {
    report("compile in MPS flag doesn't match file content " + SPropertyOperations.getString(myModule,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")) + ", should be: "+ doNotCompile,myOriginalModule);
  }
  if (type.doPartialImport) {
    SPropertyOperations.set(module,MetaAdapterFactory.getProperty(0xcf935df46994e9cL,0xa132fa109541cba3L,0x48e82d508331930cL,0x14d3fb6fb84ac614L,"doNotCompile"),"" + (doNotCompile));
  }
  if (type.doFullImport) {
    for (    String path : myModuleDescriptor.getSourcePaths()) {
      SNode p=ListSequence.fromList(convertPath(path)).first();
      new ModuleChecker.BuildModuleFacade(module).addJavaSources(p,false);
    }
    if (!(SNodeOperations.isInstanceOf(myModule,MetaAdapterFactory.getConcept(0xcf935df46994e9cL,0xa132fa109541cba3L,0x2c446791464290f7L,"jetbrains.mps.build.mps.structure.BuildMps_Solution"))) || ((boolean)BuildMps_Solution__BehaviorDescriptor.hasSources_id6ogfLD6hwDf.invoke(SNodeOperations.cast(myModule,MetaAdapterFactory.getConcept(0xcf935df46994e9cL,0xa132fa109541cba3L,0x2c446791464290f7L,"jetbrains.mps.build.mps.structure.BuildMps_Solution"))) && hasModels)) {
      IFile genPathFile=ProjectPathUtil.getGeneratorOutputPath(myModuleSourceDir,myModuleDescriptor);
      if (genPathFile != null) {
        String genPath=genPathFile.getPath();
        new ModuleChecker.BuildModuleFacade(module).addJavaSources(ListSequence.fromList(convertPath(genPath)).first(),true);
      }
    }
    String localPath=BuildSourcePath__BehaviorDescriptor.getLocalPath_id4Kip2_918Y$.invoke(SLinkOperations.getTarget(module,MetaAdapterFactory.getContainmentLink(0xcf935df46994e9cL,0xa132fa109541cba3L,0x4780308f5d333ebL,0x4780308f5d47f25L,"path")),(myGenContext != null ? Context.defaultContext(myGenContext) : Context.defaultContext()));
    if (localPath != null) {
      TestsFacet testsFacet=TestsFacetImpl.fromModuleDescriptor(myModuleDescriptor,FileSystem.getInstance().getFileByPath(localPath));
      boolean hasTests=SNodeOperations.isInstanceOf(myModule,MetaAdapterFactory.getConcept(0xcf935df46994e9cL,0xa132fa109541cba3L,0x2c446791464290f7L,"jetbrains.mps.build.mps.structure.BuildMps_Solution")) && (boolean)BuildMps_Solution__BehaviorDescriptor.hasTestsSources_id6ogfLD6evrW.invoke(SNodeOperations.cast(myModule,MetaAdapterFactory.getConcept(0xcf935df46994e9cL,0xa132fa109541cba3L,0x2c446791464290f7L,"jetbrains.mps.build.mps.structure.BuildMps_Solution")));
      if (testsFacet != null && hasTests) {
        IFile testsPathFile=testsFacet.getTestsOutputPath();
        if (testsPathFile != null) {
          String testPath=testsPathFile.getPath();
          SNode p=ListSequence.fromList(convertPath(testPath)).first();
          new ModuleChecker.BuildModuleFacade(module).addTestSources(p,true);
        }
      }
    }
  }
}
