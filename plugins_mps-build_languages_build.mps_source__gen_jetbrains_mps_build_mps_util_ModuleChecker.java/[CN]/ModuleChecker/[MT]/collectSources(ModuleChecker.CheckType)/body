{
  SNode module=SNodeOperations.cast(myModule,"jetbrains.mps.build.mps.structure.BuildMps_Module");
  Iterable<ModelRootDescriptor> modelRoots=myModuleDescriptor.getModelRootDescriptors();
  boolean hasModels=false;
  for (  ModelRootDescriptor modelRootDescriptor : modelRoots) {
    if (!(PersistenceRegistry.DEFAULT_MODEL_ROOT.equals(modelRootDescriptor.getType()))) {
      continue;
    }
    DefaultModelRoot mr=new DefaultModelRoot();
    mr.load(modelRootDescriptor.getMemento());
    for (    String path : mr.getFiles(DefaultModelRoot.SOURCE_ROOTS)) {
      if (path == null) {
        continue;
      }
      SNode p=ListSequence.fromList(convertPath(path)).first();
      if (p == null) {
        continue;
      }
      if (type.doFullImport) {
        SNode mroot=SModelOperations.createNewNode(SNodeOperations.getModel(module),null,"jetbrains.mps.build.mps.structure.BuildMps_ModuleModelRoot");
        SLinkOperations.setTarget(mroot,"folder",p,true);
        ListSequence.fromList(SLinkOperations.getTargets(module,"sources",true)).addElement(mroot);
      }
      hasModels=true;
    }
  }
  List<String> res=new ArrayList<String>();
  for (  String sp : myModuleDescriptor.getSourcePaths()) {
    res.add(sp);
  }
  String genPath=null;
  if (!(SNodeOperations.isInstanceOf(myModule,"jetbrains.mps.build.mps.structure.BuildMps_Solution")) || (BuildMps_Solution_Behavior.call_hasSources_7354447573576714831(SNodeOperations.cast(myModule,"jetbrains.mps.build.mps.structure.BuildMps_Solution")) && hasModels)) {
    IFile genPathFile=ProjectPathUtil.getGeneratorOutputPath(myModuleSourceDir,myModuleDescriptor);
    if (genPathFile != null) {
      genPath=genPathFile.getPath();
      res.add(genPath);
    }
  }
  String localPath=BehaviorReflection.invokeVirtual(String.class,SLinkOperations.getTarget(module,"path",true),"virtual_getLocalPath_5481553824944787364",new Object[]{(myGenContext != null ? Context.defaultContext(myGenContext) : Context.defaultContext())});
  String testPath=null;
  if (localPath != null) {
    TestsFacet testsFacet=TestsFacetImpl.fromModuleDescriptor(myModuleDescriptor,FileSystem.getInstance().getFileByPath(localPath));
    boolean hasTests=SNodeOperations.isInstanceOf(myModule,"jetbrains.mps.build.mps.structure.BuildMps_Solution") && BuildMps_Solution_Behavior.call_hasTestsSources_7354447573575923452(SNodeOperations.cast(myModule,"jetbrains.mps.build.mps.structure.BuildMps_Solution"));
    if (testsFacet != null && hasTests) {
      IFile testsPathFile=testsFacet.getTestsOutputPath();
      if (testsPathFile != null) {
        testPath=testsPathFile.getPath();
      }
    }
  }
  boolean doNotCompile=myModuleDescriptor instanceof SolutionDescriptor && (!(((SolutionDescriptor)myModuleDescriptor).getCompileInMPS()) || (res.isEmpty() && (testPath == null || testPath.length() == 0)));
  if (type.doCheck && SPropertyOperations.getBoolean(module,"doNotCompile") != doNotCompile) {
    report("compile in MPS flag doesn't match file content " + SPropertyOperations.getString(myModule,"name") + ", should be: "+ doNotCompile,myOriginalModule);
  }
  if (type.doPartialImport) {
    SPropertyOperations.set(module,"doNotCompile","" + (doNotCompile));
  }
  if (type.doFullImport) {
    for (    String path : res) {
      SNode p=ListSequence.fromList(convertPath(path)).first();
      if (p == null) {
        continue;
      }
      SNode javaSource=SModelOperations.createNewNode(SNodeOperations.getModel(module),null,"jetbrains.mps.build.mps.structure.BuildMps_ModuleJavaSource");
      SLinkOperations.setTarget(javaSource,"folder",SModelOperations.createNewNode(SNodeOperations.getModel(module),null,"jetbrains.mps.build.structure.BuildInputSingleFolder"),true);
      SLinkOperations.setTarget(SNodeOperations.cast(SLinkOperations.getTarget(javaSource,"folder",true),"jetbrains.mps.build.structure.BuildInputSingleFolder"),"path",p,true);
      SPropertyOperations.set(javaSource,"isGenerated","" + (path.equals(genPath)));
      ListSequence.fromList(SLinkOperations.getTargets(module,"sources",true)).addElement(javaSource);
    }
    if (testPath != null) {
      SNode p=ListSequence.fromList(convertPath(testPath)).first();
      if (p != null) {
        SNode testSource=SModelOperations.createNewNode(SNodeOperations.getModel(module),null,"jetbrains.mps.build.mps.structure.BuildMps_ModuleTestSource");
        SLinkOperations.setTarget(testSource,"folder",SModelOperations.createNewNode(SNodeOperations.getModel(module),null,"jetbrains.mps.build.structure.BuildInputSingleFolder"),true);
        SLinkOperations.setTarget(SNodeOperations.cast(SLinkOperations.getTarget(testSource,"folder",true),"jetbrains.mps.build.structure.BuildInputSingleFolder"),"path",p,true);
        SPropertyOperations.set(testSource,"isGenerated","" + (true));
        ListSequence.fromList(SLinkOperations.getTargets(module,"sources",true)).addElement(testSource);
      }
    }
  }
}
