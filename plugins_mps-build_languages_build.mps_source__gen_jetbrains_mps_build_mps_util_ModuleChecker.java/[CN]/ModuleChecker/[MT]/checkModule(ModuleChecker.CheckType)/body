{
  if (SNodeOperations.isInstanceOf(myModule,"jetbrains.mps.build.mps.structure.BuildMps_Language")) {
    if (!(myModuleDescriptor instanceof LanguageDescriptor)) {
      report("imported file is not a language file " + SPropertyOperations.getString(myModule,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")),myOriginalModule);
      return;
    }
  }
  if (SNodeOperations.isInstanceOf(myModule,"jetbrains.mps.build.mps.structure.BuildMps_Solution")) {
    if (!(myModuleDescriptor instanceof SolutionDescriptor)) {
      report("imported file is not a solution file " + SPropertyOperations.getString(myModule,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")),myOriginalModule);
      return;
    }
  }
  SNode module=SNodeOperations.cast(myModule,"jetbrains.mps.build.mps.structure.BuildMps_Module");
  List<SNode> previous=Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(module,MetaAdapterFactory.getContainmentLink(new UUID(934837630734519964l,-6831122735637083229l),5253498789149381388l,5253498789149547704l,"dependencies")),"jetbrains.mps.build.mps.structure.BuildMps_ExtractedModuleDependency")).toListSequence();
  collectDependencies(type,previous);
  if (type.doFullImport) {
    collectLocalDependencies();
  }
  if (SNodeOperations.isInstanceOf(module,"jetbrains.mps.build.mps.structure.BuildMps_Language")) {
    checkLanguage(type,previous);
  }
  collectSources(type);
  if (type.doPartialImport) {
    ListSequence.fromList(SLinkOperations.getChildren(module,MetaAdapterFactory.getContainmentLink(new UUID(934837630734519964l,-6831122735637083229l),5253498789149381388l,5253498789149547704l,"dependencies"))).removeSequence(ListSequence.fromList(previous));
  }
  if (type.doFullImport) {
    optimizeDeps();
  }
}
