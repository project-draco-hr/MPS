{
  SNode module=SNodeOperations.cast(myModule,"jetbrains.mps.build.mps.structure.BuildMps_Module");
  Iterable<SModuleReference> usedLanguages=myModuleDescriptor.getUsedLanguages();
  Iterable<SModuleReference> usedDevkits=myModuleDescriptor.getUsedDevkits();
  for (  SModuleReference lang : usedLanguages) {
    SNode resolved=SNodeOperations.as(myVisibleModules.resolve(lang),"jetbrains.mps.build.mps.structure.BuildMps_Language");
    if (resolved == null) {
      report("cannot find used language in dependencies: " + lang.getModuleName(),myModule);
      continue;
    }
    SNode ul=SModelOperations.createNewNode(SNodeOperations.getModel(module),null,"jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyUseLanguage");
    SLinkOperations.setTarget(ul,"language",resolved,false);
    ListSequence.fromList(SLinkOperations.getTargets(module,"dependencies",true)).addElement(ul);
  }
  for (  SModuleReference devkit : usedDevkits) {
    SNode resolved=SNodeOperations.as(myVisibleModules.resolve(devkit),"jetbrains.mps.build.mps.structure.BuildMps_DevKit");
    if (resolved == null) {
      report("cannot find used devkit in dependencies: " + devkit.getModuleName(),myModule);
      continue;
    }
    SNode ud=SModelOperations.createNewNode(SNodeOperations.getModel(module),null,"jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyOnDevKit");
    SLinkOperations.setTarget(ud,"devkit",resolved,false);
    ListSequence.fromList(SLinkOperations.getTargets(module,"dependencies",true)).addElement(ud);
  }
}
