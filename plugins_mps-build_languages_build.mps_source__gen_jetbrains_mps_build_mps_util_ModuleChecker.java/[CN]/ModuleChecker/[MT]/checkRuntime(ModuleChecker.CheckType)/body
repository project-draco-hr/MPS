{
  LanguageDescriptor descriptor=(LanguageDescriptor)myModuleDescriptor;
  SNode module=SNodeOperations.cast(myModule,MetaAdapterFactory.getConcept(new UUID(934837630734519964l,-6831122735637083229l),3189788309731840248l,"jetbrains.mps.build.mps.structure.BuildMps_Language"));
  List<SNode> previous=ListSequence.fromListWithValues(new ArrayList<SNode>(),SLinkOperations.getChildren(module,MetaAdapterFactory.getContainmentLink(new UUID(934837630734519964l,-6831122735637083229l),3189788309731840248l,3189788309731917348l,"runtime")));
  for (  SModuleReference runtimeModule : descriptor.getRuntimeModules()) {
    final SNode resolved=SNodeOperations.as(myVisibleModules.resolve(runtimeModule),MetaAdapterFactory.getConcept(new UUID(934837630734519964l,-6831122735637083229l),3189788309731840247l,"jetbrains.mps.build.mps.structure.BuildMps_Solution"));
    if (resolved == null) {
      report("cannot find runtime solution in dependencies: " + runtimeModule.getModuleName(),myModule);
      continue;
    }
    if (type.doCheck && !(Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(SNodeOperations.cast(myModule,MetaAdapterFactory.getConcept(new UUID(934837630734519964l,-6831122735637083229l),3189788309731840248l,"jetbrains.mps.build.mps.structure.BuildMps_Language")),MetaAdapterFactory.getContainmentLink(new UUID(934837630734519964l,-6831122735637083229l),3189788309731840248l,3189788309731917348l,"runtime")),MetaAdapterFactory.getConcept(new UUID(934837630734519964l,-6831122735637083229l),3189788309731981027l,"jetbrains.mps.build.mps.structure.BuildMps_ModuleSolutionRuntime"))).any(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(new UUID(934837630734519964l,-6831122735637083229l),3189788309731981027l,3189788309731981028l,"solution")) == resolved;
      }
    }
))) {
      report("runtime solution should be extracted into build script: " + runtimeModule.toString(),myOriginalModule);
    }
    if (type.doPartialImport) {
      SNode ul=Sequence.fromIterable(SNodeOperations.ofConcept(previous,MetaAdapterFactory.getConcept(new UUID(934837630734519964l,-6831122735637083229l),3189788309731981027l,"jetbrains.mps.build.mps.structure.BuildMps_ModuleSolutionRuntime"))).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(new UUID(934837630734519964l,-6831122735637083229l),3189788309731981027l,3189788309731981028l,"solution")) == resolved;
        }
      }
);
      if (ul == null) {
        ul=SModelOperations.createNewNode(SNodeOperations.getModel(myModule),null,SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(934837630734519964l,-6831122735637083229l),3189788309731981027l,"jetbrains.mps.build.mps.structure.BuildMps_ModuleSolutionRuntime")));
        SLinkOperations.setTarget(ul,MetaAdapterFactory.getReferenceLink(new UUID(934837630734519964l,-6831122735637083229l),3189788309731981027l,3189788309731981028l,"solution"),resolved);
        ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(myModule,MetaAdapterFactory.getConcept(new UUID(934837630734519964l,-6831122735637083229l),3189788309731840248l,"jetbrains.mps.build.mps.structure.BuildMps_Language")),MetaAdapterFactory.getContainmentLink(new UUID(934837630734519964l,-6831122735637083229l),3189788309731840248l,3189788309731917348l,"runtime"))).addElement(ul);
      }
 else {
        ListSequence.fromList(previous).removeElement(ul);
      }
    }
  }
}
