{
  return ModelAccess.instance().runReadAction(new Computable<EditorCell>(){
    @Override public EditorCell compute(){
      if (myCheckFirst && isMultipleCollectionCell(myCurrent)) {
        return myCurrent;
      }
      SNode anchorNode=getLCA(myAnchor.getSNode(),myCurrent.getSNode());
      if (anchorNode == null) {
        return null;
      }
      if (anchorNode != myCurrent.getSNode()) {
        EditorCell curr=myCurrent;
        while (curr != null && curr.getSNode() != anchorNode) {
          if (isMultipleCollectionCell(curr)) {
            return curr;
          }
          curr=curr.getParent();
        }
        if (curr != null && curr.getSNode() == anchorNode && isMultipleCollectionCell(curr)) {
          return curr;
        }
      }
      for (      EditorCell current : new DfsTraverserIterable(myCurrent,myForward,false)) {
        SNode currentNode=current.getSNode();
        if (!jetbrains.mps.util.SNodeOperations.isAncestor(anchorNode,currentNode)) {
          return null;
        }
        if (isMultipleCollectionCell(current)) {
          return current;
        }
      }
      return null;
    }
  }
);
}
