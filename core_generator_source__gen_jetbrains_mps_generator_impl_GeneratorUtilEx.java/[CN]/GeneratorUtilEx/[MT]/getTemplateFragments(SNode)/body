{
  List<SNode> templateFragments=new ArrayList<SNode>();
  LinkedList<SNode> queue=new LinkedList<SNode>();
  queue.addFirst(template);
  final SConcept conceptTemplateFragment=MetaAdapterFactory.getConcept(0xb401a68083254110L,0x8fd384331ff25befL,0xff1b29b76cL,"jetbrains.mps.lang.generator.structure.TemplateFragment");
  while (!(queue.isEmpty())) {
    SNode subnode=queue.removeFirst();
    boolean tfFound=false;
    for (    SNode attr : SLinkOperations.getChildren(subnode,MetaAdapterFactory.getContainmentLink(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x10802efe25aL,0x47bf8397520e5942L,"smodelAttribute"))) {
      if (SConceptOperations.isExactly(SNodeOperations.asSConcept(SNodeOperations.getConcept(attr)),SNodeOperations.asSConcept(conceptTemplateFragment))) {
        templateFragments.add((SNode)attr);
        tfFound=true;
        break;
      }
    }
    if (!(tfFound)) {
      queue.addAll(SNodeOperations.getChildren(subnode));
    }
  }
  return templateFragments;
}
