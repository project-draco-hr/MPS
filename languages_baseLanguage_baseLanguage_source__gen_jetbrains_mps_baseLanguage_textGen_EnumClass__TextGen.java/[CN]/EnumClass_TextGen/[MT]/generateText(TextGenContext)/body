{
  final TextGenSupport tgs=new TextGenSupport(ctx);
  tgs.createUnitInfo();
  BaseLanguageTextGen.fileHeader(ctx.getPrimaryInput(),ctx);
  BaseLanguageTextGen.annotations(ctx.getPrimaryInput(),ctx);
  BaseLanguageTextGen.visibilityWithIndent(SLinkOperations.getTarget(ctx.getPrimaryInput(),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,0x112670d886aL,"visibility")),ctx);
  if ((AttributeOperations.getAttribute(ctx.getPrimaryInput(),new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL,0xbb1b463a8781b786L,0x1cb65d9fe66a764cL,"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment"))) != null)) {
    tgs.appendNode(AttributeOperations.getAttribute(ctx.getPrimaryInput(),new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL,0xbb1b463a8781b786L,0x1cb65d9fe66a764cL,"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment"))));
  }
  if (!(SNodeOperations.isRoot(ctx.getPrimaryInput()))) {
    tgs.append("static ");
  }
  tgs.indent();
  tgs.append("enum ");
  tgs.append(JavaNameUtil.shortName(SPropertyOperations.getString(ctx.getPrimaryInput(),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"))));
  if (ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0xff2ac0b419L,"implementedInterface"))).isNotEmpty()) {
    tgs.append(" implements ");
{
      Iterable<SNode> collection=SLinkOperations.getChildren(ctx.getPrimaryInput(),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0xff2ac0b419L,"implementedInterface"));
      final SNode lastItem=Sequence.fromIterable(collection).last();
      for (      SNode item : collection) {
        tgs.appendNode(item);
        if (item != lastItem) {
          tgs.append(", ");
        }
      }
    }
  }
  tgs.append(" {");
  ctx.getBuffer().area().increaseIndent();
{
    Iterable<SNode> collection=SLinkOperations.getChildren(ctx.getPrimaryInput(),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,0xfc367503acL,"enumConstant"));
    final SNode lastItem=Sequence.fromIterable(collection).last();
    for (    SNode item : collection) {
      tgs.appendNode(item);
      if (item != lastItem) {
        tgs.append(",");
      }
    }
  }
  tgs.append(";");
  tgs.newLine();
  tgs.newLine();
  BaseClassConceptTextGen.members(ctx.getPrimaryInput(),ctx);
  ctx.getBuffer().area().decreaseIndent();
  tgs.indent();
  tgs.append("}");
  tgs.newLine();
  if (tgs.needPositions()) {
    tgs.fillUnitInfo(BehaviorReflection.invokeVirtual(String.class,jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.cast(ctx.getPrimaryInput(),MetaAdapterFactory.getInterfaceConcept(0x9ded098bad6a4657L,0xbfd948636cfe8bc3L,0x465516cf87c705a4L,"jetbrains.mps.lang.traceable.structure.UnitConcept")),"virtual_getUnitName_5067982036267369911",new Object[]{}));
  }
}
