{
  super.handle(request);
  this.project.getModelAccess().executeCommandInEDT(new Runnable(){
    public void run(){
      try {
        final DefaultSModel loadedModel=ModelPersistence.readModel(NodeReveiver.this.node,false);
        SNode loadedNode=loadedModel.getRootNodes().iterator().next();
        EditableModelDescriptor tmpModel=as_rm47i7_a0a3a0a0a0a0a2a41(TemporaryModels.getInstance().create(false,TempModuleOptions.forDefaultModule()),EditableModelDescriptor.class);
        loadedModel.removeRootNode(loadedNode);
        tmpModel.addRootNode(loadedNode);
        TemporaryModels.getInstance().addMissingImports(tmpModel);
        loadedModel.dispose();
        ReceivedNodeDialog dialog=new ReceivedNodeDialog(as_rm47i7_a0a0a21a0a0a0a0a2a41(NodeReveiver.this.project,MPSProject.class),loadedNode);
        dialog.show();
        NodeReveiver.this.request.sendResponse(HttpResponseStatus.OK,"image/gif",Unpooled.copiedBuffer((dialog.isOK() ? HandlerUtil.SUCCESS_STREAM : HandlerUtil.FAILURE_STREAM)));
      }
 catch (      Exception e) {
        if (LOG.isEnabledFor(Level.ERROR)) {
          LOG.error("",e);
        }
        NodeReveiver.this.request.sendResponse(HttpResponseStatus.OK,"image/gif",Unpooled.copiedBuffer(HandlerUtil.FAILURE_STREAM));
      }
    }
  }
);
}
