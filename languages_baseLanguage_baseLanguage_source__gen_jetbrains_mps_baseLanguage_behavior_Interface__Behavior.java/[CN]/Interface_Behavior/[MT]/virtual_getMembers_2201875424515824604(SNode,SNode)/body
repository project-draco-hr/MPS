{
  SNode[] implementedInterfaces=ListSequence.fromList(SLinkOperations.getTargets(thisNode,"extendedInterface",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (SLinkOperations.getTarget(it,"classifier",false) != null);
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SLinkOperations.getTarget(it,"classifier",false);
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (it != null);
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(it,"jetbrains.mps.baseLanguage.structure.Interface");
    }
  }
).toGenericArray(SNode.class);
  Scope result=MemberScopes.forInterface(SNodeOperations.castConcept(kind,"jetbrains.mps.baseLanguage.structure.ClassifierMember"),thisNode,implementedInterfaces);
  if (result != null) {
    return result;
  }
  return Classifier_Behavior.callSuper_getMembers_2201875424515824604(thisNode,"jetbrains.mps.baseLanguage.structure.Interface",kind);
}
