{
  if ((value == null || value.length() == 0)) {
    return false;
  }
  SNode refConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.bash.structure.IConcreteWordUnit");
  Iterable<SModule> modules=GlobalScope.getInstance().getModules();
  Set<Language> langs=new HashSet<Language>();
  for (  SModule module : Sequence.fromIterable(modules)) {
    if (!(module instanceof Language)) {
      continue;
    }
    langs.add(((Language)module));
  }
  for (  SNode unit : ListSequence.fromList(((List<SNode>)SConceptOperations.getAllSubConcepts(refConcept,langs)))) {
    if (isEmpty_ur4wq2_a0a0f0b(BehaviorReflection.invokeVirtualStatic(String.class,SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(unit)),"virtual_getPattern_1262430001741497918",new Object[]{}))) {
      continue;
    }
    int index=value.indexOf(BehaviorReflection.invokeVirtualStatic(String.class,SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(unit)),"virtual_getPattern_1262430001741497918",new Object[]{}));
    if (index == -1) {
      continue;
    }
    SNode endOfWord=SConceptOperations.createNewNode("jetbrains.mps.bash.structure.SimpleWord",null);
    String dummy=value.substring(index + BehaviorReflection.invokeVirtualStatic(String.class,SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(unit)),"virtual_getPattern_1262430001741497918",new Object[]{}).length());
    if ((dummy != null && dummy.length() > 0)) {
      SPropertyOperations.set(endOfWord,"word",dummy);
      SNodeOperations.insertNextSiblingChild(thisNode,endOfWord);
    }
    SNode newUnit=SConceptOperations.createNewNode(NameUtil.nodeFQName(unit),null);
    if (index == 0) {
      SNodeOperations.replaceWithAnother(thisNode,newUnit);
    }
 else {
      SPropertyOperations.set(thisNode,"word",value.substring(0,index));
      SNodeOperations.insertNextSiblingChild(thisNode,newUnit);
    }
    return true;
  }
  return false;
}
