{
{
    SAbstractConcept cncpt=c;
    Integer preIndex=indices_lpa09p_a0y.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return props_ActionTestAbstractChild;
      }
    break;
case 1:
  if (true) {
    return props_ActionTestAbstractChildWrapper;
  }
break;
case 2:
if (true) {
return props_ActionTestChild1;
}
break;
case 3:
if (true) {
return props_ActionTestChild1Child;
}
break;
case 4:
if (true) {
return props_ActionTestChild1SubConcept;
}
break;
case 5:
if (true) {
return props_ActionTestChild2;
}
break;
case 6:
if (true) {
return props_ActionTestChildToWrap1;
}
break;
case 7:
if (true) {
return props_ActionTestChildToWrap2;
}
break;
case 8:
if (true) {
return props_ActionTestChildWrapper;
}
break;
case 9:
if (true) {
return props_ActionTestContainer;
}
break;
case 10:
if (true) {
return props_ActionTestDefaultAbstractChild;
}
break;
case 11:
if (true) {
return props_ActionTestDefaultChild1;
}
break;
case 12:
if (true) {
return props_ActionTestDefaultChild2;
}
break;
case 13:
if (true) {
return props_ActionTestSidetransformAbstractChild;
}
break;
case 14:
if (true) {
return props_ActionTestSidetransformAddConceptAbstractChild;
}
break;
case 15:
if (true) {
return props_ActionTestSidetransformAddConceptChild;
}
break;
case 16:
if (true) {
return props_ActionTestSidetransformAnotherAbstractChild;
}
break;
case 17:
if (true) {
return props_ActionTestSidetransformAnotherChild1;
}
break;
case 18:
if (true) {
return props_ActionTestSidetransformAnotherChild2;
}
break;
case 19:
if (true) {
return props_ActionTestSidetransformAnotherChildCommonSuperConcept;
}
break;
case 20:
if (true) {
return props_ActionTestSidetransformChild1;
}
break;
case 21:
if (true) {
return props_ActionTestSidetransformTestAncestor;
}
break;
case 22:
if (true) {
return props_ActionTestSidetransformTestContainer;
}
break;
default :
}
}
throw new IllegalStateException();
}
