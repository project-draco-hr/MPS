{
  SNode ifTrue=SLinkOperations.getTarget(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123159l,1068580123161l,"ifTrue"));
  List<SNode> vars=new ArrayList<SNode>();
  for (  SNode expression : NullableUtil.getOrConditions(node)) {
    if (SNodeOperations.isInstanceOf(expression,"jetbrains.mps.baseLanguage.structure.EqualsExpression")) {
      SNode notNullNode=NullableUtil.getOtherThanNull(SNodeOperations.cast(expression,"jetbrains.mps.baseLanguage.structure.EqualsExpression"));
      if (notNullNode != null) {
        ListSequence.fromList(vars).addElement(notNullNode);
      }
    }
  }
  if (!((ListSequence.fromList(SLinkOperations.getChildren(ifTrue,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123136l,1068581517665l,"statement"))).count() == 1 && SNodeOperations.isInstanceOf(ListSequence.fromList(SLinkOperations.getChildren(ifTrue,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123136l,1068581517665l,"statement"))).first(),"jetbrains.mps.baseLanguage.structure.ReturnStatement")))) {
    for (    SNode var : vars) {
{
        Object object=SLinkOperations.getTarget(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123159l,1068580123161l,"ifTrue"));
        if (((Program)o).contains(object)) {
          boolean before=true;
          int position=((Program)(o)).getStart(SLinkOperations.getTarget(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123159l,1068580123161l,"ifTrue")));
          Instruction instruction=new nullableInstruction(var);
          instruction.setRuleReference("r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/1228615757308596556");
          instruction.setSource(node);
          ((Program)(o)).insert(instruction,position,true,before);
        }
      }
    }
  }
  if (!(ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123159l,1206060520071l,"elsifClauses"))).isEmpty())) {
    for (    SNode var : vars) {
{
        Object object=ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123159l,1206060520071l,"elsifClauses"))).first();
        if (((Program)o).contains(object)) {
          boolean before=true;
          int position=((Program)(o)).getStart(ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123159l,1206060520071l,"elsifClauses"))).first());
          Instruction instruction=new notNullInstruction(var);
          instruction.setRuleReference("r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/1259268621398138708");
          instruction.setSource(node);
          ((Program)(o)).insert(instruction,position,true,before);
        }
      }
    }
  }
  for (  SNode var : vars) {
{
      Object object=SNodeOperations.getParent(var);
      if (((Program)o).contains(object)) {
        boolean before=false;
        int position=((Program)(o)).getEnd(object);
        Instruction instruction=new notNullInstruction(var);
        instruction.setRuleReference("r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/4258402621852112799");
        instruction.setSource(node);
        ((Program)(o)).insert(instruction,position,true,before);
      }
    }
  }
}
