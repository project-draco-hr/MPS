{
  removeAllChildren();
  SModel model;
  model=myModelDescriptor.getSModel();
  if (!model.hasSModelCommandListener(myModelListener)) {
    model.addSModelCommandListener(myModelListener);
  }
  List<SNode> filteredRoots=CollectionUtil.filter(model.getRoots(),new Condition<SNode>(){
    public boolean met(    SNode object){
      return !(object instanceof AttributeConcept);
    }
  }
);
  List<SNode> sortedRoots=SortUtil.sortNodes(filteredRoots);
  for (  SNode sortedRoot : sortedRoots) {
    MPSTreeNodeEx treeNode=new SNodeTreeNode(sortedRoot,getOperationContext());
    add(treeNode);
  }
  DefaultTreeModel treeModel=(DefaultTreeModel)getOperationContext().getComponent(IDEProjectFrame.class).getProjectPane().getTree().getModel();
  treeModel.nodeStructureChanged(this);
  isInitialized=true;
}
