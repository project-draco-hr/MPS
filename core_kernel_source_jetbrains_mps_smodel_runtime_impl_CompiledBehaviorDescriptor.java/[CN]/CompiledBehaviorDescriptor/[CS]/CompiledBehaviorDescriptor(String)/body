{
  super(conceptFqName);
  Method[] virtualMethods=this.getClass().getMethods();
  Method[] nonVirtualMethods;
  try {
    nonVirtualMethods=this.getClass().getClassLoader().loadClass(behaviorClassByConceptFqName(getConceptFqName())).getMethods();
  }
 catch (  ClassNotFoundException e) {
    nonVirtualMethods=new Method[0];
  }
  this.methods=new HashMap<String,Method>((virtualMethods.length + nonVirtualMethods.length) * 2);
  for (  Method method : virtualMethods) {
    if (method.getName().startsWith(VIRTUAL_METHOD_PREFIX)) {
      this.methods.put(method.getName(),method);
    }
  }
  for (  Method method : nonVirtualMethods) {
    if (method.getName().startsWith(NON_VIRTUAL_METHOD_PREFIX)) {
      this.methods.put(method.getName(),method);
    }
  }
}
