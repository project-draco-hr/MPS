{
  if (SLinkOperations.getTarget(node,"loopLabel",true) != null) {
    this.appendNewLine();
    this.append(SPropertyOperations.getString(SLinkOperations.getTarget(node,"loopLabel",true),"name"));
    this.append(":");
  }
 else   if (SPropertyOperations.getString(node,"label") != null) {
    this.appendNewLine();
    this.append(SPropertyOperations.getString(node,"label"));
    this.append(":");
  }
  this.appendNewLine();
  this.indentBuffer();
  this.append("for (");
  if ((SLinkOperations.getTarget(node,"variable",true) != null)) {
    TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),SLinkOperations.getTarget(node,"variable",true),this.getSNode());
  }
  for (  SNode additionalVar : SLinkOperations.getTargets(node,"additionalVar",true)) {
    this.append(", ");
    TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),additionalVar,this.getSNode());
  }
  this.append("; ");
  if ((SLinkOperations.getTarget(node,"condition",true) != null)) {
    TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),SLinkOperations.getTarget(node,"condition",true),this.getSNode());
  }
  this.append(";");
  for (  SNode iteration : SLinkOperations.getTargets(node,"iteration",true)) {
    this.append(" ");
    TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),iteration,this.getSNode());
  }
  this.append(") {");
  this.increaseDepth();
  TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),SLinkOperations.getTarget(node,"body",true),this.getSNode());
  this.decreaseDepth();
  this.appendNewLine();
  this.appendWithIndent("}");
}
