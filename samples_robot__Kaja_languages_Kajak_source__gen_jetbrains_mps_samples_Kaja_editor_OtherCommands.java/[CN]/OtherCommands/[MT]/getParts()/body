{
  return Arrays.<MenuPart>asList(new ActionItemMenuPart(){
    @Override protected String getText(    ContextAssistantMenu.Context context){
      final EditorContext editorContext=context.getEditorContext();
      final SNode node=context.getNode();
      return "Drop";
    }
    @Override protected void execute(    ContextAssistantMenu.Context context){
      final EditorContext editorContext=context.getEditorContext();
      final SNode node=context.getNode();
      SNodeOperations.insertPrevSiblingChild(node,SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x58e59ea713f79f27L,"jetbrains.mps.samples.Kaja.structure.Drop")),null));
    }
  }
,new ActionItemMenuPart(){
    @Override protected String getText(    ContextAssistantMenu.Context context){
      final EditorContext editorContext=context.getEditorContext();
      final SNode node=context.getNode();
      return "Pick";
    }
    @Override protected void execute(    ContextAssistantMenu.Context context){
      final EditorContext editorContext=context.getEditorContext();
      final SNode node=context.getNode();
      SNodeOperations.insertPrevSiblingChild(node,SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x58e59ea713f85f1dL,"jetbrains.mps.samples.Kaja.structure.Pick")),null));
    }
  }
,new ConditionalMenuPart(){
    @Override protected boolean isApplicable(    ContextAssistantMenu.Context context){
      final EditorContext editorContext=context.getEditorContext();
      final SNode node=context.getNode();
      return eq_uewb7w_a0a0c0a0a2a0a0(SNodeOperations.getParent(SNodeOperations.getNodeAncestor(node,MetaAdapterFactory.getConcept(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x2de971c785f06a3fL,"jetbrains.mps.samples.Kaja.structure.CommandList"),false,false)),SNodeOperations.getContainingRoot(node));
    }
    @Override protected List<MenuPart> getParts(){
      return Arrays.<MenuPart>asList(new ActionItemMenuPart(){
        @Override protected String getText(        ContextAssistantMenu.Context context){
          final EditorContext editorContext=context.getEditorContext();
          final SNode node=context.getNode();
          return "Require";
        }
        @Override protected void execute(        ContextAssistantMenu.Context context){
          final EditorContext editorContext=context.getEditorContext();
          final SNode node=context.getNode();
{
            SNode inserted=SNodeOperations.insertPrevSiblingChild(node,SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x3cfcda239f1a1049L,"jetbrains.mps.samples.Kaja.structure.Require")),null));
            editorContext.selectWRTFocusPolicy(inserted);
          }
        }
      }
);
    }
  }
);
}
