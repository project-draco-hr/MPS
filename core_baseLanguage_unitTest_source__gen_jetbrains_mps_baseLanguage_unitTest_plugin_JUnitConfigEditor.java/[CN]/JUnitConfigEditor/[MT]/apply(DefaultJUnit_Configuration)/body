{
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      if (ListSequence.fromList(myThis.getMethods()).isNotEmpty()) {
        config.getStateObject().methods=new ClonableList<String>();
        for (        SNode testMethod : myThis.getMethods()) {
          config.getStateObject().methods.add(ITestMethod_Behavior.call_getTestName_1216136419751(testMethod));
        }
        config.getStateObject().method=null;
      }
      if (ListSequence.fromList(myThis.getNodes()).isNotEmpty()) {
        config.getStateObject().nodes=new ClonableList<String>();
        for (        SNode testCase : myThis.getNodes()) {
          config.getStateObject().nodes.add(INamedConcept_Behavior.call_getFqName_1213877404258(testCase));
        }
        config.getStateObject().node=null;
      }
      config.getStateObject().model=(myThis.getModel() != null ? config.getStateObject().model=myThis.getModel().getSModelFqName().toString() : null);
      if (myThis.getModule() != null) {
        config.getStateObject().module=myThis.getModule().getModuleFqName();
        config.getStateObject().compileInMPS=myThis.getModule().isCompileInMPS();
      }
 else {
        config.getStateObject().module=null;
      }
      JUnitRunTypes type=myThis.getType(myThis.myIsModule1tugdysy72bmb.isSelected(),myThis.myIsModel8e4569kj0438.isSelected(),myThis.myIsClass8e4569kj043b.isSelected(),myThis.myIsMethod8e4569kj043e.isSelected());
      if (type != null) {
        config.getStateObject().type=type;
      }
    }
  }
);
  if (config.getStateObject().myParams == null) {
    config.getStateObject().myParams=new ConfigRunParameters();
  }
  myThis.myJavaOptions8e4569kj043h.apply(config.getStateObject().myParams);
}
