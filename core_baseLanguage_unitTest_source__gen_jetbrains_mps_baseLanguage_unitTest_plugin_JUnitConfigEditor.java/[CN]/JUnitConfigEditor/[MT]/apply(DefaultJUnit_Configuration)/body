{
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      int index=Sequence.fromIterable(Sequence.fromArray(myThis.getButtons())).indexOf(Sequence.fromIterable(Sequence.fromArray(myThis.getButtons())).findFirst(new IWhereFilter<JRadioButton>(){
        public boolean accept(        JRadioButton it){
          return it.isSelected();
        }
      }
));
      if (index >= 0) {
        config.getStateObject().type=JUnitRunTypes.values()[index];
      }
      config.getStateObject().fullMethodNames=null;
      config.getStateObject().nodes=null;
      config.getStateObject().testMethods=new ClonableList<String>();
      for (      ITestNodeWrapper testMethod : myThis.getMethods()) {
        config.getStateObject().testMethods.add(TestUtils.pointerToString(new SNodePointer(testMethod.getNode())));
      }
      config.getStateObject().testCases=new ClonableList<String>();
      for (      ITestNodeWrapper testCase : myThis.getNodes()) {
        config.getStateObject().testCases.add(TestUtils.pointerToString(new SNodePointer(testCase.getNode())));
      }
      config.getStateObject().model=(myThis.getModel() != null ? config.getStateObject().model=myThis.getModel().getSModelFqName().toString() : null);
      if (myThis.getModule() != null) {
        config.getStateObject().module=myThis.getModule().getModuleFqName();
      }
 else {
        config.getStateObject().module=null;
      }
    }
  }
);
}
