{
  if (configuration.getRunType() != null) {
    myThis.getButtons()[configuration.getRunType().ordinal()].setSelected(true);
  }
 else {
    myThis.myIsProject_d1a.setSelected(true);
  }
  myThis.setNodes(ListSequence.<ITestNodeWrapper>fromList(new ArrayList<ITestNodeWrapper>()));
  myThis.myTestCases_d0.clear();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      Sequence.<ITestNodeWrapper>fromIterable(TestUtils.wrapPointerStrings(configuration.getTestCases())).visitAll(new IVisitor<ITestNodeWrapper>(){
        public void visit(        ITestNodeWrapper it){
          myThis.myTestCases_d0.addItem(it);
          ListSequence.<ITestNodeWrapper>fromList(myThis.getNodes()).addElement(it);
        }
      }
);
    }
  }
);
  myThis.setMethods(ListSequence.<ITestNodeWrapper>fromList(new ArrayList<ITestNodeWrapper>()));
  myThis.myTestMethods_e0.clear();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      Sequence.<ITestNodeWrapper>fromIterable(TestUtils.wrapPointerStrings(configuration.getTestMethods())).visitAll(new IVisitor<ITestNodeWrapper>(){
        public void visit(        ITestNodeWrapper it){
          myThis.myTestMethods_e0.addItem(it);
          ListSequence.<ITestNodeWrapper>fromList(myThis.getMethods()).addElement(it);
        }
      }
);
    }
  }
);
  if (configuration.getModel() != null) {
    myThis.resetEditorModelWith(configuration.getModel());
  }
 else {
    final Wrappers._T<ITestNodeWrapper> wrapperToTakeModelFrom=new Wrappers._T<ITestNodeWrapper>(null);
    if (myThis.getNodes() != null && ListSequence.<ITestNodeWrapper>fromList(myThis.getNodes()).isNotEmpty()) {
      wrapperToTakeModelFrom.value=ListSequence.<ITestNodeWrapper>fromList(myThis.getNodes()).first();
    }
    if (myThis.getMethods() != null && ListSequence.<ITestNodeWrapper>fromList(myThis.getMethods()).isNotEmpty()) {
      wrapperToTakeModelFrom.value=ListSequence.<ITestNodeWrapper>fromList(myThis.getMethods()).first();
    }
    if (wrapperToTakeModelFrom.value != null) {
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          myThis.resetEditorModelWith(SNodeOperations.getModel(wrapperToTakeModelFrom.value.getNode()).getSModelFqName().toString());
        }
      }
);
    }
  }
  if (configuration.getModule() != null) {
    myThis.setModuleValue(configuration.getModule());
    myThis.myModuleName_d4c0.setText(configuration.getModule());
  }
  myThis.onSelect();
}
