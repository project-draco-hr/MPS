{
  if (config.getStateObject().type != null) {
    myThis.getButtons()[config.getStateObject().type.ordinal()].setSelected(true);
  }
 else {
    myThis.myIsProject_d1a.setSelected(true);
  }
  myThis.setNodes(ListSequence.fromList(new ArrayList<ITestNodeWrapper>()));
  myThis.myTestCases_d0.clear();
  if (config.getStateObject().nodes != null) {
    for (    String nodeName : config.getStateObject().nodes) {
      myThis.addNodeValue(nodeName);
    }
  }
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      Sequence.fromIterable(TestUtils.wrapPointerStrings(config.getStateObject().testCases)).visitAll(new IVisitor<ITestNodeWrapper>(){
        public void visit(        ITestNodeWrapper it){
          myThis.myTestCases_d0.addItem(it);
          ListSequence.fromList(myThis.getNodes()).addElement(it);
        }
      }
);
    }
  }
);
  myThis.setMethods(ListSequence.fromList(new ArrayList<ITestNodeWrapper>()));
  myThis.myTestMethods_e0.clear();
  if (config.getStateObject().fullMethodNames != null) {
    for (    String methodName : ListSequence.fromList(config.getStateObject().fullMethodNames)) {
      int separatorIndex=methodName.lastIndexOf(TestUtils.SEPARATOR);
      myThis.addMethodValue(methodName.substring(0,separatorIndex),methodName.substring(separatorIndex + 1));
    }
  }
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      Sequence.fromIterable(TestUtils.wrapPointerStrings(config.getStateObject().testMethods)).visitAll(new IVisitor<ITestNodeWrapper>(){
        public void visit(        ITestNodeWrapper it){
          myThis.myTestMethods_e0.addItem(it);
          ListSequence.fromList(myThis.getMethods()).addElement(it);
        }
      }
);
    }
  }
);
  if (config.getStateObject().model != null) {
    myThis.resetEditorModelWith(config.getStateObject().model);
  }
 else {
    final Wrappers._T<ITestNodeWrapper> wrapperToTakeModelFrom=new Wrappers._T<ITestNodeWrapper>(null);
    if (myThis.getNodes() != null && ListSequence.fromList(myThis.getNodes()).isNotEmpty()) {
      wrapperToTakeModelFrom.value=ListSequence.fromList(myThis.getNodes()).first();
    }
    if (myThis.getMethods() != null && ListSequence.fromList(myThis.getMethods()).isNotEmpty()) {
      wrapperToTakeModelFrom.value=ListSequence.fromList(myThis.getMethods()).first();
    }
    if (wrapperToTakeModelFrom.value != null) {
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          myThis.resetEditorModelWith(SNodeOperations.getModel(wrapperToTakeModelFrom.value.getNode()).getSModelFqName().toString());
        }
      }
);
    }
  }
  if (config.getStateObject().module != null) {
    myThis.setModuleValue(config.getStateObject().module);
    myThis.myModuleName_d4c0.setText(config.getStateObject().module);
  }
  myThis.onSelect();
}
