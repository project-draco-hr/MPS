{
  ReferenceBinding methodDeclaringClass=binding.declaringClass;
  SourceTypeBinding currentClass=myCurrentTypeDeclaration.binding;
  ThisExpression thisExpression=ThisExpression.newInstance(myCurrentModel);
  if (currentClass == methodDeclaringClass) {
    return thisExpression;
  }
  if (isSubtype(currentClass,methodDeclaringClass)) {
    return thisExpression;
  }
  while (!currentClass.isStatic() && currentClass.isNestedType()) {
    currentClass=((NestedTypeBinding)currentClass).enclosingType;
    if (isSubtype(currentClass,methodDeclaringClass)) {
      break;
    }
  }
  thisExpression.getNode().addReference(myTypesProvider.createClassifierReference((ReferenceBinding)currentClass,ThisExpression.CLASS_CONCEPT,thisExpression.getNode()));
  return thisExpression;
}
