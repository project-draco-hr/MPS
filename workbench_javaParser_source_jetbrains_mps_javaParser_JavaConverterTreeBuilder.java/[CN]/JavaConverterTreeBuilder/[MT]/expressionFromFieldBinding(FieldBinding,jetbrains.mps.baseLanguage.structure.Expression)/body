{
  String role;
  SNode sourceNode;
  jetbrains.mps.baseLanguage.structure.Expression result;
  ReferenceBinding declaredClassBinding=getDeclaredClassBinding(fieldBinding);
  SNodePointer classifierPointer=myTypesProvider.createClassifierPointer(declaredClassBinding);
  if (fieldBinding.isStatic()) {
    if (BaseAdapter.isInstance(classifierPointer.getNode(),EnumClass.class)) {
      EnumConstantReference enumConstantReference=EnumConstantReference.newInstance(myCurrentModel);
      role=EnumConstantReference.ENUM_CONSTANT_DECLARATION;
      sourceNode=enumConstantReference.getNode();
      enumConstantReference.getNode().addReference(SReference.create(EnumConstantReference.ENUM_CLASS,sourceNode,classifierPointer));
      result=enumConstantReference;
    }
 else     if (myCurrentClass == myTypesProvider.getRaw(declaredClassBinding)) {
      role=LocalStaticFieldReference.VARIABLE_DECLARATION;
      LocalStaticFieldReference lsfr=LocalStaticFieldReference.newInstance(myCurrentModel);
      sourceNode=lsfr.getNode();
      result=lsfr;
    }
 else {
      StaticFieldReference sfr=StaticFieldReference.newInstance(myCurrentModel);
      sourceNode=sfr.getNode();
      role=StaticFieldReference.VARIABLE_DECLARATION;
      sfr.getNode().addReference(SReference.create(StaticFieldReference.CLASSIFIER,sourceNode,classifierPointer));
      result=sfr;
    }
  }
 else {
    if (instanceExpression == null) {
      role=LocalInstanceFieldReference.VARIABLE_DECLARATION;
      LocalInstanceFieldReference lifr=LocalInstanceFieldReference.newInstance(myCurrentModel);
      sourceNode=lifr.getNode();
      result=lifr;
    }
 else {
      role=FieldReferenceOperation.FIELD_DECLARATION;
      jetbrains.mps.baseLanguage.structure.Expression instance;
      instance=instanceExpression;
      if (declaredClassBinding == null) {
        return createArrayLengthExpression(instance,fieldBinding);
      }
      FieldReferenceOperation fieldRef=FieldReferenceOperation.newInstance(myCurrentModel);
      DotExpression dotExpression=DotExpression.newInstance(myCurrentModel);
      dotExpression.setOperation(fieldRef);
      dotExpression.setOperand(instance);
      sourceNode=fieldRef.getNode();
      result=dotExpression;
    }
  }
  SReference fieldReference=myTypesProvider.createFieldReference(fieldBinding,role,sourceNode);
  sourceNode.addReference(fieldReference);
  return result;
}
