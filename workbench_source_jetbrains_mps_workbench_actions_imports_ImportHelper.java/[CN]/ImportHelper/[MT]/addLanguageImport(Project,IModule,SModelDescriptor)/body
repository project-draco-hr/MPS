{
  FakePsiElement fakePsiContext=new FakePsiElement(){
    public PsiElement getParent(){
      return null;
    }
  }
;
  BaseLanguageModel goToLanguageModel=new BaseLanguageModel(project){
    public NavigationItem doGetNavigationItem(    ModuleReference ref){
      return new AddLanguageItem(ref,contextModule,model);
    }
    public ModuleReference[] find(    IScope scope){
      ArrayList<ModuleReference> res=new ArrayList<ModuleReference>();
      for (      Language l : scope.getVisibleLanguages()) {
        res.add(l.getModuleReference());
      }
      return res.toArray(new ModuleReference[res.size()]);
    }
    @Nullable public String getPromptText(){
      return "Import language:";
    }
  }
;
  ChooseByNamePopup popup=ChooseByNamePopup.createPopup(project,goToLanguageModel,new MPSItemProvider(new DefaultMatcher(goToLanguageModel,fakePsiContext)),fakePsiContext);
  popup.invoke(new ChooseByNamePopupComponent.Callback(){
    public void onClose(){
    }
    public void elementChosen(    Object element){
      ((NavigationItem)element).navigate(true);
    }
  }
,ModalityState.current(),true);
}
