{
  FakePsiElement fakePsiContext=new FakePsiElement(){
    public PsiElement getParent(){
      return null;
    }
  }
;
  BaseMPSChooseModel goToNodeModel;
  if (!myUseCache) {
    goToNodeModel=new BaseNodeModel(mpsProject){
      public NavigationItem doGetNavigationItem(      SNode node){
        return new BaseNodeItem(node){
          public void navigate(          boolean requestFocus){
            new AddModelItem(model,getNode().getModel().getModelDescriptor(),contextModule){
              public MPSProject getMPSProject(){
                return mpsProject;
              }
            }
.navigate(requestFocus);
          }
        }
;
      }
      public SNode[] find(      IScope scope){
        List<SModelDescriptor> modelDescriptors=CollectionUtil.filter(scope.getModelDescriptors(),new Condition<SModelDescriptor>(){
          public boolean met(          SModelDescriptor modelDescriptor){
            boolean rightStereotype=SModelStereotype.isUserModel(modelDescriptor);
            boolean hasModule=modelDescriptor.getModule() != null;
            return rightStereotype && hasModule;
          }
        }
);
        final List<SNode> nodes=new ArrayList<SNode>();
        for (        SModelDescriptor modelDescriptor : modelDescriptors) {
          SModel model=modelDescriptor.getSModel();
          if (model == null)           continue;
          for (          SNode node : model.getRoots()) {
            nodes.add(node);
          }
        }
        return nodes.toArray(new SNode[0]);
      }
      @Nullable public String getPromptText(){
        return "Import model that includes root:";
      }
    }
;
  }
 else {
    goToNodeModel=new MPSChooseSNodeDescriptor(mpsProject,new RootNodeNameIndex()){
      public NavigationItem doGetNavigationItem(      final SNodeDescriptor object){
        return new RootNodeElement(object){
          public void navigate(          boolean requestFocus){
            SModelDescriptor descriptor=GlobalScope.getInstance().getModelDescriptor(object.getModelReference());
            SModel modelDescriptor=descriptor.getSModel();
            List<SNode> roots=myIndex.getNodesToIterate(modelDescriptor);
            SNode node=object.getNode(modelDescriptor);
            new AddModelItem(model,node.getModel().getModelDescriptor(),contextModule){
              public MPSProject getMPSProject(){
                return mpsProject;
              }
            }
.navigate(requestFocus);
          }
        }
;
      }
      @Nullable public String getPromptText(){
        return "Import model that includes root:";
      }
    }
;
  }
  ChooseByNamePopup popup=ChooseByNamePopup.createPopup(project,goToNodeModel,fakePsiContext);
  popup.setInitialText(initialText);
  popup.invoke(new ChooseByNamePopupComponent.Callback(){
    public void onClose(){
    }
    public void elementChosen(    final Object element){
      ModelAccess.instance().runWriteAction(new Runnable(){
        public void run(){
          ((NavigationItem)element).navigate(true);
        }
      }
);
    }
  }
,ModalityState.current(),true);
}
