{
  String applicableConcept=rule.getApplicableConcept();
  if (applicableConcept == null) {
    myEnvironment.getGenerator().showErrorMessage(null,null,rule.getRuleNode().resolve(MPSModuleRepository.getInstance()),"rule has no applicable concept defined");
    return false;
  }
  try {
    if (inputRootNode.getConcept().isSubConceptOf(SConceptRepository.getInstance().getConcept(applicableConcept))) {
      return myEnvironment.getQueryExecutor().isApplicable(rule,myEnvironment,new DefaultTemplateContext(inputRootNode));
    }
  }
 catch (  GenerationFailureException ex) {
    throw ex;
  }
catch (  GenerationException e) {
    myEnvironment.getGenerator().showErrorMessage(null,rule.getRuleNode().resolve(MPSModuleRepository.getInstance()),"internal error: " + e.toString());
  }
  return false;
}
