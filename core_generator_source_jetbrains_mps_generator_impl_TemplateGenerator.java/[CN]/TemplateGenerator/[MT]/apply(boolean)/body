{
  checkMonitorCanceled();
  myAreMappingsReady=false;
  ttrace.push("reductions",false);
  applyReductions(isPrimary);
  ttrace.pop();
  if (myDeltaBuilder != null) {
    myDeltaBuilder.dump();
    myDeltaBuilder=null;
  }
  myAreMappingsReady=true;
  myChanged|=myDependenciesBuilder.isStepRequired();
  if (!isPrimary && !myChanged && myDelayedChanges.isEmpty()&& !myRuleManager.hasWeavings()) {
    return false;
  }
  for (  SNode outputRoot : myOutputRoots) {
    myOutputModel.addRootNode(outputRoot);
  }
  ttrace.push("reloading roots from cache",false);
  myDependenciesBuilder.reloadRequired(getMappings());
  ttrace.pop();
  ttrace.push("weavings",false);
  applyWeaving_MappingRules();
  ttrace.pop();
  if (!isPrimary && !myChanged && myDelayedChanges.isEmpty()) {
    return false;
  }
  ttrace.push("delayed mappings",false);
  myDelayedChanges.doAllChanges();
  ttrace.pop();
  if (myChanged || isPrimary) {
    ttrace.push("restoring references",false);
    revalidateAllReferences();
    ttrace.pop();
    checkMonitorCanceled();
    getBlockedReductionsData().advanceStep();
  }
  return myChanged;
}
