{
  String applicableConcept=rule.getApplicableConcept();
  if (applicableConcept == null) {
    showErrorMessage(null,null,rule.getRuleNode().getNode(),"rule has no applicable concept defined");
    return false;
  }
  try {
    if (inputRootNode.getConcept().isSubConceptOf(SConceptRepository.getInstance().getConcept(applicableConcept))) {
      if (environment.getReductionContext().getQueryExecutor().isApplicable(rule,environment,new DefaultTemplateContext(inputRootNode))) {
        myGenerationTracer.pushInputNode(GenerationTracerUtil.getSNodePointer(inputRootNode));
        myGenerationTracer.pushRule(rule.getRuleNode());
        myGenerationTracer.closeInputNode(GenerationTracerUtil.getSNodePointer(inputRootNode));
        return true;
      }
    }
  }
 catch (  GenerationException e) {
    if (e instanceof GenerationFailureException)     throw (GenerationFailureException)e;
    showErrorMessage(null,rule.getRuleNode().getNode(),"internal error: " + e.toString());
  }
  return false;
}
