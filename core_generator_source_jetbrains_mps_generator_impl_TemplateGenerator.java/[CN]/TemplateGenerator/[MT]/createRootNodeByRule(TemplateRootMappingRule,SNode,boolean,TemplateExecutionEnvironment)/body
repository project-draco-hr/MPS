{
  try {
    Collection<SNode> outputNodes=environment.getQueryExecutor().applyRule(rule,environment,new DefaultTemplateContext(inputNode));
    if (outputNodes == null) {
      return;
    }
    for (    SNode outputNode : outputNodes) {
      registerRoot(outputNode,inputNode,rule.getRuleNode(),false);
      setChanged();
      jetbrains.mps.util.SNodeOperations.copyUserObjects(inputNode,outputNode);
    }
  }
 catch (  DismissTopMappingRuleException e) {
    if (copyRootOnFailure && inputNode.getModel() != null && inputNode.getParent() == null) {
      final FullCopyFacility copyFacility=new FullCopyFacility(this,environment);
      copyFacility.copyRootInputNode(inputNode);
      if (copyFacility.hasChanges()) {
        setChanged();
      }
    }
  }
catch (  TemplateProcessingFailureException ex) {
    getLogger().error(rule.getRuleNode(),"couldn't create root node",ex.asProblemDescription());
  }
catch (  GenerationException e) {
    if (e instanceof GenerationCanceledException)     throw (GenerationCanceledException)e;
    if (e instanceof GenerationFailureException)     throw (GenerationFailureException)e;
    getLogger().error(rule.getRuleNode(),"internal error: " + e.toString(),GeneratorUtil.describe(inputNode,"input node"));
  }
}
