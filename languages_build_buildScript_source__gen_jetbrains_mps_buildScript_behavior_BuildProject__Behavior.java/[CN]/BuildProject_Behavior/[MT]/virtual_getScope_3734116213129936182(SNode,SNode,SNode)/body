{
  if (kind == SConceptOperations.findConceptDeclaration("jetbrains.mps.buildScript.structure.BuildMacro")) {
    Scope rootScope=new SimpleRoleScope(thisNode,SLinkOperations.findLinkDeclaration("jetbrains.mps.buildScript.structure.BuildProject","macros")){
      public String getName(      SNode child){
        return SPropertyOperations.getString(SNodeOperations.cast(child,"jetbrains.mps.buildScript.structure.BuildMacro"),"name");
      }
    }
;
    if (child != null && "macros".equals(SNodeOperations.getContainingLinkRole(child))) {
      rootScope=new DelegatingScope(rootScope){
        public List<SNode> getAvailableElements(        @Nullable String prefix){
          return ListSequence.fromList(wrapped.getAvailableElements(prefix)).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return !(ListSequence.fromList(SNodeOperations.getNextSiblings(child,false)).contains(it));
            }
          }
).toListSequence();
        }
      }
;
    }
    List<Scope> scopes=ListSequence.fromList(new ArrayList<Scope>());
    ListSequence.fromList(scopes).addElement(rootScope);
    ListSequence.fromList(scopes).addSequence(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"dependencies",true)).toListSequence().where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SNodeOperations.isInstanceOf(it,"jetbrains.mps.lang.core.structure.ScopeProvider");
      }
    }
).select(new ISelector<SNode,Scope>(){
      public Scope select(      SNode it){
        return ScopeProvider_Behavior.call_getScope_3734116213129936182(SNodeOperations.cast(it,"jetbrains.mps.lang.core.structure.ScopeProvider"),kind,child);
      }
    }
));
    return new CompositeScope(ListSequence.fromList(scopes).toGenericArray(Scope.class));
  }
  return null;
}
