{
  String version=GenerationRootDependencies.getValue(root,ATTR_VERSION);
  if (version == null || !version.equals(Integer.toString(DEPENDENCIES_VERSION))) {
    return null;
  }
  Map<String,String> externalHashes=new HashMap<String,String>();
  for (  Element e : ((List<Element>)root.getChildren(NODE_MODEL))) {
    String modelReference=GenerationRootDependencies.getValue(e,ATTR_MODEL_ID);
    String rootHash=GenerationRootDependencies.getValue(e,ATTR_HASH);
    if (modelReference != null) {
      externalHashes.put(modelReference,rootHash);
    }
  }
  List<GenerationRootDependencies> data=new ArrayList<GenerationRootDependencies>();
  for (  Element e : ((List<Element>)root.getChildren(NODE_COMMON))) {
    data.add(GenerationRootDependencies.fromXml(e,true));
  }
  for (  Element e : ((List<Element>)root.getChildren(NODE_ROOT))) {
    data.add(GenerationRootDependencies.fromXml(e,false));
  }
  String modelHash=GenerationRootDependencies.getValue(root,ATTR_MODEL_HASH);
  return new GenerationDependencies(data,modelHash,externalHashes,Collections.<GenerationRootDependencies>emptyList(),0,0);
}
