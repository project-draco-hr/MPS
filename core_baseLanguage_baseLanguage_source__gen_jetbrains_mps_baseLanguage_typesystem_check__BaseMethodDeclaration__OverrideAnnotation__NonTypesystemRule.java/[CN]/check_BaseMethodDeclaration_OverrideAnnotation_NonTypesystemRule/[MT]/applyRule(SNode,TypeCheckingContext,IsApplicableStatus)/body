{
  List<SNode> annotationInstances=SLinkOperations.getTargets(baseMethodDeclaration,"annotation",true);
  List<SNode> overrideAnnotation=new ArrayList<SNode>();
  for (  SNode annotationInstance : annotationInstances) {
    if (SLinkOperations.getTarget(annotationInstance,"annotation",false) == SNodeOperations.getNode("f:java_stub#java.lang(java.lang@java_stub)","~Override")) {
      ListSequence.fromList(overrideAnnotation).addElement(annotationInstance);
    }
  }
  if (ListSequence.fromList(overrideAnnotation).isNotEmpty() && (BaseMethodDeclaration_Behavior.call_getNearestOverriddenMethod_5358895268254685434(baseMethodDeclaration) == null)) {
    for (    SNode nodeToReport : overrideAnnotation) {
{
        BaseQuickFixProvider intentionProvider=null;
        IErrorTarget errorTarget=new NodeErrorTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(nodeToReport,"Method does not override method from its superclass","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","5418393554804023989",intentionProvider,errorTarget);
      }
    }
  }
}
