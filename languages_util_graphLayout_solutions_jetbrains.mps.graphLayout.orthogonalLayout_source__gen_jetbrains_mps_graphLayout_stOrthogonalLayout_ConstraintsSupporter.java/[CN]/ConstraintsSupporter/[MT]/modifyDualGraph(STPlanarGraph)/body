{
  myFakeDualEdges=MapSequence.<Node,Edge>fromMap(new HashMap<Node,Edge>());
  DualGraph dualGraph=stPlanarGraph.getModifiedDualGraph();
  Face outerFace=stPlanarGraph.getEmbeddedGraph().getOuterFace();
  Node dualSource=MapSequence.<Face,Node>fromMap(dualGraph.getNodesMap()).get(outerFace);
  Node dualTarget=dualGraph.getNode(dualGraph.getNumNodes() - 1);
  for (  Node node : ListSequence.<Node>fromList(stPlanarGraph.getGraph().getNodes())) {
    Face leftFace=stPlanarGraph.getLeftFace(node);
    Node dualLeft;
    if (leftFace == outerFace) {
      dualLeft=dualSource;
    }
 else {
      dualLeft=MapSequence.<Face,Node>fromMap(dualGraph.getNodesMap()).get(leftFace);
    }
    Face rightFace=stPlanarGraph.getRightFace(node);
    Node dualRight;
    if (rightFace == outerFace) {
      dualRight=dualTarget;
    }
 else {
      dualRight=MapSequence.<Face,Node>fromMap(dualGraph.getNodesMap()).get(rightFace);
    }
    MapSequence.<Node,Edge>fromMap(myFakeDualEdges).put(node,dualGraph.addEdge(dualLeft,dualRight,MapSequence.<Node,Edge>fromMap(myFakeEdges).get(node)));
  }
  return dualGraph;
}
