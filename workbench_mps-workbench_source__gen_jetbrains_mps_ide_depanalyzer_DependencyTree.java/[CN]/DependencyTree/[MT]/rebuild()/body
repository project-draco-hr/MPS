{
  SetSequence.fromSet(myCycles).clear();
  if (myModules == null || ListSequence.fromList(myModules).isEmpty()) {
    return new TextMPSTreeNode("No Content",null);
  }
  SetSequence.fromSet(myCycles).addSequence(ListSequence.fromList(myModules).translate(new ITranslator2<SModule,Tuples._2<DependencyUtil.Role,SModule>>(){
    public Iterable<Tuples._2<DependencyUtil.Role,SModule>> translate(    SModule m){
      return DependencyUtil.getLoops(DependencyUtil.Role.None,m,isShowRuntime());
    }
  }
).where(new IWhereFilter<Tuples._2<DependencyUtil.Role,SModule>>(){
    public boolean accept(    Tuples._2<DependencyUtil.Role,SModule> dep){
      return dep._0().isDependency();
    }
  }
).select(new ISelector<Tuples._2<DependencyUtil.Role,SModule>,SModule>(){
    public SModule select(    Tuples._2<DependencyUtil.Role,SModule> dep){
      return dep._1();
    }
  }
));
  ModuleDependencyNode root=new ModuleDependencyNode(myModules,null);
  expandRoot();
  return root;
}
