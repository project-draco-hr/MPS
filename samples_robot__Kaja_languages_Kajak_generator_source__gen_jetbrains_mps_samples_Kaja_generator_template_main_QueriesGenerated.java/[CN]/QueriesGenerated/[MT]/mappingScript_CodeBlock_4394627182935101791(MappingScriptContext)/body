{
  ListSequence.fromList(SModelOperations.roots(_context.getModel(),MetaAdapterFactory.getConcept(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x2d523c5e4cc45746L,"jetbrains.mps.samples.Kaja.structure.Script"))).visitAll(new IVisitor<SNode>(){
    public void visit(    final SNode script){
      final Iterable<SNode> requireCommands=ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(script,MetaAdapterFactory.getContainmentLink(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x2d523c5e4cc45746L,0x2d523c5e4cc4574cL,"body")),MetaAdapterFactory.getContainmentLink(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x2de971c785f06a3fL,0x2de971c785f06a40L,"commands"))).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x3cfcda239f1a1049L,"jetbrains.mps.samples.Kaja.structure.Require"));
        }
      }
);
      Sequence.fromIterable(requireCommands).visitAll(new IVisitor<SNode>(){
        public void visit(        final SNode requireCommand){
          Iterable<SNode> definitions=SLinkOperations.getChildren(SLinkOperations.getTarget(SNodeOperations.cast(requireCommand,MetaAdapterFactory.getConcept(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x3cfcda239f1a1049L,"jetbrains.mps.samples.Kaja.structure.Require")),MetaAdapterFactory.getReferenceLink(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x3cfcda239f1a1049L,0x3cfcda239f1a104aL,"library")),MetaAdapterFactory.getContainmentLink(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x3cfcda239f19d316L,0x3cfcda239f19d317L,"definitions"));
          final Map<SNode,SNode> newToOld=MapSequence.fromMap(new HashMap<SNode,SNode>());
          Sequence.fromIterable(definitions).visitAll(new IVisitor<SNode>(){
            public void visit(            final SNode definition){
              final SNode copy=SNodeOperations.copyNode(definition);
              MapSequence.fromMap(newToOld).put(copy,definition);
              SPropertyOperations.set(copy,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),SPropertyOperations.getString(definition,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")) + "_from_library_" + SPropertyOperations.getString(SLinkOperations.getTarget(SNodeOperations.cast(requireCommand,MetaAdapterFactory.getConcept(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x3cfcda239f1a1049L,"jetbrains.mps.samples.Kaja.structure.Require")),MetaAdapterFactory.getReferenceLink(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x3cfcda239f1a1049L,0x3cfcda239f1a104aL,"library")),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")));
              ListSequence.fromList(SLinkOperations.getChildren(script,MetaAdapterFactory.getContainmentLink(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x2d523c5e4cc45746L,0x2de971c785ed6f78L,"definitions"))).addElement(copy);
              ListSequence.fromList(SNodeOperations.getNodeDescendants(script,MetaAdapterFactory.getConcept(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x2de971c785ed6f92L,"jetbrains.mps.samples.Kaja.structure.RoutineCall"),false,new SAbstractConcept[]{})).where(new IWhereFilter<SNode>(){
                public boolean accept(                SNode it){
                  return SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x2de971c785ed6f92L,0x2de971c785ede3ccL,"definition")) == definition;
                }
              }
).visitAll(new IVisitor<SNode>(){
                public void visit(                SNode it){
                  SLinkOperations.setTarget(it,MetaAdapterFactory.getReferenceLink(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x2de971c785ed6f92L,0x2de971c785ede3ccL,"definition"),copy);
                }
              }
);
            }
          }
);
          SNodeOperations.deleteNode(requireCommand);
          MapSequence.fromMap(newToOld).visitAll(new IVisitor<IMapping<SNode,SNode>>(){
            public void visit(            final IMapping<SNode,SNode> entry){
              ListSequence.fromList(SNodeOperations.getNodeDescendants(script,MetaAdapterFactory.getConcept(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x2de971c785ed6f92L,"jetbrains.mps.samples.Kaja.structure.RoutineCall"),false,new SAbstractConcept[]{})).where(new IWhereFilter<SNode>(){
                public boolean accept(                SNode it){
                  return SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x2de971c785ed6f92L,0x2de971c785ede3ccL,"definition")) == entry.value();
                }
              }
).visitAll(new IVisitor<SNode>(){
                public void visit(                SNode it){
                  SLinkOperations.setTarget(it,MetaAdapterFactory.getReferenceLink(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x2de971c785ed6f92L,0x2de971c785ede3ccL,"definition"),entry.key());
                }
              }
);
            }
          }
);
        }
      }
);
    }
  }
);
}
