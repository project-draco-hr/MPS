{
  if (isTemplateModel) {
    return getUsedLanguageNamespacesInTemplateModel(model);
  }
  Set<String> namespaces=new HashSet<String>();
  for (  ModuleReference ref : model.engagedOnGenerationLanguages()) {
    namespaces.add(ref.getModuleFqName());
  }
  for (  SNode root : model.roots()) {
    for (    SNode child : root.getDescendantsIterable(null,true)) {
      String namespace1=child.getLanguageNamespace();
      namespaces.add(namespace1);
    }
  }
  SModelDescriptor modelDescriptor=model.getModelDescriptor();
  if (modelDescriptor != null && modelDescriptor.getModule() instanceof Language && LanguageAspect.BEHAVIOR.is(modelDescriptor)) {
    namespaces.add(BootstrapLanguages.BEHAVIOR.getModuleFqName());
  }
  return namespaces;
}
