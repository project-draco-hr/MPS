{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(3891333323013573211l,-7392620776726838882l),4560297596904469362l,4560297596904469363l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(3891333323013573211l,-7392620776726838882l),4560297596904469362l,4560297596904469363l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_6428vo_a0a0a0a0a1a0b0a1a3;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return new FilteringScope(Scope.getScope(_context.getContextNode(),_context.getContextRole(),_context.getPosition(),SConceptOperations.findConceptDeclaration("jetbrains.mps.build.mps.structure.BuildMps_AbstractModule"))){
            @Override public boolean isExcluded(            SNode node){
              return !(SNodeOperations.isInstanceOf(node,MetaAdapterFactory.getConcept(new UUID(934837630734519964l,-6831122735637083229l),3189788309731840247l,"jetbrains.mps.build.mps.structure.BuildMps_Solution"))) || !(BuildMps_Solution_Behavior.call_hasTestsSources_7354447573575923452(SNodeOperations.cast(node,MetaAdapterFactory.getConcept(new UUID(934837630734519964l,-6831122735637083229l),3189788309731840247l,"jetbrains.mps.build.mps.structure.BuildMps_Solution"))));
            }
          }
;
        }
      }
;
    }
  }
);
  return references;
}
