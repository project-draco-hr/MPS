{
  boolean can=false;
  SNode expressionType=TypeChecker.getInstance().getTypeOf(expression);
  can=TypeChecker.getInstance().getSubtypingManager().isSubtype(expressionType,new _Quotations.QuotationClass_1().createNode());
  can=can || TypeChecker.getInstance().getSubtypingManager().isSubtype(expressionType,new _Quotations.QuotationClass_2().createNode());
  can=can || TypeChecker.getInstance().getSubtypingManager().isSubtype(expressionType,new _Quotations.QuotationClass_3().createNode());
  can=can || TypeChecker.getInstance().getSubtypingManager().isSubtype(expressionType,new _Quotations.QuotationClass_4().createNode());
  return can;
}
