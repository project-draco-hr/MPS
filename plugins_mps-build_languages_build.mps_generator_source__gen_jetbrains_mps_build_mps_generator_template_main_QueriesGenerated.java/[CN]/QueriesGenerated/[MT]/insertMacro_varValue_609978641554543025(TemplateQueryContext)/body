{
  SNode project=SNodeOperations.getNodeAncestor(_context.getNode(),MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,"jetbrains.mps.build.structure.BuildProject"),false,false);
  if (project == null) {
    _context.showErrorMessage(_context.getNode(),"no context project defined");
    return null;
  }
  SNode parent=SNodeOperations.getParent(_context.getNode());
  while (SNodeOperations.isInstanceOf(parent,MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x668c6cfbafac4c78L,"jetbrains.mps.build.structure.BuildLayout_Folder"))) {
    parent=SNodeOperations.getParent(parent);
  }
  if (!(SNodeOperations.isInstanceOf(parent,MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x668c6cfbafac7f9aL,"jetbrains.mps.build.structure.BuildLayout_Jar")))) {
    _context.showErrorMessage(_context.getNode(),"`module descriptor of mps module' should be in a jar");
    return null;
  }
  LocalArtifacts output=new LocalArtifacts(project,_context);
  output.collectOutputArtifacts();
  return MultiTuple.<LocalArtifacts,SNode,SNode>from(output,SNodeOperations.cast(parent,MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x668c6cfbafac7f9aL,"jetbrains.mps.build.structure.BuildLayout_Jar")),_context.getNode());
}
