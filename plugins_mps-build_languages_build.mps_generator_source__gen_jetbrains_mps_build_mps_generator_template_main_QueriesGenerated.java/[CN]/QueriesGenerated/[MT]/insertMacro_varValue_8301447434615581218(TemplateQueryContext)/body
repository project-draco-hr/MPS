{
  final DependenciesHelper helper=new DependenciesHelper(_context,_context.getNode());
  return Sequence.fromIterable(new RequiredPlugins(_context.getNode(),_context).getDependency()).select(new ISelector<SNode,String>(){
    public String select(    SNode it){
      SNode layoutNode=helper.artifacts().get(it);
      if ((layoutNode == null)) {
        return null;
      }
      String val=BehaviorReflection.invokeVirtual(String.class,layoutNode,"virtual_location_7117056644539862594",new Object[]{helper,it});
      if (val == null) {
        return null;
      }
      return val;
    }
  }
).where(new IWhereFilter<String>(){
    public boolean accept(    String it){
      return (it != null && it.length() > 0);
    }
  }
).sort(new ISelector<String,String>(){
    public String select(    String it){
      return it;
    }
  }
,true).toGenericArray(String.class);
}
