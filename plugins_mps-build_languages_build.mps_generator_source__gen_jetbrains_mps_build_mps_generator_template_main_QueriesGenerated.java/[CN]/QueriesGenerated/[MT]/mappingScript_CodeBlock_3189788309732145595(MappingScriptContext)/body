{
  for (  SNode project : SModelOperations.roots(_context.getModel(),MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),5617550519002745363l,"jetbrains.mps.build.structure.BuildProject"))) {
    if (!(_context.isDirty(project))) {
      continue;
    }
    SNode originalProject=SNodeOperations.as(_context.getOriginalCopiedInputNode(project),MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),5617550519002745363l,"jetbrains.mps.build.structure.BuildProject"));
    if ((originalProject == null)) {
      _context.showErrorMessage(project,"no original project is found for " + SPropertyOperations.getString(project,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")));
      continue;
    }
    PathConverter pathConverter=new PathConverter(originalProject);
    VisibleModules visibleModules=new VisibleModules(project);
    visibleModules.collect();
    ModuleChecker.Reporter reporter=new ModuleChecker.Reporter(_context);
    Iterable<SNode> parts=SLinkOperations.getChildren(project,MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l,-5075149991798053422l),5617550519002745363l,7389400916848080626l,"parts"));
    parts=Sequence.fromIterable(parts).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(new UUID(934837630734519964l,-6831122735637083229l),1500819558095907805l,"jetbrains.mps.build.mps.structure.BuildMps_Group"));
      }
    }
).translate(new ITranslator2<SNode,SNode>(){
      public Iterable<SNode> translate(      SNode it){
        return SLinkOperations.getChildren(SNodeOperations.cast(it,MetaAdapterFactory.getConcept(new UUID(934837630734519964l,-6831122735637083229l),1500819558095907805l,"jetbrains.mps.build.mps.structure.BuildMps_Group")),MetaAdapterFactory.getContainmentLink(new UUID(934837630734519964l,-6831122735637083229l),1500819558095907805l,1500819558095907806l,"modules"));
      }
    }
).union(Sequence.fromIterable(parts)).toListSequence();
    for (    SNode part : parts) {
      if (!(SNodeOperations.isInstanceOf(part,MetaAdapterFactory.getConcept(new UUID(934837630734519964l,-6831122735637083229l),322010710375871467l,"jetbrains.mps.build.mps.structure.BuildMps_AbstractModule")))) {
        continue;
      }
      SNode module=SNodeOperations.cast(part,MetaAdapterFactory.getConcept(new UUID(934837630734519964l,-6831122735637083229l),322010710375871467l,"jetbrains.mps.build.mps.structure.BuildMps_AbstractModule"));
      if ((SLinkOperations.getTarget(module,MetaAdapterFactory.getContainmentLink(new UUID(934837630734519964l,-6831122735637083229l),322010710375871467l,322010710375956261l,"path")) == null)) {
        continue;
      }
      ModuleLoader.createModuleChecker(module,visibleModules,pathConverter,_context,reporter).check(ModuleChecker.CheckType.LOAD_ALL);
    }
    List<SNode> generators=Sequence.fromIterable(parts).translate(new ITranslator2<SNode,SNode>(){
      public Iterable<SNode> translate(      SNode it){
        return SNodeOperations.getNodeDescendants(it,MetaAdapterFactory.getConcept(new UUID(934837630734519964l,-6831122735637083229l),5507251971038816436l,"jetbrains.mps.build.mps.structure.BuildMps_Generator"),false,new SConcept[]{});
      }
    }
).toListSequence();
    for (    SNode generator : generators) {
      if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(generator),MetaAdapterFactory.getConcept(new UUID(934837630734519964l,-6831122735637083229l),3189788309731840248l,"jetbrains.mps.build.mps.structure.BuildMps_Language"))) {
        SLinkOperations.setTarget(generator,MetaAdapterFactory.getReferenceLink(new UUID(934837630734519964l,-6831122735637083229l),5507251971038816436l,868963075225252684l,"sourceLanguage"),SNodeOperations.cast(SNodeOperations.getParent(generator),MetaAdapterFactory.getConcept(new UUID(934837630734519964l,-6831122735637083229l),3189788309731840248l,"jetbrains.mps.build.mps.structure.BuildMps_Language")));
        SNodeOperations.insertNextSiblingChild(SNodeOperations.getParent(generator),generator);
      }
    }
  }
}
