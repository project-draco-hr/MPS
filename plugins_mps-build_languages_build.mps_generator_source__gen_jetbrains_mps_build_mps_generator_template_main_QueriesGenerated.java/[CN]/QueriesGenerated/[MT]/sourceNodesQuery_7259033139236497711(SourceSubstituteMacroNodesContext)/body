{
  MPSModulesClosure.RequiredJavaModules requiredAndReexp=((MPSModulesClosure)_context.getVariable("var:mdeps")).getRequiredJava();
  List<SNode> result=new ArrayList<SNode>();
  for (  SNode mod : Sequence.fromIterable(requiredAndReexp.getModules()).sort(new ISelector<SNode,String>(){
    public String select(    SNode it){
      return SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"));
    }
  }
,true)) {
    SNode loopnode=SModelOperations.createNewNode(_context.getOutputModel(),null,SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),4964617264469642264l,"jetbrains.mps.build.structure.GeneratorInternal_BuildSource_JavaModule")));
    SLinkOperations.setTarget(loopnode,MetaAdapterFactory.getReferenceLink(new UUID(8755280088213897754l,-5075149991798053422l),4964617264469642264l,4964617264469642265l,"targetModule"),mod);
    SPropertyOperations.set(loopnode,MetaAdapterFactory.getProperty(new UUID(8755280088213897754l,-5075149991798053422l),4964617264469642264l,4964617264469642266l,"targetReexport"),"" + (requiredAndReexp.isReexported(mod)));
    ListSequence.fromList(result).addElement(loopnode);
  }
  return result;
}
