{
  Iterable<SNode> modules=ListSequence.fromList(((MPSModulesPartitioner)_context.getVariable("var:closure")).getChunks()).where(new IWhereFilter<MPSModulesPartitioner.Chunk>(){
    public boolean accept(    MPSModulesPartitioner.Chunk it){
      return !(it.isBootstrap());
    }
  }
).translate(new ITranslator2<MPSModulesPartitioner.Chunk,SNode>(){
    public Iterable<SNode> translate(    MPSModulesPartitioner.Chunk it){
      return it.getModules();
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.mps.structure.BuildMps_Module");
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(it,"jetbrains.mps.build.mps.structure.BuildMps_Module");
    }
  }
);
  Iterable<SNode> sources=Sequence.fromIterable(modules).translate(new ITranslator2<SNode,SNode>(){
    public Iterable<SNode> translate(    SNode it){
      return ListSequence.fromList(SLinkOperations.getChildren(it,MetaAdapterFactory.getContainmentLink(new UUID(934837630734519964l,-6831122735637083229l),5253498789149381388l,5253498789149547825l,"sources"))).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.mps.structure.BuildMps_ModuleJavaSource") && SPropertyOperations.getBoolean(SNodeOperations.cast(it,"jetbrains.mps.build.mps.structure.BuildMps_ModuleJavaSource"),MetaAdapterFactory.getProperty(new UUID(934837630734519964l,-6831122735637083229l),5253498789149588970l,5970181360963003994l,"isGenerated"));
        }
      }
);
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.build.mps.structure.BuildMps_ModuleJavaSource"),MetaAdapterFactory.getContainmentLink(new UUID(934837630734519964l,-6831122735637083229l),5253498789149588970l,5253498789149588972l,"folder"));
    }
  }
);
  Iterable<SNode> testSources=Sequence.fromIterable(modules).translate(new ITranslator2<SNode,SNode>(){
    public Iterable<SNode> translate(    SNode it){
      return ListSequence.fromList(SLinkOperations.getChildren(it,MetaAdapterFactory.getContainmentLink(new UUID(934837630734519964l,-6831122735637083229l),5253498789149381388l,5253498789149547825l,"sources"))).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.mps.structure.BuildMps_ModuleTestSource") && SPropertyOperations.getBoolean(SNodeOperations.cast(it,"jetbrains.mps.build.mps.structure.BuildMps_ModuleTestSource"),MetaAdapterFactory.getProperty(new UUID(934837630734519964l,-6831122735637083229l),2389279258782627672l,7354447573577513025l,"isGenerated"));
        }
      }
);
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.build.mps.structure.BuildMps_ModuleTestSource"),MetaAdapterFactory.getContainmentLink(new UUID(934837630734519964l,-6831122735637083229l),2389279258782627672l,2389279258782632528l,"folder"));
    }
  }
);
  return Sequence.fromIterable(sources).union(Sequence.fromIterable(testSources));
}
