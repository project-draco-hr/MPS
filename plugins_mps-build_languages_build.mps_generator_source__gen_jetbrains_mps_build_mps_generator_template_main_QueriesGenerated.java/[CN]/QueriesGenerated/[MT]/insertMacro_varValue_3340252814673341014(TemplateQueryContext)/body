{
  DependenciesHelper helper=new DependenciesHelper(_context,_context.getNode());
  String artifact="log4j";
  SNode jar=helper.artifacts().get(artifact);
  if ((jar != null)) {
    return BehaviorReflection.invokeVirtual(String.class,jar,"virtual_location_7117056644539862594",new Object[]{helper,artifact});
  }
  if (!(ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(),MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l,-5075149991798053422l),5617550519002745363l,5617550519002745378l,"macros"))).any(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),7389400916848136194l,"jetbrains.mps.build.structure.BuildFolderMacro")) && "mps_home".equals(SPropertyOperations.getString(SNodeOperations.cast(it,MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),7389400916848136194l,"jetbrains.mps.build.structure.BuildFolderMacro")),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")));
    }
  }
))) {
    _context.showErrorMessage(null,"${mps_home} macro is required to create `generate' task");
  }
  return null;
}
