{
  List<SNode> result=new ArrayList<SNode>();
  for (  SNode mod : Sequence.fromIterable(((MPSModulesClosure)_context.getVariable("var:mdeps")).getModules()).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return BehaviorReflection.invokeVirtual(Boolean.TYPE,it,"virtual_isCompilable_7454762407073969360",new Object[]{});
    }
  }
).sort(new ISelector<SNode,String>(){
    public String select(    SNode it){
      return SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"));
    }
  }
,true)) {
    SNode loopnode=SModelOperations.createNewNode(_context.getOutputModel(),null,SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(934837630734519964l,-6831122735637083229l),4964617264469340623l,"jetbrains.mps.build.mps.structure.GeneratorInternal_BuildMps_Module")));
    SLinkOperations.setTarget(loopnode,MetaAdapterFactory.getReferenceLink(new UUID(934837630734519964l,-6831122735637083229l),4964617264469340623l,4964617264469340624l,"targetModule"),mod);
    ListSequence.fromList(result).addElement(loopnode);
  }
  return result;
}
