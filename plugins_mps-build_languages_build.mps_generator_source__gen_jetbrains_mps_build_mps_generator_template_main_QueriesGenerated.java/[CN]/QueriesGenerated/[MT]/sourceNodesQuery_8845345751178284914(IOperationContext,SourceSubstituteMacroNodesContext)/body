{
  return SetSequence.fromSet(((MPSModulesPartitioner.Chunk)_context.getVariable("var:chunk")).getModules()).sort(new ISelector<SNode,String>(){
    public String select(    SNode it){
      return SPropertyOperations.getString(it,"name");
    }
  }
,true).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return !(SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.mps.structure.BuildMps_Generator"));
    }
  }
);
}
