{
  return ListSequence.fromList(((MPSModulesPartitioner)_context.getVariable("var:closure")).getChunks()).where(new IWhereFilter<MPSModulesPartitioner.Chunk>(){
    public boolean accept(    MPSModulesPartitioner.Chunk it){
      return !(it.isBootstrap());
    }
  }
).translate(new ITranslator2<MPSModulesPartitioner.Chunk,SNode>(){
    public Iterable<SNode> translate(    MPSModulesPartitioner.Chunk it){
      return it.getModules();
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.mps.structure.BuildMps_Module");
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(it,"jetbrains.mps.build.mps.structure.BuildMps_Module");
    }
  }
).translate(new ITranslator2<SNode,SNode>(){
    public Iterable<SNode> translate(    SNode it){
      return ListSequence.fromList(SLinkOperations.getTargets(it,"sources",true)).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.mps.structure.BuildMps_ModuleJavaSource") && SPropertyOperations.getBoolean(SNodeOperations.cast(it,"jetbrains.mps.build.mps.structure.BuildMps_ModuleJavaSource"),"isGenerated");
        }
      }
);
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.build.mps.structure.BuildMps_ModuleJavaSource"),"folder",true);
    }
  }
);
}
