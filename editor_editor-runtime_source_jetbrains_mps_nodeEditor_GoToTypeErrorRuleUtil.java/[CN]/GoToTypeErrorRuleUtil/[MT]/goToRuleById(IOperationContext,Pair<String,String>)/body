{
  ModelAccess.assertLegalWrite();
  String ruleModel=ruleModelAndId.o1;
  final String ruleID=ruleModelAndId.o2;
  SModelReference modelUID=SModelReference.fromString(ruleModel);
  if (modelUID == null) {
    LOG.error("can't find rule's model " + ruleModel);
    return;
  }
  modelUID=SModelReference.fromString(modelUID.getLongName());
  final SModelDescriptor modelDescriptor=SModelRepository.getInstance().getModelDescriptor(modelUID);
  if (modelDescriptor == null) {
    LOG.error("can't find rule's model " + ruleModel);
    return;
  }
  SNode rule=modelDescriptor.getSModel().getNodeById(ruleID);
  if (rule == null) {
    LOG.error("can't find rule with id " + ruleID + " in the model "+ modelDescriptor);
    return;
  }
  NavigationSupport.getInstance().openNode(context,rule,false,true);
}
