{
  super(project,session,module,context,isShowContext);
  ListSequence.fromList(myLanguages).addSequence(LinkedListSequence.fromLinkedList(LinkedListSequence.fromListAndArray(new LinkedList<Language>(),MPSModuleRepository.getInstance().getLanguage("jetbrains.mps.debugger.java.evaluation"),MPSModuleRepository.getInstance().getLanguage("jetbrains.mps.debugger.java.privateMembers"))));
  ModelAccess.instance().runWriteAction(new Runnable(){
    public void run(){
      ListSequence.fromList(myEvaluationContext.getClassPath()).union(ListSequence.fromList(((List<String>)CommonPaths.getJDKPath()))).union(ListSequence.fromList(getDebuggerStubPath())).visitAll(new IVisitor<String>(){
        public void visit(        String it){
          myAuxModule.addStubPath(it);
        }
      }
);
      myAuxModule.updateModelsSet();
    }
  }
);
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      ModelAccess.instance().runWriteActionInCommand(new Runnable(){
        public void run(){
          createNodesToShow(myAuxModel,nodesToImport);
        }
      }
);
    }
  }
);
}
