{
  BlImportUtil.tryToImport(SLinkOperations.getTarget(getNodeToShow(),"evaluatedStatements",true),nodesToImport,new _FunctionTypes._return_P1_E0<SNode,SReference>(){
    public SNode invoke(    final SReference variableReference){
      SNode matchingVar=ListSequence.fromList(SLinkOperations.getTargets(getNodeToShow(),"variables",true)).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode variable){
          return eq_qkk2f2_a0a0a0a0a0a0a0a0c0a0k(SNodePointer.deserialize(SPropertyOperations.getString(variable,"highLevelNodeId")),SLinkOperations.getTargetNode(variableReference).getReference());
        }
      }
);
      if (matchingVar == null) {
        matchingVar=ListSequence.fromList(SLinkOperations.getTargets(getNodeToShow(),"variables",true)).findFirst(new IWhereFilter<SNode>(){
          public boolean accept(          SNode variable){
            return eq_qkk2f2_a0a0a0a0a0a0a1a0a0c0a0k(SPropertyOperations.getString(variable,"name"),SPropertyOperations.getString(SNodeOperations.cast(SLinkOperations.getTargetNode(variableReference),"jetbrains.mps.lang.core.structure.INamedConcept"),"name"));
          }
        }
);
      }
      return matchingVar;
    }
  }
,new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode variable){
      SNode newVariableReference=SConceptOperations.createNewNode("jetbrains.mps.debugger.java.evaluation.structure.LowLevelVariableReference",null);
      return SLinkOperations.setTarget(newVariableReference,"baseVariableDeclaration",variable,false);
    }
  }
);
}
