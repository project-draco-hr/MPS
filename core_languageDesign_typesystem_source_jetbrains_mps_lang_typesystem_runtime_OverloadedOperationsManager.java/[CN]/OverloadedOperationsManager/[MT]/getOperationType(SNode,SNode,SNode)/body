{
  Set<OverloadedOperationsTypesProvider> operationsTypesProviderSet=myOperationsToTypeProviders.getRules(operation);
  if (operationsTypesProviderSet.isEmpty()) {
    return null;
  }
  SubtypingManager subtypingManager=myTypeChecker.getSubtypingManager();
  for (  OverloadedOperationsTypesProvider provider : operationsTypesProviderSet) {
    if (subtypingManager.isSubtype(rightOperandType,provider.getRightOperandType()) && subtypingManager.isSubtype(leftOperandType,provider.getLeftOperandType())) {
      SNode result=provider.getOperationType(operation,leftOperandType,rightOperandType);
      if (result != null) {
        return result;
      }
    }
  }
  return null;
}
