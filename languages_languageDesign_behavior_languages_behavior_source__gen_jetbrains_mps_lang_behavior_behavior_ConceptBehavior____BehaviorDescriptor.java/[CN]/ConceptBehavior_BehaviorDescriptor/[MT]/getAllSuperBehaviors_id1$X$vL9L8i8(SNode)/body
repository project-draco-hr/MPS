{
  Set<SNode> seen=SetSequence.fromSet(new HashSet<SNode>());
  List<SNode> conceptResult=new ArrayList<SNode>();
  Queue<SNode> q=QueueSequence.fromQueue(new LinkedList<SNode>());
  QueueSequence.fromQueue(q).addLastElement(SLinkOperations.getTarget(__thisNode__,MetaAdapterFactory.getReferenceLink(0xaf65afd8f0dd4942L,0x87d963a55f2a9db1L,0x11d43447b1aL,0x11d43447b1fL,"concept")));
  while (QueueSequence.fromQueue(q).isNotEmpty()) {
    SNode qn=QueueSequence.fromQueue(q).removeFirstElement();
    ListSequence.fromList(conceptResult).addElement(qn);
    if (SNodeOperations.isInstanceOf(qn,MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979ba0450L,"jetbrains.mps.lang.structure.structure.ConceptDeclaration"))) {
      if ((SLinkOperations.getTarget(SNodeOperations.cast(qn,MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979ba0450L,"jetbrains.mps.lang.structure.structure.ConceptDeclaration")),MetaAdapterFactory.getReferenceLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979ba0450L,0xf979be93cfL,"extends")) != null)) {
        SNode cl=SLinkOperations.getTarget(SNodeOperations.cast(qn,MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979ba0450L,"jetbrains.mps.lang.structure.structure.ConceptDeclaration")),MetaAdapterFactory.getReferenceLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979ba0450L,0xf979be93cfL,"extends"));
        if (seen.add(cl)) {
          QueueSequence.fromQueue(q).addLastElement(cl);
        }
      }
      for (      SNode i : SLinkOperations.getChildren(SNodeOperations.cast(qn,MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979ba0450L,"jetbrains.mps.lang.structure.structure.ConceptDeclaration")),MetaAdapterFactory.getContainmentLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979ba0450L,0x110358d693eL,"implements"))) {
        SNode cl=SLinkOperations.getTarget(i,MetaAdapterFactory.getReferenceLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x110356fc618L,0x110356fe029L,"intfc"));
        if (seen.add(cl)) {
          QueueSequence.fromQueue(q).addLastElement(cl);
        }
      }
    }
 else     if (SNodeOperations.isInstanceOf(qn,MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103556dcafL,"jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration"))) {
      for (      SNode i : SLinkOperations.getChildren(SNodeOperations.cast(qn,MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103556dcafL,"jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration")),MetaAdapterFactory.getContainmentLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103556dcafL,0x110356e9df4L,"extends"))) {
        SNode cl=SLinkOperations.getTarget(i,MetaAdapterFactory.getReferenceLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x110356fc618L,0x110356fe029L,"intfc"));
        if (seen.add(cl)) {
          QueueSequence.fromQueue(q).addLastElement(cl);
        }
      }
    }
  }
  List<SNode> result=new ArrayList<SNode>();
  for (  SNode concept : conceptResult) {
    SNode behavior=SNodeOperations.cast(AbstractConceptDeclaration_BehaviorDescriptor.findConceptAspect_id7g4OXB0ykew.invoke(concept,LanguageAspect.BEHAVIOR),MetaAdapterFactory.getConcept(0xaf65afd8f0dd4942L,0x87d963a55f2a9db1L,0x11d43447b1aL,"jetbrains.mps.lang.behavior.structure.ConceptBehavior"));
    if (behavior != null) {
      ListSequence.fromList(result).addElement(behavior);
    }
  }
  return result;
}
