{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.core.xml.structure.XmlCommentLine");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode val=SNodeFactoryOperations.createNewNode(model,SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x479c7a8c02f943b5L,0x9139d910cb22f298L,0x16838b3fce9bec5eL,"jetbrains.mps.core.xml.structure.XmlCommentLine")),null);
          SPropertyOperations.set(val,MetaAdapterFactory.getProperty(0x479c7a8c02f943b5L,0x9139d910cb22f298L,0x16838b3fce9bec5eL,0x16838b3fce9bec5fL,"text"),pattern);
          return val;
        }
        public String getMatchingText(        String pattern){
          if ((pattern == null || pattern.length() == 0)) {
            return "text";
          }
          if (XmlNameUtil.isXmlString(pattern)) {
            return pattern;
          }
          return (pattern.startsWith("?") ? ":" : "?");
        }
        public String getVisibleMatchingText(        String pattern){
          return getMatchingText(pattern);
        }
      }
);
    }
  }
  return result;
}
