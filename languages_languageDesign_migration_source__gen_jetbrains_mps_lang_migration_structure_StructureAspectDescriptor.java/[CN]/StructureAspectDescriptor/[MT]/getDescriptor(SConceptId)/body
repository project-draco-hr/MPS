{
switch (myConceptIndex.index(id)) {
case LanguageConceptSwitch.AbstractNodeReference:
    return myConceptAbstractNodeReference;
case LanguageConceptSwitch.ClassifierMemberData:
  return myConceptClassifierMemberData;
case LanguageConceptSwitch.ConceptMigrationReference:
return myConceptConceptMigrationReference;
case LanguageConceptSwitch.ConsequenceFunction:
return myConceptConsequenceFunction;
case LanguageConceptSwitch.DataDependency:
return myConceptDataDependency;
case LanguageConceptSwitch.DataDependencyReference:
return myConceptDataDependencyReference;
case LanguageConceptSwitch.DirectNodeReference:
return myConceptDirectNodeReference;
case LanguageConceptSwitch.ExecuteAfterDeclaration:
return myConceptExecuteAfterDeclaration;
case LanguageConceptSwitch.IMigrationUnit:
return myConceptIMigrationUnit;
case LanguageConceptSwitch.IncludeMigrationPart:
return myConceptIncludeMigrationPart;
case LanguageConceptSwitch.LinkPatternVariableReference:
return myConceptLinkPatternVariableReference;
case LanguageConceptSwitch.ListPatternVariableReference:
return myConceptListPatternVariableReference;
case LanguageConceptSwitch.MigrationScript:
return myConceptMigrationScript;
case LanguageConceptSwitch.MigrationScriptReference:
return myConceptMigrationScriptReference;
case LanguageConceptSwitch.MoveConcept:
return myConceptMoveConcept;
case LanguageConceptSwitch.MoveConceptMember:
return myConceptMoveConceptMember;
case LanguageConceptSwitch.MoveContainmentLink:
return myConceptMoveContainmentLink;
case LanguageConceptSwitch.MoveNodeMigrationPart:
return myConceptMoveNodeMigrationPart;
case LanguageConceptSwitch.MoveNodeSpecialization:
return myConceptMoveNodeSpecialization;
case LanguageConceptSwitch.MoveProperty:
return myConceptMoveProperty;
case LanguageConceptSwitch.MoveReferenceLink:
return myConceptMoveReferenceLink;
case LanguageConceptSwitch.NodePatternVariableReference:
return myConceptNodePatternVariableReference;
case LanguageConceptSwitch.OrderDependency:
return myConceptOrderDependency;
case LanguageConceptSwitch.ProducedDataDeclaration:
return myConceptProducedDataDeclaration;
case LanguageConceptSwitch.PropertyPatternVariableReference:
return myConceptPropertyPatternVariableReference;
case LanguageConceptSwitch.PureMigrationPart:
return myConceptPureMigrationPart;
case LanguageConceptSwitch.PureMigrationScript:
return myConceptPureMigrationScript;
case LanguageConceptSwitch.QuotationConsequence:
return myConceptQuotationConsequence;
case LanguageConceptSwitch.RefactoringLog:
return myConceptRefactoringLog;
case LanguageConceptSwitch.RefactoringOption:
return myConceptRefactoringOption;
case LanguageConceptSwitch.RefactoringOptions:
return myConceptRefactoringOptions;
case LanguageConceptSwitch.RefactoringOrderDependency:
return myConceptRefactoringOrderDependency;
case LanguageConceptSwitch.RefactoringPart:
return myConceptRefactoringPart;
case LanguageConceptSwitch.ReflectionNodeReference:
return myConceptReflectionNodeReference;
case LanguageConceptSwitch.RequiredDataDeclaration:
return myConceptRequiredDataDeclaration;
case LanguageConceptSwitch.TransformConsequence:
return myConceptTransformConsequence;
case LanguageConceptSwitch.TransformStatement:
return myConceptTransformStatement;
default :
return null;
}
}
