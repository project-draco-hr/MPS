{
  ThreadState newDiff=new ThreadState();
  ThreadState oldDiff=new ThreadState();
  for (  long id : this.allThreads.keys()) {
    if (!(baseLine.allThreads.containsKey(id))) {
      newDiff.allThreads.put(id,this.allThreads.get(id));
      if (this.runningThreads.containsKey(id)) {
        newDiff.runningThreads.put(id,this.runningThreads.get(id));
      }
    }
  }
  for (  long id : baseLine.allThreads.keys()) {
    if (!(this.allThreads.containsKey(id))) {
      oldDiff.allThreads.put(id,baseLine.allThreads.get(id));
      if (baseLine.runningThreads.containsKey(id)) {
        oldDiff.runningThreads.put(id,baseLine.runningThreads.get(id));
      }
    }
  }
  for (  long id : this.runningThreads.keys()) {
    if (!(baseLine.runningThreads.containsKey(id))) {
      newDiff.runningThreads.put(id,this.runningThreads.get(id));
      newDiff.allThreads.put(id,this.allThreads.get(id));
    }
  }
  for (  long id : baseLine.runningThreads.keys()) {
    if (!(this.runningThreads.containsKey(id))) {
      oldDiff.runningThreads.put(id,baseLine.runningThreads.get(id));
      oldDiff.allThreads.put(id,baseLine.allThreads.get(id));
    }
  }
  return new ThreadState[]{newDiff,oldDiff};
}
