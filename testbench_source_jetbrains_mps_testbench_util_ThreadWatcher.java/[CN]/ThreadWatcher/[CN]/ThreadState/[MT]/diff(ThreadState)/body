{
  ThreadState leftDiff=new ThreadState();
  ThreadState rightDiff=new ThreadState();
  for (  long id : this.allThreads.keys()) {
    if (!(baseLine.allThreads.containsKey(id))) {
      leftDiff.allThreads.put(id,this.allThreads.get(id));
      if (this.runningThreads.containsKey(id)) {
        leftDiff.runningThreads.put(id,this.runningThreads.get(id));
      }
    }
  }
  for (  long id : baseLine.allThreads.keys()) {
    if (!(this.allThreads.containsKey(id))) {
      rightDiff.allThreads.put(id,baseLine.allThreads.get(id));
      if (baseLine.runningThreads.containsKey(id)) {
        rightDiff.runningThreads.put(id,baseLine.runningThreads.get(id));
      }
    }
  }
  for (  long id : this.runningThreads.keys()) {
    if (!(baseLine.runningThreads.containsKey(id))) {
      leftDiff.runningThreads.put(id,this.runningThreads.get(id));
      leftDiff.allThreads.put(id,this.allThreads.get(id));
    }
  }
  for (  long id : baseLine.runningThreads.keys()) {
    if (!(this.runningThreads.containsKey(id))) {
      rightDiff.runningThreads.put(id,baseLine.runningThreads.get(id));
      rightDiff.allThreads.put(id,baseLine.allThreads.get(id));
    }
  }
  return new ThreadState[]{leftDiff,rightDiff};
}
