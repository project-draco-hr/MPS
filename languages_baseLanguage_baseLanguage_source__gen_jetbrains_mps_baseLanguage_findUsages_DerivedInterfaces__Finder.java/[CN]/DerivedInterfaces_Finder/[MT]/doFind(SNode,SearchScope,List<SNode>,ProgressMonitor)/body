{
  monitor.start(getDescription(),1);
  try {
    List<SNode> derived=new ArrayList<SNode>();
    ListSequence.fromList(derived).addElement(node);
    int passed=0;
    while (ListSequence.fromList(derived).count() != passed) {
      SNode passingNode=ListSequence.fromList(derived).getElement(passed);
      for (      SNode nodeUsage : FindUtils.executeFinder("jetbrains.mps.lang.structure.findUsages.NodeUsages_Finder",passingNode,scope,monitor.subTask(1))) {
        if (SNodeOperations.hasRole(nodeUsage,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1107796713796l,1107797138135l,"extendedInterface"))) {
          ListSequence.fromList(derived).addElement(SNodeOperations.cast(SNodeOperations.getParent(nodeUsage),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107796713796l,"jetbrains.mps.baseLanguage.structure.Interface")));
        }
      }
      if (passingNode != node) {
        ListSequence.fromList(_results).addElement(passingNode);
      }
      passed++;
    }
  }
  finally {
    monitor.done();
  }
}
