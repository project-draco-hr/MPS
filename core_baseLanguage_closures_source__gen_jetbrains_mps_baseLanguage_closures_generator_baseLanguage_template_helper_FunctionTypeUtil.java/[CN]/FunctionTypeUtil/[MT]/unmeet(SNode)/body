{
  if (SNodeOperations.isInstanceOf(possiblyMeet,"jetbrains.mps.lang.typesystem.structure.MeetType")) {
    SNode last=null;
    for (    SNode arg : SLinkOperations.getTargets(possiblyMeet,"argument",true)) {
      if (!(SNodeOperations.isInstanceOf(arg,"jetbrains.mps.baseLanguage.structure.VoidType"))) {
        for (        SNode dsc : SNodeOperations.getDescendants(arg,null,false)) {
          if (SNodeOperations.isInstanceOf(dsc,"jetbrains.mps.lang.typesystem.structure.MeetType")) {
            return unmeetRecursively(SNodeOperations.copyNode(arg));
          }
        }
        return arg;
      }
      last=arg;
    }
    return last;
  }
  if (SNodeOperations.isInstanceOf(possiblyMeet,"jetbrains.mps.baseLanguage.structure.ClassifierType")) {
    List<SNode> params=SLinkOperations.getTargets(possiblyMeet,"parameter",true);
    for (    SNode p : params) {
      SNode up=unmeet(p);
      if (up != p) {
        SNodeOperations.replaceWithAnother(p,up);
      }
    }
  }
  return possiblyMeet;
}
