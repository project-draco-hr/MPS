{
  SNode lCType=(SNodeOperations.isInstanceOf(ltype,"jetbrains.mps.baseLanguage.structure.ClassifierType") ? SNodeOperations.cast(ltype,"jetbrains.mps.baseLanguage.structure.ClassifierType") : null);
  SNode lFType=(SNodeOperations.isInstanceOf(ltype,"jetbrains.mps.baseLanguage.closures.structure.FunctionType") ? SNodeOperations.cast(ltype,"jetbrains.mps.baseLanguage.closures.structure.FunctionType") : null);
  if ((lFType == null) && (lCType == null)) {
    return;
  }
  if ((lCType != null) && !(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(lCType,"classifier",false),"jetbrains.mps.baseLanguage.structure.Interface"))) {
    return;
  }
  if (Constants.ONLY_CLOSURE_LITERAL_AS_FUNCTION_TYPE) {
    if (!(SNodeOperations.isInstanceOf(rexpr,"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral"))) {
      return;
    }
  }
  SNode rtype=TypeChecker.getInstance().getTypeOf(rexpr);
  SNode rFType=(SNodeOperations.isInstanceOf(rtype,"jetbrains.mps.baseLanguage.closures.structure.FunctionType") ? SNodeOperations.cast(rtype,"jetbrains.mps.baseLanguage.closures.structure.FunctionType") : null);
  SNode rCType=(SNodeOperations.isInstanceOf(rtype,"jetbrains.mps.baseLanguage.structure.ClassifierType") ? SNodeOperations.cast(rtype,"jetbrains.mps.baseLanguage.structure.ClassifierType") : null);
  if ((lCType != null) && (rFType != null)) {
    if (SNodeOperations.isInstanceOf(rexpr,"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral")) {
      ClosureLiteralUtil.addAdaptableClosureLiteralTarget(SNodeOperations.cast(rexpr,"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral"),lCType,genContext);
    }
 else {
      FunctionTypeUtil.addAdaptableClassifierTypeTarget(ClassifierTypeUtil.getDeclarationClassifierType(rFType),lCType,genContext);
      FunctionTypeUtil.putPrepData(rexpr,INamedConcept_Behavior.call_getFqName_1213877404258(SLinkOperations.getTarget(lCType,"classifier",false)),genContext);
    }
  }
 else   if ((lFType != null) && (rCType != null)) {
    FunctionTypeUtil.addAdaptableClassifierTypeTarget(rCType,ClassifierTypeUtil.getDeclarationClassifierType(lFType),genContext);
    FunctionTypeUtil.putPrepData(rexpr,INamedConcept_Behavior.call_getFqName_1213877404258(SLinkOperations.getTarget(ClassifierTypeUtil.getDeclarationClassifierType(lFType),"classifier",false)),genContext);
  }
 else   if ((lFType != null) && (rFType != null)) {
    if (SNodeOperations.isInstanceOf(rexpr,"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral")) {
      ClosureLiteralUtil.addAdaptableClosureLiteralTarget(SNodeOperations.cast(rexpr,"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral"),ClassifierTypeUtil.getClassifierType(lFType,SLinkOperations.getTargets(rFType,"parameterType",true)),genContext);
    }
 else     if (SLinkOperations.getCount(lFType,"throwsType") != SLinkOperations.getCount(rFType,"throwsType")) {
      FunctionTypeUtil.addAdaptableClassifierTypeTarget(ClassifierTypeUtil.getDeclarationClassifierType(rFType),ClassifierTypeUtil.getDeclarationClassifierType(lFType),genContext);
      FunctionTypeUtil.putPrepData(rexpr,INamedConcept_Behavior.call_getFqName_1213877404258(SLinkOperations.getTarget(ClassifierTypeUtil.getDeclarationClassifierType(lFType),"classifier",false)),genContext);
    }
  }
}
