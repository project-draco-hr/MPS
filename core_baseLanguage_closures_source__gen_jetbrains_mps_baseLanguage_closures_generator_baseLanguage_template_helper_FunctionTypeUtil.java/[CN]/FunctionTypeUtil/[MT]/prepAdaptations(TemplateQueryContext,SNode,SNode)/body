{
  SNode lCType=(SNodeOperations.isInstanceOf(ltype,"jetbrains.mps.baseLanguage.structure.ClassifierType") ? SNodeOperations.cast(ltype,"jetbrains.mps.baseLanguage.structure.ClassifierType") : null);
  SNode lFType=(SNodeOperations.isInstanceOf(ltype,"jetbrains.mps.baseLanguage.closures.structure.FunctionType") ? SNodeOperations.cast(ltype,"jetbrains.mps.baseLanguage.closures.structure.FunctionType") : null);
  if ((lFType == null) && (lCType == null)) {
    return;
  }
  if ((lCType != null) && !(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(lCType,"classifier",false),"jetbrains.mps.baseLanguage.structure.Interface"))) {
    return;
  }
  if (Constants.ONLY_CLOSURE_LITERAL_AS_FUNCTION_TYPE) {
    if (!(SNodeOperations.isInstanceOf(rexpr,"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral"))) {
      return;
    }
  }
  SNode rtype=TypeChecker.getInstance().getTypeOf(rexpr);
  SNode rFType=(SNodeOperations.isInstanceOf(rtype,"jetbrains.mps.baseLanguage.closures.structure.FunctionType") ? SNodeOperations.cast(rtype,"jetbrains.mps.baseLanguage.closures.structure.FunctionType") : null);
  SNode rCType=(SNodeOperations.isInstanceOf(rtype,"jetbrains.mps.baseLanguage.structure.ClassifierType") ? SNodeOperations.cast(rtype,"jetbrains.mps.baseLanguage.structure.ClassifierType") : null);
  if ((lCType != null) && (rFType != null)) {
    if (SNodeOperations.isInstanceOf(rexpr,"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral")) {
      ClosureLiteralUtil.addAdaptableClosureLiteralTarget(genContext,SNodeOperations.cast(rexpr,"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral"),lCType);
    }
 else {
      FunctionTypeUtil.addAdaptableClassifierTypeTarget(genContext,ClassifierTypeUtil.getDeclarationClassifierType(rFType),lCType);
      Values.PREP_DATA.set(genContext,rexpr,INamedConcept_Behavior.call_getFqName_1213877404258(SLinkOperations.getTarget(lCType,"classifier",false)));
    }
  }
 else   if ((lFType != null) && (rCType != null)) {
    FunctionTypeUtil.addAdaptableClassifierTypeTarget(genContext,rCType,ClassifierTypeUtil.getDeclarationClassifierType(lFType));
    Values.PREP_DATA.set(genContext,rexpr,INamedConcept_Behavior.call_getFqName_1213877404258(SLinkOperations.getTarget(ClassifierTypeUtil.getDeclarationClassifierType(lFType),"classifier",false)));
  }
 else   if ((lFType != null) && (rFType != null)) {
    if (SNodeOperations.isInstanceOf(rexpr,"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral")) {
      ClosureLiteralUtil.addAdaptableClosureLiteralTarget(genContext,SNodeOperations.cast(rexpr,"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral"),ClassifierTypeUtil.getClassifierType(lFType,SLinkOperations.getTargets(rFType,"parameterType",true)));
    }
 else     if (ListSequence.fromList(SLinkOperations.getTargets(lFType,"throwsType",true)).count() != ListSequence.fromList(SLinkOperations.getTargets(rFType,"throwsType",true)).count()) {
      FunctionTypeUtil.addAdaptableClassifierTypeTarget(genContext,ClassifierTypeUtil.getDeclarationClassifierType(rFType),ClassifierTypeUtil.getDeclarationClassifierType(lFType));
      Values.PREP_DATA.set(genContext,rexpr,INamedConcept_Behavior.call_getFqName_1213877404258(SLinkOperations.getTarget(ClassifierTypeUtil.getDeclarationClassifierType(lFType),"classifier",false)));
    }
  }
}
