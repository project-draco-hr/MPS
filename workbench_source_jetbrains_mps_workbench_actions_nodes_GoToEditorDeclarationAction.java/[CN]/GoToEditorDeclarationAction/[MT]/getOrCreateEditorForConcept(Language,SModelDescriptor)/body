{
  ConceptEditorDeclaration editorDeclaration=ModelAccess.instance().runReadAction(new Computable<ConceptEditorDeclaration>(){
    public ConceptEditorDeclaration compute(){
      return SModelUtil_new.findEditorDeclaration(languageEditor.getSModel(),myConcept);
    }
  }
);
  if (editorDeclaration != null)   return editorDeclaration;
  String message=ModelAccess.instance().runReadAction(new Computable<String>(){
    public String compute(){
      return "Concept \"" + NameUtil.nodeFQName(myNode) + "\" has no editor.\n"+ "Create new editor?";
    }
  }
);
  int option=JOptionPane.showConfirmDialog(null,message,"Editor not found",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
  if (option != JOptionPane.YES_OPTION) {
    return null;
  }
  return ModelAccess.instance().runWriteActionInCommand(new Computable<ConceptEditorDeclaration>(){
    public ConceptEditorDeclaration compute(){
      return createEditorDeclaration(myConcept,languageEditor,myScope);
    }
  }
);
}
