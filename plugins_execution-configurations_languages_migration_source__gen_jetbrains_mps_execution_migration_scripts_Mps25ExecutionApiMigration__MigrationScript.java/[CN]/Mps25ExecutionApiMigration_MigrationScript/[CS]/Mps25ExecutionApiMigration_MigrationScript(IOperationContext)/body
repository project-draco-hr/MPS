{
  super("Execution Api Migration");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ITestNodeWrapper";
    }
    public String getAdditionalInfo(){
      return "ITestNodeWrapper";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isClassifierType(node,jetbrains.mps.smodel.SModelReference.fromString("r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)"),"4087070200985064052");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,_quotation_createNode_yqqdks_b0a0a0());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ITestNodeWrapper.getNode()";
    }
    public String getAdditionalInfo(){
      return "ITestNodeWrapper.getNode()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,jetbrains.mps.smodel.SModelReference.fromString("r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)"),"4087070200985064321");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(_quotation_createNode_yqqdks_a1a0a0b(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ITestNodeWrapper.getTestMethods()";
    }
    public String getAdditionalInfo(){
      return "ITestNodeWrapper.getTestMethods()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,jetbrains.mps.smodel.SModelReference.fromString("r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)"),"2595782876361293165");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(_quotation_createNode_yqqdks_a1a0a0c(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "LanguageTestWrapper";
    }
    public String getAdditionalInfo(){
      return "LanguageTestWrapper";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isClassCreator(node,jetbrains.mps.smodel.SModelReference.fromString("r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)"),"4087070200985064317");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,_quotation_createNode_yqqdks_b0a0a3());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "BaseFieldWithButtonComponent";
    }
    public String getAdditionalInfo(){
      return "BaseFieldWithButtonComponent";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isClassifierType(node,jetbrains.mps.smodel.SModelReference.fromString("r:b9858adc-db8e-47c0-9e2e-ef86ca91a020(jetbrains.mps.baseLanguage.runConfigurations.runtime)"),"1447676209063504042");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,_quotation_createNode_yqqdks_b0a0a4());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "BaseFieldWithButtonComponent.setText";
    }
    public String getAdditionalInfo(){
      return "BaseFieldWithButtonComponent.setText";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,jetbrains.mps.smodel.SModelReference.fromString("r:b9858adc-db8e-47c0-9e2e-ef86ca91a020(jetbrains.mps.baseLanguage.runConfigurations.runtime)"),"1447676209063504076");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(_quotation_createNode_yqqdks_a1a0a0f(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "BaseFieldWithButtonComponent.getText";
    }
    public String getAdditionalInfo(){
      return "BaseFieldWithButtonComponent.getText";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,jetbrains.mps.smodel.SModelReference.fromString("r:b9858adc-db8e-47c0-9e2e-ef86ca91a020(jetbrains.mps.baseLanguage.runConfigurations.runtime)"),"1447676209063504092");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(_quotation_createNode_yqqdks_a1a0a0g(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "JavaConfigOptions";
    }
    public String getAdditionalInfo(){
      return "JavaConfigOptions";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.uiLanguage.structure.ComponentInstance";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceTo(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.uiLanguage.structure.ComponentInstance","componentDeclaration")),jetbrains.mps.smodel.SModelReference.fromString("r:b9858adc-db8e-47c0-9e2e-ef86ca91a020(jetbrains.mps.baseLanguage.runConfigurations.runtime)"),SNodeId.fromString("1447676209063345962"));
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode newnode=SConceptOperations.createNewNode("jetbrains.mps.uiLanguage.structure.ComponentInstance",null);
      SLinkOperations.setTarget(newnode,"componentDeclaration",SNodeOperations.getNode("r:68c7815b-65d3-4b04-9110-50fab74211e0(jetbrains.mps.execution.configurations.deprecated.runtime)","3718417974957373200"),false);
      StubRefUtil.replaceReference(node,SNodeOperations.getReference(newnode,SLinkOperations.findLinkDeclaration("jetbrains.mps.uiLanguage.structure.ComponentInstance","componentDeclaration")));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "JavaConfigOptions.apply";
    }
    public String getAdditionalInfo(){
      return "JavaConfigOptions.apply";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceTo(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodCallOperation","method")),jetbrains.mps.smodel.SModelReference.fromString("r:b9858adc-db8e-47c0-9e2e-ef86ca91a020(jetbrains.mps.baseLanguage.runConfigurations.runtime)"),SNodeId.fromString("1447676209063346136"));
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(_quotation_createNode_yqqdks_a1a0a0i(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "JavaConfigOptions.reset";
    }
    public String getAdditionalInfo(){
      return "JavaConfigOptions.reset";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceTo(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodCallOperation","method")),jetbrains.mps.smodel.SModelReference.fromString("r:b9858adc-db8e-47c0-9e2e-ef86ca91a020(jetbrains.mps.baseLanguage.runConfigurations.runtime)"),SNodeId.fromString("1447676209063346077"));
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(_quotation_createNode_yqqdks_a1a0a0j(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ParameterBrowser";
    }
    public String getAdditionalInfo(){
      return "ParameterBrowser";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.uiLanguage.structure.ComponentInstance";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceTo(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.uiLanguage.structure.ComponentInstance","componentDeclaration")),jetbrains.mps.smodel.SModelReference.fromString("r:b9858adc-db8e-47c0-9e2e-ef86ca91a020(jetbrains.mps.baseLanguage.runConfigurations.runtime)"),SNodeId.fromString("1447676209063499871"));
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode newnode=SConceptOperations.createNewNode("jetbrains.mps.uiLanguage.structure.ComponentInstance",null);
      SLinkOperations.setTarget(newnode,"componentDeclaration",SNodeOperations.getNode("r:49e49752-a85e-4d81-811e-1dc850a8e4cd(jetbrains.mps.execution.lib.ui)","1240470842553500411"),false);
      StubRefUtil.replaceReference(node,SNodeOperations.getReference(newnode,SLinkOperations.findLinkDeclaration("jetbrains.mps.uiLanguage.structure.ComponentInstance","componentDeclaration")));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ParameterBrowser.text";
    }
    public String getAdditionalInfo(){
      return "ParameterBrowser.text";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.uiLanguage.structure.AttributeValue";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceTo(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.uiLanguage.structure.AttributeValue","attribute")),jetbrains.mps.smodel.SModelReference.fromString("r:b9858adc-db8e-47c0-9e2e-ef86ca91a020(jetbrains.mps.baseLanguage.runConfigurations.runtime)"),SNodeId.fromString("1447676209063499873"));
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceReference(node,SNodeOperations.getReference(SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(_quotation_createNode_yqqdks_a0a0b0a0a11(),"content",true)).first(),"jetbrains.mps.uiLanguage.structure.AttributeValue"),SLinkOperations.findLinkDeclaration("jetbrains.mps.uiLanguage.structure.AttributeValue","attribute")));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ParameterBrowser.dialogCaption";
    }
    public String getAdditionalInfo(){
      return "ParameterBrowser.dialogCaption";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.uiLanguage.structure.AttributeValue";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceTo(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.uiLanguage.structure.AttributeValue","attribute")),jetbrains.mps.smodel.SModelReference.fromString("r:b9858adc-db8e-47c0-9e2e-ef86ca91a020(jetbrains.mps.baseLanguage.runConfigurations.runtime)"),SNodeId.fromString("1447676209063499875"));
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceReference(node,SNodeOperations.getReference(SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(_quotation_createNode_yqqdks_a0a0b0a0a21(),"content",true)).first(),"jetbrains.mps.uiLanguage.structure.AttributeValue"),SLinkOperations.findLinkDeclaration("jetbrains.mps.uiLanguage.structure.AttributeValue","attribute")));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ConfigRunParameters (node)";
    }
    public String getAdditionalInfo(){
      return "ConfigRunParameters (node)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isClassifierType(node,jetbrains.mps.smodel.SModelReference.fromString("r:f144b87b-8ea5-4a8a-bb79-78fd4663e93c(jetbrains.mps.baseLanguage.util.plugin.run)"),"1447676209063504042");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,_quotation_createNode_yqqdks_b0a0a31());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "new ConfigRunParameters (node)";
    }
    public String getAdditionalInfo(){
      return "new ConfigRunParameters (node)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isClassCreator(node,jetbrains.mps.smodel.SModelReference.fromString("r:f144b87b-8ea5-4a8a-bb79-78fd4663e93c(jetbrains.mps.baseLanguage.util.plugin.run)"),"8492459591399148867");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,_quotation_createNode_yqqdks_b0a0a41());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ConfigRunParameters (stub)";
    }
    public String getAdditionalInfo(){
      return "ConfigRunParameters (stub)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isClassifierType(node,jetbrains.mps.smodel.SModelReference.fromString("f:java_stub#37a3367b-1fb2-44d8-aa6b-18075e74e003#jetbrains.mps.baseLanguage.util.plugin.run(MPS.Classpath/jetbrains.mps.baseLanguage.util.plugin.run@java_stub)"),"~ConfigRunParameters");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,_quotation_createNode_yqqdks_b0a0a51());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "new ConfigRunParameters (stub)";
    }
    public String getAdditionalInfo(){
      return "new ConfigRunParameters (stub)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isClassCreator(node,jetbrains.mps.smodel.SModelReference.fromString("f:java_stub#37a3367b-1fb2-44d8-aa6b-18075e74e003#jetbrains.mps.baseLanguage.util.plugin.run(MPS.Classpath/jetbrains.mps.baseLanguage.util.plugin.run@java_stub)"),"~ConfigRunParameters.<init>()");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,_quotation_createNode_yqqdks_b0a0a61());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ConfigRunParameters.super (node)";
    }
    public String getAdditionalInfo(){
      return "ConfigRunParameters.super (node)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.SuperConstructorInvocation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceTo(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ConstructorInvocationStatement","constructorDeclaration")),jetbrains.mps.smodel.SModelReference.fromString("r:f144b87b-8ea5-4a8a-bb79-78fd4663e93c(jetbrains.mps.baseLanguage.util.plugin.run)"),SNodeId.fromString("8492459591399148867"));
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode superCall=_quotation_createNode_yqqdks_a0a0a71();
      SLinkOperations.setTarget(superCall,"baseMethodDeclaration",SLinkOperations.getTarget(_quotation_createNode_yqqdks_a0a0b0a71(),"baseMethodDeclaration",false),false);
      StubRefUtil.replaceRefs(node,superCall);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ConfigRunParameters.super (stub)";
    }
    public String getAdditionalInfo(){
      return "ConfigRunParameters.super (stub)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.SuperConstructorInvocation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceTo(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ConstructorInvocationStatement","constructorDeclaration")),jetbrains.mps.smodel.SModelReference.fromString("f:java_stub#37a3367b-1fb2-44d8-aa6b-18075e74e003#jetbrains.mps.baseLanguage.util.plugin.run(MPS.Classpath/jetbrains.mps.baseLanguage.util.plugin.run@java_stub)"),SNodeId.fromString("~ConfigRunParameters.<init>()"));
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode superCall=_quotation_createNode_yqqdks_a0a0a81();
      SLinkOperations.setTarget(superCall,"baseMethodDeclaration",SLinkOperations.getTarget(_quotation_createNode_yqqdks_a0a0b0a81(),"baseMethodDeclaration",false),false);
      StubRefUtil.replaceRefs(node,superCall);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ConfigRunParameters.setVMParameters (node)";
    }
    public String getAdditionalInfo(){
      return "ConfigRunParameters.setVMParameters (node)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,jetbrains.mps.smodel.SModelReference.fromString("r:f144b87b-8ea5-4a8a-bb79-78fd4663e93c(jetbrains.mps.baseLanguage.util.plugin.run)"),"8492459591399148719");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(_quotation_createNode_yqqdks_a1a0a0t(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ConfigRunParameters.setVMParameters (stub)";
    }
    public String getAdditionalInfo(){
      return "ConfigRunParameters.setVMParameters (stub)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,jetbrains.mps.smodel.SModelReference.fromString("f:java_stub#37a3367b-1fb2-44d8-aa6b-18075e74e003#jetbrains.mps.baseLanguage.util.plugin.run(MPS.Classpath/jetbrains.mps.baseLanguage.util.plugin.run@java_stub)"),"~ConfigRunParameters.setVMParameters(java.lang.String):void");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(_quotation_createNode_yqqdks_a1a0a0u(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ConfigRunParameters.getProgramParameters (node)";
    }
    public String getAdditionalInfo(){
      return "ConfigRunParameters.getProgramParameters (node)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,jetbrains.mps.smodel.SModelReference.fromString("r:f144b87b-8ea5-4a8a-bb79-78fd4663e93c(jetbrains.mps.baseLanguage.util.plugin.run)"),"8492459591399148807");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(_quotation_createNode_yqqdks_a1a0a0v(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ConfigRunParameters.getProgramParameters (stub)";
    }
    public String getAdditionalInfo(){
      return "ConfigRunParameters.getProgramParameters (stub)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,jetbrains.mps.smodel.SModelReference.fromString("f:java_stub#37a3367b-1fb2-44d8-aa6b-18075e74e003#jetbrains.mps.baseLanguage.util.plugin.run(MPS.Classpath/jetbrains.mps.baseLanguage.util.plugin.run@java_stub)"),"~ConfigRunParameters.getProgramParameters():java.lang.String");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(_quotation_createNode_yqqdks_a1a0a0w(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ConfigRunParameters.setProgramParameters (node)";
    }
    public String getAdditionalInfo(){
      return "ConfigRunParameters.setProgramParameters (node)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,jetbrains.mps.smodel.SModelReference.fromString("r:f144b87b-8ea5-4a8a-bb79-78fd4663e93c(jetbrains.mps.baseLanguage.util.plugin.run)"),"8492459591399148731");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(_quotation_createNode_yqqdks_a1a0a0x(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ConfigRunParameters.setProgramParameters (stub)";
    }
    public String getAdditionalInfo(){
      return "ConfigRunParameters.setProgramParameters (stub)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,jetbrains.mps.smodel.SModelReference.fromString("f:java_stub#37a3367b-1fb2-44d8-aa6b-18075e74e003#jetbrains.mps.baseLanguage.util.plugin.run(MPS.Classpath/jetbrains.mps.baseLanguage.util.plugin.run@java_stub)"),"~ConfigRunParameters.setProgramParameters(java.lang.String):void");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(_quotation_createNode_yqqdks_a1a0a0y(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ConfigRunParameters.getErrorReport (node)";
    }
    public String getAdditionalInfo(){
      return "ConfigRunParameters.getErrorReport (node)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,jetbrains.mps.smodel.SModelReference.fromString("r:f144b87b-8ea5-4a8a-bb79-78fd4663e93c(jetbrains.mps.baseLanguage.util.plugin.run)"),"8492459591399148683");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(_quotation_createNode_yqqdks_a1a0a0z(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ConfigRunParameters.getProgramParameters (stub)";
    }
    public String getAdditionalInfo(){
      return "ConfigRunParameters.getProgramParameters (stub)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,jetbrains.mps.smodel.SModelReference.fromString("f:java_stub#37a3367b-1fb2-44d8-aa6b-18075e74e003#jetbrains.mps.baseLanguage.util.plugin.run(MPS.Classpath/jetbrains.mps.baseLanguage.util.plugin.run@java_stub)"),"~ConfigRunParameters.getErrorReport():java.lang.String");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(_quotation_createNode_yqqdks_a1a0a0ab(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "BaseRunner (node)";
    }
    public String getAdditionalInfo(){
      return "BaseRunner (node)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isClassifierType(node,jetbrains.mps.smodel.SModelReference.fromString("r:f144b87b-8ea5-4a8a-bb79-78fd4663e93c(jetbrains.mps.baseLanguage.util.plugin.run)"),"8492459591399147272");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,_quotation_createNode_yqqdks_b0a0a72());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "BaseRunner (stub)";
    }
    public String getAdditionalInfo(){
      return "BaseRunner (stub)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isClassifierType(node,jetbrains.mps.smodel.SModelReference.fromString("f:java_stub#37a3367b-1fb2-44d8-aa6b-18075e74e003#jetbrains.mps.baseLanguage.util.plugin.run(MPS.Classpath/jetbrains.mps.baseLanguage.util.plugin.run@java_stub)"),"~BaseRunner");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,_quotation_createNode_yqqdks_b0a0a82());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "BaseRunner.getCommandString (node)";
    }
    public String getAdditionalInfo(){
      return "BaseRunner.getCommandString (node)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,jetbrains.mps.smodel.SModelReference.fromString("r:f144b87b-8ea5-4a8a-bb79-78fd4663e93c(jetbrains.mps.baseLanguage.util.plugin.run)"),"8492459591399147292");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(_quotation_createNode_yqqdks_a1a0a0db(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "BaseRunner.getCommandString (stub)";
    }
    public String getAdditionalInfo(){
      return "BaseRunner.getCommandString (stub)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,jetbrains.mps.smodel.SModelReference.fromString("f:java_stub#37a3367b-1fb2-44d8-aa6b-18075e74e003#jetbrains.mps.baseLanguage.util.plugin.run(MPS.Classpath/jetbrains.mps.baseLanguage.util.plugin.run@java_stub)"),"~BaseRunner.getCommandString(java.lang.ProcessBuilder):java.lang.String");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(_quotation_createNode_yqqdks_a1a0a0eb(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "BaseRunner.addJavaCommand (node)";
    }
    public String getAdditionalInfo(){
      return "BaseRunner.addJavaCommand (node)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,jetbrains.mps.smodel.SModelReference.fromString("r:f144b87b-8ea5-4a8a-bb79-78fd4663e93c(jetbrains.mps.baseLanguage.util.plugin.run)"),"8492459591399147350");
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode method=Sequence.fromIterable(Classifier_Behavior.call_methods_5292274854859311639(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_yqqdks_a0a0a0a0a13(),"classifier",false),"jetbrains.mps.baseLanguage.structure.ClassConcept"))).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return eq_802sp_a0a0a0a0a0a0a4a0a0a0a23a0(SPropertyOperations.getString(it,"name"),"addJavaCommand");
        }
      }
);
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(_quotation_createNode_yqqdks_a1a1a0fb(method),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "BaseRunner.addJavaCommand (stub)";
    }
    public String getAdditionalInfo(){
      return "BaseRunner.addJavaCommand (stub)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,jetbrains.mps.smodel.SModelReference.fromString("f:java_stub#37a3367b-1fb2-44d8-aa6b-18075e74e003#jetbrains.mps.baseLanguage.util.plugin.run(MPS.Classpath/jetbrains.mps.baseLanguage.util.plugin.run@java_stub)"),"~BaseRunner.addJavaCommand(java.lang.ProcessBuilder):java.lang.String");
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode method=Sequence.fromIterable(Classifier_Behavior.call_methods_5292274854859311639(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_yqqdks_a0a0a0a0a23(),"classifier",false),"jetbrains.mps.baseLanguage.structure.ClassConcept"))).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return eq_802sp_a0a0a0a0a0a0a4a0a0a0a33a0(SPropertyOperations.getString(it,"name"),"addJavaCommand");
        }
      }
);
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(_quotation_createNode_yqqdks_a1a1a0gb(method),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "BaseRunner.splitParams (node)";
    }
    public String getAdditionalInfo(){
      return "BaseRunner.splitParams (node)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,jetbrains.mps.smodel.SModelReference.fromString("r:f144b87b-8ea5-4a8a-bb79-78fd4663e93c(jetbrains.mps.baseLanguage.util.plugin.run)"),"8492459591399147322");
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode method=Sequence.fromIterable(Classifier_Behavior.call_methods_5292274854859311639(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_yqqdks_a0a0a0a0a33(),"classifier",false),"jetbrains.mps.baseLanguage.structure.ClassConcept"))).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return eq_802sp_a0a0a0a0a0a0a4a0a0a0a43a0(SPropertyOperations.getString(it,"name"),"splitParams");
        }
      }
);
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(_quotation_createNode_yqqdks_a1a1a0hb(method),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "BaseRunner.splitParams (stub)";
    }
    public String getAdditionalInfo(){
      return "BaseRunner.splitParams (stub)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,jetbrains.mps.smodel.SModelReference.fromString("f:java_stub#37a3367b-1fb2-44d8-aa6b-18075e74e003#jetbrains.mps.baseLanguage.util.plugin.run(MPS.Classpath/jetbrains.mps.baseLanguage.util.plugin.run@java_stub)"),"~BaseRunner.splitParams(java.lang.String):java.lang.String[]");
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode method=Sequence.fromIterable(Classifier_Behavior.call_methods_5292274854859311639(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_yqqdks_a0a0a0a0a43(),"classifier",false),"jetbrains.mps.baseLanguage.structure.ClassConcept"))).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return eq_802sp_a0a0a0a0a0a0a4a0a0a0a53a0(SPropertyOperations.getString(it,"name"),"splitParams");
        }
      }
);
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(_quotation_createNode_yqqdks_a1a1a0ib(method),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "BaseRunner.fs (node)";
    }
    public String getAdditionalInfo(){
      return "BaseRunner.fs (node)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.LocalMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      if (!(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node,"baseMethodDeclaration",false),"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration"))) {
        return false;
      }
      return StubRefUtil.isReferenceTo(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.LocalMethodCall","method")),jetbrains.mps.smodel.SModelReference.fromString("r:f144b87b-8ea5-4a8a-bb79-78fd4663e93c(jetbrains.mps.baseLanguage.util.plugin.run)"),SNodeId.fromString("8492459591399147278"));
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode method=Sequence.fromIterable(ClassConcept_Behavior.call_staticMethods_5292274854859435867(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_yqqdks_a0a0a0a0a53(),"classifier",false),"jetbrains.mps.baseLanguage.structure.ClassConcept"))).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return eq_802sp_a0a0a0a0a0a0a4a0a0a0a63a0(SPropertyOperations.getString(it,"name"),"fs");
        }
      }
);
      StubRefUtil.replaceRefs(node,_quotation_createNode_yqqdks_b0b0a53(method));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "BaseRunner.fs (stub)";
    }
    public String getAdditionalInfo(){
      return "BaseRunner.fs (stub)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.LocalMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      if (!(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node,"baseMethodDeclaration",false),"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration"))) {
        return false;
      }
      return StubRefUtil.isReferenceTo(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.LocalMethodCall","method")),jetbrains.mps.smodel.SModelReference.fromString("f:java_stub#37a3367b-1fb2-44d8-aa6b-18075e74e003#jetbrains.mps.baseLanguage.util.plugin.run(MPS.Classpath/jetbrains.mps.baseLanguage.util.plugin.run@java_stub)"),SNodeId.fromString("~BaseRunner.fs():java.lang.String"));
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode method=Sequence.fromIterable(ClassConcept_Behavior.call_staticMethods_5292274854859435867(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_yqqdks_a0a0a0a0a63(),"classifier",false),"jetbrains.mps.baseLanguage.structure.ClassConcept"))).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return eq_802sp_a0a0a0a0a0a0a4a0a0a0a73a0(SPropertyOperations.getString(it,"name"),"fs");
        }
      }
);
      StubRefUtil.replaceRefs(node,_quotation_createNode_yqqdks_b0b0a63(method));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "BaseRunner.super (node)";
    }
    public String getAdditionalInfo(){
      return "BaseRunner.super (node)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.SuperConstructorInvocation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceTo(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ConstructorInvocationStatement","constructorDeclaration")),jetbrains.mps.smodel.SModelReference.fromString("r:f144b87b-8ea5-4a8a-bb79-78fd4663e93c(jetbrains.mps.baseLanguage.util.plugin.run)"),SNodeId.fromString("3038691514508939542"));
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode superCall=_quotation_createNode_yqqdks_a0a0a73();
      SLinkOperations.setTarget(superCall,"baseMethodDeclaration",Sequence.fromIterable(ClassConcept_Behavior.call_constructors_5292274854859503373(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_yqqdks_a0a0a0a1a0lb(),"classifier",false),"jetbrains.mps.baseLanguage.structure.ClassConcept"))).first(),false);
      StubRefUtil.replaceRefs(node,superCall);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "BaseRunner.super (stub)";
    }
    public String getAdditionalInfo(){
      return "BaseRunner.super (stub)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.SuperConstructorInvocation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceTo(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ConstructorInvocationStatement","constructorDeclaration")),jetbrains.mps.smodel.SModelReference.fromString("f:java_stub#37a3367b-1fb2-44d8-aa6b-18075e74e003#jetbrains.mps.baseLanguage.util.plugin.run(MPS.Classpath/jetbrains.mps.baseLanguage.util.plugin.run@java_stub)"),SNodeId.fromString("~BaseRunner.<init>()"));
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode superCall=_quotation_createNode_yqqdks_a0a0a83();
      SLinkOperations.setTarget(superCall,"baseMethodDeclaration",Sequence.fromIterable(ClassConcept_Behavior.call_constructors_5292274854859503373(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_yqqdks_a0a0a0a1a0mb(),"classifier",false),"jetbrains.mps.baseLanguage.structure.ClassConcept"))).first(),false);
      StubRefUtil.replaceRefs(node,superCall);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "UnitTestViewComponent";
    }
    public String getAdditionalInfo(){
      return "UnitTestViewComponent";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isClassifierType(node,jetbrains.mps.smodel.SModelReference.fromString("r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)"),"1208270545572");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,_quotation_createNode_yqqdks_b0a0a93());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "UnitTestExecutionController";
    }
    public String getAdditionalInfo(){
      return "UnitTestExecutionController";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isClassifierType(node,jetbrains.mps.smodel.SModelReference.fromString("r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)"),"2281887280934031664");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,_quotation_createNode_yqqdks_b0a0a04());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "TestUtils";
    }
    public String getAdditionalInfo(){
      return "TestUtils";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isClassifierType(node,jetbrains.mps.smodel.SModelReference.fromString("r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)"),"4087070200985119220");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,_quotation_createNode_yqqdks_b0a0a14());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "JUnitRunTypes2";
    }
    public String getAdditionalInfo(){
      return "JUnitRunTypes2";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isClassifierType(node,jetbrains.mps.smodel.SModelReference.fromString("r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)"),"4834901852399102787");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,_quotation_createNode_yqqdks_b0a0a24());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ModelChooserComponent";
    }
    public String getAdditionalInfo(){
      return "ModelChooserComponent";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.uiLanguage.structure.ComponentInstance";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceTo(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.uiLanguage.structure.ComponentInstance","componentDeclaration")),jetbrains.mps.smodel.SModelReference.fromString("r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)"),SNodeId.fromString("3838358713852016255"));
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode newnode=SConceptOperations.createNewNode("jetbrains.mps.uiLanguage.structure.ComponentInstance",null);
      SLinkOperations.setTarget(newnode,"componentDeclaration",SNodeOperations.getNode("r:e12fc70b-3d1d-4dc2-9467-5147656e0455(jetbrains.mps.baseLanguage.unitTest.execution.settings)","6062668769034852876"),false);
      StubRefUtil.replaceReference(node,SNodeOperations.getReference(newnode,SLinkOperations.findLinkDeclaration("jetbrains.mps.uiLanguage.structure.ComponentInstance","componentDeclaration")));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ModuleChooserComponent";
    }
    public String getAdditionalInfo(){
      return "ModuleChooserComponent";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.uiLanguage.structure.ComponentInstance";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceTo(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.uiLanguage.structure.ComponentInstance","componentDeclaration")),jetbrains.mps.smodel.SModelReference.fromString("r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)"),SNodeId.fromString("145554711892090455"));
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode newnode=SConceptOperations.createNewNode("jetbrains.mps.uiLanguage.structure.ComponentInstance",null);
      SLinkOperations.setTarget(newnode,"componentDeclaration",SNodeOperations.getNode("r:e12fc70b-3d1d-4dc2-9467-5147656e0455(jetbrains.mps.baseLanguage.unitTest.execution.settings)","6062668769034853016"),false);
      StubRefUtil.replaceReference(node,SNodeOperations.getReference(newnode,SLinkOperations.findLinkDeclaration("jetbrains.mps.uiLanguage.structure.ComponentInstance","componentDeclaration")));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
