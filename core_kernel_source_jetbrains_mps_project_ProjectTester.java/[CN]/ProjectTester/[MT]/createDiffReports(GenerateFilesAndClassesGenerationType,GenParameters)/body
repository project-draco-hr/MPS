{
  List<String> result=new ArrayList<String>();
  final String fileType=".java";
  for (  SModel model : genParams.getSModels()) {
    File dir=new File(getDirectoryFromModel(model));
    if (!dir.exists()) {
      continue;
    }
    List<String> javaFiles=new ArrayList<String>();
    javaFiles.addAll(Arrays.asList(dir.list(new FilenameFilter(){
      public boolean accept(      File dir,      String name){
        return name.endsWith(fileType);
      }
    }
)));
    for (    SNode root : model.getRoots()) {
      final String fileName=root.getName() + fileType;
      final String filePath=getDirectoryFromModel(model) + File.separator + fileName;
      final File testFile=new File(filePath);
      String oldContent=null;
      String newContent=genType.getSourceByNode(root,model);
      if (testFile.exists() && testFile.canRead()) {
        oldContent=FileUtil.read(testFile);
        javaFiles.remove(fileName);
      }
      final boolean created=oldContent == null && newContent != null;
      final String title=getDiffReportTitle(root.getName(),model.getShortName(),created,false);
      String[] oldTest=getContentAsArray(oldContent,"\n");
      String[] newTest=getContentAsArray(newContent,"\r\n");
      addDiffReport(new TestComparator(oldTest,newTest),result,title);
    }
    for (    String fileName : javaFiles) {
      String nodeName=fileName.substring(0,fileName.length() - fileType.length());
      String title=getDiffReportTitle(nodeName,model.getShortName(),false,true);
      File file=new File(getDirectoryFromModel(model) + File.separator + fileName);
      String[] test=FileUtil.read(file).split("\n");
      addDiffReport(new TestComparator(test,new String[0]),result,title);
    }
  }
  return result;
}
