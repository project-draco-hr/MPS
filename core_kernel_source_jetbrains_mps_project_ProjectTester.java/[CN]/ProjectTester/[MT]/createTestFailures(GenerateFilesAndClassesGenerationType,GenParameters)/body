{
  List<TestFailure> result=new ArrayList<TestFailure>();
  for (  SModel model : genParams.getSModels()) {
    for (    SNode root : model.getRoots()) {
      try {
        ClassLoader classLoader=genType.getCompiler().getClassLoader(getClass().getClassLoader());
        String className=JavaNameUtil.packageNameForModelUID(model.getSModelReference()) + "." + root.getName();
        Class instanceClass=Class.forName(className,true,classLoader);
        Object instance=instanceClass.newInstance();
        Method setName=TestCase.class.getMethod("setName",String.class);
        for (        Method method : instanceClass.getMethods()) {
          if (method.getAnnotation(org.junit.Test.class) == null) {
            continue;
          }
          setName.invoke(instance,method.getName());
          if (instance instanceof TestCase) {
            junit.framework.TestResult testResult=new junit.framework.TestResult();
            ((TestCase)instance).run(testResult);
            for (            TestFailure testError : Collections.list(testResult.errors())) {
              result.add(testError);
            }
            for (            TestFailure testFailure : Collections.list(testResult.failures())) {
              result.add(testFailure);
            }
          }
        }
      }
 catch (      Throwable ignored) {
      }
    }
  }
  return result;
}
