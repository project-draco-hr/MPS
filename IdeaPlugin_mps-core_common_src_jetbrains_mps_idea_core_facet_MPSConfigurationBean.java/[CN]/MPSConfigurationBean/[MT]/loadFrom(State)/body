{
  setUUID(state.UUID);
  setGeneratorOutputPath(state.generatorOutputPath);
  setUseModuleSourceFolder(state.useModuleSourceFolder);
  setUseTransientOutputFolder(state.useTransientOutputFolder);
  if (state.usedLanguages != null) {
    setUsedLanguages(state.usedLanguages);
  }
  String moduleContentRoot=null;
  if (state.generatorOutputPath != null && state.generatorOutputPath.trim().length() > 0) {
    String moduleDirPath=PathUtil.getParentPath(state.generatorOutputPath);
    if (moduleDirPath != null && moduleDirPath.trim().length() > 0) {
      moduleContentRoot=moduleDirPath;
    }
  }
  List<ModelRootDescriptor> roots=new ArrayList<ModelRootDescriptor>();
  if (state.modelRoots != null) {
    ModelRootDescriptor[] moduleDefaultRoot=new ModelRootDescriptor[]{null};
    for (    jetbrains.mps.project.structure.model.ModelRoot modelRoot : state.modelRoots) {
      Memento m=new MementoImpl();
      modelRoot.save(m);
      ModelRootDescriptor desc=ModuleDescriptorPersistence.createDescriptor(null,m,moduleContentRoot,moduleDefaultRoot);
      if (desc != null) {
        roots.add(desc);
      }
    }
  }
  if (state.rootDescriptors != null) {
    for (    RootDescriptor descriptor : state.rootDescriptors) {
      Memento m=new MementoImpl();
      MementoUtil.readMemento(m,descriptor.settings);
      roots.add(new ModelRootDescriptor(descriptor.type,m));
    }
  }
  myDescriptor.getModelRootDescriptors().clear();
  myDescriptor.getModelRootDescriptors().addAll(roots);
}
