{
  return ModelAccess.instance().runReadAction(new Computable<Icon>(){
    public Icon compute(){
      Icon mainIcon=null;
      if (SNodeOperations.isUnknown(node)) {
        return Icons.UNKNOWN_ICON;
      }
      SNode concept=jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getConceptDeclaration(node);
      if ((concept != null)) {
        Icon alternativeIcon=null;
        try {
          if (ModelConstraintsManager.isAlternativeIcon(concept)) {
            Object iconObject=ModelConstraintsManager.getAlternativeIcon(concept,node);
            if (iconObject != null) {
              String alternativeIconPath=(String)iconObject;
              alternativeIcon=IconManager.getIconForConcept(concept,alternativeIconPath);
            }
          }
        }
 catch (        Throwable t) {
        }
        if (alternativeIcon != null) {
          mainIcon=alternativeIcon;
        }
 else {
          mainIcon=IconManager.getIconForConcept(concept);
        }
      }
      if (mainIcon == null) {
        if (node.isRoot()) {
          return Icons.DEFAULT_ROOT_ICON;
        }
 else {
          return Icons.DEFAULT_NODE_ICON;
        }
      }
      SModel model=jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getModel(node);
      if (model.isDisposed()) {
        return mainIcon;
      }
      if (!(SModelStereotype.isUserModel(model)) || model.getModelDescriptor() instanceof BaseSModelDescriptorWithSource && ((BaseSModelDescriptorWithSource)model.getModelDescriptor()).isReadOnly()) {
        mainIcon=new LayeredIcon(mainIcon,com.intellij.util.Icons.LOCKED_ICON);
      }
      RowIcon result=new RowIcon(2);
      result.setIcon(mainIcon,0);
      if (!(withoutAdditional)) {
        result.setIcon(((Icon)BehaviorManager.getInstance().invoke(Object.class,jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.cast(node,"jetbrains.mps.lang.core.structure.BaseConcept"),"virtual_getAdditionalIcon_5017341185733863694",new Class[]{SNode.class})),1);
      }
      List<Icon> markIcons=((List<Icon>)BehaviorManager.getInstance().invoke(Object.class,jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.cast(node,"jetbrains.mps.lang.core.structure.BaseConcept"),"virtual_getMarkIcons_3923831204883340393",new Class[]{SNode.class}));
      if (markIcons != null) {
        LayeredIcon layeredIcon=new LayeredIcon(markIcons.size() + 1);
        layeredIcon.setIcon(result,0);
        for (int i=0; i < markIcons.size(); i++) {
          layeredIcon.setIcon(markIcons.get(i),i + 1);
        }
        return layeredIcon;
      }
      return result;
    }
  }
);
}
