{
  Iterable<SConcept> concreteSubConcepts=ListSequence.fromList(SConceptOperations.getAllSubConcepts2(MetaAdapterFactory.getConcept(0x7a6f7ef73988464bL,0x8cc51182671c136eL,0x1a2a793c4db2238aL,"jetbrains.mps.samples.languagePatterns.Basic.structure.AbstractRequestDescription"),SNodeOperations.getModel(_context.getParentNode()))).where(new IWhereFilter<SConcept>(){
    public boolean accept(    SConcept it){
      return !(it.isAbstract());
    }
  }
);
  return (pattern != null && pattern.length() > 0) && Sequence.fromIterable(concreteSubConcepts).all(new IWhereFilter<SConcept>(){
    public boolean accept(    SConcept concept){
      return !(SConceptOperations.conceptAlias(concept).startsWith(pattern));
    }
  }
);
}
