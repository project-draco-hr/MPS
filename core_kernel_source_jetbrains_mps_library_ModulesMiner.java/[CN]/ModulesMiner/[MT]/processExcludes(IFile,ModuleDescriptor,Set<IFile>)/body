{
  if (descriptor == null || descriptorFile.isReadOnly()) {
    return;
  }
  for (  String p : descriptor.getSourcePaths()) {
    excludes.add(FileSystem.getInstance().getFileByPath(p));
  }
  IFile genPath=ProjectPathUtil.getGeneratorOutputPath(descriptorFile.getParent(),descriptor);
  if (genPath != null) {
    excludes.add(genPath);
    if (!descriptorFile.isReadOnly()) {
      FileSystem.getInstance().getFileByPath(FileGenerationUtil.getCachesPath(genPath.getPath()));
    }
  }
  IFile testsGenPath=ProjectPathUtil.getGeneratorTestsOutputPath(descriptorFile,descriptor);
  if (testsGenPath != null) {
    excludes.add(genPath);
    if (!descriptorFile.isReadOnly()) {
      FileSystem.getInstance().getFileByPath(FileGenerationUtil.getCachesPath(testsGenPath.getPath()));
    }
  }
  for (  ModelRootDescriptor rootDescriptor : descriptor.getModelRootDescriptors()) {
    ModelRoot root=rootDescriptor.getRoot();
    if (root == null || root.getManager() != null && root.getManager() != LanguageID.JAVA_MANAGER) {
      continue;
    }
    excludes.add(FileSystem.getInstance().getFileByPath(root.getPath()));
  }
  IFile classesGen=ProjectPathUtil.getClassesGenFolder(descriptorFile);
  if (classesGen != null) {
    excludes.add(classesGen);
  }
  for (  String entry : descriptor.getAdditionalJavaStubPaths()) {
    excludes.add(FileSystem.getInstance().getFileByPath(entry));
  }
}
