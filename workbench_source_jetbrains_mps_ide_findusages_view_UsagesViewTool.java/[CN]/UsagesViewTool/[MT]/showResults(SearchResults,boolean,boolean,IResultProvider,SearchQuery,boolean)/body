{
  int resCount=searchResults.getSearchResults().size();
  if (resCount == 0) {
    ThreadUtils.runInUIThreadNoWait(new Runnable(){
      public void run(){
        new HintDialog(JOptionPane.getFrameForComponent(myPanel),"Not found","No usages for that node").showDialog();
      }
    }
);
  }
 else   if (resCount == 1 && !showOne) {
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        ModelAccess.instance().runReadAction(new Runnable(){
          public void run(){
            SNode node=((SearchResult<SNode>)searchResults.getSearchResults().get(0)).getObject();
            if (node != null) {
              getMPSProject().getComponentSafe(MPSEditorOpener.class).openNode(node);
            }
          }
        }
);
      }
    }
);
  }
 else {
    final int index=currentTabIndex();
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        UsageViewData usageViewData=new UsageViewData();
        usageViewData.createUsageView();
        myUsageViewsData.add(usageViewData);
        myTabbedPane.addTab("",usageViewData.myUsagesView.getComponent());
        myTabbedPane.setSelectedIndex(myTabbedPane.getTabCount() - 1);
        usageViewData.myUsagesView.setRunOptions(provider,query,new ButtonConfiguration(isRerunnable),searchResults);
        myTabbedPane.setTitleAt(currentTabIndex(),usageViewData.myUsagesView.getCaption());
        myTabbedPane.setIconAt(currentTabIndex(),usageViewData.myUsagesView.getIcon());
      }
    }
);
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        if (!newTab) {
          if (index != -1) {
            closeTab(index);
          }
        }
        openTool(true);
      }
    }
);
  }
}
