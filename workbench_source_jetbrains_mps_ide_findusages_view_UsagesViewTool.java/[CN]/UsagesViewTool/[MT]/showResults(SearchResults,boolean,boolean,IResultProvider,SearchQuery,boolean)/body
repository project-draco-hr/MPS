{
  int resCount=searchResults.getSearchResults().size();
  if (resCount == 0) {
    ThreadUtils.runInUIThreadNoWait(new Runnable(){
      public void run(){
        new HintDialog(getFrame(),"Not found","No usages for that node").showDialog();
      }
    }
);
  }
 else   if (resCount == 1 && !showOne) {
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        SNode node=((SearchResult<SNode>)searchResults.getSearchResults().get(0)).getObject();
        if (node != null) {
          NavigationActionProcessor.getInstance().executeNavigationAction(new EditorNavigationCommand(node,null,getMPSProject().getComponent(EditorsPane.class)),getMPSProject(),true);
        }
      }
    }
);
  }
 else {
    if (!newTab) {
      if (currentTabIndex() != -1) {
        closeTab(currentTabIndex());
      }
    }
    UsageViewData usageViewData=new UsageViewData();
    usageViewData.createUsageView();
    myUsageViewsData.add(usageViewData);
    myTabbedPane.addTab("",usageViewData.myUsagesView.getComponent());
    myTabbedPane.setSelectedIndex(myTabbedPane.getTabCount() - 1);
    usageViewData.myUsagesView.setRunOptions(provider,query,new ButtonConfiguration(isRerunnable),searchResults);
    myTabbedPane.setTitleAt(currentTabIndex(),usageViewData.myUsagesView.getCaption());
    myTabbedPane.setIconAt(currentTabIndex(),usageViewData.myUsagesView.getIcon());
    showTool();
  }
}
