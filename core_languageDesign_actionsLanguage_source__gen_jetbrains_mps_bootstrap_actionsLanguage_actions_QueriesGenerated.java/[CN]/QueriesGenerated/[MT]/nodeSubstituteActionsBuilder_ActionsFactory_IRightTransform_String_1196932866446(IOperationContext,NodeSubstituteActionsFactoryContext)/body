{
  List<INodeSubstituteAction> result=new ArrayList<INodeSubstituteAction>();
{
    AbstractConceptDeclaration concept=SModelUtil_new.findAbstractConceptDeclaration("?no output concept specified?",operationContext.getScope());
    result.add(new DefaultSimpleSubstituteAction(concept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter(),operationContext.getScope()){
      public SNode createChildNode(      Object parameterObject,      SModel model,      String pattern){
        SNode result=SModelOperations.createNewNode(model,"jetbrains.mps.bootstrap.actionsLanguage.structure.RightTransform_SimpleString",null);
        SPropertyOperations.set(result,"text",pattern);
        return result;
      }
      public String getDescriptionText(      String pattern){
        return "simple text";
      }
      public String getMatchingText(      String pattern){
        return pattern;
      }
    }
);
  }
  return result;
}
