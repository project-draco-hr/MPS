{
  final SNode tnode1=environment.createOutputNode(myConcepts[0]);
  try {
    environment.nodeCopied(context,tnode1,"tpl/r:00000000-0000-4000-0000-011c895905f7/1202338159177");
    SNodeAccessUtil.setProperty(tnode1,myProperties[0],"OutputRoot_2");
    SNodeAccessUtil.setProperty(tnode1,myProperties[1],"'getPrevInputTest' output root (2)");
    TemplateContext context1=context.subContext();
{
      final List<SNode> tlist2=new ArrayList<SNode>();
      final Iterable<SNode> loopList2=QueriesGenerated.sourceNodesQuery_1202338467105(new SourceSubstituteMacroNodesContext(context1,loopMacroRef_wvaolp_b0a0a1a4a1a4));
      for (      SNode itnode2 : loopList2) {
        if (itnode2 == null) {
          continue;
        }
        TemplateContext context2=context1.subContext("LEVEL 1",itnode2);
        final List<SNode> tlist3=new ArrayList<SNode>();
        final Iterable<SNode> loopList3=QueriesGenerated.sourceNodesQuery_1202338467112(new SourceSubstituteMacroNodesContext(context2,loopMacroRef_wvaolp_b0a0a3a2a4a1a4));
        for (        SNode itnode3 : loopList3) {
          if (itnode3 == null) {
            continue;
          }
          TemplateContext context3=context2.subContext("LEVEL 2",itnode3);
          final List<SNode> tlist4=new ArrayList<SNode>();
          final Iterable<SNode> loopList4=QueriesGenerated.sourceNodesQuery_1202338467119(new SourceSubstituteMacroNodesContext(context3,loopMacroRef_wvaolp_b0a0a3a4a2a4a1a4));
          for (          SNode itnode4 : loopList4) {
            if (itnode4 == null) {
              continue;
            }
            TemplateContext context4=context3.subContext(itnode4);
            final SNode tnode5=environment.createOutputNode(myConcepts[1]);
            try {
              SNodeAccessUtil.setProperty(tnode5,myProperties[2],TemplateUtil.asString(QueriesGenerated.propertyMacro_GetPropertyValue_1202338467126(new PropertyMacroContext(context4,"_text_",propertyMacro_wvaolp_c0a0c0a0d0e0e0c0e0b0e))));
              TemplateContext context5=context4.subContext();
{
                final List<SNode> tlist6=new ArrayList<SNode>();
{
                  SNode placeholder=environment.createOutputNode(MetaAdapterFactory.getConcept(0x157a9668bf58417bL,0x893e53d86388dc56L,0x1164564a526L,"jetbrains.mps.transformation.test.outputLang.structure.OutputNode"));
                  tlist6.add(placeholder);
                  environment.postProcess(new MapSrcProcessor(new SNodePointer("r:00000000-0000-4000-0000-011c895905f7(jetbrains.mps.transformation.test.inputLang.generator.outputLang.template.test_getPrevInput@generator)","1202338527050"),placeholder,context5){
                    @NotNull @Override public SNode substitute() throws GenerationFailureException {
                      return QueriesGenerated.mapSrcMacro_mapper_1202338546473(new MapSrcMacroContext(this));
                    }
                    @Override public void postProcess(                    @NotNull SNode outputNode) throws GenerationFailureException {
                      QueriesGenerated.mapSrcMacro_post_mapper_1225236090395(new MapSrcMacroPostProcContext(getTemplateContext(),outputNode,getTemplateNode()));
                    }
                  }
);
                }
                for (                SNode child7 : TemplateUtil.asNotNull(tlist6)) {
                  tnode5.addChild(myAggregationLinks[0],child7);
                }
              }
{
                final List<SNode> tlist8=new ArrayList<SNode>();
{
                  SNode placeholder=environment.createOutputNode(MetaAdapterFactory.getConcept(0x157a9668bf58417bL,0x893e53d86388dc56L,0x1164564a526L,"jetbrains.mps.transformation.test.outputLang.structure.OutputNode"));
                  tlist8.add(placeholder);
                  environment.postProcess(new MapSrcProcessor(new SNodePointer("r:00000000-0000-4000-0000-011c895905f7(jetbrains.mps.transformation.test.inputLang.generator.outputLang.template.test_getPrevInput@generator)","1202338676108"),placeholder,context5){
                    @NotNull @Override public SNode substitute() throws GenerationFailureException {
                      return QueriesGenerated.mapSrcMacro_mapper_1202338683284(new MapSrcMacroContext(this));
                    }
                  }
);
                }
                for (                SNode child9 : TemplateUtil.asNotNull(tlist8)) {
                  tnode5.addChild(myAggregationLinks[0],child9);
                }
              }
{
                final List<SNode> tlist10=new ArrayList<SNode>();
{
                  SNode placeholder=environment.createOutputNode(MetaAdapterFactory.getConcept(0x157a9668bf58417bL,0x893e53d86388dc56L,0x1164564a526L,"jetbrains.mps.transformation.test.outputLang.structure.OutputNode"));
                  tlist10.add(placeholder);
                  environment.postProcess(new MapSrcProcessor(new SNodePointer("r:00000000-0000-4000-0000-011c895905f7(jetbrains.mps.transformation.test.inputLang.generator.outputLang.template.test_getPrevInput@generator)","1202338727992"),placeholder,context5){
                    @NotNull @Override public SNode substitute() throws GenerationFailureException {
                      return QueriesGenerated.mapSrcMacro_mapper_1202338740199(new MapSrcMacroContext(this));
                    }
                    @Override public void postProcess(                    @NotNull SNode outputNode) throws GenerationFailureException {
                      QueriesGenerated.mapSrcMacro_post_mapper_1225236639046(new MapSrcMacroPostProcContext(getTemplateContext(),outputNode,getTemplateNode()));
                    }
                  }
);
                }
                for (                SNode child11 : TemplateUtil.asNotNull(tlist10)) {
                  tnode5.addChild(myAggregationLinks[0],child11);
                }
              }
            }
  finally {
            }
            if (tnode5 != null) {
              tlist4.add(tnode5);
            }
          }
          if (tlist4 != null) {
            environment.registerLabel(itnode3,tlist4,"LEVEL 2");
            tlist3.addAll(tlist4);
          }
        }
        if (tlist3 != null) {
          environment.registerLabel(itnode2,tlist3,"LEVEL 1");
          tlist2.addAll(tlist3);
        }
      }
      for (      SNode child12 : TemplateUtil.asNotNull(tlist2)) {
        tnode1.addChild(myAggregationLinks[1],child12);
      }
    }
  }
  finally {
  }
  return TemplateUtil.singletonList(tnode1);
}
