{
  TableModelFactory creator=new TableModelFactory(){
    public TableModel createTableModel(    final SNode node,    final EditorContext editorContext){
      return new TableModel(){
        public int getColumnCount(){
          return SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(3487681708893422336l,-6253710059602727269l),6223439730610283563l,6223439730610302888l,"component")).size() + 1;
        }
        public int getRowCount(){
          return SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(3487681708893422336l,-6253710059602727269l),6223439730610283563l,6223439730610302888l,"component")).size() + 1;
        }
        public void deleteRow(        int rowNumber){
        }
        public SNode getValueAt(        int row,        final int column){
          if (row == 0 && column == 0) {
            return null;
          }
          if (row == 0) {
            return ListSequence.fromList(SLinkOperations.getChildren(ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(3487681708893422336l,-6253710059602727269l),6223439730610283563l,6223439730610302888l,"component"))).getElement(column - 1),MetaAdapterFactory.getContainmentLink(new UUID(3487681708893422336l,-6253710059602727269l),6223439730610336068l,6223439730610790722l,"in"))).first();
          }
          if (column == 0) {
            SNode component=ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(3487681708893422336l,-6253710059602727269l),6223439730610283563l,6223439730610302888l,"component"))).getElement(row - 1);
            if (ListSequence.fromList(SLinkOperations.getChildren(component,MetaAdapterFactory.getContainmentLink(new UUID(3487681708893422336l,-6253710059602727269l),6223439730610336068l,6223439730610790726l,"out"))).isEmpty()) {
              return component;
            }
            return ListSequence.fromList(SLinkOperations.getChildren(component,MetaAdapterFactory.getContainmentLink(new UUID(3487681708893422336l,-6253710059602727269l),6223439730610336068l,6223439730610790726l,"out"))).first();
          }
          return ListSequence.fromList(SLinkOperations.getChildren(ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(3487681708893422336l,-6253710059602727269l),6223439730610283563l,6223439730610302888l,"component"))).getElement(row - 1),MetaAdapterFactory.getContainmentLink(new UUID(3487681708893422336l,-6253710059602727269l),6223439730610336068l,6223439730610336071l,"dep"))).findFirst(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(new UUID(3487681708893422336l,-6253710059602727269l),6223439730610762144l,6223439730610763348l,"to")) == ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(3487681708893422336l,-6253710059602727269l),6223439730610283563l,6223439730610302888l,"component"))).getElement(column - 1);
            }
          }
);
        }
        public void createElement(        int row,        int column){
        }
        public SubstituteInfo getSubstituteInfo(        int row,        int column){
          return new SubstituteInfo(){
            public List<SubstituteAction> getMatchingActions(            String p0,            boolean p1){
              return new ArrayList<SubstituteAction>();
            }
            public List<SubstituteAction> getSmartMatchingActions(            String p0,            boolean p1,            EditorCell p2){
              return new ArrayList<SubstituteAction>();
            }
            public void invalidateActions(){
            }
            public void setOriginalText(            String p0){
            }
            public String getOriginalText(){
              return "";
            }
            public boolean hasExactlyNActions(            String p0,            boolean p1,            int p2){
              return false;
            }
          }
;
        }
        public void insertRow(        int rowNumber){
        }
        public void deleteColumn(        int columnNumber){
        }
        public void insertColumn(        int columnNumber){
        }
        public int getMaxColumnWidth(        int columnNumber){
          return (columnNumber == 0 ? 100 : 20);
        }
      }
;
    }
  }
;
  EditorCell_Collection editorCell=EditorCell_Table.createTable(editorContext,node,creator.createTableModel(node,editorContext),"Table_y763qk_a");
  editorCell.setCellId("Table_y763qk_a_0");
  editorCell.setBig(true);
  return editorCell;
}
