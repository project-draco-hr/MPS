{
  return new JavaRunProfileState(){
    @Nullable public ExecutionResult execute(    Executor executor,    @NotNull ProgramRunner runner) throws ExecutionException {
      final ConsoleViewImpl consoleView_22042010=JavaConsoleCreator.createConsoleView(MPSDataKeys.PROJECT.getData(environment.getDataContext()));
      JComponent consoleComponent_22042010=null;
      Runnable consoleDispose_22042010=null;
      final List<AnAction> actions_22042010=ListSequence.fromList(new ArrayList<AnAction>());
      ProcessHandler handler_22042010=null;
      final Project project_22042010=environment.getProject();
      try {
        final ConfigRunParameters javaRunParameters=DefaultJavaApplication_Configuration.this.getStateObject().myJavaRunParameters.copy();
        if (executor.getId().equals(DefaultDebugExecutor.EXECUTOR_ID)) {
          String args=this.getUserData(DebuggerKeys.CONNECTION_SETTINGS);
          String oldVmParams=javaRunParameters.getVMParameters();
          if (StringUtils.isNotEmpty(oldVmParams)) {
            oldVmParams+=" ";
          }
 else {
            oldVmParams="";
          }
          javaRunParameters.setVMParameters(oldVmParams + args);
        }
        final SNode node=DefaultJavaApplication_Configuration.this.getNodeForExecution(environment.getProject(),(javaRunParameters).getMake());
{
          ListSequence.fromList(actions_22042010).addSequence(ListSequence.fromList(new _FunctionTypes._return_P0_E0<List<AnAction>>(){
            public List<AnAction> invoke(){
{
                final List<AnAction> actionsList=ListSequence.fromListAndArray(new ArrayList<AnAction>(),consoleView_22042010.createConsoleActions());
                return actionsList;
              }
            }
          }
.invoke()));
          consoleComponent_22042010=consoleView_22042010.getComponent();
          consoleDispose_22042010=new Runnable(){
            public void run(){
              Disposer.dispose(consoleView_22042010);
            }
          }
;
          final Wrappers._T<ExecutionException> ex=new Wrappers._T<ExecutionException>(null);
          handler_22042010=(ProcessHandler)new _FunctionTypes._return_P0_E0<ProcessHandler>(){
            public ProcessHandler invoke(){
              try {
                return OutputRedirector.redirect(new JavaNode_Command().setVirtualMachineParameter(javaRunParameters.getVMParameters()).setProgramParameter(javaRunParameters.getProgramParameters()).setWorkingDirectory((javaRunParameters.getWorkingDirectory() == null ? null : new File(javaRunParameters.getWorkingDirectory()))).createProcess(node),new ConsoleProcessListener(consoleView_22042010));
              }
 catch (              ExecutionException e) {
                ex.value=e;
                return null;
              }
            }
          }
.invoke();
          if (ex.value != null) {
            throw ex.value;
          }
        }
      }
 catch (      Throwable t) {
        if (t instanceof ExecutionException) {
          throw (ExecutionException)t;
        }
 else {
          Logger.getLogger(DefaultJavaApplication_Configuration.class).error(t);
          throw new ExecutionException("Execution code threw an exception: " + t.getMessage(),t);
        }
      }
      if (handler_22042010 == null) {
        throw new ExecutionException("Process handler is null");
      }
      return new DefaultJavaApplication_Configuration.MyExecutionResult(handler_22042010,ListSequence.fromList(actions_22042010).toGenericArray(AnAction.class),new DefaultJavaApplication_Configuration.MyExecutionConsole(consoleComponent_22042010,consoleDispose_22042010));
    }
    public RunnerSettings getRunnerSettings(){
      return null;
    }
    public ConfigurationPerRunnerSettings getConfigurationSettings(){
      return null;
    }
  }
;
}
