{
  return findInDebugInfo(className,new Mapper2<DebugInfo,SModelDescriptor,List<SNode>>(){
    public List<SNode> value(    DebugInfo result,    SModelDescriptor descriptor){
      List<T> infoForPosition=result.getInfoForPosition(file,position,new _FunctionTypes._return_P1_E0<Set<T>,DebugInfoRoot>(){
        public Set<T> invoke(        DebugInfoRoot root){
          return positionsGetter.value(root);
        }
      }
);
      List<SNode> nodes=new ArrayList<SNode>();
      if (infoForPosition.isEmpty()) {
        return null;
      }
      for (      T info : infoForPosition) {
        nodes.add(descriptor.getSModel().getNodeById(info.getNodeId()));
      }
      return nodes;
    }
  }
);
}
