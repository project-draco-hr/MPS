{
  Map<DebugInfoRoot,List<UnitPositionInfo>> resultList=info.getRootToInfoForPosition(file,position,new _FunctionTypes._return_P1_E0<Set<UnitPositionInfo>,DebugInfoRoot>(){
    public Set<UnitPositionInfo> invoke(    DebugInfoRoot root){
      return root.getUnitPositions();
    }
  }
);
  for (  IMapping<DebugInfoRoot,List<UnitPositionInfo>> mapping : MapSequence.fromMap(resultList)) {
    return MultiTuple.<UnitPositionInfo,DebugInfoRoot>from(ListSequence.fromList(mapping.value()).sort(new ISelector<UnitPositionInfo,Integer>(){
      public Integer select(      UnitPositionInfo it){
        return it.getStartLine();
      }
    }
,false).first(),mapping.key());
  }
  return null;
}
