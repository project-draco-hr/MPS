{
  LOG.debug("Scheduling plugins' reload");
  ModelAccess.instance().runWriteInEDT(new Runnable(){
    @Override public void run(){
      if (isDisposed())       return;
      LOG.debug("Starting plugins' reload");
      Set<SModule> toLoad=new HashSet<SModule>(), toUnload=new HashSet<SModule>();
      for (      Map.Entry<SModule,ModuleLoadingState> entry : states.entrySet()) {
        if (entry.getValue() == ModuleLoadingState.UNLOAD || entry.getValue() == ModuleLoadingState.RELOAD) {
          toUnload.add(entry.getKey());
        }
        if (entry.getValue() == ModuleLoadingState.LOAD || entry.getValue() == ModuleLoadingState.RELOAD) {
          toLoad.add(entry.getKey());
        }
      }
      states.clear();
      if (toLoad.isEmpty() && toUnload.isEmpty())       return;
      long beginTime=System.currentTimeMillis();
      try {
        updatePlugins(toUnload,toLoad);
      }
  finally {
        LOG.info("Plugin reload took " + (System.currentTimeMillis() - beginTime) / 1000.0 + " s");
      }
    }
  }
);
}
