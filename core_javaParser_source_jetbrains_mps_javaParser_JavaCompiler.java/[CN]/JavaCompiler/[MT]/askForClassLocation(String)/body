{
  final String name=NameUtil.shortNameFromLongName(fqName);
  JFileChooser fileChooser=new JFileChooser(mySourceDir);
  fileChooser.setFileFilter(new javax.swing.filechooser.FileFilter(){
    @Override public boolean accept(    File f){
      return f.isDirectory() || f.getName().endsWith(name + ".class");
    }
    @Override public String getDescription(){
      return "Java class " + name;
    }
  }
);
  fileChooser.setDialogTitle("Select class location for " + fqName);
  fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
  int option=fileChooser.showOpenDialog(null);
  if (option != JFileChooser.APPROVE_OPTION) {
    return false;
  }
  File f=fileChooser.getSelectedFile();
  String postfix=fqName.replace('.',File.separatorChar);
  String fileAbsolutePath=f.getAbsolutePath();
  if (!fileAbsolutePath.endsWith(postfix)) {
    LOG.error("file path does not correspond class package");
    return false;
  }
  String classPath=fileAbsolutePath.substring(fileAbsolutePath.length() - postfix.length());
  File classFile=new File(classPath);
  if (!classFile.exists()) {
    LOG.error("classpath directory does not exist");
    return false;
  }
  myClassPathItem.add(new FileClassPathItem(classPath));
  return true;
}
