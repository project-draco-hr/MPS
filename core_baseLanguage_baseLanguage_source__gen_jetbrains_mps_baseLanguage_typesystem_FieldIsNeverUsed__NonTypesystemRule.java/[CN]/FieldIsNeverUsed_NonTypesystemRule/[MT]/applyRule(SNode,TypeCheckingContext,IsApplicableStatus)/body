{
  if (!(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,"visibility",true),"jetbrains.mps.baseLanguage.structure.PrivateVisibility"))) {
    return;
  }
  if (SNodeOperations.isInstanceOf(field,"jetbrains.mps.baseLanguage.classifiers.structure.IMember")) {
    final SNode member=SNodeOperations.cast(field,"jetbrains.mps.baseLanguage.classifiers.structure.IMember");
    List<SNode> memberOperations=SNodeOperations.getDescendants(SNodeOperations.getParent(field),"jetbrains.mps.baseLanguage.classifiers.structure.IMemberOperation",false,new String[]{});
    Iterable<SNode> references=ListSequence.fromList(memberOperations).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SLinkOperations.getTarget(it,"member",false) == member;
      }
    }
);
    if (Sequence.fromIterable(references).isEmpty()) {
{
        BaseQuickFixProvider intentionProvider=null;
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportWarning(field,"Field is never used","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","7970711249077251955",intentionProvider,errorTarget);
      }
    }
 else {
      for (      SNode ref : references) {
        if (CheckingUtil.isAssigned(ref)) {
          return;
        }
      }
{
        BaseQuickFixProvider intentionProvider=null;
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportWarning(field,"Field is never assigned","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","7970711249077252119",intentionProvider,errorTarget);
      }
    }
  }
 else {
    List<SNode> localFieldRefs=SNodeOperations.getDescendants(SNodeOperations.getParent(field),"jetbrains.mps.baseLanguage.structure.LocalInstanceFieldReference",false,new String[]{});
    List<SNode> fieldReferenceOperations=SNodeOperations.getDescendants(SNodeOperations.getParent(field),"jetbrains.mps.baseLanguage.structure.FieldReferenceOperation",false,new String[]{});
    Iterable<SNode> fieldReferences=ListSequence.fromList(localFieldRefs).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SLinkOperations.getTarget(it,"variableDeclaration",false) == field;
      }
    }
);
    Sequence.fromIterable(fieldReferences).concat(ListSequence.fromList(fieldReferenceOperations).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SLinkOperations.getTarget(it,"fieldDeclaration",false) == field;
      }
    }
));
    if (Sequence.fromIterable(fieldReferences).isEmpty()) {
{
        BaseQuickFixProvider intentionProvider=null;
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportWarning(field,"Private field " + SPropertyOperations.getString(field,"name") + " is never used","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","7970711249077252023",intentionProvider,errorTarget);
      }
    }
 else {
      for (      SNode ref : fieldReferences) {
        if (CheckingUtil.isAssigned(ref)) {
          return;
        }
      }
{
        BaseQuickFixProvider intentionProvider=null;
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportWarning(field,"Private field " + SPropertyOperations.getString(field,"name") + " is never assigned","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","7970711249077252061",intentionProvider,errorTarget);
      }
    }
  }
}
