{
  if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(fieldDeclaration,"visibility",true),"jetbrains.mps.baseLanguage.structure.PrivateVisibility")) {
    if (SNodeOperations.isInstanceOf(fieldDeclaration,"jetbrains.mps.baseLanguage.classifiers.structure.IMember")) {
      final SNode member=SNodeOperations.cast(fieldDeclaration,"jetbrains.mps.baseLanguage.classifiers.structure.IMember");
      List<SNode> memberOperations=SNodeOperations.getDescendants(SNodeOperations.getParent(fieldDeclaration),"jetbrains.mps.baseLanguage.classifiers.structure.IMemberOperation",false,new String[]{});
      if (ListSequence.fromList(memberOperations).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SLinkOperations.getTarget(it,"member",false) == member;
        }
      }
).isEmpty()) {
{
          BaseQuickFixProvider intentionProvider=null;
          IErrorTarget errorTarget=new NodeErrorTarget();
          IErrorReporter _reporter_2309309498=typeCheckingContext.reportWarning(fieldDeclaration,"Field is never used","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","8706754199947716227",intentionProvider,errorTarget);
        }
      }
    }
 else {
      List<SNode> localFieldRefs=SNodeOperations.getDescendants(SNodeOperations.getParent(fieldDeclaration),"jetbrains.mps.baseLanguage.structure.LocalInstanceFieldReference",false,new String[]{});
      if (ListSequence.fromList(localFieldRefs).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SLinkOperations.getTarget(it,"variableDeclaration",false) == fieldDeclaration;
        }
      }
).isNotEmpty()) {
        return;
      }
      List<SNode> fieldReferenceOperations=SNodeOperations.getDescendants(SNodeOperations.getParent(fieldDeclaration),"jetbrains.mps.baseLanguage.structure.FieldReferenceOperation",false,new String[]{});
      if (ListSequence.fromList(fieldReferenceOperations).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SLinkOperations.getTarget(it,"fieldDeclaration",false) == fieldDeclaration;
        }
      }
).isEmpty()) {
{
          BaseQuickFixProvider intentionProvider=null;
          IErrorTarget errorTarget=new NodeErrorTarget();
          IErrorReporter _reporter_2309309498=typeCheckingContext.reportWarning(fieldDeclaration,"Field is never used","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","8706754199947716162",intentionProvider,errorTarget);
        }
      }
    }
  }
}
