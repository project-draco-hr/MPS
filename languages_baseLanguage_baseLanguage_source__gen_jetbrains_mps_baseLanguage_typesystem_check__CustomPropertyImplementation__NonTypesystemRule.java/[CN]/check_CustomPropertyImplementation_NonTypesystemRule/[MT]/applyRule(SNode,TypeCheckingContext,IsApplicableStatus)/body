{
  final SNode property=SNodeOperations.getAncestor(customPropertyImplementation,"jetbrains.mps.baseLanguage.structure.Property",false,false);
  if ((property == null)) {
    return;
  }
  ListSequence.fromList(SNodeOperations.getDescendants(customPropertyImplementation,"jetbrains.mps.baseLanguage.structure.LocalPropertyReference",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return eq_uyqio1_a0a0a0a0a0a0d0b(SLinkOperations.getTarget(it,"property",false),property);
    }
  }
).union(ListSequence.fromList(SNodeOperations.getDescendants(customPropertyImplementation,"jetbrains.mps.baseLanguage.structure.PropertyReference",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return eq_uyqio1_a0a0a0a0a0a0a3a1(SLinkOperations.getTarget(it,"property",false),property);
    }
  }
)).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode it){
{
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(it,"Cannot refer to a property from within its getters and setters. Create a separate field to hold the property value.","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","6526572214152427585",null,errorTarget);
      }
    }
  }
);
}
