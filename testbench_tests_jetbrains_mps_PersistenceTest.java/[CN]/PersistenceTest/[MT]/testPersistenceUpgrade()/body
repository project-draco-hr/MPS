{
  try {
    filter.start();
    ProjectTestsSupport.testOnProjectCopy(sourceZip,tempDir,TEST_PERSISTENCE_PROJECT,new ProjectRunnable(){
      public boolean execute(      final Project project){
        ModelAccess.instance().runReadAction(new Runnable(){
          public void run(){
            MODEL_FILE=new File(((FileDataSource)getModel(project).getSource()).getFile().getPath());
          }
        }
);
        refreshVfs();
        waitEDT();
        ModelAccess.instance().runWriteAction(new Runnable(){
          @Override public void run(){
            getModel(project).reloadFromSource();
            myModelBackup=CopyUtil.copyModel(getModel(project).getSModel());
          }
        }
);
        for (int fromVersion=START_PERSISTENCE_TEST_VERSION; fromVersion < ModelPersistence.LAST_VERSION; fromVersion++) {
          for (int toVersion=fromVersion + 1; toVersion <= ModelPersistence.LAST_VERSION; toVersion++) {
            ModelLoadResult resultFrom=setInitialVersion(getModel(project),fromVersion);
            checkUpgrade(getModel(project),toVersion,resultFrom);
            restoreOriginalState(project);
          }
        }
        return true;
      }
    }
);
  }
  finally {
    filter.stop();
  }
}
