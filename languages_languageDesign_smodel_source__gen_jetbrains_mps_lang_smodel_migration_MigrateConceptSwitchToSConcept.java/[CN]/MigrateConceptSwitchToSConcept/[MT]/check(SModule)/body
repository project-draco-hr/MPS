{
{
    final SearchScope scope=CommandUtil.createScope(m);
    QueryExecutionContext context=new QueryExecutionContext(){
      public SearchScope getDefaultSearchScope(){
        return scope;
      }
    }
;
    return CollectionSequence.fromCollection(CommandUtil.instances(CommandUtil.createConsoleScope(null,false,context),MetaAdapterFactory.getConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x527e98a73771f42dL,"jetbrains.mps.lang.smodel.structure.ConceptSwitchStatement"),false)).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return !(TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(it,MetaAdapterFactory.getContainmentLink(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x527e98a73771f42dL,0x527e98a73771f430L,"expression"))),_quotation_createNode_teljlc_b0a0a0a0a0a0a0a7())) && !(TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(it,MetaAdapterFactory.getContainmentLink(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x527e98a73771f42dL,0x527e98a73771f430L,"expression"))),_quotation_createNode_teljlc_b0a0a0a0a0a0a0a7_0()));
      }
    }
).select(new ISelector<SNode,Problem>(){
      public Problem select(      SNode it){
        return ((Problem)new NotMigratedNode(it){
          public String getMessage(){
            return "Concept switch with type other than concept<>";
          }
        }
);
      }
    }
);
  }
}
