{
  final SNode tnode1=new SNode(environment.getOutputModel(),"jetbrains.mps.transformation.test.outputLang.structure.OutputRoot",false);
  try {
    environment.getTracer().pushTemplateNode(templateNode_9pkn2m_a0a0a1a1);
    environment.nodeCopied(context,tnode1,"tpl/r:00000000-0000-4000-0000-011c895905f5/1209605205934");
    tnode1.setProperty("name","outputRoot");
    tnode1.setProperty("text","output for 'don't apply reduction rule twice' test");
{
      final SNode tnode2=new SNode(environment.getOutputModel(),"jetbrains.mps.transformation.test.outputLang.structure.OutputNode_forDontApplyReductionTwice_test",false);
      try {
        environment.getTracer().pushTemplateNode(templateNode_9pkn2m_a0a0a1a5a1a1);
        environment.nodeCopied(context,tnode2,"tpl/r:00000000-0000-4000-0000-011c895905f5/1209605724998");
        tnode2.setProperty("text","this is OutputNode_forDontApplyReductionTwice_test actually");
      }
  finally {
        environment.getTracer().pushOutputNode(tnode2);
        environment.getTracer().closeTemplateNode(templateNode_9pkn2m_a0a0a1a5a1a1);
      }
      tnode1.addChild("outputChild",tnode2);
    }
  }
  finally {
    environment.getTracer().pushOutputNode(tnode1);
    environment.getTracer().closeTemplateNode(templateNode_9pkn2m_a0a0a1a1);
  }
  return TemplateUtil.singletonList(tnode1);
}
