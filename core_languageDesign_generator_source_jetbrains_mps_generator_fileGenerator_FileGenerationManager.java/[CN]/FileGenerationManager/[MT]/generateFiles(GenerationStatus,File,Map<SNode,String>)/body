{
  Set<File> generatedFiles=new HashSet<File>();
  DefaultFileGenerator fileGenerator=new DefaultFileGenerator();
  for (  SNode outputRootNode : outputNodeContents.keySet()) {
    try {
      SNode originalInputNode=null;
      if (status.getTraceMap() != null) {
        originalInputNode=status.getTraceMap().getOriginalInputNode(outputRootNode);
      }
      File generatedFile=fileGenerator.generateFile(outputRootNode,originalInputNode,status.getInputModel(),outputNodeContents.get(outputRootNode),outputRootDirectory);
      if (generatedFile != null) {
        generatedFiles.add(generatedFile);
      }
    }
 catch (    IOException e) {
      LOG.error(e);
    }
  }
  generateDebugInfo(status,outputRootDirectory,generatedFiles);
  generateDependencyInfo(status,outputRootDirectory,generatedFiles);
  if (ModelGenerationStatusManager.USE_HASHES) {
    generateHashFile(status,outputRootDirectory,generatedFiles);
  }
  return generatedFiles;
}
