{
  Set<File> generatedFiles=new HashSet<File>();
  DefaultFileGenerator fileGenerator=new DefaultFileGenerator();
  for (  SNode outputRootNode : outputNodeContents.keySet()) {
    try {
      SNode originalInputNode=null;
      File generatedFile=fileGenerator.generateFile(outputRootNode,originalInputNode,status.getInputModel(),outputNodeContents.get(outputRootNode),outputRootDirectory);
      if (generatedFile != null) {
        generatedFiles.add(generatedFile);
      }
    }
 catch (    IOException e) {
      LOG.error(e);
    }
  }
  GenerationDependencies dependencies=status.getDependencies();
  if (dependencies != null) {
    File outputDir=FileGenerationUtil.getDefaultOutputDir(status.getInputModel(),outputRootDirectory);
    for (    GenerationRootDependencies rdep : dependencies.getUnchangedDependencies()) {
      for (      String filename : rdep.getFiles()) {
        File file=new File(outputDir,filename);
        if (file.exists()) {
          generatedFiles.add(file);
        }
      }
    }
  }
  return generatedFiles;
}
