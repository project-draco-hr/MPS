{
  boolean hasErrors=false;
  ModelDependencies dependRoot=new ModelDependencies();
  DebugInfo info=new DebugInfo();
  status.setDebugInfo(info);
  status.setBLDependencies(dependRoot);
  for (  SNode outputNode : status.getOutputModel().getRoots()) {
    try {
      TextGenerationResult result=TextGenerationUtil.generateText(context,outputNode);
      String rootNodeId=null;
      if (status.getDependencies() != null) {
        SNode node=status.getDependencies().getOriginalRoot(outputNode);
        if (node != null) {
          rootNodeId=node.getId();
        }
      }
      fillDebugInfo(info,rootNodeId,outputNode,result);
      fillDependencies(dependRoot,outputNode,result);
      hasErrors|=result.hasErrors();
      outputNodeContents.put(outputNode,result.getText());
    }
  finally {
      TextGenManager.reset();
    }
  }
  return !hasErrors;
}
