{
  VisibleArtifacts artifacts=new VisibleArtifacts(project,genContext);
  artifacts.collect();
  for (  SNode dep : SNodeOperations.getDescendants(project,"jetbrains.mps.buildScript.structure.BuildExternalDependency",false,new String[]{})) {
    Iterable<SNode> dependencyTargets=BuildExternalDependency_Behavior.call_getDependencyTargets_841011766566205095(dep,artifacts);
    for (    SNode node : dependencyTargets) {
      if (SNodeOperations.getModel(node).isTransient()) {
        genContext.showErrorMessage(dep,"returned dependency in transient model: " + node.getDebugText());
        continue;
      }
      if (!(artifacts.contains(node))) {
        genContext.showErrorMessage(dep,"returned node which is not available in dependencies: " + node.getDebugText());
        continue;
      }
      requiredArtifacts.add(node);
    }
  }
}
