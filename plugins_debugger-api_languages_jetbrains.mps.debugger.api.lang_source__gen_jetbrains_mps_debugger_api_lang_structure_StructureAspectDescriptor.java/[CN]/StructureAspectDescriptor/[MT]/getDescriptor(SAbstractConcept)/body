{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_1htk8d_a0s.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return myConceptBreakpointCreator;
      }
    break;
case 1:
  if (true) {
    return myConceptBreakpointableNodeItem;
  }
break;
case 2:
if (true) {
return myConceptConceptDeclarationReference;
}
break;
case 3:
if (true) {
return myConceptConceptFunctionParameter_Concept;
}
break;
case 4:
if (true) {
return myConceptConceptFunctionParameter_Debug_Project;
}
break;
case 5:
if (true) {
return myConceptConceptFunctionParameter_DebuggableNode;
}
break;
case 6:
if (true) {
return myConceptConceptFunction_CreateBreakpoint;
}
break;
case 7:
if (true) {
return myConceptConceptFunction_IsApplicableBreakpoint;
}
break;
case 8:
if (true) {
return myConceptConceptFunction_IsApplicableToConcept;
}
break;
case 9:
if (true) {
return myConceptCreateBreakpointOperation;
}
break;
case 10:
if (true) {
return myConceptDebuggerConfiguration;
}
break;
case 11:
if (true) {
return myConceptDebuggerReference;
}
break;
case 12:
if (true) {
return myConceptDebuggerType;
}
break;
case 13:
if (true) {
return myConceptGetDebuggerSettings_Function;
}
break;
default :
}
}
return null;
}
