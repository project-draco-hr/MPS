{
  SNode refactoring=SNodeOperations.getAncestor(thisNode,"jetbrains.mps.lang.refactoring.structure.Refactoring",false,false);
  if (!(SNodeOperations.isInstanceOf(refactoring,"jetbrains.mps.lang.refactoring.structure.LoggableRefactoring"))) {
    return true;
  }
  SNode loggableRefactoring=SNodeOperations.cast(refactoring,"jetbrains.mps.lang.refactoring.structure.LoggableRefactoring");
  List<SNode> references=SNodeOperations.getDescendants(SLinkOperations.getTarget(loggableRefactoring,"updateModelBlock",true),"jetbrains.mps.lang.refactoring.structure.RefactoringArgumentReference",false,new String[]{});
  for (  SNode reference : references) {
    for (    SReference sreference : reference.getReferences()) {
      if (sreference.getTargetNode() == thisNode) {
        return false;
      }
    }
  }
  return true;
}
