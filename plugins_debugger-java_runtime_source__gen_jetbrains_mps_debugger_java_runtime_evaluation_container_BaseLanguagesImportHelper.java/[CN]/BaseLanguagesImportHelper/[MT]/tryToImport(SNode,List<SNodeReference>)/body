{
  List<SNode> nodes=CopyUtil.copy(ListSequence.fromList(nodesToImport).select(new ISelector<SNodeReference,SNode>(){
    public SNode select(    SNodeReference it){
      return (SNode)((SNodePointer)it).resolve(MPSModuleRepository.getInstance());
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (it != null);
    }
  }
).toListSequence());
  for (  SNode node : ListSequence.fromList(nodes)) {
    if (node == null) {
      continue;
    }
    if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.structure.Expression")) {
      SNode clone=_quotation_createNode_5vd2f2_a0a0b0b0d(node);
      transformNode(clone,SNodeOperations.getModel(container));
      ListSequence.fromList(SLinkOperations.getChildren(container,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123136l,1068581517665l,"statement"))).addElement(clone);
    }
 else     if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.structure.Statement")) {
      transformNode(node,SNodeOperations.getModel(container));
      ListSequence.fromList(SLinkOperations.getChildren(container,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123136l,1068581517665l,"statement"))).addElement(SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.Statement"));
    }
  }
}
