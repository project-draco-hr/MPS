{
  return Arrays.asList(myConceptAbsExpression,myConceptAbstractIndex,myConceptArithmSymbol,myConceptBigComplexType,myConceptBigDecimalType,myConceptBigIntegerType,myConceptBigMaxExpression,myConceptBigMinExpression,myConceptBigProdExpression,myConceptBigSumExpression,myConceptComplexLiteral,myConceptComplexType,myConceptConjugateOperation,myConceptCosineExpression,myConceptDecimalBinaryOperation,myConceptDecimalDivExpression,myConceptDecimalMinusExpression,myConceptDecimalMulExpression,myConceptDecimalPlusExpression,myConceptDeterminant,myConceptDivExpressionFraction,myConceptExponentExpression,myConceptExponentialOperation,myConceptExtrSymbol,myConceptInIntervalExpression,myConceptIntervalContainsExpression,myConceptIntervalLiteral,myConceptIntervalType,myConceptLinearSolveOperation,myConceptLiteralI,myConceptLogExpression,myConceptMathContext,myConceptMathFuncExpression,myConceptMathPrimitiveType,myConceptMathSymbol,myConceptMathSymbolFromToIndex,myConceptMathSymbolIndex,myConceptMathSymbolIndexReference,myConceptMathTypeCast,myConceptMatrixConstructor,myConceptMatrixElementAccessExpression,myConceptMatrixExponentialOperation,myConceptMatrixIndexWildcard,myConceptMatrixInitializer,myConceptMatrixInitializerIndex,myConceptMatrixInitializerIndexReference,myConceptMatrixInverseOperation,myConceptMatrixNorm,myConceptMatrixOrVectorInitializer,myConceptMatrixOrVectorType,myConceptMatrixType,myConceptMatrixUnit,myConceptMatrixZero,myConceptPowExpression,myConceptSineExpression,myConceptTangentExpression,myConceptTransposeOperation,myConceptVectorInitializer,myConceptVectorType);
}
