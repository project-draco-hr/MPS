{
  return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.math.structure.InIntervalExpression",MetaIdFactory.conceptId(0x3304fc6e7c6b401eL,0xa016b944934bb21fL,0x11fb8483964L)).super_("jetbrains.mps.baseLanguage.structure.BinaryOperation").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbdeb6fecfL)).parents("jetbrains.mps.baseLanguage.structure.BinaryOperation").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbdeb6fecfL)).alias(":in:","is in interval").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:cb1a36c8-1ffb-415a-aba8-afb9dc042d1b(jetbrains.mps.baseLanguage.math.structure)","1235747354980")).create();
}
