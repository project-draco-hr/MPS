{
  super("API Migration");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "jetbrains.mps.baseLanguage.search -> MPS.Core";
    }
    public String getAdditionalInfo(){
      return "jetbrains.mps.baseLanguage.search -> MPS.Core";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.core.structure.BaseConcept";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return Sequence.fromIterable(SNodeOperations.getReferences(node)).where(new IWhereFilter<SReference>(){
        public boolean accept(        SReference it){
          String longName=check_mq52ox_a0a0a0a0a0a0(it.getTargetSModelReference());
          if (longName == null) {
            return false;
          }
          return it.getTargetSModelReference().getSModelId().toString().contains("#f3061a53-9226-4cc5-a443-f952ceaf5816#") && (longName.endsWith(".search") || longName.endsWith(".index") || longName.endsWith(".javastub"));
        }
      }
).isNotEmpty();
    }
    public void doUpdateInstanceNode(    SNode node){
      MpsClasspathRefUtil.updateReferencesToMpsClasspath(node);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MacrosUtil.expandPath()";
    }
    public String getAdditionalInfo(){
      return "MacrosUtil.expandPath()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isStaticMethodCall(node,"jetbrains.mps.plugins.MacrosUtil.expandPath(java.lang.String,java.lang.String):java.lang.String");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a2a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "IOperationContext.getProject()";
    }
    public String getAdditionalInfo(){
      return "IOperationContext.getProject()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.DotExpression";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"jetbrains.mps.smodel.IOperationContext.getProject():com.intellij.openapi.project.Project");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceNode(node,new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a3a0().createNode(SLinkOperations.getTarget(node,"operand",true)));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "IOperationContext.getMainFrame()";
    }
    public String getAdditionalInfo(){
      return "IOperationContext.getMainFrame()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.DotExpression";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"jetbrains.mps.smodel.IOperationContext.getMainFrame():java.awt.Frame");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceNode(node,new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a4a0().createNode(SLinkOperations.getTarget(node,"operand",true)));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ProjectOperationContext.get()";
    }
    public String getAdditionalInfo(){
      return "ProjectOperationContext.get()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isStaticMethodCall(node,"jetbrains.mps.project.ProjectOperationContext.get(com.intellij.openapi.project.Project):jetbrains.mps.project.ProjectOperationContext");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceNode(node,new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a5a0().createNode(ListSequence.fromList(SLinkOperations.getTargets(node,"actualArgument",true)).getElement(0)));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSProject.getModules()";
    }
    public String getAdditionalInfo(){
      return "MPSProject.getModules()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.project.MPSProject.getModules():java.util.List");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0g0a().createNode(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSProject.getModulesWithGenerators()";
    }
    public String getAdditionalInfo(){
      return "MPSProject.getModulesWithGenerators()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.project.MPSProject.getModulesWithGenerators():java.util.List");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0h0a().createNode(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Language.getStructureModelDescriptor()";
    }
    public String getAdditionalInfo(){
      return "Language.getStructureModelDescriptor()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.smodel.Language.getStructureModelDescriptor():jetbrains.mps.smodel.descriptor.EditableSModelDescriptor");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0i0a().createNode(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ModelCommandExecutor.runWriteActionWithProgressSynchronously()";
    }
    public String getAdditionalInfo(){
      return "ModelCommandExecutor.runWriteActionWithProgressSynchronously()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.smodel.ModelCommandExecutor.runWriteActionWithProgressSynchronously(com.intellij.openapi.progress.Progressive,java.lang.String,boolean,com.intellij.openapi.project.Project):void");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceNode(node,SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0j0a().createNode(ListSequence.fromList(SLinkOperations.getTargets(node,"actualArgument",true)).getElement(0),ListSequence.fromList(SLinkOperations.getTargets(node,"actualArgument",true)).getElement(1),ListSequence.fromList(SLinkOperations.getTargets(node,"actualArgument",true)).getElement(1),ListSequence.fromList(SLinkOperations.getTargets(node,"actualArgument",true)).getElement(1),ListSequence.fromList(SLinkOperations.getTargets(node,"actualArgument",true)).getElement(2),ListSequence.fromList(SLinkOperations.getTargets(node,"actualArgument",true)).getElement(3)),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "FindUsagesManager.findUsages()";
    }
    public String getAdditionalInfo(){
      return "FindUsagesManager.findUsages()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.findUsages.FindUsagesManager.findUsages(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IScope,jetbrains.mps.ide.progress.IAdaptiveProgressMonitor):java.util.Set");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0k0a().createNode(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "FindUsagesManager.findUsages()";
    }
    public String getAdditionalInfo(){
      return "FindUsagesManager.findUsages()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.findUsages.FindUsagesManager.findUsages(java.util.Set,jetbrains.mps.smodel.IScope,jetbrains.mps.ide.progress.IAdaptiveProgressMonitor,boolean):java.util.Set");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0l0a().createNode(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "FindUsagesManager.ProgressAdapter";
    }
    public String getAdditionalInfo(){
      return "FindUsagesManager.ProgressAdapter";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isClassCreator(node,"jetbrains.mps.findUsages.FindUsagesManager$ProgressAdapter.<init>(com.intellij.openapi.progress.ProgressIndicator)");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a21a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "AbstractModule.getDependOn()";
    }
    public String getAdditionalInfo(){
      return "AbstractModule.getDependOn()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.project.AbstractModule.getDependOn():java.util.List");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceNode(node,SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0n0a().createNode(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ParenthesisUtil.rotateTree()";
    }
    public String getAdditionalInfo(){
      return "ParenthesisUtil.rotateTree()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isStaticMethodCall(node,SModelReference.fromString("r:00000000-0000-4000-0000-011c895902c8(jetbrains.mps.baseLanguage.plugin)"),"155142699038773182","155142699038773979");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a41a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ParenthesisUtil.isBadPriority()";
    }
    public String getAdditionalInfo(){
      return "ParenthesisUtil.isBadPriority()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isStaticMethodCall(node,SModelReference.fromString("r:00000000-0000-4000-0000-011c895902c8(jetbrains.mps.baseLanguage.plugin)"),"155142699038773182","155142699038774033");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a51a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ITestNodeWrapper";
    }
    public String getAdditionalInfo(){
      return "ITestNodeWrapper";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isClassifierType(node,SModelReference.fromString("r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)"),"4087070200985064052");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a61a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ITestNodeWrapper.getNode()";
    }
    public String getAdditionalInfo(){
      return "ITestNodeWrapper.getNode()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,SModelReference.fromString("r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)"),"4087070200985064321");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0r0a().createNode(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ITestNodeWrapper.getTestMethods()";
    }
    public String getAdditionalInfo(){
      return "ITestNodeWrapper.getTestMethods()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,SModelReference.fromString("r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)"),"2595782876361293165");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a0b0a0e0a0a0s0a().createNode(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "LanguageTestWrapper";
    }
    public String getAdditionalInfo(){
      return "LanguageTestWrapper";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isClassCreator(node,SModelReference.fromString("r:00000000-0000-4000-0000-011c895902d5(jetbrains.mps.baseLanguage.unitTest.plugin)"),"4087070200985064317");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps21ApiMigration_MigrationScript.QuotationClass_q3kr7y_a1a0a4a0a0a91a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
