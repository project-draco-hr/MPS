{
  if (SLinkOperations.getCount(subtype,"parameterType") != SLinkOperations.getCount(supertype,"parameterType")) {
{
      BaseIntentionProvider intentionProvider=null;
      TypeChecker.getInstance().reportTypeError(equationInfo.getNodeWithError(),"different parameter numbers","jetbrains.mps.closures.helgins@5_0","1215598001644",intentionProvider);
    }
    return;
  }
{
    SNode _nodeToCheck_1029348928467=equationInfo.getNodeWithError();
    TypeChecker.getInstance().getRuntimeSupport().createLessThanInequation(SLinkOperations.getTarget(subtype,"resultType",true),SLinkOperations.getTarget(supertype,"resultType",true),_nodeToCheck_1029348928467,null,"jetbrains.mps.closures.helgins@5_0","1215598001658",false,0);
  }
{
    SNode paramType1;
    SNode paramType2;
    Iterator<SNode> paramType1_iterator=SLinkOperations.getTargets(subtype,"parameterType",true).iterator();
    Iterator<SNode> paramType2_iterator=SLinkOperations.getTargets(supertype,"parameterType",true).iterator();
    while (true) {
      if (!(paramType1_iterator.hasNext())) {
        break;
      }
      if (!(paramType2_iterator.hasNext())) {
        break;
      }
      paramType1=paramType1_iterator.next();
      paramType2=paramType2_iterator.next();
{
        SNode _nodeToCheck_1029348928467=equationInfo.getNodeWithError();
        TypeChecker.getInstance().getRuntimeSupport().createLessThanInequation(paramType2,paramType1,_nodeToCheck_1029348928467,null,"jetbrains.mps.closures.helgins@5_0","1215598001676",false,0);
      }
    }
  }
}
