{
  this.appendNewLine();
  ;
  ;
  if (SPropertyOperations.getBoolean(node,"isFinal")) {
    this.append("final ");
  }
  if (SPropertyOperations.getBoolean(node,"isAbstract")) {
    this.append("abstract ");
  }
  ;
  TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),SLinkOperations.getTarget(node,"returnType",true),this.getSNode());
  this.append(" ");
  this.append(SPropertyOperations.getString(node,"name"));
  this.append("(");
  if (ListSequence.fromList(SLinkOperations.getTargets(node,"parameter",true)).isNotEmpty()) {
    for (    SNode item : SLinkOperations.getTargets(node,"parameter",true)) {
      TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),item,this.getSNode());
      if (item != ListSequence.fromList(SLinkOperations.getTargets(node,"parameter",true)).last()) {
        this.append(", ");
      }
    }
  }
  this.append(")");
  if (ListSequence.fromList(SLinkOperations.getTargets(node,"throwsItem",true)).isNotEmpty()) {
    this.append(" throws ");
    if (ListSequence.fromList(SLinkOperations.getTargets(node,"throwsItem",true)).isNotEmpty()) {
      for (      SNode item : SLinkOperations.getTargets(node,"throwsItem",true)) {
        TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),item,this.getSNode());
        if (item != ListSequence.fromList(SLinkOperations.getTargets(node,"throwsItem",true)).last()) {
          this.append(", ");
        }
      }
    }
  }
  if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node),"jetbrains.mps.baseLanguage.structure.Interface") || SPropertyOperations.getBoolean(node,"isAbstract")) {
    this.append(";");
  }
 else {
    this.append(" {");
    this.increaseDepth();
    if ((SLinkOperations.getTarget(node,"body",true) != null)) {
      TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),SLinkOperations.getTarget(node,"body",true),this.getSNode());
    }
 else {
      assert(SLinkOperations.getTarget(node,"body",true) != null);
      this.appendNewLine();
      this.appendWithIndent("throw new RuntimeException(\"NOT IMPLEMENTED\");");
    }
    this.decreaseDepth();
    this.appendNewLine();
    this.appendWithIndent("}");
  }
  this.appendNewLine();
}
