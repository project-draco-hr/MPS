{
  MakeAssert.assertNotMake("anonymousClass",new ChangeModel(){
    @Override public void change(    SModel model){
      super.change(model);
      SPropertyOperations.set(Sequence.fromIterable(BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),ListSequence.fromList(SModelOperations.getRoots(model,"jetbrains.mps.baseLanguage.structure.Classifier")).first(),"jetbrains.mps.baseLanguage.structure.Classifier","call_methods_5292274854859311639",new Object[]{})).first(),"isAbstract","" + (true));
    }
  }
);
}
