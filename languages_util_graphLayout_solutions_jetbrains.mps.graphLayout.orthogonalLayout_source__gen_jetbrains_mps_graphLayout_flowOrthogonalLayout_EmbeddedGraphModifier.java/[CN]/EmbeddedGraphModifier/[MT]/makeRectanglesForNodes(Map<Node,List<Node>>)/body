{
  Map<Edge,Edge> modifiedEdges=MapSequence.<Edge,Edge>fromMap(new HashMap<Edge,Edge>());
  for (  Node node : SetSequence.<Node>fromSet(MapSequence.fromMap(nodesToProcess).keySet())) {
    MapSequence.<Node,Node[]>fromMap(myCornerNodes).put(node,new Node[4]);
    List<Node> nodes=MapSequence.<Node,List<Node>>fromMap(nodesToProcess).get(node);
    if (ListSequence.<Node>fromList(nodes).count() == 0) {
      makeRectangleForSingleNode(node,modifiedEdges);
    }
 else {
      makeRectangleForSplittedNode(node,MapSequence.<Node,List<Node>>fromMap(nodesToProcess).get(node));
    }
    if (SHOW_LOG > 0) {
      System.out.println("corner nodes for node " + node + ":");
      for (      Direction2D dir : Direction2D.values()) {
        System.out.println(dir + " = " + MapSequence.<Node,Node[]>fromMap(myCornerNodes).get(node)[dir.ordinal()]);
      }
    }
  }
  return modifiedEdges;
}
