{
{
    IMatchingPattern pattern_x583g4_a0d=HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.collections.structure.SequenceType");
    SNode coercedNode_x583g4_a0d=TypeChecker.getInstance().getRuntimeSupport().coerce_(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(),"inputSequence",true)),pattern_x583g4_a0d);
    if (coercedNode_x583g4_a0d != null) {
      SNode elementType=SLinkOperations.getTarget(coercedNode_x583g4_a0d,"elementType",true);
      if (SNodeOperations.isInstanceOf(elementType,"jetbrains.mps.baseLanguage.structure.ClassifierType")) {
        SNode classifier=SLinkOperations.getTarget(SNodeOperations.cast(elementType,"jetbrains.mps.baseLanguage.structure.ClassifierType"),"classifier",false);
        return classifier == SLinkOperations.getTarget(_quotation_createNode_x583g4_a0a0b0b0c0a0d_0(),"classifier",false) || classifier == SLinkOperations.getTarget(_quotation_createNode_x583g4_a0a0b0b0c0a0d(),"classifier",false);
      }
      return SNodeOperations.isInstanceOf(elementType,"jetbrains.mps.baseLanguage.structure.PrimitiveType") || SNodeOperations.isInstanceOf(elementType,"jetbrains.mps.baseLanguage.structure.ArrayType") || SNodeOperations.isInstanceOf(elementType,"jetbrains.mps.baseLanguage.structure.StringType");
    }
 else {
      return false;
    }
  }
}
