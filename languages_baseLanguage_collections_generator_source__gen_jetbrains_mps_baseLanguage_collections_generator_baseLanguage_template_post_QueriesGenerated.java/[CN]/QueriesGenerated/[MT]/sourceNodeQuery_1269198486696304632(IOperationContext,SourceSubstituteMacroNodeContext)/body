{
{
    IMatchingPattern pattern_x583g4_a0m=HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.collections.structure.SequenceType");
    SNode coercedNode_x583g4_a0m=TypeChecker.getInstance().getRuntimeSupport().coerce_(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(),"inputSequence",true)),pattern_x583g4_a0m);
    if (coercedNode_x583g4_a0m != null) {
      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(coercedNode_x583g4_a0m,"elementType",true),"jetbrains.mps.baseLanguage.structure.PrimitiveType") || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(coercedNode_x583g4_a0m,"elementType",true),"jetbrains.mps.baseLanguage.structure.ArrayType")) {
        return SLinkOperations.getTarget(coercedNode_x583g4_a0m,"elementType",true);
      }
      SNode ct=ClassifierTypeUtil.getTypeCoercedToClassifierType(SLinkOperations.getTarget(coercedNode_x583g4_a0m,"elementType",true));
      if (SNodeOperations.isInstanceOf(ct,"jetbrains.mps.baseLanguage.structure.UpperBoundType")) {
        return SLinkOperations.getTarget(SNodeOperations.cast(ct,"jetbrains.mps.baseLanguage.structure.UpperBoundType"),"bound",true);
      }
      if (!(SNodeOperations.isInstanceOf(ct,"jetbrains.mps.baseLanguage.structure.ClassifierType") || SNodeOperations.isInstanceOf(ct,"jetbrains.mps.baseLanguage.structure.TypeVariableReference"))) {
        for (        SNode supt : TypeChecker.getInstance().getSubtypingManager().collectImmediateSupertypes(ct)) {
          ct=ClassifierTypeUtil.getTypeCoercedToClassifierType((SNode)supt);
          if (SNodeOperations.isInstanceOf(ct,"jetbrains.mps.baseLanguage.structure.ClassifierType") || SNodeOperations.isInstanceOf(ct,"jetbrains.mps.baseLanguage.structure.TypeVariableReference")) {
            break;
          }
        }
      }
      return ct;
    }
 else {
    }
  }
  return _quotation_createNode_x583g4_a1a21();
}
