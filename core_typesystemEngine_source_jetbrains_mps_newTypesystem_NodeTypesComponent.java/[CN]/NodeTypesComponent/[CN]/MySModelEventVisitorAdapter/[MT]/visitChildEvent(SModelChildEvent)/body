{
  markDependentNodesForInvalidation(event.getChild(),myTypeSystemComponent);
  markDependentNodesForInvalidation(event.getParent(),myTypeSystemComponent);
  markDependentNodesForInvalidation(event.getChild(),myNonTypeSystemComponent);
  markDependentNodesForInvalidation(event.getParent(),myNonTypeSystemComponent);
  List<SReference> references=new ArrayList<SReference>();
  SNode child=event.getChild();
  references.addAll((List<SReference>)jetbrains.mps.util.SNodeOperations.getReferences(child));
  for (  SNode descendant : (List<SNode>)(List)jetbrains.mps.util.SNodeOperations.getDescendants(child,null)) {
    references.addAll((List<SReference>)jetbrains.mps.util.SNodeOperations.getReferences(descendant));
    if (event.isRemoved()) {
      markDependentNodesForInvalidation(descendant,myNonTypeSystemComponent);
      markDependentNodesForInvalidation(descendant,myTypeSystemComponent);
    }
  }
  for (  SReference reference : references) {
    SNode targetNode=reference.getTargetNodeSilently();
    if (targetNode != null) {
      markDependentNodesForInvalidation(targetNode,myNonTypeSystemComponent);
    }
  }
}
