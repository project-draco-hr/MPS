{
  SNode arg=SLinkOperations.getTarget(switchStatement,MetaAdapterFactory.getContainmentLink(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x527e98a73771f42dL,0x527e98a73771f430L,"expression"));
  if (arg == null) {
    return;
  }
  SNode argType=TypeChecker.getInstance().getTypeOf(arg);
  if (SNodeOperations.isInstanceOf(argType,MetaAdapterFactory.getConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x110f9b63680L,"jetbrains.mps.lang.smodel.structure.ConceptNodeType")) || SNodeOperations.isInstanceOf(argType,MetaAdapterFactory.getConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x108f968b3caL,"jetbrains.mps.lang.smodel.structure.SNodeType"))) {
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(arg,"Do not use with arguments of type conceptNode<> and node<>. Use .asConcept and .concept operations to cast to concept<>","r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)","6039268229364276320",null,errorTarget);
    }
    return;
  }
  if (!((SNodeOperations.isInstanceOf(argType,MetaAdapterFactory.getConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x5cab42cd97571ceeL,"jetbrains.mps.lang.smodel.structure.SConceptType"))))) {
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(arg,"Argument of concept switch should be of type concept<>","r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)","5944356402132966789",null,errorTarget);
    }
  }
}
