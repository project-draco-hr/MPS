{
  if (myThis.getDevkitDir().length() == 0) {
    myThis.getDialog().setErrorText("Enter DevKit Directory");
    return;
  }
  if (myThis.getDevkitName().length() == 0) {
    myThis.getDialog().setErrorText("Enter DevKit Name");
    return;
  }
  final String devkitPath=myThis.getDevkitDir() + File.separator + myThis.getDevkitName()+ MPSExtentions.DOT_DEVKIT;
  if (new File(devkitPath).exists()) {
    myThis.getDialog().setErrorText("File " + devkitPath + " already exists");
    return;
  }
  File dir=new File(devkitPath);
  String message=NewModuleCheckUtil.checkModuleDirectory(dir,MPSExtentions.DOT_DEVKIT,"DevKit");
  if (message != null) {
    myThis.getDialog().setErrorText(message);
    return;
  }
  myThis.getDialog().dispose();
  Project ideaProject=myThis.getProject().getProject();
  final DevKit[] localResult=new DevKit[1];
  final Wrappers._T<DevKit> localResult2=new Wrappers._T<DevKit>();
  ModelAccess.instance().runWriteActionWithProgressSynchronously(new Progressive(){
    public void run(    ProgressIndicator indicator){
      indicator.setIndeterminate(true);
      localResult2.value=myThis.createNewDevKit(FileSystem.getInstance().getFileByPath(devkitPath));
    }
  }
,"Creating",false,ideaProject);
  myThis.setResult(localResult[0]);
}
