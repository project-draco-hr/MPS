{
  String message=NewModuleUtil.check(MPSExtentions.DOT_SOLUTION,myThis.getDevkitName(),myThis.getDevkitDir());
  if (message != null) {
    myThis.getDialog().setErrorText(message);
    return;
  }
  myThis.getDialog().dispose();
  Project ideaProject=myThis.getProject().getProject();
  ModelAccess.instance().runWriteActionWithProgressSynchronously(new ModelCommandExecutor.RunnableWithProgress(){
    public void run(    ProgressMonitor indicator){
      myThis.setResult(NewModuleUtil.createModule(MPSExtentions.DOT_DEVKIT,myThis.getDevkitName(),myThis.getDevkitDir(),myThis.getProject(),new _FunctionTypes._return_P3_E0<DevKit,String,IFile,MPSProject>(){
        public DevKit invoke(        String s,        IFile f,        MPSProject p){
          return NewModuleUtil.createNewDevkit(s,f,p);
        }
      }
,new _FunctionTypes._void_P1_E0<ModuleDescriptor>(){
        public void invoke(        ModuleDescriptor d){
        }
      }
,true));
    }
  }
,"Creating",false,ideaProject.getComponent(MPSProject.class));
}
