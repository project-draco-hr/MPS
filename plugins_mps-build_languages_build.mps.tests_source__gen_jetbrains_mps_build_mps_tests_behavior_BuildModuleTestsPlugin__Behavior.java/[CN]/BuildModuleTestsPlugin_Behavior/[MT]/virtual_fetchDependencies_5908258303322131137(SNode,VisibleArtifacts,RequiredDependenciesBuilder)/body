{
  SNode project=artifacts.getProject();
  DependenciesHelper helper=new DependenciesHelper(artifacts.getGenContext(),project);
  SNode originalProject=SNodeOperations.as(DependenciesHelper.getOriginalNode(project,artifacts.getGenContext()),"jetbrains.mps.build.structure.BuildProject");
  SNode mpsTestModule=SNodeOperations.as(BehaviorReflection.invokeVirtual(Scope.class,originalProject,"virtual_getScope_7722139651431880752",new Object[]{SConceptOperations.findConceptDeclaration("jetbrains.mps.build.structure.BuildSource_JavaModule"),"parts",0}).resolve(originalProject,"mps-test"),"jetbrains.mps.build.structure.BuildSource_JavaModule");
  if ((mpsTestModule != null)) {
    SNode mpsTestJar=SNodeOperations.as(artifacts.findArtifact(mpsTestModule),"jetbrains.mps.build.structure.BuildLayout_Node");
    if ((mpsTestJar != null)) {
      helper.artifacts().put("mps-test-folder",SNodeOperations.getParent(mpsTestJar));
      helper.artifacts().put("mps-test",mpsTestJar);
      builder.add(mpsTestJar,mpsTestModule);
    }
  }
}
