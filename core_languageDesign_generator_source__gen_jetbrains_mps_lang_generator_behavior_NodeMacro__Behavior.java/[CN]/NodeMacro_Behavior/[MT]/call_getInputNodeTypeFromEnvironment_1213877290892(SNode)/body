{
  SNode ancestor=SNodeOperations.getAncestor(thisNode,null,false,false);
  if (SNodeOperations.isInstanceOf(ancestor,"jetbrains.mps.lang.generator.structure.TemplateDeclaration")) {
    return SLinkOperations.getTarget(SNodeOperations.cast(ancestor,"jetbrains.mps.lang.generator.structure.TemplateDeclaration"),"applicableConcept",false);
  }
  if (SNodeOperations.isInstanceOf(ancestor,"jetbrains.mps.lang.generator.structure.BaseMappingRule")) {
    return SLinkOperations.getTarget(SNodeOperations.cast(ancestor,"jetbrains.mps.lang.generator.structure.BaseMappingRule"),"applicableConcept",false);
  }
  SNode rootAnnotation=SNodeOperations.getContainingRoot(thisNode).getAttribute(RootTemplateAnnotation_AnnotationLink.ROOT_TEMPLATE_ANNOTATION);
  return SLinkOperations.getTarget(SNodeOperations.cast(rootAnnotation,"jetbrains.mps.lang.generator.structure.RootTemplateAnnotation"),"applicableConcept",false);
}
