{
  this.addNodeById("1230053266654");
  this.addNodeById("1230053266673");
  InlineVariableRefactoring ref=InlineVariableRefactoring.createRefactoring(SNodeOperations.cast(this.getNodeById("1230053266662"),"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration"));
  ref.doRefactoring();
  Assert.assertNull("nodes '" + SNodeOperations.cast(this.getNodeById("1230053266655"),"jetbrains.mps.baseLanguage.structure.ClassConcept") + "' and '"+ SNodeOperations.cast(this.getNodeById("1230053266674"),"jetbrains.mps.baseLanguage.structure.ClassConcept")+ "' do not match!",NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230053266655"),"jetbrains.mps.baseLanguage.structure.ClassConcept")),ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230053266674"),"jetbrains.mps.baseLanguage.structure.ClassConcept"))));
}
