{
  SNode ann=ListSequence.<SNode>fromList(SLinkOperations.getTargets(SNodeOperations.as(SNodeOperations.getContainingRoot(_this),"jetbrains.mps.baseLanguage.structure.ClassConcept"),"annotation",true)).findFirst(new IWhereFilter<SNode>(){
    public boolean accept(    SNode ai){
      return SLinkOperations.getTarget(ai,"annotation",false) == SLinkOperations.getTarget(new VariantsUtil.QuotationClass_hb8iy0_a0a0a0a0a0a0f().createNode(),"classifier",false);
    }
  }
);
  SNode val=SLinkOperations.getTarget(ListSequence.<SNode>fromList(SLinkOperations.getTargets(ann,"value",true)).findFirst(new IWhereFilter<SNode>(){
    public boolean accept(    SNode v){
      return "value".equals(SPropertyOperations.getString(SLinkOperations.getTarget(v,"key",false),"name"));
    }
  }
),"value",true);
  return variant.equalsIgnoreCase(SPropertyOperations.getString(SNodeOperations.as(val,"jetbrains.mps.baseLanguage.structure.StringLiteral"),"value"));
}
