{
  String pattern=ModelAccess.instance().runReadAction(new Computable<String>(){
    @Override public String compute(){
      final BLDebugInfoCache cache=BLDebugInfoCache.getInstance();
      SModel model=node.getModel();
      DebugInfo debugInfo=cache.get(model.getModelDescriptor());
      PositionInfo positionInfo=debugInfo.getPositionForNode(node.getId());
      if (positionInfo != null) {
        String fileName=positionInfo.getFileName();
        if (fileName.endsWith(".java")) {
          fileName=fileName.substring(0,fileName.length() - ".java".length());
        }
        String result=model.getLongName() + '.' + fileName;
        return result;
      }
 else {
        return null;
      }
    }
  }
);
  if (pattern != null) {
    ClassPrepareRequest prepareRequest=createClassPrepareRequest(requestor,pattern);
    registerRequest(requestor,prepareRequest);
    prepareRequest.enable();
  }
}
