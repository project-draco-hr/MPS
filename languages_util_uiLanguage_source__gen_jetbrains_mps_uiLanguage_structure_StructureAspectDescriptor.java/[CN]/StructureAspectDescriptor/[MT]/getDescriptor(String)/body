{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.ActionHandler","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.uiLanguage.structure.IComponentPart"},new String[]{},new String[]{},new String[]{"handler"},new boolean[]{false});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.AddListenerOperation","jetbrains.mps.baseLanguage.structure.BinaryOperation",false,new String[]{"jetbrains.mps.baseLanguage.structure.BinaryOperation"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.AfterConstructionBlock","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{"body"},new boolean[]{false});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.AttributeDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.classifiers.structure.IMember"},new String[]{},new String[]{},new String[]{"type","initializer","onChange"},new boolean[]{false,false,false});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.AttributeReferenceOperation","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.classifiers.structure.IMemberOperation"},new String[]{},new String[]{"attributeDeclaration"},new String[]{},new boolean[]{});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.AttributeValue","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.uiLanguage.structure.IComponentPart"},new String[]{},new String[]{"attribute"},new String[]{"value"},new boolean[]{false});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.BeanCreator","jetbrains.mps.baseLanguage.structure.AbstractCreator",false,new String[]{"jetbrains.mps.baseLanguage.structure.AbstractCreator"},new String[]{},new String[]{"constructor"},new String[]{"parameter"},new boolean[]{true});
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.BeanDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.classifiers.structure.IClassifier","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{"attribute","method","constructor"},new boolean[]{true,true,true});
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.BeanType","jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType",false,new String[]{"jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType"},new String[]{},new String[]{"bean"},new String[]{},new boolean[]{});
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.BeforeConstructionBlock","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{"body"},new boolean[]{false});
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.BindExpression","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{},new String[]{"expression"},new boolean[]{false});
case 11:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.CellRendererAttribute","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.uiLanguage.structure.IComponentPart"},new String[]{},new String[]{},new String[]{"renderer"},new boolean[]{false});
case 12:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.ComponentController","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.baseLanguage.classifiers.structure.IClassifierPart"},new String[]{},new String[]{"component"},new String[]{"attribute","event","componentMethod","afterConstruction","beforeConstruction"},new boolean[]{true,true,true,false,false});
case 13:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.ComponentCreator","jetbrains.mps.baseLanguage.structure.AbstractCreator",false,new String[]{"jetbrains.mps.baseLanguage.structure.AbstractCreator"},new String[]{},new String[]{"componentDeclaration"},new String[]{},new boolean[]{});
case 14:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.ComponentDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.classifiers.structure.IClassifier"},new String[]{"stub","abstract","actionComponent"},new String[]{"extendedComponent","mapTo"},new String[]{"root","rendererInfo"},new boolean[]{false,false});
case 15:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.ComponentInstance","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.uiLanguage.structure.IComponentPart","jetbrains.mps.uiLanguage.structure.IComponentInstance","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{"componentDeclaration"},new String[]{},new boolean[]{});
case 16:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.ComponentReference","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"component"},new String[]{},new boolean[]{});
case 17:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.ComponentType","jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType",false,new String[]{"jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType"},new String[]{},new String[]{"component"},new String[]{},new boolean[]{});
case 18:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.EventAccessOperation","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.classifiers.structure.IMemberOperation"},new String[]{},new String[]{"event"},new String[]{},new boolean[]{});
case 19:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.EventDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.classifiers.structure.IMember","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{"parameter","initializer"},new boolean[]{false,false});
case 20:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.EventHandlerReference","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"handler"},new String[]{},new boolean[]{});
case 21:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.Form","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.uiLanguage.structure.IComponentPart","jetbrains.mps.uiLanguage.structure.IComponentInstance"},new String[]{},new String[]{},new String[]{"part"},new boolean[]{true});
case 22:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.FormPart","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"label"},new String[]{},new String[]{"content"},new boolean[]{false});
case 23:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.Grid","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.uiLanguage.structure.IComponentInstance"},new String[]{},new String[]{},new String[]{"row"},new boolean[]{true});
case 24:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.GridRow","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{"component"},new boolean[]{true});
case 25:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.IComponentInstance",null,true,new String[]{"jetbrains.mps.uiLanguage.structure.IComponentPart"},new String[]{},new String[]{},new String[]{"content"},new boolean[]{true});
case 26:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.IComponentPart",null,true,new String[]{},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 27:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.InlineEventHandler","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.uiLanguage.structure.IComponentPart"},new String[]{},new String[]{"event"},new String[]{"handler"},new boolean[]{false});
case 28:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.InlineRenderer","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.uiLanguage.structure.IComponentPart"},new String[]{},new String[]{},new String[]{"renderer"},new boolean[]{false});
case 29:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.LayoutConstraint","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.uiLanguage.structure.IComponentPart"},new String[]{},new String[]{},new String[]{"constraint"},new boolean[]{false});
case 30:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.ListElements","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.uiLanguage.structure.IComponentPart"},new String[]{},new String[]{},new String[]{"value"},new boolean[]{false});
case 31:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.PngIcon","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"iconData"},new String[]{},new String[]{},new boolean[]{});
case 32:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.RaiseInternalStatement","jetbrains.mps.baseLanguage.structure.Statement",false,new String[]{"jetbrains.mps.baseLanguage.structure.Statement"},new String[]{},new String[]{},new String[]{"argument"},new boolean[]{false});
case 33:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.RaiseOperation","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.structure.IOperation"},new String[]{},new String[]{},new String[]{"argument"},new boolean[]{false});
case 34:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.RemoveListenerOperation","jetbrains.mps.baseLanguage.structure.BinaryOperation",false,new String[]{"jetbrains.mps.baseLanguage.structure.BinaryOperation"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 35:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.RenderingObject","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 36:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.Scroller","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.uiLanguage.structure.IComponentInstance"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 37:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.StandardDialog","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.uiLanguage.structure.IComponentInstance"},new String[]{},new String[]{},new String[]{"rootComponent","button"},new boolean[]{false,true});
case 38:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.StandardDialogButton","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"text","isDefault"},new String[]{},new String[]{"handler"},new boolean[]{false});
case 39:
return new CompiledConceptDescriptor("jetbrains.mps.uiLanguage.structure.StubCellRendererInfo","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"cellRendererSetter"},new String[]{},new boolean[]{});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
