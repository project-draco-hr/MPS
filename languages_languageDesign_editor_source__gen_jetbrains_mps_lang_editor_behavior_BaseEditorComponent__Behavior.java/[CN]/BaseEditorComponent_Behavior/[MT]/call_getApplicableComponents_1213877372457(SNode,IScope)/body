{
  final SNode conceptDeclaration=BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),thisNode,"virtual_getConceptDeclaration_7055725856388417603",new Object[]{});
  SModule contextModule=SNodeOperations.getModel(thisNode).getModelDescriptor().getModule();
  Set<Language> contextLanguages=SetSequence.fromSet(new HashSet<Language>());
  for (  SModule module : Sequence.fromIterable(contextModule.getModuleScope().getModules())) {
    if (module instanceof Language) {
      SetSequence.fromSet(contextLanguages).addElement((Language)module);
    }
  }
  Iterable<SNode> editorComponents=SetSequence.fromSet(contextLanguages).select(new ISelector<Language,EditableSModelDescriptor>(){
    public EditableSModelDescriptor select(    Language it){
      return LanguageAspect.EDITOR.get(it);
    }
  }
).where(new IWhereFilter<EditableSModelDescriptor>(){
    public boolean accept(    EditableSModelDescriptor it){
      return it != null;
    }
  }
).translate(new ITranslator2<EditableSModelDescriptor,SNode>(){
    public Iterable<SNode> translate(    EditableSModelDescriptor it){
      return (Iterable<SNode>)it.getRootNodes();
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.lang.editor.structure.EditorComponentDeclaration");
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(it,"jetbrains.mps.lang.editor.structure.EditorComponentDeclaration");
    }
  }
);
  return Sequence.fromIterable(editorComponents).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SConceptOperations.isSuperConceptOf(BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),it,"virtual_getConceptDeclaration_7055725856388417603",new Object[]{}),NameUtil.nodeFQName(conceptDeclaration));
    }
  }
).toListSequence();
}
