{
  final SubstituteInfo substituteInfo=cell.getSubstituteInfo();
  if (substituteInfo == null) {
    return false;
  }
  if (cell instanceof EditorCell_Collection) {
    return false;
  }
  final String pattern=cell.renderText().getText();
  if (pattern.equals(""))   return false;
  List<SubstituteAction> matchingActions=ModelAccess.instance().runReadAction(new Computable<List<SubstituteAction>>(){
    @Override public List<SubstituteAction> compute(){
      return TypeContextManager.getInstance().runTypeCheckingComputation((ITypeContextOwner)cell.getEditorComponent(),cell.getEditorComponent().getEditedNode(),new Computation<List<SubstituteAction>>(){
        @Override public List<SubstituteAction> compute(        TypeCheckingContext context){
          return substituteInfo.getMatchingActions(pattern,strict);
        }
      }
);
    }
  }
);
  if (matchingActions.size() == 0 && canActivatePopup) {
    return false;
  }
  if (matchingActions.size() != 1) {
    if (canActivatePopup) {
      ((EditorComponent)cell.getEditorComponent()).activateNodeSubstituteChooser(cell,false);
    }
 else {
      return false;
    }
    return true;
  }
  matchingActions.get(0).substitute(cell.getContext(),pattern);
  return true;
}
