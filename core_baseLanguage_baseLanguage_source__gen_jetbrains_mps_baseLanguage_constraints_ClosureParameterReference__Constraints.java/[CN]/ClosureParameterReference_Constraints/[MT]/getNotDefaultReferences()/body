{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("closureParameter",new BaseReferenceConstraintsDescriptor("closureParameter",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          SNode enclosingClosure=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.Closure",true,false);
          return (Iterable<SNode>)ListSequence.fromList(SNodeOperations.getChildren(enclosingClosure)).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return SNodeOperations.isInstanceOf(it,"jetbrains.mps.baseLanguage.structure.ClosureParameter");
            }
          }
);
        }
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_j093wa_a0a1a0a0a1a0b0a1a0;
        }
      }
;
    }
  }
);
  return references;
}
