{
  if (jniSignature.equals("Ljava/lang/Object;")) {
    return true;
  }
  if (what.signature().equals(jniSignature)) {
    return true;
  }
  return EvaluationUtils.handleInvocationExceptions(new EvaluationUtils.Invocatable<Boolean>(){
    @Override public Boolean invoke() throws InvocationException, InvalidTypeException, ClassNotLoadedException, IncompatibleThreadStateException, EvaluationException {
      if (jniSignature.startsWith("[")) {
        if (!((what instanceof ArrayType))) {
          return false;
        }
        return EvaluationUtilsImpl.this.instanceOf(((ArrayType)what).componentType(),jniSignature.substring(1),machine);
      }
 else       if (jniSignature.startsWith("L")) {
        if (!((what instanceof ClassType))) {
          return false;
        }
        ReferenceType type=findClassTypeSilently(jniSignature.substring(1,jniSignature.length() - 1),machine);
        if (type == null) {
          return false;
        }
        ClassType whatClassType=(ClassType)what;
        if (type instanceof InterfaceType) {
          return whatClassType.allInterfaces().contains((InterfaceType)type);
        }
        do {
          if (type.equals(whatClassType)) {
            return true;
          }
          whatClassType=whatClassType.superclass();
        }
 while (whatClassType != null);
        return false;
      }
      return false;
    }
  }
);
}
