{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("call",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      List<SNode> importedNodes=SModelOperations.getNodesIncludingImported(_context.getModel(),operationContext.getScope(),"jetbrains.mps.build.generictasks.structure.TaskCall");
      List<SNode> newScope=ListSequence.fromList(new ArrayList<SNode>());
      for (      SNode node : ListSequence.fromList(importedNodes)) {
        SNode gcall=SNodeOperations.cast(node,"jetbrains.mps.build.generictasks.structure.TaskCall");
        if (TaskCall_Behavior.call_isReferencedAndOfDeclaration_353793545802644027(gcall,"path")) {
          ListSequence.fromList(newScope).addElement(gcall);
        }
      }
      return newScope;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:71eee63a-b16f-40f8-920d-8fd0fe7dc8a1(jetbrains.mps.build.generictasks.constraints)","353793545802855004");
    }
  }
);
  return result;
}
