{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(0xcf935df46994e9cL,0xa132fa109541cba3L,0x2c4467914644b6e3L,0x2c4467914644b6e4L),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xcf935df46994e9cL,0xa132fa109541cba3L,0x2c4467914644b6e3L,0x2c4467914644b6e4L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_vinp0m_a0a0a0a0a1a0b0a1a1;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
{
            Scope scope=Scope.getScope(_context.getContextNode(),_context.getContextRole(),_context.getPosition(),SNodeOperations.getNode("r:0353b795-df17-4050-9687-ee47eeb7094f(jetbrains.mps.build.mps.structure)","3189788309731840247"));
            return (scope == null ? new EmptyScope() : scope);
          }
        }
      }
;
    }
  }
);
  return references;
}
