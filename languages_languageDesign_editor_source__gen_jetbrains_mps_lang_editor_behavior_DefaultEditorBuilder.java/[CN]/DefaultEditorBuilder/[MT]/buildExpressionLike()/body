{
  if (conceptDeclaration == null) {
    return;
  }
  pushCollection();
  addLabel(camelToLabel(SPropertyOperations.getString(conceptDeclaration,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"))));
  final SNode nameProperty=getNameProperty(conceptDeclaration);
  if ((nameProperty != null)) {
    addProperty(nameProperty);
  }
  Iterable<SNode> props=ListSequence.fromList(AbstractConceptDeclaration_Behavior.call_getPropertyDeclarations_1213877394546(conceptDeclaration)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return it != nameProperty && SNodeOperations.getParent(it) != SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)","1133920641626");
    }
  }
);
  List<SNode> children=ListSequence.fromList(AbstractConceptDeclaration_Behavior.call_getLinkDeclarations_1213877394480(conceptDeclaration)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.getParent(it) != SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)","1133920641626");
    }
  }
).toListSequence();
  List<SNode> references=ListSequence.fromList(children).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SPropertyOperations.hasValue(it,MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1071489288298l,1071599937831l,"metaClass"),"reference","reference") || isSmartReference(it);
    }
  }
).toListSequence();
  ListSequence.fromList(children).removeSequence(ListSequence.fromList(references));
  buildHeader(references);
  addPunctuation("(");
  setMatchingLabel("body-paren");
  noSpace();
  boolean first=true;
  for (  SNode property : Sequence.fromIterable(props)) {
    if (!(first)) {
      addPunctuation(",");
    }
    addLabel(camelToLabel(SPropertyOperations.getString(property,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"))));
    addPunctuation(":");
    addProperty(property);
    first=false;
  }
  for (  SNode linkDeclaration : ListSequence.fromList(children).sort(new ISelector<SNode,Boolean>(){
    public Boolean select(    SNode it){
      return LinkDeclaration_Behavior.call_isSingular_1213877254557(it);
    }
  }
,false)) {
    if (!(first)) {
      addPunctuation(",");
    }
    addLabel(camelToLabel(SPropertyOperations.getString(linkDeclaration,MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1071489288298l,1071599776563l,"role"))));
    if (LinkDeclaration_Behavior.call_isSingular_1213877254557(linkDeclaration)) {
      addPunctuation(":");
      addRefNode(linkDeclaration);
    }
 else {
      addPunctuation("(");
      setMatchingLabel("paren-" + SPropertyOperations.getString(linkDeclaration,MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1071489288298l,1071599776563l,"role")));
      noSpace();
      addRefNodeList(linkDeclaration,null);
      addPunctuation(")");
      setMatchingLabel("paren-" + SPropertyOperations.getString(linkDeclaration,MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1071489288298l,1071599776563l,"role")));
    }
    first=false;
  }
  addPunctuation(")");
  setMatchingLabel("body-paren");
  popCollection();
}
