{
  List<org.jetbrains.mps.openapi.persistence.ModelRoot> paths=ListSequence.fromListWithValues(new ArrayList<org.jetbrains.mps.openapi.persistence.ModelRoot>(),Module_Behavior.call_getModule_1213877515148(thisNode).getModelRoots());
  if (Module_Behavior.call_getModule_1213877515148(thisNode) instanceof Language) {
    ListSequence.fromList(paths).addSequence(Sequence.fromIterable(((Iterable<Generator>)((Language)Module_Behavior.call_getModule_1213877515148(thisNode)).getGenerators())).translate(new ITranslator2<Generator,org.jetbrains.mps.openapi.persistence.ModelRoot>(){
      public Iterable<org.jetbrains.mps.openapi.persistence.ModelRoot> translate(      Generator it){
        return it.getModelRoots();
      }
    }
));
  }
  paths=ListSequence.fromList(paths).where(new IWhereFilter<org.jetbrains.mps.openapi.persistence.ModelRoot>(){
    public boolean accept(    org.jetbrains.mps.openapi.persistence.ModelRoot it){
      return it instanceof DefaultModelRoot;
    }
  }
).toListSequence();
  List<SNode> pathHolders=Module_Behavior.call_getPathHolders_1213877515000(thisNode,ListSequence.fromList(paths).translate(new ITranslator2<org.jetbrains.mps.openapi.persistence.ModelRoot,String>(){
    public Iterable<String> translate(    org.jetbrains.mps.openapi.persistence.ModelRoot it){
      Iterable<String> files=(((DefaultModelRoot)it)).getFiles(DefaultModelRoot.SOURCE_ROOTS);
      return Sequence.fromIterable(files).select(new ISelector<String,String>(){
        public String select(        String it){
          return it.replace(File.separator,Util.SEPARATOR);
        }
      }
);
    }
  }
).distinct().toListSequence(),true);
  return ListSequence.fromList(pathHolders).sort(new ISelector<SNode,String>(){
    public String select(    SNode it){
      return SPropertyOperations.getString(it,"fullPath");
    }
  }
,true).toListSequence();
}
