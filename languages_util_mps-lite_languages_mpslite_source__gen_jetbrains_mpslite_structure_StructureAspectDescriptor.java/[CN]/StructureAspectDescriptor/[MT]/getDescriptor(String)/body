{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a,conceptFqName)) {
case 0:
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.AbstractConceptReference",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 1:
  return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.BinaryOperationConcept",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mpslite.structure.IMPSLiteConcept"},new String[]{"jetbrains.mpslite.structure.IMPSLiteConcept"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 2:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.BlockBodyPart",new String[]{"jetbrains.mpslite.structure.ChildPart"},new String[]{"jetbrains.mpslite.structure.ChildPart","jetbrains.mpslite.structure.LinePart"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 3:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.BlockConcept",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mpslite.structure.IMPSLiteConcept"},new String[]{"jetbrains.mpslite.structure.IMPSLiteConcept"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 4:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.BlockReference",new String[]{"jetbrains.mpslite.structure.MPSLiteConceptReference"},new String[]{"jetbrains.mpslite.structure.AbstractConceptReference","jetbrains.mpslite.structure.MPSLiteConceptReference"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 5:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.ChildPart",new String[]{"jetbrains.mpslite.structure.LinePart"},new String[]{"jetbrains.mpslite.structure.LinePart"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 6:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.ConceptContainer",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 7:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.ConcreteChildPart",new String[]{"jetbrains.mpslite.structure.ChildPart","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"jetbrains.mpslite.structure.ChildPart","jetbrains.mpslite.structure.LinePart"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 8:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.ConcretePropertyPart",new String[]{"jetbrains.mpslite.structure.PropertyPart","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"jetbrains.mpslite.structure.LinePart","jetbrains.mpslite.structure.PropertyPart"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 9:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.ConcreteReferencePart",new String[]{"jetbrains.mpslite.structure.ReferencePart","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"jetbrains.mpslite.structure.LinePart","jetbrains.mpslite.structure.ReferencePart"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 10:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.ConstantLinePart",new String[]{"jetbrains.mpslite.structure.LinePart"},new String[]{"jetbrains.mpslite.structure.LinePart"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 11:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.ExpressionConcept",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mpslite.structure.IMPSLiteConcept"},new String[]{"jetbrains.mpslite.structure.IMPSLiteConcept"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 12:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.FeatureAccessConcept",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mpslite.structure.IMPSLiteConcept"},new String[]{"jetbrains.mpslite.structure.IMPSLiteConcept"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 13:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.IMPSLiteConcept",new String[]{"jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.INamedConcept"});
case 14:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.IndentLinePart",new String[]{"jetbrains.mpslite.structure.LinePart"},new String[]{"jetbrains.mpslite.structure.LinePart"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 15:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.Line",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 16:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.LineList",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 17:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.LinePart",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 18:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.MPSLiteConceptDeclaration",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mpslite.structure.IMPSLiteConcept"},new String[]{"jetbrains.mpslite.structure.IMPSLiteConcept"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 19:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.MPSLiteConceptReference",new String[]{"jetbrains.mpslite.structure.AbstractConceptReference"},new String[]{"jetbrains.mpslite.structure.AbstractConceptReference"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 20:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.NamePropertyNamePart",new String[]{"jetbrains.mpslite.structure.PropertyPart"},new String[]{"jetbrains.mpslite.structure.LinePart","jetbrains.mpslite.structure.PropertyPart"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 21:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.OptionalPart",new String[]{"jetbrains.mpslite.structure.LinePart"},new String[]{"jetbrains.mpslite.structure.LinePart"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 22:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.PropertyPart",new String[]{"jetbrains.mpslite.structure.LinePart"},new String[]{"jetbrains.mpslite.structure.LinePart"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 23:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.ReferencePart",new String[]{"jetbrains.mpslite.structure.LinePart"},new String[]{"jetbrains.mpslite.structure.LinePart"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 24:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.RegularConceptReference",new String[]{"jetbrains.mpslite.structure.AbstractConceptReference"},new String[]{"jetbrains.mpslite.structure.AbstractConceptReference"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 25:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.StatementConcept",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mpslite.structure.IMPSLiteConcept"},new String[]{"jetbrains.mpslite.structure.IMPSLiteConcept"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 26:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.TypePart",new String[]{"jetbrains.mpslite.structure.ChildPart"},new String[]{"jetbrains.mpslite.structure.ChildPart","jetbrains.mpslite.structure.LinePart"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 27:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mpslite.structure.VariableConcept",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mpslite.structure.IMPSLiteConcept"},new String[]{"jetbrains.mpslite.structure.IMPSLiteConcept"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
default :
return null;
}
}
