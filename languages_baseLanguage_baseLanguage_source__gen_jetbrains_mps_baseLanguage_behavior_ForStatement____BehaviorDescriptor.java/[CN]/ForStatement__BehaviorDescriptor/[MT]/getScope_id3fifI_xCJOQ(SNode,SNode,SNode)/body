{
  if (SConceptOperations.isExactly(SNodeOperations.asSConcept(kind),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37a7f6eL,"jetbrains.mps.baseLanguage.structure.VariableDeclaration"))) {
    List<SNode> variables=new ArrayList<SNode>();
    if (!(ScopeUtils.comeFrom("variable",__thisNode__,child))) {
      ListSequence.fromList(variables).addElement(SLinkOperations.getTarget(__thisNode__,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10a697996feL,0x10a6979f36bL,"variable")));
      if (ScopeUtils.comeFrom("additionalVar",__thisNode__,child)) {
        for (        SNode variable : SLinkOperations.getChildren(__thisNode__,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10a698082feL,0xe5318742b9d1411L,"additionalVar"))) {
          if (variable == child) {
            break;
          }
          ListSequence.fromList(variables).addElement(variable);
        }
      }
 else {
        ListSequence.fromList(variables).addSequence(ListSequence.fromList(SLinkOperations.getChildren(__thisNode__,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10a698082feL,0xe5318742b9d1411L,"additionalVar"))));
      }
    }
    return Scopes.forVariables(kind,variables,ScopeUtils.lazyParentScope(__thisNode__,kind));
  }
  return AbstractForStatement__BehaviorDescriptor.getScope_id3fifI_xCJOQ.invokeSpecial(__thisNode__,kind,child);
}
