{
  List<INodeSubstituteAction> result=ListSequence.fromList(new ArrayList<INodeSubstituteAction>());
{
    Calculable calc=new Calculable(){
      public Object calculate(){
        List<SNode> parameters=ListSequence.fromList(new ArrayList<SNode>());
        if (SNodeOperations.getAncestor(_context.getParentNode(),"jetbrains.mps.lang.intentions.structure.ParameterizedIntentionDeclaration",false,false) != null) {
          ListSequence.fromList(parameters).addElement(SNodeOperations.getConceptDeclaration(SConceptOperations.createNewNode("jetbrains.mps.lang.intentions.structure.IntentionParameter",null)));
        }
        return parameters;
      }
    }
;
    Iterable queryResult=(Iterable)calc.calculate();
    if (queryResult != null) {
      for (      Object item : queryResult) {
        List<INodeSubstituteAction> defaultActions=ChildSubstituteActionsHelper.createDefaultActions((SNode)item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter(),operationContext);
        ListSequence.fromList(result).addSequence(ListSequence.fromList(defaultActions));
      }
    }
  }
  return result;
}
