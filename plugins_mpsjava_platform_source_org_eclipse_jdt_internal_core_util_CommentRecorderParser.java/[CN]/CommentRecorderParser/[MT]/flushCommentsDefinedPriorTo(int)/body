{
  int lastCommentIndex=this.scanner.commentPtr;
  if (lastCommentIndex < 0)   return position;
  int index=lastCommentIndex;
  int validCount=0;
  while (index >= 0) {
    int commentEnd=this.scanner.commentStops[index];
    if (commentEnd < 0)     commentEnd=-commentEnd;
    if (commentEnd <= position) {
      break;
    }
    index--;
    validCount++;
  }
  if (validCount > 0) {
    int immediateCommentEnd=0;
    while (index < lastCommentIndex && (immediateCommentEnd=-this.scanner.commentStops[index + 1]) > 0) {
      immediateCommentEnd--;
      if (org.eclipse.jdt.internal.compiler.util.Util.getLineNumber(position,this.scanner.lineEnds,0,this.scanner.linePtr) != org.eclipse.jdt.internal.compiler.util.Util.getLineNumber(immediateCommentEnd,this.scanner.lineEnds,0,this.scanner.linePtr))       break;
      position=immediateCommentEnd;
      validCount--;
      index++;
    }
  }
  if (index < 0)   return position;
  pushOnCommentsStack(0,index);
switch (validCount) {
case 0:
    break;
case 2:
  this.scanner.commentStarts[0]=this.scanner.commentStarts[index + 1];
this.scanner.commentStops[0]=this.scanner.commentStops[index + 1];
this.scanner.commentTagStarts[0]=this.scanner.commentTagStarts[index + 1];
this.scanner.commentStarts[1]=this.scanner.commentStarts[index + 2];
this.scanner.commentStops[1]=this.scanner.commentStops[index + 2];
this.scanner.commentTagStarts[1]=this.scanner.commentTagStarts[index + 2];
break;
case 1:
this.scanner.commentStarts[0]=this.scanner.commentStarts[index + 1];
this.scanner.commentStops[0]=this.scanner.commentStops[index + 1];
this.scanner.commentTagStarts[0]=this.scanner.commentTagStarts[index + 1];
break;
default :
System.arraycopy(this.scanner.commentStarts,index + 1,this.scanner.commentStarts,0,validCount);
System.arraycopy(this.scanner.commentStops,index + 1,this.scanner.commentStops,0,validCount);
System.arraycopy(this.scanner.commentTagStarts,index + 1,this.scanner.commentTagStarts,0,validCount);
}
this.scanner.commentPtr=validCount - 1;
return position;
}
