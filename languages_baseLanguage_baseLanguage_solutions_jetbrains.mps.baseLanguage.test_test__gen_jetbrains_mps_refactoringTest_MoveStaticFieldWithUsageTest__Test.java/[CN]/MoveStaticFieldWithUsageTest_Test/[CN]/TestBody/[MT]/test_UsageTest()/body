{
  this.addNodeById("8495840634675243978");
  this.addNodeById("8495840634675645395");
  this.addNodeById("8495840634675243990");
  this.addNodeById("8495840634675299896");
  MoveStaticFieldRefactoring refactoring=new MoveStaticFieldRefactoring(SNodeOperations.cast(this.getNodeById("8495840634675243980"),"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration"),SNodeOperations.cast(this.getNodeById("8495840634675243991"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
  refactoring.doRefactoring();
  refactoring.replaceSingleUsage(SNodeOperations.cast(this.getNodeById("8495840634675645880"),"jetbrains.mps.baseLanguage.structure.StaticFieldReference"));
  Assert.assertNull("nodes '" + SNodeOperations.cast(this.getNodeById("8495840634675243979"),"jetbrains.mps.baseLanguage.structure.ClassConcept") + "' and '"+ SNodeOperations.cast(this.getNodeById("8495840634675645396"),"jetbrains.mps.baseLanguage.structure.ClassConcept")+ "' do not match!",NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("8495840634675243979"),"jetbrains.mps.baseLanguage.structure.ClassConcept"),SNodeOperations.cast(this.getNodeById("8495840634675243991"),"jetbrains.mps.baseLanguage.structure.ClassConcept")),ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("8495840634675645396"),"jetbrains.mps.baseLanguage.structure.ClassConcept"),SNodeOperations.cast(this.getNodeById("8495840634675299897"),"jetbrains.mps.baseLanguage.structure.ClassConcept"))));
}
