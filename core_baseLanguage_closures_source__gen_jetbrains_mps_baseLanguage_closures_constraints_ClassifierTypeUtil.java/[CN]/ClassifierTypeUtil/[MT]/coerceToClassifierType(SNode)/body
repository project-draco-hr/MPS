{
  SNode cType=(SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.ClassifierType") ? (SNode)type : null);
  if ((cType == null)) {
    SNode ctw=TypeChecker.getInstance().getRuntimeSupport().coerce_(type,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.structure.ClassifierType"),true);
    SNode cts=TypeChecker.getInstance().getRuntimeSupport().coerce_(type,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.structure.ClassifierType"),false);
    cType=((cts != null) ? cts : ctw);
  }
  if ((cType != null)) {
    List<SNode> params=SLinkOperations.getTargets(cType,"parameter",true);
    if (params != null && params.size() > 0) {
      SNode res=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ClassifierType",null);
      SLinkOperations.setTarget(res,"classifier",SLinkOperations.getTarget(cType,"classifier",false),false);
      for (      SNode p : params) {
        SLinkOperations.addChild(res,"parameter",SNodeOperations.copyNode(getTypeCoercedToClassifierType(p)));
      }
      return res;
    }
    return cType;
  }
  return type;
}
