{
  if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.ClassifierType")) {
    SNode copy=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ClassifierType",null);
    SLinkOperations.setTarget(copy,"classifier",SLinkOperations.getTarget(type,"classifier",false),false);
    boolean covariantParam=isFunctionTypeClassifierReturningValue(SLinkOperations.getTarget(type,"classifier",false));
    for (    SNode pt : SLinkOperations.getTargets(type,"parameter",true)) {
      SLinkOperations.addChild(copy,"parameter",(isFunctionTypeClassifier(SLinkOperations.getTarget(type,"classifier",false)) ? copyTypeRecursively(pt,covariantParam) : copyTypeRecursively(pt)));
      covariantParam=false;
    }
    return (covariant || isFunctionTypeClassifier(SLinkOperations.getTarget(type,"classifier",false)) ? new QuotationClass_2().createNode(copy) : new QuotationClass_3().createNode(copy));
  }
 else {
    return (covariant ? new QuotationClass_4().createNode(SNodeOperations.copyNode(type)) : new QuotationClass_5().createNode(SNodeOperations.copyNode(type)));
  }
}
