{
  if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.PrimitiveType")) {
    return type;
  }
  SNode cType=ClassifierTypeUtil.coerceToClassifierTypeIgnoreParameters(type);
  if ((cType != null)) {
    List<SNode> params=SLinkOperations.getTargets(cType,"parameter",true);
    if (params != null && ListSequence.<SNode>fromList(params).count() > 0) {
      SNode res=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ClassifierType",null);
      SLinkOperations.setTarget(res,"classifier",SLinkOperations.getTarget(cType,"classifier",false),false);
      for (      SNode p : params) {
        ListSequence.<SNode>fromList(SLinkOperations.getTargets(res,"parameter",true)).addElement(SNodeOperations.copyNode(getTypeCoercedToClassifierType(p)));
      }
      return res;
    }
    return cType;
  }
  return type;
}
