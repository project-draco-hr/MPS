{
  List<SAbstractConcept> allApplicable=ListSequence.fromList(new ArrayList<SAbstractConcept>());
  if (TypeChecker.getInstance().getRuntimeSupport().coerce_(opndType,HUtil.createMatchingPatternByConcept(MetaAdapterFactory.getConcept(0x8388864671ce4f1cL,0x9c53c54016f6ad4fL,0x120c482dd1aL,"jetbrains.mps.baseLanguage.collections.structure.SortedSetType")),false) != null) {
    ListSequence.fromList(allApplicable).addSequence(Sequence.fromIterable(subconceptOfSortedSetOp));
  }
  if (TypeChecker.getInstance().getRuntimeSupport().coerce_(opndType,HUtil.createMatchingPatternByConcept(MetaAdapterFactory.getConcept(0x8388864671ce4f1cL,0x9c53c54016f6ad4fL,0x11d91cbbcd0L,"jetbrains.mps.baseLanguage.collections.structure.SetType")),false) != null) {
    ListSequence.fromList(allApplicable).addSequence(Sequence.fromIterable(subconceptOfSetOp));
  }
  if (TypeChecker.getInstance().getRuntimeSupport().coerce_(opndType,HUtil.createMatchingPatternByConcept(MetaAdapterFactory.getConcept(0x8388864671ce4f1cL,0x9c53c54016f6ad4fL,0x120c4067207L,"jetbrains.mps.baseLanguage.collections.structure.SortedMapType")),false) != null) {
    ListSequence.fromList(allApplicable).addSequence(Sequence.fromIterable(subconceptOfSortedMapOp));
  }
  if (TypeChecker.getInstance().getRuntimeSupport().coerce_(opndType,HUtil.createMatchingPatternByConcept(MetaAdapterFactory.getConcept(0x8388864671ce4f1cL,0x9c53c54016f6ad4fL,0x116db7e6bcbL,"jetbrains.mps.baseLanguage.collections.structure.MapType")),false) != null) {
    ListSequence.fromList(allApplicable).addSequence(Sequence.fromIterable(subconceptOfMapOp));
  }
  ListSequence.fromList(allApplicable).addSequence(Sequence.fromIterable(subconceptOfIATN).where(new IWhereFilter<SAbstractConcept>(){
    public boolean accept(    SAbstractConcept it){
      return SetSequence.fromSet(IApplicableToNothing__BehaviorDescriptor.getAllApplicableTypes_id5cL0w3DYWgB.invoke(SNodeOperations.asSConcept(it))).any(new IWhereFilter<SNode>(){
        public boolean accept(        final SNode it){
          return TypeChecker.getInstance().getSubtypingManager().isSubtype(opndType,it,false);
        }
      }
);
    }
  }
));
  ListSequence.fromList(allApplicable).addSequence(Sequence.fromIterable(subconceptOfSeqOp).subtract(Sequence.fromIterable(subconceptOfSortedSetOp)).subtract(Sequence.fromIterable(subconceptOfSetOp)).subtract(Sequence.fromIterable(subconceptOfSortedMapOp)).subtract(Sequence.fromIterable(subconceptOfMapOp)).subtract(Sequence.fromIterable(subconceptOfIATN)));
  return ListSequence.fromList(allApplicable).distinct().select(new ISelector<SAbstractConcept,SNode>(){
    public SNode select(    SAbstractConcept it){
      return (SNode)SNodeOperations.asNode(it);
    }
  }
).select(new ISelector<SNode,SAbstractConcept>(){
    public SAbstractConcept select(    SNode it){
      return SNodeOperations.asSConcept(it);
    }
  }
).toListSequence();
}
