{
  List<ITarget> targets=ListSequence.fromList(new ArrayList<ITarget>());
  Map<ITarget.Name,ITarget> targetsMap=MapSequence.fromMap(new HashMap<ITarget.Name,ITarget>());
  Map<IFacet.Name,IFacet> fview=Collections.unmodifiableMap(facetsView);
  Map<IFacet.Name,IFacet> required=MapSequence.fromMap(new HashMap<IFacet.Name,IFacet>());
  Map<IFacet.Name,IFacet> optional=MapSequence.fromMap(new HashMap<IFacet.Name,IFacet>());
  for (  IFacet fct : Sequence.fromIterable(MapSequence.fromMap(fview).values())) {
    this.collectRequired(fct.extended(),required);
    this.collectRequired(fct.required(),required);
    this.collectOptional(fct.optional(),optional);
    for (    ITarget trg : Sequence.fromIterable(fct.targets(fview))) {
      if (MapSequence.fromMap(targetsMap).containsKey(trg.getName())) {
        LOG.error("duplicate target: " + trg.getName());
      }
 else {
        ListSequence.fromList(targets).addElement(trg);
        MapSequence.fromMap(targetsMap).put(trg.getName(),trg);
      }
    }
  }
  return new Script(targets,MapSequence.fromMap(targetsMap).get(defaultTarget));
}
