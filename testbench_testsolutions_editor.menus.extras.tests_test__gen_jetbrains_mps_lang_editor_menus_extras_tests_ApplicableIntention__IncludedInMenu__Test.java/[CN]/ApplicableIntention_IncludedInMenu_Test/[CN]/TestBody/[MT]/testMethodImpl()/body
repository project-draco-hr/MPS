{
  initEditorComponent("8874023590560440630","");
  UsedLanguagesUtils.assertLanguageUsed(getEditorComponent(),MetaAdapterFactory.getLanguage(MetaIdFactory.langId(0xf015c5f872054441L,0x9cc7dc7ef28ea903L),"jetbrains.mps.lang.editor.menus.extras.testLanguage"));
  final SRepository repository=getEditorComponent().getEditorContext().getRepository();
  repository.getModelAccess().runReadAction(new Runnable(){
    public void run(){
      IntentionMenuPartBase part=new IntentionMenuPartBase(ActionLookupUtils.getIntentionId(repository,new SNodePointer("r:8d2a217a-f2d0-4d4a-b867-e2dd2ddb731c(jetbrains.mps.lang.editor.menus.extras.testLanguage.intentions)","6820996345401611689"))){
        @Nullable @Override protected MenuItem createItem(        @NotNull TransformationMenuContext context,        @NotNull IntentionExecutable executable){
          return new ActionItemBase();
        }
      }
;
      DefaultTransformationMenuContext context=DefaultTransformationMenuContext.createInitialContextForCell(getEditorComponent().getSelectedCell(),"irrelevant location");
      Assert.assertEquals(1,part.createItems(context).size());
    }
  }
);
}
