{
  info("handling output...");
  String targetDir=module.getOutputFor(inputModel);
  long startJobTime=System.currentTimeMillis();
  boolean result=false;
  if (status.isOk()) {
    JavaStreamHandler javaStreamHandler=new JavaStreamHandler(inputModel,new File(targetDir),invocationContext);
    try {
      result=new JavaFileGenerator(javaStreamHandler,ModelGenerationStatusManager.getInstance().getCacheGenerator(),BLDependenciesCache.getInstance().getGenerator(),BLDebugInfoCache.getInstance().getGenerator(),GenerationDependenciesCache.getInstance().getGenerator()).handleOutput(invocationContext,status);
    }
  finally {
      javaStreamHandler.dispose();
    }
  }
  if (!result) {
    info("there were errors.");
    return false;
  }
  if (myLogger.needsInfo()) {
    myLogger.info("output generated in " + (System.currentTimeMillis() - startJobTime) + " ms");
  }
  return true;
}
