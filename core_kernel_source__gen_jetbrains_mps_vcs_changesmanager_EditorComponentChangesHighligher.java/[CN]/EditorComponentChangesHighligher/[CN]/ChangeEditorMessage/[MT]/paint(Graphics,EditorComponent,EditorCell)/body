{
  boolean targetIsNode=myMessageTarget.getTarget() == MessageTargetEnum.NODE;
  if (ObjectUtils.equals(getNode(),cell.getSNode()) && targetIsNode || !(targetIsNode) && !(cell instanceof EditorCell_Collection)) {
    cell.paintSelection(graphics,getColor(),false);
  }
 else {
    if (isDeletedChild()) {
      int nextChildIndex=((DeletedNodeMessageTarget)myMessageTarget).getNextChildIndex();
      if (nextChildIndex != -1) {
        EditorCell_Collection collectionCell=((EditorCell_Collection)cell);
        if (!(hasChildrenWithDifferentNode(cell))) {
          cell.paintSelection(graphics,getColor(),false);
          return;
        }
        boolean vertical=cell.getStyle().get(StyleAttributes.INDENT_LAYOUT_CHILDREN_NEWLINE);
        Rectangle bounds=cell.getBounds();
        if (vertical) {
          int y;
          if (collectionCell.getChildCount() > nextChildIndex) {
            y=collectionCell.getChildAt(nextChildIndex).getY();
          }
 else {
            y=((int)collectionCell.getChildAt(collectionCell.getChildCount() - 1).getBounds().getMaxY());
          }
          graphics.setColor(getColor());
          graphics.drawLine(bounds.x,y,bounds.x + bounds.width,y);
        }
 else {
          int x;
          if (collectionCell.getChildCount() > nextChildIndex) {
            x=collectionCell.getChildAt(nextChildIndex).getX();
          }
 else {
            x=((int)collectionCell.getChildAt(collectionCell.getChildCount() - 1).getBounds().getMaxX());
          }
          int y1=bounds.y;
          int y2=bounds.y + bounds.height;
          graphics.setColor(getColor());
          graphics.drawLine(x,y1,x,y2);
          graphics.fillPolygon(new int[]{x,x - 3,x + 3},new int[]{y1 - 2,y1 - 5,y1 - 5},3);
          graphics.fillPolygon(new int[]{x,x - 3,x + 3},new int[]{y2 + 2,y2 + 5,y2 + 5},3);
          graphics.setColor(ColorAndGraphicsUtil.brightenColor(getColor(),0.8f));
          graphics.drawPolygon(new int[]{x,x - 3,x + 3},new int[]{y1 - 2,y1 - 5,y1 - 5},3);
          graphics.drawPolygon(new int[]{x,x - 3,x + 3},new int[]{y2 + 2,y2 + 5,y2 + 5},3);
        }
        return;
      }
    }
    graphics.setColor(getActualColor((isDeletedChild() ? EditorComponentChangesHighligher.HIGHLIGHT_COLOR_DELETED : EditorComponentChangesHighligher.HIGHLIGHT_COLOR_CHANGED_FRAME)));
    Rectangle bounds=cell.getBounds();
    graphics.drawRect(bounds.x,bounds.y,bounds.width,bounds.height);
  }
}
