{
  Set<SModule> toReload=collectBackReferences(modules);
  for (  Set<SModule> backRefs : myBackRefs.values()) {
    backRefs.removeAll(toReload);
  }
  for (  SModule module : toReload) {
    myBackRefs.remove(module);
  }
  for (  SModule module : toReload) {
    myClassLoaders.get(module).dispose();
    myClassLoaders.remove(module);
  }
  Set<SModuleReference> moduleReferences=new HashSet<SModuleReference>();
  for (  SModule module : toReload) {
    moduleReferences.add(module.getModuleReference());
  }
  Set<String> classesToRemove=new HashSet<String>();
  for (  Map.Entry<String,SModuleReference> entry : myLoadedClasses.entrySet()) {
    if (moduleReferences.contains(entry.getValue())) {
      classesToRemove.add(entry.getKey());
    }
  }
  for (  String className : classesToRemove) {
    myLoadedClasses.remove(className);
  }
}
