{
  try {
    while (true) {
      if (isInterrupted() || myClosed) {
        break;
      }
      processCommand(myCommandQueue.take());
    }
    if (myClosed) {
      List<IManagerCommand> unprocessed=ListSequence.fromList(new ArrayList<IManagerCommand>());
      myCommandQueue.drainTo(unprocessed);
      for (      IManagerCommand command : ListSequence.fromList(unprocessed)) {
        try {
          command.cancel();
        }
 catch (        Throwable t) {
          if (log.isErrorEnabled()) {
            log.error("Command " + command + " threw an exception.",t);
          }
        }
      }
    }
  }
 catch (  InterruptedException ignore) {
  }
  if (log.isDebugEnabled()) {
    log.debug("Thread " + this + " finished working.");
  }
}
