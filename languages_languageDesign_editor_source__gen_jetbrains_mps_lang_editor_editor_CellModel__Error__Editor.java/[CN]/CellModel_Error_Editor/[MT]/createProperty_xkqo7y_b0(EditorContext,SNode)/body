{
  CellProviderWithRole provider=new PropertyCellProvider(node,editorContext);
  provider.setRole("text");
  provider.setNoTargetText("<no text>");
  EditorCell editorCell;
  editorCell=provider.createEditorCell(editorContext);
  editorCell.setCellId("property_text");
  Style style=new StyleImpl();
  style.set(StyleAttributes.DRAW_BORDER,0,true);
  style.set(StyleAttributes.BACKGROUND_COLOR,0,StyleRegistry.getInstance().getSimpleColor(CellModel_Error_Editor._StyleParameter_QueryFunction_xkqo7y_a1b0((editorCell == null ? null : editorCell.getContext()),(editorCell == null ? null : editorCell.getSNode()))));
  style.set(StyleAttributes.TEXT_BACKGROUND_COLOR,0,StyleRegistry.getInstance().getSimpleColor(MPSColors.pink));
  style.set(StyleAttributes.SELECTED_TEXT_BACKGROUND_COLOR,0,StyleRegistry.getInstance().getSimpleColor(MPSColors.magenta));
  editorCell.getStyle().putAll(style);
  editorCell.setAction(CellActionType.COMMENT,new CellAction_Comment(node));
  editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
  SNode attributeConcept=provider.getRoleAttribute();
  Class attributeKind=provider.getRoleAttributeClass();
  if (attributeConcept != null) {
    EditorManager manager=EditorManager.getInstanceFromContext(editorContext);
    return manager.createNodeRoleAttributeCell(attributeConcept,attributeKind,editorCell);
  }
 else   return editorCell;
}
