{
  path=normalizePath(path,false);
  if (path.length() < workingDirectory.length()) {
    path=normalizePath(path,true);
  }
  if (!(path.startsWith(workingDirectory))) {
    throw new PathConverter.PathConvertException("source path (" + path + ") should be under working directory ("+ workingDirectory+ ")");
  }
  path=path.substring(workingDirectory.length());
  SNode plp=SModelOperations.createNewNode(model,"jetbrains.mps.build.structure.BuildSourceProjectRelativePath",null);
  SNode last=null;
  for (  String fname : path.split("/")) {
    if (StringUtils.isNotEmpty(fname)) {
      SNode npath=SModelOperations.createNewNode(model,"jetbrains.mps.build.structure.BuildCompositePath",null);
      SPropertyOperations.set(npath,"head",fname);
      if (last == null) {
        SLinkOperations.setTarget(plp,"compositePart",npath,true);
      }
 else {
        SLinkOperations.setTarget(last,"tail",npath,true);
      }
      last=npath;
    }
  }
  return plp;
}
