{
  for (  Language lang : p.getProjectModules(Language.class)) {
    lang.addUsedDevkit(LanguageDesign_DevKit.MODULE_REFERENCE);
    lang.save();
  }
  for (  Language l : p.getProjectModules(Language.class)) {
    for (    SModelDescriptor aspect : l.getAspectModelDescriptors()) {
      aspect.getSModel().addDevKit(GeneralPurpose_DevKit.MODULE_REFERENCE);
    }
  }
  for (  Language l : p.getProjectModules(Language.class)) {
    for (    SModelDescriptor aspect : l.getAspectModelDescriptors()) {
      aspect.getSModel().deleteDevKit(LanguageDesign_DevKit.MODULE_REFERENCE);
    }
  }
  for (  Language l : p.getProjectModules(Language.class)) {
    for (    SModelDescriptor aspect : l.getAspectModelDescriptors()) {
      SModel sModel=aspect.getSModel();
      if (sModel.importedDevkits().contains(BootstrapLanguages_DevKit.MODULE_REFERENCE)) {
        sModel.deleteDevKit(BootstrapLanguages_DevKit.MODULE_REFERENCE);
      }
    }
  }
  for (  SModelDescriptor model : p.getProjectModels()) {
    if (!(model instanceof EditableSModelDescriptor))     continue;
    if (model.getModule() == null)     continue;
    new MissingDependenciesFixer(ProjectOperationContext.get(p.getProject()),model).fix(false);
  }
  SModelRepository.getInstance().saveAll();
  ClassLoaderManager.getInstance().reloadAll(new EmptyProgressIndicator());
}
