{
  final List<ModelChange> changesToApply=ListSequence.fromList(new ArrayList<ModelChange>());
  final List<ModelChange> changesToExclude=ListSequence.fromList(new ArrayList<ModelChange>());
  for (  ModelChange change : Sequence.fromIterable(changes).where(new IWhereFilter<ModelChange>(){
    public boolean accept(    ModelChange ch){
      return !(session.isChangeResolved(ch));
    }
  }
)) {
    if (mine == session.isMyChange(change)) {
      ListSequence.fromList(changesToApply).addElement(change);
    }
 else {
      ListSequence.fromList(changesToExclude).addElement(change);
    }
  }
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      session.applyChanges(changesToApply);
      session.excludeChanges(changesToExclude);
    }
  }
);
}
