{
  SLinkOperations.setTarget(thisNode,"applicableConcept",baseConcept,false);
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      SPropertyOperations.set(thisNode,"name","reduce_" + SPropertyOperations.getString(baseConcept,"name"));
      SNode mapping=ListSequence.fromList(SModelOperations.getRoots(SNodeOperations.getModel(thisNode),"jetbrains.mps.lang.generator.structure.MappingConfiguration")).first();
      SNode ruleNode;
      ruleNode=SLinkOperations.addNewChild(mapping,"reductionMappingRule","jetbrains.mps.lang.generator.structure.Reduction_MappingRule");
      SLinkOperations.setTarget(ruleNode,"applicableConcept",baseConcept,false);
      SNode tmplRef=SLinkOperations.setNewChild(ruleNode,"ruleConsequence","jetbrains.mps.lang.generator.structure.TemplateDeclarationReference");
      SLinkOperations.setTarget(tmplRef,"template",thisNode,false);
    }
  }
);
}
