{
  for (  Element ep : elements(eps,EXTENSION_POINT)) {
    String bc=ep.getAttributeValue(BEAN_CLASS);
    String ifc=ep.getAttributeValue(INTERFACE);
    if (bc != null) {
      SNode bep=SConceptOperations.createNewNode("jetbrains.mps.platform.conf.structure.BeanExtensionPoint",null);
      bep.setId(createForeignId(EXTENSION_POINT + "$" + ep.getAttributeValue(ConfReader.NAME)));
      ListSequence.fromList(SLinkOperations.getTargets(node,"fragment",true)).addElement(bep);
      SPropertyOperations.set(bep,"name",ep.getAttributeValue(NAME));
      addClassifierReference(SLinkOperations.findLinkDeclaration("jetbrains.mps.platform.conf.structure.BeanExtensionPoint","beanClass"),bep,bc);
    }
 else     if (ifc != null) {
      SNode iep=SLinkOperations.addNewChild(node,"fragment","jetbrains.mps.platform.conf.structure.IntefaceExtensionPoint");
      SPropertyOperations.set(iep,"name",ep.getAttributeValue(NAME));
      addClassifierReference(SLinkOperations.findLinkDeclaration("jetbrains.mps.platform.conf.structure.IntefaceExtensionPoint","iface"),iep,ifc);
    }
 else {
      throw new IllegalStateException();
    }
  }
}
