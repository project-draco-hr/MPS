{
  jetbrains.mps.smodel.SModel model=new jetbrains.mps.smodel.SModel(descriptor.getReference(),new ForeignNodeIdMap());
  final ModuleDescriptor moduleDesc=ModulesMiner.getInstance().loadModuleDescriptor(getFile());
  new ProjectStructureBuilder(moduleDesc,getFile(),model.getModelDescriptor()){
    @Override public Iterable<org.jetbrains.mps.openapi.model.SModelReference> loadReferences(    SNode m,    final ModuleDescriptor d){
      return Sequence.fromIterable((d.getModelRootDescriptors())).translate(new ITranslator2<ModelRootDescriptor,org.jetbrains.mps.openapi.model.SModelReference>(){
        public Iterable<org.jetbrains.mps.openapi.model.SModelReference> translate(        ModelRootDescriptor it){
          return loadModels(it,d);
        }
      }
);
    }
  }
.convert();
  ModuleReference lang=MPSModuleRepository.getInstance().getModuleById(ModuleId.fromString("86ef8290-12bb-4ca7-947f-093788f263a9")).getModuleReference();
  model.addLanguage(lang);
  module.addUsedLanguage(lang);
  return model;
}
