{
  SModel model=new SModel(descriptor.getSModelReference(),new ForeignNodeIdMap());
  final ModuleDescriptor moduleDesc=ModulesMiner.getInstance().loadModuleDescriptor(myFile);
  new ProjectStructureBuilder(moduleDesc,myFile,model){
    public Iterable<SModelReference> loadReferences(    SNode m,    final ModuleDescriptor d){
      return Sequence.fromIterable(((Iterable<ModelRoot>)d.getModelRoots())).translate(new ITranslator2<ModelRoot,SModelReference>(){
        public Iterable<SModelReference> translate(        ModelRoot it){
          return loadModels(it,d);
        }
      }
);
    }
  }
.convert();
  ModuleReference lang=MPSModuleRepository.getInstance().getModuleById(ModuleId.fromString("86ef8290-12bb-4ca7-947f-093788f263a9")).getModuleReference();
  model.addLanguage(lang);
  module.addUsedLanguage(lang);
  return new ModelLoadResult(model,ModelLoadingState.FULLY_LOADED);
}
