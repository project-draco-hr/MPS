{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.resources.structure.IconResourceReference");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(childConcept,NameUtil.nodeFQName(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          return SModelOperations.getNodesIncludingImported(_context.getModel(),"jetbrains.mps.lang.resources.structure.IconResourceDeclaration");
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              return _quotation_createNode_u7cy7b_a0a0a0a((item));
            }
            public String getMatchingText(            String pattern){
              return SPropertyOperations.getString(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.resources.structure.IconResourceReference"),MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1169125787135l,5092175715804935370l,"conceptAlias")) + "<" + SPropertyOperations.getString((item),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"))+ ">";
            }
            public String getVisibleMatchingText(            String pattern){
              return getMatchingText(pattern);
            }
          }
);
        }
      }
    }
  }
  return result;
}
