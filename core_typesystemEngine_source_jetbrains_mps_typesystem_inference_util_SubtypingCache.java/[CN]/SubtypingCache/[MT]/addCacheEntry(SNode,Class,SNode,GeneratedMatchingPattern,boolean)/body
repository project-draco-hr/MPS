{
  boolean answer=result != null;
  boolean bothMaps=answer != isWeak;
  Map<CacheNodeHandler,Map<Class,Pair<SNode,GeneratedMatchingPattern>>> cache1=isWeak ? myCoerceToPatternsCacheWeak : myCoerceToPatternsCache;
  Map<CacheNodeHandler,Map<Class,Pair<SNode,GeneratedMatchingPattern>>> cache2=isWeak ? myCoerceToPatternsCache : myCoerceToPatternsCacheWeak;
  CacheNodeHandler subtypeHandler=new CacheNodeHandler(subtype);
  Map<Class,Pair<SNode,GeneratedMatchingPattern>> map=cache1.get(subtypeHandler);
  if (map == null) {
    map=new THashMap<Class,Pair<SNode,GeneratedMatchingPattern>>(1);
    cache1.put(subtypeHandler,map);
  }
  map.put(c,new Pair<SNode,GeneratedMatchingPattern>(result,pattern));
  if (bothMaps && result == null) {
    CacheNodeHandler subtypeHandler2=new CacheNodeHandler(subtype);
    Map<Class,Pair<SNode,GeneratedMatchingPattern>> map2=cache2.get(subtypeHandler2);
    if (map2 == null) {
      map2=new THashMap<Class,Pair<SNode,GeneratedMatchingPattern>>(1);
      cache2.put(subtypeHandler2,map2);
    }
  }
}
