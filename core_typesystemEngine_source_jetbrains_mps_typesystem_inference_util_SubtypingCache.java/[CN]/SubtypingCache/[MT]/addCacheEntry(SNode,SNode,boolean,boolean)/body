{
  if (!mySubtypingCached) {
    return;
  }
  boolean bothMaps=answer != isWeak;
  Map<CacheNodeHandler,Map<CacheNodeHandler,Boolean>> cache1=isWeak ? myCacheWeak : myCache;
  Map<CacheNodeHandler,Map<CacheNodeHandler,Boolean>> cache2=isWeak ? myCache : myCacheWeak;
  CacheNodeHandler subtypeHandler=new CacheNodeHandler(subtype);
  Map<CacheNodeHandler,Boolean> supertypes=cache1.get(subtypeHandler);
  if (supertypes == null) {
    supertypes=new HashMap<CacheNodeHandler,Boolean>();
    cache1.put(subtypeHandler,supertypes);
  }
  supertypes.put(new CacheNodeHandler(supertype),answer);
  if (bothMaps) {
    CacheNodeHandler subtypeHandler2=new CacheNodeHandler(subtype);
    Map<CacheNodeHandler,Boolean> supertypes2=cache2.get(subtypeHandler2);
    if (supertypes2 == null) {
      supertypes2=new HashMap<CacheNodeHandler,Boolean>();
      cache2.put(subtypeHandler2,supertypes2);
    }
  }
}
