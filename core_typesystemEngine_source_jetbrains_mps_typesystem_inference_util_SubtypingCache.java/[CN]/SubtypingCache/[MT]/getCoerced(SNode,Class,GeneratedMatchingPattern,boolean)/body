{
  Map<CacheNodeHandler,Map<Class,Pair<SNode,GeneratedMatchingPattern>>> cache=isWeak ? myCoerceToPatternsCacheWeak : myCoerceToPatternsCache;
  Map<Class,Pair<SNode,GeneratedMatchingPattern>> map=cache.get(new CacheNodeHandler(subtype));
  if (map != null && map.containsKey(c)) {
    Pair<SNode,GeneratedMatchingPattern> patternPair=map.get(c);
    SNode resultNode=patternPair.o1;
    if (resultNode != null && resultNode.shouldHaveBeenDisposed()) {
      map.remove(c);
      return new Pair<Boolean,SNode>(false,null);
    }
 else {
      pattern.fillFieldValuesFrom(patternPair.o2);
      return new Pair<Boolean,SNode>(true,resultNode);
    }
  }
 else {
    return new Pair<Boolean,SNode>(false,null);
  }
}
