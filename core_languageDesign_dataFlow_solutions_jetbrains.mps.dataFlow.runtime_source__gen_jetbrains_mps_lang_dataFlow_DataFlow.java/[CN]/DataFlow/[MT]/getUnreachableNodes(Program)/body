{
  Set<Instruction> unreachable=program.getUnreachableInstructions();
  Set<SNode> unreachableNodes=new HashSet<SNode>();
  for (  Instruction i : unreachable) {
    if (!(DataFlow.mayBeUnreachable(i)) && i.getSource() != null) {
      SNode unreachableNode=(SNode)i.getSource();
      if (unreachableNode.isInstanceOfConcept(Statement.concept)) {
        unreachableNodes.add((SNode)i.getSource());
      }
 else {
        if (unreachableNode.isInstanceOfConcept(StatementList.concept)) {
          if (!(unreachableNode.getParent().isInstanceOfConcept(Statement.concept))) {
            unreachableNodes.add((SNode)i.getSource());
          }
        }
 else {
          INodeAdapter adapter=BaseAdapter.fromNode(unreachableNode);
          unreachableNodes.add(adapter.getParent(Statement.class).getNode());
        }
      }
    }
  }
  return unreachableNodes;
}
