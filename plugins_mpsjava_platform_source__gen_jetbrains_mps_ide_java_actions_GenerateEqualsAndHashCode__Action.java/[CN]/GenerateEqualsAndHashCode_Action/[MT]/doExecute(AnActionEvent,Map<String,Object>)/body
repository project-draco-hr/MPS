{
  try {
    SNode classConcept=GenerateEqualsAndHashCode_Action.this.getClassConcept(_params);
    SNodePointer[] fields;
    fields=ListSequence.fromList(SLinkOperations.getTargets(classConcept,"field",true)).select(new ISelector<SNode,SNodePointer>(){
      public SNodePointer select(      SNode it){
        return new SNodePointer(it);
      }
    }
).toGenericArray(SNodePointer.class);
    SelectFieldsDialog selectFieldsDialog=new SelectFieldsDialog(fields,true,((EditorContext)MapSequence.fromMap(_params).get("editorContext")).getOperationContext().getProject());
    selectFieldsDialog.setTitle("Choose fields to be included in equals() and hashCode()");
    selectFieldsDialog.show();
    if (!(selectFieldsDialog.isOK())) {
      return;
    }
    SNodePointer[] selectedFields=Sequence.fromIterable(((Iterable<SNodePointer>)selectFieldsDialog.getSelectedElements())).toGenericArray(SNodePointer.class);
    final SNode thisExp=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ThisExpression",null);
    final SNode equalsDeclaration=new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a21a0a4().createNode(thisExp,thisExp,classConcept,classConcept);
    SNode thatDeclaration=SLinkOperations.getTarget(SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(equalsDeclaration,"body",true),"statement",true)).last(),"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement"),"localVariableDeclaration",true);
    SNode thatRef=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.VariableReference",null);
    SLinkOperations.setTarget(thatRef,"variableDeclaration",thatDeclaration,false);
    SNode fieldRefLocal=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.VariableReference",null);
    SNode fieldRefOperation=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.FieldReferenceOperation",null);
    for (    SNodePointer fieldPtr : selectedFields) {
      SNode field=SNodeOperations.cast(fieldPtr.getNode(),"jetbrains.mps.baseLanguage.structure.FieldDeclaration");
      SLinkOperations.setTarget(fieldRefLocal,"variableDeclaration",field,false);
      SLinkOperations.setTarget(fieldRefOperation,"fieldDeclaration",field,false);
      SNode checkStmt;
      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,"type",true),"jetbrains.mps.baseLanguage.structure.PrimitiveType")) {
        if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,"type",true),"jetbrains.mps.baseLanguage.structure.FloatType")) {
          checkStmt=new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a0a0a5a02a0a4().createNode(thatRef,SNodeOperations.copyNode(fieldRefOperation),SNodeOperations.copyNode(fieldRefLocal));
        }
 else         if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,"type",true),"jetbrains.mps.baseLanguage.structure.DoubleType")) {
          checkStmt=new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a0a0a0f0u0a0e().createNode(thatRef,SNodeOperations.copyNode(fieldRefOperation),SNodeOperations.copyNode(fieldRefLocal));
        }
 else {
          checkStmt=new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a0a0a0f0u0a0e_0().createNode(thatRef,SNodeOperations.copyNode(fieldRefOperation),SNodeOperations.copyNode(fieldRefLocal));
        }
      }
 else       if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,"type",true),"jetbrains.mps.baseLanguage.structure.ArrayType")) {
        checkStmt=new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a0a0f0u0a0e().createNode(SNodeOperations.copyNode(fieldRefLocal),thatRef,SNodeOperations.copyNode(fieldRefOperation));
      }
 else       if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,"type",true),"jetbrains.mps.baseLanguage.structure.ClassifierType")) {
        checkStmt=new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a0a1f0u0a0e().createNode(thatRef,SNodeOperations.copyNode(fieldRefOperation),SNodeOperations.copyNode(fieldRefLocal),SNodeOperations.copyNode(fieldRefLocal),thatRef,SNodeOperations.copyNode(fieldRefOperation));
      }
 else {
        checkStmt=new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a0a0f0u0a0e_0().createNode(thatRef,SNodeOperations.copyNode(fieldRefOperation),SNodeOperations.copyNode(fieldRefLocal),SNodeOperations.copyNode(fieldRefLocal),thatRef,SNodeOperations.copyNode(fieldRefOperation));
      }
      ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(equalsDeclaration,"body",true),"statement",true)).addElement(checkStmt);
    }
    SNodeFactoryOperations.addNewChild(SLinkOperations.getTarget(equalsDeclaration,"body",true),"statement","jetbrains.mps.baseLanguage.structure.Statement");
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(equalsDeclaration,"body",true),"statement",true)).addElement(new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a0w0a0e().createNode());
    ListSequence.fromList(SLinkOperations.getTargets(classConcept,"method",true)).addElement(equalsDeclaration);
    SNode hashCodeDeclaration=ListSequence.fromList(SLinkOperations.getTargets(classConcept,"method",true)).addElement(new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a0a52a0a4().createNode());
    SNode resultDeclaration=new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a62a0a4().createNode();
    SNode resultReference=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.VariableReference",null);
    SLinkOperations.setTarget(resultReference,"variableDeclaration",SLinkOperations.getTarget(resultDeclaration,"localVariableDeclaration",true),false);
    SNode tempDeclaration=new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a92a0a4().createNode();
    SNode tempReference=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.VariableReference",null);
    SLinkOperations.setTarget(tempReference,"variableDeclaration",SLinkOperations.getTarget(tempDeclaration,"localVariableDeclaration",true),false);
    if (ListSequence.fromList(SLinkOperations.getTargets(classConcept,"field",true)).any(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it,"type",true),"jetbrains.mps.baseLanguage.structure.DoubleType");
      }
    }
)) {
      ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(hashCodeDeclaration,"body",true),"statement",true)).addElement(tempDeclaration);
    }
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(hashCodeDeclaration,"body",true),"statement",true)).addElement(resultDeclaration);
    for (    SNodePointer fieldPtr : selectedFields) {
      final SNode field=SNodeOperations.cast(fieldPtr.getNode(),"jetbrains.mps.baseLanguage.structure.FieldDeclaration");
      SLinkOperations.setTarget(fieldRefLocal,"variableDeclaration",field,false);
      SNode calcStatement;
      SNode mulExpression=new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a3a43a0a4().createNode(resultReference);
      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,"type",true),"jetbrains.mps.baseLanguage.structure.IntegerType")) {
        calcStatement=new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a0a4a43a0a4().createNode(resultReference,SNodeOperations.copyNode(fieldRefLocal),mulExpression);
      }
 else       if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,"type",true),"jetbrains.mps.baseLanguage.structure.LongType")) {
        calcStatement=new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a0a0e0ib0a0e().createNode(mulExpression,SNodeOperations.copyNode(fieldRefLocal),SNodeOperations.copyNode(fieldRefLocal),resultReference);
      }
 else       if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,"type",true),"jetbrains.mps.baseLanguage.structure.ByteType") || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,"type",true),"jetbrains.mps.baseLanguage.structure.CharType") || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,"type",true),"jetbrains.mps.baseLanguage.structure.ShortType")) {
        calcStatement=new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a0a1e0ib0a0e().createNode(SNodeOperations.copyNode(fieldRefLocal),mulExpression,resultReference);
      }
 else       if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,"type",true),"jetbrains.mps.baseLanguage.structure.DoubleType")) {
        ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(hashCodeDeclaration,"body",true),"statement",true)).addElement(new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a0a0c4a43a0a4().createNode(tempReference,SNodeOperations.copyNode(fieldRefLocal),SNodeOperations.copyNode(fieldRefLocal)));
        calcStatement=new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a1a2e0ib0a0e().createNode(resultReference,mulExpression,tempReference,tempReference);
      }
 else       if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,"type",true),"jetbrains.mps.baseLanguage.structure.FloatType")) {
        calcStatement=new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a0a3e0ib0a0e().createNode(resultReference,mulExpression,SNodeOperations.copyNode(fieldRefLocal),SNodeOperations.copyNode(fieldRefLocal));
      }
 else       if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,"type",true),"jetbrains.mps.baseLanguage.structure.StringType")) {
        calcStatement=new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a0a4e0ib0a0e().createNode(resultReference,mulExpression,SNodeOperations.copyNode(fieldRefLocal),SNodeOperations.copyNode(fieldRefLocal));
      }
 else       if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,"type",true),"jetbrains.mps.baseLanguage.structure.ArrayType")) {
        calcStatement=new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a0a5e0ib0a0e().createNode(mulExpression,SNodeOperations.copyNode(fieldRefLocal),SNodeOperations.copyNode(fieldRefLocal),resultReference);
      }
 else       if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,"type",true),"jetbrains.mps.baseLanguage.structure.ClassifierType")) {
        calcStatement=new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a0a6e0ib0a0e().createNode(SNodeOperations.copyNode(fieldRefLocal),SNodeOperations.copyNode(fieldRefLocal),mulExpression,resultReference);
      }
 else {
        calcStatement=new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a0a0e0ib0a0e_0().createNode(SNodeOperations.copyNode(fieldRefLocal),SNodeOperations.copyNode(fieldRefLocal),mulExpression,resultReference);
      }
      ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(hashCodeDeclaration,"body",true),"statement",true)).addElement(calcStatement);
    }
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(hashCodeDeclaration,"body",true),"statement",true)).addElement(new GenerateEqualsAndHashCode_Action.QuotationClass_9sawe3_a0a0jb0a0e().createNode(resultReference));
    ((EditorContext)MapSequence.fromMap(_params).get("editorContext")).select(equalsDeclaration);
  }
 catch (  Throwable t) {
    LOG.error("User's action execute method failed. Action:" + "GenerateEqualsAndHashCode",t);
  }
}
