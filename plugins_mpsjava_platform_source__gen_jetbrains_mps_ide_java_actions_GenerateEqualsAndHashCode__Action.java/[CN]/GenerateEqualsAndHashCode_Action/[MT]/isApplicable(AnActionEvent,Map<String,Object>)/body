{
  SNode classConcept=SNodeOperations.getAncestor(((SNode)((SNode)MapSequence.fromMap(_params).get("node"))),"jetbrains.mps.baseLanguage.structure.ClassConcept",false,false);
  return !(ListSequence.fromList(SLinkOperations.getTargets(classConcept,"method",true)).any(new IWhereFilter<SNode>(){
    public boolean accept(    SNode method){
      return "equals".equals(SPropertyOperations.getString(method,"name")) && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(method,"returnType",true),"jetbrains.mps.baseLanguage.structure.BooleanType");
    }
  }
)) && ListSequence.fromList(SLinkOperations.getTargets(classConcept,"field",true)).isNotEmpty();
}
