{
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  SNode quotedNode_7=null;
  SNode quotedNode_8=null;
  SNode quotedNode_9=null;
  SNode quotedNode_10=null;
  SNode quotedNode_11=null;
  SNode quotedNode_12=null;
  SNode quotedNode_13=null;
  SNode quotedNode_14=null;
  quotedNode_4=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IfStatement",null,null,GlobalScope.getInstance(),false);
  quotedNode_5=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotEqualsExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_7=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerConstant",null,null,GlobalScope.getInstance(),false);
  quotedNode_7.setProperty("value","0");
  quotedNode_5.addChild("rightExpression",quotedNode_7);
  quotedNode_8=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall",null,null,GlobalScope.getInstance(),false);
  quotedNode_8.setReference("baseMethodDeclaration",SReference.create("baseMethodDeclaration",quotedNode_8,SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"),SNodeId.fromString("~Double.compare(double,double):int")));
  quotedNode_8.setReference("classConcept",SReference.create("classConcept",quotedNode_8,SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"),SNodeId.fromString("~Double")));
  quotedNode_10=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_13=(SNode)parameter_1;
  if (quotedNode_13 != null) {
    quotedNode_10.addChild("operand",HUtil.copyIfNecessary(quotedNode_13));
  }
  quotedNode_14=(SNode)parameter_2;
  if (quotedNode_14 != null) {
    quotedNode_10.addChild("operation",HUtil.copyIfNecessary(quotedNode_14));
  }
  quotedNode_8.addChild("actualArgument",quotedNode_10);
  quotedNode_11=(SNode)parameter_3;
  if (quotedNode_11 != null) {
    quotedNode_8.addChild("actualArgument",HUtil.copyIfNecessary(quotedNode_11));
  }
  quotedNode_5.addChild("leftExpression",quotedNode_8);
  quotedNode_4.addChild("condition",quotedNode_5);
  quotedNode_6=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList",null,null,GlobalScope.getInstance(),false);
  quotedNode_9=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ReturnStatement",null,null,GlobalScope.getInstance(),false);
  quotedNode_12=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BooleanConstant",null,null,GlobalScope.getInstance(),false);
  quotedNode_12.setProperty("value","false");
  quotedNode_9.addChild("expression",quotedNode_12);
  quotedNode_6.addChild("statement",quotedNode_9);
  quotedNode_4.addChild("ifTrue",quotedNode_6);
  return quotedNode_4;
}
