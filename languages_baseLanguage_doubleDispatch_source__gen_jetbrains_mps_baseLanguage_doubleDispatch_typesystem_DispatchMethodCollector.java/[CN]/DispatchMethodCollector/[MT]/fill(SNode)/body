{
  SNode clas=classToCheck;
  while ((clas != null)) {
    startNewClass(clas);
    for (    SNode m : Sequence.fromIterable(Classifier_Behavior.call_methods_5292274854859311639(clas)).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return DispatchUtil.isReadyMethod(it);
      }
    }
)) {
      addMethod(m);
    }
    clas=SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.cast(clas,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"superclass",true),"classifier",false);
  }
  for (  DispatchGroup g : Sequence.fromIterable(MapSequence.fromMap(groups).values())) {
    g.finalize();
  }
  for (  SNode m : Sequence.fromIterable(ClassConcept_Behavior.call_staticMethods_5292274854859435867(classToCheck)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return DispatchUtil.isReadyMethod(it);
    }
  }
)) {
    addMethod(m);
  }
}
