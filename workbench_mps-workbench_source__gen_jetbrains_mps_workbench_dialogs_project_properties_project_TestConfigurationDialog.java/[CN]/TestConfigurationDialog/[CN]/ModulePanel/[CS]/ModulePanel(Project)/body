{
  myProject=project;
  setLayout(new BorderLayout());
  myModuleUID=new JTextField();
  JButton button=new JButton(new AbstractAction("Select"){
    @Override public void actionPerformed(    ActionEvent e){
      final Wrappers._T<Set<SModule>> modules=new Wrappers._T<Set<SModule>>();
      final Wrappers._T<List<SModule>> projectModules=new Wrappers._T<List<SModule>>();
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          modules.value=SetSequence.fromSetWithValues(new HashSet<SModule>(),(Iterable<IModule>)MPSModuleRepository.getInstance().getAllModules());
          projectModules.value=ListSequence.fromListWithValues(new ArrayList<SModule>(),(Iterable<SModule>)myProject.getModules());
        }
      }
);
      List<SModuleReference> projectModuleRefs=ListSequence.fromList(projectModules.value).select(new ISelector<SModule,SModuleReference>(){
        public SModuleReference select(        SModule it){
          return it.getModuleReference();
        }
      }
).toListSequence();
      List<SModuleReference> moduleRefs=SetSequence.fromSet(modules.value).select(new ISelector<SModule,SModuleReference>(){
        public SModuleReference select(        SModule it){
          return it.getModuleReference();
        }
      }
).toListSequence();
      SModuleReference module=CommonChoosers.showDialogModuleChooser(ProjectHelper.toIdeaProject(myProject),TestConfigurationDialog.MODULE,projectModuleRefs,moduleRefs);
      if (module == null) {
        return;
      }
      String moduleName=module.getModuleName();
      myModuleUID.setText(moduleName);
      if (!(myNamePanel.isConfigNameSet())) {
        myNamePanel.setConfigName(NameUtil.shortNameFromLongName(moduleName));
      }
    }
  }
);
  JPanel panel=new JPanel(new BorderLayout());
  panel.add(myModuleUID,BorderLayout.CENTER);
  panel.add(button,BorderLayout.EAST);
  add(panel,BorderLayout.NORTH);
}
