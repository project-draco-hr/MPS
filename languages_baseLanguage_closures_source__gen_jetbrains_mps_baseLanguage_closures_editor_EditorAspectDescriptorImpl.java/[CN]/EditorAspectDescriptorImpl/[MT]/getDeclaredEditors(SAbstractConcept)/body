{
{
    SAbstractConcept cncpt=((SAbstractConcept)concept);
switch (index_xbvbvu_a0a.index(cncpt)) {
case 0:
      return Collections.<ConceptEditor>singletonList(new AbstractFunctionType_Editor());
case 1:
    return Collections.<ConceptEditor>singletonList(new ClosureArgReference_Editor());
case 2:
  return Collections.<ConceptEditor>singletonList(new ClosureControlStatement_Editor());
case 3:
return Collections.<ConceptEditor>singletonList(new ClosureLiteral_Editor());
case 4:
return Collections.<ConceptEditor>singletonList(new ClosureLiteralType_Editor());
case 5:
return Collections.<ConceptEditor>singletonList(new CompactInvokeFunctionExpression_Editor());
case 6:
return Collections.<ConceptEditor>singletonList(new ControlAbstractionContainer_Editor());
case 7:
return Collections.<ConceptEditor>singletonList(new ControlAbstractionDeclaration_Editor());
case 8:
return Collections.<ConceptEditor>singletonList(new ControlClosureLiteral_Editor());
case 9:
return Collections.<ConceptEditor>singletonList(new FunctionMethodDeclaration_Editor());
case 10:
return Collections.<ConceptEditor>singletonList(new FunctionType_Editor());
case 11:
return Collections.<ConceptEditor>singletonList(new InvokeExpression_Editor());
case 12:
return Collections.<ConceptEditor>singletonList(new InvokeFunctionExpression_Editor());
case 13:
return Collections.<ConceptEditor>singletonList(new InvokeFunctionOperation_Editor());
case 14:
return Collections.<ConceptEditor>singletonList(new UnboundClosureParameterDeclaration_Editor());
case 15:
return Collections.<ConceptEditor>singletonList(new UnrestrictedClosureLiteral_Editor());
case 16:
return Collections.<ConceptEditor>singletonList(new UnrestrictedFunctionType_Editor());
case 17:
return Collections.<ConceptEditor>singletonList(new YieldAllStatement_Editor());
case 18:
return Collections.<ConceptEditor>singletonList(new YieldStatement_Editor());
default :
}
}
return Collections.<ConceptEditor>emptyList();
}
