{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_xbvbvu_a0f.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return Collections.<SubstituteMenu>singletonList(new ClosureControlStatement_SubstituteMenu());
      }
    break;
case 1:
  if (true) {
    return Collections.<SubstituteMenu>singletonList(new ClosureLiteralType_SubstituteMenu());
  }
break;
case 2:
if (true) {
return Collections.<SubstituteMenu>singletonList(new CompactInvokeFunctionExpression_SubstituteMenu());
}
break;
case 3:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ControlAbstractionContainer_SubstituteMenu());
}
break;
case 4:
if (true) {
return Collections.<SubstituteMenu>singletonList(new subs_InvokeFunction_Contribution());
}
break;
case 5:
if (true) {
return Collections.<SubstituteMenu>singletonList(new InvokeExpression_SubstituteMenu());
}
break;
case 6:
if (true) {
return Collections.<SubstituteMenu>singletonList(new InvokeFunctionExpression_SubstituteMenu());
}
break;
case 7:
if (true) {
return Collections.<SubstituteMenu>singletonList(new Statement_Contribution());
}
break;
case 8:
if (true) {
return Collections.<SubstituteMenu>singletonList(new subs_ThisExpression_Contribution());
}
break;
case 9:
if (true) {
return Collections.<SubstituteMenu>singletonList(new UnboundClosureParameterDeclaration_SubstituteMenu());
}
break;
case 10:
if (true) {
return Collections.<SubstituteMenu>singletonList(new YieldAllStatement_SubstituteMenu());
}
break;
case 11:
if (true) {
return Collections.<SubstituteMenu>singletonList(new YieldStatement_SubstituteMenu());
}
break;
default :
}
}
return Collections.<SubstituteMenu>emptyList();
}
