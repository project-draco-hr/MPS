{
  SNode conceptNode=(_context.getLink() == null ? null : ((SNode)_context.getLink().getTargetConcept().getDeclarationNode()));
  boolean tmpVar=_context.getParentNode() != null;
  tmpVar=tmpVar && _context.getCurrentTargetNode() != null;
  tmpVar=tmpVar && conceptNode != null;
  tmpVar=tmpVar && _context.getModel() != null;
  List<SNode> result=ListSequence.fromList(new ArrayList<SNode>());
  ListSequence.fromList(result).addElement(MetaAdapterFactory.getConcept(0x737ed1fffa634ebcL,0xa834435499b23c64L,0x2c99ba4dd5ff2533L,"jetbrains.mps.lang.actions.testLanguage.structure.ActionTestChild1SubConcept").getDeclarationNode());
  return ListSequence.fromList(result).select(new ISelector<SNode,SAbstractConcept>(){
    public SAbstractConcept select(    SNode it){
      return SNodeOperations.asSConcept(it);
    }
  }
).toListSequence();
}
