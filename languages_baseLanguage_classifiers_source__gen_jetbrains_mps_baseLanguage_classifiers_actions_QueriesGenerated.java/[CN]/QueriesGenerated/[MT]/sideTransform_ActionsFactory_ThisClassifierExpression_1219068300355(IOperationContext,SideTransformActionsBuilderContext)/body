{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    Iterable<SNode> parameterObjects=new Computable<Iterable<SNode>>(){
      public Iterable<SNode> compute(){
        return ThisClassifierExpression_Behavior.call_getPossibleClassifiers_1219068414643(_context.getSourceNode());
      }
    }
.compute();
    if (parameterObjects != null) {
      for (      final SNode item : parameterObjects) {
        ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.classifiers.structure.ThisClassifierExpression"),item,_context.getSourceNode()){
          public SNode doSubstitute(          @Nullable final EditorContext editorContext,          String pattern){
            SNode expr=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.classifiers.structure.ThisClassifierExpression",null);
            SLinkOperations.setTarget(expr,"classifier",(item),false);
            SNodeOperations.replaceWithAnother(_context.getSourceNode(),expr);
            return expr;
          }
          public String getMatchingText(          String pattern){
            return (item) + ".";
          }
          public String getVisibleMatchingText(          String pattern){
            return getMatchingText(pattern);
          }
          @Override protected boolean isEnabled(){
            SNode sourceNode=getSourceNode();
            SNode parent=SNodeOperations.getParent(sourceNode);
            SNode containingLink=SNodeOperations.getContainingLinkDeclaration(sourceNode);
            return parent == null || containingLink == null || (ModelConstraints.canBeParent(parent,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.classifiers.structure.ThisClassifierExpression"),containingLink,null,null) && ModelConstraints.canBeAncestor(parent,null,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.classifiers.structure.ThisClassifierExpression"),null));
          }
        }
);
      }
    }
  }
  return result;
}
