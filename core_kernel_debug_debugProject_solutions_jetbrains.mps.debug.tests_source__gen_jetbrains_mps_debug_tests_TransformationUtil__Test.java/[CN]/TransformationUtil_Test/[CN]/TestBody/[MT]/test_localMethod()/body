{
  this.addNodeById("5543996881668550169");
  this.addNodeById("5543996881668550178");
  this.addNodeById("5543996881668550190");
  this.addNodeById("5543996881668550217");
  this.addNodeById("5543996881668550225");
  this.addNodeById("5543996881668550233");
  this.addNodeById("5543996881668550244");
  this.addNodeById("5543996881668550258");
  this.addNodeById("5543996881668550268");
  this.addNodeById("5543996881668550283");
  this.addNodeById("5543996881668550295");
  this.addNodeById("607759879653675041");
  this.addNodeById("607759879653675023");
  SNode instanceMethodDeclaration=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(this.getNodeById("5543996881668550288"),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  List<SNode> arguments=SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(this.getNodeById("5543996881668550288"),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true);
  SNode localInstanceMethodCall=new TransformationUtil_Test.TestBody.QuotationClass_tbx03_a0a51a7a().createNode(arguments);
  SLinkOperations.setTarget(localInstanceMethodCall,"baseMethodDeclaration",instanceMethodDeclaration,false);
  SNodeOperations.replaceWithAnother(SNodeOperations.cast(this.getNodeById("5543996881668550288"),"jetbrains.mps.baseLanguage.structure.DotExpression"),localInstanceMethodCall);
  TransformationUtil.transformInternal(SNodeOperations.cast(this.getNodeById("5543996881668550285"),"jetbrains.mps.baseLanguage.structure.BlockStatement"));
  Assert.assertEquals(null,NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("5543996881668550285"),"jetbrains.mps.baseLanguage.structure.BlockStatement")),ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("5543996881668550296"),"jetbrains.mps.baseLanguage.structure.BlockStatement"))));
}
