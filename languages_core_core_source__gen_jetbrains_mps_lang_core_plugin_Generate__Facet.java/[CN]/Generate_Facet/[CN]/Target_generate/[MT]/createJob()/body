{
  return new IJob.Stub(){
    public IResult execute(    final Iterable<IResource> input,    final IJobMonitor monitor,    final IPropertiesAccessor pa){
      final Wrappers._T<Iterable<IResource>> _output_fi61u2_a0e=new Wrappers._T<Iterable<IResource>>(null);
switch (0) {
case 0:
        boolean generationOk;
      if (!(pa.global().properties(new ITarget.Name("jetbrains.mps.lang.core.Generate.configure"),Generate_Facet.Target_configure.Variables.class).saveTransient())) {
        IGenerationTracer tracer=pa.global().properties(new ITarget.Name("jetbrains.mps.lang.core.Generate.checkParameters"),Generate_Facet.Target_checkParameters.Variables.class).project().getComponent(IGenerationTracer.class);
        if (tracer != null) {
          tracer.discardTracing();
        }
      }
    final Map<IModule,Iterable<SModelDescriptor>> retainedModels=RetainedUtil.collectModelsToRetain(input);
  IGenerationHandler gh=new MakeGenerationHandler(new _FunctionTypes._return_P1_E0<Boolean,GResource>(){
    public Boolean invoke(    GResource data){
      monitor.currentProgress().advanceWork("Generating",1000);
      data.retainedModels(MapSequence.fromMap(retainedModels).get(data.module()));
      _output_fi61u2_a0e.value=Sequence.fromIterable(_output_fi61u2_a0e.value).concat(Sequence.fromIterable(Sequence.<IResource>singleton(data)));
      return true;
    }
  }
);
IMessageHandler mh=new IMessageHandler(){
  public void handle(  IMessage msg){
    monitor.reportFeedback(new IFeedback.MESSAGE(msg));
  }
  public void clear(){
  }
}
;
monitor.currentProgress().beginWork("Generating",Sequence.fromIterable(input).foldLeft(0,new ILeftCombinator<IResource,Integer>(){
public Integer combine(Integer s,IResource it){
  return s + Sequence.fromIterable(((MResource)it).models()).count() * 1000;
}
}
) + 1000,monitor.currentProgress().workLeft());
monitor.currentProgress().advanceWork("Generating",1000);
List<SModelDescriptor> models=Sequence.fromIterable(input).translate(new ITranslator2<IResource,SModelDescriptor>(){
public Iterable<SModelDescriptor> translate(IResource in){
return ((MResource)in).models();
}
}
).toListSequence();
generationOk=GenerationFacade.generateModels(pa.global().properties(new ITarget.Name("jetbrains.mps.lang.core.Generate.checkParameters"),Generate_Facet.Target_checkParameters.Variables.class).project().getComponent(MPSProject.class),models,pa.global().properties(new ITarget.Name("jetbrains.mps.lang.core.Generate.checkParameters"),Generate_Facet.Target_checkParameters.Variables.class).operationContext(),gh,pa.global().properties(new ITarget.Name("jetbrains.mps.lang.core.Generate.checkParameters"),Generate_Facet.Target_checkParameters.Variables.class).monitorProvider().invoke(),mh,pa.global().properties(new ITarget.Name("jetbrains.mps.lang.core.Generate.configure"),Generate_Facet.Target_configure.Variables.class).generationOptions().create(),pa.global().properties(new ITarget.Name("jetbrains.mps.lang.core.Generate.checkParameters"),Generate_Facet.Target_checkParameters.Variables.class).project().getComponent(TransientModelsComponent.class));
monitor.currentProgress().finishWork("Generating");
if (!(generationOk)) {
return new IResult.FAILURE(_output_fi61u2_a0e.value);
}
_output_fi61u2_a0e.value=Sequence.fromIterable(_output_fi61u2_a0e.value).concat(Sequence.fromIterable(Sequence.<IResource>singleton(new DResource(Sequence.<IDelta>singleton(new IInternalDelta(){
public IDelta merge(IDelta toMerge){
return this;
}
public boolean contains(IDelta other){
return false;
}
public boolean reconcile(){
if (!(pa.global().properties(new ITarget.Name("jetbrains.mps.lang.core.Generate.configure"),Generate_Facet.Target_configure.Variables.class).saveTransient())) {
pa.global().properties(new ITarget.Name("jetbrains.mps.lang.core.Generate.checkParameters"),Generate_Facet.Target_checkParameters.Variables.class).project().getComponent(TransientModelsComponent.class).removeAllTransient();
}
return true;
}
public boolean acceptVisitor(IDeltaVisitor visitor){
return true;
}
}
)))));
default :
return new IResult.SUCCESS(_output_fi61u2_a0e.value);
}
}
}
;
}
