{
  try {
{
      ITarget.Name name=new ITarget.Name("jetbrains.mps.lang.core.Generate.checkParameters");
      Generate_Facet.Target_checkParameters.Variables props=properties.properties(name,Generate_Facet.Target_checkParameters.Variables.class);
      if (MapSequence.fromMap(store).containsKey("jetbrains.mps.lang.core.Generate.checkParameters.makeSession")) {
        props.makeSession(null);
      }
      if (MapSequence.fromMap(store).containsKey("jetbrains.mps.lang.core.Generate.checkParameters.cleanMake")) {
        props.cleanMake(Boolean.valueOf(MapSequence.fromMap(store).get("jetbrains.mps.lang.core.Generate.checkParameters.cleanMake")));
      }
    }
{
      ITarget.Name name=new ITarget.Name("jetbrains.mps.lang.core.Generate.configure");
      Generate_Facet.Target_configure.Variables props=properties.properties(name,Generate_Facet.Target_configure.Variables.class);
      if (MapSequence.fromMap(store).containsKey("jetbrains.mps.lang.core.Generate.configure.saveTransient")) {
        props.saveTransient(Boolean.valueOf(MapSequence.fromMap(store).get("jetbrains.mps.lang.core.Generate.configure.saveTransient")));
      }
      if (MapSequence.fromMap(store).containsKey("jetbrains.mps.lang.core.Generate.configure.generationOptions")) {
        props.generationOptions(null);
      }
      if (MapSequence.fromMap(store).containsKey("jetbrains.mps.lang.core.Generate.configure.parametersProvider")) {
        props.parametersProvider(null);
      }
      if (MapSequence.fromMap(store).containsKey("jetbrains.mps.lang.core.Generate.configure.transientModelsProvider")) {
        props.transientModelsProvider(null);
      }
    }
  }
 catch (  RuntimeException re) {
  }
}
