{
  SNode nodeToRefactor=new ModelComputeRunnable<SNode>(new Computable<SNode>(){
    public SNode compute(){
      return SNodeOperations.getNodeAncestor(((SNode)MapSequence.fromMap(_params).get("node")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506fL,"jetbrains.mps.baseLanguage.structure.Expression"),true,false);
    }
  }
).runRead(((EditorContext)MapSequence.fromMap(_params).get("editorContext")).getRepository().getModelAccess());
  if (ReadOnlyUtil.isCellsReadOnlyInEditor(((EditorComponent)MapSequence.fromMap(_params).get("component")),Sequence.<EditorCell>singleton(((EditorComponent)MapSequence.fromMap(_params).get("component")).findNodeCell(nodeToRefactor)))) {
    return false;
  }
  return IntroduceFieldRefactoring.isApplicable(nodeToRefactor);
}
