{
  try {
    FeatureUsageTracker.getInstance().triggerFeatureUsed("refactoring.introduceField");
    final Wrappers._boolean mustBeStatic=new Wrappers._boolean();
    ((EditorContext)MapSequence.fromMap(_params).get("editorContext")).getRepository().getModelAccess().runReadAction(new Runnable(){
      public void run(){
        mustBeStatic.value=(SNodeOperations.getAncestor(((SNode)MapSequence.fromMap(_params).get("node")),"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration",false,false) != null) || (SNodeOperations.getAncestor(((SNode)MapSequence.fromMap(_params).get("node")),"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration",false,false) != null) || (SNodeOperations.getAncestor(((SNode)MapSequence.fromMap(_params).get("node")),"jetbrains.mps.baseLanguage.structure.StaticInitializer",false,false) != null);
      }
    }
);
    final IntroduceFieldRefactoring introducer=new IntroduceFieldRefactoring();
    final Wrappers._T<String> error=new Wrappers._T<String>();
    ((EditorContext)MapSequence.fromMap(_params).get("editorContext")).getRepository().getModelAccess().runWriteAction(new Runnable(){
      public void run(){
        error.value=introducer.init(((SNode)MapSequence.fromMap(_params).get("node")),((EditorComponent)MapSequence.fromMap(_params).get("component")));
      }
    }
);
    if (error.value == null) {
      IntroduceFieldDialog dialog=new IntroduceFieldDialog(ProjectHelper.toIdeaProject(((MPSProject)MapSequence.fromMap(_params).get("mpsProject"))),introducer,((EditorContext)MapSequence.fromMap(_params).get("editorContext")),mustBeStatic.value);
      dialog.show();
    }
 else {
      JOptionPane.showMessageDialog(((EditorComponent)MapSequence.fromMap(_params).get("component")),error.value,"Error",JOptionPane.ERROR_MESSAGE);
    }
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Priority.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "IntroduceField",t);
    }
  }
}
