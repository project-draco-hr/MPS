{
  boolean hasRightUnmatchedParen=(AttributeOperations.getAttribute(node,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.structure.IncompleteRightParen")) != null);
  SNode replacing=SLinkOperations.getTarget(node,"expression",true);
  SNode leftMost=EditorParenthesisUtil.findRightmostOrLeftmostLeafExpression(replacing,false);
  SNodeOperations.replaceWithAnother(node,replacing);
  SNode rightMostNode=EditorParenthesisUtil.findRightmostOrLeftmostLeafExpression(replacing,true);
  ParenthesisUtil.checkExpressionPriorities(replacing);
  ParenthesisUtil.createUnmatchedLeftParenthesis(leftMost);
  if (hasRightUnmatchedParen) {
    ParenthesisUtil.createUnmatchedRightParenthesis(rightMostNode);
  }
  SelectionUtil.selectLabelCellAnSetCaret(editorContext,rightMostNode,SelectionManager.LAST_EDITABLE_CELL,-1);
}
