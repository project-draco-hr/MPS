{
  if (virtualFiles != null) {
    final SModelFileTracker modelFileTracker=SModelFileTracker.getInstance(event.getData(MPSCommonDataKeys.MPS_PROJECT).getRepository());
    return Sequence.fromIterable(Sequence.fromArray(virtualFiles)).where(new IWhereFilter<VirtualFile>(){
      public boolean accept(      VirtualFile vf){
        return vf.isInLocalFileSystem() && vf.exists() && !(vf.isDirectory());
      }
    }
).select(new ISelector<VirtualFile,SModel>(){
      public SModel select(      VirtualFile vf){
        return modelFileTracker.findModel(VirtualFileUtils.toIFile(vf));
      }
    }
).where(new IWhereFilter<SModel>(){
      public boolean accept(      SModel m){
        return m != null && GenerationFacade.canGenerate(m);
      }
    }
).toListSequence();
  }
 else {
    return ListSequence.fromList(new ArrayList<SModel>());
  }
}
