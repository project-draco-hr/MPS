{
switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0b,fqName)) {
case 49:
    return new OldRefactoring_BehaviorDescriptor();
case 60:
  return new RequiredAdditionalArgument_BehaviorDescriptor();
case 24:
return new IsApplicableClause_BehaviorDescriptor();
case 14:
return new DoRefactorClause_BehaviorDescriptor();
case 61:
return new RequiredAdditionalArgumentReference_BehaviorDescriptor();
case 66:
return new UpdateModelClause_BehaviorDescriptor();
case 7:
return new ConceptFunctionParameter_SModel_BehaviorDescriptor();
case 20:
return new GetModelsToGenerateClause_BehaviorDescriptor();
case 62:
return new RequiredUserEnteredArgument_BehaviorDescriptor();
case 18:
return new FilterArgumentClause_BehaviorDescriptor();
case 9:
return new ConceptFunctionParameter_UserArgument_BehaviorDescriptor();
case 65:
return new UpdateModelByDefaultOperation_BehaviorDescriptor();
case 3:
return new ChangeFeatureNameOperation_BehaviorDescriptor();
case 4:
return new ChooseComponentClause_BehaviorDescriptor();
case 67:
return new UpdateModelProcedure_BehaviorDescriptor();
case 23:
return new InitialValueClause_BehaviorDescriptor();
case 0:
return new AbstractMoveNodeExpression_BehaviorDescriptor();
case 39:
return new MoveNodeToModelExpression_BehaviorDescriptor();
case 40:
return new MoveNodeToNodeExpression_BehaviorDescriptor();
case 41:
return new MoveNodesToModelExpression_BehaviorDescriptor();
case 42:
return new MoveNodesToNodeExpression_BehaviorDescriptor();
case 1:
return new AffectedNodesClause_BehaviorDescriptor();
case 13:
return new DeleteFeatureOperation_BehaviorDescriptor();
case 25:
return new IsApplicableToModelClause_BehaviorDescriptor();
case 5:
return new ConceptFunctionParameter_Model_BehaviorDescriptor();
case 21:
return new GetModelsToUpdateClause_BehaviorDescriptor();
case 16:
return new ExecuteFindersExpression_BehaviorDescriptor();
case 19:
return new FinderReference_BehaviorDescriptor();
case 48:
return new NodesToOpenClause_BehaviorDescriptor();
case 46:
return new NodesExpression_BehaviorDescriptor();
case 43:
return new NodeExpression_BehaviorDescriptor();
case 31:
return new ModelDescriptorExpression_BehaviorDescriptor();
case 36:
return new ModuleExpression_BehaviorDescriptor();
case 52:
return new ProjectExpression_BehaviorDescriptor();
case 63:
return new ScopeExpression_BehaviorDescriptor();
case 50:
return new OperationContextExpression_BehaviorDescriptor();
case 30:
return new MergeNodeWithAnotherNodeExpression_BehaviorDescriptor();
case 33:
return new ModelTarget_BehaviorDescriptor();
case 38:
return new ModuleTarget_BehaviorDescriptor();
case 45:
return new NodeTarget_BehaviorDescriptor();
case 26:
return new IsApplicableToModuleClause_BehaviorDescriptor();
case 6:
return new ConceptFunctionParameter_Module_BehaviorDescriptor();
case 27:
return new IsApplicableToNodeClause_BehaviorDescriptor();
case 8:
return new ConceptFunctionParameter_SNode_BehaviorDescriptor();
case 56:
return new RefactoringField_BehaviorDescriptor();
case 58:
return new RefactoringParameter_BehaviorDescriptor();
case 59:
return new RefactoringParameterReference_BehaviorDescriptor();
case 57:
return new RefactoringFieldReference_BehaviorDescriptor();
case 22:
return new InitClause_BehaviorDescriptor();
case 54:
return new Refactoring_BehaviorDescriptor();
case 15:
return new DoWhenDoneClause_BehaviorDescriptor();
case 32:
return new ModelDescriptorOperation_BehaviorDescriptor();
case 37:
return new ModuleOperation_BehaviorDescriptor();
case 44:
return new NodeOperation_BehaviorDescriptor();
case 47:
return new NodesOperation_BehaviorDescriptor();
case 51:
return new OperationContextOperation_BehaviorDescriptor();
case 53:
return new ProjectOperation_BehaviorDescriptor();
case 64:
return new ScopeOperation_BehaviorDescriptor();
case 55:
return new RefactoringContext_ConceptFunctionParameter_BehaviorDescriptor();
case 10:
return new ContextType_BehaviorDescriptor();
case 35:
return new ModelsToGenerateClause_BehaviorDescriptor();
case 2:
return new ChangeFeatureNameExpression_BehaviorDescriptor();
case 12:
return new DeleteFeatureExpression_BehaviorDescriptor();
case 29:
return new MainProjectOperation_BehaviorDescriptor();
case 34:
return new ModelsToGenerateByDefault_BehaviorDescriptor();
case 11:
return new CreateRefactoringContext_BehaviorDescriptor();
case 28:
return new IsRefactoringApplicable_BehaviorDescriptor();
case 17:
return new ExecuteRefactoringStatement_BehaviorDescriptor();
default :
return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
}
}
