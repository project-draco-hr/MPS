{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_846f5o_a0bb.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return myAbstractMoveExpression__BehaviorDescriptor;
      }
    break;
case 1:
  if (true) {
    return myAffectedNodesClause__BehaviorDescriptor;
  }
break;
case 2:
if (true) {
return myConceptFunctionParameter_Model__BehaviorDescriptor;
}
break;
case 3:
if (true) {
return myConceptFunctionParameter_SModel__BehaviorDescriptor;
}
break;
case 4:
if (true) {
return myContextMemberOperation__BehaviorDescriptor;
}
break;
case 5:
if (true) {
return myDoRefactorClause__BehaviorDescriptor;
}
break;
case 6:
if (true) {
return myDoWhenDoneClause__BehaviorDescriptor;
}
break;
case 7:
if (true) {
return myGetModelsToUpdateClause__BehaviorDescriptor;
}
break;
case 8:
if (true) {
return myInitClause__BehaviorDescriptor;
}
break;
case 9:
if (true) {
return myIsApplicableToModelClause__BehaviorDescriptor;
}
break;
case 10:
if (true) {
return myIsApplicableToModuleClause__BehaviorDescriptor;
}
break;
case 11:
if (true) {
return myIsApplicableToNodeClause__BehaviorDescriptor;
}
break;
case 12:
if (true) {
return myMainProjectOperation__BehaviorDescriptor;
}
break;
case 13:
if (true) {
return myModelDescriptorOperation__BehaviorDescriptor;
}
break;
case 14:
if (true) {
return myModelsToGenerateClause__BehaviorDescriptor;
}
break;
case 15:
if (true) {
return myModuleOperation__BehaviorDescriptor;
}
break;
case 16:
if (true) {
return myNodeOperation__BehaviorDescriptor;
}
break;
case 17:
if (true) {
return myNodesOperation__BehaviorDescriptor;
}
break;
case 18:
if (true) {
return myOperationContextOperation__BehaviorDescriptor;
}
break;
case 19:
if (true) {
return myProjectOperation__BehaviorDescriptor;
}
break;
case 20:
if (true) {
return myRefactoring__BehaviorDescriptor;
}
break;
case 21:
if (true) {
return myRefactoringFieldReference__BehaviorDescriptor;
}
break;
case 22:
if (true) {
return myRepositoryOperation__BehaviorDescriptor;
}
break;
case 23:
if (true) {
return myScopeOperation__BehaviorDescriptor;
}
break;
default :
}
}
return null;
}
