{
  List<SearchResult<ModelCheckerIssue>> results=ListSequence.fromList(new ArrayList<SearchResult<ModelCheckerIssue>>());
  if (model == null || model == null || model.getModule() == null) {
    return results;
  }
  monitor.start("unresolved references",1);
  for (  SNode node : ListSequence.fromList(SModelOperations.getNodes(model,null))) {
    if (monitor.isCanceled()) {
      break;
    }
    for (    final SReference ref : Sequence.fromIterable(SNodeOperations.getReferences(node))) {
      if ((AttributeOperations.getAttribute(node,new IAttributeDescriptor.LinkAttribute("jetbrains.mps.lang.generator.structure.ReferenceMacro",SLinkOperations.getRole(ref))) != null)) {
        continue;
      }
      if (jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(ref) == null) {
        SpecificChecker.addIssue(results,node,"Unresolved reference: " + SLinkOperations.getResolveInfo(ref),ModelChecker.SEVERITY_ERROR,"unresolved reference",new IModelCheckerFix(){
          public boolean doFix(){
            return ResolverComponent.getInstance().resolve(ref,operationContext.getProject().getRepository());
          }
        }
);
      }
      final SModelReference mref=ref.getTargetSModelReference();
      if (mref == null) {
        continue;
      }
      SModel m=mref.resolve(MPSModuleRepository.getInstance());
      if (m == null) {
        continue;
      }
      if (VisibilityUtil.isVisible(model,m)) {
        continue;
      }
      SpecificChecker.addIssue(results,node,"Target module " + m.getModule() + " should be imported",ModelChecker.SEVERITY_ERROR,"target module not imported",new IModelCheckerFix(){
        public boolean doFix(){
          SModel m2=mref.resolve(MPSModuleRepository.getInstance());
          if (m2 == null) {
            return false;
          }
          if (VisibilityUtil.isVisible(model,m2)) {
            return false;
          }
          SModuleReference moduleReference=check_xiru3y_a0f0f0i0c0e0b(check_xiru3y_a0a5a5a8a2a4a1(m2));
          if (moduleReference == null) {
            return false;
          }
          SModule module=check_xiru3y_a0i0f0i0c0e0b(model);
          if (module == null) {
            return false;
          }
          ((AbstractModule)module).addDependency(moduleReference,false);
          return true;
        }
      }
);
    }
  }
  monitor.done();
  return results;
}
