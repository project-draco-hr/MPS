{
  ensureCoordsCalculated();
  ChangeGroup changeGroup=ListSequence.fromList(myChangeGroupBuilder.getChangeGroups()).findFirst(new IWhereFilter<ChangeGroup>(){
    public boolean accept(    ChangeGroup cg){
      return MapSequence.fromMap(myGroupToButtonCoord).get(cg).y - GAP / 2 < p.getY() && p.getY() < MapSequence.fromMap(myGroupToButtonCoord).get(cg).y + ICON_SIZE + GAP / 2;
    }
  }
);
  MergeButtonsPainter.Action action=null;
  if (changeGroup != null) {
    double localX=p.getX() - getLeftHighlighter().getFoldingLineX();
    int cgx=MapSequence.fromMap(myGroupToButtonCoord).get(changeGroup).x;
    if (cgx - GAP / 2 < localX && localX < cgx + ICON_SIZE + GAP / 2) {
      action=(myHighlightLeft ? MergeButtonsPainter.Action.EXCLUDE : MergeButtonsPainter.Action.APPLY);
    }
 else     if (cgx + ICON_SIZE + GAP / 2 < localX && localX < cgx + 2 * ICON_SIZE + 3 * GAP / 2) {
      action=(myHighlightLeft ? MergeButtonsPainter.Action.APPLY : MergeButtonsPainter.Action.EXCLUDE);
    }
    if (action == null) {
      changeGroup=null;
    }
  }
  return MultiTuple.<ChangeGroup,MergeButtonsPainter.Action>from(changeGroup,action);
}
