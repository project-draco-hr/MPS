{
{
    SAbstractConcept cncpt=((SAbstractConcept)concept);
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt),MetaAdapterFactory.getConcept(0xfbc142795e2a4c87L,0xa5d15f7061e6c456L,0x2bd07aa080dfb3a4L,"jetbrains.mps.debugger.api.lang.structure.BreakpointCreator"))) {
      return Collections.<ConceptEditor>singletonList(new BreakpointCreator_Editor());
    }
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt),MetaAdapterFactory.getConcept(0xfbc142795e2a4c87L,0xa5d15f7061e6c456L,0x2bd07aa080dfb937L,"jetbrains.mps.debugger.api.lang.structure.BreakpointableNodeItem"))) {
      return Collections.<ConceptEditor>singletonList(new BreakpointableNodeItem_Editor());
    }
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt),MetaAdapterFactory.getConcept(0xfbc142795e2a4c87L,0xa5d15f7061e6c456L,0x5058b4b262ffd5deL,"jetbrains.mps.debugger.api.lang.structure.ConceptDeclarationReference"))) {
      return Collections.<ConceptEditor>singletonList(new ConceptDeclarationReference_Editor());
    }
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt),MetaAdapterFactory.getConcept(0xfbc142795e2a4c87L,0xa5d15f7061e6c456L,0x23a852e9c43bcae9L,"jetbrains.mps.debugger.api.lang.structure.CreateBreakpointOperation"))) {
      return Collections.<ConceptEditor>singletonList(new CreateBreakpointOperation_Editor());
    }
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt),MetaAdapterFactory.getConcept(0xfbc142795e2a4c87L,0xa5d15f7061e6c456L,0x5d457621242d16f5L,"jetbrains.mps.debugger.api.lang.structure.DebuggerConfiguration"))) {
      return Collections.<ConceptEditor>singletonList(new DebuggerConfiguration_Editor());
    }
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt),MetaAdapterFactory.getConcept(0xfbc142795e2a4c87L,0xa5d15f7061e6c456L,0xf528808f912d151L,"jetbrains.mps.debugger.api.lang.structure.DebuggerReference"))) {
      return Collections.<ConceptEditor>singletonList(new DebuggerReference_Editor());
    }
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt),MetaAdapterFactory.getConcept(0xfbc142795e2a4c87L,0xa5d15f7061e6c456L,0xf528808f912bd83L,"jetbrains.mps.debugger.api.lang.structure.DebuggerType"))) {
      return Collections.<ConceptEditor>singletonList(new DebuggerType_Editor());
    }
  }
  return Collections.<ConceptEditor>emptyList();
}
