{
  List<SNode> result=ListOperations.<SNode>createList();
  System.out.println("Node " + node.getId());
  if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.lang.editor.structure.CellModel_Collection")) {
    System.out.println("Collections");
    if (SLinkOperations.getTarget(node,"renderingCondition",true) != null) {
      moveToIndentLayout(node);
      if (isLast) {
        SNode classItem=SConceptOperations.createNewNode("jetbrains.mps.lang.editor.structure.IndentLayoutNewLineStyleClassItem",null);
        SPropertyOperations.set(classItem,"flag","" + true);
        SLinkOperations.addChild(node,"styleItem",classItem);
      }
      ListSequence.fromList(result).addElement(node);
    }
 else {
      List<SNode> children=SLinkOperations.getTargets(node,"childCellModel",true);
      for (int i=0; i < ListSequence.fromList(children).count(); i++) {
        ListSequence.fromList(result).addSequence(ListSequence.fromList(moveToIndentLayoutChildren(ListSequence.fromList(children).getElement(i),isLast && (i == ListSequence.fromList(children).count() - 1))));
      }
    }
  }
 else   if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.lang.editor.structure.CellModel_Indent")) {
    System.out.println("Indent");
    SNode classItem=SConceptOperations.createNewNode("jetbrains.mps.lang.editor.structure.IndentLayoutIndentStyleClassItem",null);
    SPropertyOperations.set(classItem,"flag","" + true);
    SLinkOperations.addChild(SNodeOperations.getNextSibling(node),"styleItem",classItem);
  }
 else {
    System.out.println("Node");
    ListSequence.fromList(result).addElement(node);
    if (isLast) {
      SNode classItem=SConceptOperations.createNewNode("jetbrains.mps.lang.editor.structure.IndentLayoutNewLineStyleClassItem",null);
      SPropertyOperations.set(classItem,"flag","" + true);
      SLinkOperations.addChild(node,"styleItem",classItem);
    }
  }
  return result;
}
