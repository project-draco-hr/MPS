{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=MetaAdapterFactory.getConcept(0xc7d5b9dda05f4be2L,0xbc73f2e16994cc67L,0x340eb2bd2e03d154L,"jetbrains.mps.lang.classLike.structure.ClassLikeMethod").getDeclarationNode();
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          return Sequence.fromIterable(SubstituteUtil.getMethodDescriptors(_context.getParentNode())).where(new IWhereFilter<SNode>(){
            public boolean accept(            final SNode it){
              boolean noPlaceholder=Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(SNodeOperations.cast(_context.getParentNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x4a9a46de59132803L,"member")),MetaAdapterFactory.getConcept(0xc7d5b9dda05f4be2L,0xbc73f2e16994cc67L,0x59e9926e840d7db2L,"jetbrains.mps.lang.classLike.structure.ClassLikeMemberPlaceholder"))).where(new IWhereFilter<SNode>(){
                public boolean accept(                SNode member){
                  return SLinkOperations.getTarget(member,MetaAdapterFactory.getReferenceLink(0xc7d5b9dda05f4be2L,0xbc73f2e16994cc67L,0x59e9926e840d7db2L,0x59e9926e840d7db5L,"decl")) == it;
                }
              }
).isEmpty();
              boolean noMember=Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(SNodeOperations.cast(_context.getParentNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x4a9a46de59132803L,"member")),MetaAdapterFactory.getConcept(0xc7d5b9dda05f4be2L,0xbc73f2e16994cc67L,0x340eb2bd2e03d154L,"jetbrains.mps.lang.classLike.structure.ClassLikeMethod"))).where(new IWhereFilter<SNode>(){
                public boolean accept(                SNode member){
                  return SLinkOperations.getTarget(member,MetaAdapterFactory.getReferenceLink(0xc7d5b9dda05f4be2L,0xbc73f2e16994cc67L,0x340eb2bd2e03d154L,0x443e89bb321537L,"decl")) == it;
                }
              }
).isEmpty();
              return noPlaceholder && noMember;
            }
          }
);
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              return ((SNode)BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),(item),"virtual_create_8260330507834998478",new Object[]{}));
            }
            public String getMatchingText(            String pattern){
              return SPropertyOperations.getString((item),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
            }
            public String getVisibleMatchingText(            String pattern){
              return getMatchingText(pattern);
            }
            public String getDescriptionText(            String pattern){
              return "method";
            }
          }
);
        }
      }
    }
  }
{
    SNode outputConcept=MetaAdapterFactory.getConcept(0xc7d5b9dda05f4be2L,0xbc73f2e16994cc67L,0x59e9926e840d9151L,"jetbrains.mps.lang.classLike.structure.ClassLikeProperty").getDeclarationNode();
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          return Sequence.fromIterable(SubstituteUtil.getPropertyDescriptors(_context.getParentNode())).where(new IWhereFilter<SNode>(){
            public boolean accept(            final SNode it){
              boolean noPlaceholder=Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(SNodeOperations.cast(_context.getParentNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x4a9a46de59132803L,"member")),MetaAdapterFactory.getConcept(0xc7d5b9dda05f4be2L,0xbc73f2e16994cc67L,0x59e9926e840d7db2L,"jetbrains.mps.lang.classLike.structure.ClassLikeMemberPlaceholder"))).where(new IWhereFilter<SNode>(){
                public boolean accept(                SNode member){
                  return SLinkOperations.getTarget(member,MetaAdapterFactory.getReferenceLink(0xc7d5b9dda05f4be2L,0xbc73f2e16994cc67L,0x59e9926e840d7db2L,0x59e9926e840d7db5L,"decl")) == it;
                }
              }
).isEmpty();
              boolean noMember=Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(SNodeOperations.cast(_context.getParentNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x4a9a46de59132803L,"member")),MetaAdapterFactory.getConcept(0xc7d5b9dda05f4be2L,0xbc73f2e16994cc67L,0x59e9926e840d9151L,"jetbrains.mps.lang.classLike.structure.ClassLikeProperty"))).where(new IWhereFilter<SNode>(){
                public boolean accept(                SNode member){
                  return SLinkOperations.getTarget(member,MetaAdapterFactory.getReferenceLink(0xc7d5b9dda05f4be2L,0xbc73f2e16994cc67L,0x59e9926e840d9151L,0x772497abf2e77969L,"decl")) == it;
                }
              }
).isEmpty();
              return noPlaceholder && noMember;
            }
          }
);
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              return ((SNode)BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),(item),"virtual_create_8260330507834998478",new Object[]{}));
            }
            public String getMatchingText(            String pattern){
              return SPropertyOperations.getString((item),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
            }
            public String getVisibleMatchingText(            String pattern){
              return getMatchingText(pattern);
            }
            public String getDescriptionText(            String pattern){
              return "property";
            }
          }
);
        }
      }
    }
  }
{
    Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
      public Iterable<SNode> compute(){
        return Sequence.fromIterable(SubstituteUtil.getCustomDescriptors(_context.getParentNode())).where(new IWhereFilter<SNode>(){
          public boolean accept(          final SNode it){
            boolean noPlaceholder=Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(SNodeOperations.cast(_context.getParentNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x4a9a46de59132803L,"member")),MetaAdapterFactory.getConcept(0xc7d5b9dda05f4be2L,0xbc73f2e16994cc67L,0x59e9926e840d7db2L,"jetbrains.mps.lang.classLike.structure.ClassLikeMemberPlaceholder"))).where(new IWhereFilter<SNode>(){
              public boolean accept(              SNode member){
                return SLinkOperations.getTarget(member,MetaAdapterFactory.getReferenceLink(0xc7d5b9dda05f4be2L,0xbc73f2e16994cc67L,0x59e9926e840d7db2L,0x59e9926e840d7db5L,"decl")) == it;
              }
            }
).isEmpty();
            boolean noMember=ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(_context.getParentNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x4a9a46de59132803L,"member"))).where(new IWhereFilter<SNode>(){
              public boolean accept(              SNode member){
                return SNodeOperations.isInstanceOf(member,SNodeOperations.asSConcept(SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(0xc7d5b9dda05f4be2L,0xbc73f2e16994cc67L,0x72b255a044805d9cL,0x72b255a044805d9fL,"cncpt"))));
              }
            }
).isEmpty();
            return noPlaceholder && noMember;
          }
        }
).select(new ISelector<SNode,SNode>(){
          public SNode select(          SNode it){
            return ((SNode)SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(0xc7d5b9dda05f4be2L,0xbc73f2e16994cc67L,0x72b255a044805d9cL,0x72b255a044805d9fL,"cncpt")));
          }
        }
);
      }
    }
.compute();
    if (queryResult != null) {
      for (      SNode item : queryResult) {
        ListSequence.fromList(result).addSequence(ListSequence.fromList(ChildSubstituteActionsHelper.createDefaultSubstituteActions(item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter())));
      }
    }
  }
  return result;
}
