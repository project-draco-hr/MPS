{
  TraceablePositionInfo positionInfo=getPositionInfo();
  if (positionInfo == null) {
    return getModelPsiFile();
  }
  final String fileName=positionInfo.getFileName();
  final String fullPath=ModelAccess.instance().runReadAction(new Computable<String>(){
    @Override public String compute(){
      SModelDescriptor modelDescriptor=myNodePointer.getNode().getModel().getModelDescriptor();
      IFile defaultOutputDir=FileGenerationUtil.getDefaultOutputDir(modelDescriptor,FileSystem.getInstance().getFileByPath(modelDescriptor.getModule().getGeneratorOutputPath()));
      return defaultOutputDir.getDescendant(fileName).getPath();
    }
  }
);
  return ApplicationManager.getApplication().runReadAction(new com.intellij.openapi.util.Computable<PsiFile>(){
    @Override public PsiFile compute(){
      return PsiManager.getInstance(myProject).findFile(LocalFileSystem.getInstance().findFileByPath(fullPath));
    }
  }
);
}
