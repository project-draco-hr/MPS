{
  final String path=ModelAccess.instance().runReadAction(new Computable<String>(){
    @Override public String compute(){
      SModelDescriptor modelDescriptor=myNodePointer.getNode().getModel().getModelDescriptor();
      if (modelDescriptor instanceof BaseSModelDescriptorWithSource) {
        ModelDataSource source=((BaseSModelDescriptorWithSource)modelDescriptor).getSource();
        if (source instanceof RegularModelDataSource) {
          return ((RegularModelDataSource)source).getFilesToListen().iterator().next();
        }
      }
      return null;
    }
  }
);
  return ApplicationManager.getApplication().runReadAction(new com.intellij.openapi.util.Computable<PsiFile>(){
    @Override public PsiFile compute(){
      if (path == null) {
        return PsiManager.getInstance(myProject).findFile(LocalFileSystem.getInstance().findFileByPath(PathManager.getBinPath()));
      }
      return PsiManager.getInstance(myProject).findFile(LocalFileSystem.getInstance().findFileByPath(path));
    }
  }
);
}
