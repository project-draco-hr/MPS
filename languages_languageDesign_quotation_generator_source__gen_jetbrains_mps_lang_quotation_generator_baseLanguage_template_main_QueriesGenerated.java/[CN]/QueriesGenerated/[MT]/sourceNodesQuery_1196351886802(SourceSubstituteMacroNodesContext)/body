{
  final List<SNode> result=ListSequence.fromList(new ArrayList<SNode>());
  for (  SProperty property : Sequence.fromIterable(_context.getNode().getProperties())) {
    if ((AttributeOperations.getAttribute(_context.getNode(),new IAttributeDescriptor.PropertyAttribute("jetbrains.mps.lang.quotation.structure.PropertyAntiquotation",property.getName())) != null)) {
      continue;
    }
    SNode propertyNode=SModelOperations.createNewNode(_context.getOutputModel(),null,MetaAdapterFactory.getConcept(new UUID(4184707567256882268l,-4914423608129972907l),8389748773577451463l,"jetbrains.mps.lang.quotation.structure.GeneratorInternal_PropertyDescriptor"));
    SLinkOperations.setTarget(propertyNode,MetaAdapterFactory.getReferenceLink(new UUID(4184707567256882268l,-4914423608129972907l),8389748773577451463l,8389748773577465499l,"property"),(SNode)property.getDeclarationNode());
    SPropertyOperations.set(propertyNode,MetaAdapterFactory.getProperty(new UUID(4184707567256882268l,-4914423608129972907l),8389748773577451463l,8389748773577451513l,"propertyValue"),_context.getNode().getProperty(property));
    ListSequence.fromList(result).addElement(propertyNode);
  }
  return result;
}
