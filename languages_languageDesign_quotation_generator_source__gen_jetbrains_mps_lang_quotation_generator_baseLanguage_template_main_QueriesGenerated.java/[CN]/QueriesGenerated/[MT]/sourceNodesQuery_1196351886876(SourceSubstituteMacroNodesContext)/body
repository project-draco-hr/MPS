{
  final List<SNode> result=new ArrayList<SNode>();
  for (  SReference ref : Sequence.fromIterable(_context.getNode().getReferences())) {
    if ((AttributeOperations.getAttribute(_context.getNode(),new IAttributeDescriptor.LinkAttribute("jetbrains.mps.lang.quotation.structure.ReferenceAntiquotation",ref.getRole())) != null)) {
      continue;
    }
    SNode targetNode=((SNode)ref.getTargetNode());
    if (SNodeOperations.getAncestor(targetNode,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == SNodeOperations.getAncestor(_context.getNode(),"jetbrains.mps.lang.quotation.structure.Quotation",false,false)) {
      continue;
    }
    SNode referenceNode=SModelOperations.createNewNode(_context.getOutputModel(),null,"jetbrains.mps.lang.core.structure.BaseConcept");
    referenceNode.setProperty("role",ref.getRole());
    if (targetNode != null && TracingUtil.getInput(targetNode) != null) {
      SNodeReference originalInput=TracingUtil.getInput(targetNode);
      referenceNode.setProperty("targetModel",originalInput.getModelReference().toString());
      targetNode=originalInput.resolve(MPSModuleRepository.getInstance());
    }
 else {
      SModelReference targetModelRef;
      if (ref.getTargetSModelReference() == null) {
        targetModelRef=(targetNode == null || SNodeOperations.getModel(targetNode) == null ? null : SNodeOperations.getModel(targetNode).getReference());
      }
 else {
        targetModelRef=((jetbrains.mps.smodel.SModelReference)ref.getTargetSModelReference()).update();
      }
      if (targetModelRef != null) {
        referenceNode.setProperty("targetModel",targetModelRef.toString());
      }
    }
    if (targetNode != null) {
      referenceNode.setProperty("targetNodeId",targetNode.getNodeId().toString());
    }
    ListSequence.fromList(result).addElement(referenceNode);
  }
  return result;
}
