{
  List<SNode> result=new ArrayList<SNode>();
  SNode quotation=_context.getNode();
  if (SLinkOperations.getTarget(quotation,MetaAdapterFactory.getContainmentLink(0x3a13115c633c4c5cL,0xbbcc75c4219e9555L,0x1168c104659L,0x1168c10465bL,"modelToCreate")) != null) {
    ListSequence.fromList(result).addElement(SLinkOperations.getTarget(quotation,MetaAdapterFactory.getContainmentLink(0x3a13115c633c4c5cL,0xbbcc75c4219e9555L,0x1168c104659L,0x1168c10465bL,"modelToCreate")));
  }
  if (SLinkOperations.getTarget(quotation,MetaAdapterFactory.getContainmentLink(0x3a13115c633c4c5cL,0xbbcc75c4219e9555L,0x1168c104659L,0x2c22b7a3db809c05L,"nodeId")) != null) {
    ListSequence.fromList(result).addElement(SLinkOperations.getTarget(quotation,MetaAdapterFactory.getContainmentLink(0x3a13115c633c4c5cL,0xbbcc75c4219e9555L,0x1168c104659L,0x2c22b7a3db809c05L,"nodeId")));
  }
  for (  SNode child : SNodeOperations.getNodeDescendants(quotation,MetaAdapterFactory.getInterfaceConcept(0x3a13115c633c4c5cL,0xbbcc75c4219e9555L,0x1168c104656L,"jetbrains.mps.lang.quotation.structure.AbstractAntiquotation"),false,new SAbstractConcept[]{})) {
    ListSequence.fromList(result).addElement(SLinkOperations.getTarget(child,MetaAdapterFactory.getContainmentLink(0x3a13115c633c4c5cL,0xbbcc75c4219e9555L,0x1168c104656L,0x1168c104657L,"expression")));
  }
  return result;
}
