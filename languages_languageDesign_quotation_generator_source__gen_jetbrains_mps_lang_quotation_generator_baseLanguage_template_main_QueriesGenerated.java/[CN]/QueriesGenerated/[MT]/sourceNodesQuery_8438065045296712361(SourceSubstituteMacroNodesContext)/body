{
  List<SNode> result=new ArrayList<SNode>();
  if (SLinkOperations.getTarget(((SNode)_context.getVariable("transientQuotation")),"modelToCreate",true) != null) {
    ListSequence.fromList(result).addElement(SLinkOperations.getTarget(((SNode)_context.getVariable("transientQuotation")),"modelToCreate",true));
  }
  if (SLinkOperations.getTarget(((SNode)_context.getVariable("transientQuotation")),"nodeId",true) != null) {
    ListSequence.fromList(result).addElement(SLinkOperations.getTarget(((SNode)_context.getVariable("transientQuotation")),"nodeId",true));
  }
  for (  SNode child : SNodeOperations.getDescendants(((SNode)_context.getVariable("transientQuotation")),"jetbrains.mps.lang.quotation.structure.AbstractAntiquotation",false,new String[]{})) {
    ListSequence.fromList(result).addElement(SLinkOperations.getTarget(child,"expression",true));
  }
  return result;
}
