{
  SNode root=SLinkOperations.getTarget(_context.getNode(),MetaAdapterFactory.getContainmentLink(0x3a13115c633c4c5cL,0xbbcc75c4219e9555L,0x1168c104659L,0x1168c10465aL,"quotedNode"));
  List<SNode> result=ListSequence.fromList(new ArrayList<SNode>());
  List<SNode> frontier=ListSequence.fromList(new ArrayList<SNode>());
  ListSequence.fromList(frontier).addElement(root);
  List<SNode> newFrontier=ListSequence.fromList(new ArrayList<SNode>());
  while (ListSequence.fromList(frontier).isNotEmpty()) {
    for (    SNode node : frontier) {
      for (      SNode child : SNodeOperations.getChildren(node)) {
        if (!(SNodeOperations.isInstanceOf(child,MetaAdapterFactory.getInterfaceConcept(0x3a13115c633c4c5cL,0xbbcc75c4219e9555L,0x1168c104656L,"jetbrains.mps.lang.quotation.structure.AbstractAntiquotation")))) {
          for (          SReference reference : child.getReferences()) {
            if (AttributeOperations.getAttribute(child,new IAttributeDescriptor.LinkAttribute("jetbrains.mps.lang.quotation.structure.ReferenceAntiquotation",reference.getRole())) != null || AttributeOperations.getAttribute(child,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.lang.quotation.structure.Antiquotation")) != null || AttributeOperations.getAttribute(child,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.lang.quotation.structure.ListAntiquotation")) != null) {
              continue;
            }
            SNode targetNode=reference.getTargetNode();
            if (SNodeOperations.getNodeAncestor(targetNode,MetaAdapterFactory.getConcept(0x3a13115c633c4c5cL,0xbbcc75c4219e9555L,0x1168c104659L,"jetbrains.mps.lang.quotation.structure.Quotation"),false,false) == SNodeOperations.getNodeAncestor(child,MetaAdapterFactory.getConcept(0x3a13115c633c4c5cL,0xbbcc75c4219e9555L,0x1168c104659L,"jetbrains.mps.lang.quotation.structure.Quotation"),false,false)) {
              SNode referenceNode=SModelOperations.createNewNode(_context.getOutputModel(),null,SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3a13115c633c4c5cL,0xbbcc75c4219e9555L,0x1c4b068f93acf228L,"jetbrains.mps.lang.quotation.structure.GeneratorInternal_InternalReferenceHolder")));
              SLinkOperations.setTarget(referenceNode,MetaAdapterFactory.getReferenceLink(0x3a13115c633c4c5cL,0xbbcc75c4219e9555L,0x1c4b068f93acf228L,0x1c4b068f93acf229L,"role"),(SNode)reference.getLink().getDeclarationNode());
              SLinkOperations.setTarget(referenceNode,MetaAdapterFactory.getReferenceLink(0x3a13115c633c4c5cL,0xbbcc75c4219e9555L,0x1c4b068f93acf228L,0x1c4b068f93ad27bcL,"targetNode"),targetNode);
              SLinkOperations.setTarget(referenceNode,MetaAdapterFactory.getReferenceLink(0x3a13115c633c4c5cL,0xbbcc75c4219e9555L,0x1c4b068f93acf228L,0x1c4b068f93ad27c5L,"sourceNode"),child);
              ListSequence.fromList(result).addElement(referenceNode);
            }
          }
          ListSequence.fromList(newFrontier).addElement(child);
        }
      }
    }
    frontier=newFrontier;
    newFrontier=ListSequence.fromList(new ArrayList<SNode>());
  }
  return result;
}
