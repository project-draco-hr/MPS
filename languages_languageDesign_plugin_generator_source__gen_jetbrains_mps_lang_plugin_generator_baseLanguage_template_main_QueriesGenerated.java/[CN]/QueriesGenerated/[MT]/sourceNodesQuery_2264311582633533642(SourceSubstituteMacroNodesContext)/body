{
  for (  SNode kmap : ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(),"keymapsRef",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return !(SPropertyOperations.getBoolean(SLinkOperations.getTarget(it,"keymap",false),"isPluginXmlKeymap"));
    }
  }
)) {
    _context.showErrorMessage(_context.getOriginalCopiedInputNode(kmap),"keymap should have property 'register via plugin.xml: true'");
  }
  return ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(),"actionGroups",true)).translate(new ITranslator2<SNode,SNode>(){
    public Iterable<SNode> translate(    SNode it){
      List<SNode> actions=new ArrayList<SNode>();
      if (!(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SLinkOperations.getTarget(it,"group",false),"contents",true),"jetbrains.mps.lang.plugin.structure.ElementListContents"))) {
        _context.showErrorMessage(it,"only groups with static content are supported");
        return actions;
      }
      for (      SNode el : SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(SLinkOperations.getTarget(it,"group",false),"contents",true),"jetbrains.mps.lang.plugin.structure.ElementListContents"),"reference",true)) {
        if (SNodeOperations.isInstanceOf(el,"jetbrains.mps.lang.plugin.structure.ActionInstance")) {
          SNode action=SLinkOperations.getTarget(SNodeOperations.cast(el,"jetbrains.mps.lang.plugin.structure.ActionInstance"),"action",false);
          if (ListSequence.fromList(SLinkOperations.getTargets(action,"constructionParameter",true)).isNotEmpty()) {
            _context.showErrorMessage(it,"parametrized actions are not supported");
            continue;
          }
          ListSequence.fromList(actions).addElement(action);
        }
 else         if (SNodeOperations.isInstanceOf(el,"jetbrains.mps.lang.plugin.structure.Separator") || SNodeOperations.isInstanceOf(el,"jetbrains.mps.lang.plugin.structure.GroupAnchor")) {
        }
 else {
          _context.showErrorMessage(it,"group with unknown content found");
        }
      }
      return actions;
    }
  }
).distinct().sort(new ISelector<SNode,String>(){
    public String select(    SNode it){
      return ActionDeclaration_Behavior.call_getGeneratedName_1213877371942(it);
    }
  }
,true);
}
