{
  if (!(SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.structure.PrimitiveClassExpression"))) {
    return;
  }
  SNode statedType=SLinkOperations.getTarget(SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.PrimitiveClassExpression"),"primitiveType",true);
  if (SNodeOperations.isInstanceOf(statedType,"jetbrains.mps.baseLanguage.structure.ClassifierType")) {
    SNode replacing=SNodeOperations.replaceWithNewChild(node,"jetbrains.mps.baseLanguage.structure.ClassifierClassExpression");
    SLinkOperations.setTarget(replacing,"classifier",SLinkOperations.getTarget(SNodeOperations.cast(statedType,"jetbrains.mps.baseLanguage.structure.ClassifierType"),"classifier",false),false);
  }
 else   if (SNodeOperations.isInstanceOf(statedType,"jetbrains.mps.baseLanguage.structure.ArrayType")) {
    SNode replacing=SNodeOperations.replaceWithNewChild(node,"jetbrains.mps.baseLanguage.structure.ArrayClassExpression");
    SLinkOperations.setTarget(replacing,"arrayType",SNodeOperations.cast(statedType,"jetbrains.mps.baseLanguage.structure.ArrayType"),true);
  }
}
