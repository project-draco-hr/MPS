{
  this.addNodeById("1230052406798");
  this.addNodeById("1230052406829");
  SLinkOperations.setTarget(this.getNodeById("1230052406839"),"baseMethodDeclaration",this.getNodeById("1230052406844"),false);
  ExtractMethodRefactoringParameters params=new ExtractMethodRefactoringParameters(ListSequence.<SNode>fromArray(this.getNodeById("1230052406805")));
  params.setName("foo");
  ExtractMethodRefactoring ref=ExtractMethodFabric.createRefactoring(params);
  this.fff(ref);
  params=new ExtractMethodRefactoringParameters(ListSequence.<SNode>fromArray(this.getNodeById("1230052406818")));
  params.setName("bar");
  ref=ExtractMethodFabric.createRefactoring(params);
  ref.doRefactor();
  Assert.assertEquals(null,NodesMatcher.matchNodes(ListSequence.<SNode>fromArray(this.getNodeById("1230052406799")),ListSequence.<SNode>fromArray(this.getNodeById("1230052406830"))));
}
