{
  Iterable<SNode> classifiers=ListSequence.fromList(SNodeOperations.getDescendants(rootNode,"jetbrains.mps.baseLanguage.structure.Classifier",true,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.baseLanguage.structure.ClassConcept") || SNodeOperations.isInstanceOf(it,"jetbrains.mps.baseLanguage.structure.Interface");
    }
  }
);
  this.myIndexWasNotReady=!(ClassifierSuccessorsFinder.isIndexReady());
  if (Sequence.fromIterable(classifiers).isEmpty() || this.myIndexWasNotReady) {
    return Collections.emptySet();
  }
  Set<EditorMessage> result=SetSequence.fromSet(new HashSet<EditorMessage>());
  for (  SNode containedClassifier : Sequence.fromIterable(classifiers)) {
    this.collectOverridenMethods(containedClassifier,result);
  }
  return result;
}
