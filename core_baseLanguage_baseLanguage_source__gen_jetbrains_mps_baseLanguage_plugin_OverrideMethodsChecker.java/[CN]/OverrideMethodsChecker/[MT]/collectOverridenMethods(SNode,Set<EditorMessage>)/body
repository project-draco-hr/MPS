{
  List<SNode> methods=SLinkOperations.getTargets(container,"method",true);
  if (ListSequence.fromList(methods).isEmpty()) {
    return;
  }
  List<SNode> methodsCopy=new ArrayList<SNode>();
  for (  SNode method : ListSequence.fromList(methods)) {
    if (SPropertyOperations.getBoolean(method,"isFinal") || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(method,"visibility",true),"jetbrains.mps.baseLanguage.structure.PrivateVisibility")) {
      continue;
    }
    ListSequence.fromList(methodsCopy).addElement(method);
  }
  if (ListSequence.fromList(methodsCopy).isEmpty()) {
    return;
  }
  List<SNode> derivedClasses=ClassifierSuccessorsFinder.getDerivedClassifiers(container,GlobalScope.getInstance());
  if (ListSequence.fromList(derivedClasses).isEmpty()) {
    return;
  }
  this.createOverridenMethodsMessages(methodsCopy,derivedClasses,messages);
}
