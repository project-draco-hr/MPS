{
  Iterable<SNode> methods=ListSequence.fromList(SLinkOperations.getTargets(container,"method",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return !(SPropertyOperations.getBoolean(it,"isFinal") || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it,"visibility",true),"jetbrains.mps.baseLanguage.structure.PrivateVisibility"));
    }
  }
);
  if (Sequence.fromIterable(methods).isEmpty()) {
    return;
  }
  List<SNode> derivedClasses=ClassifierSuccessorsFinder.getDerivedClassifiers(container,GlobalScope.getInstance());
  Iterable<SNode> derivedClassifiers=ListSequence.fromList(derivedClasses).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.as(it,"jetbrains.mps.baseLanguage.structure.Classifier");
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (it != null);
    }
  }
);
  if (ListSequence.fromList(derivedClasses).isEmpty()) {
    return;
  }
  this.createOverridenMethodsMessagesFull(methods,derivedClassifiers,messages);
}
