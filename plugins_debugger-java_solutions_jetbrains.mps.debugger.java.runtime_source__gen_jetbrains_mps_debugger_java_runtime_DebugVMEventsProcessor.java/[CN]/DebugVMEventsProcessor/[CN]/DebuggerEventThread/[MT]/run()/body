{
  try {
    EventQueue eventQueue=myVirtualMachine.eventQueue();
    while (!(isStopped())) {
      try {
        final EventSet eventSet=eventQueue.remove();
        getManagerThread().invokeAndWait(new DebuggerCommand(){
          protected void action() throws Exception {
            final SuspendContext suspendContext=mySuspendManager.pushSuspendContextFromEventSet(eventSet);
            for (            Event event : eventSet) {
              try {
                if (event instanceof VMDeathEvent) {
                  processVMDeathEvent(suspendContext,event);
                }
 else                 if (event instanceof VMDisconnectEvent) {
                  processVMDeathEvent(suspendContext,event);
                }
 else                 if (event instanceof ClassPrepareEvent) {
                  processClassPrepareEvent(suspendContext,(ClassPrepareEvent)event);
                }
 else                 if (event instanceof StepEvent) {
                  processStepEvent(suspendContext,(StepEvent)event);
                }
 else                 if (event instanceof LocatableEvent) {
                  processLocatableEvent(suspendContext,(LocatableEvent)event);
                }
 else {
                  mySuspendManager.voteResume(suspendContext);
                }
              }
 catch (              VMDisconnectedException e) {
              }
catch (              InternalException e) {
              }
catch (              Throwable e) {
                DebugVMEventsProcessor.LOG.error(e);
              }
            }
          }
        }
);
      }
 catch (      InternalException e) {
      }
catch (      InterruptedException e) {
        throw e;
      }
catch (      VMDisconnectedException e) {
        throw e;
      }
catch (      Throwable e) {
      }
    }
  }
 catch (  InterruptedException e) {
    invokeVMDeathEventInManagerThread();
  }
catch (  VMDisconnectedException e) {
    invokeVMDeathEventInManagerThread();
  }
 finally {
    Thread.interrupted();
  }
}
