{
  if (LOG.isInfoEnabled()) {
    LOG.info("Initializing test...");
  }
  test.setProject(testProject);
  TransformationTest cachedTest=TestModelSaver.getInstance().getTest();
  SModel cachedModel=check_ovzmet_a0e0n(cachedTest);
  SModel cachedTransientModel=check_ovzmet_a0f0n(cachedTest);
  String cachedModelName=check_ovzmet_a0g0n(check_ovzmet_a0a6a31(cachedModel));
  if (cachedModelName != null && cachedModelName.equals(modelName)) {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Using cached model");
    }
    test.setModelDescriptor(cachedModel);
    test.setTransientModelDescriptor(cachedTransientModel);
  }
 else {
    if (LOG.isDebugEnabled()) {
      LOG.debug("Recaching the model again");
    }
    Exception exception=ThreadUtils.runInUIThreadAndWait(new Runnable(){
      public void run(){
        testProject.getModelAccess().executeCommand(new Runnable(){
          @Override public void run(){
            initialize(test,modelName);
          }
          private void initialize(          final TransformationTest test,          final String modelName){
            SModel modelDescriptor=findModel(modelName);
            test.setModelDescriptor(modelDescriptor);
            test.init();
          }
        }
);
      }
    }
);
    if (exception != null) {
      throw new RuntimeException(exception);
    }
    TestModelSaver.getInstance().clean();
    TestModelSaver.getInstance().setTest(test);
  }
}
