{
  test.setProject(testProject);
  final Runnable runnable=new Runnable(){
    @Override public void run(){
      initialize(test,modelName);
    }
    private void initialize(    final TransformationTest test,    final String modelName){
      SModel modelDescriptor=findModel(modelName);
      test.setModelDescriptor(modelDescriptor);
      test.init();
    }
    private SModel findModel(    final String modelName){
      SModel modelDescriptor=SModelRepository.getInstance().getModelDescriptor(PersistenceFacade.getInstance().createModelReference(modelName));
      if (modelDescriptor == null) {
        Assert.fail("Can't find model " + modelName + " in projects "+ Arrays.toString(ProjectManager.getInstance().getOpenProjects())+ ".");
      }
      return modelDescriptor;
    }
  }
;
  SwingUtilities.invokeAndWait(new Runnable(){
    public void run(){
      ModelAccess.instance().runWriteActionInCommand(runnable,testProject);
    }
  }
);
}
