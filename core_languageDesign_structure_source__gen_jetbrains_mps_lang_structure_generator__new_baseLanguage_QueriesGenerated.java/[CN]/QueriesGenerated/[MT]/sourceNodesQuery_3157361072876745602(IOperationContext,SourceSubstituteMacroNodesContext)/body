{
  Set<SNode> result=SetSequence.fromSet(new HashSet());
  if (SNodeOperations.isInstanceOf(_context.getNode(),"jetbrains.mps.lang.structure.structure.ConceptDeclaration")) {
    SNode conceptDeclaration=SNodeOperations.cast(_context.getNode(),"jetbrains.mps.lang.structure.structure.ConceptDeclaration");
    SetSequence.fromSet(result).addSequence(ListSequence.fromList(SLinkOperations.getTargets(conceptDeclaration,"implements",true)));
    if ((SLinkOperations.getTarget(conceptDeclaration,"extends",false) != null)) {
      SetSequence.fromSet(result).addElement(SLinkOperations.getTarget(conceptDeclaration,"extends",false));
    }
 else {
      if (_context.getNode() != SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)","1133920641626")) {
        SetSequence.fromSet(result).addElement(SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)","1133920641626"));
      }
    }
  }
  if (SNodeOperations.isInstanceOf(_context.getNode(),"jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration")) {
    SNode conceptDeclaration=SNodeOperations.cast(_context.getNode(),"jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration");
    SetSequence.fromSet(result).addSequence(ListSequence.fromList(SLinkOperations.getTargets(conceptDeclaration,"extends",true)));
  }
  return SetSequence.fromSet(result).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (it != null);
    }
  }
);
}
