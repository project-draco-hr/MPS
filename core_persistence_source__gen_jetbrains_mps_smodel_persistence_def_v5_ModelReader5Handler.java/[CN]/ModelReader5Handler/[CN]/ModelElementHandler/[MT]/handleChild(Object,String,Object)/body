{
  ModelLoadResult result=(ModelLoadResult)resultObject;
  if ("persistence".equals(tagName)) {
    return;
  }
  if ("languageAspect".equals(tagName)) {
    String[] child=(String[])value;
    int version=Integer.parseInt(child[1]);
    (fieldmodel).addAdditionalModelVersion(SModelReference.fromString(child[0]),version);
    return;
  }
  if ("language".equals(tagName)) {
    String child=(String)value;
    (fieldmodel).addLanguage(ModuleReference.fromString(child));
    return;
  }
  if ("language-engaged-on-generation".equals(tagName)) {
    String child=(String)value;
    (fieldmodel).addEngagedOnGenerationLanguage(ModuleReference.fromString(child));
    return;
  }
  if ("devkit".equals(tagName)) {
    String child=(String)value;
    (fieldmodel).addDevKit(ModuleReference.fromString(child));
    return;
  }
  if ("import".equals(tagName)) {
    SModel.ImportElement child=(SModel.ImportElement)value;
    (fieldmodel).addModelImport(child);
    return;
  }
  if ("node".equals(tagName)) {
    SNode child=(SNode)value;
    if (child != null) {
      fieldmodel.addRootNode(child);
    }
    return;
  }
  if ("visible".equals(tagName)) {
    return;
  }
  super.handleChild(resultObject,tagName,value);
}
