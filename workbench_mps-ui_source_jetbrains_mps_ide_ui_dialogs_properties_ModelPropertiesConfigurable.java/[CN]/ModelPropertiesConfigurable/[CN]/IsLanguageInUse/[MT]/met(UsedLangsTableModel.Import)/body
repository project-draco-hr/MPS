{
  if (entry == null) {
    return false;
  }
  if (entry.myLanguage != null) {
    return myActualUse.contains(entry.myLanguage);
  }
  if (entry.myDevKit != null) {
    final SModule module=entry.myDevKit.resolve(MPSModuleRepository.getInstance());
    if (!(module instanceof DevKit)) {
      return false;
    }
    HashSet<SLanguage> burstDeps=new HashSet<SLanguage>();
    final DevKit devKit=(DevKit)module;
    for (    Language l : devKit.getAllExportedLanguages()) {
      burstDeps.add(MetaAdapterByDeclaration.getLanguage(l));
    }
    burstDeps.removeAll(myExplicitUse);
    return CollectionUtil.intersects(burstDeps,myActualUse);
  }
  return false;
}
