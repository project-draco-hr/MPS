{
  return new FindAnActionButton(table){
    @Override public void actionPerformed(    AnActionEvent e){
      if (myInPlugin) {
        Messages.showMessageDialog(ProjectHelper.toIdeaProject(myProject),"This functions is not implemented in plugin yet","=(",Messages.getInformationIcon());
        return;
      }
      final SearchQuery[] query=new SearchQuery[1];
      final IResultProvider[] provider=new IResultProvider[1];
      final IScope scope=new ModelsOnlyScope(myModelDescriptor);
      ModelAccess.instance().runReadAction(new Runnable(){
        @Override public void run(){
          List<SModule> modules=new LinkedList<SModule>();
          for (          int i : myTable.getSelectedRows()) {
            Object value=myUsedLangsTableModel.getValueAt(i,UsedLangsTableModel.ITEM_COLUMN);
            if (value instanceof SModuleReference) {
              modules.add(MPSModuleRepository.getInstance().getModuleByFqName(((SModuleReference)value).getModuleName()));
            }
          }
          ModulesHolder modulesHolder=new ModulesHolder(modules,null){
            @Override public void write(            Element element,            Project project) throws CantSaveSomethingException {
            }
            @Override public void read(            Element element,            Project project) throws CantLoadSomethingException {
            }
          }
;
          query[0]=new SearchQuery(modulesHolder,scope);
          provider[0]=FindUtils.makeProvider(new LanguageUsagesFinder(){
            @Override public SearchResults find(            SearchQuery query,            ProgressMonitor monitor){
              if (!(query.getObjectHolder() instanceof ModulesHolder))               return super.find(query,monitor);
              SearchResults searchResults=new SearchResults();
              ModulesHolder modulesHolder=(ModulesHolder)query.getObjectHolder();
              for (              SModule searchedModule : modulesHolder.getObject()) {
                SearchQuery searchQuery=new SearchQuery(searchedModule,query.getScope());
                searchResults.addAll(super.find(searchQuery,monitor));
              }
              return searchResults;
            }
          }
);
        }
      }
);
      IUsagesViewTool usagesViewTool=(IUsagesViewTool)ProjectHelper.toIdeaProject(myProject).getComponent("jetbrains.mps.ide.findusages.view.UsagesViewTool");
      usagesViewTool.findUsages(provider[0],query[0],true,true,true,"No usages found");
      forceCancelCloseDialog();
    }
  }
;
}
