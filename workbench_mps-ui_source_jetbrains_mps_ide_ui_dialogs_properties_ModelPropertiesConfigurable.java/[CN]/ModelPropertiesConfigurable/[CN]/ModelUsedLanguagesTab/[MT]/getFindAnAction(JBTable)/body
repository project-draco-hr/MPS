{
  return new FindAnActionButton(table){
    @Override public void actionPerformed(    AnActionEvent e){
      final SearchScope scope=new ModelsScope(myModelDescriptor);
      final List<SLanguage> languages=new LinkedList<SLanguage>();
      myProject.getModelAccess().runReadAction(new Runnable(){
        @Override public void run(){
          for (          int i : myTable.getSelectedRows()) {
            Object value=myUsedLangsTableModel.getValueAt(i,UsedLangsTableModel.ITEM_COLUMN);
            if (value instanceof UsedLangsTableModel.Import) {
              final Import entry=(Import)value;
              if (entry.myLanguage != null) {
                languages.add(entry.myLanguage);
              }
 else {
                final SModule devkit=entry.myDevKit.resolve(myProject.getRepository());
                if (devkit instanceof DevKit) {
                  for (                  Language l : ((DevKit)devkit).getAllExportedLanguages()) {
                    languages.add(MetaAdapterByDeclaration.getLanguage(l));
                  }
                }
              }
            }
          }
        }
      }
);
      final SearchQuery query=new SearchQuery(new GenericHolder<Collection<SLanguage>>(languages,"Languages"),scope);
      final IResultProvider provider=FindUtils.makeProvider(new CompositeFinder(new LanguageUsagesFinder()));
      showUsageImpl(query,provider);
      forceCancelCloseDialog();
    }
  }
;
}
