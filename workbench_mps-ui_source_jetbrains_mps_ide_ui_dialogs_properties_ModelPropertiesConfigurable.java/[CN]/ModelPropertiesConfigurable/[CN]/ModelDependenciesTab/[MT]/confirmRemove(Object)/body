{
  if (value instanceof ModuleReference) {
    final ModuleReference moduleReference=(ModuleReference)value;
    if (!myModelProperties.getUsedLanguageRemoveCondition().met(moduleReference)) {
      ViewUsagesDeleteDialog viewUsagesDeleteDialog=new ViewUsagesDeleteDialog(ProjectHelper.toIdeaProject(myProject),"Delete used language","This language is used by model. Do you really what to delete it?","Model state will become inconsistent"){
        @Override public void doViewAction(){
          findUsages(value);
        }
      }
;
      viewUsagesDeleteDialog.show();
      return viewUsagesDeleteDialog.isOK();
    }
  }
 else   if (value instanceof SModelReference) {
    final SModelReference modelReference=(SModelReference)value;
    if (!myModelProperties.getImportedModelsRemoveCondition().met((jetbrains.mps.smodel.SModelReference)modelReference)) {
      ViewUsagesDeleteDialog viewUsagesDeleteDialog=new ViewUsagesDeleteDialog(ProjectHelper.toIdeaProject(myProject),"Delete imported model","This model is used in model. Do you really what to delete it?","Model state will become inconsistent"){
        @Override public void doViewAction(){
          findUsages(value);
        }
      }
;
      viewUsagesDeleteDialog.show();
      return viewUsagesDeleteDialog.isOK();
    }
  }
  return super.confirmRemove(value);
}
