{
{
    SAbstractConcept cncpt=((SAbstractConcept)concept);
    boolean matchedCase=false;
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt),MetaAdapterFactory.getConcept(0xf61473f9130f42f6L,0xb98d6c438812c2f6L,0x110df569442L,"jetbrains.mps.baseLanguage.unitTest.structure.AssertEquals"))) {
      matchedCase=true;
      return Collections.<IDataFlowBuilder>singletonList(new AssertEquals_DataFlow());
    }
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt),MetaAdapterFactory.getConcept(0xf61473f9130f42f6L,0xb98d6c438812c2f6L,0x110dfae1d08L,"jetbrains.mps.baseLanguage.unitTest.structure.AssertFalse"))) {
      matchedCase=true;
      return Collections.<IDataFlowBuilder>singletonList(new AssertFalse_DataFlow());
    }
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt),MetaAdapterFactory.getConcept(0xf61473f9130f42f6L,0xb98d6c438812c2f6L,0x624233a5cf1ae0f7L,"jetbrains.mps.baseLanguage.unitTest.structure.AssertInNotNull"))) {
      matchedCase=true;
      return Collections.<IDataFlowBuilder>singletonList(new AssertInNotNull_DataFlow());
    }
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt),MetaAdapterFactory.getConcept(0xf61473f9130f42f6L,0xb98d6c438812c2f6L,0x110e252ba91L,"jetbrains.mps.baseLanguage.unitTest.structure.AssertIsNull"))) {
      matchedCase=true;
      return Collections.<IDataFlowBuilder>singletonList(new AssertIsNull_DataFlow());
    }
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt),MetaAdapterFactory.getConcept(0xf61473f9130f42f6L,0xb98d6c438812c2f6L,0x110dfcb1f43L,"jetbrains.mps.baseLanguage.unitTest.structure.AssertSame"))) {
      matchedCase=true;
      return Collections.<IDataFlowBuilder>singletonList(new AssertSame_DataFlow());
    }
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt),MetaAdapterFactory.getConcept(0xf61473f9130f42f6L,0xb98d6c438812c2f6L,0x110e4cee82cL,"jetbrains.mps.baseLanguage.unitTest.structure.AssertThrows"))) {
      matchedCase=true;
      return Collections.<IDataFlowBuilder>singletonList(new AssertThrows_DataFlow());
    }
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt),MetaAdapterFactory.getConcept(0xf61473f9130f42f6L,0xb98d6c438812c2f6L,0x110df833483L,"jetbrains.mps.baseLanguage.unitTest.structure.AssertTrue"))) {
      matchedCase=true;
      return Collections.<IDataFlowBuilder>singletonList(new AssertTrue_DataFlow());
    }
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt),MetaAdapterFactory.getConcept(0xf61473f9130f42f6L,0xb98d6c438812c2f6L,0x110e5064e8fL,"jetbrains.mps.baseLanguage.unitTest.structure.Message"))) {
      matchedCase=true;
      return Collections.<IDataFlowBuilder>singletonList(new Message_DataFlow());
    }
    if (!(matchedCase)) {
    }
  }
  return Collections.<IDataFlowBuilder>emptyList();
}
