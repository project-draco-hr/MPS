{
  List<NodeDescriptor> nodes=ListSequence.fromList(new ArrayList<NodeDescriptor>());
  for (  SModel model : CollectionSequence.fromCollection(collection)) {
    for (    SNode root : Sequence.fromIterable(model.getRootNodes())) {
      final String name=root.getName();
      if (name == null || "".equals(name)) {
        continue;
      }
      if (!(root instanceof SNode)) {
        continue;
      }
      final SNode rootNode=root;
      ListSequence.fromList(nodes).addElement(new NodeDescriptor(){
        @Override public String getName(){
          return name;
        }
        @Override public SConcept getConcept(){
          return rootNode.getConcept();
        }
        @Override public SNodeReference getNodeReference(){
          return new SNodePointer((SNode)rootNode);
        }
      }
);
    }
  }
  return nodes;
}
