{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_1htk8d_a0eb.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return myConceptXMLSAXAttributeHandler;
      }
    break;
case 1:
  if (true) {
    return myConceptXMLSAXAttributeHandler_value;
  }
break;
case 2:
if (true) {
return myConceptXMLSAXAttributeReference;
}
break;
case 3:
if (true) {
return myConceptXMLSAXAttributeRule;
}
break;
case 4:
if (true) {
return myConceptXMLSAXBreakStatement;
}
break;
case 5:
if (true) {
return myConceptXMLSAXChildHandler;
}
break;
case 6:
if (true) {
return myConceptXMLSAXChildHandler_childObject;
}
break;
case 7:
if (true) {
return myConceptXMLSAXChildRule;
}
break;
case 8:
if (true) {
return myConceptXMLSAXChildRuleCondition;
}
break;
case 9:
if (true) {
return myConceptXMLSAXDefaultChildHandler;
}
break;
case 10:
if (true) {
return myConceptXMLSAXDefaultChildHandler_tagName;
}
break;
case 11:
if (true) {
return myConceptXMLSAXDefaultChildRule;
}
break;
case 12:
if (true) {
return myConceptXMLSAXFieldDeclaration;
}
break;
case 13:
if (true) {
return myConceptXMLSAXFieldReference;
}
break;
case 14:
if (true) {
return myConceptXMLSAXHandlerFunction;
}
break;
case 15:
if (true) {
return myConceptXMLSAXHandler_resultObject;
}
break;
case 16:
if (true) {
return myConceptXMLSAXLocatorExpression;
}
break;
case 17:
if (true) {
return myConceptXMLSAXNodeCreator;
}
break;
case 18:
if (true) {
return myConceptXMLSAXNodeRule;
}
break;
case 19:
if (true) {
return myConceptXMLSAXNodeRuleParam;
}
break;
case 20:
if (true) {
return myConceptXMLSAXNodeRuleParamRef;
}
break;
case 21:
if (true) {
return myConceptXMLSAXNodeValidator;
}
break;
case 22:
if (true) {
return myConceptXMLSAXParser;
}
break;
case 23:
if (true) {
return myConceptXMLSAXTextHandler;
}
break;
case 24:
if (true) {
return myConceptXMLSAXTextHandler_value;
}
break;
case 25:
if (true) {
return myConceptXMLSAXTextRule;
}
break;
default :
}
}
return null;
}
