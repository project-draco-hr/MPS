{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.core.xml.sax.structure.XMLSAXAttributeHandler").super_("jetbrains.mps.core.xml.sax.structure.XMLSAXHandlerFunction").parents("jetbrains.mps.core.xml.sax.structure.XMLSAXHandlerFunction").alias("attribute handler","").create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.core.xml.sax.structure.XMLSAXAttributeHandler_value").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("value","attribute value").create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.core.xml.sax.structure.XMLSAXAttributeReference").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").references("attribute").create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.core.xml.sax.structure.XMLSAXAttributeRule").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").properties("isRequired").children(new String[]{"handler"},new boolean[]{false}).create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.core.xml.sax.structure.XMLSAXBreakStatement").super_("jetbrains.mps.baseLanguage.structure.Statement").parents("jetbrains.mps.baseLanguage.structure.Statement").children(new String[]{"result"},new boolean[]{false}).alias("break parser","").create();
case 5:
return new ConceptDescriptorBuilder("jetbrains.mps.core.xml.sax.structure.XMLSAXChildHandler").super_("jetbrains.mps.core.xml.sax.structure.XMLSAXHandlerFunction").parents("jetbrains.mps.core.xml.sax.structure.XMLSAXHandlerFunction").alias("child handler","").create();
case 6:
return new ConceptDescriptorBuilder("jetbrains.mps.core.xml.sax.structure.XMLSAXChildHandler_childObject").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("child","parsed child object").create();
case 7:
return new ConceptDescriptorBuilder("jetbrains.mps.core.xml.sax.structure.XMLSAXChildRule").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("tagName","overrideTag").references("rule").children(new String[]{"handler"},new boolean[]{false}).create();
case 8:
return new ConceptDescriptorBuilder("jetbrains.mps.core.xml.sax.structure.XMLSAXFieldDeclaration").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"type"},new boolean[]{false}).create();
case 9:
return new ConceptDescriptorBuilder("jetbrains.mps.core.xml.sax.structure.XMLSAXFieldReference").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").references("declaration").create();
case 10:
return new ConceptDescriptorBuilder("jetbrains.mps.core.xml.sax.structure.XMLSAXHandlerFunction").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").abstract_().create();
case 11:
return new ConceptDescriptorBuilder("jetbrains.mps.core.xml.sax.structure.XMLSAXHandler_resultObject").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("result","an object").create();
case 12:
return new ConceptDescriptorBuilder("jetbrains.mps.core.xml.sax.structure.XMLSAXLocatorExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").alias("locator","").create();
case 13:
return new ConceptDescriptorBuilder("jetbrains.mps.core.xml.sax.structure.XMLSAXNodeCreator").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("create","").create();
case 14:
return new ConceptDescriptorBuilder("jetbrains.mps.core.xml.sax.structure.XMLSAXNodeRule").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").properties("tagName","isCompact").children(new String[]{"type","attrs","children","text","creator","validator"},new boolean[]{false,true,true,false,false,false}).create();
case 15:
return new ConceptDescriptorBuilder("jetbrains.mps.core.xml.sax.structure.XMLSAXNodeValidator").super_("jetbrains.mps.core.xml.sax.structure.XMLSAXHandlerFunction").parents("jetbrains.mps.core.xml.sax.structure.XMLSAXHandlerFunction").alias("validate","").create();
case 16:
return new ConceptDescriptorBuilder("jetbrains.mps.core.xml.sax.structure.XMLSAXParser").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").references("root").children(new String[]{"parameters","nodes","fields","globalText"},new boolean[]{true,true,true,false}).create();
case 17:
return new ConceptDescriptorBuilder("jetbrains.mps.core.xml.sax.structure.XMLSAXTextHandler").super_("jetbrains.mps.core.xml.sax.structure.XMLSAXHandlerFunction").parents("jetbrains.mps.core.xml.sax.structure.XMLSAXHandlerFunction").alias("text handler","").create();
case 18:
return new ConceptDescriptorBuilder("jetbrains.mps.core.xml.sax.structure.XMLSAXTextHandler_value").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("value","text value").create();
case 19:
return new ConceptDescriptorBuilder("jetbrains.mps.core.xml.sax.structure.XMLSAXTextRule").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"handler"},new boolean[]{false}).create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
