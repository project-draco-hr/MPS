{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.core.xml.sax.structure.XMLSAXAttributeHandler","jetbrains.mps.core.xml.sax.structure.XMLSAXHandlerFunction",false,new String[]{"jetbrains.mps.core.xml.sax.structure.XMLSAXHandlerFunction"},new String[]{},new String[]{});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.core.xml.sax.structure.XMLSAXAttributeHandler_value","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.sax.structure.XMLSAXAttributeReference","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"attribute"});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.sax.structure.XMLSAXAttributeRule","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"isRequired"},new String[]{});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.sax.structure.XMLSAXBreakStatement","jetbrains.mps.baseLanguage.structure.Statement",false,new String[]{"jetbrains.mps.baseLanguage.structure.Statement"},new String[]{},new String[]{});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.sax.structure.XMLSAXChildHandler","jetbrains.mps.core.xml.sax.structure.XMLSAXHandlerFunction",false,new String[]{"jetbrains.mps.core.xml.sax.structure.XMLSAXHandlerFunction"},new String[]{},new String[]{});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.sax.structure.XMLSAXChildHandler_childObject","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.sax.structure.XMLSAXChildRule","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"tagName","overrideTag"},new String[]{"rule"});
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.sax.structure.XMLSAXFieldDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{});
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.sax.structure.XMLSAXFieldReference","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"declaration"});
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.sax.structure.XMLSAXHandlerFunction","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 11:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.sax.structure.XMLSAXHandler_resultObject","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 12:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.sax.structure.XMLSAXLocatorExpression","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{});
case 13:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.sax.structure.XMLSAXNodeCreator","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 14:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.sax.structure.XMLSAXNodeRule","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"tagName","isCompact"},new String[]{});
case 15:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.sax.structure.XMLSAXNodeValidator","jetbrains.mps.core.xml.sax.structure.XMLSAXHandlerFunction",false,new String[]{"jetbrains.mps.core.xml.sax.structure.XMLSAXHandlerFunction"},new String[]{},new String[]{});
case 16:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.sax.structure.XMLSAXParser","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{"root"});
case 17:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.sax.structure.XMLSAXTextHandler","jetbrains.mps.core.xml.sax.structure.XMLSAXHandlerFunction",false,new String[]{"jetbrains.mps.core.xml.sax.structure.XMLSAXHandlerFunction"},new String[]{},new String[]{});
case 18:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.sax.structure.XMLSAXTextHandler_value","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 19:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.sax.structure.XMLSAXTextRule","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
