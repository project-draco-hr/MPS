{
  SNode rv=SModelOperations.createNewNode(exports,null,"jetbrains.mps.lang.generator.structure.ExportEntry");
  SLinkOperations.setTarget(rv,"outputModel",BehaviorReflection.invokeNonVirtualStatic((Class<SNode>)((Class)Object.class),SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.ModelIdentity"))),"call_create_9032177546942789358",new Object[]{exports,outputModel}),true);
  SLinkOperations.setTarget(rv,"inputNode",BehaviorReflection.invokeNonVirtualStatic((Class<SNode>)((Class)Object.class),SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.NodeIdentity"))),"call_create_9032177546941796951",new Object[]{exports,labelContext.getInput()}),true);
  SLinkOperations.setTarget(rv,"outputNode",BehaviorReflection.invokeNonVirtualStatic((Class<SNode>)((Class)Object.class),SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.NodeIdentity"))),"call_create_9032177546941796951",new Object[]{exports,labelContext.getOutput()}),true);
  SLinkOperations.setTarget(rv,"dataKeeper",labelContext.getKeeper(),true);
  SLinkOperations.setTarget(rv,"label",exportLabel,false);
  return rv;
}
