{
  myIntentions.clear();
  for (  Language l : MPSModuleRepository.getInstance().getAllLanguages()) {
    SModelDescriptor intentionsModelDescriptor=l.getIntentionsModelDescriptor();
    if (intentionsModelDescriptor != null) {
      SModel smodel=intentionsModelDescriptor.getSModel();
      for (      IntentionDeclaration intentionDeclaration : smodel.getRootsAdapters(IntentionDeclaration.class)) {
        String className=smodel.getUID().getLongName() + "." + IntentionDeclaration_Behavior.call_getGeneratedName_1193141280918(intentionDeclaration.getNode());
        String conceptName=IntentionDeclaration_Behavior.call_getConceptName_1193142194523(intentionDeclaration.getNode());
        try {
          Object intention=Class.forName(className,true,ClassLoaderManager.getInstance().getClassLoaderFor(l)).newInstance();
          Set<Intention> intentions=myIntentions.get(conceptName);
          if (intentions == null) {
            intentions=new HashSet<Intention>();
          }
          intentions.add((Intention)intention);
          myIntentions.put(conceptName,intentions);
        }
 catch (        ClassNotFoundException e) {
          LOG.error("Intention is registered but isn't compiled",intentionDeclaration);
        }
catch (        Exception e) {
          LOG.error(e,intentionDeclaration);
        }
      }
    }
  }
}
