{
  boolean result_14532009=true;
{
    final SNode t=subtype;
{
      Pattern_10 pattern_1=new Pattern_10(SLinkOperations.getTarget(supertype,"classifier",false));
      SNode coercedNode_1=TypeChecker.getInstance().getRuntimeSupport().coerce(t,pattern_1);
      if (coercedNode_1 != null) {
{
          SNode typeParam;
          SNode myParam;
          Iterator<SNode> typeParam_iterator=SLinkOperations.getTargets(coercedNode_1,"parameter",true).iterator();
          Iterator<SNode> myParam_iterator=SLinkOperations.getTargets(supertype,"parameter",true).iterator();
          while (true) {
            if (!(typeParam_iterator.hasNext())) {
              break;
            }
            if (!(myParam_iterator.hasNext())) {
              break;
            }
            typeParam=typeParam_iterator.next();
            myParam=myParam_iterator.next();
{
              final SNode finalTypeParam=typeParam;
              result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype(finalTypeParam,myParam,true);
{
                final SNode concreteParam=myParam;
                if (SNodeOperations.isInstanceOf(concreteParam,"jetbrains.mps.baseLanguage.structure.WildCardType") || SNodeOperations.isInstanceOf(concreteParam,"jetbrains.mps.baseLanguage.structure.UpperBoundType")) {
                }
 else {
                  result_14532009=result_14532009 && MatchingUtil.matchNodes(finalTypeParam,concreteParam);
                }
              }
            }
          }
        }
      }
 else {
        result_14532009=false;
      }
    }
  }
  return result_14532009;
}
