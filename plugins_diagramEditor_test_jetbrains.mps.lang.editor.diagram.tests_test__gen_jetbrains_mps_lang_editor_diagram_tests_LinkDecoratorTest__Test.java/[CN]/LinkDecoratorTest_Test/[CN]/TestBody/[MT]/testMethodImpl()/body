{
  final Editor editor=TestBody.this.initEditor("1638882350373488135","1638882350373384614");
  final EditorComponent editorComponent=(EditorComponent)editor.getCurrentEditorComponent();
  SwingUtilities.invokeAndWait(new Runnable(){
    public void run(){
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          editorComponent.getHighlightManager().mark(new ModelProblemMessage(SNodeOperations.cast(TestBody.this.getNodeById("1638882350373488142"),"jetbrains.mps.lang.editor.diagram.testLanguage.structure.OutputToInputPortConnector"),MessageStatus.ERROR,null,"error",new EditorMessageOwner(){
          }
));
          editorComponent.getHighlightManager().repaintAndRebuildEditorMessages();
        }
      }
);
    }
  }
);
  SwingUtilities.invokeAndWait(new Runnable(){
    public void run(){
      ConnectorCell connectorCell=CellFinderUtil.findChildByClass(editorComponent.getRootCell(),ConnectorCell.class,true);
      connectorCell.paint(null,new ParentSettings());
    }
  }
);
  final Wrappers._T<Mapper<? super SNode,?>> descendantMapper=new Wrappers._T<Mapper<? super SNode,?>>();
  final DiagramCell diagramCell=CellFinderUtil.findChildByClass(editorComponent.getRootCell(),DiagramCell.class,true);
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      descendantMapper.value=diagramCell.getDecorationRootMapper().getDescendantMapper(((SNode)SNodeOperations.cast(TestBody.this.getNodeById("1638882350373488142"),"jetbrains.mps.lang.editor.diagram.testLanguage.structure.OutputToInputPortConnector")));
    }
  }
);
  Assert.assertTrue(descendantMapper.value != null);
  Assert.assertTrue(descendantMapper.value.getTarget() != null && descendantMapper.value.getTarget() instanceof ConnectorDecoratorView);
  Assert.assertTrue(((ConnectorDecoratorView)descendantMapper.value.getTarget()).hasError.get());
}
