{
  final Editor editor=TestBody.this.initEditor("1638882350373488135","1560508619093517333");
  EditorComponent editorComponent=(EditorComponent)editor.getCurrentEditorComponent();
  final Wrappers._T<SNode> node=new Wrappers._T<SNode>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      node.value=SNodeOperations.cast(TestBody.this.getNodeById("1638882350373488142"),"jetbrains.mps.lang.editor.diagram.testLanguage.structure.OutputToInputPortConnector");
    }
  }
);
  Mapper descendantMapper;
  descendantMapper=DecoratorTestRunner.prepareAndGetMapper(node.value,editorComponent,ConnectorCell.class);
  Assert.assertTrue(descendantMapper != null);
  Assert.assertTrue(descendantMapper.getTarget() != null && descendantMapper.getTarget() instanceof ConnectorDecoratorView);
  ConnectorDecoratorView connectorDecoratorView=(ConnectorDecoratorView)descendantMapper.getTarget();
  Assert.assertTrue(connectorDecoratorView.hasError.get());
  View cross=Sequence.fromIterable(JetpadUtils.getAllChildren(connectorDecoratorView)).findFirst(new IWhereFilter<View>(){
    public boolean accept(    View it){
      return it instanceof CrossView;
    }
  }
);
  Assert.assertTrue(cross != null && cross.visible().get());
}
