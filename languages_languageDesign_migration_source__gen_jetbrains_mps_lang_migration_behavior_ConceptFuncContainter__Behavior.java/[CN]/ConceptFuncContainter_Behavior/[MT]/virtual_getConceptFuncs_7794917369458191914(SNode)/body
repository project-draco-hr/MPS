{
  final Map<String,ConceptFuncInfo> res=MapSequence.fromMap(new HashMap<String,ConceptFuncInfo>());
  ListSequence.fromList(SModelOperations.getRoots(SNodeOperations.getModel(SNodeOperations.getConceptDeclaration(thisNode)),"jetbrains.mps.lang.migration.structure.ObligatoryMethodsDescriptor")).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SLinkOperations.getTarget(it,"conceptDecl",false) == SNodeOperations.getConceptDeclaration(thisNode);
    }
  }
).translate(new ITranslator2<SNode,SNode>(){
    public Iterable<SNode> translate(    SNode it){
      return SLinkOperations.getTargets(it,"method",true);
    }
  }
).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode it){
      MapSequence.fromMap(res).put(SPropertyOperations.getString(it,"name"),new ConceptFuncInfo(ListSequence.fromList(SLinkOperations.getTargets(it,"param",true)).select(new ISelector<SNode,ParameterInfo>(){
        public ParameterInfo select(        SNode it){
          return new ParameterInfo(SPropertyOperations.getString(it,"name"),SLinkOperations.getTarget(it,"type",true));
        }
      }
).toListSequence(),null,SLinkOperations.getTarget(it,"retType",true)));
    }
  }
);
  return res;
}
