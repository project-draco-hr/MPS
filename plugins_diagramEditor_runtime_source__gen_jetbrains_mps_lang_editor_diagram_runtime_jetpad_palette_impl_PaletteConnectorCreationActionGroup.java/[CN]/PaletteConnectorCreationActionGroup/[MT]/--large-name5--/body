{
  return new SubstituteInfoPartExt(){
    public List<SubstituteAction> createActions(    CellContext cellContext,    final EditorContext editorContext){
      AbstractNodeSubstituteAction action=new AbstractNodeSubstituteAction(childNodeConcept,childNodeConcept,container){
        @Override protected SNode doSubstitute(        @Nullable EditorContext context,        String string){
          SNode result=NodeFactoryManager.createNode(childNodeConcept,null,container,SNodeOperations.getModel(container));
          ListSequence.fromList(SNodeOperations.getChildren(container,MetaAdapterByDeclaration.getContainmentLink(containingLink))).addElement(result);
          return result;
        }
      }
;
      return Collections.<SubstituteAction>singletonList(new NodeSubstituteActionWrapper(action));
    }
  }
;
}
