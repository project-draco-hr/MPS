{
  if (!myCompactTemplates) {
    return templateNodes;
  }
  ArrayList<TraceNodeUI> rv=new ArrayList<TraceNodeUI>();
  LinkedHashMap<SNode,TraceNodeUI> mostSpecificTemplates=new LinkedHashMap<SNode,TraceNodeUI>();
  L1:   for (  TraceNodeUI n : templateNodes) {
    SNodeReference t=n.getNavigateTarget();
    SNode templateNode=t == null ? null : t.resolve(MPSModuleRepository.getInstance());
    if (templateNode == null) {
      rv.add(n);
      continue;
    }
    for (    SNode tn : new ArrayList<SNode>(mostSpecificTemplates.keySet())) {
      if (tn.getContainingRoot() == templateNode.getContainingRoot()) {
        if (SNodeOperations.isAncestor(tn,templateNode)) {
          mostSpecificTemplates.remove(tn);
          mostSpecificTemplates.put(templateNode,n);
          continue L1;
        }
 else         if (SNodeOperations.isAncestor(templateNode,tn)) {
          continue L1;
        }
      }
    }
    mostSpecificTemplates.put(templateNode,n);
  }
  rv.addAll(mostSpecificTemplates.values());
  return rv;
}
