{
  SNode parentNode=(SNode)cellContext.get(BasicCellContext.EDITED_NODE);
  LinkDeclaration linkDeclaration=(LinkDeclaration)BaseAdapter.fromNode((SNode)cellContext.get(AggregationCellContext.LINK_DECLARATION));
  IChildNodeSetter setter=new DefaultChildNodeSetter(linkDeclaration);
  AbstractConceptDeclaration defaultConceptOfChild=linkDeclaration.getTarget();
  SNode currentChild=(SNode)cellContext.getOpt(AggregationCellContext.CURRENT_CHILD_NODE);
  IOperationContext context=editorContext.getOperationContext();
  ConceptDeclaration childNodeConcept=(ConceptDeclaration)BaseAdapter.fromNode(getConceptOfChild(parentNode,currentChild,defaultConceptOfChild.getNode(),context.getScope(),context));
  if (childNodeConcept == null) {
    return new LinkedList<INodeSubstituteAction>();
  }
  return ModelActions.createChildSubstituteActions(parentNode,currentChild,childNodeConcept,setter,context);
}
