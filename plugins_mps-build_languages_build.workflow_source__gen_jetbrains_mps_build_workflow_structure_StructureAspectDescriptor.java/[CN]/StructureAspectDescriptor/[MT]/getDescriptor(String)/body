{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfAntStatement","jetbrains.mps.build.workflow.structure.BwfStatement",false,new String[]{"jetbrains.mps.build.workflow.structure.BwfStatement"},new String[]{},new String[]{});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfAntTaskDeclaration","jetbrains.mps.build.workflow.structure.BwfProjectPart",false,new String[]{"jetbrains.mps.build.workflow.structure.BwfProjectPart","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"classname"},new String[]{"classpath"});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfCustomMacro","jetbrains.mps.build.workflow.structure.BwfProjectPart",false,new String[]{"jetbrains.mps.build.workflow.structure.BwfProjectPart"},new String[]{},new String[]{});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfDependency","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"path"},new String[]{});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfFileSet","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfJavaClassPath","jetbrains.mps.build.workflow.structure.BwfJavaDependency",false,new String[]{"jetbrains.mps.build.workflow.structure.BwfJavaDependency"},new String[]{},new String[]{});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfJavaDependency","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfJavaDescriptor","jetbrains.mps.build.workflow.structure.BwfProjectPart",false,new String[]{"jetbrains.mps.build.workflow.structure.BwfProjectPart"},new String[]{},new String[]{});
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfJavaLibrary","jetbrains.mps.build.workflow.structure.BwfProjectPart",false,new String[]{"jetbrains.mps.build.workflow.structure.BwfProjectPart","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{});
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfJavaLibraryReference","jetbrains.mps.build.workflow.structure.BwfJavaDependency",false,new String[]{"jetbrains.mps.build.workflow.structure.BwfJavaDependency"},new String[]{},new String[]{"target"});
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfJavaModule","jetbrains.mps.build.workflow.structure.BwfProjectPart",false,new String[]{"jetbrains.mps.build.workflow.structure.BwfProjectPart","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"outputFolder","generateDebugInfo","heapSize","noWarnings","compiler"},new String[]{});
case 11:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfJavaModuleReference","jetbrains.mps.build.workflow.structure.BwfJavaDependency",false,new String[]{"jetbrains.mps.build.workflow.structure.BwfJavaDependency"},new String[]{},new String[]{"target"});
case 12:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfMacro","jetbrains.mps.build.workflow.structure.BwfProjectPart",false,new String[]{"jetbrains.mps.build.workflow.structure.BwfProjectPart","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"defaultValue","exportToProperiesFile","isLocation","uninitialized"},new String[]{});
case 13:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfMacroListImport","jetbrains.mps.build.workflow.structure.BwfProjectPart",false,new String[]{"jetbrains.mps.build.workflow.structure.BwfProjectPart"},new String[]{"prefix","propertiesFile"},new String[]{});
case 14:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfPathDeclaration","jetbrains.mps.build.workflow.structure.BwfProjectPart",false,new String[]{"jetbrains.mps.build.workflow.structure.BwfProjectPart","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{});
case 15:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfPathReference","jetbrains.mps.core.xml.structure.XmlBaseElement",false,new String[]{"jetbrains.mps.core.xml.structure.XmlBaseElement"},new String[]{},new String[]{"target"});
case 16:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfProject","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.ScopeProvider"},new String[]{"temporaryFolder","baseDirectory"},new String[]{});
case 17:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfProjectPart","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 18:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfStatement","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 19:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfSubTask","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.IResolveInfo","jetbrains.mps.lang.core.structure.ScopeProvider"},new String[]{},new String[]{});
case 20:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfSubTaskDependency","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"target"});
case 21:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfTask","jetbrains.mps.build.workflow.structure.BwfProjectPart",false,new String[]{"jetbrains.mps.build.workflow.structure.BwfProjectPart","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.ScopeProvider"},new String[]{},new String[]{});
case 22:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfTaskDependency","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"target"});
case 23:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfTaskLibrary","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{});
case 24:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfTaskLibraryDependency","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"target"});
case 25:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfTaskPart","jetbrains.mps.build.workflow.structure.BwfProjectPart",false,new String[]{"jetbrains.mps.build.workflow.structure.BwfProjectPart","jetbrains.mps.lang.core.structure.ScopeProvider"},new String[]{},new String[]{"task"});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
