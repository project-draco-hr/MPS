{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_1htk8d_a0gb.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return myConceptBwfAntStatement;
      }
    break;
case 1:
  if (true) {
    return myConceptBwfAntTaskBundleDeclaration;
  }
break;
case 2:
if (true) {
return myConceptBwfAntTaskDeclaration;
}
break;
case 3:
if (true) {
return myConceptBwfCustomMacro;
}
break;
case 4:
if (true) {
return myConceptBwfDependency;
}
break;
case 5:
if (true) {
return myConceptBwfFileSet;
}
break;
case 6:
if (true) {
return myConceptBwfJavaClassPath;
}
break;
case 7:
if (true) {
return myConceptBwfJavaDependency;
}
break;
case 8:
if (true) {
return myConceptBwfJavaDescriptor;
}
break;
case 9:
if (true) {
return myConceptBwfJavaLibrary;
}
break;
case 10:
if (true) {
return myConceptBwfJavaLibraryReference;
}
break;
case 11:
if (true) {
return myConceptBwfJavaModule;
}
break;
case 12:
if (true) {
return myConceptBwfJavaModuleReference;
}
break;
case 13:
if (true) {
return myConceptBwfMacro;
}
break;
case 14:
if (true) {
return myConceptBwfMacroListImport;
}
break;
case 15:
if (true) {
return myConceptBwfPathDeclaration;
}
break;
case 16:
if (true) {
return myConceptBwfPathReference;
}
break;
case 17:
if (true) {
return myConceptBwfProject;
}
break;
case 18:
if (true) {
return myConceptBwfProjectPart;
}
break;
case 19:
if (true) {
return myConceptBwfProjectPartStatement;
}
break;
case 20:
if (true) {
return myConceptBwfStatement;
}
break;
case 21:
if (true) {
return myConceptBwfSubTask;
}
break;
case 22:
if (true) {
return myConceptBwfSubTaskDependency;
}
break;
case 23:
if (true) {
return myConceptBwfTask;
}
break;
case 24:
if (true) {
return myConceptBwfTaskDependency;
}
break;
case 25:
if (true) {
return myConceptBwfTaskLibrary;
}
break;
case 26:
if (true) {
return myConceptBwfTaskLibraryDependency;
}
break;
case 27:
if (true) {
return myConceptBwfTaskPart;
}
break;
default :
}
}
return null;
}
