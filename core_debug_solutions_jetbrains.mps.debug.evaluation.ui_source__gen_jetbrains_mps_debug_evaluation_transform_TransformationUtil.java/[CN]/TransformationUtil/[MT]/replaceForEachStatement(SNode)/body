{
  SNode valueProxyType=getValueProxyTypeFromType(SLinkOperations.getTarget(SLinkOperations.getTarget(foreachStatement,"variable",true),"type",true));
  if (TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(foreachStatement,"iterable",true)),new TransformationUtil.QuotationClass_crriw5_a1a0b0fb().createNode())) {
    SLinkOperations.setTarget(foreachStatement,"iterable",new TransformationUtil.QuotationClass_crriw5_a0a0a0b0fb().createNode(SLinkOperations.getTarget(foreachStatement,"iterable",true)),true);
  }
 else {
    SLinkOperations.setTarget(foreachStatement,"iterable",new TransformationUtil.QuotationClass_crriw5_a0a0a0a1a13().createNode(SLinkOperations.getTarget(foreachStatement,"iterable",true)),true);
  }
  ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(foreachStatement,"iterable",true),"jetbrains.mps.baseLanguage.structure.StaticMethodCall"),"typeArgument",true)).addElement(SNodeOperations.copyNode(valueProxyType));
  SLinkOperations.setTarget(SLinkOperations.getTarget(foreachStatement,"variable",true),"type",new TransformationUtil.QuotationClass_crriw5_a0a0e0fb().createNode(valueProxyType),true);
}
