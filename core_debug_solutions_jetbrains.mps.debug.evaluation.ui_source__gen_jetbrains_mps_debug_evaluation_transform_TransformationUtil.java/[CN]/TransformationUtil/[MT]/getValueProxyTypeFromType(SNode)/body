{
  if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.debug.evaluation.structure.DebuggedType")) {
    type=SLinkOperations.getTarget(SNodeOperations.cast(type,"jetbrains.mps.debug.evaluation.structure.DebuggedType"),"lowType",true);
  }
  if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.ArrayType")) {
    return new TransformationUtil.QuotationClass_crriw5_a0a0b0v().createNode();
  }
 else   if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type,getPrimitiveType(),false)) {
    return new TransformationUtil.QuotationClass_crriw5_a0a0a1a12().createNode();
  }
 else   if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type,new TransformationUtil.QuotationClass_crriw5_a1a0b1a12().createNode())) {
    return new TransformationUtil.QuotationClass_crriw5_a0a0b1a12().createNode();
  }
 else   if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type,new TransformationUtil.QuotationClass_crriw5_a1a0c1a12().createNode())) {
    return new TransformationUtil.QuotationClass_crriw5_a0a0c1a12().createNode();
  }
 else   if ((type == null)) {
    return new TransformationUtil.QuotationClass_crriw5_a0a0d1a12().createNode();
  }
  LOG.warning("Could not deduce type" + type);
  return new TransformationUtil.QuotationClass_crriw5_a0d0v().createNode();
}
