{
  int imageOffset;
  Icon icon=myMainTextLabel.getIcon();
  if (icon != null) {
    imageOffset=icon.getIconWidth() + Math.max(0,myMainTextLabel.getIconTextGap() - 1);
  }
 else {
    imageOffset=0;
  }
  if (!SystemInfo.isMac) {
    Color background;
    if (mySelected) {
      background=UIManager.getColor("Tree.selectionBackground");
    }
 else {
      background=UIManager.getColor("Tree.textBackground");
      if (background == null) {
        background=getBackground();
      }
    }
    if (background != null) {
      g.setColor(background);
      g.fillRect(imageOffset,0,getWidth() - imageOffset,getHeight());
    }
    if (myHasFocus) {
      Boolean drawDashedFocusIndicator=(Boolean)UIManager.get("Tree.drawDashedFocusIndicator");
      if (drawDashedFocusIndicator != null && drawDashedFocusIndicator) {
        BasicGraphicsUtils.drawDashedRect(g,imageOffset,0,getWidth() - imageOffset - 1,getHeight() - 1);
      }
 else {
        g.setColor(UIManager.getColor("Tree.selectionBorderColor"));
        g.drawRect(imageOffset,0,getWidth() - imageOffset - 1,getHeight() - 1);
      }
    }
  }
  super.paint(g);
  if (myNode != null && myNode.getAggregatedErrorState() != ErrorState.NONE) {
    if (myNode.getAggregatedErrorState() == ErrorState.ERROR) {
      g.setColor(Color.RED);
    }
 else {
      g.setColor(Color.YELLOW);
    }
    ColorAndGraphicsUtil.drawWave(g,imageOffset,getWidth(),getHeight() - ColorAndGraphicsUtil.WAVE_HEIGHT - 1);
  }
}
