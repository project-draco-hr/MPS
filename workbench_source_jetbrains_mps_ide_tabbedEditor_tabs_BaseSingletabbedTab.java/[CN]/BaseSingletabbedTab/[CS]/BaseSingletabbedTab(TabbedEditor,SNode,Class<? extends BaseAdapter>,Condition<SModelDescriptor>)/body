{
  myTabbedEditor=tabbedEditor;
  myBaseNode=new SNodePointer(baseNode);
  myClass=adapterClass;
  myListener=new SModelAdapter(){
    public void rootRemoved(    SModelRootEvent event){
      if (getLoadableNode() == null)       return;
      if (getLoadableNode() == event.getRoot())       return;
      if (myBaseNode.getNode() == null)       return;
      if (myBaseNode.getNode() == event.getRoot())       return;
      myTabbedEditor.getTabbedPane().removeTab(BaseSingletabbedTab.this);
      myComponent=null;
      SwingUtilities.invokeLater(new Runnable(){
        public void run(){
          myTabbedEditor.getTabbedPane().initTab(BaseSingletabbedTab.this);
        }
      }
);
    }
    public void referenceAdded(    SModelReferenceEvent event){
      SReference reference=event.getReference();
      INodeAdapter sourceNode=BaseAdapter.fromNode(reference.getSourceNode());
      if (myClass.isInstance(sourceNode.getContainingRoot()) && reference.getTargetNode() == getBaseNode()) {
        myTabbedEditor.getTabbedPane().removeTab(BaseSingletabbedTab.this);
        SwingUtilities.invokeLater(new Runnable(){
          public void run(){
            myTabbedEditor.getTabbedPane().initTab(BaseSingletabbedTab.this);
          }
        }
);
      }
    }
  }
;
  final SModelDescriptor nodeModelDescriptor=baseNode.getModel().getModelDescriptor();
  if (nodeModelDescriptor != null) {
    nodeModelDescriptor.addWeakModelListener(myListener);
  }
 else {
    myWeakSModelRepositoryListener=new SModelRepositoryAdapter(){
      public void modelAdded(      SModelDescriptor modelDescriptor){
        if (ProjectModels.isProjectModel(modelDescriptor.getModelUID())) {
          return;
        }
        if (listenCondition.met(modelDescriptor)) {
          modelDescriptor.addWeakModelListener(myListener);
          SModelRepository.getInstance().removeModelRepositoryListener(this);
        }
      }
    }
;
    SModelRepository.getInstance().addWeakModelRepositoryListener(myWeakSModelRepositoryListener);
  }
}
