{
  FeatureUsageTracker.getInstance().triggerFeatureUsed("refactoring.rename");
  ModelAccess modelAccess=((MPSProject)MapSequence.fromMap(_params).get("project")).getRepository().getModelAccess();
  final Wrappers._T<SNode> varDeclNode=new Wrappers._T<SNode>();
  final Wrappers._T<String> oldName=new Wrappers._T<String>();
  modelAccess.runReadAction(new Runnable(){
    public void run(){
      varDeclNode.value=SLinkOperations.getTarget(((SNode)MapSequence.fromMap(_params).get("node")),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c77f1e98L,0xf8cc6bf960L,"variableDeclaration"));
      oldName.value=SPropertyOperations.getString(varDeclNode.value,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
    }
  }
);
  final String newName=RenameDialog.getNewName(((MPSProject)MapSequence.fromMap(_params).get("project")).getProject(),oldName.value,"Variable");
  if (newName == null) {
    return;
  }
  modelAccess.executeCommand(new Runnable(){
    public void run(){
      SPropertyOperations.set(varDeclNode.value,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),newName);
    }
  }
);
}
