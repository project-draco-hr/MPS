{
  try {
    FeatureUsageTracker.getInstance().triggerFeatureUsed("refactoring.rename");
    final Wrappers._T<SNode> varDeclNode=new Wrappers._T<SNode>();
    final Wrappers._T<String> oldName=new Wrappers._T<String>();
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        varDeclNode.value=SLinkOperations.getTarget(((SNode)MapSequence.fromMap(_params).get("node")),"variableDeclaration",false);
        oldName.value=SPropertyOperations.getString(varDeclNode.value,"name");
      }
    }
);
    final String newName=RenameDialog.getNewName(((MPSProject)MapSequence.fromMap(_params).get("project")).getProject(),oldName.value,"Variable");
    if (newName == null) {
      return;
    }
    ModelAccess.instance().runWriteActionInCommand(new Runnable(){
      public void run(){
        SPropertyOperations.set(varDeclNode.value,"name",newName);
      }
    }
);
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Priority.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "RenameVariable",t);
    }
  }
}
