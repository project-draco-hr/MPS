{
  try {
    FeatureUsageTracker.getInstance().triggerFeatureUsed("refactoring.rename");
    ModelAccess modelAccess=((MPSProject)MapSequence.fromMap(_params).get("project")).getRepository().getModelAccess();
    final Wrappers._T<SNode> varDeclNode=new Wrappers._T<SNode>();
    final Wrappers._T<String> oldName=new Wrappers._T<String>();
    modelAccess.runReadAction(new Runnable(){
      public void run(){
        varDeclNode.value=SLinkOperations.getTarget(((SNode)MapSequence.fromMap(_params).get("node")),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,1068581517664l,"variableDeclaration"));
        oldName.value=SPropertyOperations.getString(varDeclNode.value,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"));
      }
    }
);
    final String newName=RenameDialog.getNewName(((MPSProject)MapSequence.fromMap(_params).get("project")).getProject(),oldName.value,"Variable");
    if (newName == null) {
      return;
    }
    modelAccess.executeCommand(new Runnable(){
      public void run(){
        SPropertyOperations.set(varDeclNode.value,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"),newName);
      }
    }
);
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "RenameVariable",t);
    }
  }
}
