{
  List<SNode> supertypes=Collections.emptyList();
  SNode classifier=SLinkOperations.getTarget(ct,"classifier",false);
  if (SNodeOperations.isInstanceOf(classifier,"jetbrains.mps.baseLanguage.structure.Interface")) {
    List<SNode> methods=SLinkOperations.getTargets(classifier,"method",true);
    if (methods != null && ListSequence.fromList(methods).count() == 1) {
      SNode md=ListSequence.fromList(methods).getElement(0);
      List<SNode> paramTypes=new ArrayList<SNode>();
      for (      SNode p : SLinkOperations.getTargets(md,"parameter",true)) {
        ListSequence.fromList(paramTypes).addElement(ClassifierTypeUtil.resolveType(SLinkOperations.getTarget(p,"type",true),ct));
      }
      SNode resType=ClassifierTypeUtil.resolveType(SLinkOperations.getTarget(md,"returnType",true),ct);
      supertypes=Collections.singletonList(new _Quotations.QuotationClass_4().createNode(paramTypes,resType));
    }
  }
  return supertypes;
}
