{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x34ae970c192ab94eL,0x34ae970c192abbc5L,"match"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x34ae970c192ab94eL,0x34ae970c192abbc5L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public boolean hasPresentation(){
          return true;
        }
        @Override public String getPresentation(        final IOperationContext operationContext,        final ReferencePresentationContext _context){
          return (_context.getSmartReference() ? "\\" + SPropertyOperations.getString(_context.getParameterNode(),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")) : SPropertyOperations.getString(_context.getParameterNode(),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")));
        }
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          List<SNode> matches=new ArrayList<SNode>();
          SNode top=SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x34ae970c1923d18aL,"jetbrains.mps.baseLanguage.regexp.structure.ReplaceRegexpOperation"),true,false);
          if ((top != null)) {
            Regexp__BehaviorDescriptor.getString_idhMuDF1A.invoke(SLinkOperations.getTarget(top,MetaAdapterFactory.getContainmentLink(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x34ae970c1923d18aL,0x34ae970c1924ee3bL,"search")),matches);
          }
          return matches;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_v9mr27_a0a3a0a0a1a0b0a1a2;
        }
      }
;
    }
  }
);
  return references;
}
