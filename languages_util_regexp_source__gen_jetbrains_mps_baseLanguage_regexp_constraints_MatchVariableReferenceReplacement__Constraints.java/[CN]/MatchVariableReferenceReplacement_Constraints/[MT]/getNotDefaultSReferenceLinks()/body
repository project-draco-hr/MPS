{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(-2688747624584492277l,-5722269945249396544l),3796137614137538894l,3796137614137539525l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(-2688747624584492277l,-5722269945249396544l),3796137614137538894l,3796137614137539525l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public boolean hasPresentation(){
          return true;
        }
        @Override public String getPresentation(        final IOperationContext operationContext,        final ReferencePresentationContext _context){
          return (_context.getSmartReference() ? "\\" + SPropertyOperations.getString(_context.getParameterNode(),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")) : SPropertyOperations.getString(_context.getParameterNode(),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")));
        }
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          List<SNode> matches=new ArrayList<SNode>();
          SNode top=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.regexp.structure.ReplaceRegexpOperation",true,false);
          if ((top != null)) {
            BehaviorReflection.invokeVirtual(String.class,SLinkOperations.getTarget(top,MetaAdapterFactory.getContainmentLink(new UUID(-2688747624584492277l,-5722269945249396544l),3796137614137086346l,3796137614137159227l,"search")),"virtual_getString_1222432436326",new Object[]{matches});
          }
          return matches;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_v9mr27_a0a3a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
