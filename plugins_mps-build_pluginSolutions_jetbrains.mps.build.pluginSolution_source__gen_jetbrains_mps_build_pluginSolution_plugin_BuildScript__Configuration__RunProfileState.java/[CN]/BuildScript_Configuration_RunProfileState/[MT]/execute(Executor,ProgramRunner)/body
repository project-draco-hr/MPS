{
  Project project=myEnvironment.getProject();
  final Wrappers._T<IFile> file=new Wrappers._T<IFile>(null);
  final Wrappers._T<String> mainTaskName=new Wrappers._T<String>();
  final Wrappers._T<List<String>> undefinedMacro=new Wrappers._T<List<String>>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      SNode node=SNodeOperations.cast(myRunConfiguration.getNode().getNode(),MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),5617550519002745363l,"jetbrains.mps.build.structure.BuildProject"));
      String scriptsPath=BuildProject_Behavior.call_getScriptsPath_4796668409958419284(node,Context.defaultContext());
      if (scriptsPath != null) {
        file.value=FileSystem.getInstance().getFileByPath(scriptsPath);
        file.value=file.value.getDescendant(BuildProject_Behavior.call_getOutputFileName_4915877860351551360(node));
        mainTaskName.value=SPropertyOperations.getString(SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.getNode("r:14f06230-41df-42af-9a25-81de46539bf1(jetbrains.mps.build.workflow.accessories)","7306485738221408315"),MetaAdapterFactory.getContainmentLink(new UUID(7605046100638320544l,-5004325039833383149l),7306485738221391506l,7306485738221391508l,"parts"))).findFirst(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(new UUID(7605046100638320544l,-5004325039833383149l),2769948622284546675l,"jetbrains.mps.build.workflow.structure.BwfTask"));
          }
        }
),MetaAdapterFactory.getConcept(new UUID(7605046100638320544l,-5004325039833383149l),2769948622284546675l,"jetbrains.mps.build.workflow.structure.BwfTask")),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"));
        undefinedMacro.value=ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l,-5075149991798053422l),5617550519002745363l,5617550519002745378l,"macros"))).where(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),7389400916848136194l,"jetbrains.mps.build.structure.BuildFolderMacro")) && (SLinkOperations.getTarget(SNodeOperations.cast(it,MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),7389400916848136194l,"jetbrains.mps.build.structure.BuildFolderMacro")),MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l,-5075149991798053422l),7389400916848136194l,7389400916848144618l,"defaultPath")) == null);
          }
        }
).select(new ISelector<SNode,String>(){
          public String select(          SNode it){
            return SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"));
          }
        }
).toListSequence();
      }
    }
  }
);
  if (file.value == null) {
    throw new ExecutionException("Can not find xml-file for script " + myRunConfiguration.getNode());
  }
{
    ProcessHandler _processHandler=new Ant_Command().setTargetName_String(mainTaskName.value).setAntLocation_String((myRunConfiguration.getSettings().getUseOtherAntLocation() ? myRunConfiguration.getSettings().getOtherAntLocation() : null)).setOptions_String(myRunConfiguration.getSettings().getAntOptions()).setMacroToDefine_ListString(undefinedMacro.value).createProcess(file.value.getPath());
    final ConsoleView _consoleView=ConsoleCreator.createConsoleView(project,false);
    _processHandler.addProcessListener(new ConsoleProcessListener(_consoleView));
    return new DefaultExecutionResult(_processHandler,new DefaultExecutionConsole(_consoleView.getComponent(),new _FunctionTypes._void_P0_E0(){
      public void invoke(){
        _consoleView.dispose();
      }
    }
));
  }
}
