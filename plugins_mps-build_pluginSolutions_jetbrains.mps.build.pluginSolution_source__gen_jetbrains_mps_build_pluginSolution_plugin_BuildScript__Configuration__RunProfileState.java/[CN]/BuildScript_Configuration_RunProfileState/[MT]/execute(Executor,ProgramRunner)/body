{
  Project project=myEnvironment.getProject();
  final Wrappers._T<IFile> file=new Wrappers._T<IFile>(null);
  final Wrappers._T<String> mainTaskName=new Wrappers._T<String>();
  final Wrappers._T<List<String>> undefinedMacro=new Wrappers._T<List<String>>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      SNode node=SNodeOperations.cast(myRunConfiguration.getNode().getNode(),MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,"jetbrains.mps.build.structure.BuildProject"));
      String scriptsPath=BuildProject_Behavior.call_getScriptsPath_4796668409958419284(node,Context.defaultContext());
      if (scriptsPath != null) {
        file.value=FileSystem.getInstance().getFileByPath(scriptsPath);
        file.value=file.value.getDescendant(BuildProject_Behavior.call_getOutputFileName_4915877860351551360(node));
        mainTaskName.value=SPropertyOperations.getString(SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.getNode("r:14f06230-41df-42af-9a25-81de46539bf1(jetbrains.mps.build.workflow.accessories)","7306485738221408315"),MetaAdapterFactory.getContainmentLink(0x698a8d22a10447a0L,0xba8d10e3ec237f13L,0x6565da114724ce92L,0x6565da114724ce94L,"parts"))).findFirst(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(0x698a8d22a10447a0L,0xba8d10e3ec237f13L,0x2670d5989d5a6273L,"jetbrains.mps.build.workflow.structure.BwfTask"));
          }
        }
),MetaAdapterFactory.getConcept(0x698a8d22a10447a0L,0xba8d10e3ec237f13L,0x2670d5989d5a6273L,"jetbrains.mps.build.workflow.structure.BwfTask")),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
        undefinedMacro.value=ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,0x4df58c6f18f84a22L,"macros"))).where(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x668c6cfbafadd002L,"jetbrains.mps.build.structure.BuildFolderMacro")) && (SLinkOperations.getTarget(SNodeOperations.cast(it,MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x668c6cfbafadd002L,"jetbrains.mps.build.structure.BuildFolderMacro")),MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x668c6cfbafadd002L,0x668c6cfbafadf0eaL,"defaultPath")) == null);
          }
        }
).select(new ISelector<SNode,String>(){
          public String select(          SNode it){
            return SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
          }
        }
).toListSequence();
      }
    }
  }
);
  if (file.value == null) {
    throw new ExecutionException("Can not find xml-file for script " + myRunConfiguration.getNode());
  }
{
    ProcessHandler _processHandler=new Ant_Command().setTargetName_String(mainTaskName.value).setAntLocation_String((myRunConfiguration.getSettings().getUseOtherAntLocation() ? myRunConfiguration.getSettings().getOtherAntLocation() : null)).setOptions_String(myRunConfiguration.getSettings().getAntOptions()).setMacroToDefine_ListString(undefinedMacro.value).createProcess(file.value.getPath());
    final ConsoleView _consoleView=ConsoleCreator.createConsoleView(project,false);
    _processHandler.addProcessListener(new ConsoleProcessListener(_consoleView));
    return new DefaultExecutionResult(_processHandler,new DefaultExecutionConsole(_consoleView.getComponent(),new _FunctionTypes._void_P0_E0(){
      public void invoke(){
        _consoleView.dispose();
      }
    }
));
  }
}
