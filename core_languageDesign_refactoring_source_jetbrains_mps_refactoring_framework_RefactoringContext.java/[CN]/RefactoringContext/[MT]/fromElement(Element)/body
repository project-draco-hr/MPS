{
  try {
    String versionString=element.getAttributeValue(MODEL_VERSION);
    if (versionString != null) {
      myModelVersion=Integer.parseInt(versionString);
    }
 else {
      myModelVersion=-1;
    }
  }
 catch (  Throwable t) {
    myModelVersion=-1;
    LOG.error(t);
  }
  Element dependencies=element.getChild(DEPENDENCIES);
  if (dependencies == null) {
    myDependencies=null;
  }
 else {
    myDependencies=new ArrayList<Dependency>();
    for (    Element elem : (List<Element>)dependencies.getChildren(DEPEND_MODEL)) {
      myDependencies.add(new Dependency(elem));
    }
  }
  myRefactoring=null;
  myRefactoringClassName=element.getChild(REFACTORING).getAttributeValue(REFACTORING_CLASS);
  if (myRefactoringClassName.startsWith(OLD_STRUCTURE_LANGUAGE_NAMESPACE + ".")) {
    myRefactoringClassName=NEW_STRUCTURE_LANGUAGE_NAMESPACE + myRefactoringClassName.substring(OLD_STRUCTURE_LANGUAGE_NAMESPACE.length());
  }
{
    Element moveMapElement=element.getChild(MOVE_MAP);
    if (moveMapElement != null) {
      for (      Element entryElement : (List<Element>)moveMapElement.getChildren(ENTRY)) {
        Element keyElement=entryElement.getChild(KEY);
        Element valueElement=entryElement.getChild(VALUE);
        myMoveMap.put(new FullNodeId(keyElement),new FullNodeId(valueElement));
      }
    }
  }
{
    Element moveMapElement=element.getChild(SOURCE_MAP);
    if (moveMapElement != null) {
      for (      Element entryElement : (List<Element>)moveMapElement.getChildren(ENTRY)) {
        Element keyElement=entryElement.getChild(KEY);
        Element valueElement=entryElement.getChild(VALUE);
        mySourceMap.put(new FullNodeId(keyElement),new FullNodeId(valueElement));
      }
    }
  }
{
    Element featureMapElement=element.getChild(CONCEPT_FEATURE_MAP);
    if (featureMapElement != null) {
      for (      Element entryElement : (List<Element>)featureMapElement.getChildren(ENTRY)) {
        Element keyElement=entryElement.getChild(KEY);
        Element valueElement=entryElement.getChild(VALUE);
        ConceptFeature valueFeature=valueElement == null ? null : new ConceptFeature(valueElement);
        myConceptFeatureMap.put(new ConceptFeature(keyElement),valueFeature);
      }
    }
  }
{
    Element parametersMapElement=element.getChild(PARAMETERS_MAP);
    if (parametersMapElement != null) {
      for (      Element entryElement : (List<Element>)parametersMapElement.getChildren(ENTRY)) {
        Element keyElement=entryElement.getChild(KEY);
        Element valueElement=entryElement.getChild(VALUE);
        String parameterName=keyElement.getAttributeValue(PARAMETER_NAME);
        myParametersMap.put(parameterName,deserialize(valueElement));
      }
    }
  }
  computeCaches();
}
