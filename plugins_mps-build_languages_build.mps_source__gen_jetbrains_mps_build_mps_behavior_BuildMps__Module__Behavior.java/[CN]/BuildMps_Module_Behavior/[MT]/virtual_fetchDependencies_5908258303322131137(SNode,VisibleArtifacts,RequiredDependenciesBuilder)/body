{
  MPSModulesClosure closure=new MPSModulesClosure(thisNode).closure();
  boolean needsFetch=false;
  List<SNode> requiredJars=new ArrayList<SNode>();
  for (  SNode m : Sequence.fromIterable(closure.getModules())) {
    SNode artifact;
    if (SNodeOperations.getContainingRoot(m) != SNodeOperations.getContainingRoot(thisNode) && BehaviorReflection.invokeVirtual(Boolean.TYPE,m,"virtual_isCompilable_7454762407073969360",new Object[]{})) {
      artifact=SNodeOperations.as(artifacts.findArtifact(m),"jetbrains.mps.build.structure.BuildLayout_Node");
      if (artifact != null) {
        builder.add(artifact,m);
        needsFetch=true;
      }
    }
    for (    SNode dep : Sequence.fromIterable(SNodeOperations.ofConcept(ListSequence.fromList(SLinkOperations.getChildren(m,MetaAdapterFactory.getContainmentLink(new UUID(934837630734519964l,-6831122735637083229l),5253498789149381388l,5253498789149547704l,"dependencies"))).select(new ISelector<SNode,SNode>(){
      public SNode select(      SNode it){
        return (SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.mps.structure.BuildMps_ExtractedModuleDependency") ? SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.build.mps.structure.BuildMps_ExtractedModuleDependency"),MetaAdapterFactory.getContainmentLink(new UUID(934837630734519964l,-6831122735637083229l),7259033139236285166l,7259033139236285167l,"dependency")) : it);
      }
    }
),"jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyJar"))) {
      if ((SLinkOperations.getTarget(dep,MetaAdapterFactory.getContainmentLink(new UUID(934837630734519964l,-6831122735637083229l),4278635856200826393l,2798275735916344703l,"customLocation")) != null)) {
        Tuples._2<SNode,Boolean> dependencyTarget=BuildSource_JavaExternalJarRef_Behavior.call_getDependencyTarget_5610619299014309566(SLinkOperations.getTarget(dep,MetaAdapterFactory.getContainmentLink(new UUID(934837630734519964l,-6831122735637083229l),4278635856200826393l,2798275735916344703l,"customLocation")),artifacts);
        if (dependencyTarget != null) {
          if ((boolean)dependencyTarget._1()) {
            builder.addWithContent(dependencyTarget._0());
          }
 else {
            builder.add(dependencyTarget._0());
          }
          needsFetch=true;
        }
      }
 else {
        if (SNodeOperations.getContainingRoot(m) == SNodeOperations.getContainingRoot(thisNode)) {
          continue;
        }
        ListSequence.fromList(requiredJars).addElement(SLinkOperations.getTarget(dep,MetaAdapterFactory.getContainmentLink(new UUID(934837630734519964l,-6831122735637083229l),4278635856200826393l,4278635856200826394l,"path")));
      }
    }
  }
  for (  SNode lr : Sequence.fromIterable(closure.getLanguagesWithRuntime())) {
    for (    SNode runtime : SLinkOperations.getChildren(lr,MetaAdapterFactory.getContainmentLink(new UUID(934837630734519964l,-6831122735637083229l),3189788309731840248l,3189788309731917348l,"runtime"))) {
      if (!(SNodeOperations.isInstanceOf(runtime,"jetbrains.mps.build.mps.structure.BuildMps_ModuleJarRuntime"))) {
        continue;
      }
      SNode jarRuntime=SNodeOperations.cast(runtime,"jetbrains.mps.build.mps.structure.BuildMps_ModuleJarRuntime");
      if ((SLinkOperations.getTarget(jarRuntime,MetaAdapterFactory.getContainmentLink(new UUID(934837630734519964l,-6831122735637083229l),4278635856200804496l,2798275735916344702l,"customLocation")) != null)) {
        Tuples._2<SNode,Boolean> dependencyTarget=BuildSource_JavaExternalJarRef_Behavior.call_getDependencyTarget_5610619299014309566(SLinkOperations.getTarget(jarRuntime,MetaAdapterFactory.getContainmentLink(new UUID(934837630734519964l,-6831122735637083229l),4278635856200804496l,2798275735916344702l,"customLocation")),artifacts);
        if (dependencyTarget != null) {
          if ((boolean)dependencyTarget._1()) {
            builder.addWithContent(dependencyTarget._0());
          }
 else {
            builder.add(dependencyTarget._0());
          }
          needsFetch=true;
        }
      }
 else {
        if (SNodeOperations.getContainingRoot(lr) == SNodeOperations.getContainingRoot(thisNode)) {
          continue;
        }
        ListSequence.fromList(requiredJars).addElement(SLinkOperations.getTarget(jarRuntime,MetaAdapterFactory.getContainmentLink(new UUID(934837630734519964l,-6831122735637083229l),4278635856200804496l,4278635856200804500l,"path")));
      }
    }
  }
  for (  SNode path : ListSequence.fromList(requiredJars)) {
    Tuples._2<SNode,String> resource=artifacts.getResource(SNodeOperations.cast(artifacts.toOriginalNode(path),"jetbrains.mps.build.structure.BuildSourcePath"));
    SNode artifact=SNodeOperations.as(resource._0(),"jetbrains.mps.build.structure.BuildLayout_Node");
    if (artifact != null) {
      if (isNotEmptyString(resource._1())) {
        builder.addWithContent(artifact);
      }
 else {
        builder.add(artifact);
      }
      needsFetch=true;
      if (SNodeOperations.isInstanceOf(artifact,"jetbrains.mps.build.structure.BuildLayout_AbstractCopy")) {
        SNode file=SNodeOperations.as(SLinkOperations.getTarget(SNodeOperations.cast(artifact,"jetbrains.mps.build.structure.BuildLayout_AbstractCopy"),MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l,-5075149991798053422l),9184644532456496017l,5248329904287857082l,"fileset")),"jetbrains.mps.build.structure.BuildInputSingleFile");
        if ((file != null)) {
          artifacts.findArtifact(SLinkOperations.getTarget(file,MetaAdapterFactory.getContainmentLink(new UUID(8755280088213897754l,-5075149991798053422l),5248329904287794582l,5248329904287794586l,"path")));
        }
      }
    }
  }
  MPSModulesClosure.RequiredJavaModules requiredJava=closure.getRequiredJava();
  for (  SNode jm : Sequence.fromIterable(requiredJava.getModules())) {
    if (requiredJava.isReexported(jm)) {
      JavaExportUtil.requireModule(artifacts,jm,thisNode,builder);
    }
 else {
      if (SNodeOperations.getContainingRoot(jm) == SNodeOperations.getContainingRoot(thisNode)) {
        continue;
      }
      SNode artifact=SNodeOperations.as(artifacts.findArtifact(jm),"jetbrains.mps.build.structure.BuildLayout_Node");
      if (artifact != null) {
        needsFetch=true;
        builder.add(artifact,jm);
      }
    }
  }
  MPSModulesClosure genClosure=new MPSModulesClosure(thisNode).trackDevkits().runtimeClosure().generationDependenciesClosure();
  for (  SNode m : Sequence.fromIterable(genClosure.getAllModules())) {
    SNode artifact;
    if (SNodeOperations.getContainingRoot(m) != SNodeOperations.getContainingRoot(thisNode)) {
      artifact=SNodeOperations.as(artifacts.findArtifact(m),"jetbrains.mps.build.structure.BuildLayout_Node");
      if (artifact != null) {
        builder.add(artifact,m);
      }
 else       if (SNodeOperations.isInstanceOf(m,"jetbrains.mps.build.mps.structure.BuildMps_DevKit")) {
        artifact=SNodeOperations.as(artifacts.findArtifact(SLinkOperations.getTarget(SNodeOperations.cast(m,"jetbrains.mps.build.mps.structure.BuildMps_DevKit"),MetaAdapterFactory.getContainmentLink(new UUID(934837630734519964l,-6831122735637083229l),322010710375871467l,322010710375956261l,"path"))),"jetbrains.mps.build.structure.BuildLayout_Node");
        if (artifact != null) {
          builder.add(artifact,m);
        }
      }
    }
  }
  if (needsFetch) {
    artifacts.needsFetch(thisNode);
  }
}
