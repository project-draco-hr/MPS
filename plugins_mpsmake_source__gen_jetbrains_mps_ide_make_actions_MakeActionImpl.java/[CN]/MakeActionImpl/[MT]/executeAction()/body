{
  final Iterable<? extends IResource> inputRes=params.collectInput(!(this.cleanMake));
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      SModelRepository.getInstance().saveAll();
    }
  }
);
  MakeSession session=new MakeSession(context,null,cleanMake){
    @Override public void doExecute(    Runnable scriptRunnable){
      if (GenerationCheckHelper.getInstance().checkModelsBeforeGenerationIfNeeded(MakeActionImpl.this.context.getProject(),MakeActionImpl.this.context,Sequence.fromIterable(MakeActionImpl.this.selectModels(inputRes)).toListSequence(),null)) {
        scriptRunnable.run();
      }
 else {
        IMakeService.INSTANCE.get().closeSession(this);
      }
    }
  }
;
  if (IMakeService.INSTANCE.get().openNewSession(session)) {
    IMakeService.INSTANCE.get().make(session,inputRes);
  }
}
