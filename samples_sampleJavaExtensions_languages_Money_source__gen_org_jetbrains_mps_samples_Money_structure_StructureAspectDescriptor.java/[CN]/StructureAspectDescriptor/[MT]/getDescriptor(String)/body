{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Money.structure.ConvertTo").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.structure.IOperation").properties("targetCurrency").alias("convert to","").staticScope(StaticScope.NONE).create();
case 1:
  return new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Money.structure.CurrencyDefTable").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"units"},new boolean[]{true}).create();
case 2:
return new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Money.structure.CurrencyUnit").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").create();
case 3:
return new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Money.structure.CurrentStockPrice").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").children(new String[]{"symbol"},new boolean[]{false}).alias("current stock price","").create();
case 4:
return new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Money.structure.GetAmount").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.structure.IOperation").alias("amount","").staticScope(StaticScope.NONE).create();
case 5:
return new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Money.structure.GetCurrency").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.structure.IOperation").alias("currency","").staticScope(StaticScope.NONE).create();
case 6:
return new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Money.structure.MoneyLiteral").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").properties("amount").references("unit").alias("money","").staticScope(StaticScope.NONE).create();
case 7:
return new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Money.structure.MoneyType").super_("jetbrains.mps.baseLanguage.structure.Type").parents("jetbrains.mps.baseLanguage.structure.Type").alias("Money","").staticScope(StaticScope.NONE).create();
case 8:
return new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Money.structure.MovingAverage").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").properties("period").children(new String[]{"symbol"},new boolean[]{false}).alias("moving average","").create();
case 9:
return new ConceptDescriptorBuilder("org.jetbrains.mps.samples.Money.structure.StockSymbol").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("symbol").alias("symbol","").create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
