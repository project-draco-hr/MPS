{
  final Map<SModule,SNode> declData=collector_.collectData(m,new MigrationScriptReference(MetaAdapterFactory.getLanguage(0x9de7c5ceea6f4fb4L,0xa7ba45e62b53cbadL,"decl"),1));
  final Map<SModule,SNode> requiredData=declData;
  Iterable<SModel> models=Sequence.fromIterable(((Iterable<SModel>)m.getModels())).where(new IWhereFilter<SModel>(){
    public boolean accept(    SModel it){
      return !(LanguageAspect.MIGRATION.is(it));
    }
  }
);
  Iterable<SNode> references=Sequence.fromIterable(models).translate(new ITranslator2<SModel,SNode>(){
    public Iterable<SNode> translate(    SModel it){
      return SModelOperations.nodes(it,MetaAdapterFactory.getConcept(0xd3d2b6e3a4b343d5L,0xbb29420d39fa86abL,0x6aff2c104931574dL,"ref.structure.OldComponentRef"));
    }
  }
);
  Sequence.fromIterable(references).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode oldNode){
      SNode newNode=_quotation_createNode_u457zm_a0b0a0a11a1();
      final SReference oldRef=oldNode.getReference("target");
      SModel oldModel=oldRef.getTargetSModelReference().resolve(MPSModuleRepository.getInstance());
      SNode newNodeId=ListSequence.fromList(SLinkOperations.getChildren(MapSequence.fromMap(requiredData).get(oldModel.getModule()),MetaAdapterFactory.getContainmentLink(0x9de7c5ceea6f4fb4L,0xa7ba45e62b53cbadL,0x1b931c975a732f8bL,0x1b931c975a732f9aL,"entry"))).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(0x9de7c5ceea6f4fb4L,0xa7ba45e62b53cbadL,0x1b931c975a732860L,0x1b931c975a732f6dL,"oldId")).equals(oldRef.getTargetNodeId().toString());
        }
      }
);
      SNode newTarget=oldModel.getNode(SNodeId.Regular.fromString(SPropertyOperations.getString(newNodeId,MetaAdapterFactory.getProperty(0x9de7c5ceea6f4fb4L,0xa7ba45e62b53cbadL,0x1b931c975a732860L,0x1b931c975a732f7bL,"newId"))));
      SLinkOperations.setTarget(newNode,MetaAdapterFactory.getReferenceLink(0xd3d2b6e3a4b343d5L,0xbb29420d39fa86abL,0x6aff2c104932a6c9L,0x6aff2c104932a6caL,"target"),(SNode)newTarget);
      SNodeOperations.replaceWithAnother(oldNode,newNode);
    }
  }
);
  return null;
}
