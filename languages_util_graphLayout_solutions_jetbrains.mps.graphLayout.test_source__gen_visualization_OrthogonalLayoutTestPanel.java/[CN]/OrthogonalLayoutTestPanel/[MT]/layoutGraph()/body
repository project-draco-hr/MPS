{
  Map<Node,jetbrains.mps.graphLayout.intGeom2D.Dimension> nodeDimensions=MapSequence.fromMap(new HashMap<Node,jetbrains.mps.graphLayout.intGeom2D.Dimension>());
  Map<Edge,jetbrains.mps.graphLayout.intGeom2D.Dimension> edgeDimensions=MapSequence.fromMap(new HashMap<Edge,jetbrains.mps.graphLayout.intGeom2D.Dimension>());
  Graph g=null;
  try {
    g=readGraph(nodeDimensions,edgeDimensions);
  }
 catch (  IllegalArgumentException e) {
    JOptionPane.showMessageDialog(this,"something is wrong in graph notation...\n" + e);
  }
  if (g != null) {
    for (    Node node : ListSequence.fromList(g.getNodes())) {
      if (MapSequence.fromMap(nodeDimensions).get(node) == null) {
        MapSequence.fromMap(nodeDimensions).put(node,new jetbrains.mps.graphLayout.intGeom2D.Dimension(DEFAULT_NODE_SIZE,DEFAULT_NODE_SIZE + 10));
      }
    }
    if (myLayoutChoice.isSetLabels()) {
      for (      Edge edge : ListSequence.fromList(g.getEdges())) {
        if (!(MapSequence.fromMap(edgeDimensions).containsKey(edge))) {
          MapSequence.fromMap(edgeDimensions).put(edge,new jetbrains.mps.graphLayout.intGeom2D.Dimension(DEFAULT_LABEL_X_SIZE,DEFAULT_LABEL_Y_SIZE));
        }
      }
    }
    LayoutInfo layoutInfo=new LayoutInfo(g);
    for (    Node node : SetSequence.fromSet(MapSequence.fromMap(nodeDimensions).keySet())) {
      layoutInfo.setNodeSize(node,MapSequence.fromMap(nodeDimensions).get(node));
    }
    for (    Edge edge : SetSequence.fromSet(MapSequence.fromMap(edgeDimensions).keySet())) {
      layoutInfo.setLabelSize(edge,MapSequence.fromMap(edgeDimensions).get(edge));
    }
    myCurrentLayout=myLayouter.doLayout(layoutInfo);
    myCurrentLayout=myCurrentLayout.shift(20,20);
  }
}
