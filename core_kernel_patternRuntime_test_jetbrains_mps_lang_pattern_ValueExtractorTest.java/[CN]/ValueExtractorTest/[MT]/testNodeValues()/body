{
  final SNode patternNode=newNode(ourConcept1);
  patternNode.addChild(ourC1Child1,newNode(ourConcept1));
  patternNode.addChild(ourC1Child2,newNode(ourConcept2));
  final SNode patternChild=newNode(ourConcept1);
  patternNode.addChild(ourC1Child1,patternChild);
  patternChild.addChild(ourC1Child2,newNode(ourConcept2));
  ValueContainer vc=new ValueContainer();
  final NodeMatcher top=new NodeMatcher(vc);
  top.capture("top").child(ourC1Child1).at(1).capture("c1_2").child(ourC1Child2).at(0).capture("c1_c1_1").done().done().done().done().child(ourC1Child2).at(0).capture("c2_1");
  final SNode actualNode=newNode(ourConcept1,"1");
  actualNode.addChild(ourC1Child1,newNode(ourConcept1,"2_1_1"));
  final SNode actualChild1=newNode(ourConcept1,"2_1_2");
  actualNode.addChild(ourC1Child1,actualChild1);
  final SNode actualGrandChild=newNode(ourConcept2,"3_2_1");
  actualChild1.addChild(ourC1Child2,actualGrandChild);
  final SNode actualChild2=newNode(ourConcept2,"2_2_1");
  actualNode.addChild(ourC1Child2,actualChild2);
  final boolean matched=top.match(patternNode,actualNode);
  myErrors.checkThat("Shall match",matched,Matchers.equalTo(true));
  myErrors.checkThat(vc.getNode("top"),Matchers.equalTo(actualNode));
  myErrors.checkThat(vc.getNode("c1_2"),Matchers.equalTo(actualChild1));
  myErrors.checkThat(vc.getNode("c2_1"),Matchers.equalTo(actualChild2));
  myErrors.checkThat(vc.getNode("c1_c1_1"),Matchers.equalTo(actualGrandChild));
}
