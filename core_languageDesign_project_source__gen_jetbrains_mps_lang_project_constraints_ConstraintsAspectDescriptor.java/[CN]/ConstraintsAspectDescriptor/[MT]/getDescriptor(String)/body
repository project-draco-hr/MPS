{
  if ("jetbrains.mps.lang.project.structure.Module".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Module_Constraints());
  }
  if ("jetbrains.mps.lang.project.structure.Language".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.project.structure.Language"));
  }
  if ("jetbrains.mps.lang.project.structure.Solution".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.project.structure.Solution"));
  }
  if ("jetbrains.mps.lang.project.structure.Generator".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.project.structure.Generator"));
  }
  if ("jetbrains.mps.lang.project.structure.ModelReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.project.structure.ModelReference"));
  }
  if ("jetbrains.mps.lang.project.structure.ModuleDependency".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ModuleDependency_Constraints());
  }
  if ("jetbrains.mps.lang.project.structure.DevKit".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.project.structure.DevKit"));
  }
  if ("jetbrains.mps.lang.project.structure.MappingPriorityRule".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.project.structure.MappingPriorityRule"));
  }
  if ("jetbrains.mps.lang.project.structure.ModuleReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.project.structure.ModuleReference"));
  }
  if ("jetbrains.mps.lang.project.structure.StubEntry".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.project.structure.StubEntry"));
  }
  if ("jetbrains.mps.lang.project.structure.ModelRoot".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.project.structure.ModelRoot"));
  }
  if ("jetbrains.mps.lang.project.structure.ModelRootManager".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.project.structure.ModelRootManager"));
  }
  if ("jetbrains.mps.lang.project.structure.MappingConfigRefBase".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.project.structure.MappingConfigRefBase"));
  }
  if ("jetbrains.mps.lang.project.structure.MappingConfigRefAllGlobal".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.project.structure.MappingConfigRefAllGlobal"));
  }
  if ("jetbrains.mps.lang.project.structure.MappingConfigRefAllLocal".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.project.structure.MappingConfigRefAllLocal"));
  }
  if ("jetbrains.mps.lang.project.structure.MappingConfigRefSet".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.project.structure.MappingConfigRefSet"));
  }
  if ("jetbrains.mps.lang.project.structure.MappingConfigNormalRef".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.project.structure.MappingConfigNormalRef"));
  }
  if ("jetbrains.mps.lang.project.structure.MappingConfigExternalRef".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.project.structure.MappingConfigExternalRef"));
  }
  if ("jetbrains.mps.lang.project.structure.StubSolution".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.project.structure.StubSolution"));
  }
  if ("jetbrains.mps.lang.project.structure.SourcePath".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.project.structure.SourcePath"));
  }
  return null;
}
