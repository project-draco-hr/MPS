{
  return new ConceptDescriptorBuilder("jetbrains.mps.lang.test.structure.AssertMatch",MetaIdFactory.conceptId(0x8585453e6bfb4d80L,0x98deb16074f1d86cL,0x11a2f985130L)).super_("jetbrains.mps.baseLanguage.structure.Statement").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b215L)).parents("jetbrains.mps.baseLanguage.structure.Statement").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b215L)).childDescriptors(new ConceptDescriptorBuilder.Link(0x11a2f989195L,"before",MetaIdFactory.conceptId(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506fL),true,true,false),new ConceptDescriptorBuilder.Link(0x11a2f98d40fL,"after",MetaIdFactory.conceptId(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506fL),true,true,false)).children(new String[]{"before","after"},new boolean[]{true,true}).alias("assert match","").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:00000000-0000-4000-0000-011c89590388(jetbrains.mps.lang.test.structure)","1211979288880")).create();
}
