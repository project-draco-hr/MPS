{
  myIndexMap.put(myConceptAbstractNodeAssert.getId(),0);
  myIndexMap.put(myConceptAbstractNodeErrorCheckOperation.getId(),1);
  myIndexMap.put(myConceptAbstractNodeRuleCheckOperation.getId(),2);
  myIndexMap.put(myConceptAbstractNodeWarningCheckOperation.getId(),3);
  myIndexMap.put(myConceptActionReference.getId(),4);
  myIndexMap.put(myConceptAnonymousCellAnnotation.getId(),5);
  myIndexMap.put(myConceptAssertMatch.getId(),6);
  myIndexMap.put(myConceptBootstrapActionReference.getId(),7);
  myIndexMap.put(myConceptCheckDataFlowOperation.getId(),8);
  myIndexMap.put(myConceptCheckNodeDataflow.getId(),9);
  myIndexMap.put(myConceptCheckNodeForErrorMessagesOperation.getId(),10);
  myIndexMap.put(myConceptCheckNodeForErrors.getId(),11);
  myIndexMap.put(myConceptDragMouseStatement.getId(),12);
  myIndexMap.put(myConceptEditorComponentExpression.getId(),13);
  myIndexMap.put(myConceptEditorExpression.getId(),14);
  myIndexMap.put(myConceptEditorOperation.getId(),15);
  myIndexMap.put(myConceptEditorTestCase.getId(),16);
  myIndexMap.put(myConceptExpressionContainer.getId(),17);
  myIndexMap.put(myConceptIChecksRules.getId(),18);
  myIndexMap.put(myConceptINodeAnnotation.getId(),19);
  myIndexMap.put(myConceptIReferenceAttachable.getId(),20);
  myIndexMap.put(myConceptIRuleReference.getId(),21);
  myIndexMap.put(myConceptInfoStatementReference.getId(),22);
  myIndexMap.put(myConceptInvokeActionStatement.getId(),23);
  myIndexMap.put(myConceptInvokeIntentionStatement.getId(),24);
  myIndexMap.put(myConceptLogEvent.getId(),25);
  myIndexMap.put(myConceptMPSActionReference.getId(),26);
  myIndexMap.put(myConceptMockAnnotation.getId(),27);
  myIndexMap.put(myConceptModelExpression.getId(),28);
  myIndexMap.put(myConceptNodeCheckOperation.getId(),29);
  myIndexMap.put(myConceptNodeConstraintsErrorCheckOperation.getId(),30);
  myIndexMap.put(myConceptNodeConstraintsWarningCheckOperation.getId(),31);
  myIndexMap.put(myConceptNodeErrorCheckOperation.getId(),32);
  myIndexMap.put(myConceptNodeExpectedTypeCheckOperation.getId(),33);
  myIndexMap.put(myConceptNodeInfoCheckOperation.getId(),34);
  myIndexMap.put(myConceptNodeOperationsContainer.getId(),35);
  myIndexMap.put(myConceptNodePropertiesContainer.getId(),36);
  myIndexMap.put(myConceptNodeReachable.getId(),37);
  myIndexMap.put(myConceptNodeRuleCheckOperation.getId(),38);
  myIndexMap.put(myConceptNodeTypeCheckOperation.getId(),39);
  myIndexMap.put(myConceptNodeTypeSetCheckOperation.getId(),40);
  myIndexMap.put(myConceptNodeTypeSystemErrorCheckOperation.getId(),41);
  myIndexMap.put(myConceptNodeTypeSystemRuleCheckOperation.getId(),42);
  myIndexMap.put(myConceptNodeTypeSystemWarningCheckOperation.getId(),43);
  myIndexMap.put(myConceptNodeUnknownErrorCheckOperation.getId(),44);
  myIndexMap.put(myConceptNodeUnknownWarningCheckOperation.getId(),45);
  myIndexMap.put(myConceptNodeUnreachable.getId(),46);
  myIndexMap.put(myConceptNodeWarningCheckOperation.getId(),47);
  myIndexMap.put(myConceptNodesTestCase.getId(),48);
  myIndexMap.put(myConceptNodesTestMethod.getId(),49);
  myIndexMap.put(myConceptPressKeyStatement.getId(),50);
  myIndexMap.put(myConceptPressMouseStatement.getId(),51);
  myIndexMap.put(myConceptProjectExpression.getId(),52);
  myIndexMap.put(myConceptReportErrorStatementReference.getId(),53);
  myIndexMap.put(myConceptScopesExpectedNode.getId(),54);
  myIndexMap.put(myConceptScopesTest.getId(),55);
  myIndexMap.put(myConceptSimpleNodeTest.getId(),56);
  myIndexMap.put(myConceptSwitchToInspector.getId(),57);
  myIndexMap.put(myConceptTestInfo.getId(),58);
  myIndexMap.put(myConceptTestNode.getId(),59);
  myIndexMap.put(myConceptTestNodeAnnotation.getId(),60);
  myIndexMap.put(myConceptTestNodeReference.getId(),61);
  myIndexMap.put(myConceptTypeKeyStatement.getId(),62);
  myIndexMap.put(myConceptUnknownRuleReference.getId(),63);
  myIndexMap.put(myConceptUntypedExpression.getId(),64);
  myIndexMap.put(myConceptVariableAlive.getId(),65);
  myIndexMap.put(myConceptVariableInitialized.getId(),66);
  myIndexMap.put(myConceptWarningStatementReference.getId(),67);
}
