{
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      SNode methodCall=ExtractMethodWithOutputVariable.this.createMethodCall(match,methodDeclaration);
      List<SNode> statements=match.getNodes();
      if ((ExtractMethodWithOutputVariable.this.myDeclarationStatement != null)) {
        SLinkOperations.setTarget(SLinkOperations.getTarget(ExtractMethodWithOutputVariable.this.myDeclarationStatement,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc67c7f0L,0xf8cc67c7f1L,"localVariableDeclaration")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37a7f6eL,0xf8c37f506eL,"initializer"),methodCall);
      }
 else {
        SNode newStatement=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b213L,"jetbrains.mps.baseLanguage.structure.ExpressionStatement")));
        SLinkOperations.setTarget(newStatement,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b213L,0xf8cc56b214L,"expression"),_quotation_createNode_n3576q_a0b0a2a0a0a0f(methodCall,BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),ExtractMethodWithOutputVariable.this.myOutputVariable,"virtual_createReference_1213877517482",new Object[]{})));
        SNodeOperations.insertPrevSiblingChild(ListSequence.fromList(statements).first(),newStatement);
      }
      for (      SNode statement : ListSequence.fromList(statements)) {
        if (statement != ExtractMethodWithOutputVariable.this.myDeclarationStatement) {
          SNodeOperations.deleteNode(statement);
        }
      }
    }
  }
);
}
