{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(-2922713684555708516l,-6639802755577912107l),2507865635201615235l,2507865635201615236l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(-2922713684555708516l,-6639802755577912107l),2507865635201615235l,2507865635201615236l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return ListSequence.fromList(SModelOperations.roots(_context.getModel(),MetaAdapterFactory.getConcept(new UUID(-5475912601019530992l,-8082971551085732881l),1095416546421l,"jetbrains.mps.lang.generator.structure.MappingConfiguration"))).translate(new ITranslator2<SNode,SNode>(){
            public Iterable<SNode> translate(            SNode it){
              return SLinkOperations.getChildren(it,MetaAdapterFactory.getContainmentLink(new UUID(-5475912601019530992l,-8082971551085732881l),1095416546421l,2456082753387314114l,"generationParameters"));
            }
          }
);
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_bxu0yd_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
