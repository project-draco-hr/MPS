{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(-935030926396207931l,-6610165693999523818l),5497648299878491908l,5497648299878491909l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(-935030926396207931l,-6610165693999523818l),5497648299878491908l,5497648299878491909l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return ListSequence.fromList(SNodeOperations.getNodeAncestors(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(new UUID(8675788371017092295l,-9098312342032910879l),1883223317721008708l,"jetbrains.mps.lang.smodel.structure.IfInstanceOfStatement"),false)).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SLinkOperations.getTarget(it,MetaAdapterFactory.getContainmentLink(new UUID(8675788371017092295l,-9098312342032910879l),1883223317721008708l,1883223317721008711l,"variable"));
            }
          }
);
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_p36rc2_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
