{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x4c4b92003e49a704L,0x4c4b92003e49a705L),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x4c4b92003e49a704L,0x4c4b92003e49a705L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return ListSequence.fromList(SNodeOperations.getNodeAncestors(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x1a228da1357e4a44L,"jetbrains.mps.lang.smodel.structure.IfInstanceOfStatement"),false)).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SLinkOperations.getTarget(it,MetaAdapterFactory.getContainmentLink(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x1a228da1357e4a44L,0x1a228da1357e4a47L,"variable"));
            }
          }
);
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_p36rc2_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
