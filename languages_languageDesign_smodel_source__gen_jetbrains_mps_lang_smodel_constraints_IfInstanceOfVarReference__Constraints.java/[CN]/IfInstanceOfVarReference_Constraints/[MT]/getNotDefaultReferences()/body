{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("baseVariableDeclaration",new BaseReferenceConstraintsDescriptor("baseVariableDeclaration",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return ListSequence.fromList(SNodeOperations.getAncestors(_context.getEnclosingNode(),"jetbrains.mps.lang.smodel.structure.IfInstanceOfStatement",false)).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SLinkOperations.getTarget(it,"variable",true);
            }
          }
);
        }
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_p36rc2_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
