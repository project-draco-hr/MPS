{
  MappingConfig_AbstractRef greaterPriMappingRef=rule.getGreaterPriorityMapping();
  MappingConfig_AbstractRef lesserPriMappingRef=rule.getLesserPriorityMapping();
  if (greaterPriMappingRef == null || lesserPriMappingRef == null)   return;
  List<MappingConfiguration> greaterPriMappings=getMappingsFromRef(greaterPriMappingRef,generator);
  List<MappingConfiguration> lesserPriMappings=getMappingsFromRef(lesserPriMappingRef,generator);
  if (rule.getKind() == MappingPriorityRuleKind.strictly_together) {
    Set<MappingConfiguration> coherentMappings=new HashSet<MappingConfiguration>(lesserPriMappings);
    coherentMappings.addAll(greaterPriMappings);
    myCoherentMappings.add(new CoherentSetData(coherentMappings,rule));
  }
 else {
    if (rule.getGreaterPriorityMapping() instanceof MappingConfig_RefAllGlobal) {
      greaterPriMappings=CollectionUtil.subtraction(greaterPriMappings,lesserPriMappings);
    }
 else {
      lesserPriMappings=CollectionUtil.subtraction(lesserPriMappings,greaterPriMappings);
    }
    for (    MappingConfiguration lesserPriMapping : lesserPriMappings) {
      Map<MappingConfiguration,PriorityData> grtPriMappingsFromMap=myPriorityMap.get(lesserPriMapping);
      for (      MappingConfiguration grtPriMapping : greaterPriMappings) {
        boolean isStrict=(rule.getKind() == MappingPriorityRuleKind.strictly_before);
        if (!grtPriMappingsFromMap.containsKey(grtPriMapping)) {
          grtPriMappingsFromMap.put(grtPriMapping,new PriorityData(isStrict,rule));
        }
 else {
          PriorityData priorityData=grtPriMappingsFromMap.get(grtPriMapping);
          if (isStrict)           priorityData.myStrict=true;
          priorityData.myCauseRules.add(rule);
        }
      }
    }
  }
}
