{
  try {
    GenerateFavorites_ActionGroup.this.removeAll();
    Project project=event.getData(MPSDataKeys.PROJECT);
    if (!(FavoritesUtil.isActiveFavorites(project))) {
      return;
    }
    TreeNode treeNode=event.getData(MPSDataKeys.LOGICAL_VIEW_NODE);
    if (treeNode instanceof SNodeTreeNode) {
{
        GeneratedAction newAction=new GenerateFilesFromModel_Action(new GenerateFilesFromModelsAction(false));
        ActionManagerEx manager=ActionManagerEx.getInstanceEx();
        AnAction oldAction=manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          PluginId pluginId=PluginId.getId("jetbrains.mps.ide");
          manager.registerAction(newAction.getActionId(),newAction,pluginId);
          oldAction=newAction;
        }
        GenerateFavorites_ActionGroup.this.addAction(oldAction);
      }
{
        GeneratedAction newAction=new RegenerateFilesFromModel_Action(new GenerateFilesFromModelsAction(true));
        ActionManagerEx manager=ActionManagerEx.getInstanceEx();
        AnAction oldAction=manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          PluginId pluginId=PluginId.getId("jetbrains.mps.ide");
          manager.registerAction(newAction.getActionId(),newAction,pluginId);
          oldAction=newAction;
        }
        GenerateFavorites_ActionGroup.this.addAction(oldAction);
      }
{
        GeneratedAction newAction=new GenerateTextFromModel_Action(new GenerateTextFromModelsAction());
        ActionManagerEx manager=ActionManagerEx.getInstanceEx();
        AnAction oldAction=manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          PluginId pluginId=PluginId.getId("jetbrains.mps.ide");
          manager.registerAction(newAction.getActionId(),newAction,pluginId);
          oldAction=newAction;
        }
        GenerateFavorites_ActionGroup.this.addAction(oldAction);
      }
    }
  }
 catch (  Throwable t) {
    LOG.error("User group error",t);
  }
  for (  Pair<ActionPlace,Condition<BaseAction>> p : this.myPlaces) {
    this.addPlace(p.first,p.second);
  }
}
