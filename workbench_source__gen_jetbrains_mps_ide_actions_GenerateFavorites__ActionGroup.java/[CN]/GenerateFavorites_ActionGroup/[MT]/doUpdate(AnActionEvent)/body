{
  try {
    GenerateFavorites_ActionGroup.this.removeAll();
    Project project=MPSDataKeys.PROJECT.getData(event.getDataContext());
    ProjectView projectView=ProjectView.getInstance(project);
    AbstractProjectViewPane pane=projectView.getCurrentProjectViewPane();
    boolean isInFavorites=pane instanceof FavoritesProjectPane;
    if (!(isInFavorites)) {
      return;
    }
    TreeNode treeNode=MPSDataKeys.LOGICAL_VIEW_NODE.getData(event.getDataContext());
    if (treeNode instanceof SNodeTreeNode) {
      GenerateFavorites_ActionGroup.this.addAction("jetbrains.mps.ide.actions.GenerateFilesFromModel_Action","jetbrains.mps.ide",new GenerateFilesFromModelsAction());
      GenerateFavorites_ActionGroup.this.addAction("jetbrains.mps.ide.actions.GenerateTextFromModel_Action","jetbrains.mps.ide",new GenerateTextFromModelsAction());
    }
  }
 catch (  Throwable t) {
    LOG.error("User group error",t);
  }
  for (  Pair<ActionPlace,Condition<BaseAction>> p : this.myPlaces) {
    this.addPlace(p.first,p.second);
  }
}
