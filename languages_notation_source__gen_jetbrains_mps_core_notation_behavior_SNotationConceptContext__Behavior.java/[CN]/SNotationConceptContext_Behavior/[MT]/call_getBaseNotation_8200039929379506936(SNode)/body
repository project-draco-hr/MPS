{
  if (SLinkOperations.getTarget(thisNode,"element",false) == null) {
    return null;
  }
  Scope lscope=Scope.getScope(SLinkOperations.getTarget(thisNode,"element",false),null,SConceptOperations.findConceptDeclaration("jetbrains.mps.core.notation.structure.SNotation"));
  Iterable<SNode> result=Sequence.fromIterable(lscope.getAvailableElements(null)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.core.notation.structure.SNotation") && it != SNodeOperations.getParent(thisNode) && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.core.notation.structure.SNotation"),"context",true),"jetbrains.mps.core.notation.structure.SNotationConceptContext") && SAbstractConcept_Behavior.call_isSubConceptOf_5938997310819191538(SLinkOperations.getTarget(thisNode,"element",false),SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.core.notation.structure.SNotation"),"context",true),"jetbrains.mps.core.notation.structure.SNotationConceptContext"),"element",false));
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return eq_kgiyay_a0a0a0a0a0a0d0c(SPropertyOperations.getString(SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.core.notation.structure.SNotation"),"context",true),"id"),SPropertyOperations.getString(thisNode,"id"));
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(it,"jetbrains.mps.core.notation.structure.SNotation");
    }
  }
);
  final SNode nearestConcept=ConceptUtil.getNearestConcept(SLinkOperations.getTarget(thisNode,"element",false),Sequence.fromIterable(result).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it,"context",true),"jetbrains.mps.core.notation.structure.SNotationConceptContext");
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(it,"context",true),"jetbrains.mps.core.notation.structure.SNotationConceptContext"),"element",false);
    }
  }
));
  SNode prioNode=Sequence.fromIterable(result).findFirst(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it,"context",true),"jetbrains.mps.core.notation.structure.SNotationConceptContext") && SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(it,"context",true),"jetbrains.mps.core.notation.structure.SNotationConceptContext"),"element",false) == nearestConcept;
    }
  }
);
  if (prioNode != null) {
    return prioNode;
  }
  return Sequence.fromIterable(result).first();
}
