{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
  ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1118dbeda57L,"jetbrains.mps.baseLanguage.regexp.structure.NTimesRegexp").getDeclarationNode(),_context.getSourceNode()){
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      SNode node=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1118dbeda57L,"jetbrains.mps.baseLanguage.regexp.structure.NTimesRegexp")),null);
      SNodeOperations.replaceWithAnother(_context.getSourceNode(),node);
      SLinkOperations.setTarget(node,MetaAdapterFactory.getContainmentLink(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x11174c678adL,0x11174c6961aL,"regexp"),_context.getSourceNode());
{
        Pattern _pattern_0=REGEXP_x583g4_a0a0d0a0a0a0a0b0f;
        Matcher _matcher_0=_pattern_0.matcher(pattern);
        if (_matcher_0.find()) {
          SPropertyOperations.set(node,MetaAdapterFactory.getProperty(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1118dbeda57L,0x1118dbf202dL,"n"),"" + (Integer.parseInt(_matcher_0.group(1))));
        }
      }
      return node;
    }
    public String getMatchingText(    String pattern){
      if (!(REGEXP_x583g4_a0a0a0b0a0a0a0b0f.matcher(pattern).matches())) {
        return "{n}";
      }
      String s=pattern;
      if (!(s.endsWith("}"))) {
        s+="}";
      }
      return s;
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
    @Override protected boolean isEnabled(){
      SNode sourceNode=getSourceNode();
      SNode parent=SNodeOperations.getParent(sourceNode);
      SNode containingLink=SNodeOperations.getContainingLinkDeclaration(sourceNode);
      return parent == null || containingLink == null || (ModelConstraints.canBeParent(parent,MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1118dbeda57L,"jetbrains.mps.baseLanguage.regexp.structure.NTimesRegexp").getDeclarationNode(),containingLink,null,null) && ModelConstraints.canBeAncestor(parent,null,MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1118dbeda57L,"jetbrains.mps.baseLanguage.regexp.structure.NTimesRegexp").getDeclarationNode(),null));
    }
  }
);
  ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1118dc30ee2L,"jetbrains.mps.baseLanguage.regexp.structure.AtLeastNTimesRegexp").getDeclarationNode(),_context.getSourceNode()){
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      SNode node=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1118dc30ee2L,"jetbrains.mps.baseLanguage.regexp.structure.AtLeastNTimesRegexp")),null);
      SNodeOperations.replaceWithAnother(_context.getSourceNode(),node);
      SLinkOperations.setTarget(node,MetaAdapterFactory.getContainmentLink(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x11174c678adL,0x11174c6961aL,"regexp"),_context.getSourceNode());
{
        Pattern _pattern_0=REGEXP_x583g4_a0a0d0a0a0a0a0c0f;
        Matcher _matcher_0=_pattern_0.matcher(pattern);
        if (_matcher_0.find()) {
          SPropertyOperations.set(node,MetaAdapterFactory.getProperty(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1118dc30ee2L,0x1118dc39835L,"n"),"" + (Integer.parseInt(_matcher_0.group(1))));
        }
      }
      return node;
    }
    public String getMatchingText(    String pattern){
      if (!(REGEXP_x583g4_a0a0a0b0a0a0a0c0f.matcher(pattern).matches())) {
        return "{n,}";
      }
      String s=pattern;
      if (!(s.endsWith(",}"))) {
        s+=(s.endsWith(",") ? "}" : ",}");
      }
      return s;
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
    @Override protected boolean isEnabled(){
      SNode sourceNode=getSourceNode();
      SNode parent=SNodeOperations.getParent(sourceNode);
      SNode containingLink=SNodeOperations.getContainingLinkDeclaration(sourceNode);
      return parent == null || containingLink == null || (ModelConstraints.canBeParent(parent,MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1118dc30ee2L,"jetbrains.mps.baseLanguage.regexp.structure.AtLeastNTimesRegexp").getDeclarationNode(),containingLink,null,null) && ModelConstraints.canBeAncestor(parent,null,MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1118dc30ee2L,"jetbrains.mps.baseLanguage.regexp.structure.AtLeastNTimesRegexp").getDeclarationNode(),null));
    }
  }
);
  ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1118dc58c6eL,"jetbrains.mps.baseLanguage.regexp.structure.FromNToMTimesRegexp").getDeclarationNode(),_context.getSourceNode()){
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      SNode node=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1118dc58c6eL,"jetbrains.mps.baseLanguage.regexp.structure.FromNToMTimesRegexp")),null);
      SNodeOperations.replaceWithAnother(_context.getSourceNode(),node);
      SLinkOperations.setTarget(node,MetaAdapterFactory.getContainmentLink(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x11174c678adL,0x11174c6961aL,"regexp"),_context.getSourceNode());
{
        Pattern _pattern_0=REGEXP_x583g4_a0a0d0a0a0a0a0d0f;
        Matcher _matcher_0=_pattern_0.matcher(pattern);
        if (_matcher_0.find()) {
          SPropertyOperations.set(node,MetaAdapterFactory.getProperty(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1118dc58c6eL,0x1118dc5ca73L,"m"),"" + (Integer.parseInt(_matcher_0.group(1))));
        }
      }
{
        Pattern _pattern_0=REGEXP_x583g4_a0a0e0a0a0a0a0d0f;
        Matcher _matcher_0=_pattern_0.matcher(pattern);
        if (_matcher_0.find()) {
          SPropertyOperations.set(node,MetaAdapterFactory.getProperty(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1118dc58c6eL,0x1118dc5bf75L,"n"),"" + (Integer.parseInt(_matcher_0.group(1))));
        }
      }
      return node;
    }
    public String getMatchingText(    String pattern){
      if (!(REGEXP_x583g4_a0a0a0b0a0a0a0d0f.matcher(pattern).matches())) {
        return "{n,m}";
      }
      String left="n";
      String right="m";
{
        Pattern _pattern_0=REGEXP_x583g4_a0a0d0b0a0a0a0d0f;
        Matcher _matcher_0=_pattern_0.matcher(pattern);
        if (_matcher_0.find()) {
          right=_matcher_0.group(1);
        }
      }
{
        Pattern _pattern_0=REGEXP_x583g4_a0a0e0b0a0a0a0d0f;
        Matcher _matcher_0=_pattern_0.matcher(pattern);
        if (_matcher_0.find()) {
          left=_matcher_0.group(1);
        }
      }
      return "{" + left + ","+ right+ "}";
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
    @Override protected boolean isEnabled(){
      SNode sourceNode=getSourceNode();
      SNode parent=SNodeOperations.getParent(sourceNode);
      SNode containingLink=SNodeOperations.getContainingLinkDeclaration(sourceNode);
      return parent == null || containingLink == null || (ModelConstraints.canBeParent(parent,MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1118dc58c6eL,"jetbrains.mps.baseLanguage.regexp.structure.FromNToMTimesRegexp").getDeclarationNode(),containingLink,null,null) && ModelConstraints.canBeAncestor(parent,null,MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1118dc58c6eL,"jetbrains.mps.baseLanguage.regexp.structure.FromNToMTimesRegexp").getDeclarationNode(),null));
    }
  }
);
{
    Iterable<SNode> parameterObjects=new Computable<Iterable<SNode>>(){
      public Iterable<SNode> compute(){
        return ListSequence.fromListAndArray(new ArrayList<SNode>(),MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x11174a16ffaL,"jetbrains.mps.baseLanguage.regexp.structure.StarRegexp").getDeclarationNode(),MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x11174a15de8L,"jetbrains.mps.baseLanguage.regexp.structure.PlusRegexp").getDeclarationNode(),MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x11178c4e1e0L,"jetbrains.mps.baseLanguage.regexp.structure.QuestionRegexp").getDeclarationNode(),MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1117f38e076L,"jetbrains.mps.baseLanguage.regexp.structure.LazyPlusRegexp").getDeclarationNode(),MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1117f394b67L,"jetbrains.mps.baseLanguage.regexp.structure.LazyQuestionRegexp").getDeclarationNode(),MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1117f383367L,"jetbrains.mps.baseLanguage.regexp.structure.LazyStarRegexp").getDeclarationNode());
      }
    }
.compute();
    if (parameterObjects != null) {
      for (      final SNode item : parameterObjects) {
        ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x11174c678adL,"jetbrains.mps.baseLanguage.regexp.structure.UnaryRegexp").getDeclarationNode(),item,_context.getSourceNode()){
          public SNode doSubstitute(          @Nullable final EditorContext editorContext,          String pattern){
            SNode newRegexp=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept((item)),null);
            SNodeOperations.replaceWithAnother(_context.getSourceNode(),newRegexp);
            SLinkOperations.setTarget(newRegexp,MetaAdapterFactory.getContainmentLink(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x11174c678adL,0x11174c6961aL,"regexp"),_context.getSourceNode());
            return newRegexp;
          }
          public String getMatchingText(          String pattern){
            return SPropertyOperations.getString((item),MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0x46ab0ad5826c74caL,"conceptAlias"));
          }
          public String getVisibleMatchingText(          String pattern){
            return getMatchingText(pattern);
          }
          @Override protected boolean isEnabled(){
            SNode sourceNode=getSourceNode();
            SNode parent=SNodeOperations.getParent(sourceNode);
            SNode containingLink=SNodeOperations.getContainingLinkDeclaration(sourceNode);
            return parent == null || containingLink == null || (ModelConstraints.canBeParent(parent,MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x11174c678adL,"jetbrains.mps.baseLanguage.regexp.structure.UnaryRegexp").getDeclarationNode(),containingLink,null,null) && ModelConstraints.canBeAncestor(parent,null,MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x11174c678adL,"jetbrains.mps.baseLanguage.regexp.structure.UnaryRegexp").getDeclarationNode(),null));
          }
        }
);
      }
    }
  }
  return result;
}
