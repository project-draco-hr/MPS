{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    Iterable<SConcept> parameterObjects=new Computable<Iterable<SConcept>>(){
      public Iterable<SConcept> compute(){
        final List<SAbstractConcept> excludeList=ListSequence.fromListAndArray(new ArrayList<SAbstractConcept>(),MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x11174c56bf9L,"jetbrains.mps.baseLanguage.regexp.structure.BinaryRegexp"),MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x11174c678adL,"jetbrains.mps.baseLanguage.regexp.structure.UnaryRegexp"),MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x11178fa2a18L,"jetbrains.mps.baseLanguage.regexp.structure.PredefinedSymbolClassRegexp"),MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1117f58ea2aL,"jetbrains.mps.baseLanguage.regexp.structure.RegexpDeclarationReferenceRegexp"),MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1118e0a1c55L,"jetbrains.mps.baseLanguage.regexp.structure.MatchVariableReferenceRegexp"));
        List<SConcept> regexps=SConceptOperations.getAllSubConcepts2(MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x11174a06efdL,"jetbrains.mps.baseLanguage.regexp.structure.Regexp"),_context.getModel());
        return ListSequence.fromList(regexps).where(new IWhereFilter<SConcept>(){
          public boolean accept(          SConcept it){
            for (            SAbstractConcept exclude : ListSequence.fromList(excludeList)) {
              if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(it),SNodeOperations.asSConcept(exclude))) {
                return false;
              }
            }
            return true;
          }
        }
).toListSequence();
      }
    }
.compute();
    if (parameterObjects != null) {
      for (      final SConcept item : parameterObjects) {
        ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x11174a06efdL,"jetbrains.mps.baseLanguage.regexp.structure.Regexp").getDeclarationNode(),item,_context.getSourceNode()){
          public SNode doSubstitute(          @Nullable final EditorContext editorContext,          String pattern){
            SNode newRegexp=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept((item)),null);
            SNode result=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x11174bc30e7L,"jetbrains.mps.baseLanguage.regexp.structure.SeqRegexp")),null);
            SNodeOperations.replaceWithAnother(_context.getSourceNode(),result);
            SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x11174c56bf9L,0x11174c59241L,"left"),_context.getSourceNode());
            SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x11174c56bf9L,0x11174c5a26fL,"right"),newRegexp);
            return newRegexp;
          }
          @Override protected boolean isEnabled(){
            SNode sourceNode=getSourceNode();
            SNode parent=SNodeOperations.getParent(sourceNode);
            SNode containingLink=SNodeOperations.getContainingLinkDeclaration(sourceNode);
            return parent == null || containingLink == null || (ModelConstraints.canBeParent(parent,MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x11174a06efdL,"jetbrains.mps.baseLanguage.regexp.structure.Regexp").getDeclarationNode(),containingLink,null,null) && ModelConstraints.canBeAncestor(parent,null,MetaAdapterFactory.getConcept(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x11174a06efdL,"jetbrains.mps.baseLanguage.regexp.structure.Regexp").getDeclarationNode(),null));
          }
        }
);
      }
    }
  }
  return result;
}
