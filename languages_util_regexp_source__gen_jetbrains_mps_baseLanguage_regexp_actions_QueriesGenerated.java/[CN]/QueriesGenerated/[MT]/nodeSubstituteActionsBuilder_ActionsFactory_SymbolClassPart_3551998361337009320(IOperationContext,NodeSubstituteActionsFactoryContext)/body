{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.regexp.structure.CharacterSymbolClassPart");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode literal=SNodeFactoryOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(-2688747624584492277l,-5722269945249396544l),1174557878319l,"jetbrains.mps.baseLanguage.regexp.structure.CharacterSymbolClassPart"),null);
          SPropertyOperations.set(literal,MetaAdapterFactory.getProperty(new UUID(-2688747624584492277l,-5722269945249396544l),1174557878319l,1174557887320l,"character"),(pattern.startsWith("\\") ? pattern.substring(1) : pattern));
          return literal;
        }
        public boolean hasSubstitute(){
          return true;
        }
        public boolean canSubstitute_internal(        String pattern,        boolean strictly){
          return REGEXP_x583g4_a0a0a2a0a0a0a2a0a1a7.matcher(pattern).matches();
        }
        public String getMatchingText(        String pattern){
          return pattern;
        }
        public String getVisibleMatchingText(        String pattern){
          return getMatchingText(pattern);
        }
      }
);
    }
  }
  return result;
}
