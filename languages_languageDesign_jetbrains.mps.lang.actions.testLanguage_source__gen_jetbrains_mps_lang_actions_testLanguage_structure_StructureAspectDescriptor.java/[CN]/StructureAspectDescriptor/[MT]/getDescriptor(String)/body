{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestAbstractChild").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault","jetbrains.mps.lang.core.structure.INamedConcept").abstract_().create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestAbstractChildWrapper").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault","jetbrains.mps.lang.core.structure.INamedConcept").abstract_().create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestChild1").super_("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestAbstractChild").parents("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestAbstractChild").children(new String[]{"child1"},new boolean[]{true}).alias("child1","").create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestChild1Child").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestChild1SubConcept").super_("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestChild1").parents("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestChild1").alias("child1Sub","").create();
case 5:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestChild2").super_("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestAbstractChild").parents("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestAbstractChild").alias("child2","").create();
case 6:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestChildToWrap1").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault","jetbrains.mps.lang.core.structure.INamedConcept").alias("wrappedChild1","").create();
case 7:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestChildToWrap2").super_("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestChildToWrap1").parents("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestChildToWrap1").alias("wrappedChild2","").create();
case 8:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestChildWrapper").super_("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestAbstractChildWrapper").parents("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestAbstractChildWrapper").children(new String[]{"childToWrap"},new boolean[]{false}).create();
case 9:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestContainer").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"abstractChild","conceptSubstitutePart","addMenu_conceptSubstitute","addMenu_genericQuery","addMenu_parameterizedSubstitute","addMenu_simpleItemSubstitute","addMenu_wrapperSubstitute","addMenu_wrapperSubstituteDefaultSelection","removeByConditionPart","removePart","removeDefaultsPart"},new boolean[]{true,true,true,true,true,true,true,true,true,true,true}).create();
case 10:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestDefaultAbstractChild").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").abstract_().create();
case 11:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestDefaultChild1").super_("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestDefaultAbstractChild").parents("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestDefaultAbstractChild").alias("child1","").create();
case 12:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestDefaultChild2").super_("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestDefaultAbstractChild").parents("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestDefaultAbstractChild").alias("child2","").create();
case 13:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestSidetransformAbstractChild").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").abstract_().create();
case 14:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestSidetransformAddConceptAbstractChild").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
case 15:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestSidetransformAddConceptChild").super_("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestSidetransformAddConceptAbstractChild").parents("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestSidetransformAddConceptAbstractChild").alias("addConceptChild","").create();
case 16:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestSidetransformAnotherAbstractChild").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
case 17:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestSidetransformAnotherChild1").super_("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestSidetransformAnotherChildCommonSuperConcept").parents("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestSidetransformAnotherChildCommonSuperConcept").alias("anotherChild1","").create();
case 18:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestSidetransformAnotherChild2").super_("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestSidetransformAnotherChildCommonSuperConcept").parents("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestSidetransformAnotherChildCommonSuperConcept").alias("anotherChild2","").create();
case 19:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestSidetransformAnotherChildCommonSuperConcept").super_("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestSidetransformAnotherAbstractChild").parents("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestSidetransformAnotherAbstractChild").abstract_().create();
case 20:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestSidetransformChild1").super_("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestSidetransformAbstractChild").parents("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestSidetransformAbstractChild").create();
case 21:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestSidetransformTestAncestor").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"container"},new boolean[]{false}).create();
case 22:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.actions.testLanguage.structure.ActionTestSidetransformTestContainer").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"abstractChild","abstractChildConstrained","anotherAbstractChild","anotherAbstractChildConstrained","abstractChildAddConcept"},new boolean[]{true,true,true,true,true}).create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
