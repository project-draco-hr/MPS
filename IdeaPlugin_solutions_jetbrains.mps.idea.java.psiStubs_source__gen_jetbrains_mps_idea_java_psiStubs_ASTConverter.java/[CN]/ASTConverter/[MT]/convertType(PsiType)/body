{
  if (x == null) {
    return null;
  }
  if (x instanceof PsiPrimitiveType) {
    PsiPrimitiveType t=(PsiPrimitiveType)x;
    if (x.equals(PsiPrimitiveType.BYTE)) {
      return SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ByteType",null);
    }
 else     if (x.equals(PsiPrimitiveType.INT)) {
      return SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.IntegerType",null);
    }
 else     if (x.equals(PsiPrimitiveType.SHORT)) {
      return SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ShortType",null);
    }
 else     if (x.equals(PsiPrimitiveType.LONG)) {
      return SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LongType",null);
    }
 else     if (x.equals(PsiPrimitiveType.SHORT)) {
      return SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ShortType",null);
    }
 else     if (x.equals(PsiPrimitiveType.FLOAT)) {
      return SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.FloatType",null);
    }
 else     if (x.equals(PsiPrimitiveType.DOUBLE)) {
      return SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.DoubleType",null);
    }
 else     if (x.equals(PsiPrimitiveType.CHAR)) {
      return SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.CharType",null);
    }
 else     if (x.equals(PsiPrimitiveType.BOOLEAN)) {
      return SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.BooleanType",null);
    }
 else     if (x.equals(PsiPrimitiveType.VOID)) {
      return SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.VoidType",null);
    }
 else {
      return null;
    }
  }
 else   if (x instanceof PsiClassType) {
    PsiClassType t=(PsiClassType)x;
    PsiClass c=t.resolve();
    if (c == null) {
      return null;
    }
 else     if (c instanceof PsiTypeParameter) {
      jetbrains.mps.smodel.SNode typVarRef=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.TypeVariableReference",null);
      typVarRef.setReference("typeVariableDeclaration",new DynamicReference("typeVariableDeclaration",typVarRef,null,c.getName()));
      return typVarRef;
    }
    SNode typ=resolveClass(t);
    return typ;
  }
 else   if (x instanceof PsiArrayType) {
    jetbrains.mps.smodel.SNode arrType=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ArrayType",null);
    SLinkOperations.setTarget(arrType,"componentType",convertType(((PsiArrayType)x).getComponentType()),true);
    return arrType;
  }
 else   if (x instanceof PsiWildcardType) {
    PsiWildcardType t=(PsiWildcardType)x;
    if (!(t.isBounded())) {
      return SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.WildCardType",null);
    }
    SNode bound=convertType(t.getBound());
    if (t.isExtends()) {
      return _quotation_createNode_rbndtb_a0a6a2c0g(bound);
    }
 else {
      return _quotation_createNode_rbndtb_a0a0g0c2a6(bound);
    }
  }
 else {
    return null;
  }
}
