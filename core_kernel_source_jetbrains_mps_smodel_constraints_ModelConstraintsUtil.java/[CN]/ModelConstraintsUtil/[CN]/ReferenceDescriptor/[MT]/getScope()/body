{
  return TypeContextManager.getInstance().runResolveAction(new Computable<Scope>(){
    @Override public Scope compute(){
      try {
        if (myScopeProvider != null) {
          Scope searchScope=myScopeProvider.createScope(myOperationContext,myReferentConstraintContext);
          if (searchScope != null) {
            if (myReference != null && searchScope instanceof Adapter) {
              return new RefAdapter(((Adapter)searchScope).getSearchScope(),myReference);
            }
            return searchScope;
          }
        }
        return new DefaultScope(myReferentConstraintContext.getModel(),myOperationContext.getScope(),NameUtil.nodeFQName(myReferentConstraintContext.getLinkTarget()));
      }
 catch (      Exception t) {
        LOG.error(t,myReferentConstraintContext.getReferenceNode() != null ? myReferentConstraintContext.getReferenceNode() : myReferentConstraintContext.getEnclosingNode());
        return new ErrorScope("can't create search scope for role `" + myRefRole + "' in '"+ myRefConcept.getName()+ "'");
      }
    }
  }
);
}
