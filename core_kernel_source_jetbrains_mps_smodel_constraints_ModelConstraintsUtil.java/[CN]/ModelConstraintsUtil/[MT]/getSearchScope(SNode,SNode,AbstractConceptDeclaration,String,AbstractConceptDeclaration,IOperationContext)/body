{
  final SModel model;
  if (enclosingNode != null) {
    model=enclosingNode.getModel();
  }
 else   if (referenceNode != null) {
    model=referenceNode.getModel();
    enclosingNode=referenceNode.getParent();
  }
 else {
    model=null;
  }
  final SNode enclosingNode_=enclosingNode;
  final SearchScopeStatus[] status=new SearchScopeStatus[1];
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      SNode contextNode=enclosingNode_;
      if (contextNode == null) {
        contextNode=referenceNode;
      }
      TypeCheckingContext typeCheckingContext=TypeContextManager.getInstance().createTypeCheckingContextForResolve(contextNode);
      typeCheckingContext.runTypeCheckingAction(new Runnable(){
        @Override public void run(){
          try {
            status[0]=getSearchScope_intern(model,enclosingNode_,referenceNode,referenceNodeConcept,linkRole,linkTarget,context);
          }
 catch (          Exception t) {
            LOG.error(t,referenceNode != null ? referenceNode : enclosingNode_);
            status[0]=new SearchScopeStatus.ERROR("can't create search scope for role '" + linkRole + "' in '"+ referenceNodeConcept.getName()+ "'");
          }
        }
      }
);
      typeCheckingContext.dispose();
    }
  }
);
  return status[0];
}
