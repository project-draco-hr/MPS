{
  ModelAccess.assertLegalRead();
  final ReferenceScopeProvider scopeProvider=ModelConstraintsManager.getNodeReferentSearchScopeProvider(referenceNodeConcept,linkRole);
  return TypeContextManager.getInstance().runResolveAction(new Computable<SearchScopeStatus>(){
    @Override public SearchScopeStatus compute(){
      try {
        return getSearchScope_intern(scopeProvider,referentConstraintContext,context);
      }
 catch (      Exception t) {
        LOG.error(t,referentConstraintContext.getReferenceNode() != null ? referentConstraintContext.getReferenceNode() : referentConstraintContext.getEnclosingNode());
        return new SearchScopeStatus.ERROR("can't create search scope for role '" + linkRole + "' in '"+ referenceNodeConcept.getName()+ "'");
      }
    }
  }
);
}
