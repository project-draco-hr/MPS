{
  ModelAccess.assertLegalRead();
  SNode smartRef=ReferenceConceptUtil.getCharacteristicReference(smartConcept);
  SNode linkDeclaration=role != null ? enclosingNode.getLinkDeclaration(role) : null;
  SearchScopeStatus status=getSearchScope(enclosingNode,null,smartConcept,SModelUtil.getGenuineLinkRole(smartRef),SModelUtil.getLinkDeclarationTarget(smartRef),linkDeclaration,context);
  if (status.isOk()) {
    if (status.isDefault()) {
      SNode smartTarget=SModelUtil.getLinkDeclarationTarget(smartRef);
      return createDefaultScope(enclosingNode.getModel(),context,NameUtil.nodeFQName(smartTarget));
    }
    return new Adapter(status.getSearchScope());
  }
  return new ErrorScope(status.getMessage());
}
