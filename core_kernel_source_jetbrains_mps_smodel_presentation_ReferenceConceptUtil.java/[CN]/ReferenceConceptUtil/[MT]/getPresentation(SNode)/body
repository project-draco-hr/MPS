{
  SNode nodeConcept=((jetbrains.mps.smodel.SNode)node).getConceptDeclarationNode();
  SNode characteristicReference=getCharacteristicReference(nodeConcept);
  if (characteristicReference == null)   return null;
  String genuineRole=SModelUtil.getGenuineLinkRole(characteristicReference);
  SReference reference=node.getReference(genuineRole);
  if (reference instanceof DynamicReference) {
    return ((DynamicReference)reference).getResolveInfo();
  }
  SNode referentNode=node.getReferenceTarget(genuineRole);
  final String referentPresentation;
  if (referentNode != null) {
    SNode targetConcept=referentNode.getConcept().getDeclarationNode();
    if (targetConcept == null || getCharacteristicReference(targetConcept) != null) {
      referentPresentation=referentNode.getConcept().getName();
    }
 else {
      referentPresentation=referentNode.toString();
    }
  }
 else {
    referentPresentation="<no " + SModelUtil.getLinkDeclarationRole(characteristicReference) + ">";
  }
  if (hasSmartAlias(nodeConcept)) {
    return getPresentationFromSmartAlias(nodeConcept,referentPresentation);
  }
  return referentPresentation;
}
