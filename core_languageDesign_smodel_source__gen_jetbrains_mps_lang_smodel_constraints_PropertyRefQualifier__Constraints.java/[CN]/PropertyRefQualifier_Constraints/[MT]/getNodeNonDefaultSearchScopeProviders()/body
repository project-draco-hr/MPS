{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("property",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      SNode dotOperand=IOperation_Behavior.call_getOperand_1213877410070(SNodeOperations.cast(SNodeOperations.getParent(SNodeOperations.cast(_context.getEnclosingNode(),"jetbrains.mps.lang.smodel.structure.PropertyAttributeAccessQualifier")),"jetbrains.mps.baseLanguage.structure.IOperation"));
      SNode nodeType=TypeChecker.getInstance().getRuntimeSupport().coerce_(TypeChecker.getInstance().getTypeOf(dotOperand),HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.lang.smodel.structure.SNodeType"),true);
      if (nodeType == null) {
        return null;
      }
      SNode dotOperandConcept=SLinkOperations.getTarget(nodeType,"concept",false);
      if (dotOperandConcept == null) {
        dotOperandConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.core.structure.BaseConcept");
      }
      return AbstractConceptDeclaration_Behavior.call_getPropertyDeclarations_1213877394546(dotOperandConcept);
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c895902fb(jetbrains.mps.lang.smodel.constraints)","1213104860532");
    }
  }
);
  return result;
}
