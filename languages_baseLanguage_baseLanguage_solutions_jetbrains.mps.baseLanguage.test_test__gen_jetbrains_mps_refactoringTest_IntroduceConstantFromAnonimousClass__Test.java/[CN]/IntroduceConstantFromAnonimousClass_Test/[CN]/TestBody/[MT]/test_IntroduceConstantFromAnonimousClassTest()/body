{
  this.addNodeById("2163048091639854957");
  this.addNodeById("2163048091639855005");
  IntroduceConstantRefactoring refactoring=new IntroduceConstantRefactoring();
  refactoring.init(SNodeOperations.cast(this.getNodeById("2163048091639854989"),"jetbrains.mps.baseLanguage.structure.StringLiteral"),null);
  refactoring.setName("s");
  refactoring.setReplacingAll(true);
  refactoring.setVisibilityLevel(VisibilityLevel.PUBLIC);
  refactoring.doRefactoring();
  Assert.assertNull("nodes '" + SNodeOperations.cast(this.getNodeById("2163048091639854958"),"jetbrains.mps.baseLanguage.structure.ClassConcept") + "' and '"+ SNodeOperations.cast(this.getNodeById("2163048091639855016"),"jetbrains.mps.baseLanguage.structure.ClassConcept")+ "' do not match!",NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("2163048091639854958"),"jetbrains.mps.baseLanguage.structure.ClassConcept")),ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("2163048091639855016"),"jetbrains.mps.baseLanguage.structure.ClassConcept"))));
}
