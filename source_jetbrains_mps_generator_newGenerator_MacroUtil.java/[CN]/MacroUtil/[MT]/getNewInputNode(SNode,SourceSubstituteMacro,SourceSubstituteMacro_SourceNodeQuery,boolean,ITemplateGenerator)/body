{
  List<SNode> result=new ArrayList<SNode>(1);
  String sourceQueryAspectMethodName=null;
  if (macro instanceof CopySrcNodeMacro) {
    sourceQueryAspectMethodName=((CopySrcNodeMacro)macro).getSourceNodeQueryId();
  }
 else   if (macro instanceof MapSrcNodeMacro) {
    sourceQueryAspectMethodName=((MapSrcNodeMacro)macro).getSourceNodeQueryId();
  }
  if (query == null && sourceQueryAspectMethodName == null && optionalQuery) {
    result.add(currentInputNode);
    return result;
  }
  if (query != null) {
    SNode resultNode=evaluateSourceNodeQuery(currentInputNode,query,generator);
    if (resultNode != null) {
      result.add(resultNode);
    }
    return result;
  }
  if (sourceQueryAspectMethodName != null) {
    String methodName="templateSourceNodeQuery_" + sourceQueryAspectMethodName;
    Object[] args=new Object[]{currentInputNode,generator};
    long startTime=System.currentTimeMillis();
    try {
      SNode outputSourceNode=(SNode)QueryMethod.invoke(methodName,args,macro.getModel());
      if (outputSourceNode != null) {
        result.add(outputSourceNode);
      }
      return result;
    }
 catch (    Exception e) {
      generator.showErrorMessage(currentInputNode,null,BaseAdapter.fromAdapter(macro),"couldn't evaluate macro query: " + NameUtil.shortNameFromLongName(e.getClass().getName()) + " : "+ e.getMessage());
      LOG.error(e);
      return new LinkedList<SNode>();
    }
 finally {
      Statistics.getStatistic(Statistics.TPL).add(macro.getModel(),methodName,startTime);
    }
  }
  throw new GenerationFailedException(new GenerationFailueInfo("couldn't evaluate macro query",currentInputNode,BaseAdapter.fromAdapter(macro),null,generator.getGeneratorSessionContext()));
}
