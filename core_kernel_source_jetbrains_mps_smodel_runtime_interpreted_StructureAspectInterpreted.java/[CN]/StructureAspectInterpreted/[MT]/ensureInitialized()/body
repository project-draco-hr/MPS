{
  if (myDescriptors != null)   return;
synchronized (this) {
    if (myDescriptors != null)     return;
    ConcurrentHashMap<SConceptId,ConceptDescriptor> descriptors=new ConcurrentHashMap<SConceptId,ConceptDescriptor>();
    ConcurrentHashMap<String,ConceptDescriptor> descriptorsByName=new ConcurrentHashMap<String,ConceptDescriptor>();
    final SModel structureModel=LanguageAspect.STRUCTURE.get(myLanguage);
    if (structureModel == null) {
      LOG.warn("Structure aspect is null in the language " + myLanguage);
      myDescriptorByName=descriptorsByName;
      myDescriptors=descriptors;
      return;
    }
    myLanguage.getRepository().getModelAccess().runReadAction(new Runnable(){
      @Override public void run(){
        ConcurrentHashMap<SConceptId,ConceptDescriptor> descriptors=new ConcurrentHashMap<SConceptId,ConceptDescriptor>();
        ConcurrentHashMap<String,ConceptDescriptor> descriptorsByName=new ConcurrentHashMap<String,ConceptDescriptor>();
        for (        SNode root : structureModel.getRootNodes()) {
          SConcept concept=root.getConcept();
          if (!isConceptDeclaration(concept)) {
            continue;
          }
          SConceptId conceptId=MetaIdByDeclaration.getConceptId(root);
          String conceptName=conceptFQName(root);
          ConceptDescriptor cd=new InterpretedConceptDescriptor(root,conceptId,conceptName);
          descriptors.put(conceptId,cd);
          descriptorsByName.put(conceptName,cd);
        }
        myDescriptorByName=descriptorsByName;
        myDescriptors=descriptors;
      }
    }
);
  }
}
