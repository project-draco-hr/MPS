{
  SNode containingRoot=node.getContainingRoot();
  SNode baseNode=getBaseRootNode(node,context);
  MPSNodeVirtualFile file=MPSNodesVirtualFileSystem.getInstance().getFileFor(baseNode);
  FileEditorManager editorManager=FileEditorManager.getInstance(myProject);
  FileEditor[] result=editorManager.openFile(file,false);
  MPSFileNodeEditor fileNodeEditor=(MPSFileNodeEditor)result[0];
  IEditor nodeEditor=fileNodeEditor.getNodeEditor();
  if (focus)   nodeEditor.requestFocus();
  if (nodeEditor instanceof TabbedEditor) {
    ((TabbedEditor)nodeEditor).selectLinkedEditor(containingRoot);
    if (focus)     nodeEditor.getCurrentEditorComponent().requestFocus();
  }
  if (!node.isRoot()) {
    SNode currentSelectionTarget=node;
    EditorComponent component=nodeEditor.getCurrentEditorComponent();
    while (currentSelectionTarget != null) {
      EditorCell cell=component.findNodeCell(currentSelectionTarget);
      if (cell != null) {
        component.changeSelection(cell);
        break;
      }
      currentSelectionTarget=currentSelectionTarget.getParent();
    }
    if (currentSelectionTarget == null) {
      component.changeSelection(component.getRootCell());
    }
    if (nodeEditor.getCurrentEditorComponent() instanceof NodeEditorComponent) {
      final NodeEditorComponent nec=(NodeEditorComponent)nodeEditor.getCurrentEditorComponent();
      final InspectorEditorComponent inspector=nec.getInspector();
      EditorCell cellInInspector=null;
      SNode currentTargetNode=node;
      while (cellInInspector == null && currentTargetNode != null) {
        cellInInspector=inspector.findNodeCell(currentTargetNode);
        currentTargetNode=currentTargetNode.getParent();
      }
      if (cellInInspector != null) {
        final EditorCell cellToSelect=cellInInspector;
        SwingUtilities.invokeLater(new Runnable(){
          public void run(){
            nec.showInspector();
            inspector.changeSelection(cellToSelect);
            if (focus)             inspector.requestFocus();
          }
        }
);
      }
 else {
        if (focus) {
          SwingUtilities.invokeLater(new Runnable(){
            public void run(){
              nec.requestFocus();
            }
          }
);
        }
      }
    }
  }
  return nodeEditor;
}
