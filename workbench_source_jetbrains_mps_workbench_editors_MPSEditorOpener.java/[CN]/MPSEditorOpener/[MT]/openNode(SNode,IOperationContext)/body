{
  return CommandProcessor.instance().executeLightweightCommand(new Calculable<IEditor>(){
    public IEditor calculate(){
      SNode containingRoot=node.getContainingRoot();
      SNode baseNode=getBaseNode(context,containingRoot);
      if (baseNode == null) {
        baseNode=containingRoot;
      }
      MPSNodeVirtualFile file=MPSNodesVirtualFileSystem.getInstance().getFileFor(baseNode);
      FileEditorManager editorManager=FileEditorManager.getInstance(myProject);
      FileEditor[] result=editorManager.openFile(file,true);
      MPSFileNodeEditor fileNodeEditor=(MPSFileNodeEditor)result[0];
      IEditor nodeEditor=fileNodeEditor.getNodeEditor();
      if (nodeEditor instanceof TabbedEditor) {
        ((TabbedEditor)nodeEditor).selectLinkedEditor(containingRoot);
      }
      if (!node.isRoot()) {
        nodeEditor.selectNode(node);
      }
      return nodeEditor;
    }
  }
);
}
