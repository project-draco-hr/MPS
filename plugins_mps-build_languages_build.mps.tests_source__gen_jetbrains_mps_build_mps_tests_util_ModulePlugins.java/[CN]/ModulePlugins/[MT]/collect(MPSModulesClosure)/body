{
  List<SNode> initialPlugins=ListSequence.fromList(new ArrayList<SNode>());
  for (  final SNode module : Sequence.fromIterable(closure.getAllModules())) {
    List<SNode> projectPlugins=SNodeOperations.getDescendants(SNodeOperations.cast(SNodeOperations.getContainingRoot(module),"jetbrains.mps.build.structure.BuildProject"),"jetbrains.mps.build.mps.structure.BuildMps_IdeaPlugin",false,new String[]{});
    for (    SNode plugin : ListSequence.fromList(projectPlugins)) {
      if (ListSequence.fromList(SLinkOperations.getTargets(plugin,"content",true)).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return BehaviorReflection.invokeVirtual(Boolean.TYPE,it,"virtual_exports_6547494638219603457",new Object[]{module});
        }
      }
) != null) {
        ListSequence.fromList(initialPlugins).addElement(plugin);
        break;
      }
    }
  }
  myDependency.addAll(initialPlugins);
  RequiredPlugins requiredPlugins=new RequiredPlugins(myContext,myInitialProject,initialPlugins);
  for (  SNode plugin : Sequence.fromIterable(requiredPlugins.returnDependencies())) {
    myDependency.add(plugin);
  }
}
