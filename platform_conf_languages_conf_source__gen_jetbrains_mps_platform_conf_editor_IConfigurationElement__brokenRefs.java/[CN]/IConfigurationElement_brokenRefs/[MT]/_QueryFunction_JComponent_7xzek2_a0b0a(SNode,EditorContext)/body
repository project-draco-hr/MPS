{
  String txt=Sequence.fromIterable(((Iterable<SReference>)node.getReferencesIterable())).where(new IWhereFilter<SReference>(){
    public boolean accept(    SReference ref){
      return ref.getTargetNode() == null;
    }
  }
).foldLeft(new StringBuffer(),new ILeftCombinator<SReference,StringBuffer>(){
    public StringBuffer combine(    StringBuffer sb,    SReference ref){
      sb=sb.append(ref.getRole()).append("\n      model ref: ").append(ref.getTargetSModelReference().toString());
      sb=sb.append("\n         nodeId: ").append(ref.getTargetNodeId());
      sb=(ref.getResolveInfo() != null ? sb.append("\n    resolveInfo: \"").append(ref.getResolveInfo()).append("\"\n") : sb.append("\n no resolveInfo"));
      return sb;
    }
  }
).toString();
  JTextArea ta=new JTextArea(txt);
  Font font=EditorSettings.getInstance().getDefaultEditorFont();
  if (font != null) {
    ta.setFont(font);
  }
  ta.setBackground(Color.PINK);
  return ta;
}
