{
{
    SAbstractConcept cncpt=((SAbstractConcept)concept);
    Integer preIndex=indices_xbvbvu_a0a.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return Collections.<ConceptEditor>singletonList(new ActionAsPattern_Editor());
      }
    break;
case 1:
  if (true) {
    return Collections.<ConceptEditor>singletonList(new AsPattern_Editor());
  }
break;
case 2:
if (true) {
return Collections.<ConceptEditor>singletonList(new GeneratorInternal_ChildDescriptor_Editor());
}
break;
case 3:
if (true) {
return Collections.<ConceptEditor>singletonList(new GeneratorInternal_PropertyDescriptor_Editor());
}
break;
case 4:
if (true) {
return Collections.<ConceptEditor>singletonList(new GeneratorInternal_ReferenceDescriptor_Editor());
}
break;
case 5:
if (true) {
return Collections.<ConceptEditor>singletonList(new InsertAfterPosition_Editor());
}
break;
case 6:
if (true) {
return Collections.<ConceptEditor>singletonList(new InsertBeforePosition_Editor());
}
break;
case 7:
if (true) {
return Collections.<ConceptEditor>singletonList(new LinkPatternVariableDeclaration_Editor());
}
break;
case 8:
if (true) {
return Collections.<ConceptEditor>singletonList(new ListPattern_Editor());
}
break;
case 9:
if (true) {
return Collections.<ConceptEditor>singletonList(new OrPattern_Editor());
}
break;
case 10:
if (true) {
return Collections.<ConceptEditor>singletonList(new OrPatternClause_Editor());
}
break;
case 11:
if (true) {
return Collections.<ConceptEditor>singletonList(new OrPatternVariableReference_Editor());
}
break;
case 12:
if (true) {
return Collections.<ConceptEditor>singletonList(new Pattern_Editor());
}
break;
case 13:
if (true) {
return Collections.<ConceptEditor>singletonList(new PatternExpression_Editor());
}
break;
case 14:
if (true) {
return Collections.<ConceptEditor>singletonList(new PatternVariableDeclaration_Editor());
}
break;
case 15:
if (true) {
return Collections.<ConceptEditor>singletonList(new PatternVariableReference_Editor());
}
break;
case 16:
if (true) {
return Collections.<ConceptEditor>singletonList(new PropertyPatternVariableDeclaration_Editor());
}
break;
case 17:
if (true) {
return Collections.<ConceptEditor>singletonList(new WildcardPattern_Editor());
}
break;
default :
}
}
return Collections.<ConceptEditor>emptyList();
}
