{
  if (ListSequence.fromList(segments).isEmpty()) {
    return null;
  }
  double sumLength=0;
  for (  Segment segment : ListSequence.fromList(segments)) {
    sumLength+=segment.length();
  }
  if (sumLength == 0) {
    return ListSequence.fromList(segments).first().start;
  }
  double halfLength=sumLength / 2.0;
  sumLength=0;
  for (  Segment segment : ListSequence.fromList(segments)) {
    double currentLength=segment.length();
    if (sumLength + currentLength >= halfLength) {
      Vector se=segment.end.sub(segment.start);
      double d=(halfLength - sumLength) / se.length();
      double xToAdd=se.x * d;
      double yToAdd=se.y * d;
      Vector result=segment.start.add(new Vector(((int)xToAdd),((int)yToAdd)));
      return result;
    }
    sumLength+=currentLength;
  }
  return null;
}
