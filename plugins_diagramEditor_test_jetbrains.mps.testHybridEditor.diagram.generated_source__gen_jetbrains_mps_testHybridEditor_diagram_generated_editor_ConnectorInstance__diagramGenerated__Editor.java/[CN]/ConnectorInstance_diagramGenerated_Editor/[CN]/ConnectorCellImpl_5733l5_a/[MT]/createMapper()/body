{
  return new Mapper<SNode,PolyLineConnection>(getSNode(),createConnection()){
    @Override protected void registerSynchronizers(    Mapper.SynchronizersConfiguration configuration){
      super.registerSynchronizers(configuration);
      configuration.add(Synchronizers.forProperty(getTarget().view().focused(),new Runnable(){
        public void run(){
          SelectionUtil.selectCell(getContext(),getSNode(),getCellId());
        }
      }
));
      configuration.add(Synchronizers.forProperty(myInputPort,new WritableProperty<Tuples._2<SNode,SNode>>(){
        public void set(        Tuples._2<SNode,SNode> port){
          getTarget().toView().set(getTargetView(port));
        }
        private View getTargetView(        Tuples._2<SNode,SNode> port){
          Mapper<? super SNode,?> descendantMapper=getParent().getDescendantMapper(port._0());
          if (descendantMapper == null) {
            return null;
          }
          Set<Mapper<? super SNode,?>> mappers=descendantMapper.getMappingContext().getMappers(descendantMapper,SLinkOperations.getTarget(SLinkOperations.getTarget(getSNode(),"source",true),"metaPort",false));
          if (mappers.size() > 0) {
            return (View)mappers.iterator().next().getTarget();
          }
          return (View)descendantMapper.getTarget();
        }
      }
));
      configuration.add(Synchronizers.forProperty(myOutputPort,new WritableProperty<Tuples._2<SNode,SNode>>(){
        public void set(        Tuples._2<SNode,SNode> port){
          getTarget().fromView().set(getTargetView(port));
          if (getTarget().fromView().get() == null || getTarget().toView().get() == null) {
            getTarget().fromView().set(null);
            getTarget().toView().set(null);
          }
        }
        private View getTargetView(        Tuples._2<SNode,SNode> port){
          Mapper<? super SNode,?> descendantMapper=getParent().getDescendantMapper(port._0());
          if (descendantMapper == null) {
            return null;
          }
          Set<Mapper<? super SNode,?>> mappers=descendantMapper.getMappingContext().getMappers(descendantMapper,SLinkOperations.getTarget(SLinkOperations.getTarget(getSNode(),"target",true),"metaPort",false));
          if (mappers.size() > 0) {
            return (View)mappers.iterator().next().getTarget();
          }
          return (View)descendantMapper.getTarget();
        }
      }
));
      configuration.add(Synchronizers.forProperty(getTarget().view().bounds(),new WritableProperty<Rectangle>(){
        public void set(        Rectangle rect){
          myXValueProperty=rect.origin.x;
          myYValueProperty=rect.origin.y;
          myWidthValueProperty=rect.dimension.x;
          myHeightValueProperty=rect.dimension.y;
        }
      }
));
    }
  }
;
}
