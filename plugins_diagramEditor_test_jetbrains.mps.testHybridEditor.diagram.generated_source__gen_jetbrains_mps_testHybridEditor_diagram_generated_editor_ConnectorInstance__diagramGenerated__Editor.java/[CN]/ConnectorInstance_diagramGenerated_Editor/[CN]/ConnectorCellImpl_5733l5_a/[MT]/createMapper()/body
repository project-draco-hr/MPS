{
  return new Mapper<SNode,PolyLineConnection>(getSNode(),createConnection()){
    @Override protected void registerSynchronizers(    Mapper.SynchronizersConfiguration configuration){
      super.registerSynchronizers(configuration);
      configuration.add(Synchronizers.forProperty(getTarget().view().focused(),new Runnable(){
        public void run(){
          SelectionUtil.selectCell(getContext(),getSNode(),getCellId());
        }
      }
));
      ReadableProperty<SNode> port_5733l5_a0=JetpadUtils.modelProperty(new Computable<SNode>(){
        public SNode compute(){
          return SLinkOperations.getTarget(SLinkOperations.getTarget(getSNode(),"source",true),"block",false);
        }
      }
);
      configuration.add(Synchronizers.forProperty(port_5733l5_a0,new WritableProperty<SNode>(){
        public void set(        SNode port){
          getTarget().toView().set(getTargetView(port));
        }
        private View getTargetView(        SNode port){
          Mapper<? super SNode,?> descendantMapper=getParent().getDescendantMapper(port);
          if (descendantMapper == null) {
            return null;
          }
          Set<Mapper<? super SNode,?>> mappers=descendantMapper.getMappingContext().getMappers(descendantMapper,SLinkOperations.getTarget(SLinkOperations.getTarget(getSNode(),"source",true),"metaPort",false));
          if (mappers.size() > 0) {
            return (View)mappers.iterator().next().getTarget();
          }
          return (View)descendantMapper.getTarget();
        }
      }
));
      ReadableProperty<SNode> port_5733l5_a0_0=JetpadUtils.modelProperty(new Computable<SNode>(){
        public SNode compute(){
          return SLinkOperations.getTarget(SLinkOperations.getTarget(getSNode(),"target",true),"block",false);
        }
      }
);
      configuration.add(Synchronizers.forProperty(port_5733l5_a0_0,new WritableProperty<SNode>(){
        public void set(        SNode port){
          getTarget().fromView().set(getTargetView(port));
          if (getTarget().fromView().get() == null || getTarget().toView().get() == null) {
            getTarget().fromView().set(null);
            getTarget().toView().set(null);
          }
        }
        private View getTargetView(        SNode port){
          Mapper<? super SNode,?> descendantMapper=getParent().getDescendantMapper(port);
          if (descendantMapper == null) {
            return null;
          }
          Set<Mapper<? super SNode,?>> mappers=descendantMapper.getMappingContext().getMappers(descendantMapper,SLinkOperations.getTarget(SLinkOperations.getTarget(getSNode(),"target",true),"metaPort",false));
          if (mappers.size() > 0) {
            return (View)mappers.iterator().next().getTarget();
          }
          return (View)descendantMapper.getTarget();
        }
      }
));
    }
  }
;
}
