{
  return new Mapper<SNode,ConnectorDecoratorView>(getSNode(),new ConnectorDecoratorView()){
    @Override protected void registerSynchronizers(    Mapper.SynchronizersConfiguration configuration){
      super.registerSynchronizers(configuration);
      DiagramCell diagramCell=getDiagramCell();
      if (diagramCell == null) {
        return;
      }
      final Mapper<? super SNode,?> descendantMapper=getDiagramCell().getRootMapper().getDescendantMapper(getSNode());
      if (descendantMapper == null) {
        return;
      }
      configuration.add(Synchronizers.forProperty(myErrorItem,new WritableProperty<Boolean>(){
        public void set(        Boolean isError){
          getTarget().setError(isError);
        }
      }
));
      configuration.add(Synchronizers.forProperty(((PolyLineConnection)descendantMapper.getTarget()).view().focused(),new WritableProperty<Boolean>(){
        public void set(        Boolean isSelected){
          getTarget().setSelected(isSelected);
        }
      }
));
      ReadableProperty<Boolean> isValid=((PolyLineConnection)descendantMapper.getTarget()).view().valid();
      configuration.add(Synchronizers.forProperty(isValid,new WritableProperty<Boolean>(){
        public void set(        Boolean isValid){
          if (isValid) {
            List<Segment> segmentList=((PolyLineConnection)descendantMapper.getTarget()).getSegments();
            if (segmentList.isEmpty()) {
              return;
            }
            getTarget().updateErrorView(segmentList);
            getTarget().updateSelectionView(segmentList);
          }
        }
      }
));
    }
  }
;
}
