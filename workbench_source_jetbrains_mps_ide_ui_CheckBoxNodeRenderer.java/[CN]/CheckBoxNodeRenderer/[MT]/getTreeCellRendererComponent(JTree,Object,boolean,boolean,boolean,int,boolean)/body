{
  Color selectionForeground=UIManager.getColor("Tree.selectionForeground");
  Color selectionBackground=UIManager.getColor("Tree.selectionBackground");
  Color textForeground=UIManager.getColor("Tree.textForeground");
  Color textBackground=UIManager.getColor("Tree.textBackground");
  final JCheckBox checkBox=myPanel.getCheckBox();
  checkBox.setEnabled(tree.isEnabled());
  if (selected) {
    checkBox.setForeground(selectionForeground);
    checkBox.setBackground(selectionBackground);
  }
 else {
    checkBox.setForeground(textForeground);
    checkBox.setBackground(textBackground);
  }
  final DefaultMutableTreeNode node=(DefaultMutableTreeNode)value;
  final String text=tree.convertValueToText(value,selected,expanded,leaf,row,hasFocus);
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      if (node.getUserObject() instanceof NodeData) {
        NodeData data=(NodeData)node.getUserObject();
        myIconLabel.setIcon(data.getIcon(expanded));
        Color color=data.getColor();
        if (color != null) {
          checkBox.setForeground(color);
        }
        checkBox.setText(data.getText());
        checkBox.setSelected(data.isSelected());
      }
 else {
        myIconLabel.setIcon(null);
        checkBox.setText(text);
        checkBox.setSelected(false);
      }
    }
  }
);
  return myPanel;
}
