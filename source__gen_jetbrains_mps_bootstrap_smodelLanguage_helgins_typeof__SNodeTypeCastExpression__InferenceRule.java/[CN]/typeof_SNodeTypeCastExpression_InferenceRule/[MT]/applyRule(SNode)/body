{
  SNode leftType=TypeChecker.getInstance().getRuntimeSupport().checkedTypeOf(SLinkOperations.getTarget(argument,"leftExpression",true));
  if (TypeChecker.getInstance().getSubtypingManager().isSubtype(leftType,new QuotationClass_1().createNode(),false,false)) {
    TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_().createNode(SLinkOperations.getTarget(argument,"concept",false)),argument);
  }
 else {
    TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_2().createNode(SLinkOperations.getTarget(argument,"concept",false)),argument);
  }
}
