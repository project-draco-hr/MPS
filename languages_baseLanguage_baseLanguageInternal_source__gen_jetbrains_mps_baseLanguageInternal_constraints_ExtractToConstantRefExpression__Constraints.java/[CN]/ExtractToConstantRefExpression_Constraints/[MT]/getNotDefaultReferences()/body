{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("original",new BaseReferenceConstraintsDescriptor("original",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public boolean hasPresentation(){
          return true;
        }
        @Override public String getPresentation(        final IOperationContext operationContext,        final ReferencePresentationContext _context){
          return SPropertyOperations.getString(_context.getParameterNode(),"fieldName");
        }
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return SNodeOperations.getDescendants(SNodeOperations.getContainingRoot(_context.getEnclosingNode()),"jetbrains.mps.baseLanguageInternal.structure.ExtractToConstantExpression",false,new String[]{});
        }
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_o7daap_a0a3a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
