{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(0xdf345b11b8c74213L,0xac6648d2a9b75d88L,0x162724dabcdc671L,0x162724dabcdc672L),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xdf345b11b8c74213L,0xac6648d2a9b75d88L,0x162724dabcdc671L,0x162724dabcdc672L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public boolean hasPresentation(){
          return true;
        }
        @Override public String getPresentation(        final IOperationContext operationContext,        final ReferencePresentationContext _context){
          return SPropertyOperations.getString(_context.getParameterNode(),MetaAdapterFactory.getProperty(0xdf345b11b8c74213L,0xac6648d2a9b75d88L,0x1204d897032L,0x1204d89aadaL,"fieldName"));
        }
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return SNodeOperations.getNodeDescendants(SNodeOperations.getContainingRoot(_context.getEnclosingNode()),MetaAdapterFactory.getConcept(0xdf345b11b8c74213L,0xac6648d2a9b75d88L,0x1204d897032L,"jetbrains.mps.baseLanguageInternal.structure.ExtractToConstantExpression"),false,new SAbstractConcept[]{});
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_o7daap_a0a3a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
