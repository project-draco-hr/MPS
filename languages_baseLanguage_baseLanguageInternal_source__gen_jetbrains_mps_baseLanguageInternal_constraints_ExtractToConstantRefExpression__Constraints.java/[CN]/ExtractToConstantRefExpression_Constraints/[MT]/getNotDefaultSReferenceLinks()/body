{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(-2363163772790029805l,-6024047381933761144l),99767819676010097l,99767819676010098l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(-2363163772790029805l,-6024047381933761144l),99767819676010097l,99767819676010098l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public boolean hasPresentation(){
          return true;
        }
        @Override public String getPresentation(        final IOperationContext operationContext,        final ReferencePresentationContext _context){
          return SPropertyOperations.getString(_context.getParameterNode(),MetaAdapterFactory.getProperty(new UUID(-2363163772790029805l,-6024047381933761144l),1238251434034l,1238251449050l,"fieldName"));
        }
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return SNodeOperations.getNodeDescendants(SNodeOperations.getContainingRoot(_context.getEnclosingNode()),MetaAdapterFactory.getConcept(new UUID(-2363163772790029805l,-6024047381933761144l),1238251434034l,"jetbrains.mps.baseLanguageInternal.structure.ExtractToConstantExpression"),false,new SAbstractConcept[]{});
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_o7daap_a0a3a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
