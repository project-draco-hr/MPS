{
switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0a,fqName)) {
case 217:
    return new SingletabbedEditorTab_BehaviorDescriptor();
case 226:
  return new ToolDeclaration_BehaviorDescriptor();
case 88:
return new DoUpdateBlock_BehaviorDescriptor();
case 46:
return new ConceptFunctionParameter_AnActionEvent_BehaviorDescriptor();
case 96:
return new ExecuteBlock_BehaviorDescriptor();
case 9:
return new ActionGroupDeclaration_BehaviorDescriptor();
case 11:
return new ActionInstance_BehaviorDescriptor();
case 153:
return new ModificationStatement_BehaviorDescriptor();
case 129:
return new GroupAnchor_BehaviorDescriptor();
case 155:
return new MultitabbedEditorTab_BehaviorDescriptor();
case 1:
return null;
case 74:
return new CreateBlock_BehaviorDescriptor();
case 120:
return new GetNodeBlock_BehaviorDescriptor();
case 121:
return new GetNodesBlock_BehaviorDescriptor();
case 119:
return new GetInnerTabCaptionBlock_BehaviorDescriptor();
case 65:
return new ConceptFunctionParameter_node_BehaviorDescriptor();
case 220:
return new TabbedEditorDeclaration_BehaviorDescriptor();
case 114:
return new GetBaseNodeBlock_BehaviorDescriptor();
case 56:
return new ConceptFunctionParameter_OperationContext_BehaviorDescriptor();
case 143:
return new InterfaceGroup_BehaviorDescriptor();
case 10:
return null;
case 142:
return new InterfaceExtentionPoint_BehaviorDescriptor();
case 227:
return new ToolInstanceExpression_BehaviorDescriptor();
case 52:
return new ConceptFunctionParameter_IModule_BehaviorDescriptor();
case 54:
return new ConceptFunctionParameter_MPSProject_BehaviorDescriptor();
case 213:
return new Separator_BehaviorDescriptor();
case 14:
return new ActionParameterDeclaration_BehaviorDescriptor();
case 232:
return null;
case 144:
return new IsApplicableBlock_BehaviorDescriptor();
case 18:
return new ActionType_BehaviorDescriptor();
case 16:
return new ActionParameterReferenceOperation_BehaviorDescriptor();
case 190:
return new ProjectPluginDeclaration_BehaviorDescriptor();
case 192:
return new ProjectPluginInitBlock_BehaviorDescriptor();
case 191:
return new ProjectPluginDisposeBlock_BehaviorDescriptor();
case 193:
return new ProjectPluginType_BehaviorDescriptor();
case 130:
return null;
case 41:
return new BuildGroupBlock_BehaviorDescriptor();
case 21:
return new AddElementStatement_BehaviorDescriptor();
case 92:
return new ElementListContents_BehaviorDescriptor();
case 147:
return new KeyMapKeystroke_BehaviorDescriptor();
case 89:
return new DoUpdateGroupBlock_BehaviorDescriptor();
case 131:
return new GroupType_BehaviorDescriptor();
case 229:
return new ToolType_BehaviorDescriptor();
case 189:
return new ProjectOperation_BehaviorDescriptor();
case 126:
return new GetToolOperation_BehaviorDescriptor();
case 118:
return new GetGroupOperation_BehaviorDescriptor();
case 111:
return new GenerationListenerDeclaration_BehaviorDescriptor();
case 163:
return new OnModelsGeneratedBlock_BehaviorDescriptor();
case 164:
return new OnModelsGeneratedBlock_success_BehaviorDescriptor();
case 40:
return new BeforeGenerationBlock_BehaviorDescriptor();
case 112:
return new GenerationListener_models_BehaviorDescriptor();
case 181:
return new PreferencesComponentDeclaration_BehaviorDescriptor();
case 175:
return new PersistentPropertyDeclaration_BehaviorDescriptor();
case 176:
return new PersistentPropertyReference_BehaviorDescriptor();
case 182:
return new PreferencesComponentType_BehaviorDescriptor();
case 123:
return new GetPreferencesComponentOperation_BehaviorDescriptor();
case 162:
return new OnBeforeWriteBlock_BehaviorDescriptor();
case 161:
return new OnAfterReadBlock_BehaviorDescriptor();
case 177:
return new PreferencePage_BehaviorDescriptor();
case 180:
return new PreferencePageResetBlock_BehaviorDescriptor();
case 178:
return new PreferencePageCommitBlock_BehaviorDescriptor();
case 60:
return new ConceptFunctionParameter_PreferencePage_component_BehaviorDescriptor();
case 179:
return new PreferencePageIsModifiedBlock_BehaviorDescriptor();
case 25:
return new AfterGenerationBlock_BehaviorDescriptor();
case 140:
return new InitBlock_BehaviorDescriptor();
case 85:
return new DisposeBlock_BehaviorDescriptor();
case 61:
return new ConceptFunctionParameter_Project_BehaviorDescriptor();
case 115:
return new GetComponentBlock_BehaviorDescriptor();
case 28:
return new ApplicationPluginInitBlock_BehaviorDescriptor();
case 27:
return new ApplicationPluginDisposeBlock_BehaviorDescriptor();
case 29:
return new ApplicationPluginType_BehaviorDescriptor();
case 26:
return new ApplicationPluginDeclaration_BehaviorDescriptor();
case 110:
return null;
case 6:
return new ActionDataParameterDeclaration_BehaviorDescriptor();
case 7:
return new ActionDataParameterReferenceOperation_BehaviorDescriptor();
case 13:
return null;
case 107:
return new FileGeneratorDeclaration_BehaviorDescriptor();
case 109:
return new GenerateFileBlock_BehaviorDescriptor();
case 108:
return new FileGeneratorType_BehaviorDescriptor();
case 168:
return new OverridesDefaultBlock_BehaviorDescriptor();
case 146:
return new IsDefaultBlock_BehaviorDescriptor();
case 59:
return new ConceptFunctionParameter_OutputRootNode_BehaviorDescriptor();
case 57:
return new ConceptFunctionParameter_OriginalInputNode_BehaviorDescriptor();
case 53:
return new ConceptFunctionParameter_InputModel_BehaviorDescriptor();
case 48:
return new ConceptFunctionParameter_Contents_BehaviorDescriptor();
case 58:
return new ConceptFunctionParameter_OutputRootDir_BehaviorDescriptor();
case 64:
return new ConceptFunctionParameter_ask_BehaviorDescriptor();
case 35:
return new BaseExecuteCommandStatement_BehaviorDescriptor();
case 44:
return new CommandClosureLiteral_BehaviorDescriptor();
case 97:
return new ExecuteCommandInEDTStatement_BehaviorDescriptor();
case 98:
return new ExecuteCommandStatement_BehaviorDescriptor();
case 100:
return new ExecuteEDTCommandStatement_BehaviorDescriptor();
case 101:
return new ExecuteLightweightCommandStatement_BehaviorDescriptor();
case 104:
return new ExecuteWriteActionStatement_BehaviorDescriptor();
case 4:
return new ActionConstructionParameterDeclaration_BehaviorDescriptor();
case 5:
return new ActionConstructorParameterReferenceOperation_BehaviorDescriptor();
case 23:
return new AddStatement_BehaviorDescriptor();
case 223:
return new ToStringConceptFunction_BehaviorDescriptor();
case 224:
return new ToStringParameter_BehaviorDescriptor();
case 134:
return null;
case 36:
return new BaseExecuteCommandStatementSync_BehaviorDescriptor();
case 233:
return new UpdateGroupBlock_BehaviorDescriptor();
case 234:
return new UpdateGroupFunction_BehaviorDescriptor();
case 93:
return new EnumerateChildrenFunction_BehaviorDescriptor();
case 149:
return new KeymapChangesDeclaration_BehaviorDescriptor();
case 216:
return new SimpleShortcutChange_BehaviorDescriptor();
case 214:
return null;
case 170:
return new ParameterizedShortcutChange_BehaviorDescriptor();
case 208:
return new RunConfigurationTypeDeclaration_BehaviorDescriptor();
case 206:
return new RunConfigurationDeclaration_BehaviorDescriptor();
case 117:
return new GetConfigurationIconBlock_BehaviorDescriptor();
case 42:
return new CheckConfigurationBlock_BehaviorDescriptor();
case 99:
return new ExecuteConfigBlock_BehaviorDescriptor();
case 20:
return new ActionsStatement_BehaviorDescriptor();
case 185:
return new ProcessHandlerStatement_BehaviorDescriptor();
case 105:
return new ExecutionConsoleStatement_BehaviorDescriptor();
case 86:
return new DisposeConsoleBlock_BehaviorDescriptor();
case 103:
return null;
case 106:
return new Executor_FunctionParameter_BehaviorDescriptor();
case 94:
return new Environment_FunctionParameter_BehaviorDescriptor();
case 197:
return new ReportErrorStatement_BehaviorDescriptor();
case 70:
return new ConfigurationEditorDeclaration_BehaviorDescriptor();
case 30:
return new ApplyEditorBlock_BehaviorDescriptor();
case 198:
return new ResetEditorBlock_BehaviorDescriptor();
case 87:
return new DisposeEditorBlock_BehaviorDescriptor();
case 45:
return new ComponentReference_BehaviorDescriptor();
case 132:
return null;
case 195:
return new PropertyRefExpression_BehaviorDescriptor();
case 196:
return new PropertyRefType_BehaviorDescriptor();
case 215:
return new SimpleActionPlace_BehaviorDescriptor();
case 17:
return null;
case 225:
return new ToolActionPlace_BehaviorDescriptor();
case 95:
return new EverywhereActionPlace_BehaviorDescriptor();
case 141:
return new InitTabBlock_BehaviorDescriptor();
case 218:
return new SingletabbedEditorTabType_BehaviorDescriptor();
case 156:
return new MultitabbedEditorTabType_BehaviorDescriptor();
case 205:
return new RunConfigType_BehaviorDescriptor();
case 12:
return new ActionListStatement_BehaviorDescriptor();
case 81:
return new CreateRunConfigStatement_BehaviorDescriptor();
case 204:
return new RunConfigPropertyInstance_BehaviorDescriptor();
case 200:
return null;
case 78:
return new CreateNodeRunConfigBlock_BehaviorDescriptor();
case 202:
return new RunConfigMainNodeStatement_BehaviorDescriptor();
case 55:
return new ConceptFunctionParameter_Model_BehaviorDescriptor();
case 49:
return null;
case 76:
return new CreateModuleRunConfigBlock_BehaviorDescriptor();
case 75:
return new CreateModelRunConfigBlock_BehaviorDescriptor();
case 33:
return null;
case 211:
return new RunNodeConfigCreator_BehaviorDescriptor();
case 210:
return new RunModuleConfigCreator_BehaviorDescriptor();
case 209:
return new RunModelConfigCreator_BehaviorDescriptor();
case 186:
return new ProcessStatement_BehaviorDescriptor();
case 71:
return new ConsoleExpression_BehaviorDescriptor();
case 72:
return new ConsoleType_BehaviorDescriptor();
case 231:
return new UniversalRunConfigCreator_BehaviorDescriptor();
case 158:
return new NodeCreatorTarget_BehaviorDescriptor();
case 34:
return null;
case 152:
return new ModelCreatorTarget_BehaviorDescriptor();
case 154:
return new ModuleCreatorTarget_BehaviorDescriptor();
case 79:
return new CreateRunConfigBlock_BehaviorDescriptor();
case 80:
return new CreateRunConfigBlockParameter_BehaviorDescriptor();
case 187:
return new ProjectCreatorTarget_BehaviorDescriptor();
case 39:
return null;
case 221:
return new TabbedToolDeclaration_BehaviorDescriptor();
case 24:
return new AddTabOperation_BehaviorDescriptor();
case 43:
return new CloseTabOperation_BehaviorDescriptor();
case 124:
return new GetSelectedTabOperation_BehaviorDescriptor();
case 222:
return null;
case 84:
return new DebuggableNodeItem_BehaviorDescriptor();
case 82:
return new DebugInfoInitializer_BehaviorDescriptor();
case 219:
return new SmartDisposeClosureParameterDeclaration_BehaviorDescriptor();
case 160:
return new NodesCreatorTarget_BehaviorDescriptor();
case 228:
return new ToolTab_BehaviorDescriptor();
case 31:
return new AskBlock_BehaviorDescriptor();
case 32:
return new AskStatement_BehaviorDescriptor();
case 116:
return new GetConceptsBlock_BehaviorDescriptor();
case 157:
return new NewCreateBlock_BehaviorDescriptor();
case 47:
return new ConceptFunctionParameter_Concept_BehaviorDescriptor();
case 236:
return new VariableNodeItem_BehaviorDescriptor();
case 235:
return new VariableNodeExpression_BehaviorDescriptor();
case 127:
return new GetUserDataExpression_BehaviorDescriptor();
case 212:
return new ScopeNodeItem_BehaviorDescriptor();
case 68:
return new ConceptFunction_GetVariables_BehaviorDescriptor();
case 62:
return new ConceptFunctionParameter_ScopeNode_BehaviorDescriptor();
case 201:
return new RunConfigExecutionParameterDeclaration_BehaviorDescriptor();
case 203:
return new RunConfigParameterReferenceOperation_BehaviorDescriptor();
case 0:
return null;
case 135:
return null;
case 172:
return new ParametrizedExecuteBlock_BehaviorDescriptor();
case 171:
return new ParametrizedExecuteActions_BehaviorDescriptor();
case 173:
return new ParametrizedExecuteConsole_BehaviorDescriptor();
case 174:
return new ParametrizedExecuteProcess_BehaviorDescriptor();
case 73:
return new Console_FunctionParameter_BehaviorDescriptor();
case 102:
return new ExecuteParameterQuery_BehaviorDescriptor();
case 169:
return new Parameter_FunctionParameter_BehaviorDescriptor();
case 2:
return null;
case 133:
return null;
case 207:
return new RunConfigurationMethodDeclaration_BehaviorDescriptor();
case 122:
return new GetPreferencesComponentInProjectOperation_BehaviorDescriptor();
case 38:
return new BaseProjectOperation_BehaviorDescriptor();
case 125:
return new GetToolInProjectOperation_BehaviorDescriptor();
case 19:
return new ActionsList_FunctionParameter_BehaviorDescriptor();
case 136:
return null;
case 66:
return new ConceptFunction_CreateBreakpoint_BehaviorDescriptor();
case 51:
return new ConceptFunctionParameter_DebuggableNode_BehaviorDescriptor();
case 50:
return new ConceptFunctionParameter_Debug_Project_BehaviorDescriptor();
case 3:
return new ActionAccessOperation_BehaviorDescriptor();
case 128:
return new GroupAccessOperation_BehaviorDescriptor();
case 83:
return new DebugSessionCreator_BehaviorDescriptor();
case 194:
return new Project_ConceptFunctionParameter_BehaviorDescriptor();
case 230:
return new UnitNodeItem_BehaviorDescriptor();
case 67:
return new ConceptFunction_GetUnitName_BehaviorDescriptor();
case 63:
return new ConceptFunctionParameter_UnitNode_BehaviorDescriptor();
case 183:
return new PrepareConceptFunction_BehaviorDescriptor();
case 184:
return new PrepareReturnType_FunctionParameter_BehaviorDescriptor();
case 188:
return new ProjectExpression_BehaviorDescriptor();
case 113:
return new GenerationListener_options_BehaviorDescriptor();
case 69:
return new ConceptFunction_PropertyStringGetter_BehaviorDescriptor();
case 139:
return new IdeaInitializerDescriptor_BehaviorDescriptor();
case 148:
return new KeyStrokeType_BehaviorDescriptor();
case 15:
return new ActionParameterReference_BehaviorDescriptor();
case 22:
return new AddKeystrokeStatement_BehaviorDescriptor();
case 77:
return new CreateNodeAspectBlock_BehaviorDescriptor();
case 90:
return new EditorTab_BehaviorDescriptor();
case 159:
return null;
case 145:
return new IsApplicableTabBlock_BehaviorDescriptor();
case 37:
return new BaseNodeBlock_BehaviorDescriptor();
case 150:
return new ListenBlock_BehaviorDescriptor();
case 166:
return null;
case 165:
return new Order_BehaviorDescriptor();
case 91:
return new EditorTabReference_BehaviorDescriptor();
case 167:
return new OrderReference_BehaviorDescriptor();
case 8:
return new ActionDeclaration_BehaviorDescriptor();
case 137:
return new IconResource_BehaviorDescriptor();
case 199:
return null;
case 151:
return new MakeConfigBlock_BehaviorDescriptor();
case 138:
return new IconResourceExpression_BehaviorDescriptor();
default :
return null;
}
}
