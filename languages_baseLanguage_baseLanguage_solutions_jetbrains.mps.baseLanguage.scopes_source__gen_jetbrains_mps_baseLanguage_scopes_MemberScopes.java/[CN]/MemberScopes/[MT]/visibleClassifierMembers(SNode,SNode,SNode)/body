{
  Scope membersScope=new ListScope(ListSequence.fromList(BehaviorReflection.invokeVirtual((Class<List<SNode>>)((Class)Object.class),contextClassifier,"virtual_getMembers_1213877531970",new Object[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return eq_xjj6d8_a0a0a0a0a0a0a0b0d(SNodeOperations.getConceptDeclaration(it),kind);
    }
  }
)){
    public String getName(    SNode child){
      return SPropertyOperations.getString(SNodeOperations.cast(child,"jetbrains.mps.lang.core.structure.INamedConcept"),"name");
    }
  }
;
  if (membersScope == null) {
    throw new IllegalArgumentException("Member scope for classifier " + SPropertyOperations.getString(contextClassifier,"name") + " and kind "+ SPropertyOperations.getString(kind,"name")+ " is null");
  }
  return visibleClassifierMembers(membersScope,contextClassifier,contextNode);
}
