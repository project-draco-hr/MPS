{
  if (index >= path.length) {
    callback.invoke();
    return;
  }
  String component=path[index];
  if ((component == null || component.length() == 0)) {
    stringToPath(current,path,index + 1,result,callback);
  }
 else {
    boolean found=false;
    for (int i=0; i < current.getChildCount(); i++) {
      final MPSTreeNode node=(MPSTreeNode)current.getChildAt(i);
      if (node.getNodeIdentifier().replaceAll(TREE_PATH_SEPARATOR,"-").equals(component)) {
        found=true;
        ListSequence.fromList(result).addElement(node);
        if (!(node.isInitialized())) {
          if (node instanceof WatchableNode) {
            ((WatchableNode)node).init(new _FunctionTypes._void_P0_E0(){
              public void invoke(){
                stringToPath(node,path,index + 1,result,callback);
              }
            }
);
          }
 else {
            node.init();
          }
        }
        break;
      }
    }
    if (!(found)) {
      callback.invoke();
    }
  }
}
