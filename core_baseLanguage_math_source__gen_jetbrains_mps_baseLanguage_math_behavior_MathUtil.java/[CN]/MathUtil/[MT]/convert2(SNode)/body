{
  do {
    SNode matchedNode_30uc9x_a0c=bmc;
{
      boolean matches_30uc9x_a0a2=false;
{
        SNode matchingNode_30uc9x_a0a2=bmc;
        if (matchingNode_30uc9x_a0a2 != null) {
          matches_30uc9x_a0a2=SModelUtil_new.isAssignableConcept(matchingNode_30uc9x_a0a2.getConceptFqName(),"jetbrains.mps.baseLanguage.structure.PlusExpression");
        }
      }
      if (matches_30uc9x_a0a2) {
        return new MathUtil.QuotationClass_30uc9x_a0a0a0c0b0a0c().createNode(SLinkOperations.getTarget(bmc,"rightExpression",true),SLinkOperations.getTarget(bmc,"leftExpression",true));
      }
    }
{
      boolean matches_30uc9x_b0a2=false;
{
        SNode matchingNode_30uc9x_b0a2=bmc;
        if (matchingNode_30uc9x_b0a2 != null) {
          matches_30uc9x_b0a2=SModelUtil_new.isAssignableConcept(matchingNode_30uc9x_b0a2.getConceptFqName(),"jetbrains.mps.baseLanguage.structure.MinusExpression");
        }
      }
      if (matches_30uc9x_b0a2) {
        return new MathUtil.QuotationClass_30uc9x_a0a0a0c0c0a0c().createNode(SLinkOperations.getTarget(bmc,"rightExpression",true),SLinkOperations.getTarget(bmc,"leftExpression",true));
      }
    }
{
      boolean matches_30uc9x_c0a2=false;
{
        SNode matchingNode_30uc9x_c0a2=bmc;
        if (matchingNode_30uc9x_c0a2 != null) {
          matches_30uc9x_c0a2=SModelUtil_new.isAssignableConcept(matchingNode_30uc9x_c0a2.getConceptFqName(),"jetbrains.mps.baseLanguage.structure.MulExpression");
        }
      }
      if (matches_30uc9x_c0a2) {
        return new MathUtil.QuotationClass_30uc9x_a0a0a0c0d0a0c().createNode(SLinkOperations.getTarget(bmc,"rightExpression",true),SLinkOperations.getTarget(bmc,"leftExpression",true));
      }
    }
{
      boolean matches_30uc9x_d0a2=false;
{
        SNode matchingNode_30uc9x_d0a2=bmc;
        if (matchingNode_30uc9x_d0a2 != null) {
          matches_30uc9x_d0a2=SModelUtil_new.isAssignableConcept(matchingNode_30uc9x_d0a2.getConceptFqName(),"jetbrains.mps.baseLanguage.structure.DivExpression");
        }
      }
      if (matches_30uc9x_d0a2) {
        return new MathUtil.QuotationClass_30uc9x_a0a0a0c0e0a0c().createNode(SLinkOperations.getTarget(bmc,"rightExpression",true),SLinkOperations.getTarget(bmc,"leftExpression",true));
      }
    }
    return null;
  }
 while (false);
}
