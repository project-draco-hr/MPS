{
  do {
    SNode matchedNode_8234_0=bmc;
{
      boolean matches_8234_0=false;
{
        SNode matchingNode_8234_0=bmc;
        if (matchingNode_8234_0 != null) {
          matches_8234_0=SModelUtil_new.isAssignableConcept(matchingNode_8234_0.getConceptFqName(),"jetbrains.mps.baseLanguage.math.structure.DecimalPlusExpression");
        }
      }
      if (matches_8234_0) {
        return new MathUtil.QuotationClass_8234_10().createNode(SLinkOperations.getTarget(matchedNode_8234_0,"rightExpression",true),SLinkOperations.getTarget(matchedNode_8234_0,"leftExpression",true));
      }
    }
{
      boolean matches_8234_1=false;
{
        SNode matchingNode_8234_1=bmc;
        if (matchingNode_8234_1 != null) {
          matches_8234_1=SModelUtil_new.isAssignableConcept(matchingNode_8234_1.getConceptFqName(),"jetbrains.mps.baseLanguage.math.structure.DecimalMinusExpression");
        }
      }
      if (matches_8234_1) {
        return new MathUtil.QuotationClass_8234_11().createNode(SLinkOperations.getTarget(matchedNode_8234_0,"rightExpression",true),SLinkOperations.getTarget(matchedNode_8234_0,"leftExpression",true));
      }
    }
{
      boolean matches_8234_2=false;
{
        SNode matchingNode_8234_2=bmc;
        if (matchingNode_8234_2 != null) {
          matches_8234_2=SModelUtil_new.isAssignableConcept(matchingNode_8234_2.getConceptFqName(),"jetbrains.mps.baseLanguage.math.structure.DecimalMulExpression");
        }
      }
      if (matches_8234_2) {
        return new MathUtil.QuotationClass_8234_12().createNode(SLinkOperations.getTarget(matchedNode_8234_0,"rightExpression",true),SLinkOperations.getTarget(matchedNode_8234_0,"leftExpression",true));
      }
    }
{
      boolean matches_8234_3=false;
{
        SNode matchingNode_8234_3=bmc;
        if (matchingNode_8234_3 != null) {
          matches_8234_3=SModelUtil_new.isAssignableConcept(matchingNode_8234_3.getConceptFqName(),"jetbrains.mps.baseLanguage.math.structure.DecimalDivExpression");
        }
      }
      if (matches_8234_3) {
        return new MathUtil.QuotationClass_8234_13().createNode(SLinkOperations.getTarget(matchedNode_8234_0,"rightExpression",true),SLinkOperations.getTarget(matchedNode_8234_0,"leftExpression",true));
      }
    }
    return null;
  }
 while (false);
}
