{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.script.structure.AbstractClassifierSpecification").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.lang.script.structure.AbstractMethodSpecification").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.script.structure.CommentMigrationScriptPart").super_("jetbrains.mps.lang.script.structure.MigrationScriptPart").parents("jetbrains.mps.lang.script.structure.MigrationScriptPart").properties("text").alias("//","").create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.script.structure.DirectClassifierSpecification").super_("jetbrains.mps.lang.script.structure.AbstractClassifierSpecification").parents("jetbrains.mps.lang.script.structure.AbstractClassifierSpecification").references("classifier").create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.script.structure.DirectMethodSpecification").super_("jetbrains.mps.lang.script.structure.AbstractMethodSpecification").parents("jetbrains.mps.lang.script.structure.AbstractMethodSpecification").references("methodDeclaration").create();
case 5:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.script.structure.ExtractInterfaceMigration").super_("jetbrains.mps.lang.script.structure.MigrationScriptPart").parents("jetbrains.mps.lang.script.structure.MigrationScriptPart").properties("updateClassifierTypes").references("newClassifier").children(new String[]{"oldClassifier","pullUpMethods"},new boolean[]{false,true}).alias("extract interface","").create();
case 6:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.script.structure.FQNameClassifierSpecification").super_("jetbrains.mps.lang.script.structure.AbstractClassifierSpecification").parents("jetbrains.mps.lang.script.structure.AbstractClassifierSpecification").properties("classifierFQName","smodelReference","snodeId").create();
case 7:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.script.structure.FQNameMethodSpecification").super_("jetbrains.mps.lang.script.structure.AbstractMethodSpecification").parents("jetbrains.mps.lang.script.structure.AbstractMethodSpecification").properties("snodeId").create();
case 8:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.script.structure.FactoryMigrationScriptPart").super_("jetbrains.mps.lang.script.structure.MigrationScriptPart").parents("jetbrains.mps.lang.script.structure.MigrationScriptPart").children(new String[]{"factoryMethod"},new boolean[]{false}).alias("factory migration script part","").create();
case 9:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.script.structure.MigrationScript").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.structure.IValidIdentifier").properties("title","migrationFromBuild","category","type","toBuild").children(new String[]{"part"},new boolean[]{true}).alias("Language Migration Script","").create();
case 10:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.script.structure.MigrationScriptPart").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
case 11:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.script.structure.MigrationScriptPart_Instance").super_("jetbrains.mps.lang.script.structure.MigrationScriptPart").parents("jetbrains.mps.lang.script.structure.MigrationScriptPart").properties("description","showAsIntention").references("affectedInstanceConcept").children(new String[]{"affectedInstancePredicate","affectedInstanceUpdater"},new boolean[]{false,false}).alias("concept instances updater","").create();
case 12:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.script.structure.MigrationScriptPart_Instance_Predicate").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("instance predicate","").staticScope(StaticScope.NONE).create();
case 13:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.script.structure.MigrationScriptPart_Instance_Updater").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("instance predicate","").staticScope(StaticScope.NONE).create();
case 14:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.script.structure.MigrationScriptPart_node").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("node","").staticScope(StaticScope.NONE).create();
case 15:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.script.structure.PullUpMethod").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("newMethodDeclaration").children(new String[]{"oldMethodSpecification"},new boolean[]{false}).alias("pull up method","").create();
case 16:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.script.structure.WhitespaceMigrationScriptPart").super_("jetbrains.mps.lang.script.structure.MigrationScriptPart").parents("jetbrains.mps.lang.script.structure.MigrationScriptPart").alias("whitespace","").create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
