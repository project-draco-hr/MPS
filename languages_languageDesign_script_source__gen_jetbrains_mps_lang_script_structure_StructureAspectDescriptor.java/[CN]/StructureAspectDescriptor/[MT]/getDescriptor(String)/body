{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.lang.script.structure.CommentMigrationScriptPart","jetbrains.mps.lang.script.structure.MigrationScriptPart",false,new String[]{"jetbrains.mps.lang.script.structure.MigrationScriptPart"},new String[]{"text"},new String[]{});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.lang.script.structure.ExtractInterfaceMigration","jetbrains.mps.lang.script.structure.MigrationScriptPart",false,new String[]{"jetbrains.mps.lang.script.structure.MigrationScriptPart"},new String[]{"updateClassifierTypes"},new String[]{"oldClassifier","newClassifier"});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.lang.script.structure.FactoryMigrationScriptPart","jetbrains.mps.lang.script.structure.MigrationScriptPart",false,new String[]{"jetbrains.mps.lang.script.structure.MigrationScriptPart"},new String[]{},new String[]{});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.lang.script.structure.MigrationScript","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.structure.IValidIdentifier"},new String[]{"title","migrationFromBuild","category","type","toBuild"},new String[]{});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.lang.script.structure.MigrationScriptPart","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.lang.script.structure.MigrationScriptPart_Instance","jetbrains.mps.lang.script.structure.MigrationScriptPart",false,new String[]{"jetbrains.mps.lang.script.structure.MigrationScriptPart"},new String[]{"description","showAsIntention"},new String[]{"affectedInstanceConcept"});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.lang.script.structure.MigrationScriptPart_Instance_Predicate","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.lang.script.structure.MigrationScriptPart_Instance_Updater","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.lang.script.structure.MigrationScriptPart_node","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.lang.script.structure.PullUpMethod","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"oldMethodDeclaration","newMethodDeclaration"});
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.lang.script.structure.WhitespaceMigrationScriptPart","jetbrains.mps.lang.script.structure.MigrationScriptPart",false,new String[]{"jetbrains.mps.lang.script.structure.MigrationScriptPart"},new String[]{},new String[]{});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
