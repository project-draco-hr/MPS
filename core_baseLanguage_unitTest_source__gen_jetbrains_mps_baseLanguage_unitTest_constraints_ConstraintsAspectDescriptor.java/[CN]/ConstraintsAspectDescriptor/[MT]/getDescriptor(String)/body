{
  if ("jetbrains.mps.baseLanguage.unitTest.structure.TestMethod".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new TestMethod_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.unitTest.structure.BTestCase".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new BTestCase_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.unitTest.structure.TestMethodList".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.unitTest.structure.TestMethodList"));
  }
  if ("jetbrains.mps.baseLanguage.unitTest.structure.AssertEquals".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.unitTest.structure.AssertEquals"));
  }
  if ("jetbrains.mps.baseLanguage.unitTest.structure.AssertTrue".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.unitTest.structure.AssertTrue"));
  }
  if ("jetbrains.mps.baseLanguage.unitTest.structure.AssertFalse".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.unitTest.structure.AssertFalse"));
  }
  if ("jetbrains.mps.baseLanguage.unitTest.structure.AssertSame".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.unitTest.structure.AssertSame"));
  }
  if ("jetbrains.mps.baseLanguage.unitTest.structure.Fail".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.unitTest.structure.Fail"));
  }
  if ("jetbrains.mps.baseLanguage.unitTest.structure.AssertIsNull".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.unitTest.structure.AssertIsNull"));
  }
  if ("jetbrains.mps.baseLanguage.unitTest.structure.AssertThrows".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.unitTest.structure.AssertThrows"));
  }
  if ("jetbrains.mps.baseLanguage.unitTest.structure.Message".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.unitTest.structure.Message"));
  }
  if ("jetbrains.mps.baseLanguage.unitTest.structure.MessageHolder".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.unitTest.structure.MessageHolder"));
  }
  if ("jetbrains.mps.baseLanguage.unitTest.structure.ITestable".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.unitTest.structure.ITestable"));
  }
  if ("jetbrains.mps.baseLanguage.unitTest.structure.ITestCase".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.unitTest.structure.ITestCase"));
  }
  if ("jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod"));
  }
  if ("jetbrains.mps.baseLanguage.unitTest.structure.AssertInNotNull".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.unitTest.structure.AssertInNotNull"));
  }
  if ("jetbrains.mps.baseLanguage.unitTest.structure.BinaryAssert".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.unitTest.structure.BinaryAssert"));
  }
  return null;
}
