{
  GeneratorDescriptor source=(GeneratorDescriptor)mySource;
  SNode generator=SModelOperations.createNewNode(myModel,null,MetaAdapterFactory.getConcept(0x86ef829012bb4ca7L,0x947f093788f263a9L,0x5869770da61dfe21L,"jetbrains.mps.lang.project.structure.Generator"));
  fillModule(generator);
  SPropertyOperations.set(generator,MetaAdapterFactory.getProperty(0x86ef829012bb4ca7L,0x947f093788f263a9L,0x5869770da61dfe21L,0x3be012d639e8a44L,"generatorUID"),source.getGeneratorUID());
  SPropertyOperations.set(generator,MetaAdapterFactory.getProperty(0x86ef829012bb4ca7L,0x947f093788f263a9L,0x5869770da61dfe21L,0x29a5716c5dfed280L,"generateTemplates"),"" + (source.isGenerateTemplates()));
  SPropertyOperations.set(generator,MetaAdapterFactory.getProperty(0x86ef829012bb4ca7L,0x947f093788f263a9L,0x5869770da61dfe21L,0x64a78ad4da8f85a6L,"reflectiveQueries"),"" + (source.isReflectiveQueries()));
  SPropertyOperations.set(generator,MetaAdapterFactory.getProperty(0x86ef829012bb4ca7L,0x947f093788f263a9L,0x5869770da61dfe1eL,0x5869770da61dfe23L,"namespace"),(isNotEmptyString(source.getNamespace()) ? source.getNamespace() : null));
  for (  MappingPriorityRule rule : source.getPriorityRules()) {
    SLinkOperations.getChildren(generator,MetaAdapterFactory.getContainmentLink(0x86ef829012bb4ca7L,0x947f093788f263a9L,0x5869770da61dfe21L,0x19bfb4173fb5210bL,"priorityRules")).add(convert(rule));
  }
  for (  SModuleReference ref : source.getDepGenerators()) {
    SLinkOperations.getChildren(generator,MetaAdapterFactory.getContainmentLink(0x86ef829012bb4ca7L,0x947f093788f263a9L,0x5869770da61dfe21L,0x19bfb4173fb5210fL,"depGenerators")).add(convert(ref));
  }
  collectModels(generator);
  return generator;
}
