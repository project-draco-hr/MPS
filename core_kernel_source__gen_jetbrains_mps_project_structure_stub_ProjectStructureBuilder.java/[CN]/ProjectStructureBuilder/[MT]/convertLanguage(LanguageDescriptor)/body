{
  SNode result=SConceptOperations.createNewNode("jetbrains.mps.lang.project.structure.Language",null);
  result.setId(SNodeId.fromString("~root"));
  SModelOperations.addRootNode(myModel,result);
  fill(result,source);
  SPropertyOperations.set(result,"compileInMPS","" + true);
  SPropertyOperations.set(result,"genPath",source.getGenPath());
  SPropertyOperations.set(result,"languagePath",myFile.getPath());
  for (  SModelReference ref : source.getAccessoryModels()) {
    SLinkOperations.getTargets(result,"accessoryModels",true).add(convert(ref));
  }
  for (  GeneratorDescriptor descriptor : source.getGenerators()) {
    SLinkOperations.getTargets(result,"generator",true).add(convert(descriptor));
  }
  for (  ModuleReference ref : source.getExtendedLanguages()) {
    SLinkOperations.getTargets(result,"extendedLanguages",true).add(convert(ref));
  }
  for (  ModuleReference dep : source.getRuntimeModules()) {
    SLinkOperations.getTargets(result,"runtimeModules",true).add(convert(dep));
  }
  for (  ModelRoot entry : source.getRuntimeStubModels()) {
    SLinkOperations.getTargets(result,"runtimeStubModels",true).add(convert(entry));
  }
  for (  StubSolution sol : source.getStubSolutions()) {
    SLinkOperations.getTargets(result,"stubSolutions",true).add(convert(sol));
  }
  collectModels(result,source);
  return result;
}
