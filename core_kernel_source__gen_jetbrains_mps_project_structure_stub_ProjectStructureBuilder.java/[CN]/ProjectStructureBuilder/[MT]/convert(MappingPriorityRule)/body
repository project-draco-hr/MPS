{
  SNode rule=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(-8723610397892195161l,-7746462699928525911l),6370754048397540920l,"jetbrains.mps.lang.project.structure.MappingPriorityRule"));
switch (source.getType()) {
case BEFORE_OR_TOGETHER:
    SPropertyOperations.set(rule,MetaAdapterFactory.getProperty(new UUID(-8723610397892195161l,-7746462699928525911l),6370754048397540920l,6370754048397540925l,"type"),"before_or_together");
  break;
case STRICTLY_BEFORE:
SPropertyOperations.set(rule,MetaAdapterFactory.getProperty(new UUID(-8723610397892195161l,-7746462699928525911l),6370754048397540920l,6370754048397540925l,"type"),"strictly_before");
break;
case STRICTLY_AFTER:
SPropertyOperations.set(rule,MetaAdapterFactory.getProperty(new UUID(-8723610397892195161l,-7746462699928525911l),6370754048397540920l,6370754048397540925l,"type"),"strictly_after");
break;
case AFTER_OR_TOGETHER:
SPropertyOperations.set(rule,MetaAdapterFactory.getProperty(new UUID(-8723610397892195161l,-7746462699928525911l),6370754048397540920l,6370754048397540925l,"type"),"after_or_together");
break;
default :
SPropertyOperations.set(rule,MetaAdapterFactory.getProperty(new UUID(-8723610397892195161l,-7746462699928525911l),6370754048397540920l,6370754048397540925l,"type"),"strictly_together");
}
SLinkOperations.setTarget(rule,MetaAdapterFactory.getContainmentLink(new UUID(-8723610397892195161l,-7746462699928525911l),6370754048397540920l,2721285250110391021l,"left"),convert(source.getLeft()));
SLinkOperations.setTarget(rule,MetaAdapterFactory.getContainmentLink(new UUID(-8723610397892195161l,-7746462699928525911l),6370754048397540920l,2721285250110391022l,"right"),convert(source.getRight()));
return rule;
}
