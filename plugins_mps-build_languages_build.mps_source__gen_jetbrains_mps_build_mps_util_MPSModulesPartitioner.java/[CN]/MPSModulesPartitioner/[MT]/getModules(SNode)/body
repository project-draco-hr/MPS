{
  return ListSequence.fromList(SLinkOperations.getTargets(project,"parts",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.mps.structure.BuildMps_Group");
    }
  }
).translate(new ITranslator2<SNode,SNode>(){
    public Iterable<SNode> translate(    SNode it){
      return SLinkOperations.getTargets(SNodeOperations.cast(it,"jetbrains.mps.build.mps.structure.BuildMps_Group"),"modules",true);
    }
  }
).concat(ListSequence.fromList(SLinkOperations.getTargets(project,"parts",true))).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.mps.structure.BuildMps_AbstractModule");
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(it,"jetbrains.mps.build.mps.structure.BuildMps_AbstractModule");
    }
  }
);
}
