{
  CompilerManager compilerManager=CompilerManager.getInstance(project);
  compilerManager.addBeforeTask(new CompileTask(){
    @Override public boolean execute(    CompileContext compileContext){
      if (!CompilerWorkspaceConfiguration.getInstance(project).USE_COMPILE_SERVER)       return true;
      CompileScope compileScope=compileContext.getCompileScope();
      if (compileScope.getFiles(MPSFileTypeFactory.MODEL_FILE_TYPE,true).length > 0) {
        compileContext.addMessage(CompilerMessageCategory.WARNING,"Compiler setting \"Use external build\" should be switched off to generate MPS code",null,-1,-1);
      }
      return true;
    }
  }
);
  compilerManager.addCompilableFileType(MPSFileTypeFactory.MODEL_FILE_TYPE);
  for (  MPSCompiler2 compiler : compilerManager.getCompilers(MPSCompiler2.class)) {
    compilerManager.removeCompiler(compiler);
  }
  compilerManager.addCompiler(new MPSCompiler2(project));
}
