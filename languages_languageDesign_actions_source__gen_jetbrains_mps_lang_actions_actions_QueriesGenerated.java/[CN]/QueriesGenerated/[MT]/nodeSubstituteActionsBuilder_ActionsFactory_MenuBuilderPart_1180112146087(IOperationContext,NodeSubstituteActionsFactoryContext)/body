{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode conceptToAdd=SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.actions.structure.RemoveDefaultsPart");
    List<SubstituteAction> defaultActions=ChildSubstituteActionsHelper.createDefaultSubstituteActions(conceptToAdd,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter(),operationContext);
    ListSequence.fromList(result).addSequence(ListSequence.fromList(defaultActions));
  }
{
    SNode conceptToAdd=SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.actions.structure.ConceptSubstitutePart");
    List<SubstituteAction> defaultActions=ChildSubstituteActionsHelper.createDefaultSubstituteActions(conceptToAdd,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter(),operationContext);
    ListSequence.fromList(result).addSequence(ListSequence.fromList(defaultActions));
  }
{
    SNode conceptToAdd=SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.actions.structure.RemoveByConditionPart");
    List<SubstituteAction> defaultActions=ChildSubstituteActionsHelper.createDefaultSubstituteActions(conceptToAdd,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter(),operationContext);
    ListSequence.fromList(result).addSequence(ListSequence.fromList(defaultActions));
  }
  return result;
}
