{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)LanguageRegistry.getInstance().getLanguage(MetaAdapterFactory.getLanguage(SLanguageId.deserialize("c7d5b9dd-a05f-4be2-bc73-f2e16994cc67"),"jetbrains.mps.baseLanguage.lightweightdsl")).getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case 0:
    return props_AutoInitDSLClass;
case 1:
  return props_BooleanPropertyInstance;
case 2:
return props_CustomMemberDescriptor;
case 3:
return props_DSLAnnotation;
case 4:
return props_DSLClassMember;
case 5:
return props_DSLDescriptor;
case 6:
return props_DependentTypeDescriptor;
case 7:
return props_DependentTypeInstance;
case 8:
return props_EmptyMemberDescriptor;
case 9:
return props_GenerateModifier;
case 10:
return props_IntegerPropertyInstance;
case 11:
return props_MemberInstance;
case 12:
return props_MemberModifier;
case 13:
return props_MemberPlaceholder;
case 14:
return props_MethodDescriptor;
case 15:
return props_MethodInstance;
case 16:
return props_MethodParameterInstance;
case 17:
return props_MultipleModifier;
case 18:
return props_ParameterDescriptor;
case 19:
return props_PlaceholderModifier;
case 20:
return props_PropertyDescriptor;
case 21:
return props_PropertyInstance;
case 22:
return props_RequiredModifier;
case 23:
return props_StringPropertyInstance;
}
throw new IllegalStateException();
}
