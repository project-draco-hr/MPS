{
  try {
    GeneratorManager manager=GenerateTemplateQueries_Action.this.context.getComponent(GeneratorManager.class);
    IGenerationType genType=manager.getDefaultModuleGenerationType();
    final Wrappers._T<List<SModelDescriptor>> models=new Wrappers._T<List<SModelDescriptor>>(ListSequence.fromList(new ArrayList<SModelDescriptor>()));
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        ListSequence.fromList(models.value).addSequence(ListSequence.fromList(TemplateLanguageGenerationUtil.getGeneratorModels((Generator)GenerateTemplateQueries_Action.this.module)));
        if (!(GenerateTemplateQueries_Action.this.regenerate)) {
          models.value=ListSequence.fromList(models.value).where(new IWhereFilter<SModelDescriptor>(){
            public boolean accept(            SModelDescriptor it){
              return ModelGenerationStatusManager.getInstance().generationRequired(it,GenerateTemplateQueries_Action.this.project);
            }
          }
).toListSequence();
        }
      }
    }
);
    manager.generateModelsWithProgressWindow(models.value,GenerateTemplateQueries_Action.this.context,genType,false);
  }
 catch (  Throwable t) {
    if (log.isErrorEnabled()) {
      log.error("User's action execute method failed. Action:" + "GenerateTemplateQueries",t);
    }
  }
}
