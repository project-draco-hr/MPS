{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(1463511629799179198l,-4743614238981921533l),1112036490295l,1112036516483l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(1463511629799179198l,-4743614238981921533l),1112036490295l,1112036516483l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          SNode eventType=SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(new UUID(1463511629799179198l,-4743614238981921533l),1111791038612l,"jetbrains.mps.samples.agreementLanguage.structure.Event"),true,false),MetaAdapterFactory.getReferenceLink(new UUID(1463511629799179198l,-4743614238981921533l),1111791038612l,1111793668132l,"type"));
          return new SubnodesSearchScope(eventType);
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_lcwlw6_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
