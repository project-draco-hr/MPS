{
  for (  SNode node : Sequence.fromIterable(roots)) {
    List<SNode> unknowns=SNodeOperations.getNodeDescendants(node,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),8136348407761606757l,"jetbrains.mps.baseLanguage.structure.IYetUnresolved"),false,new SConcept[]{});
    for (    SNode unk : ListSequence.fromList(unknowns)) {
      final SNode unkNode=unk;
      final _FunctionTypes._return_P0_E0<? extends SNode> subst=BehaviorReflection.invokeVirtual((Class<_FunctionTypes._return_P0_E0<? extends SNode>>)((Class)Object.class),unk,"virtual_evaluateSubst_8136348407761606764",new Object[]{});
      if (subst == null) {
        continue;
      }
      ModelAccess.instance().runWriteActionInCommand(new Runnable(){
        @Override public void run(){
          final SNode theRightNode=subst.invoke();
          SNodeOperations.replaceWithAnother(unkNode,theRightNode);
          Sequence.fromIterable(JavaToMpsConverter.deepReferences(theRightNode)).where(new IWhereFilter<SReference>(){
            public boolean accept(            SReference it){
              return (SReference)it instanceof StaticReference;
            }
          }
).visitAll(new IVisitor<SReference>(){
            public void visit(            SReference it){
              SModelReference targetModel=((StaticReference)it).getTargetSModelReference();
              ((SModelInternal)theRightNode.getModel()).addModelImport(targetModel,true);
            }
          }
);
        }
      }
);
    }
  }
}
