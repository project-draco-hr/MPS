{
  char[] content=source;
  int[][] comments=parseInfo.commentPositions;
  int[] lineends=parseInfo.lineEnds;
  final Wrappers._T<Map<SNode,Integer>> positions=new Wrappers._T<Map<SNode,Integer>>(MapSequence.fromMap(new HashMap<SNode,Integer>()));
  Iterable<FullASTConverter.CodeBlock> blocks=ListSequence.fromList(new ArrayList<FullASTConverter.CodeBlock>());
  Map<Integer,SNode> javadocs=converter.getJavadocs();
  if (converter instanceof FullASTConverter) {
    blocks=((FullASTConverter)converter).getCodeBlocks();
    positions.value=((FullASTConverter)converter).getPositions();
  }
  Iterable<FullASTConverter.CodeBlock> blcks=Sequence.fromIterable(blocks).sort(new Comparator<FullASTConverter.CodeBlock>(){
    public int compare(    FullASTConverter.CodeBlock a,    FullASTConverter.CodeBlock b){
      return a.getEndPos() - b.getEndPos();
    }
  }
,true);
  for (  int[] comment : comments) {
    if (comment[1] > 0) {
      SNode doc=MapSequence.fromMap(javadocs).get(comment[0]);
      if (doc == null) {
        continue;
      }
      List<String> lines=CommentHelper.processJavadoc(CommentHelper.splitString(content,lineends,comment[0],comment[1]));
      for (      String text : lines) {
        SNode commentLine=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(-972752984950357426l,-4964296947050367098l),8465538089690331500l,"jetbrains.mps.baseLanguage.javadoc.structure.CommentLine"));
        SNode part=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(-972752984950357426l,-4964296947050367098l),8970989240999019143l,"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart"));
        SPropertyOperations.set(part,MetaAdapterFactory.getProperty(new UUID(-972752984950357426l,-4964296947050367098l),8970989240999019143l,8970989240999019144l,"text"),text);
        ListSequence.fromList(SLinkOperations.getChildren(commentLine,MetaAdapterFactory.getContainmentLink(new UUID(-972752984950357426l,-4964296947050367098l),8465538089690331500l,8970989240999019149l,"part"))).addElement(part);
        ListSequence.fromList(SLinkOperations.getChildren(doc,MetaAdapterFactory.getContainmentLink(new UUID(-972752984950357426l,-4964296947050367098l),5349172909345501395l,8465538089690331502l,"body"))).addElement(commentLine);
      }
      continue;
    }
    final int linestart=Math.abs(comment[0]);
    SNode block=null;
    for (    FullASTConverter.CodeBlock blk : Sequence.fromIterable(blcks)) {
      if (blk.getStartPos() <= linestart && linestart <= blk.getEndPos()) {
        block=blk.getStatementList();
        break;
      }
    }
    if ((block != null)) {
      int pos=ListSequence.fromList(SLinkOperations.getChildren(block,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123136l,1068581517665l,"statement"))).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return !(MapSequence.fromMap(positions.value).containsKey(it)) || Math.abs(MapSequence.fromMap(positions.value).get(it)) <= linestart;
        }
      }
).count();
      for (      String line : CommentHelper.processComment(CommentHelper.splitString(content,lineends,linestart,Math.abs(comment[1])))) {
        String line_=line;
        if (line.startsWith(" ")) {
          line_=line.substring(1);
        }
        SNode commentText=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),6329021646629104957l,"jetbrains.mps.baseLanguage.structure.TextCommentPart"));
        SPropertyOperations.set(commentText,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),6329021646629104957l,6329021646629104958l,"text"),line_);
        SNode commentLine=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),6329021646629104954l,"jetbrains.mps.baseLanguage.structure.SingleLineComment"));
        ListSequence.fromList(SLinkOperations.getChildren(commentLine,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),6329021646629104954l,6329021646629175155l,"commentPart"))).addElement(commentText);
        ListSequence.fromList(SLinkOperations.getChildren(block,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123136l,1068581517665l,"statement"))).insertElement(pos++,commentLine);
      }
    }
 else {
    }
  }
}
