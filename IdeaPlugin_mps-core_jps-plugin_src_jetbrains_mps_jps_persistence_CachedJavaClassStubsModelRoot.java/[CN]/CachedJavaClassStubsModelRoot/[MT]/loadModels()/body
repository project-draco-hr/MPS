{
  SModule module=getModule();
  if (module instanceof Generator) {
    module=((Generator)module).getSourceLanguage();
  }
  if (module == null || !(module.getModuleReference() instanceof SModuleReference)) {
    return super.loadModels();
  }
  CachedModuleData moduleData=myCachedRepository.getModuleData((SModuleReference)module.getModuleReference());
  if (moduleData == null) {
    return super.loadModels();
  }
  List<CachedModelData> models=moduleData.getModels(this);
  if (models == null) {
    return super.loadModels();
  }
  List<SModel> result=new ArrayList<SModel>();
  for (  CachedModelData mdata : models) {
    FolderSetDataSource source=new FolderSetDataSource();
    JavaStubModelHeader header=(JavaStubModelHeader)mdata.getHeader();
    for (    String s : header.getPaths()) {
      source.addPath(new IdeaFile(fileSystem,s),this);
    }
    final JavaClassStubModelDescriptor md=new JavaClassStubModelDescriptor(header.getReference(),source);
    md.setModelRoot(this);
    result.add(md);
  }
  return result;
}
