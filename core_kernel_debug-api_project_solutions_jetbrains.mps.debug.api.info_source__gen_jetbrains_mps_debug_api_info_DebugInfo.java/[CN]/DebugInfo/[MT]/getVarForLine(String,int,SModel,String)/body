{
  List<ScopePositionInfo> resultList=ListSequence.fromList(new ArrayList<ScopePositionInfo>());
  for (  ScopePositionInfo element : Sequence.fromIterable(MapSequence.fromMap(myRoots).values()).translate(new ITranslator2<DebugInfoRoot,ScopePositionInfo>(){
    public Iterable<ScopePositionInfo> translate(    DebugInfoRoot it){
      return it.getScopePositions();
    }
  }
)) {
    if (ObjectUtils.equals(element.getFileName(),file) && element.getStartLine() <= line && line <= element.getEndLine()) {
      ListSequence.fromList(resultList).addElement(element);
    }
  }
  if (ListSequence.fromList(resultList).isEmpty()) {
    return null;
  }
  Iterable<ScopePositionInfo> sorted=ListSequence.fromList(resultList).sort(new ISelector<ScopePositionInfo,Comparable<?>>(){
    public Comparable<?> select(    ScopePositionInfo it){
      return it;
    }
  }
,true);
  for (  ScopePositionInfo info : sorted) {
    SNode var=info.getVarNode(varName,model);
    if (var != null) {
      return var;
    }
  }
  return null;
}
