{
  Integer index=myIndexMap.get(id);
  if (index == null) {
    return null;
  }
switch (((int)index)) {
case 0:
    return myConceptAbstractPrintExpression_old;
case 1:
  return myConceptBLCommand_old;
case 2:
return myConceptBLExpression_old;
case 3:
return myConceptCustomScope;
case 4:
return myConceptExpressionHelpProvider;
case 5:
return myConceptGlobalScope_old;
case 6:
return myConceptHelpProvider;
case 7:
return myConceptInstancesExpression;
case 8:
return myConceptModelScope;
case 9:
return myConceptModelsExpression;
case 10:
return myConceptModulesExpression;
case 11:
return myConceptModulesScope;
case 12:
return myConceptNodesExpression;
case 13:
return myConceptOperationHelpProvider;
case 14:
return myConceptPrintExpression_old;
case 15:
return myConceptPrintNodeExpression_old;
case 16:
return myConceptPrintNodeReferenceExpression_old;
case 17:
return myConceptPrintSequenceExpression_old;
case 18:
return myConceptPrintTextExpression_old;
case 19:
return myConceptProjectExpression_old;
case 20:
return myConceptProjectScope_old;
case 21:
return myConceptQueryExpression;
case 22:
return myConceptQueryParameter;
case 23:
return myConceptQueryParameterExact;
case 24:
return myConceptQueryParameterIncludeReadOnly;
case 25:
return myConceptQueryParameterList;
case 26:
return myConceptQueryParameterScope;
case 27:
return myConceptReferencesExpression;
case 28:
return myConceptScopeParameter;
case 29:
return myConceptShowExpression_old;
case 30:
return myConceptUsagesExpression;
case 31:
return myConceptWithStatement;
default :
throw new IllegalStateException();
}
}
