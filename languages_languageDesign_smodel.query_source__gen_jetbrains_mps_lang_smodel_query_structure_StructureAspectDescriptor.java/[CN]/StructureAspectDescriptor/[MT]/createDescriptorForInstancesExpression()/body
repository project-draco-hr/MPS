{
  return new ConceptDescriptorBuilder("jetbrains.mps.lang.smodel.query.structure.InstancesExpression",MetaIdFactory.conceptId(0x1a8554c4eb8443baL,0x8c346f0d90c6e75aL,0x6b643f33718aa10dL)).super_("jetbrains.mps.lang.smodel.query.structure.QueryExpression").version(1).super_(MetaIdFactory.conceptId(0x1a8554c4eb8443baL,0x8c346f0d90c6e75aL,0x3bc64421760bacfdL)).parents("jetbrains.mps.lang.smodel.query.structure.QueryExpression").parentIds(MetaIdFactory.conceptId(0x1a8554c4eb8443baL,0x8c346f0d90c6e75aL,0x3bc64421760bacfdL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x6b643f33718aa10eL,"conceptArg",MetaIdFactory.conceptId(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x118f285e4f7L),false,false,false,new SNodePointer("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)","7738379549910147342"))).children(new String[]{"conceptArg"},new boolean[]{false}).alias("#instances","instances of a concept in scope").sourceNode(new SNodePointer("r:935ba0ee-7291-4caa-a807-d76e8fc69391(jetbrains.mps.lang.smodel.query.structure)","7738379549910147341")).create();
}
