{
  myModel.rootsIterator();
  myModel.enforceFullLoad();
synchronized (myLock) {
    if (!myInitialized) {
      initCache();
    }
    final List<SNode> result=new ArrayList<SNode>();
    if (includeInherited) {
      for (      String d : LanguageHierarchyCache.getInstance().getAllDescendantsOfConcept(conceptFqName)) {
        if (myNodes.containsKey(d)) {
          result.addAll(myNodes.get(d));
        }
      }
    }
 else {
      if (myNodes.containsKey(conceptFqName)) {
        result.addAll(myNodes.get(conceptFqName));
      }
    }
    Collections.sort(result,new Comparator<SNode>(){
      public int compare(      SNode o1,      SNode o2){
        return o1.getSNodeId().compareTo(o2.getSNodeId());
      }
    }
);
    return result;
  }
}
