{
  return ModelChangesWatcher.instance().executeUnderBlockedReload(new Computable<Boolean>(){
    @Override public Boolean compute(){
      try {
        File backupFile=doBackup(modelFile,inMemory);
        return showDiskMemoryQuestion(modelFile,inMemory,backupFile);
      }
 catch (      IOException e) {
        LOG.error(e);
        throw new RuntimeException(e);
      }
    }
  }
);
}
