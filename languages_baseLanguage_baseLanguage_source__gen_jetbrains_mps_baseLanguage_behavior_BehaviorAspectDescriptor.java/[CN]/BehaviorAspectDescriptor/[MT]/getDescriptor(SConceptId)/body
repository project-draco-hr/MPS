{
  int behaviorIndex=Arrays.binarySearch(myConceptBehaviorIds,conceptId.getIdValue());
switch (behaviorIndex) {
case 0:
    return myClassConcept__BehaviorDescriptor;
case 1:
  return myFieldDeclaration__BehaviorDescriptor;
case 2:
return myVariableDeclaration__BehaviorDescriptor;
case 3:
return myType__BehaviorDescriptor;
case 4:
return myExpression__BehaviorDescriptor;
case 5:
return myParameterDeclaration__BehaviorDescriptor;
case 6:
return myAssignmentExpression__BehaviorDescriptor;
case 7:
return myVariableReference__BehaviorDescriptor;
case 8:
return myBaseMethodCall__BehaviorDescriptor;
case 9:
return myBaseMethodDeclaration__BehaviorDescriptor;
case 10:
return myStatementList__BehaviorDescriptor;
case 11:
return myBooleanConstant__BehaviorDescriptor;
case 12:
return myConstructorDeclaration__BehaviorDescriptor;
case 13:
return myEqualsExpression__BehaviorDescriptor;
case 14:
return myExpressionStatement__BehaviorDescriptor;
case 15:
return myStatement__BehaviorDescriptor;
case 16:
return myIfStatement__BehaviorDescriptor;
case 17:
return myInstanceMethodDeclaration__BehaviorDescriptor;
case 18:
return myIntegerConstant__BehaviorDescriptor;
case 19:
return myLocalVariableDeclaration__BehaviorDescriptor;
case 20:
return myLocalVariableDeclarationStatement__BehaviorDescriptor;
case 21:
return myLocalVariableReference__BehaviorDescriptor;
case 22:
return myLongType__BehaviorDescriptor;
case 23:
return myMinusExpression__BehaviorDescriptor;
case 24:
return myParameterReference__BehaviorDescriptor;
case 25:
return myPlusExpression__BehaviorDescriptor;
case 26:
return myReturnStatement__BehaviorDescriptor;
case 27:
return myVoidType__BehaviorDescriptor;
case 28:
return myStaticFieldDeclaration__BehaviorDescriptor;
case 29:
return myThisExpression__BehaviorDescriptor;
case 30:
return mySuperConstructorInvocation__BehaviorDescriptor;
case 31:
return myStringLiteral__BehaviorDescriptor;
case 32:
return myStaticFieldReference__BehaviorDescriptor;
case 33:
return myShortType__BehaviorDescriptor;
case 34:
return myNullLiteral__BehaviorDescriptor;
case 35:
return myIntegerType__BehaviorDescriptor;
case 36:
return myFloatType__BehaviorDescriptor;
case 37:
return myDoubleType__BehaviorDescriptor;
case 38:
return myCharType__BehaviorDescriptor;
case 39:
return myByteType__BehaviorDescriptor;
case 40:
return myBooleanType__BehaviorDescriptor;
case 41:
return myArrayType__BehaviorDescriptor;
case 42:
return myCastExpression__BehaviorDescriptor;
case 43:
return mySuperMethodCall__BehaviorDescriptor;
case 44:
return myNotEqualsExpression__BehaviorDescriptor;
case 45:
return myWhileStatement__BehaviorDescriptor;
case 46:
return myParenthesizedExpression__BehaviorDescriptor;
case 47:
return myAndExpression__BehaviorDescriptor;
case 48:
return myOrExpression__BehaviorDescriptor;
case 49:
return myStaticMethodCall__BehaviorDescriptor;
case 50:
return myStaticMethodDeclaration__BehaviorDescriptor;
case 51:
return myGreaterThanExpression__BehaviorDescriptor;
case 52:
return myLessThanExpression__BehaviorDescriptor;
case 53:
return myNotExpression__BehaviorDescriptor;
case 54:
return myBinaryOperation__BehaviorDescriptor;
case 55:
return myBreakStatement__BehaviorDescriptor;
case 56:
return myContinueStatement__BehaviorDescriptor;
case 57:
return myBlockStatement__BehaviorDescriptor;
case 58:
return myEnumClass__BehaviorDescriptor;
case 59:
return myEnumConstantDeclaration__BehaviorDescriptor;
case 60:
return myEnumConstantReference__BehaviorDescriptor;
case 61:
return myMulExpression__BehaviorDescriptor;
case 62:
return myDivExpression__BehaviorDescriptor;
case 63:
return myConceptFunctionParameter__BehaviorDescriptor;
case 64:
return myClassifier__BehaviorDescriptor;
case 65:
return myClassifierType__BehaviorDescriptor;
case 66:
return myInterface__BehaviorDescriptor;
case 67:
return myTypeVariableDeclaration__BehaviorDescriptor;
case 68:
return myGenericDeclaration__BehaviorDescriptor;
case 69:
return myTypeVariableReference__BehaviorDescriptor;
case 70:
return myFloatingPointConstant__BehaviorDescriptor;
case 71:
return myClassifierClassExpression__BehaviorDescriptor;
case 72:
return myConceptFunction__BehaviorDescriptor;
case 73:
return myForeachStatement__BehaviorDescriptor;
case 74:
return myAbstractForStatement__BehaviorDescriptor;
case 75:
return myForStatement__BehaviorDescriptor;
case 76:
return myGenericNewExpression__BehaviorDescriptor;
case 77:
return myClosure__BehaviorDescriptor;
case 78:
return myClosureParameterReference__BehaviorDescriptor;
case 79:
return myGreaterThanOrEqualsExpression__BehaviorDescriptor;
case 80:
return myRemExpression__BehaviorDescriptor;
case 81:
return myLessThanOrEqualsExpression__BehaviorDescriptor;
case 82:
return myTryStatement__BehaviorDescriptor;
case 83:
return myAbstractLoopStatement__BehaviorDescriptor;
case 84:
return myTernaryOperatorExpression__BehaviorDescriptor;
case 85:
return mySwitchStatement__BehaviorDescriptor;
case 86:
return mySwitchCase__BehaviorDescriptor;
case 87:
return myPrimitiveType__BehaviorDescriptor;
case 88:
return myTryCatchStatement__BehaviorDescriptor;
case 89:
return myCatchClause__BehaviorDescriptor;
case 90:
return myThrowStatement__BehaviorDescriptor;
case 91:
return myRemarkStatement__BehaviorDescriptor;
case 92:
return mySynchronizedStatement__BehaviorDescriptor;
case 93:
return myAnonymousClass__BehaviorDescriptor;
case 94:
return myWildCardType__BehaviorDescriptor;
case 95:
return myLowerBoundType__BehaviorDescriptor;
case 96:
return myUpperBoundType__BehaviorDescriptor;
case 97:
return myLocalStaticFieldReference__BehaviorDescriptor;
case 98:
return myLocalStaticMethodCall__BehaviorDescriptor;
case 99:
return myArrayAccessExpression__BehaviorDescriptor;
case 100:
return myCommentedStatementsBlock__BehaviorDescriptor;
case 101:
return myDoWhileStatement__BehaviorDescriptor;
case 102:
return myClassifierMember__BehaviorDescriptor;
case 103:
return myIVisible__BehaviorDescriptor;
case 104:
return myThisConstructorInvocation__BehaviorDescriptor;
case 105:
return myHexIntegerLiteral__BehaviorDescriptor;
case 106:
return myIntegerLiteral__BehaviorDescriptor;
case 107:
return myAnnotation__BehaviorDescriptor;
case 108:
return myAnnotationMethodDeclaration__BehaviorDescriptor;
case 109:
return myAnnotationInstance__BehaviorDescriptor;
case 110:
return myHasAnnotation__BehaviorDescriptor;
case 111:
return myAnnotationInstanceValue__BehaviorDescriptor;
case 112:
return myIMemberContainer__BehaviorDescriptor;
case 113:
return myDotExpression__BehaviorDescriptor;
case 114:
return myIOperation__BehaviorDescriptor;
case 115:
return myFieldReferenceOperation__BehaviorDescriptor;
case 116:
return myIStatementListContainer__BehaviorDescriptor;
case 117:
return myCharConstant__BehaviorDescriptor;
case 118:
return myTypeDerivable__BehaviorDescriptor;
case 119:
return myProperty__BehaviorDescriptor;
case 120:
return myPropertyImplementation__BehaviorDescriptor;
case 121:
return myDefaultPropertyImplementation__BehaviorDescriptor;
case 122:
return myPropertyReference__BehaviorDescriptor;
case 123:
return myCustomPropertyImplementation__BehaviorDescriptor;
case 124:
return myGetAccessor__BehaviorDescriptor;
case 125:
return mySetAccessor__BehaviorDescriptor;
case 126:
return myDefaultSetAccessor__BehaviorDescriptor;
case 127:
return myInstanceMethodCallOperation__BehaviorDescriptor;
case 128:
return myIMethodCall__BehaviorDescriptor;
case 129:
return myIInternalType__BehaviorDescriptor;
case 130:
return myElsifClause__BehaviorDescriptor;
case 131:
return myInstanceInitializer__BehaviorDescriptor;
case 132:
return myArrayLengthOperation__BehaviorDescriptor;
case 133:
return myIValidIdentifier__BehaviorDescriptor;
case 134:
return myClassCreator__BehaviorDescriptor;
case 135:
return myPostfixIncrementExpression__BehaviorDescriptor;
case 136:
return myPostfixDecrementExpression__BehaviorDescriptor;
case 137:
return myBaseAssignmentExpression__BehaviorDescriptor;
case 138:
return myVariableArityType__BehaviorDescriptor;
case 139:
return myIExtractMethodAvailable__BehaviorDescriptor;
case 140:
return myStaticInitializer__BehaviorDescriptor;
case 141:
return myIStaticContainerForMethods__BehaviorDescriptor;
case 142:
return myIVariableAssignment__BehaviorDescriptor;
case 143:
return myUsingStatement__BehaviorDescriptor;
case 144:
return myBitwiseAndExpression__BehaviorDescriptor;
case 145:
return myBitwiseOrExpression__BehaviorDescriptor;
case 146:
return myBitwiseXorExpression__BehaviorDescriptor;
case 147:
return myIBLDeprecatable__BehaviorDescriptor;
case 148:
return myStringType__BehaviorDescriptor;
case 149:
return myNPENotEqualsExpression__BehaviorDescriptor;
case 150:
return myNPEEqualsExpression__BehaviorDescriptor;
case 151:
return myBaseStringOperation__BehaviorDescriptor;
case 152:
return myIParameter__BehaviorDescriptor;
case 153:
return myShiftLeftExpression__BehaviorDescriptor;
case 154:
return myShiftRightExpression__BehaviorDescriptor;
case 155:
return myCommentedStatement__BehaviorDescriptor;
case 156:
return myTypeAnnotable__BehaviorDescriptor;
case 157:
return myIContainsStatementList__BehaviorDescriptor;
case 158:
return myILocalVariableElement__BehaviorDescriptor;
case 159:
return myILocalVariableElementList__BehaviorDescriptor;
case 160:
return myIMethodLike__BehaviorDescriptor;
case 161:
return myPrefixIncrementExpression__BehaviorDescriptor;
case 162:
return myPrefixDecrementExpression__BehaviorDescriptor;
case 163:
return myAbstractUnaryNumberOperation__BehaviorDescriptor;
case 164:
return myConstructorInvocationStatement__BehaviorDescriptor;
case 165:
return myShiftRightUnsignedExpression__BehaviorDescriptor;
case 166:
return myIVariableReference__BehaviorDescriptor;
case 167:
return myIIncompleteParen__BehaviorDescriptor;
case 168:
return myPlaceholderMember__BehaviorDescriptor;
case 169:
return myIBinaryLike__BehaviorDescriptor;
case 170:
return myUnknownLocalCall__BehaviorDescriptor;
case 171:
return myUnknownDotCall__BehaviorDescriptor;
case 172:
return myPropertyValueReference__BehaviorDescriptor;
case 173:
return myLocalInstanceMethodCall__BehaviorDescriptor;
case 174:
return myILocalDeclaration__BehaviorDescriptor;
case 175:
return myILocalReference__BehaviorDescriptor;
case 176:
return myUnknownNew__BehaviorDescriptor;
case 177:
return myIncompleteMemberDeclaration__BehaviorDescriptor;
case 178:
return myITryCatchStatement__BehaviorDescriptor;
case 179:
return myIGenericType__BehaviorDescriptor;
case 180:
return myIConditional__BehaviorDescriptor;
case 181:
return myLongLiteral__BehaviorDescriptor;
case 182:
return myCustomSetterPropertyImplementation__BehaviorDescriptor;
case 183:
return myIWillBeClassifier__BehaviorDescriptor;
case 184:
return myFloatingPointFloatConstant__BehaviorDescriptor;
case 185:
return myLocalPropertyReference__BehaviorDescriptor;
case 186:
return myJavaImports__BehaviorDescriptor;
case 187:
return mySingleLineComment__BehaviorDescriptor;
case 188:
return myCommentPart__BehaviorDescriptor;
case 189:
return myTextCommentPart__BehaviorDescriptor;
case 190:
return myStatementCommentPart__BehaviorDescriptor;
case 191:
return myTokens__BehaviorDescriptor;
case 192:
return myIClassifier__BehaviorDescriptor;
case 193:
return myIClassifierMember__BehaviorDescriptor;
case 194:
return myIClassifierType__BehaviorDescriptor;
case 195:
return myLocalInstanceFieldReference__BehaviorDescriptor;
case 196:
return myLocalMethodCall__BehaviorDescriptor;
case 197:
return myUnaryMinus__BehaviorDescriptor;
case 198:
return myIYetUnresolved__BehaviorDescriptor;
case 199:
return myITypeApplicable__BehaviorDescriptor;
case 200:
return myUnknownNameRef__BehaviorDescriptor;
case 201:
return myUnknownConsCall__BehaviorDescriptor;
default :
return null;
}
}
