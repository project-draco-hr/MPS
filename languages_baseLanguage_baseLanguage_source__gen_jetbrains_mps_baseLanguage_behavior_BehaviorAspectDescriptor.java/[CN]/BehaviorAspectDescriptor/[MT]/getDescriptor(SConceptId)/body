{
  int behaviorIndex=Arrays.binarySearch(myConceptBehaviorIds,conceptId.getIdValue());
switch (behaviorIndex) {
case 0:
    return myClassConcept_BehaviorDescriptor;
case 1:
  return myFieldDeclaration_BehaviorDescriptor;
case 2:
return myVariableDeclaration_BehaviorDescriptor;
case 3:
return myType_BehaviorDescriptor;
case 4:
return myExpression_BehaviorDescriptor;
case 5:
return myParameterDeclaration_BehaviorDescriptor;
case 6:
return myAssignmentExpression_BehaviorDescriptor;
case 7:
return myVariableReference_BehaviorDescriptor;
case 8:
return myBaseMethodCall_BehaviorDescriptor;
case 9:
return myBaseMethodDeclaration_BehaviorDescriptor;
case 10:
return myStatementList_BehaviorDescriptor;
case 11:
return myBooleanConstant_BehaviorDescriptor;
case 12:
return myConstructorDeclaration_BehaviorDescriptor;
case 13:
return myEqualsExpression_BehaviorDescriptor;
case 14:
return myExpressionStatement_BehaviorDescriptor;
case 15:
return myStatement_BehaviorDescriptor;
case 16:
return myIfStatement_BehaviorDescriptor;
case 17:
return myInstanceMethodDeclaration_BehaviorDescriptor;
case 18:
return myIntegerConstant_BehaviorDescriptor;
case 19:
return myLocalVariableDeclaration_BehaviorDescriptor;
case 20:
return myLocalVariableDeclarationStatement_BehaviorDescriptor;
case 21:
return myLocalVariableReference_BehaviorDescriptor;
case 22:
return myLongType_BehaviorDescriptor;
case 23:
return myMinusExpression_BehaviorDescriptor;
case 24:
return myParameterReference_BehaviorDescriptor;
case 25:
return myPlusExpression_BehaviorDescriptor;
case 26:
return myReturnStatement_BehaviorDescriptor;
case 27:
return myVoidType_BehaviorDescriptor;
case 28:
return myStaticFieldDeclaration_BehaviorDescriptor;
case 29:
return myThisExpression_BehaviorDescriptor;
case 30:
return mySuperConstructorInvocation_BehaviorDescriptor;
case 31:
return myStringLiteral_BehaviorDescriptor;
case 32:
return myStaticFieldReference_BehaviorDescriptor;
case 33:
return myShortType_BehaviorDescriptor;
case 34:
return myNullLiteral_BehaviorDescriptor;
case 35:
return myIntegerType_BehaviorDescriptor;
case 36:
return myFloatType_BehaviorDescriptor;
case 37:
return myDoubleType_BehaviorDescriptor;
case 38:
return myCharType_BehaviorDescriptor;
case 39:
return myByteType_BehaviorDescriptor;
case 40:
return myBooleanType_BehaviorDescriptor;
case 41:
return myArrayType_BehaviorDescriptor;
case 42:
return myCastExpression_BehaviorDescriptor;
case 43:
return mySuperMethodCall_BehaviorDescriptor;
case 44:
return myNotEqualsExpression_BehaviorDescriptor;
case 45:
return myWhileStatement_BehaviorDescriptor;
case 46:
return myParenthesizedExpression_BehaviorDescriptor;
case 47:
return myAndExpression_BehaviorDescriptor;
case 48:
return myOrExpression_BehaviorDescriptor;
case 49:
return myStaticMethodCall_BehaviorDescriptor;
case 50:
return myStaticMethodDeclaration_BehaviorDescriptor;
case 51:
return myGreaterThanExpression_BehaviorDescriptor;
case 52:
return myLessThanExpression_BehaviorDescriptor;
case 53:
return myNotExpression_BehaviorDescriptor;
case 54:
return myBinaryOperation_BehaviorDescriptor;
case 55:
return myBreakStatement_BehaviorDescriptor;
case 56:
return myContinueStatement_BehaviorDescriptor;
case 57:
return myBlockStatement_BehaviorDescriptor;
case 58:
return myEnumClass_BehaviorDescriptor;
case 59:
return myEnumConstantDeclaration_BehaviorDescriptor;
case 60:
return myEnumConstantReference_BehaviorDescriptor;
case 61:
return myMulExpression_BehaviorDescriptor;
case 62:
return myDivExpression_BehaviorDescriptor;
case 63:
return myConceptFunctionParameter_BehaviorDescriptor;
case 64:
return myClassifier_BehaviorDescriptor;
case 65:
return myClassifierType_BehaviorDescriptor;
case 66:
return myInterface_BehaviorDescriptor;
case 67:
return myTypeVariableDeclaration_BehaviorDescriptor;
case 68:
return myGenericDeclaration_BehaviorDescriptor;
case 69:
return myTypeVariableReference_BehaviorDescriptor;
case 70:
return myFloatingPointConstant_BehaviorDescriptor;
case 71:
return myClassifierClassExpression_BehaviorDescriptor;
case 72:
return myConceptFunction_BehaviorDescriptor;
case 73:
return myForeachStatement_BehaviorDescriptor;
case 74:
return myAbstractForStatement_BehaviorDescriptor;
case 75:
return myForStatement_BehaviorDescriptor;
case 76:
return myGenericNewExpression_BehaviorDescriptor;
case 77:
return myClosure_BehaviorDescriptor;
case 78:
return myClosureParameterReference_BehaviorDescriptor;
case 79:
return myGreaterThanOrEqualsExpression_BehaviorDescriptor;
case 80:
return myRemExpression_BehaviorDescriptor;
case 81:
return myLessThanOrEqualsExpression_BehaviorDescriptor;
case 82:
return myTryStatement_BehaviorDescriptor;
case 83:
return myAbstractLoopStatement_BehaviorDescriptor;
case 84:
return myTernaryOperatorExpression_BehaviorDescriptor;
case 85:
return mySwitchStatement_BehaviorDescriptor;
case 86:
return mySwitchCase_BehaviorDescriptor;
case 87:
return myPrimitiveType_BehaviorDescriptor;
case 88:
return myTryCatchStatement_BehaviorDescriptor;
case 89:
return myCatchClause_BehaviorDescriptor;
case 90:
return myThrowStatement_BehaviorDescriptor;
case 91:
return myRemarkStatement_BehaviorDescriptor;
case 92:
return mySynchronizedStatement_BehaviorDescriptor;
case 93:
return myAnonymousClass_BehaviorDescriptor;
case 94:
return myWildCardType_BehaviorDescriptor;
case 95:
return myLowerBoundType_BehaviorDescriptor;
case 96:
return myUpperBoundType_BehaviorDescriptor;
case 97:
return myLocalStaticFieldReference_BehaviorDescriptor;
case 98:
return myLocalStaticMethodCall_BehaviorDescriptor;
case 99:
return myArrayAccessExpression_BehaviorDescriptor;
case 100:
return myCommentedStatementsBlock_BehaviorDescriptor;
case 101:
return myDoWhileStatement_BehaviorDescriptor;
case 102:
return myClassifierMember_BehaviorDescriptor;
case 103:
return myIVisible_BehaviorDescriptor;
case 104:
return myThisConstructorInvocation_BehaviorDescriptor;
case 105:
return myHexIntegerLiteral_BehaviorDescriptor;
case 106:
return myIntegerLiteral_BehaviorDescriptor;
case 107:
return myAnnotation_BehaviorDescriptor;
case 108:
return myAnnotationMethodDeclaration_BehaviorDescriptor;
case 109:
return myAnnotationInstance_BehaviorDescriptor;
case 110:
return myHasAnnotation_BehaviorDescriptor;
case 111:
return myAnnotationInstanceValue_BehaviorDescriptor;
case 112:
return myIMemberContainer_BehaviorDescriptor;
case 113:
return myDotExpression_BehaviorDescriptor;
case 114:
return myIOperation_BehaviorDescriptor;
case 115:
return myFieldReferenceOperation_BehaviorDescriptor;
case 116:
return myIStatementListContainer_BehaviorDescriptor;
case 117:
return myCharConstant_BehaviorDescriptor;
case 118:
return myTypeDerivable_BehaviorDescriptor;
case 119:
return myProperty_BehaviorDescriptor;
case 120:
return myPropertyImplementation_BehaviorDescriptor;
case 121:
return myDefaultPropertyImplementation_BehaviorDescriptor;
case 122:
return myPropertyReference_BehaviorDescriptor;
case 123:
return myCustomPropertyImplementation_BehaviorDescriptor;
case 124:
return myGetAccessor_BehaviorDescriptor;
case 125:
return mySetAccessor_BehaviorDescriptor;
case 126:
return myDefaultSetAccessor_BehaviorDescriptor;
case 127:
return myInstanceMethodCallOperation_BehaviorDescriptor;
case 128:
return myIMethodCall_BehaviorDescriptor;
case 129:
return myIInternalType_BehaviorDescriptor;
case 130:
return myElsifClause_BehaviorDescriptor;
case 131:
return myInstanceInitializer_BehaviorDescriptor;
case 132:
return myArrayLengthOperation_BehaviorDescriptor;
case 133:
return myIValidIdentifier_BehaviorDescriptor;
case 134:
return myClassCreator_BehaviorDescriptor;
case 135:
return myPostfixIncrementExpression_BehaviorDescriptor;
case 136:
return myPostfixDecrementExpression_BehaviorDescriptor;
case 137:
return myBaseAssignmentExpression_BehaviorDescriptor;
case 138:
return myVariableArityType_BehaviorDescriptor;
case 139:
return myIExtractMethodAvailable_BehaviorDescriptor;
case 140:
return myStaticInitializer_BehaviorDescriptor;
case 141:
return myIStaticContainerForMethods_BehaviorDescriptor;
case 142:
return myIVariableAssignment_BehaviorDescriptor;
case 143:
return myUsingStatement_BehaviorDescriptor;
case 144:
return myBitwiseAndExpression_BehaviorDescriptor;
case 145:
return myBitwiseOrExpression_BehaviorDescriptor;
case 146:
return myBitwiseXorExpression_BehaviorDescriptor;
case 147:
return myIBLDeprecatable_BehaviorDescriptor;
case 148:
return myStringType_BehaviorDescriptor;
case 149:
return myNPENotEqualsExpression_BehaviorDescriptor;
case 150:
return myNPEEqualsExpression_BehaviorDescriptor;
case 151:
return myBaseStringOperation_BehaviorDescriptor;
case 152:
return myIParameter_BehaviorDescriptor;
case 153:
return myShiftLeftExpression_BehaviorDescriptor;
case 154:
return myShiftRightExpression_BehaviorDescriptor;
case 155:
return myCommentedStatement_BehaviorDescriptor;
case 156:
return myTypeAnnotable_BehaviorDescriptor;
case 157:
return myIContainsStatementList_BehaviorDescriptor;
case 158:
return myILocalVariableElement_BehaviorDescriptor;
case 159:
return myILocalVariableElementList_BehaviorDescriptor;
case 160:
return myIMethodLike_BehaviorDescriptor;
case 161:
return myPrefixIncrementExpression_BehaviorDescriptor;
case 162:
return myPrefixDecrementExpression_BehaviorDescriptor;
case 163:
return myAbstractUnaryNumberOperation_BehaviorDescriptor;
case 164:
return myConstructorInvocationStatement_BehaviorDescriptor;
case 165:
return myShiftRightUnsignedExpression_BehaviorDescriptor;
case 166:
return myIVariableReference_BehaviorDescriptor;
case 167:
return myIIncompleteParen_BehaviorDescriptor;
case 168:
return myPlaceholderMember_BehaviorDescriptor;
case 169:
return myIBinaryLike_BehaviorDescriptor;
case 170:
return myUnknownLocalCall_BehaviorDescriptor;
case 171:
return myUnknownDotCall_BehaviorDescriptor;
case 172:
return myPropertyValueReference_BehaviorDescriptor;
case 173:
return myLocalInstanceMethodCall_BehaviorDescriptor;
case 174:
return myILocalDeclaration_BehaviorDescriptor;
case 175:
return myILocalReference_BehaviorDescriptor;
case 176:
return myUnknownNew_BehaviorDescriptor;
case 177:
return myIncompleteMemberDeclaration_BehaviorDescriptor;
case 178:
return myITryCatchStatement_BehaviorDescriptor;
case 179:
return myIGenericType_BehaviorDescriptor;
case 180:
return myIConditional_BehaviorDescriptor;
case 181:
return myLongLiteral_BehaviorDescriptor;
case 182:
return myCustomSetterPropertyImplementation_BehaviorDescriptor;
case 183:
return myIWillBeClassifier_BehaviorDescriptor;
case 184:
return myFloatingPointFloatConstant_BehaviorDescriptor;
case 185:
return myLocalPropertyReference_BehaviorDescriptor;
case 186:
return myJavaImports_BehaviorDescriptor;
case 187:
return mySingleLineComment_BehaviorDescriptor;
case 188:
return myCommentPart_BehaviorDescriptor;
case 189:
return myTextCommentPart_BehaviorDescriptor;
case 190:
return myTokens_BehaviorDescriptor;
case 191:
return myIClassifier_BehaviorDescriptor;
case 192:
return myIClassifierMember_BehaviorDescriptor;
case 193:
return myIClassifierType_BehaviorDescriptor;
case 194:
return myLocalInstanceFieldReference_BehaviorDescriptor;
case 195:
return myLocalMethodCall_BehaviorDescriptor;
case 196:
return myUnaryMinus_BehaviorDescriptor;
case 197:
return myIYetUnresolved_BehaviorDescriptor;
case 198:
return myITypeApplicable_BehaviorDescriptor;
case 199:
return myUnknownNameRef_BehaviorDescriptor;
case 200:
return myUnknownConsCall_BehaviorDescriptor;
default :
return null;
}
}
