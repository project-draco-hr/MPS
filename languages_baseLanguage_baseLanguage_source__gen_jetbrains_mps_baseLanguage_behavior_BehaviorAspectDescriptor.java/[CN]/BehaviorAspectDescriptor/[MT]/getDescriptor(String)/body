{
switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0a,fqName)) {
case 22:
    return new AssignmentExpression_BehaviorDescriptor();
case 38:
  return new ClassConcept_BehaviorDescriptor();
case 120:
return new ParameterDeclaration_BehaviorDescriptor();
case 149:
return new StatementList_BehaviorDescriptor();
case 63:
return new EqualsExpression_BehaviorDescriptor();
case 65:
return new ExpressionStatement_BehaviorDescriptor();
case 147:
return new Statement_BehaviorDescriptor();
case 78:
return new IfStatement_BehaviorDescriptor();
case 82:
return new InstanceMethodDeclaration_BehaviorDescriptor();
case 84:
return new IntegerConstant_BehaviorDescriptor();
case 98:
return new LocalVariableDeclaration_BehaviorDescriptor();
case 99:
return new LocalVariableDeclarationStatement_BehaviorDescriptor();
case 100:
return new LocalVariableReference_BehaviorDescriptor();
case 102:
return new LongType_BehaviorDescriptor();
case 107:
return new MinusExpression_BehaviorDescriptor();
case 121:
return new ParameterReference_BehaviorDescriptor();
case 125:
return new PlusExpression_BehaviorDescriptor();
case 139:
return new ReturnStatement_BehaviorDescriptor();
case 185:
return new VoidType_BehaviorDescriptor();
case 150:
return new StaticFieldDeclaration_BehaviorDescriptor();
case 159:
return new SuperConstructorInvocation_BehaviorDescriptor();
case 155:
return new StringLiteral_BehaviorDescriptor();
case 151:
return new StaticFieldReference_BehaviorDescriptor();
case 145:
return new ShortType_BehaviorDescriptor();
case 114:
return new NullLiteral_BehaviorDescriptor();
case 85:
return new IntegerType_BehaviorDescriptor();
case 68:
return new FloatType_BehaviorDescriptor();
case 56:
return new DoubleType_BehaviorDescriptor();
case 37:
return new CharType_BehaviorDescriptor();
case 33:
return new ByteType_BehaviorDescriptor();
case 31:
return new BooleanType_BehaviorDescriptor();
case 19:
return new ArrayType_BehaviorDescriptor();
case 34:
return new CastExpression_BehaviorDescriptor();
case 160:
return new SuperMethodCall_BehaviorDescriptor();
case 112:
return new NotEqualsExpression_BehaviorDescriptor();
case 186:
return new WhileStatement_BehaviorDescriptor();
case 122:
return new ParenthesizedExpression_BehaviorDescriptor();
case 4:
return new AndExpression_BehaviorDescriptor();
case 119:
return new OrExpression_BehaviorDescriptor();
case 153:
return new StaticMethodCall_BehaviorDescriptor();
case 154:
return new StaticMethodDeclaration_BehaviorDescriptor();
case 83:
return new InstanceOfExpression_BehaviorDescriptor();
case 113:
return new NotExpression_BehaviorDescriptor();
case 32:
return new BreakStatement_BehaviorDescriptor();
case 46:
return new ContinueStatement_BehaviorDescriptor();
case 29:
return new BlockStatement_BehaviorDescriptor();
case 58:
return new EnumClass_BehaviorDescriptor();
case 59:
return new EnumConstantDeclaration_BehaviorDescriptor();
case 60:
return new EnumConstantReference_BehaviorDescriptor();
case 109:
return new MulExpression_BehaviorDescriptor();
case 53:
return new DivExpression_BehaviorDescriptor();
case 41:
return new ClassifierType_BehaviorDescriptor();
case 86:
return new Interface_BehaviorDescriptor();
case 172:
return new TypeVariableDeclaration_BehaviorDescriptor();
case 173:
return new TypeVariableReference_BehaviorDescriptor();
case 40:
return new ClassifierClassExpression_BehaviorDescriptor();
case 72:
return new ForeachStatement_BehaviorDescriptor();
case 71:
return new ForStatement_BehaviorDescriptor();
case 73:
return new GenericNewExpression_BehaviorDescriptor();
case 135:
return new PublicVisibility_BehaviorDescriptor();
case 131:
return new PrivateVisibility_BehaviorDescriptor();
case 134:
return new ProtectedVisibility_BehaviorDescriptor();
case 42:
return new ClosureParameterReference_BehaviorDescriptor();
case 171:
return new TryStatement_BehaviorDescriptor();
case 16:
return new ArrayCreatorWithInitializer_BehaviorDescriptor();
case 21:
return new AssertStatement_BehaviorDescriptor();
case 167:
return new ThisExpression_BehaviorDescriptor();
case 164:
return new TernaryOperatorExpression_BehaviorDescriptor();
case 162:
return new SwitchStatement_BehaviorDescriptor();
case 161:
return new SwitchCase_BehaviorDescriptor();
case 170:
return new TryCatchStatement_BehaviorDescriptor();
case 35:
return new CatchClause_BehaviorDescriptor();
case 168:
return new ThrowStatement_BehaviorDescriptor();
case 138:
return new RemarkStatement_BehaviorDescriptor();
case 163:
return new SynchronizedStatement_BehaviorDescriptor();
case 10:
return new AnonymousClass_BehaviorDescriptor();
case 187:
return new WildCardType_BehaviorDescriptor();
case 105:
return new LowerBoundType_BehaviorDescriptor();
case 178:
return new UpperBoundType_BehaviorDescriptor();
case 97:
return new LocalStaticMethodCall_BehaviorDescriptor();
case 12:
return new ArrayAccessExpression_BehaviorDescriptor();
case 44:
return new CommentedStatementsBlock_BehaviorDescriptor();
case 54:
return new DoWhileStatement_BehaviorDescriptor();
case 181:
return new VarType_BehaviorDescriptor();
case 166:
return new ThisConstructorInvocation_BehaviorDescriptor();
case 11:
return new AnonymousClassCreator_BehaviorDescriptor();
case 15:
return new ArrayCreator_BehaviorDescriptor();
case 51:
return new DimensionExpression_BehaviorDescriptor();
case 5:
return new Annotation_BehaviorDescriptor();
case 9:
return new AnnotationMethodDeclaration_BehaviorDescriptor();
case 6:
return new AnnotationInstance_BehaviorDescriptor();
case 7:
return new AnnotationInstanceExpression_BehaviorDescriptor();
case 8:
return new AnnotationInstanceValue_BehaviorDescriptor();
case 18:
return new ArrayLiteral_BehaviorDescriptor();
case 55:
return new DotExpression_BehaviorDescriptor();
case 67:
return new FieldReferenceOperation_BehaviorDescriptor();
case 132:
return new Property_BehaviorDescriptor();
case 49:
return new DefaultPropertyImplementation_BehaviorDescriptor();
case 133:
return new PropertyReference_BehaviorDescriptor();
case 47:
return new CustomPropertyImplementation_BehaviorDescriptor();
case 74:
return new GetAccessor_BehaviorDescriptor();
case 141:
return new SetAccessor_BehaviorDescriptor();
case 180:
return new ValueParameter_BehaviorDescriptor();
case 48:
return new DefaultGetAccessor_BehaviorDescriptor();
case 50:
return new DefaultSetAccessor_BehaviorDescriptor();
case 81:
return new InstanceMethodCallOperation_BehaviorDescriptor();
case 115:
return new NullType_BehaviorDescriptor();
case 57:
return new ElsifClause_BehaviorDescriptor();
case 80:
return new InstanceInitializer_BehaviorDescriptor();
case 17:
return new ArrayLengthOperation_BehaviorDescriptor();
case 39:
return new ClassCreator_BehaviorDescriptor();
case 127:
return new PostfixIncrementExpression_BehaviorDescriptor();
case 126:
return new PostfixDecrementExpression_BehaviorDescriptor();
case 124:
return new PlusAssignmentExpression_BehaviorDescriptor();
case 106:
return new MinusAssignmentExpression_BehaviorDescriptor();
case 182:
return new VariableArityType_BehaviorDescriptor();
case 152:
return new StaticInitializer_BehaviorDescriptor();
case 20:
return new AsExpression_BehaviorDescriptor();
case 179:
return new UsingStatement_BehaviorDescriptor();
case 62:
return new EnumValuesExpression_BehaviorDescriptor();
case 28:
return new BitwiseXorExpression_BehaviorDescriptor();
case 61:
return new EnumValueOfExpression_BehaviorDescriptor();
case 27:
return new BitwiseOrExpression_BehaviorDescriptor();
case 25:
return new BitwiseAndExpression_BehaviorDescriptor();
case 156:
return new StringType_BehaviorDescriptor();
case 111:
return new NPENotEqualsExpression_BehaviorDescriptor();
case 110:
return new NPEEqualsExpression_BehaviorDescriptor();
case 87:
return new IsEmptyOperation_BehaviorDescriptor();
case 88:
return new IsNotEmptyOperation_BehaviorDescriptor();
case 158:
return new SubstringExpression_BehaviorDescriptor();
case 169:
return new TrimOperation_BehaviorDescriptor();
case 26:
return new BitwiseNotExpression_BehaviorDescriptor();
case 43:
return new CommentedStatement_BehaviorDescriptor();
case 129:
return new PrefixIncrementExpression_BehaviorDescriptor();
case 128:
return new PrefixDecrementExpression_BehaviorDescriptor();
case 1:
return new AbstractUnaryNumberOperation_BehaviorDescriptor();
case 23:
return new BLBottomType_BehaviorDescriptor();
case 24:
return new BaseVariableDeclaration_BehaviorDescriptor();
case 103:
return new LoopLabel_BehaviorDescriptor();
case 104:
return new LoopLabelReference_BehaviorDescriptor();
case 108:
return new MulAssignmentExpression_BehaviorDescriptor();
case 52:
return new DivAssignmentExpression_BehaviorDescriptor();
case 136:
return new RemAssignmentExpression_BehaviorDescriptor();
case 118:
return new OrAssignmentExpression_BehaviorDescriptor();
case 3:
return new AndAssignmentExpression_BehaviorDescriptor();
case 188:
return new XorAssignmentExpression_BehaviorDescriptor();
case 89:
return new LeftShiftAssignmentExpression_BehaviorDescriptor();
case 140:
return new RightShiftAssignmentExpression_BehaviorDescriptor();
case 2:
return new AdditionalForLoopVariable_BehaviorDescriptor();
case 0:
return new AbstractClassifierReference_BehaviorDescriptor();
case 79:
return new ImplicitAnnotationInstanceValue_BehaviorDescriptor();
case 130:
return new PrimitiveClassExpression_BehaviorDescriptor();
case 93:
return new LocalInstanceMethodCall_BehaviorDescriptor();
case 14:
return new ArrayCloneOperation_BehaviorDescriptor();
case 176:
return new UnresolvedNameReference_BehaviorDescriptor();
case 157:
return new StubStatementList_BehaviorDescriptor();
case 117:
return new OperationAssignmentExpression_BehaviorDescriptor();
case 64:
return new EscapeOperation_BehaviorDescriptor();
case 175:
return new UndefinedType_BehaviorDescriptor();
case 177:
return new UnsignedRightShiftAssignmentExpression_BehaviorDescriptor();
case 95:
return new LocalPropertyReference_BehaviorDescriptor();
case 13:
return new ArrayClassExpression_BehaviorDescriptor();
case 66:
return new FieldDeclaration_BehaviorDescriptor();
case 45:
return new ConstructorDeclaration_BehaviorDescriptor();
case 96:
return new LocalStaticFieldReference_BehaviorDescriptor();
case 123:
return new PlaceholderMethodDeclaration_BehaviorDescriptor();
case 165:
return new TextCommentPart_BehaviorDescriptor();
case 148:
return new StatementCommentPart_BehaviorDescriptor();
case 146:
return new SingleLineComment_BehaviorDescriptor();
case 92:
return new LocalInstanceFieldReference_BehaviorDescriptor();
case 142:
return new ShiftLeftExpression_BehaviorDescriptor();
case 143:
return new ShiftRightExpression_BehaviorDescriptor();
case 144:
return new ShiftRightUnsignedExpression_BehaviorDescriptor();
case 137:
return new RemExpression_BehaviorDescriptor();
case 90:
return new LessThanExpression_BehaviorDescriptor();
case 91:
return new LessThanOrEqualsExpression_BehaviorDescriptor();
case 76:
return new GreaterThanOrEqualsExpression_BehaviorDescriptor();
case 75:
return new GreaterThanExpression_BehaviorDescriptor();
case 174:
return new UnaryMinus_BehaviorDescriptor();
case 77:
return new HexIntegerLiteral_BehaviorDescriptor();
case 101:
return new LongLiteral_BehaviorDescriptor();
case 70:
return new FloatingPointFloatConstant_BehaviorDescriptor();
case 69:
return new FloatingPointConstant_BehaviorDescriptor();
case 30:
return new BooleanConstant_BehaviorDescriptor();
case 36:
return new CharConstant_BehaviorDescriptor();
case 116:
return new Number_BehaviorDescriptor();
case 183:
return new VariableDeclaration_BehaviorDescriptor();
case 184:
return new VariableReference_BehaviorDescriptor();
case 94:
return new LocalMethodCall_BehaviorDescriptor();
default :
return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
}
}
