{
  String pattern=myPatternEditor.getPattern();
  String matchingText;
  try {
    matchingText=action.getVisibleMatchingText(pattern);
  }
 catch (  Throwable t) {
    matchingText=EXCEPTION_WAS_THROWN_TEXT;
  }
  String descriptionText;
  try {
    descriptionText=action.getDescriptionText(pattern);
  }
 catch (  Throwable t) {
    descriptionText=EXCEPTION_WAS_THROWN_TEXT;
  }
  int itemWidth=0;
  int itemHeight=0;
  try {
    Icon icon=getIcon(action,pattern);
    itemWidth+=icon.getIconWidth();
    itemHeight+=icon.getIconHeight();
  }
 catch (  Throwable t) {
    LOG.error(null,t);
  }
  FontMetrics fontMetrics=FontRegistry.getInstance().getFontMetrics(EditorSettings.getInstance().getDefaultEditorFont());
  itemWidth+=myLeft.getIconTextGap();
  if (matchingText != null) {
    itemWidth+=fontMetrics.stringWidth(matchingText);
  }
  itemWidth+=HORIZONTAL_GAP;
  if (descriptionText != null) {
    itemWidth+=fontMetrics.stringWidth(descriptionText);
  }
  itemHeight=Math.max(itemHeight,fontMetrics.getHeight());
  return new Dimension(itemWidth,itemHeight);
}
