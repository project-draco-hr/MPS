{
  SubstituteAction action=(SubstituteAction)value;
  String pattern=mySubstituteChooser.getPatternEditor().getPattern();
  if (!myLightweightMode) {
    try {
      Icon icon=getIcon(action,pattern);
      myLeft.setIcon(icon);
    }
 catch (    Throwable t) {
      LOG.error(null,t);
    }
  }
  try {
    int style=getStyle(action);
    if (myOldStyle != style) {
      Font font=EditorSettings.getInstance().getDefaultEditorFont().deriveFont(style);
      myLeft.setFont(font);
      myRight.setFont(font);
      myOldStyle=style;
    }
  }
 catch (  Throwable t) {
    LOG.error(null,t);
  }
  try {
    if (!isSelected) {
      myLeft.setText(SubstituteActionUtil.createText(action,pattern,STRING_HIGHLIGHT_COLOR));
    }
 else {
      myLeft.setText(SubstituteActionUtil.createText(action,pattern,STRING_SELECTION_HIGHLIGHT_COLOR));
    }
  }
 catch (  Throwable t) {
    myLeft.setText(EXCEPTION_WAS_THROWN_TEXT);
    LOG.error(null,t);
  }
  try {
    myRight.setText(action.getDescriptionText(pattern));
  }
 catch (  Throwable t) {
    myRight.setText(EXCEPTION_WAS_THROWN_TEXT);
    LOG.error(null,t);
  }
  if (isSelected) {
    setBackground(list.getSelectionBackground());
    setForeground(list.getSelectionForeground());
    myLeft.setForeground(list.getSelectionForeground());
    myRight.setForeground(list.getSelectionForeground());
  }
 else {
    setBackground(list.getBackground());
    setForeground(list.getForeground());
    myLeft.setForeground(list.getForeground());
    myRight.setForeground(list.getForeground());
  }
  Dimension preferredSize=getPreferredSize();
  if (myMaxHeight < preferredSize.height || myMaxWidth < preferredSize.width) {
    myMaxWidth=Math.max(myMaxWidth,preferredSize.width);
    myMaxHeight=Math.max(myMaxHeight,preferredSize.height);
    mySubstituteChooser.getPopupWindow().updateListDimension(new Dimension(myMaxWidth,myMaxHeight));
  }
}
