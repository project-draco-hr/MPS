{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("elementDeclaration",new BaseReferenceConstraintsDescriptor("elementDeclaration",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          SNode contextBuilder=Builder_Behavior.getContextBuilder_7057666463730366732(_context.getEnclosingNode());
          if (contextBuilder == null) {
            return new ModelAndImportedModelsScope(_context.getModel(),false,operationContext.getScope());
          }
 else           if (SNodeOperations.isInstanceOf(contextBuilder,"jetbrains.mps.xmlQuery.structure.ElementBuilder")) {
            return new SimpleSearchScope(ElementUtil.getElementDeclarations(SLinkOperations.getTarget(SNodeOperations.cast(contextBuilder,"jetbrains.mps.xmlQuery.structure.ElementBuilder"),"elementDeclaration",false),_context.getEnclosingNode(),operationContext.getScope()));
          }
 else {
            return new EmptySearchScope();
          }
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_4i0ku3_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
