{
  Set<SReference> result=new HashSet<SReference>();
  for (  SNode node : nodes) {
    Set<VirtualFile> scopeFiles=getScopeFiles(models);
    String nodeId=node.getId();
    Set<VirtualFile> candidates=getCandidates(scopeFiles,nodeId);
    for (    VirtualFile file : candidates) {
      SModelDescriptor sm=SModelRepository.getInstance().findModel(VirtualFileUtils.toIFile(file));
      if (sm == null)       continue;
      result.addAll(SearchType.USAGES.findInChanged(Collections.singleton(node),Collections.singleton(sm),null));
    }
    if (!callback.compute())     return result;
  }
  return result;
}
