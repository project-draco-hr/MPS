{
  Set<SNode> result=new HashSet<SNode>();
  for (  SNode concept : nodes) {
    Set<VirtualFile> candidates=new HashSet<VirtualFile>();
    final Set<VirtualFile> scopeFiles=getScopeFiles(models);
    if (concept != null)     candidates.addAll(getCandidates(scopeFiles,concept.getName()));
    if (!isExact) {
      Set<String> fqNames=LanguageHierarchyCache.getInstance().getAllDescendantsOfConcept(NameUtil.nodeFQName(concept));
      for (      String fqName : fqNames) {
        candidates.addAll(getCandidates(scopeFiles,fqName.substring(fqName.lastIndexOf('.') + 1)));
      }
    }
    for (    VirtualFile file : candidates) {
      SModelDescriptor sm=SModelRepository.getInstance().findModel(VirtualFileUtils.toIFile(file));
      if (sm == null)       continue;
      SearchType<SNode> st=isExact ? SearchType.EXACT_INSTANCES : SearchType.INSTANCES;
      result.addAll(st.findInChanged(Collections.singleton(concept),Collections.singleton(sm),null));
    }
    if (!callback.compute())     return result;
  }
  return result;
}
