{
  return Arrays.asList(myConceptAnalysisDirection,myConceptAnalyzer,myConceptAnalyzerConstructorParameter,myConceptAnalyzerConstructorParameterReference,myConceptAnalyzerFunFunction,myConceptAnalyzerFunParameterInput,myConceptAnalyzerFunParameterProgramState,myConceptAnalyzerFunParameterStateValues,myConceptAnalyzerFunctionResultType,myConceptAnalyzerInitialFunction,myConceptAnalyzerMergeFunction,myConceptAnalyzerMergeParameterInput,myConceptAnalyzerParameterProgram,myConceptAnalyzerRunnerAnalyzeOperation,myConceptAnalyzerRunnerClassKeeper,myConceptAnalyzerRunnerCreator,myConceptAnalyzerRunnerType,myConceptAnalyzerTypeAnnotation,myConceptApplicableCondition,myConceptApplicableNodeReference,myConceptBackwardDirection,myConceptConceptCondition,myConceptCustomInstructionsContainer,myConceptCustomInstructionsContainerReference,myConceptEmitInstruction,myConceptForwardDirection,myConceptInsertAfterPosition,myConceptInsertBeforePosition,myConceptInsertPosition,myConceptInstruction,myConceptInstructionClassKeeper,myConceptInstructionParameter,myConceptInstructionReference,myConceptIsOperation,myConceptPatternCondition,myConceptProgramParameter,myConceptRule,myConceptRuleReference);
}
