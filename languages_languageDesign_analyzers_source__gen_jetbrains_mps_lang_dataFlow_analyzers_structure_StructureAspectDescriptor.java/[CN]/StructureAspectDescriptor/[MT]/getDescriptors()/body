{
  return Arrays.asList(myConceptAnalysisDirection,myConceptAnalyzer,myConceptAnalyzerFunFunction,myConceptAnalyzerFunParameterInput,myConceptAnalyzerFunParameterProgramState,myConceptAnalyzerFunctionResultType,myConceptAnalyzerInitialFunction,myConceptAnalyzerMergeFunction,myConceptAnalyzerMergeParameterInput,myConceptAnalyzerParameterProgram,myConceptAnalyzerRunnerAnalyzeOperation,myConceptAnalyzerRunnerCreator,myConceptAnalyzerRunnerType,myConceptApplicableCondition,myConceptApplicableNodeReference,myConceptBackwardDirection,myConceptConceptCondition,myConceptEmitInstruction,myConceptForwardDirection,myConceptInsertAfterPosition,myConceptInsertBeforePosition,myConceptInsertPosition,myConceptInstruction,myConceptInstructionClassKeeper,myConceptInstructionParameter,myConceptInstructionReference,myConceptIsOperation,myConceptPatternCondition,myConceptRule,myConceptRuleReference);
}
