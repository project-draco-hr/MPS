{
  SNode otherThanNull=NullableUtil.getOtherThanNull(node);
  if (otherThanNull == null) {
    return;
  }
  if (!((SNodeOperations.isInstanceOf(SNodeOperations.getParent(node),MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x3ac89e1b122cd5c2L,"jetbrains.mps.baseLanguage.structure.IConditional"))))) {
    return;
  }
  NextNodeKeeper nextNodeKeeper=BehaviorReflection.invokeVirtual(NextNodeKeeper.class,SNodeOperations.cast(SNodeOperations.getParent(node),MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x3ac89e1b122cd5c2L,"jetbrains.mps.baseLanguage.structure.IConditional")),"virtual_getNextNode_4235809288648213009",new Object[]{node,true});
  if (nextNodeKeeper != null && nextNodeKeeper.getNextNode() != null) {
    if (nextNodeKeeper.willJump()) {
{
        Object object=node;
        if (((Program)o).contains(object)) {
          boolean before=false;
          int position=((Program)(o)).getEnd(object);
          Instruction instruction=new notNullInstruction(otherThanNull);
          instruction.setRuleReference("r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/4235809288651583316");
          instruction.setSource(node);
          ((Program)(o)).insert(instruction,position,true,before);
        }
      }
    }
 else {
      if (nextNodeKeeper.isBefore()) {
{
          Object object=nextNodeKeeper.getNextNode();
          if (((Program)o).contains(object)) {
            boolean before=true;
            int position=((Program)(o)).getStart(nextNodeKeeper.getNextNode());
            Instruction instruction=new notNullInstruction(otherThanNull);
            instruction.setRuleReference("r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/4235809288651583328");
            instruction.setSource(node);
            ((Program)(o)).insert(instruction,position,true,before);
          }
        }
      }
 else {
{
          Object object=nextNodeKeeper.getNextNode();
          if (((Program)o).contains(object)) {
            boolean before=false;
            int position=((Program)(o)).getEnd(object);
            Instruction instruction=new notNullInstruction(otherThanNull);
            instruction.setRuleReference("r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/4235809288651583340");
            instruction.setSource(node);
            ((Program)(o)).insert(instruction,position,true,before);
          }
        }
      }
    }
  }
  nextNodeKeeper=BehaviorReflection.invokeVirtual(NextNodeKeeper.class,SNodeOperations.cast(SNodeOperations.getParent(node),MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x3ac89e1b122cd5c2L,"jetbrains.mps.baseLanguage.structure.IConditional")),"virtual_getNextNode_4235809288648213009",new Object[]{node,false});
  if (nextNodeKeeper != null && nextNodeKeeper.getNextNode() != null) {
    if (nextNodeKeeper.willJump()) {
{
        Object object=node;
        if (((Program)o).contains(object)) {
          boolean before=false;
          int position=((Program)(o)).getEnd(object);
          Instruction instruction=new nullableInstruction(otherThanNull);
          instruction.setRuleReference("r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/4235809288651583371");
          instruction.setSource(node);
          ((Program)(o)).insert(instruction,position,true,before);
        }
      }
    }
 else {
      if (nextNodeKeeper.isBefore()) {
{
          Object object=nextNodeKeeper.getNextNode();
          if (((Program)o).contains(object)) {
            boolean before=true;
            int position=((Program)(o)).getStart(nextNodeKeeper.getNextNode());
            Instruction instruction=new nullableInstruction(otherThanNull);
            instruction.setRuleReference("r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/4235809288651583383");
            instruction.setSource(node);
            ((Program)(o)).insert(instruction,position,true,before);
          }
        }
      }
 else {
{
          Object object=nextNodeKeeper.getNextNode();
          if (((Program)o).contains(object)) {
            boolean before=false;
            int position=((Program)(o)).getEnd(object);
            Instruction instruction=new nullableInstruction(otherThanNull);
            instruction.setRuleReference("r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/4235809288651583395");
            instruction.setSource(node);
            ((Program)(o)).insert(instruction,position,true,before);
          }
        }
      }
    }
  }
}
