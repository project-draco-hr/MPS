{
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a,descriptor.getConceptFqName())) {
case 0:
    return new AbstractCommand_Editor();
case 1:
  return new AppendingOutputErrorRedirection_Editor();
case 2:
return new AppendingOutputRedirection_Editor();
case 3:
return new Argument_Editor();
case 4:
return new ArgumentList_Editor();
case 5:
return new ArgumentListReference_Editor();
case 6:
return new ArgumentReference_Editor();
case 7:
return new ArithmeticCommand_Editor();
case 8:
return new ArithmeticExpansion_Editor();
case 9:
return new AsyncTerminator_Editor();
case 10:
return new BaseAssingmentExpression_Editor();
case 11:
return new BaseCommandSubstitution_Editor();
case 12:
return new BaseVariableAssingment_Editor();
case 13:
return new BasedIntegerLiteral_Editor();
case 14:
return new BasicParameterExpansion_Editor();
case 15:
return new BinaryArithmeticExpression_Editor();
case 16:
return new BinaryConditionalExpression_Editor();
case 17:
return new BracketConditionalExpression_Editor();
case 18:
return new BracketExpression_Editor();
case 19:
return new CaseClause_Editor();
case 20:
return new CaseCommand_Editor();
case 21:
return new CaseTerminator_Editor();
case 22:
return new CombiningConditionalExpression_Editor();
case 23:
return new Command_Editor();
case 24:
return new CommandList_Editor();
case 25:
return new CommandTerminator_Editor();
case 26:
return new CommentedCommandList_Editor();
case 27:
return new CommentedFollowingCommandList_Editor();
case 28:
return new CommentedText_Editor();
case 29:
return new ConditionalCommand_Editor();
case 30:
return new ConditionalOperation_Editor();
case 31:
return new DecimalConstant_Editor();
case 32:
return new DuplicateInputFileDiscriptor_Editor();
case 33:
return new DuplicateOutputFileDiscriptor_Editor();
case 34:
return new ElifCommand_Editor();
case 35:
return new ExternalCommandCall_Editor();
case 36:
return new ExternalCommandDeclaration_Editor();
case 37:
return new FollowingCommandList_Editor();
case 38:
return new FollowingPipeline_Editor();
case 39:
return new ForCommand_Editor();
case 40:
return new ForeachCommand_Editor();
case 41:
return new FreeCommand_Editor();
case 42:
return new FunctionCallCommand_Editor();
case 43:
return new FunctionDeclaration_Editor();
case 44:
return new GeneralizedWord_Editor();
case 45:
return new GroupingCommand_Editor();
case 46:
return new HeadCommandList_Editor();
case 47:
return new HeadPipeline_Editor();
case 48:
return new HereDocumentRedirection_Editor();
case 49:
return new HereStringRedirection_Editor();
case 50:
return new HexIntegerLiteral_Editor();
case 51:
return new IfCommand_Editor();
case 52:
return new InputLines_Editor();
case 53:
return new InputRedirection_Editor();
case 54:
return new NotCommand_Editor();
case 55:
return new Option_Editor();
case 56:
return new OptionReference_Editor();
case 57:
return new OptionSet_Editor();
case 58:
return new OptionSetReference_Editor();
case 59:
return new OptionWithParam_Editor();
case 60:
return new OptionWithParamReference_Editor();
case 61:
return new OutputErrorRedirection_Editor();
case 62:
return new OutputRedirection_Editor();
case 63:
return new PostVariableExpression_Editor();
case 64:
return new PreVariableExpression_Editor();
case 65:
return new QuotedWord_Editor();
case 66:
return new QuotesCommandSubstitution_Editor();
case 67:
return new ReadingWritingRedirection_Editor();
case 68:
return new RedirectedCommand_Editor();
case 69:
return new SelectCommand_Editor();
case 70:
return new SemicolonTerminator_Editor();
case 71:
return new ShellScript_Editor();
case 72:
return new SimpleCommand_Editor();
case 73:
return new SimpleWord_Editor();
case 74:
return new StringConditionalExpression_Editor();
case 75:
return new TildeExpansion_Editor();
case 76:
return new UnaryArithmeticExpression_Editor();
case 77:
return new UnaryConditionalExpression_Editor();
case 78:
return new UntilLoopCommand_Editor();
case 79:
return new VariableNameDeclaration_Editor();
case 80:
return new VariableReference_Editor();
case 81:
return new WhileLoopCommand_Editor();
case 82:
return new WordList_Editor();
default :
}
return null;
}
