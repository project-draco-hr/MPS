{
  for (  Generator generator : generators) {
    myAllMappings.addAll(generator.getOwnMappings());
  }
  for (  MappingConfiguration mapping : myAllMappings) {
    if (!myPriorityMap.containsKey(mapping)) {
      myPriorityMap.put(mapping,new HashMap<MappingConfiguration,PriorityData>());
    }
  }
  for (  Generator generator : generators) {
    GeneratorDescriptor descriptor=(GeneratorDescriptor)generator.getModuleDescriptor();
    List<MappingPriorityRule> rules;
    if (descriptorWorkingCopy != null && descriptorWorkingCopy.getGeneratorUID().equals(descriptor.getGeneratorUID())) {
      rules=descriptorWorkingCopy.getPriorityRules();
    }
 else {
      rules=descriptor.getPriorityRules();
    }
    for (    MappingPriorityRule rule : rules) {
      processRule(rule,generator,ignoreGreaterPriMappings);
    }
  }
  for (  Pair<MappingPriorityRule,List<MappingConfiguration>> strictlyTogetherMappingData : myStrictlyTogetherMappings) {
    Map<MappingConfiguration,PriorityData> allGrtPriMappings=new HashMap<MappingConfiguration,PriorityData>();
    for (    MappingConfiguration strictlyTogetherMapping : strictlyTogetherMappingData.o2) {
      allGrtPriMappings.putAll(myPriorityMap.get(strictlyTogetherMapping));
    }
    for (    MappingConfiguration strictlyTogetherMapping : strictlyTogetherMappingData.o2) {
      Map<MappingConfiguration,PriorityData> grtPriMappings=myPriorityMap.get(strictlyTogetherMapping);
      for (      MappingConfiguration grtPriMappingToAdd : allGrtPriMappings.keySet()) {
        if (!grtPriMappings.containsKey(grtPriMappingToAdd)) {
          PriorityData priorityDataToAdd=allGrtPriMappings.get(grtPriMappingToAdd);
          PriorityData priorityDataUpdated=new PriorityData(priorityDataToAdd.isStrict,strictlyTogetherMappingData.o1);
          grtPriMappings.put(grtPriMappingToAdd,priorityDataUpdated);
        }
      }
    }
  }
  List<List<MappingConfiguration>> steps=createSteps();
  for (  Map<MappingConfiguration,PriorityData> grtPriMappings : myPriorityMap.values()) {
    for (    PriorityData priorityData : grtPriMappings.values()) {
      if (!myConflictingRules.contains(priorityData.causeRule)) {
        myConflictingRules.add(priorityData.causeRule);
      }
    }
  }
  return steps;
}
