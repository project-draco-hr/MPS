{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("enumMember",new BaseReferenceConstraintsDescriptor("enumMember",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          if (SNodeOperations.isInstanceOf(_context.getEnclosingNode(),"jetbrains.mps.lang.smodel.structure.Property_SetOperation") || SNodeOperations.isInstanceOf(_context.getEnclosingNode(),"jetbrains.mps.lang.smodel.structure.Property_HasValue_Enum")) {
            SNode datatype=SModelLanguageUtil.getDatatypeFromLeft_SPropertyAccess(SNodeOperations.cast(_context.getEnclosingNode(),"jetbrains.mps.lang.smodel.structure.SNodeOperation"));
            if (DataTypeDeclaration_Behavior.call_isEnum_1220268692373(datatype)) {
              return new SimpleSearchScope(SLinkOperations.getTargets(SNodeOperations.cast(datatype,"jetbrains.mps.lang.structure.structure.EnumerationDataTypeDeclaration"),"member",true));
            }
          }
          return null;
        }
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_38g9v_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
