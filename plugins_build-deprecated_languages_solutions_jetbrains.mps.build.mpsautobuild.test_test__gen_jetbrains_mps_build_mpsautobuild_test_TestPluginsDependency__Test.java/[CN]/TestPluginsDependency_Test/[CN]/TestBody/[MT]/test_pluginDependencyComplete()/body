{
  SNode layout=SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)","2235195415637073459");
  Map<IModule,SNode> modules=MapSequence.fromMap(new HashMap<IModule,SNode>());
  for (  SNode m : ListSequence.fromList(Layout_Behavior.call_getModules_1213877228340(layout)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return !(SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.packaging.structure.PluginModule"));
    }
  }
)) {
    MapSequence.fromMap(modules).put(Module_Behavior.call_getModule_1213877515148(m),m);
  }
  Map<SNode,Iterable<SNode>> missingPlugins=CheckFullDependencyUtil.checkFullPuginDependency(modules);
  StringBuffer sb=new StringBuffer();
  for (  SNode plugin : SetSequence.fromSet(MapSequence.fromMap(missingPlugins).keySet())) {
    String id=CheckFullDependencyUtil.getId(plugin);
    for (    SNode dependency : Sequence.fromIterable(MapSequence.fromMap(missingPlugins).get(plugin))) {
      sb.append("Plugin ");
      sb.append(id);
      sb.append(" should depend on plugin ");
      sb.append(CheckFullDependencyUtil.getId(dependency));
      sb.append("");
      sb.append("\n");
    }
  }
  Assert.assertTrue(sb.toString(),sb.length() == 0);
}
