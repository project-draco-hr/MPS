{
  myAdditionalInfoNeededButton=new ToggleAction("Additional node info","",Icons.INFO_ICON){
    private boolean myIsSelected=false;
    public boolean isSelected(    AnActionEvent e){
      return myIsSelected;
    }
    public void setSelected(    AnActionEvent e,    boolean state){
      myTree.setAdditionalInfoNeeded(state);
    }
  }
;
  myShowSearchedNodesButton=new ToggleAction("Show searched nodes","",Icons.SHOW_SEARCHED_ICON){
    public boolean isSelected(    AnActionEvent e){
      return myIsShowSearchedNodes;
    }
    public void setSelected(    AnActionEvent e,    boolean state){
      myIsShowSearchedNodes=state;
      myTree.setShowSearchedNodes(true);
      if (myIsShowSearchedNodes || myIsShowSearchedNodes != myGroupSearchedNodesButton.isSelected(null)) {
        myIsGroupSearchedNodes=myIsShowSearchedNodes;
      }
    }
  }
;
  myGroupSearchedNodesButton=new ToggleAction("Group searched nodes","",Icons.GROUP_SEARCHED_ICON){
    public boolean isSelected(    AnActionEvent e){
      return myIsGroupSearchedNodes;
    }
    public void setSelected(    AnActionEvent e,    boolean state){
      myIsGroupSearchedNodes=state;
      if (myIsGroupSearchedNodes) {
        myTree.startAdjusting();
        myTree.setGroupSearchedNodes(true);
        myIsShowSearchedNodes=true;
        myTree.finishAdjusting();
      }
 else {
        myTree.setGroupSearchedNodes(false);
      }
    }
  }
;
  myActions=new DefaultActionGroup();
  myActions.addAction(myAdditionalInfoNeededButton);
  myActions.addAction(myShowSearchedNodesButton);
  myActions.addAction(myGroupSearchedNodesButton);
}
