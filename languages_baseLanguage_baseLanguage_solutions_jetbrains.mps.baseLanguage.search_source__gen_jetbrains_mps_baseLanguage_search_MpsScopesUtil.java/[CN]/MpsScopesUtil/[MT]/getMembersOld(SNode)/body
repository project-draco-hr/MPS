{
  List<SNode> members=ListSequence.fromList(new ArrayList<SNode>());
  for (  SNode memberType : ListSequence.fromList(Arrays.asList(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.FieldDeclaration"),SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration"),SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration"),SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration"),SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration")))) {
    Scope scope=((Scope)BehaviorManager.getInstance().invoke(Object.class,classifier,"virtual_getMembers_2201875424515824604",new Class[]{SNode.class,SNode.class},memberType));
    for (    SNode member : scope.getAvailableElements(null)) {
      ListSequence.fromList(members).addElement(member);
    }
  }
  return members;
}
