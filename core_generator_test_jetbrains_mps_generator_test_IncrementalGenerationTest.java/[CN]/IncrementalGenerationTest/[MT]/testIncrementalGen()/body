{
  final MPSProject p=TestMain.loadProject(new File(System.getProperty("user.dir") + "/workbench/workbench.mpr"));
  final SModelDescriptor descr=findModel(p,"jetbrains.mps.ide.actions");
  GeneratorManager gm=p.getProject().getComponent(GeneratorManager.class);
  File tmpFile=File.createTempFile("mps-generator-caches","tmp");
  tmpFile.deleteOnExit();
  GenerationOptions options=GenerationOptions.getDefaults().rebuildAll(true).strictMode(true).incremental(true,new FileBasedGenerationCacheContainer(tmpFile)).create();
  IncrementalTestGenerationHandler generationHandler=new IncrementalTestGenerationHandler();
  gm.generateModels(Collections.singletonList(descr),ModuleContext.create(descr,p.getProject()),generationHandler,new EmptyProgressIndicator(),new TestMessageHandler(),options);
  assertNoDiff(generationHandler.getExistingContent(),generationHandler.getGeneratedContent());
  ThreadUtils.runInUIThreadAndWait(new Runnable(){
    @Override public void run(){
      ModelAccess.instance().runWriteActionInCommand(new Runnable(){
        @Override public void run(){
          SNode root=descr.getSModel().getRootByName("Generate");
          Assert.assertNotNull("No root in model",root);
          root.setName("GenerateIt");
        }
      }
,p.getProject());
    }
  }
);
  options=GenerationOptions.getDefaults().rebuildAll(false).strictMode(true).incremental(true,new FileBasedGenerationCacheContainer(tmpFile)).create();
  generationHandler=new IncrementalTestGenerationHandler();
  gm.generateModels(Collections.singletonList(descr),ModuleContext.create(descr,p.getProject()),generationHandler,new EmptyProgressIndicator(),new TestMessageHandler(),options);
  Map<String,String> incrementalGenerationResults=generationHandler.getGeneratedContent();
  assertDiff(generationHandler.getExistingContent(),incrementalGenerationResults,2);
  options=GenerationOptions.getDefaults().rebuildAll(true).strictMode(true).incremental(false,null).create();
  generationHandler=new IncrementalTestGenerationHandler(incrementalGenerationResults);
  gm.generateModels(Collections.singletonList(descr),ModuleContext.create(descr,p.getProject()),generationHandler,new EmptyProgressIndicator(),new TestMessageHandler(),options);
  assertNoDiff(generationHandler.getGeneratedContent(),incrementalGenerationResults);
  cleanup(p);
}
