{
  checkWriteAccess();
  monitor.start("Pre-loading modules...",1);
  try {
    Set<ReloadableModule> modulesPreLoad=filterModules(modules,myValidCondition);
    if (modulesPreLoad.isEmpty())     return Collections.emptySet();
    modulesPreLoad.addAll(myModulesWatcher.getResolvedDependencies(modulesPreLoad));
    modulesPreLoad=filterModules(modulesPreLoad,myUnloadedCondition,myValidCondition);
    if (modulesPreLoad.isEmpty())     return Collections.emptySet();
    monitor.advance(1);
    modulesPreLoad.addAll(myModulesWatcher.getResolvedBackDependencies(modulesPreLoad));
    modulesPreLoad=filterModules(modulesPreLoad,myUnloadedCondition,myMPSLoadableCondition,myValidCondition);
    if (modulesPreLoad.isEmpty())     return Collections.emptySet();
    Collection<ReloadableModule> modulesToNotify=myClassLoadersHolder.onLazyLoaded(modulesPreLoad);
    myBroadCaster.onLoad(modulesToNotify);
    return modulesToNotify;
  }
  finally {
    monitor.done();
  }
}
