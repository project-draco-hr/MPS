{
  final SNode patternNode=newNode(ourConcept1,"Root");
  patternNode.addChild(ourC1Child1,newNode(ourConcept1,"ChildOne"));
  patternNode.addChild(ourC1Child2,newNode(ourConcept2));
  final SProperty p=SNodeUtil.property_INamedConcept_name;
  ValueContainer vc=new ValueContainer();
  final NodeMatcher top=new NodeMatcher(vc);
  top.capture("TopNodeVar").property(p,"PropertyVar").child(ourC1Child1).at(0).capture("firstChild").property(p,"ChildName").done().done().child(ourC1Child2).capture("list");
  final SNode actualNode=newNode(ourConcept1,"ActualTopNodeName");
  actualNode.addChild(ourC1Child2,newNode(ourConcept2));
  actualNode.addChild(ourC1Child2,newNode(ourConcept2));
  actualNode.addChild(ourC1Child2,newNode(ourConcept2));
  final SNode actualChild=newNode(ourConcept1,"ActualChildOne");
  actualNode.addChild(ourC1Child1,actualChild);
  final boolean matched=top.match(patternNode,actualNode);
  myErrors.checkThat("Shall match",matched,Matchers.equalTo(true));
  final List<SNode> listValue=vc.getList("list");
  myErrors.checkThat(listValue,Matchers.notNullValue());
  if (listValue != null) {
    myErrors.checkThat(listValue.size(),Matchers.equalTo(3));
  }
  myErrors.checkThat(vc.getNode("firstChild"),Matchers.equalTo(actualChild));
  myErrors.checkThat(vc.getNode("TopNodeVar"),Matchers.equalTo(actualNode));
  myErrors.checkThat(vc.getProperty("PropertyVar"),Matchers.equalTo("ActualTopNodeName"));
  myErrors.checkThat(vc.getProperty("ChildName"),Matchers.equalTo("ActualChildOne"));
}
