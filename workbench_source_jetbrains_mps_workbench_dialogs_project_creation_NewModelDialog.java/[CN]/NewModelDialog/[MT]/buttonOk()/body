{
  if (!(myModelRoots.getSelectedItem() instanceof ModelRootWrapper)) {
    String message;
    if (myNamespace == null) {
      message="At least one module root should be added to module to create models in this module";
    }
 else {
      message="At least one module root with prefix " + myNamespace + " should be added to module to create models with this namespace";
    }
    setErrorText(message);
    return;
  }
  myResult=ModelAccess.instance().runWriteActionInCommand(new Computable<SModelDescriptor>(){
    public SModelDescriptor compute(){
      if (myModelName.getText().length() == 0) {
        setErrorText("Empty model's name isn't allowed");
        return null;
      }
      SModelFqName modelUID=new SModelFqName(myModelName.getText(),myModelStereotype.getSelectedItem().toString());
      if (SModelRepository.getInstance().getModelDescriptor(modelUID) != null) {
        setErrorText("Model with an uid " + myModelName.getText() + " already exists");
        return null;
      }
      ModelRootWrapper wrapper=(ModelRootWrapper)myModelRoots.getSelectedItem();
      if (!myModelName.getText().startsWith(wrapper.getNamespace())) {
        setErrorText("Model name should have a prefix " + wrapper.getNamespace());
        return null;
      }
      return myModule.createModel(modelUID,wrapper.getModelRoot());
    }
  }
);
  if (myResult == null) {
    return;
  }
  new ModelPropertiesDialog(myResult,myContext).showDialog();
  dispose();
}
