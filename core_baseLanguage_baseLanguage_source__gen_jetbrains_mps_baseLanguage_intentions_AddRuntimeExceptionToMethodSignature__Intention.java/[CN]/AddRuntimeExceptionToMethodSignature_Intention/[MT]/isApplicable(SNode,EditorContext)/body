{
  SNode methodDecl=SNodeOperations.getAncestor(node,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration",false,false);
  if (methodDecl == null) {
    return false;
  }
  final SNode exceptionType=(TypeChecker.getInstance().getRuntimeSupport().coerce(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(node,"throwable",true)),HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.structure.ClassifierType"),true));
  if (exceptionType == null) {
    return false;
  }
  SNode exceptionJavaType=(SNode)SLinkOperations.getTarget(exceptionType,"classifier",false);
  if (exceptionJavaType == null) {
    return false;
  }
  if (!(ClassConcept_Behavior.call_isDescendant_1213877355812(exceptionJavaType,(SNode)SLinkOperations.getTarget(new QuotationClass_2().createNode(),"classifier",false)))) {
    return false;
  }
  if (ListSequence.fromList(SLinkOperations.getTargets(methodDecl,"throwsItem",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SLinkOperations.getTarget(it,"classifier",false) == SLinkOperations.getTarget(exceptionType,"classifier",false);
    }
  }
).isNotEmpty()) {
    return false;
  }
  return true;
}
