{
  List<SNode> result=new ArrayList<SNode>();
  List<SNode> visited=new ArrayList<SNode>();
  with_throws:   for (  SNode tt : SLinkOperations.getChildren(__thisNode__,MetaAdapterFactory.getContainmentLink(0xfd3920347849419dL,0x907112563d152375L,0x1174a4d19ffL,0x11ad99d9c36L,"throwsType"))) {
    SNode clstt=SNodeOperations.as(tt,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType"));
    if (clstt != null) {
      if (!(Classifier_BehaviorDescriptor.isDescendant_id6dL7A1DpKo1.invoke(SLinkOperations.getTarget(clstt,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")),SLinkOperations.getTarget(_quotation_createNode_ksvwin_a0a0a0a1a2a31(),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier"))))) {
        for (int i=0; i < ListSequence.fromList(visited).count(); ++i) {
          SNode restt=ListSequence.fromList(visited).getElement(i);
          if (Classifier_BehaviorDescriptor.isDescendant_id6dL7A1DpKo1.invoke(SLinkOperations.getTarget(restt,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")),SLinkOperations.getTarget(clstt,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")))) {
            ListSequence.fromList(visited).setElement(i,clstt);
            continue with_throws;
          }
        }
        ListSequence.fromList(visited).addElement(clstt);
      }
    }
 else {
      ListSequence.fromList(result).addElement(tt);
    }
  }
  ListSequence.fromList(result).addSequence(ListSequence.fromList(visited));
  return result;
}
