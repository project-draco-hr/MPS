{
  for (  SModel model : collection) {
    if (!(model instanceof PsiJavaStubModelDescriptor)) {
      continue;
    }
    for (    PsiJavaFile javaFile : ((PsiJavaStubModelDescriptor)model).getSource().getJavaFiles()) {
      for (      PsiClass psiClass : javaFile.getClasses()) {
        final PsiClass psiClaz=psiClass;
        final String name=psiClaz.getName();
        if (name == null || name.trim().equals("")) {
          continue;
        }
        consumer.consume(new NavigationParticipant.NavigationTarget(){
          public String getPresentation(){
            return name;
          }
          public SConcept getConcept(){
            if (psiClaz.isAnnotationType()) {
              return (SConcept)MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a69dc80cL,"jetbrains.mps.baseLanguage.structure.Annotation");
            }
 else             if (psiClaz.isInterface()) {
              return (SConcept)MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface");
            }
 else             if (psiClaz.isEnum()) {
              return (SConcept)MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass");
            }
 else {
              return (SConcept)MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept");
            }
          }
          public SNodeReference getNodeReference(){
            return JavaForeignIdBuilder.computeNodePtr(psiClaz).toSNodeReference();
          }
        }
);
      }
    }
    processedConsumer.consume(model);
  }
}
