{
  if (SNodeOperations.isInstanceOf(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("methodCall")[0]),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbbebabf09L,"jetbrains.mps.baseLanguage.structure.StaticMethodCall")) || (SNodeOperations.isInstanceOf(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("methodCall")[0]),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x6c6b6a1e379f9404L,"jetbrains.mps.baseLanguage.structure.LocalMethodCall")) && (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("methodCall")[0]),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x6c6b6a1e379f9404L,"jetbrains.mps.baseLanguage.structure.LocalMethodCall")),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbbebabf0aL,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration"))))) {
    SNode classifier=(SNodeOperations.isInstanceOf(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("methodCall")[0]),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbbebabf09L,"jetbrains.mps.baseLanguage.structure.StaticMethodCall")) ? SLinkOperations.getTarget(SNodeOperations.cast(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("methodCall")[0]),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbbebabf09L,"jetbrains.mps.baseLanguage.structure.StaticMethodCall")),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbbebabf09L,0x10a7588b546L,"classConcept")) : SNodeOperations.getNodeAncestor(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("methodCall")[0]),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"),false,false));
    final String name=SPropertyOperations.getString(SLinkOperations.getTarget(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("methodCall")[0]),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration")),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
    List<SNode> staticMethods=((name == null) ? ListSequence.fromList(new ArrayList<SNode>()) : Sequence.fromIterable(Members.visibleStaticMethods(classifier,((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("methodCall")[0]))).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")).startsWith(name);
      }
    }
).toListSequence());
    for (    SNode methodDecl : staticMethods) {
      Iterable<SNode> parameterTypes=ListSequence.fromList(SLinkOperations.getChildren(methodDecl,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1feL,"parameter"))).select(new ISelector<SNode,SNode>(){
        public SNode select(        SNode it){
          return SLinkOperations.getTarget(it,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x450368d90ce15bc3L,0x4ed4d318133c80ceL,"type"));
        }
      }
);
      boolean good=ResolveUtil.goodArguments(parameterTypes,SLinkOperations.getChildren(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("methodCall")[0]),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301aeL,"actualArgument")));
      if (good) {
        SLinkOperations.setTarget(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("methodCall")[0]),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration"),methodDecl);
        return;
      }
    }
    return;
  }
  if (SNodeOperations.isInstanceOf(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("methodCall")[0]),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11a59b0fbceL,"jetbrains.mps.baseLanguage.structure.ClassCreator")) && SNodeOperations.isInstanceOf(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("classifier")[0]),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"))) {
    SNode constructorCall=SNodeOperations.cast(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("methodCall")[0]),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11a59b0fbceL,"jetbrains.mps.baseLanguage.structure.ClassCreator"));
    SNode classConcept=SNodeOperations.cast(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("classifier")[0]),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    for (    SNode constructorDeclaration : BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),classConcept,"jetbrains.mps.baseLanguage.structure.ClassConcept","call_constructors_5292274854859503373",new Object[]{})) {
      List<SNode> parameterTypes=ResolveUtil.parameterTypes(constructorDeclaration,SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(constructorCall),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType")),((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("classifier")[0]));
      boolean good=ResolveUtil.goodArguments(parameterTypes,SLinkOperations.getChildren(constructorCall,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301aeL,"actualArgument")));
      if (good) {
        SLinkOperations.setTarget(constructorCall,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration"),constructorDeclaration);
        return;
      }
    }
  }
 else   if (SNodeOperations.isInstanceOf(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("methodCall")[0]),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x121119ae5ffL,"jetbrains.mps.baseLanguage.structure.ConstructorInvocationStatement")) && SNodeOperations.isInstanceOf(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("classifier")[0]),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"))) {
    SNode classConcept=SNodeOperations.cast(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("classifier")[0]),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    SNode constructorCall=SNodeOperations.cast(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("methodCall")[0]),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x121119ae5ffL,"jetbrains.mps.baseLanguage.structure.ConstructorInvocationStatement"));
    for (    SNode constructorDeclaration : BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),classConcept,"jetbrains.mps.baseLanguage.structure.ClassConcept","call_constructors_5292274854859503373",new Object[]{})) {
      List<SNode> parameterTypes=ListSequence.fromList(new ArrayList<SNode>());
      for (      SNode parameter : SLinkOperations.getChildren(constructorDeclaration,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1feL,"parameter"))) {
        ListSequence.fromList(parameterTypes).addElement(SNodeOperations.copyNode(SLinkOperations.getTarget(parameter,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x450368d90ce15bc3L,0x4ed4d318133c80ceL,"type"))));
      }
      boolean good=ResolveUtil.goodArguments(parameterTypes,SLinkOperations.getChildren(constructorCall,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301aeL,"actualArgument")));
      if (good) {
        SLinkOperations.setTarget(constructorCall,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration"),constructorDeclaration);
        return;
      }
    }
  }
 else   if (SNodeOperations.isInstanceOf(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("methodCall")[0]),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367388b3L,"jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration")) && SNodeOperations.isInstanceOf(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("classifier")[0]),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass"))) {
    SNode constantDeclaration=SNodeOperations.cast(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("methodCall")[0]),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367388b3L,"jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration"));
    SNode enumClass=SNodeOperations.cast(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("classifier")[0]),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass"));
    for (    SNode constructorDeclaration : BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),enumClass,"jetbrains.mps.baseLanguage.structure.ClassConcept","call_constructors_5292274854859503373",new Object[]{})) {
      List<SNode> parameterTypes=ResolveUtil.parameterTypes(constructorDeclaration,SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(constantDeclaration),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType")),((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("classifier")[0]));
      boolean good=ResolveUtil.goodArguments(parameterTypes,SLinkOperations.getChildren(constantDeclaration,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301aeL,"actualArgument")));
      if (good) {
        SLinkOperations.setTarget(constantDeclaration,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration"),constructorDeclaration);
        return;
      }
    }
  }
 else   if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("methodCall")[0])),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,"jetbrains.mps.baseLanguage.structure.DotExpression"))) {
    SNode operandType=TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("methodCall")[0])),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,"jetbrains.mps.baseLanguage.structure.DotExpression")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,0x116b46a4416L,"operand")));
    if (!(SNodeOperations.isInstanceOf(operandType,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType")))) {
      return;
    }
    SNode instanceType=SNodeOperations.cast(operandType,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType"));
    ClassifierAndSuperClassifiersScope scope=new ClassifierAndSuperClassifiersScope(SLinkOperations.getTarget(instanceType,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")));
    List<SNode> mDecls=scope.getMethodsByName(SPropertyOperations.getString(SLinkOperations.getTarget(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("methodCall")[0]),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration")),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")));
    for (    SNode methodDecl : mDecls) {
      List<SNode> parameterTypes=ResolveUtil.parameterTypes(methodDecl,instanceType,((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("classifier")[0]));
      boolean good=ResolveUtil.goodArguments(parameterTypes,SLinkOperations.getChildren(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("methodCall")[0]),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301aeL,"actualArgument")));
      if (good) {
        SLinkOperations.setTarget(((SNode)ChooseAppropriateMethodDeclaration_QuickFix.this.getField("methodCall")[0]),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration"),methodDecl);
        return;
      }
    }
  }
}
