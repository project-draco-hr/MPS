{
  Iterable<String> onames=Sequence.fromArray(orig.list());
  Iterable<String> rnames=Sequence.fromArray(revd.list());
  if (Sequence.fromIterable(onames).disjunction(Sequence.fromIterable(rnames)).isNotEmpty()) {
    Sequence.fromIterable(onames).subtract(Sequence.fromIterable(rnames)).visitAll(new IVisitor<String>(){
      public void visit(      String it){
        if (!(ignoredFile(it))) {
          File itfile=new File(orig,it);
          if (!(itfile.isDirectory()) || !(isRetained(itfile.getAbsolutePath()))) {
            ListSequence.fromList(diffs).addElement("Removed: " + itfile);
          }
        }
      }
    }
);
    Sequence.fromIterable(rnames).subtract(Sequence.fromIterable(onames)).visitAll(new IVisitor<String>(){
      public void visit(      String it){
        if (!(ignoredFile(it))) {
          ListSequence.fromList(diffs).addElement("Created: " + new File(orig,it));
        }
      }
    }
);
  }
  for (  String name : Sequence.fromIterable(onames).intersect(Sequence.fromIterable(rnames))) {
    if (ignoredFile(name)) {
      continue;
    }
    File onext=new File(orig,name);
    if (excluded(onext)) {
      continue;
    }
    File rnext=new File(revd,name);
    if (onext.isDirectory() == rnext.isDirectory()) {
      if (!(onext.isDirectory())) {
        List<String> olines=fileToStrings(onext);
        List<String> rlines=fileToStrings(rnext);
        if (ListSequence.fromList(olines).isNotEmpty() && ListSequence.fromList(rlines).isNotEmpty()) {
          Patch patch=DiffUtils.diff(olines,rlines);
          if (!(patch.getDeltas().isEmpty())) {
            ListSequence.fromList(diffs).addSequence(ListSequence.fromList(DiffUtils.generateUnifiedDiff(onext.getPath(),rnext.getPath(),olines,patch,5)));
          }
        }
      }
 else {
        diffDirs(onext,rnext,diffs);
      }
    }
 else {
      ListSequence.fromList(diffs).addElement("Something weird here: " + onext + " or here "+ rnext);
    }
  }
}
