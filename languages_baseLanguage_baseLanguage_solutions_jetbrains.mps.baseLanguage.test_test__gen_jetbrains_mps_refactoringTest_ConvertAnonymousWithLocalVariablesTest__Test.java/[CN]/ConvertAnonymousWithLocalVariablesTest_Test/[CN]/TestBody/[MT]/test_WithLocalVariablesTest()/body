{
  this.addNodeById("3145818413496050426");
  this.addNodeById("3145818413496050433");
  this.addNodeById("3145818413496504287");
  new ConvertAnonymousRefactoring(SNodeOperations.cast(this.getNodeById("3145818413496050467"),"jetbrains.mps.baseLanguage.structure.AnonymousClass"),"MyIField").doRefactor();
{
    List<SNode> nodesBefore=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("3145818413496050438"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    List<SNode> nodesAfter=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("3145818413496504288"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    Assert.assertNull("nodes '" + nodesBefore + "' and '"+ nodesAfter+ "' do not match!",NodesMatcher.matchNodes(nodesBefore,nodesAfter));
  }
}
