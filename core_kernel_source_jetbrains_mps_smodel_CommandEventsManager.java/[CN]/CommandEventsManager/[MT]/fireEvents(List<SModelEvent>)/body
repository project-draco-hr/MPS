{
  Map<SModelReference,List<SModelEvent>> eventsByModel=new LinkedHashMap<SModelReference,List<SModelEvent>>();
  for (  SModelEvent e : events) {
    if (!eventsByModel.containsKey(e.getModel().getSModelReference())) {
      eventsByModel.put(e.getModel().getSModelReference(),new ArrayList<SModelEvent>());
    }
    eventsByModel.get(e.getModel().getSModelReference()).add(e);
  }
  for (  SModelReference modelReference : eventsByModel.keySet()) {
    SModelDescriptor sm=mySModelRepository.getModelDescriptor(modelReference);
    if (!(sm instanceof BaseSModelDescriptor))     continue;
    List<SModelEvent> modelEvents=eventsByModel.get(modelReference);
    ((BaseSModelDescriptor)sm).fireSModelChangedInCommandEvent(Collections.unmodifiableList(modelEvents));
  }
}
