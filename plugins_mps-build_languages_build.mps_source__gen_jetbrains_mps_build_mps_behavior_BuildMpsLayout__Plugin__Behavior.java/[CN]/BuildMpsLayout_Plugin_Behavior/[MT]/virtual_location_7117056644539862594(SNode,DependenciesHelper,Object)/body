{
  if (artifactId instanceof SNode) {
    SNode node=(SNode)artifactId;
    if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.build.mps.structure.BuildMps_AbstractModule")) {
      final SNode module=SNodeOperations.cast(node,"jetbrains.mps.build.mps.structure.BuildMps_AbstractModule");
      if (ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(thisNode,"plugin",false),"content",true)).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return BehaviorReflection.invokeVirtual(Boolean.TYPE,it,"virtual_exports_6547494638219603457",new Object[]{artifactId});
        }
      }
)) {
        SNode group=SNodeOperations.as(ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(thisNode,"plugin",false),"content",true)).where(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginGroup") && ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginGroup"),"group",false),"modules",true)).contains(module);
          }
        }
).first(),"jetbrains.mps.build.mps.structure.BuildMps_IdeaPluginGroup");
        return helper.locations().get(thisNode) + "/languages/" + ((group != null ? SPropertyOperations.getString(SLinkOperations.getTarget(group,"group",false),"name") + "/" : ""))+ SPropertyOperations.getString(module,"name")+ ".jar";
      }
      return null;
    }
  }
  return BehaviorReflection.invokeSuper(String.class,thisNode,"jetbrains.mps.build.structure.BuildLayout_AbstractContainer","virtual_location_7117056644539862594",new Object[]{helper,artifactId});
}
