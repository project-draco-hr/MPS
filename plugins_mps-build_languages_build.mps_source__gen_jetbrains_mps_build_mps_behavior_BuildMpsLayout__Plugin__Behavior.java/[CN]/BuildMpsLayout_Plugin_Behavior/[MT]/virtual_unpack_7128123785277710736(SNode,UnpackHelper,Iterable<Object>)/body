{
  SNode parent=helper.parent(thisNode);
  String parentLocation=helper.contentLocations().get(parent);
  String folderLocation=parentLocation + "/" + BuildString_Behavior.call_getText_4380385936562005550(SLinkOperations.getTarget(SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getReferenceLink(0xcf935df46994e9cL,0xa132fa109541cba3L,0x5b7be37b4de9bb6eL,0x5b7be37b4dee5919L,"plugin")),MetaAdapterFactory.getContainmentLink(0xcf935df46994e9cL,0xa132fa109541cba3L,0x5b7be37b4de9bb74L,0x5b7be37b4def2c96L,"containerName")),helper.getMacroHelper());
  helper.locations().put(thisNode,folderLocation);
  helper.contentLocations().put(thisNode,folderLocation);
  for (  SNode ic : ListSequence.fromList(SLinkOperations.getChildren(thisNode,MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4140393b234482c3L,0x668c6cfbafac4c8eL,"children"))).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4ddcec86af9fdb53L,"jetbrains.mps.build.structure.BuildLayout_ImportContent"));
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(it,MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4ddcec86af9fdb53L,"jetbrains.mps.build.structure.BuildLayout_ImportContent"));
    }
  }
)) {
    SNode node=SNodeOperations.as(SLinkOperations.getTarget(ic,MetaAdapterFactory.getReferenceLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4ddcec86af9fdb53L,0x4ddcec86af9fdb55L,"target")),MetaAdapterFactory.getInterfaceConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x62ec2ed0f87da183L,"jetbrains.mps.build.structure.BuildLayout_PathElement"));
    if ((node != null)) {
      if (!(helper.locations().containsKey(node))) {
        helper.locations().put(node,folderLocation);
      }
      if (!(helper.contentLocations().containsKey(node))) {
        helper.contentLocations().put(node,folderLocation);
      }
    }
  }
}
