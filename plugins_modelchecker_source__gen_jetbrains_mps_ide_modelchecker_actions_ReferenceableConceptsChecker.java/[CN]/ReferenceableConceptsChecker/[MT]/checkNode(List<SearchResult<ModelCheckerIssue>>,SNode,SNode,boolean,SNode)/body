{
  SNode conceptDecl=SModelUtil.findConceptDeclaration(node.getConcept().getQualifiedName());
  if (conceptDecl == null) {
    SpecificChecker.addIssue(results,node,"No concept found for " + node.toString(),ModelChecker.SEVERITY_ERROR,"no concept",null);
  }
  if (SNodeOperations.isInstanceOf(conceptDecl,"jetbrains.mps.lang.structure.structure.ConceptDeclaration")) {
    SNode decl=SNodeOperations.cast(conceptDecl,"jetbrains.mps.lang.structure.structure.ConceptDeclaration");
    if (isAncestor) {
      if (SNodeOperations.isInstanceOf(decl,"jetbrains.mps.lang.core.structure.ScopeFacade") && !(ListSequence.fromList(SNodeOperations.getAncestors(refNode,null,true)).contains(node))) {
        SpecificChecker.addIssue(results,anchor,"Reference from outside to a node under ScopeFacade: facade=" + SPropertyOperations.getString(decl,"name"),ModelChecker.SEVERITY_ERROR,"reference to a non-referenceable node",null);
      }
    }
 else {
      if (SPropertyOperations.hasValue(decl,"staticScope","none",null)) {
        SpecificChecker.addIssue(results,anchor,"Reference to a non-referenceable node found: " + SPropertyOperations.getString(decl,"name"),ModelChecker.SEVERITY_ERROR,"reference to a non-referenceable node",null);
      }
 else       if (SPropertyOperations.hasValue(decl,"staticScope","none",null) && !(SNodeOperations.getContainingRoot(node) == SNodeOperations.getContainingRoot(refNode))) {
        SpecificChecker.addIssue(results,anchor,"Cross-root reference to a locally referenceable node found: " + SPropertyOperations.getString(decl,"name"),ModelChecker.SEVERITY_ERROR,"reference to a locally referenceable node",null);
      }
    }
  }
 else {
    SpecificChecker.addIssue(results,node,"Interface instance found! " + node.toString(),ModelChecker.SEVERITY_ERROR,"no concept",null);
  }
}
