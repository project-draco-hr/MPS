{
  List<SNode> nodes=refactoringContext.getSelectedNodes();
  SModel targetModel=null;
  List<SNode> movedNodes=null;
  if (((Object)refactoringContext.getParameter("target")) instanceof SModelDescriptor) {
    targetModel=((SModelDescriptor)((Object)refactoringContext.getParameter("target"))).getSModel();
    movedNodes=refactoringContext.moveNodesToModel(nodes,targetModel);
  }
  if (((Object)refactoringContext.getParameter("target")) instanceof SNode) {
    SNode targetNode=(SNode)((Object)refactoringContext.getParameter("target"));
    movedNodes=refactoringContext.moveNodesToNode(nodes,ListSequence.<SNode>fromList(nodes).first().getRole_(),targetNode);
    targetModel=SNodeOperations.getModel(targetNode);
  }
  if (targetModel != null) {
    IModule module=targetModel.getModelDescriptor().getModule();
    if (refactoringContext.getSelectedMPSProject() != null) {
      final IOperationContext operationContext=new ModuleContext(module,refactoringContext.getSelectedMPSProject());
      if (operationContext != null) {
        refactoringContext.setParameter("nodeToOpen",ListSequence.<SNode>fromList(movedNodes).first());
      }
    }
  }
}
