{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.xmlUnitTest.structure.AssertXMLEquals","jetbrains.mps.baseLanguage.structure.Statement",false,new String[]{"jetbrains.mps.baseLanguage.structure.Statement","jetbrains.mps.baseLanguage.unitTest.structure.MessageHolder"},new String[]{},new String[]{},new String[]{"expected","actual"});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.xmlUnitTest.structure.Attribute","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{"value"},new String[]{},new String[]{});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.xmlUnitTest.structure.Document","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{"rootElement"});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.xmlUnitTest.structure.Element","jetbrains.mps.xmlUnitTest.structure.ElementPart",false,new String[]{"jetbrains.mps.xmlUnitTest.structure.ElementPart"},new String[]{},new String[]{},new String[]{"attribute","content"});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.xmlUnitTest.structure.ElementPart","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.xmlUnitTest.structure.Text","jetbrains.mps.xmlUnitTest.structure.ElementPart",false,new String[]{"jetbrains.mps.xmlUnitTest.structure.ElementPart","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{"text"},new String[]{},new String[]{});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.xmlUnitTest.structure.XMLLiteral","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{"element"});
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.xmlUnitTest.structure.XMLStringLiteral","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{},new String[]{"xml"});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
