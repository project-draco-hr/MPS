{
  EditorCell_Property editorCell=EditorCell_Property.create(editorContext,new ModelAccessor(){
    public String getText(){
      return (SLinkOperations.getTarget(node,MetaAdapterFactory.getContainmentLink(0x3a13115c633c4c5cL,0xbbcc75c4219e9555L,0x1168c104659L,0x1168c10465aL,"quotedNode")) != null ? SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(SLinkOperations.getTarget(node,MetaAdapterFactory.getContainmentLink(0x3a13115c633c4c5cL,0xbbcc75c4219e9555L,0x1168c104659L,0x1168c10465aL,"quotedNode"))),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")) : "<not specitied>");
    }
    public void setText(    String s){
    }
    public boolean isValidText(    String s){
      return EqualUtil.equals(s,getText());
    }
  }
,node);
  editorCell.setAction(CellActionType.DELETE,EmptyCellAction.getInstance());
  editorCell.setAction(CellActionType.BACKSPACE,EmptyCellAction.getInstance());
  editorCell.setSubstituteInfo(new CompositeSubstituteInfo(editorContext,new BasicCellContext(node),new SubstituteInfoPartExt[]{new Quotation_Editor.Quotation_component_cellMenu_29llnk_a0b0a()}));
  editorCell.setCellId("ReadOnlyModelAccessor_29llnk_b0a");
  editorCell.setAction(CellActionType.COMMENT,new CellAction_Comment(node));
  return editorCell;
}
