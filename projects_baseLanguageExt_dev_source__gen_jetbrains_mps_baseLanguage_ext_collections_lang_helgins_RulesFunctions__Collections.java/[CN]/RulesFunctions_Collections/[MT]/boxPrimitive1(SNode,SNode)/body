{
  if (SNodeOperations.isInstanceOf(primitiveType,"jetbrains.mps.baseLanguage.structure.IntegerType")) {
    return new QuotationClass_().createNode();
  }
  if (SNodeOperations.isInstanceOf(primitiveType,"jetbrains.mps.baseLanguage.structure.BooleanType")) {
    return new QuotationClass_1().createNode();
  }
  if (SNodeOperations.isInstanceOf(primitiveType,"jetbrains.mps.baseLanguage.structure.ByteType")) {
    return new QuotationClass_2().createNode();
  }
  if (SNodeOperations.isInstanceOf(primitiveType,"jetbrains.mps.baseLanguage.structure.CharType")) {
    return new QuotationClass_3().createNode();
  }
  if (SNodeOperations.isInstanceOf(primitiveType,"jetbrains.mps.baseLanguage.structure.DoubleType")) {
    return new QuotationClass_4().createNode();
  }
  if (SNodeOperations.isInstanceOf(primitiveType,"jetbrains.mps.baseLanguage.structure.FloatType")) {
    return new QuotationClass_5().createNode();
  }
  if (SNodeOperations.isInstanceOf(primitiveType,"jetbrains.mps.baseLanguage.structure.LongType")) {
    return new QuotationClass_6().createNode();
  }
  if (SNodeOperations.isInstanceOf(primitiveType,"jetbrains.mps.baseLanguage.structure.ShortType")) {
    return new QuotationClass_7().createNode();
  }
  TypeChecker.getInstance().reportTypeError(nodeToReportError,"couldn't coerse " + primitiveType + " to classifier");
  return new QuotationClass_8().createNode();
}
