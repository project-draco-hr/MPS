{
  new Mapper<ResizeHandleView,ResizeHandleView>(this,this){
    @Override protected void registerSynchronizers(    Mapper.SynchronizersConfiguration configuration){
      super.registerSynchronizers(configuration);
      configuration.add(Synchronizers.forProperty(color,color()));
      configuration.add(Synchronizers.forProperty(backgroundColor,background()));
      configuration.add(Synchronizers.forProperty(halfWidth,new Runnable(){
        public void run(){
          updateLocation(centerLocation.get(),halfWidth.get());
        }
      }
));
      configuration.add(Synchronizers.forProperty(centerLocation,new Runnable(){
        public void run(){
          updateLocation(centerLocation.get(),halfWidth.get());
        }
      }
));
      configuration.add(Synchronizers.forProperty(resizeHandler,new WritableProperty<ResizeHandleView.ResizeHandler>(){
        private Registration myRegistration;
        public void set(        ResizeHandleView.ResizeHandler handler){
          if (myRegistration != null) {
            myRegistration.remove();
          }
          if (handler != null) {
            myRegistration=addTrait(getResizeHandlingTrait());
          }
        }
      }
));
    }
  }
.attachRoot();
}
