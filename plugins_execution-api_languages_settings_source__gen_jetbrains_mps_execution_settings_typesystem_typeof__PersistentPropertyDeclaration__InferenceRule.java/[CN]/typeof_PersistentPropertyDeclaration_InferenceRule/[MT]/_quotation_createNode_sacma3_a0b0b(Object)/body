{
  SNode quotedNode_2=null;
  SNode quotedNode_3=null;
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  SNode quotedNode_7=null;
  quotedNode_2=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.typesystem.structure.JoinType",null,null,GlobalScope.getInstance(),false);
  quotedNode_3=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",null,null,GlobalScope.getInstance(),false);
  quotedNode_3.setReference("classifier",SReference.create("classifier",quotedNode_3,SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"),jetbrains.mps.smodel.SNodeId.fromString("~Cloneable")));
  quotedNode_2.addChild("argument",quotedNode_3);
  quotedNode_4=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",null,null,GlobalScope.getInstance(),false);
  quotedNode_4.setReference("classifier",SReference.create("classifier",quotedNode_4,SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"),jetbrains.mps.smodel.SNodeId.fromString("~Enum")));
  quotedNode_2.addChild("argument",quotedNode_4);
  quotedNode_5=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",null,null,GlobalScope.getInstance(),false);
  quotedNode_5.setReference("classifier",SReference.create("classifier",quotedNode_5,SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"),jetbrains.mps.smodel.SNodeId.fromString("~String")));
  quotedNode_2.addChild("argument",quotedNode_5);
  quotedNode_6=(SNode)parameter_1;
  if (quotedNode_6 != null) {
    quotedNode_2.addChild("argument",HUtil.copyIfNecessary(quotedNode_6));
  }
  quotedNode_7=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.execution.settings.structure.TemplatePersistentConfigurationType",null,null,GlobalScope.getInstance(),false);
  quotedNode_2.addChild("argument",quotedNode_7);
  return quotedNode_2;
}
