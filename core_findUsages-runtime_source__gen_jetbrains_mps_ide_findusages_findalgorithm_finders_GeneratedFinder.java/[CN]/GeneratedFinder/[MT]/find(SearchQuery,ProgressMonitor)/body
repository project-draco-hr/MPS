{
  SearchResults<SNode> results=new SearchResults<SNode>();
  Object value=query.getObjectHolder().getObject();
  if (!(value instanceof SNode)) {
    return results;
  }
  SNode node=(SNode)value;
  SConcept c=SConceptRepository.getInstance().getInstanceConcept(getConcept());
  if (node.getConcept().isSubConceptOf(c) && isApplicable(node)) {
    List<SNode> resSN=ListSequence.fromList(new ArrayList<SNode>());
    getSearchedNodes(node,query.getScope(),resSN);
    for (    SNode resnode : resSN) {
      results.getSearchedNodes().add(resnode);
    }
    List<SNode> res=new ArrayList<SNode>();
    doFind(node,query.getScope(),res,monitor);
    for (    SNode resnode : res) {
      results.getSearchResults().add(new SearchResult<SNode>(resnode,getNodeCategory(resnode)));
    }
  }
 else {
    LOG.debug("Trying to use finder that is not applicable to the concept. Returning empty results.[finder: \"" + getDescription() + "\"; "+ "concept: "+ node.getConcept().getQualifiedName());
  }
  return results;
}
