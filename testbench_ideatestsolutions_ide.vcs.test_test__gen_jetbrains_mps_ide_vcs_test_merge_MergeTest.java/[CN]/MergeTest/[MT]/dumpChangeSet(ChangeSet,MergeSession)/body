{
  StringBuffer buf=new StringBuffer();
  for (  ModelChange change : ListSequence.fromList(changeSet.getModelChanges()).sort(new ISelector<ModelChange,String>(){
    public String select(    ModelChange c){
      return c.toString();
    }
  }
,true)) {
    buf.append(change).append("\n");
    for (    ModelChange conflicting : Sequence.fromIterable(session.getConflictedWith(change)).sort(new ISelector<ModelChange,String>(){
      public String select(      ModelChange c){
        return c.toString();
      }
    }
,true)) {
      buf.append("    ").append(conflicting).append("\n");
    }
  }
  return buf.toString();
}
