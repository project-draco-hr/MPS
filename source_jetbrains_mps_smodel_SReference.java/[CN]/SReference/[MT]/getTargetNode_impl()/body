{
  myIsResolved=false;
  SModelDescriptor modelDescriptor=SModelRepository.getInstance().getModelDescriptor(myTargetModelUID);
  if (modelDescriptor == null) {
    logGetTargetNodeErrors(GetTargetNodeErrorState.NO_MODEL_DESCRIPTOR);
    return null;
  }
  SModel model=modelDescriptor.getSModel();
  SModel sourceModel=mySourceNode.getModel();
  if (model == null) {
    logGetTargetNodeErrors(GetTargetNodeErrorState.NO_MODEL);
    return null;
  }
  if (ExternalResolver.isEmptyExtResolveInfo(myExtResolveInfo)) {
    SNode nodeById=model.getNodeById(myTargetNodeId);
    if (nodeById == null) {
      logGetTargetNodeErrors(GetTargetNodeErrorState.CANT_RESOLVE_BY_ID);
    }
 else {
      myIsResolved=true;
      if (model.isExternallyResolvable() && model != sourceModel) {
        String extResolveInfo=ExternalResolver.getExternalResolveInfoFromTarget(nodeById);
        if (extResolveInfo != null) {
          LOG.warning("reference is resolved by ID, while should be resolved by ERI");
          LOG.info("re-resolving reference");
          model.setNodeExtResolveInfo(nodeById,extResolveInfo);
          myExtResolveInfo=extResolveInfo;
          myTargetNodeId=null;
          SModelRepository.getInstance().markChanged(getSourceNode().getModel(),true);
        }
      }
    }
    return nodeById;
  }
 else {
    SNode nodeByExtResolveInfo=model.getNodeByExtResolveInfo(myExtResolveInfo);
    if (nodeByExtResolveInfo == null) {
      logGetTargetNodeErrors(GetTargetNodeErrorState.CANT_RESOLVE_BY_ERI);
    }
 else {
      myIsResolved=true;
    }
    return nodeByExtResolveInfo;
  }
}
