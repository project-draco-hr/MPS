{
  if (!modelDescriptor.getModelFile().isReadOnly()) {
    final File file=FileSystem.toFile(modelDescriptor.getModelFile());
    if (!file.exists()) {
      return new SModel(modelDescriptor.getModelUID());
    }
  }
  if (ApplicationLevelVcsManager.instance().isInConflict(modelDescriptor,modelDescriptor.needsReloading())) {
    return handleExceptionDuringModelRead(modelDescriptor,new ConflictModelException(modelDescriptor));
  }
  SModel model;
  try {
    model=ModelPersistence.readModel(modelDescriptor.getModelFile());
  }
 catch (  ModelFileReadException t) {
    return handleExceptionDuringModelRead(modelDescriptor,t);
  }
  LOG.assertLog(model.getUID().equals(modelDescriptor.getModelUID()),"\nError loading model from file: \"" + modelDescriptor.getModelFile() + "\"\n"+ "expected model UID     : \""+ modelDescriptor.getModelUID()+ "\"\n"+ "but was UID            : \""+ model.getUID()+ "\"\n"+ "the model will not be available.\n"+ "Make sure that all project's roots and/or the model namespace is correct");
  return model;
}
