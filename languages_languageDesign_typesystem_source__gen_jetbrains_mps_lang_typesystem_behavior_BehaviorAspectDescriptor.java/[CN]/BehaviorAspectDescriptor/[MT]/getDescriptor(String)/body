{
switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0b,fqName)) {
case 18:
    return new ConceptReference_BehaviorDescriptor();
case 61:
  return new PatternCondition_BehaviorDescriptor();
case 32:
return new InferenceRule_BehaviorDescriptor();
case 3:
return new ApplicableNodeReference_BehaviorDescriptor();
case 88:
return new TypeOfExpression_BehaviorDescriptor();
case 21:
return new CreateEquationStatement_BehaviorDescriptor();
case 23:
return new CreateLessThanInequationStatement_BehaviorDescriptor();
case 22:
return new CreateGreaterThanInequationStatement_BehaviorDescriptor();
case 19:
return new CreateComparableEquationStatement_BehaviorDescriptor();
case 89:
return new TypeVarDeclaration_BehaviorDescriptor();
case 90:
return new TypeVarReference_BehaviorDescriptor();
case 62:
return new PatternVariableReference_BehaviorDescriptor();
case 41:
return new LinkPatternVariableReference_BehaviorDescriptor();
case 67:
return new PropertyPatternVariableReference_BehaviorDescriptor();
case 86:
return new SubtypingRule_BehaviorDescriptor();
case 4:
return new AssertStatement_BehaviorDescriptor();
case 78:
return new ReportErrorStatement_BehaviorDescriptor();
case 87:
return new TypeCheckerAccessExpression_BehaviorDescriptor();
case 37:
return new IsSubtypeExpression_BehaviorDescriptor();
case 50:
return new Node_TypeOperation_BehaviorDescriptor();
case 46:
return new MultipleForeachLoop_BehaviorDescriptor();
case 47:
return new MultipleForeachLoopVariable_BehaviorDescriptor();
case 7:
return new CoerceStatement_BehaviorDescriptor();
case 29:
return new ImmediateSupertypesExpression_BehaviorDescriptor();
case 36:
return new IsStrongSubtypeExpression_BehaviorDescriptor();
case 42:
return new MatchStatement_BehaviorDescriptor();
case 43:
return new MatchStatementItem_BehaviorDescriptor();
case 6:
return new CoerceExpression_BehaviorDescriptor();
case 8:
return new CoerceStrongExpression_BehaviorDescriptor();
case 39:
return new JoinType_BehaviorDescriptor();
case 25:
return new CreateStrongLessThanInequationStatement_BehaviorDescriptor();
case 20:
return new CreateComparableEquationStatementStrong_BehaviorDescriptor();
case 81:
return new RuntimeErrorType_BehaviorDescriptor();
case 84:
return new RuntimeTypeVariable_BehaviorDescriptor();
case 52:
return new NormalTypeClause_BehaviorDescriptor();
case 101:
return new WhenConcreteStatement_BehaviorDescriptor();
case 45:
return new MeetType_BehaviorDescriptor();
case 9:
return new ComparisonRule_BehaviorDescriptor();
case 51:
return new NonTypesystemRule_BehaviorDescriptor();
case 31:
return new InequationReplacementRule_BehaviorDescriptor();
case 27:
return new ErrorInfoExpression_BehaviorDescriptor();
case 83:
return new RuntimeListVariable_BehaviorDescriptor();
case 102:
return new WhenConcreteVariableDeclaration_BehaviorDescriptor();
case 103:
return new WhenConcreteVariableReference_BehaviorDescriptor();
case 98:
return new WarningStatement_BehaviorDescriptor();
case 91:
return new TypesystemIntention_BehaviorDescriptor();
case 92:
return new TypesystemIntentionArgument_BehaviorDescriptor();
case 1:
return new AbstractInequationStatement_BehaviorDescriptor();
case 93:
return new TypesystemQuickFix_BehaviorDescriptor();
case 71:
return new QuickFixExecuteBlock_BehaviorDescriptor();
case 16:
return new ConceptFunctionParameter_node_BehaviorDescriptor();
case 68:
return new QuickFixArgument_BehaviorDescriptor();
case 69:
return new QuickFixArgumentReference_BehaviorDescriptor();
case 70:
return new QuickFixDescriptionBlock_BehaviorDescriptor();
case 2:
return new AddDependencyStatement_BehaviorDescriptor();
case 64:
return new Processed_BehaviorDescriptor();
case 33:
return new InfoStatement_BehaviorDescriptor();
case 65:
return new PropertyMessageTarget_BehaviorDescriptor();
case 75:
return new ReferenceMessageTarget_BehaviorDescriptor();
case 66:
return new PropertyNameTarget_BehaviorDescriptor();
case 76:
return new ReferenceRoleTarget_BehaviorDescriptor();
case 94:
return new VariableConverterItem_BehaviorDescriptor();
case 95:
return new VariableConverterItem_ApplicableBlock_BehaviorDescriptor();
case 17:
return new ConceptFunctionParameter_var_BehaviorDescriptor();
case 96:
return new VariableConverterItem_ConvertBlock_BehaviorDescriptor();
case 97:
return new VariableConvertersContainer_BehaviorDescriptor();
case 13:
return new ConceptFunctionParameter_Role_BehaviorDescriptor();
case 15:
return new ConceptFunctionParameter_isAggregation_BehaviorDescriptor();
case 11:
return new ConceptFunctionParameter_ContextNode_BehaviorDescriptor();
case 82:
return new RuntimeHoleType_BehaviorDescriptor();
case 60:
return new OverloadedOperatorTypeRule_BehaviorDescriptor();
case 59:
return new OverloadedOperatorTypeFunction_BehaviorDescriptor();
case 40:
return new LeftOperandType_parameter_BehaviorDescriptor();
case 53:
return new Operation_parameter_BehaviorDescriptor();
case 80:
return new RightOperandType_parameter_BehaviorDescriptor();
case 28:
return new GetOperationType_BehaviorDescriptor();
case 57:
return new OverloadedOpRulesContainer_BehaviorDescriptor();
case 44:
return new MeetContainer_BehaviorDescriptor();
case 38:
return new JoinContainer_BehaviorDescriptor();
case 10:
return new ConceptClauseLinkInfo_BehaviorDescriptor();
case 58:
return new OverloadedOpTypeRule_OneTypeSpecified_BehaviorDescriptor();
case 35:
return new IsReplacementRuleApplicable_ConceptFunction_BehaviorDescriptor();
case 30:
return new InequationReference_BehaviorDescriptor();
case 26:
return new DefaultGroupReference_BehaviorDescriptor();
case 49:
return new Node_InferTypeOperation_BehaviorDescriptor();
case 48:
return new NodeInfo_BehaviorDescriptor();
case 55:
return new OriginalNodeId_BehaviorDescriptor();
case 56:
return new OverloadedOpIsApplicableFunction_BehaviorDescriptor();
case 74:
return new QuickFixSetSelectionBlock_BehaviorDescriptor();
case 12:
return new ConceptFunctionParameter_EditorContext_BehaviorDescriptor();
case 72:
return new QuickFixField_BehaviorDescriptor();
case 73:
return new QuickFixFieldReference_BehaviorDescriptor();
case 85:
return new SelectionType_BehaviorDescriptor();
case 14:
return new ConceptFunctionParameter_Selection_BehaviorDescriptor();
case 5:
return new CaretPositionOperation_BehaviorDescriptor();
case 100:
return new WasSelectedNodeOperation_BehaviorDescriptor();
case 77:
return new ReplacementRuleReference_BehaviorDescriptor();
case 24:
return new CreateStrongGreaterThanInequationStatement_BehaviorDescriptor();
case 0:
return new AbstractComparableStatement_BehaviorDescriptor();
case 54:
return new OrStatement_BehaviorDescriptor();
case 63:
return new PrintToTrace_BehaviorDescriptor();
case 79:
return new ReportErrorStatementAnnotation_BehaviorDescriptor();
case 34:
return new InfoStatementAnnotation_BehaviorDescriptor();
case 99:
return new WarningStatementAnnotation_BehaviorDescriptor();
default :
return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
}
}
