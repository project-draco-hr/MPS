{
  SNode template=SLinkOperations.getTarget(rule,MetaAdapterFactory.getReferenceLink(0xb401a68083254110L,0x8fd384331ff25befL,0x10fd54746dbL,0x10fd54746ddL,"template"));
  if ((template != null)) {
    SNode attrib=AttributeOperations.getAttribute(template,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.lang.generator.structure.RootTemplateAnnotation"));
    if ((attrib != null)) {
      SNode templateApplicableConcept=SLinkOperations.getTarget(SNodeOperations.cast(attrib,MetaAdapterFactory.getConcept(0xb401a68083254110L,0x8fd384331ff25befL,0x11017244494L,"jetbrains.mps.lang.generator.structure.RootTemplateAnnotation")),MetaAdapterFactory.getReferenceLink(0xb401a68083254110L,0x8fd384331ff25befL,0x11017244494L,0x11017255ccfL,"applicableConcept"));
      SNode ruleApplicableConcept=SLinkOperations.getTarget(rule,MetaAdapterFactory.getReferenceLink(0xb401a68083254110L,0x8fd384331ff25befL,0x10fc0b64647L,0x10fc0b6e730L,"applicableConcept"));
      if ((ruleApplicableConcept != null) && (templateApplicableConcept != null)) {
        if (!(ConceptHierarchyUtil.isSubconcept(ruleApplicableConcept,templateApplicableConcept))) {
{
            MessageTarget errorTarget=new NodeMessageTarget();
            IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(rule,"template is not applicable to the rule concept '" + SPropertyOperations.getString(ruleApplicableConcept,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")) + "'","r:00000000-0000-4000-0000-011c895902e4(jetbrains.mps.lang.generator.typesystem)","1183153521354",null,errorTarget);
          }
        }
      }
    }
  }
}
