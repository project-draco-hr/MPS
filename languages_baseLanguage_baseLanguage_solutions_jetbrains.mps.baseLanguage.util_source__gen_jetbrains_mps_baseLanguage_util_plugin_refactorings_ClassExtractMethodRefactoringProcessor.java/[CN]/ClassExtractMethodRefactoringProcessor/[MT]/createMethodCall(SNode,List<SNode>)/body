{
  if (SNodeOperations.isInstanceOf(declaration,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration")) {
    SNode result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalInstanceMethodCall",null);
    SLinkOperations.setTarget(result,"baseMethodDeclaration",SNodeOperations.cast(declaration,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration"),false);
    ListSequence.fromList(SLinkOperations.getTargets(result,"actualArgument",true)).addSequence(ListSequence.fromList(parameters));
    return result;
  }
 else {
    SNode call=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StaticMethodCall",null);
    SLinkOperations.setTarget(call,"classConcept",SNodeOperations.cast(SNodeOperations.getParent(declaration),"jetbrains.mps.baseLanguage.structure.ClassConcept"),false);
    SLinkOperations.setTarget(call,"baseMethodDeclaration",SNodeOperations.cast(declaration,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration"),false);
    ListSequence.fromList(SLinkOperations.getTargets(call,"actualArgument",true)).addSequence(ListSequence.fromList(parameters));
    return call;
  }
}
