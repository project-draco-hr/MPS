{
  int hash=conceptFqName.hashCode();
  if (hash == -1191799892) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.File","jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept");
  }
  if (hash == 1705525773) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.CType","jetbrains.mps.lang.core.structure.BaseConcept");
  }
  if (hash == -1191919940) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.CInt","jetbrains.mps.nanoc.structure.CType");
  }
  if (hash == 1705002537) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.CChar","jetbrains.mps.nanoc.structure.CType");
  }
  if (hash == 1318373865) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.CFloat","jetbrains.mps.nanoc.structure.CType");
  }
  if (hash == 1330261001) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.CShort","jetbrains.mps.nanoc.structure.CType");
  }
  if (hash == 1705277775) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.CLong","jetbrains.mps.nanoc.structure.CType");
  }
  if (hash == -2134391324) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.CDouble","jetbrains.mps.nanoc.structure.CType");
  }
  if (hash == 279092011) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.CExpression","jetbrains.mps.lang.core.structure.BaseConcept");
  }
  if (hash == 59982460) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.CStatement","jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.textGen.structure.TraceableConcept");
  }
  if (hash == -1620131775) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.VarDecl","jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept");
  }
  if (hash == -218611154) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.VarDeclStatement","jetbrains.mps.nanoc.structure.CStatement");
  }
  if (hash == 1333949118) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.CWhile","jetbrains.mps.nanoc.structure.CStatement");
  }
  if (hash == 1704979573) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.CBody","jetbrains.mps.lang.core.structure.BaseConcept");
  }
  if (hash == 909446691) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.CParenthesis","jetbrains.mps.nanoc.structure.CExpression");
  }
  if (hash == 1422469909) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.CBinaryOp","jetbrains.mps.nanoc.structure.CExpression");
  }
  if (hash == 1707071010) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.DivOp","jetbrains.mps.nanoc.structure.CBinaryOp");
  }
  if (hash == 1725918027) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.PlusOp","jetbrains.mps.nanoc.structure.CBinaryOp");
  }
  if (hash == 1648075105) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.MultOp","jetbrains.mps.nanoc.structure.CBinaryOp");
  }
  if (hash == -790918591) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.MinusOp","jetbrains.mps.nanoc.structure.CBinaryOp");
  }
  if (hash == -1156885788) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.IntConst","jetbrains.mps.nanoc.structure.CExpression");
  }
  if (hash == 10161796) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.CExpressionStatement","jetbrains.mps.nanoc.structure.CStatement");
  }
  if (hash == -71547368) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.CAssignmentExpression","jetbrains.mps.nanoc.structure.CExpression");
  }
  if (hash == 1887413788) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.VarRef","jetbrains.mps.nanoc.structure.CExpression");
  }
  if (hash == 933881861) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.EqualOp","jetbrains.mps.nanoc.structure.CBinaryOp");
  }
  if (hash == 1604877194) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.LessOp","jetbrains.mps.nanoc.structure.CBinaryOp");
  }
  if (hash == 928063307) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.GreaterOp","jetbrains.mps.nanoc.structure.CBinaryOp");
  }
  if (hash == 393429782) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.LessEqOp","jetbrains.mps.nanoc.structure.CBinaryOp");
  }
  if (hash == -1484653929) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.GreaterEqOp","jetbrains.mps.nanoc.structure.CBinaryOp");
  }
  if (hash == -1191922794) {
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.nanoc.structure.CFor","jetbrains.mps.nanoc.structure.CStatement");
  }
  return null;
}
