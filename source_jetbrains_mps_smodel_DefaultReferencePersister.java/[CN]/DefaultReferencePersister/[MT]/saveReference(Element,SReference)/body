{
  SNode node=reference.getSourceNode();
  Element linkElement=new Element(ModelPersistence.LINK);
  parentElement.addContent(linkElement);
  linkElement.setAttribute(ModelPersistence.ROLE,reference.getRole());
  if (reference.isExternal()) {
    ExternalReference externalReference=(ExternalReference)reference;
    SModelUID targetModelUID=externalReference.getTargetModelUID();
    SModel.ImportElement importElement=node.getModel().getImportElement(targetModelUID);
    int importIndex=-1;
    if (importElement != null) {
      importIndex=importElement.getReferenceID();
    }
 else {
      LOG.error("Couldn't save reference \"" + externalReference.getRole() + "\" in "+ node.getDebugText()+ "\n -- importz element for model \""+ targetModelUID+ "\" not found");
    }
    String extResolveInfo=externalReference.getExtResolveInfo();
    if (ExternalResolver.isEmptyExtResolveInfo(extResolveInfo)) {
      linkElement.setAttribute(ModelPersistence.TARGET_NODE_ID,importIndex + "." + reference.getTargetNodeId());
    }
 else {
      linkElement.setAttribute(ModelPersistence.EXT_RESOLVE_INFO,importIndex + "." + extResolveInfo);
    }
  }
 else {
    if (reference.isResolved())     linkElement.setAttribute(ModelPersistence.TARGET_NODE_ID,reference.getTargetNodeId());
    String resolveInfo=reference.getResolveInfo();
    if (!reference.isResolved() && resolveInfo != null)     linkElement.setAttribute(ModelPersistence.RESOLVE_INFO,resolveInfo);
    String targetClassResolveInfo=reference.getTargetClassResolveInfo();
    if (!reference.isResolved() && targetClassResolveInfo != null)     linkElement.setAttribute(ModelPersistence.TARGET_CLASS_RESOLVE_INFO,targetClassResolveInfo);
  }
  return linkElement;
}
