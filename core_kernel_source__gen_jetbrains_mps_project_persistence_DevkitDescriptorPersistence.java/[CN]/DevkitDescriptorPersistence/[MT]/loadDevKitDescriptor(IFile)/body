{
  try {
    Document document=JDOMUtil.loadDocument(file);
    final Element root=((Element)document.getRootElement());
    DevkitDescriptor descriptor=new _FunctionTypes._return_P0_E0<DevkitDescriptor>(){
      public DevkitDescriptor invoke(){
        DevkitDescriptor result_raojav_a0a0c0a0a=new DevkitDescriptor();
        String result_raojav_a0a0a0c0a0a=root.getAttributeValue("name");
        result_raojav_a0a0c0a0a.setNamespace(result_raojav_a0a0a0c0a0a);
        String result_raojav_a1a0a0c0a0a=root.getAttributeValue("uuid");
        result_raojav_a0a0c0a0a.setUUID(result_raojav_a1a0a0c0a0a);
        ModuleDescriptorPersistence.loadDependencies(result_raojav_a0a0c0a0a,root);
        for (        Element exportedLang : ListSequence.fromList(AttributeUtils.elementChildren(root,"exported-language"))) {
          result_raojav_a0a0c0a0a.getExportedLanguages().add(ModuleReference.fromString(exportedLang.getAttributeValue("name")));
        }
        for (        Element xde : ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(root,"extendedDevKits")).first(),"extendedDevKit"))) {
          result_raojav_a0a0c0a0a.getExtendedDevkits().add(ModuleReference.fromString(xde.getText()));
        }
        for (        Element xse : ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(root,"exported-solutions")).first(),"exported-solution"))) {
          result_raojav_a0a0c0a0a.getExportedSolutions().add(ModuleReference.fromString(xse.getText()));
        }
        for (        Element entryElement : ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(root,"classPath")).first(),"entry")).concat(ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(root,"runtimeClassPath")).first(),"entry")))) {
          ClassPathEntry result_raojav_a1a11a0a0c0a0a=new ClassPathEntry();
          String result_raojav_a0a1a11a0a0c0a0a=Macros.devkitMacros().expandPath(entryElement.getAttributeValue("path"),file);
          result_raojav_a1a11a0a0c0a0a.setPath(result_raojav_a0a1a11a0a0c0a0a);
          boolean result_raojav_a1a1a11a0a0c0a0a=AttributeUtils.booleanWithDefault(entryElement.getAttributeValue("include"),false);
          result_raojav_a1a11a0a0c0a0a.setIncludedInVCS(result_raojav_a1a1a11a0a0c0a0a);
          result_raojav_a0a0c0a0a.getClassPaths().add(result_raojav_a1a11a0a0c0a0a);
        }
        String result_raojav_a31a0a0c0a0a=root.getAttributeValue("pluginClass");
        result_raojav_a0a0c0a0a.setPlugin(result_raojav_a31a0a0c0a0a);
        return result_raojav_a0a0c0a0a;
      }
    }
.invoke();
    ModuleDescriptorPersistence.setTimestamp(descriptor,file,false);
    return descriptor;
  }
 catch (  Exception e) {
    throw new ModuleReadException(e);
  }
}
