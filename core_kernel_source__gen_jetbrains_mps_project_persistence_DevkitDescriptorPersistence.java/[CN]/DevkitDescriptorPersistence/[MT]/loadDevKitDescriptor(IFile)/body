{
  try {
    Document document=JDOMUtil.loadDocument(file);
    final Element root=((Element)document.getRootElement());
    DevkitDescriptor descriptor=new _FunctionTypes._return_P0_E0<DevkitDescriptor>(){
      public DevkitDescriptor invoke(){
        DevkitDescriptor result_1953_0=new DevkitDescriptor();
        String result_1953_1=root.getAttributeValue("name");
        result_1953_0.setNamespace(result_1953_1);
        String result_1953_2=root.getAttributeValue("uuid");
        result_1953_0.setUUID(result_1953_2);
        ModuleDescriptorPersistence.loadDependencies(result_1953_0,root);
        for (        Element exportedLang : ListSequence.fromList(AttributeUtils.elementChildren(root,"exported-language"))) {
          result_1953_0.getExportedLanguages().add(ModuleReference.fromString(exportedLang.getAttributeValue("name")));
        }
        for (        Element xde : ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(root,"extendedDevKits")).first(),"extendedDevKit"))) {
          result_1953_0.getExtendedDevkits().add(ModuleReference.fromString(xde.getText()));
        }
        for (        Element xse : ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(root,"exported-solutions")).first(),"exported-solution"))) {
          result_1953_0.getExportedSolutions().add(ModuleReference.fromString(xse.getText()));
        }
        for (        Element entryElement : ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(root,"classPath")).first(),"entry")).concat(ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(root,"runtimeClassPath")).first(),"entry")))) {
          ClassPathEntry result_1953_3=new ClassPathEntry();
          String result_1953_4=Macros.devkitMacros().expandPath(entryElement.getAttributeValue("path"),file);
          result_1953_3.setPath(result_1953_4);
          boolean result_1953_5=AttributeUtils.booleanWithDefault(entryElement.getAttributeValue("include"),false);
          result_1953_3.setIncludedInVCS(result_1953_5);
          result_1953_0.getClassPaths().add(result_1953_3);
        }
        String result_1953_6=root.getAttributeValue("pluginClass");
        result_1953_0.setPlugin(result_1953_6);
        return result_1953_0;
      }
    }
.invoke();
    ModuleDescriptorPersistence.setTimestamp(descriptor,file,false);
    return descriptor;
  }
 catch (  Exception e) {
    throw new ModuleReadException(e);
  }
}
