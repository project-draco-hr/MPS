{
  try {
    Document document=JDOMUtil.loadDocument(file);
    final Element root=document.getRootElement();
    DevkitDescriptor descriptor=new _FunctionTypes._return_P0_E0<DevkitDescriptor>(){
      public DevkitDescriptor invoke(){
        final DevkitDescriptor result_raojav_a0a0c0a0b=new DevkitDescriptor();
        final String result_raojav_a0a0a0c0a0b=root.getAttributeValue("name");
        result_raojav_a0a0c0a0b.setNamespace(result_raojav_a0a0a0c0a0b);
        final String result_raojav_a1a0a0c0a0b=root.getAttributeValue("uuid");
        result_raojav_a0a0c0a0b.setUUID(result_raojav_a1a0a0c0a0b);
        for (        Element exportedLang : ListSequence.fromList((List<Element>)root.getChildren("exported-language"))) {
          result_raojav_a0a0c0a0b.getExportedLanguages().add(jetbrains.mps.project.structure.modules.ModuleReference.fromString(exportedLang.getAttributeValue("name")));
        }
        Element extendedDevKits=ListSequence.fromList(((List<Element>)root.getChildren("extendedDevKits"))).first();
        if (extendedDevKits != null) {
          for (          Element xde : ListSequence.fromList((List<Element>)extendedDevKits.getChildren("extendedDevKit"))) {
            result_raojav_a0a0c0a0b.getExtendedDevkits().add(jetbrains.mps.project.structure.modules.ModuleReference.fromString(xde.getText()));
          }
        }
        Element exportedSolutions=ListSequence.fromList(((List<Element>)root.getChildren("exported-solutions"))).first();
        if (exportedSolutions != null) {
          for (          Element xse : ListSequence.fromList((List<Element>)exportedSolutions.getChildren("exported-solution"))) {
            result_raojav_a0a0c0a0b.getExportedSolutions().add(jetbrains.mps.project.structure.modules.ModuleReference.fromString(xse.getText()));
          }
        }
        return result_raojav_a0a0c0a0b;
      }
    }
.invoke();
    ModuleDescriptorPersistence.setTimestamp(descriptor,file);
    return descriptor;
  }
 catch (  Exception e) {
    throw new ModuleReadException(e);
  }
}
