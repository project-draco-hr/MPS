{
  if (ListSequence.fromList(nodesToMove).count() != 1) {
    throw new IllegalArgumentException();
  }
  MoveNodesActionBase.CopyMapObject copyMap=MoveNodesActionBase.CopyMapObject.getCopyMap(refactoringSession);
  MapSequence.fromMap(copyMap.getCopyMap()).put(ListSequence.fromList(nodesToMove).first(),myTarget.resolve(myProject.getRepository()));
{
    Iterator<SNode> oldNode_it=ListSequence.fromList(whichOfThemToRemove).iterator();
    SNode oldNode_var;
    while (oldNode_it.hasNext()) {
      oldNode_var=oldNode_it.next();
      SNodeOperations.detachNode(oldNode_var);
    }
  }
}
