{
  TableModelCreator creator=new TableModelCreator(){
    public TableModel getTable(    final SNode node,    EditorContext editorContext){
      return new AbstractTableModel(){
        public SNode getValueAt(        int row,        int column){
          return ListSequence.fromList(SLinkOperations.getTargets(ListSequence.fromList(SLinkOperations.getTargets(node,"rows",true)).getElement(row),"cells",true)).getElement(column);
        }
        public int getRowsNumber(){
          return ListSequence.fromList(SLinkOperations.getTargets(node,"rows",true)).count();
        }
        public int getColumnsNumber(){
          return ListSequence.fromList(SLinkOperations.getTargets(ListSequence.fromList(SLinkOperations.getTargets(node,"rows",true)).first(),"cells",true)).count();
        }
        public void deleteRow(        int row){
          ListSequence.fromList(SLinkOperations.getTargets(node,"rows",true)).removeElementAt(row);
        }
        @Override public void insertRow(        int row){
          SNode rowNode=SConceptOperations.createNewNode("jetbrains.mps.lang.editor.tableTests.structure.Row",null);
          for (int i=0; i < ListSequence.fromList(SLinkOperations.getTargets(ListSequence.fromList(SLinkOperations.getTargets(node,"rows",true)).first(),"cells",true)).count(); i++) {
            ListSequence.fromList(SLinkOperations.getTargets(rowNode,"cells",true)).addElement(SConceptOperations.createNewNode("jetbrains.mps.lang.editor.tableTests.structure.DataCell",null));
          }
          ListSequence.fromList(SLinkOperations.getTargets(node,"rows",true)).insertElement(row,rowNode);
        }
      }
;
    }
  }
;
  EditorCell_Collection editorCell=EditorCell_Table.createTable(editorContext,node,creator.getTable(node,editorContext),"Table_3p37vj_c0");
  editorCell.setCellId("Table_3p37vj_c0_0");
{
    Style style=editorCell.getStyle();
    style.set(StyleAttributes.INDENT_LAYOUT_INDENT,true);
  }
  return editorCell;
}
