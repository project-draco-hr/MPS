{
  List<SNode> aes=SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.baseLanguage.structure.AssignmentExpression");
  for (  SNode ae : aes) {
    SNode ltype=TypeChecker.getInstance().getRuntimeSupport().coerce(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(ae,"lValue",true)),HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.closures.structure.FunctionType"),true);
    SNode rtype=TypeChecker.getInstance().getRuntimeSupport().coerce(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(ae,"rValue",true)),HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.closures.structure.FunctionType"),true);
    if ((ltype != null) && (rtype != null)) {
      if (!(FunctionType_Behavior.call_getSignature_1199633062014(ltype).equals(FunctionType_Behavior.call_getSignature_1199633062014(rtype)))) {
        FunctionTypeUtil.addAdaptableFunctionTypeTarget(rtype,ltype,_context.getGenerator());
        FunctionTypeUtil.putPrepData(SLinkOperations.getTarget(ae,"rValue",true),FunctionType_Behavior.call_getSignature_1199633062014(ltype),_context.getGenerator());
      }
    }
  }
}
