{
  super(project);
  final ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
  final ProgressMonitor monitor=indicator != null ? new ProgressMonitorAdapter(indicator) : new EmptyProgressMonitor();
  monitor.start("Making modules",10);
  try {
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        ClassLoaderManager.getInstance().updateClassPath();
        monitor.advance(1);
        ModuleMaker maker=new ModuleMaker(new MessageHandler(),MessageKind.ERROR);
        maker.make(new LinkedHashSet<IModule>(MPSModuleRepository.getInstance().getAllModules()),monitor.subTask(9));
        LanguageRegistry.compilePassed();
        ConceptRegistry.compilePassed();
      }
    }
);
    StartupManager.getInstance(project).registerPreStartupActivity(new Runnable(){
      public void run(){
        ModelAccess.instance().runWriteAction(new Runnable(){
          public void run(){
            ClassLoaderManager.getInstance().reloadAll(indicator != null ? new ProgressMonitorAdapter(indicator) : new EmptyProgressMonitor());
          }
        }
);
      }
    }
);
  }
  finally {
    monitor.done();
  }
}
