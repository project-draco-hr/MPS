{
  final ProgressIndicator indicator=ProgressManager.getInstance().getProgressIndicator();
  final ProgressMonitor monitor=indicator != null ? new ProgressMonitorAdapter(indicator) : new EmptyProgressMonitor();
  monitor.start("Making modules",10);
  try {
    ModelAccess.instance().runReadAction(new Runnable(){
      @Override public void run(){
        monitor.advance(1);
        final ModuleMaker maker=new ModuleMaker(new MessageHandler(),MessageKind.ERROR);
        myWatcher.executeUnderBlockedReload(new Computable<Object>(){
          @Override public Object compute(){
            maker.make(IterableUtil.asCollection(MPSModuleRepository.getInstance().getModules()),monitor.subTask(9));
            return null;
          }
        }
);
      }
    }
);
    reloadClasses(indicator,early);
  }
  finally {
    monitor.done();
  }
}
