{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case LanguageConceptSwitch.AtLeastNTimesRegexp:
    return props_AtLeastNTimesRegexp;
case LanguageConceptSwitch.BinaryRegexp:
  return props_BinaryRegexp;
case LanguageConceptSwitch.CharacterSymbolClassPart:
return props_CharacterSymbolClassPart;
case LanguageConceptSwitch.DotRegexp:
return props_DotRegexp;
case LanguageConceptSwitch.FindMatchExpression:
return props_FindMatchExpression;
case LanguageConceptSwitch.FindMatchStatement:
return props_FindMatchStatement;
case LanguageConceptSwitch.ForEachMatchStatement:
return props_ForEachMatchStatement;
case LanguageConceptSwitch.FromNToMTimesRegexp:
return props_FromNToMTimesRegexp;
case LanguageConceptSwitch.InlineRegexpExpression:
return props_InlineRegexpExpression;
case LanguageConceptSwitch.IntersectionSymbolClassPart:
return props_IntersectionSymbolClassPart;
case LanguageConceptSwitch.IntervalSymbolClassPart:
return props_IntervalSymbolClassPart;
case LanguageConceptSwitch.LazyPlusRegexp:
return props_LazyPlusRegexp;
case LanguageConceptSwitch.LazyQuestionRegexp:
return props_LazyQuestionRegexp;
case LanguageConceptSwitch.LazyStarRegexp:
return props_LazyStarRegexp;
case LanguageConceptSwitch.LineEndRegexp:
return props_LineEndRegexp;
case LanguageConceptSwitch.LineStartRegexp:
return props_LineStartRegexp;
case LanguageConceptSwitch.LiteralReplacement:
return props_LiteralReplacement;
case LanguageConceptSwitch.LookRegexp:
return props_LookRegexp;
case LanguageConceptSwitch.MatchParensRegexp:
return props_MatchParensRegexp;
case LanguageConceptSwitch.MatchRegexpExpression:
return props_MatchRegexpExpression;
case LanguageConceptSwitch.MatchRegexpOperation:
return props_MatchRegexpOperation;
case LanguageConceptSwitch.MatchRegexpStatement:
return props_MatchRegexpStatement;
case LanguageConceptSwitch.MatchVariableReference:
return props_MatchVariableReference;
case LanguageConceptSwitch.MatchVariableReferenceRegexp:
return props_MatchVariableReferenceRegexp;
case LanguageConceptSwitch.MatchVariableReferenceReplacement:
return props_MatchVariableReferenceReplacement;
case LanguageConceptSwitch.NTimesRegexp:
return props_NTimesRegexp;
case LanguageConceptSwitch.NegativeLookAheadRegexp:
return props_NegativeLookAheadRegexp;
case LanguageConceptSwitch.NegativeLookBehindRegexp:
return props_NegativeLookBehindRegexp;
case LanguageConceptSwitch.NegativeSymbolClassRegexp:
return props_NegativeSymbolClassRegexp;
case LanguageConceptSwitch.OrRegexp:
return props_OrRegexp;
case LanguageConceptSwitch.ParensRegexp:
return props_ParensRegexp;
case LanguageConceptSwitch.PlusRegexp:
return props_PlusRegexp;
case LanguageConceptSwitch.PositiveLookAheadRegexp:
return props_PositiveLookAheadRegexp;
case LanguageConceptSwitch.PositiveLookBehindRegexp:
return props_PositiveLookBehindRegexp;
case LanguageConceptSwitch.PositiveSymbolClassRegexp:
return props_PositiveSymbolClassRegexp;
case LanguageConceptSwitch.PredefinedSymbolClassDeclaration:
return props_PredefinedSymbolClassDeclaration;
case LanguageConceptSwitch.PredefinedSymbolClassRegexp:
return props_PredefinedSymbolClassRegexp;
case LanguageConceptSwitch.PredefinedSymbolClassSymbolClassPart:
return props_PredefinedSymbolClassSymbolClassPart;
case LanguageConceptSwitch.PredefinedSymbolClasses:
return props_PredefinedSymbolClasses;
case LanguageConceptSwitch.QuestionRegexp:
return props_QuestionRegexp;
case LanguageConceptSwitch.Regexp:
return props_Regexp;
case LanguageConceptSwitch.RegexpDeclaration:
return props_RegexpDeclaration;
case LanguageConceptSwitch.RegexpDeclarationReferenceRegexp:
return props_RegexpDeclarationReferenceRegexp;
case LanguageConceptSwitch.RegexpExpression:
return props_RegexpExpression;
case LanguageConceptSwitch.RegexpUsingConstruction:
return props_RegexpUsingConstruction;
case LanguageConceptSwitch.Regexps:
return props_Regexps;
case LanguageConceptSwitch.ReplaceBlock:
return props_ReplaceBlock;
case LanguageConceptSwitch.ReplaceRegexpOperation:
return props_ReplaceRegexpOperation;
case LanguageConceptSwitch.ReplaceWithRegexpExpression:
return props_ReplaceWithRegexpExpression;
case LanguageConceptSwitch.ReplaceWithRegexpOperation:
return props_ReplaceWithRegexpOperation;
case LanguageConceptSwitch.Replacement:
return props_Replacement;
case LanguageConceptSwitch.SeqRegexp:
return props_SeqRegexp;
case LanguageConceptSwitch.SplitExpression:
return props_SplitExpression;
case LanguageConceptSwitch.SplitOperation:
return props_SplitOperation;
case LanguageConceptSwitch.StarRegexp:
return props_StarRegexp;
case LanguageConceptSwitch.StringLiteralRegexp:
return props_StringLiteralRegexp;
case LanguageConceptSwitch.SymbolClassPart:
return props_SymbolClassPart;
case LanguageConceptSwitch.SymbolClassRegexp:
return props_SymbolClassRegexp;
case LanguageConceptSwitch.SymbolClassRegexpAndPart:
return props_SymbolClassRegexpAndPart;
case LanguageConceptSwitch.UnaryRegexp:
return props_UnaryRegexp;
case LanguageConceptSwitch.UnicodeCharacterRegexp:
return props_UnicodeCharacterRegexp;
}
return null;
}
