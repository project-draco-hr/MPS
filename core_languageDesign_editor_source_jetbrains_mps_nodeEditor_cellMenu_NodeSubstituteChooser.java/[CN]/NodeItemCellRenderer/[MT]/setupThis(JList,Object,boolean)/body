{
  INodeSubstituteAction action=(INodeSubstituteAction)value;
  String pattern=getPatternEditor().getPattern();
  try {
    myLeft.setIcon(action.getIconFor(pattern));
  }
 catch (  Throwable t) {
    LOG.error(t);
  }
  try {
    int style=action.getFontStyleFor(pattern);
    int oldStyle=myLeft.getFont().getStyle();
    if (oldStyle != style) {
      myLeft.setFont(myLeft.getFont().deriveFont(style));
      myRight.setFont(myRight.getFont().deriveFont(style));
    }
  }
 catch (  Throwable t) {
    LOG.error(t);
  }
  try {
    myLeft.setText(action.getVisibleMatchingText(pattern));
  }
 catch (  Throwable t) {
    myLeft.setText("!Exception was thrown!");
    LOG.error(t);
  }
  try {
    myRight.setText(action.getDescriptionText(pattern));
  }
 catch (  Throwable t) {
    myRight.setText("!Exception was thrown!");
    LOG.error(t);
  }
  if (isSelected) {
    setBackground(list.getSelectionBackground());
    setForeground(list.getSelectionForeground());
    myLeft.setForeground(list.getSelectionForeground());
    myRight.setForeground(list.getSelectionForeground());
  }
 else {
    setBackground(list.getBackground());
    setForeground(list.getForeground());
    myLeft.setForeground(list.getForeground());
    myRight.setForeground(list.getForeground());
  }
  myLeft.setPreferredSize(null);
  Dimension oldPreferredSize=myLeft.getPreferredSize();
  myLeft.setPreferredSize(new Dimension(oldPreferredSize.width + 1,oldPreferredSize.height));
}
