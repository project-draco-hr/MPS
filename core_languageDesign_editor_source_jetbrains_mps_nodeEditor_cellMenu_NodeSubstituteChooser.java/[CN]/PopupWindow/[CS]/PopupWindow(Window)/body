{
  super(owner);
  getOwner().addComponentListener(myComponentListener);
  myList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myList.setFont(EditorSettings.getInstance().getDefaultEditorFont());
  myList.setBackground(BACKGROUND_COLOR);
  myList.setForeground(FOREGROUND_COLOR);
  myList.setSelectionBackground(SELECTED_BACKGROUND_COLOR);
  myList.setSelectionForeground(SELECTED_FOREGROUND_COLOR);
  myList.addMouseListener(new MouseAdapter(){
    public void mousePressed(    MouseEvent e){
      repaintPopupMenu();
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          updatePatternEditor();
        }
      }
);
    }
    public void mouseClicked(    MouseEvent e){
      if (e.getClickCount() == 2) {
        ModelAccess.instance().runWriteActionInCommand(new Runnable(){
          public void run(){
            doSubstituteSelection();
          }
        }
);
      }
    }
  }
);
  myList.setCellRenderer(new NodeItemCellRenderer());
  add(myScroller);
  myScroller.getHorizontalScrollBar().setFocusable(false);
  myScroller.getVerticalScrollBar().setFocusable(false);
  myList.setFocusable(false);
  pack();
}
