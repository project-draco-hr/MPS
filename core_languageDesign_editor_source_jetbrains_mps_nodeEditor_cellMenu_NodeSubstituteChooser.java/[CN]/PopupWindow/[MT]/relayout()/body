{
  Component component=myEditorComponent;
  Point anchor=component.getLocationOnScreen();
  Point location=new Point(anchor.x + myRelativeCell.getX() + myRelativeCell.getLeftInsert(),anchor.y + myRelativeCell.getY() + myRelativeCell.getHeight());
  Rectangle deviceBounds=WindowsUtil.findDeviceBoundsAt(location);
  if (location.getY() + PREFERRED_HEIGHT > deviceBounds.height + deviceBounds.y - 150) {
    getPopupWindow().setPosition(PopupWindowPosition.TOP);
  }
 else {
    getPopupWindow().setPosition(PopupWindowPosition.BOTTOM);
  }
  Point newLocation=location;
  int oldIndex=getSelectionIndex();
  myList.setModel(new ListModel(){
    public int getSize(){
      return mySubstituteActions.size();
    }
    public Object getElementAt(    int index){
      return mySubstituteActions.get(index);
    }
    public void addListDataListener(    ListDataListener l){
    }
    public void removeListDataListener(    ListDataListener l){
    }
  }
);
  setSelectionIndex(oldIndex);
  scrollToSelection();
  setSize(Math.max(PREFERRED_WIDTH,myList.getPreferredSize().width + 21),Math.min(PREFERRED_HEIGHT,myList.getPreferredSize().height + getVerticalScrollerHeight()));
  if (getPosition() == PopupWindowPosition.TOP) {
    newLocation=new Point(newLocation.x,newLocation.y - getHeight() - myRelativeCell.getHeight());
  }
  if (getWidth() >= deviceBounds.width) {
    setSize(deviceBounds.width,getSize().height + myList.getFontMetrics(myList.getFont()).getHeight());
  }
  if (newLocation.x < deviceBounds.x) {
    newLocation.x=deviceBounds.x;
  }
  if (getWidth() + newLocation.x > deviceBounds.width + deviceBounds.x) {
    newLocation=new Point(deviceBounds.width + deviceBounds.x - getWidth(),newLocation.y);
  }
  setLocation(newLocation);
  validateTree();
  repaint();
}
