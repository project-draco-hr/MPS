{
  EmbeddedGraph embeddedGraph=new EmbeddedGraph(graph);
  this.findCycle(embeddedGraph);
  Set<Node> toBeAdded=SetSequence.<Node>fromSet(new HashSet<Node>());
  SetSequence.fromSet(toBeAdded).addSequence(ListSequence.<Node>fromList(graph.getNodes()));
  for (  Dart dart : ListSequence.<Dart>fromList(embeddedGraph.getOuterFace().getDarts())) {
    SetSequence.fromSet(toBeAdded).removeElement(dart.getSource());
  }
  while (SetSequence.<Node>fromSet(toBeAdded).count() > 0) {
    for (    Edge edge : ListSequence.<Edge>fromList(graph.getEdges())) {
      for (      Node node : ListSequence.<Node>fromList(edge.getAdjacentNodes())) {
        Node opNode=edge.getOpposite(node);
        if (!(SetSequence.<Node>fromSet(toBeAdded).contains(node)) && SetSequence.<Node>fromSet(toBeAdded).contains(opNode)) {
          addPath(embeddedGraph,node,opNode,toBeAdded);
        }
      }
    }
  }
  return embeddedGraph;
}
