{
  SNode lvalueType=((SNode)baseAssignment.getUserObject(TransformatorImpl.LTYPE));
  SNode rvalueType=((SNode)baseAssignment.getUserObject(TransformatorImpl.RTYPE));
  SNode rightExpression;
  if (SNodeOperations.isInstanceOf(baseAssignment,"jetbrains.mps.baseLanguage.structure.AndAssignmentExpression")) {
    rightExpression=new TransformationUtil.QuotationClass_crriw5_a0a0a5a5().createNode(SLinkOperations.getTarget(baseAssignment,"rValue",true),SLinkOperations.getTarget(baseAssignment,"lValue",true));
  }
 else   if (SNodeOperations.isInstanceOf(baseAssignment,"jetbrains.mps.baseLanguage.structure.DivAssignmentExpression")) {
    rightExpression=new TransformationUtil.QuotationClass_crriw5_a0a0a0f0f().createNode(SLinkOperations.getTarget(baseAssignment,"lValue",true),SLinkOperations.getTarget(baseAssignment,"rValue",true));
  }
 else   if (SNodeOperations.isInstanceOf(baseAssignment,"jetbrains.mps.baseLanguage.structure.LeftShiftAssignmentExpression")) {
    rightExpression=new TransformationUtil.QuotationClass_crriw5_a0a0a1f0f().createNode(SLinkOperations.getTarget(baseAssignment,"lValue",true),SLinkOperations.getTarget(baseAssignment,"rValue",true));
  }
 else   if (SNodeOperations.isInstanceOf(baseAssignment,"jetbrains.mps.baseLanguage.structure.MinusAssignmentExpression")) {
    rightExpression=new TransformationUtil.QuotationClass_crriw5_a0a0a2f0f().createNode(SLinkOperations.getTarget(baseAssignment,"lValue",true),SLinkOperations.getTarget(baseAssignment,"rValue",true));
  }
 else   if (SNodeOperations.isInstanceOf(baseAssignment,"jetbrains.mps.baseLanguage.structure.MulAssignmentExpression")) {
    rightExpression=new TransformationUtil.QuotationClass_crriw5_a0a0a3f0f().createNode(SLinkOperations.getTarget(baseAssignment,"lValue",true),SLinkOperations.getTarget(baseAssignment,"rValue",true));
  }
 else   if (SNodeOperations.isInstanceOf(baseAssignment,"jetbrains.mps.baseLanguage.structure.OrAssignmentExpression")) {
    rightExpression=new TransformationUtil.QuotationClass_crriw5_a0a0a4f0f().createNode(SLinkOperations.getTarget(baseAssignment,"lValue",true),SLinkOperations.getTarget(baseAssignment,"rValue",true));
  }
 else   if (SNodeOperations.isInstanceOf(baseAssignment,"jetbrains.mps.baseLanguage.structure.PlusAssignmentExpression")) {
    rightExpression=new TransformationUtil.QuotationClass_crriw5_a0a0a5f0f().createNode(SLinkOperations.getTarget(baseAssignment,"lValue",true),SLinkOperations.getTarget(baseAssignment,"rValue",true));
  }
 else   if (SNodeOperations.isInstanceOf(baseAssignment,"jetbrains.mps.baseLanguage.structure.RemAssignmentExpression")) {
    rightExpression=new TransformationUtil.QuotationClass_crriw5_a0a0a6f0f().createNode(SLinkOperations.getTarget(baseAssignment,"lValue",true),SLinkOperations.getTarget(baseAssignment,"rValue",true));
  }
 else   if (SNodeOperations.isInstanceOf(baseAssignment,"jetbrains.mps.baseLanguage.structure.RightShiftAssignmentExpression")) {
    rightExpression=new TransformationUtil.QuotationClass_crriw5_a0a0a7f0f().createNode(SLinkOperations.getTarget(baseAssignment,"lValue",true),SLinkOperations.getTarget(baseAssignment,"rValue",true));
  }
 else   if (SNodeOperations.isInstanceOf(baseAssignment,"jetbrains.mps.baseLanguage.structure.XorAssignmentExpression")) {
    rightExpression=new TransformationUtil.QuotationClass_crriw5_a0a0a8f0f().createNode(SLinkOperations.getTarget(baseAssignment,"lValue",true),SLinkOperations.getTarget(baseAssignment,"rValue",true));
  }
 else {
    return;
  }
  SNodeOperations.replaceWithAnother(baseAssignment,new TransformationUtil.QuotationClass_crriw5_a0a0g0f().createNode(SLinkOperations.getTarget(baseAssignment,"lValue",true),rightExpression));
  rightExpression.putUserObject(TransformatorImpl.LTYPE,SNodeOperations.copyNode(lvalueType));
  rightExpression.putUserObject(TransformatorImpl.RTYPE,SNodeOperations.copyNode(rvalueType));
  AttributeOperations.createAndSetAttrbiute(rightExpression,new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.debugger.java.evaluation.structure.UnprocessedAnnotation")),"jetbrains.mps.debugger.java.evaluation.structure.UnprocessedAnnotation");
  AttributeOperations.createAndSetAttrbiute(baseAssignment,new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.debugger.java.evaluation.structure.UnprocessedAnnotation")),"jetbrains.mps.debugger.java.evaluation.structure.UnprocessedAnnotation");
}
