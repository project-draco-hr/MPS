{
  List<SConcept> result=ListSequence.fromList(new ArrayList<SConcept>());
  for (  SAbstractConcept concept : MetaAdapterFactory.getLanguage(0xf3061a5392264cc5L,0xa443f952ceaf5816L,"jetbrains.mps.baseLanguage").getConcepts()) {
    if (!(concept.isAbstract()) && SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(concept),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10f0ad8bde4L,"jetbrains.mps.baseLanguage.structure.PrimitiveType")) && !(SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(concept),MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x19796fa16a19888bL,"jetbrains.mps.lang.core.structure.IDontSubstituteByDefault")))&& isNotEmptyString(concept.getConceptAlias())) {
      ListSequence.fromList(result).addElement((SConcept)concept);
    }
  }
  return result;
}
