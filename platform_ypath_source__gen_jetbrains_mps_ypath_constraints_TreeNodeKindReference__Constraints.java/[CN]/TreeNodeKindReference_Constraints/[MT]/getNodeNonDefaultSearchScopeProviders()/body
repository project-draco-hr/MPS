{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("treeNodeKind",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      ISearchScope searchScope;
      if ((_context.getReferenceNode() != null) && (SLinkOperations.getTarget(_context.getReferenceNode(),"treePathAspect",false) != null)) {
        searchScope=new SimpleSearchScope(SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getReferenceNode(),"treePathAspect",false),"nodeKinds",true));
      }
 else {
        searchScope=new EmptySearchScope();
      }
      return searchScope;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c895905a8(jetbrains.mps.ypath.constraints)","1213104858820");
    }
  }
);
  return result;
}
