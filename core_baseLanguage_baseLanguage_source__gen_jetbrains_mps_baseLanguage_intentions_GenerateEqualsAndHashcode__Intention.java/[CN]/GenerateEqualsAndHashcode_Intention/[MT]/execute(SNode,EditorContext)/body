{
  final SNode classConcept=SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.ClassConcept");
  final List<SNode> fields=SLinkOperations.getTargets(classConcept,"field",true);
  final SNode thisExp=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ThisExpression",null);
  final SNode equalsDeclaration=new _Quotations.QuotationClass_14().createNode(thisExp,thisExp,classConcept,classConcept);
  SNode thatDeclaration=SLinkOperations.getTarget(SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(equalsDeclaration,"body",true),"statement",true)).last(),"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement"),"localVariableDeclaration",true);
  SNode thatRef=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalVariableReference",null);
  SLinkOperations.setTarget(thatRef,"variableDeclaration",thatDeclaration,false);
  SNode fieldRefOperation=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.FieldReferenceOperation",null);
  for (  SNode field : fields) {
    SLinkOperations.setTarget(fieldRefOperation,"fieldDeclaration",field,false);
    SNode checkStmt;
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,"type",true),"jetbrains.mps.baseLanguage.structure.PrimitiveType")) {
      checkStmt=new _Quotations.QuotationClass_13().createNode(thatRef,fieldRefOperation,thisExp,fieldRefOperation);
    }
 else     if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,"type",true),"jetbrains.mps.baseLanguage.structure.ArrayType")) {
      checkStmt=new _Quotations.QuotationClass_11().createNode(thisExp,fieldRefOperation,thatRef,fieldRefOperation);
    }
 else {
      checkStmt=new _Quotations.QuotationClass_12().createNode(thatRef,fieldRefOperation,thisExp,fieldRefOperation,thisExp,fieldRefOperation,thatRef,fieldRefOperation);
    }
    SLinkOperations.addChild(SLinkOperations.getTarget(equalsDeclaration,"body",true),"statement",checkStmt);
  }
  SLinkOperations.addNewChild(SLinkOperations.getTarget(equalsDeclaration,"body",true),"statement","jetbrains.mps.baseLanguage.structure.Statement");
  SLinkOperations.addChild(SLinkOperations.getTarget(equalsDeclaration,"body",true),"statement",new _Quotations.QuotationClass_26().createNode());
  SLinkOperations.addChild(classConcept,"method",equalsDeclaration);
  SNode hashCodeDeclaration=SLinkOperations.addChild(classConcept,"method",new _Quotations.QuotationClass_25().createNode());
  SNode resultDeclaration=new _Quotations.QuotationClass_9().createNode();
  SNode resultReference=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalVariableReference",null);
  SLinkOperations.setTarget(resultReference,"variableDeclaration",SLinkOperations.getTarget(resultDeclaration,"localVariableDeclaration",true),false);
  SLinkOperations.addChild(SLinkOperations.getTarget(hashCodeDeclaration,"body",true),"statement",resultDeclaration);
  int i=239;
  for (  final SNode field : fields) {
    SLinkOperations.setTarget(fieldRefOperation,"fieldDeclaration",field,false);
    SNode checkStatement=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.Statement",null);
    SNode plusExpression=new _Quotations.QuotationClass_19().createNode(resultReference);
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,"type",true),"jetbrains.mps.baseLanguage.structure.IntegerType")) {
      checkStatement=new _Quotations.QuotationClass_24().createNode(resultReference,thisExp,field,plusExpression);
    }
 else     if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,"type",true),"jetbrains.mps.baseLanguage.structure.FloatType")) {
      checkStatement=new _Quotations.QuotationClass_28().createNode(resultReference,plusExpression,thisExp,field,thisExp,field);
    }
 else     if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,"type",true),"jetbrains.mps.baseLanguage.structure.StringType")) {
      checkStatement=new _Quotations.QuotationClass_29().createNode(resultReference,plusExpression,fieldRefOperation,fieldRefOperation);
    }
 else     if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(field,"type",true),"jetbrains.mps.baseLanguage.structure.ArrayType")) {
      checkStatement=new _Quotations.QuotationClass_30().createNode(plusExpression,fieldRefOperation,thisExp,fieldRefOperation,resultReference);
    }
 else {
      checkStatement=new _Quotations.QuotationClass_31().createNode(thisExp,fieldRefOperation,thisExp,plusExpression,resultReference);
    }
    SLinkOperations.addChild(SLinkOperations.getTarget(hashCodeDeclaration,"body",true),"statement",checkStatement);
  }
  SLinkOperations.addChild(SLinkOperations.getTarget(hashCodeDeclaration,"body",true),"statement",new _Quotations.QuotationClass_10().createNode(resultReference));
}
