{
  SNode result=null;
  Set<SNode> _parameterValues_129834374=new HashSet<SNode>();
  SNode quotedNode_189=null;
  SNode quotedNode_190=null;
  SNode quotedNode_191=null;
  SNode quotedNode_192=null;
  SNode quotedNode_193=null;
  SNode quotedNode_194=null;
  SNode quotedNode_195=null;
  SNode quotedNode_196=null;
  SNode quotedNode_197=null;
  SNode quotedNode_198=null;
  SNode quotedNode_199=null;
  SNode quotedNode_200=null;
  SNode quotedNode_201=null;
  SNode quotedNode_202=null;
  SNode quotedNode_203=null;
  SNode quotedNode_204=null;
  SNode quotedNode_205=null;
  SNode quotedNode_206=null;
{
    quotedNode_189=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement",TypeChecker.getInstance().getRuntimeTypesModel(),GlobalScope.getInstance(),false);
    SNode quotedNode1_189=quotedNode_189;
{
      quotedNode_190=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AssignmentExpression",TypeChecker.getInstance().getRuntimeTypesModel(),GlobalScope.getInstance(),false);
      SNode quotedNode1_190=quotedNode_190;
{
        quotedNode_191=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PlusExpression",TypeChecker.getInstance().getRuntimeTypesModel(),GlobalScope.getInstance(),false);
        SNode quotedNode1_191=quotedNode_191;
{
          quotedNode_193=(SNode)parameter_8114_37;
          SNode quotedNode1_192;
          if (_parameterValues_129834374.contains(quotedNode_193)) {
            quotedNode1_192=CopyUtil.copy(quotedNode_193);
          }
 else {
            _parameterValues_129834374.add(quotedNode_193);
            quotedNode1_192=quotedNode_193;
          }
          if (quotedNode1_192 != null) {
            quotedNode_191.addChild("leftExpression",HUtil.copyIfNecessary(quotedNode1_192));
          }
        }
{
          quotedNode_194=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.CastExpression",TypeChecker.getInstance().getRuntimeTypesModel(),GlobalScope.getInstance(),false);
          SNode quotedNode1_193=quotedNode_194;
{
            quotedNode_195=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerType",TypeChecker.getInstance().getRuntimeTypesModel(),GlobalScope.getInstance(),false);
            SNode quotedNode1_194=quotedNode_195;
            quotedNode_194.addChild("type",quotedNode1_194);
          }
{
            quotedNode_196=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression",TypeChecker.getInstance().getRuntimeTypesModel(),GlobalScope.getInstance(),false);
            SNode quotedNode1_195=quotedNode_196;
{
              quotedNode_197=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BitwiseXorExpression",TypeChecker.getInstance().getRuntimeTypesModel(),GlobalScope.getInstance(),false);
              SNode quotedNode1_196=quotedNode_197;
{
                quotedNode_198=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression",TypeChecker.getInstance().getRuntimeTypesModel(),GlobalScope.getInstance(),false);
                SNode quotedNode1_197=quotedNode_198;
{
                  quotedNode_200=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ShiftRightExpression",TypeChecker.getInstance().getRuntimeTypesModel(),GlobalScope.getInstance(),false);
                  SNode quotedNode1_198=quotedNode_200;
{
                    quotedNode_203=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerConstant",TypeChecker.getInstance().getRuntimeTypesModel(),GlobalScope.getInstance(),false);
                    SNode quotedNode1_199=quotedNode_203;
                    quotedNode1_199.setProperty("value","32");
                    quotedNode_200.addChild("rightExpression",quotedNode1_199);
                  }
{
                    quotedNode_204=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",TypeChecker.getInstance().getRuntimeTypesModel(),GlobalScope.getInstance(),false);
                    SNode quotedNode1_200=quotedNode_204;
{
                      quotedNode_205=(SNode)parameter_8114_38;
                      SNode quotedNode1_201;
                      if (_parameterValues_129834374.contains(quotedNode_205)) {
                        quotedNode1_201=CopyUtil.copy(quotedNode_205);
                      }
 else {
                        _parameterValues_129834374.add(quotedNode_205);
                        quotedNode1_201=quotedNode_205;
                      }
                      if (quotedNode1_201 != null) {
                        quotedNode_204.addChild("operand",HUtil.copyIfNecessary(quotedNode1_201));
                      }
                    }
{
                      quotedNode_206=(SNode)parameter_8114_39;
                      SNode quotedNode1_202;
                      if (_parameterValues_129834374.contains(quotedNode_206)) {
                        quotedNode1_202=CopyUtil.copy(quotedNode_206);
                      }
 else {
                        _parameterValues_129834374.add(quotedNode_206);
                        quotedNode1_202=quotedNode_206;
                      }
                      if (quotedNode1_202 != null) {
                        quotedNode_204.addChild("operation",HUtil.copyIfNecessary(quotedNode1_202));
                      }
                    }
                    quotedNode_200.addChild("leftExpression",quotedNode1_200);
                  }
                  quotedNode_198.addChild("expression",quotedNode1_198);
                }
                quotedNode_197.addChild("rightExpression",quotedNode1_197);
              }
{
                quotedNode_199=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",TypeChecker.getInstance().getRuntimeTypesModel(),GlobalScope.getInstance(),false);
                SNode quotedNode1_203=quotedNode_199;
{
                  quotedNode_201=(SNode)parameter_8114_40;
                  SNode quotedNode1_204;
                  if (_parameterValues_129834374.contains(quotedNode_201)) {
                    quotedNode1_204=CopyUtil.copy(quotedNode_201);
                  }
 else {
                    _parameterValues_129834374.add(quotedNode_201);
                    quotedNode1_204=quotedNode_201;
                  }
                  if (quotedNode1_204 != null) {
                    quotedNode_199.addChild("operand",HUtil.copyIfNecessary(quotedNode1_204));
                  }
                }
{
                  quotedNode_202=(SNode)parameter_8114_41;
                  SNode quotedNode1_205;
                  if (_parameterValues_129834374.contains(quotedNode_202)) {
                    quotedNode1_205=CopyUtil.copy(quotedNode_202);
                  }
 else {
                    _parameterValues_129834374.add(quotedNode_202);
                    quotedNode1_205=quotedNode_202;
                  }
                  if (quotedNode1_205 != null) {
                    quotedNode_199.addChild("operation",HUtil.copyIfNecessary(quotedNode1_205));
                  }
                }
                quotedNode_197.addChild("leftExpression",quotedNode1_203);
              }
              quotedNode_196.addChild("expression",quotedNode1_196);
            }
            quotedNode_194.addChild("expression",quotedNode1_195);
          }
          quotedNode_191.addChild("rightExpression",quotedNode1_193);
        }
        quotedNode_190.addChild("rValue",quotedNode1_191);
      }
{
        quotedNode_192=(SNode)parameter_8114_42;
        SNode quotedNode1_206;
        if (_parameterValues_129834374.contains(quotedNode_192)) {
          quotedNode1_206=CopyUtil.copy(quotedNode_192);
        }
 else {
          _parameterValues_129834374.add(quotedNode_192);
          quotedNode1_206=quotedNode_192;
        }
        if (quotedNode1_206 != null) {
          quotedNode_190.addChild("lValue",HUtil.copyIfNecessary(quotedNode1_206));
        }
      }
      quotedNode_189.addChild("expression",quotedNode1_190);
    }
    result=quotedNode1_189;
  }
  return result;
}
