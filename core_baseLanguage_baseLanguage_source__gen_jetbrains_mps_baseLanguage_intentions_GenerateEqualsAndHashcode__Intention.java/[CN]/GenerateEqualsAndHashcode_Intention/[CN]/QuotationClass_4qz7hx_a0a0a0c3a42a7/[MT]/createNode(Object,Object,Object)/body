{
  SNode result=null;
  Set<SNode> _parameterValues_129834374=new HashSet<SNode>();
  SNode quotedNode_1=null;
  SNode quotedNode_2=null;
  SNode quotedNode_3=null;
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  SNode quotedNode_7=null;
  SNode quotedNode_8=null;
  SNode quotedNode_9=null;
  SNode quotedNode_10=null;
  SNode quotedNode_11=null;
{
    quotedNode_1=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement",null,GlobalScope.getInstance(),false);
    SNode quotedNode1_12=quotedNode_1;
{
      quotedNode_2=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AssignmentExpression",null,GlobalScope.getInstance(),false);
      SNode quotedNode1_13=quotedNode_2;
{
        quotedNode_3=(SNode)parameter_23;
        SNode quotedNode1_14;
        if (_parameterValues_129834374.contains(quotedNode_3)) {
          quotedNode1_14=HUtil.copyIfNecessary(quotedNode_3);
        }
 else {
          _parameterValues_129834374.add(quotedNode_3);
          quotedNode1_14=quotedNode_3;
        }
        if (quotedNode1_14 != null) {
          quotedNode_2.addChild("lValue",HUtil.copyIfNecessary(quotedNode1_14));
        }
      }
{
        quotedNode_4=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.TernaryOperatorExpression",null,GlobalScope.getInstance(),false);
        SNode quotedNode1_15=quotedNode_4;
{
          quotedNode_5=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall",null,GlobalScope.getInstance(),false);
          SNode quotedNode1_16=quotedNode_5;
          quotedNode1_16.addReference(SReference.create("baseMethodDeclaration",quotedNode1_16,SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"),SNodeId.fromString("~Double.doubleToLongBits(double):long")));
          quotedNode1_16.addReference(SReference.create("classConcept",quotedNode1_16,SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"),SNodeId.fromString("~Double")));
{
            quotedNode_8=(SNode)parameter_24;
            SNode quotedNode1_17;
            if (_parameterValues_129834374.contains(quotedNode_8)) {
              quotedNode1_17=HUtil.copyIfNecessary(quotedNode_8);
            }
 else {
              _parameterValues_129834374.add(quotedNode_8);
              quotedNode1_17=quotedNode_8;
            }
            if (quotedNode1_17 != null) {
              quotedNode_5.addChild("actualArgument",HUtil.copyIfNecessary(quotedNode1_17));
            }
          }
          quotedNode_4.addChild("ifTrue",quotedNode1_16);
        }
{
          quotedNode_6=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.LongLiteral",null,GlobalScope.getInstance(),false);
          SNode quotedNode1_18=quotedNode_6;
          quotedNode1_18.setProperty("value","0L");
          quotedNode_4.addChild("ifFalse",quotedNode1_18);
        }
{
          quotedNode_7=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression",null,GlobalScope.getInstance(),false);
          SNode quotedNode1_19=quotedNode_7;
{
            quotedNode_9=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotEqualsExpression",null,GlobalScope.getInstance(),false);
            SNode quotedNode1_20=quotedNode_9;
{
              quotedNode_10=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.FloatingPointConstant",null,GlobalScope.getInstance(),false);
              SNode quotedNode1_21=quotedNode_10;
              quotedNode1_21.setProperty("value","0.0");
              quotedNode_9.addChild("rightExpression",quotedNode1_21);
            }
{
              quotedNode_11=(SNode)parameter_25;
              SNode quotedNode1_22;
              if (_parameterValues_129834374.contains(quotedNode_11)) {
                quotedNode1_22=HUtil.copyIfNecessary(quotedNode_11);
              }
 else {
                _parameterValues_129834374.add(quotedNode_11);
                quotedNode1_22=quotedNode_11;
              }
              if (quotedNode1_22 != null) {
                quotedNode_9.addChild("leftExpression",HUtil.copyIfNecessary(quotedNode1_22));
              }
            }
            quotedNode_7.addChild("expression",quotedNode1_20);
          }
          quotedNode_4.addChild("condition",quotedNode1_19);
        }
        quotedNode_2.addChild("rValue",quotedNode1_15);
      }
      quotedNode_1.addChild("expression",quotedNode1_13);
    }
    result=quotedNode1_12;
  }
  return result;
}
