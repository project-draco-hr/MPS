{
  SNode result=null;
  Set<SNode> _parameterValues_129834374=new HashSet<SNode>();
  SNode quotedNode_1=null;
  SNode quotedNode_2=null;
  SNode quotedNode_3=null;
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  SNode quotedNode_7=null;
  SNode quotedNode_8=null;
  SNode quotedNode_9=null;
  SNode quotedNode_10=null;
  SNode quotedNode_11=null;
  SNode quotedNode_12=null;
  SNode quotedNode_13=null;
  SNode quotedNode_14=null;
  SNode quotedNode_15=null;
  SNode quotedNode_16=null;
  SNode quotedNode_17=null;
  SNode quotedNode_18=null;
  SNode quotedNode_19=null;
  SNode quotedNode_20=null;
  SNode quotedNode_21=null;
  SNode quotedNode_22=null;
  SNode quotedNode_23=null;
  SNode quotedNode_24=null;
  SNode quotedNode_25=null;
  SNode quotedNode_26=null;
  SNode quotedNode_27=null;
{
    quotedNode_1=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IfStatement",null,GlobalScope.getInstance(),false);
    SNode quotedNode1_28=quotedNode_1;
{
      quotedNode_2=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList",null,GlobalScope.getInstance(),false);
      SNode quotedNode1_29=quotedNode_2;
{
        quotedNode_4=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ReturnStatement",null,GlobalScope.getInstance(),false);
        SNode quotedNode1_30=quotedNode_4;
{
          quotedNode_8=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BooleanConstant",null,GlobalScope.getInstance(),false);
          SNode quotedNode1_31=quotedNode_8;
          quotedNode1_31.setProperty("value","false");
          quotedNode_4.addChild("expression",quotedNode1_31);
        }
        quotedNode_2.addChild("statement",quotedNode1_30);
      }
      quotedNode_1.addChild("ifTrue",quotedNode1_29);
    }
{
      quotedNode_3=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.TernaryOperatorExpression",null,GlobalScope.getInstance(),false);
      SNode quotedNode1_32=quotedNode_3;
{
        quotedNode_5=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotExpression",null,GlobalScope.getInstance(),false);
        SNode quotedNode1_33=quotedNode_5;
{
          quotedNode_9=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",null,GlobalScope.getInstance(),false);
          SNode quotedNode1_34=quotedNode_9;
{
            quotedNode_14=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation",null,GlobalScope.getInstance(),false);
            SNode quotedNode1_35=quotedNode_14;
            quotedNode1_35.addReference(SReference.create("baseMethodDeclaration",quotedNode1_35,SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"),SNodeId.fromString("~Object.equals(java.lang.Object):boolean")));
{
              quotedNode_20=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",null,GlobalScope.getInstance(),false);
              SNode quotedNode1_36=quotedNode_20;
{
                quotedNode_22=(SNode)parameter_55;
                SNode quotedNode1_37;
                if (_parameterValues_129834374.contains(quotedNode_22)) {
                  quotedNode1_37=CopyUtil.copy(quotedNode_22);
                }
 else {
                  _parameterValues_129834374.add(quotedNode_22);
                  quotedNode1_37=quotedNode_22;
                }
                if (quotedNode1_37 != null) {
                  quotedNode_20.addChild("operand",HUtil.copyIfNecessary(quotedNode1_37));
                }
              }
{
                quotedNode_23=(SNode)parameter_56;
                SNode quotedNode1_38;
                if (_parameterValues_129834374.contains(quotedNode_23)) {
                  quotedNode1_38=CopyUtil.copy(quotedNode_23);
                }
 else {
                  _parameterValues_129834374.add(quotedNode_23);
                  quotedNode1_38=quotedNode_23;
                }
                if (quotedNode1_38 != null) {
                  quotedNode_20.addChild("operation",HUtil.copyIfNecessary(quotedNode1_38));
                }
              }
              quotedNode_14.addChild("actualArgument",quotedNode1_36);
            }
            quotedNode_9.addChild("operation",quotedNode1_35);
          }
{
            quotedNode_15=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression",null,GlobalScope.getInstance(),false);
            SNode quotedNode1_39=quotedNode_15;
{
              quotedNode_21=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.CastExpression",null,GlobalScope.getInstance(),false);
              SNode quotedNode1_40=quotedNode_21;
{
                quotedNode_24=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",null,GlobalScope.getInstance(),false);
                SNode quotedNode1_41=quotedNode_24;
{
                  quotedNode_26=(SNode)parameter_57;
                  SNode quotedNode1_42;
                  if (_parameterValues_129834374.contains(quotedNode_26)) {
                    quotedNode1_42=CopyUtil.copy(quotedNode_26);
                  }
 else {
                    _parameterValues_129834374.add(quotedNode_26);
                    quotedNode1_42=quotedNode_26;
                  }
                  if (quotedNode1_42 != null) {
                    quotedNode_24.addChild("operand",HUtil.copyIfNecessary(quotedNode1_42));
                  }
                }
{
                  quotedNode_27=(SNode)parameter_58;
                  SNode quotedNode1_43;
                  if (_parameterValues_129834374.contains(quotedNode_27)) {
                    quotedNode1_43=CopyUtil.copy(quotedNode_27);
                  }
 else {
                    _parameterValues_129834374.add(quotedNode_27);
                    quotedNode1_43=quotedNode_27;
                  }
                  if (quotedNode1_43 != null) {
                    quotedNode_24.addChild("operation",HUtil.copyIfNecessary(quotedNode1_43));
                  }
                }
                quotedNode_21.addChild("expression",quotedNode1_41);
              }
{
                quotedNode_25=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",null,GlobalScope.getInstance(),false);
                SNode quotedNode1_44=quotedNode_25;
                quotedNode1_44.addReference(SReference.create("classifier",quotedNode1_44,SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"),SNodeId.fromString("~Object")));
                quotedNode_21.addChild("type",quotedNode1_44);
              }
              quotedNode_15.addChild("expression",quotedNode1_40);
            }
            quotedNode_9.addChild("operand",quotedNode1_39);
          }
          quotedNode_5.addChild("expression",quotedNode1_34);
        }
        quotedNode_3.addChild("ifTrue",quotedNode1_33);
      }
{
        quotedNode_6=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotEqualsExpression",null,GlobalScope.getInstance(),false);
        SNode quotedNode1_45=quotedNode_6;
{
          quotedNode_10=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NullLiteral",null,GlobalScope.getInstance(),false);
          SNode quotedNode1_46=quotedNode_10;
          quotedNode_6.addChild("rightExpression",quotedNode1_46);
        }
{
          quotedNode_11=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",null,GlobalScope.getInstance(),false);
          SNode quotedNode1_47=quotedNode_11;
{
            quotedNode_16=(SNode)parameter_59;
            SNode quotedNode1_48;
            if (_parameterValues_129834374.contains(quotedNode_16)) {
              quotedNode1_48=CopyUtil.copy(quotedNode_16);
            }
 else {
              _parameterValues_129834374.add(quotedNode_16);
              quotedNode1_48=quotedNode_16;
            }
            if (quotedNode1_48 != null) {
              quotedNode_11.addChild("operand",HUtil.copyIfNecessary(quotedNode1_48));
            }
          }
{
            quotedNode_17=(SNode)parameter_60;
            SNode quotedNode1_49;
            if (_parameterValues_129834374.contains(quotedNode_17)) {
              quotedNode1_49=CopyUtil.copy(quotedNode_17);
            }
 else {
              _parameterValues_129834374.add(quotedNode_17);
              quotedNode1_49=quotedNode_17;
            }
            if (quotedNode1_49 != null) {
              quotedNode_11.addChild("operation",HUtil.copyIfNecessary(quotedNode1_49));
            }
          }
          quotedNode_6.addChild("leftExpression",quotedNode1_47);
        }
        quotedNode_3.addChild("condition",quotedNode1_45);
      }
{
        quotedNode_7=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotEqualsExpression",null,GlobalScope.getInstance(),false);
        SNode quotedNode1_50=quotedNode_7;
{
          quotedNode_12=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NullLiteral",null,GlobalScope.getInstance(),false);
          SNode quotedNode1_51=quotedNode_12;
          quotedNode_7.addChild("rightExpression",quotedNode1_51);
        }
{
          quotedNode_13=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",null,GlobalScope.getInstance(),false);
          SNode quotedNode1_52=quotedNode_13;
{
            quotedNode_18=(SNode)parameter_61;
            SNode quotedNode1_53;
            if (_parameterValues_129834374.contains(quotedNode_18)) {
              quotedNode1_53=CopyUtil.copy(quotedNode_18);
            }
 else {
              _parameterValues_129834374.add(quotedNode_18);
              quotedNode1_53=quotedNode_18;
            }
            if (quotedNode1_53 != null) {
              quotedNode_13.addChild("operand",HUtil.copyIfNecessary(quotedNode1_53));
            }
          }
{
            quotedNode_19=(SNode)parameter_62;
            SNode quotedNode1_54;
            if (_parameterValues_129834374.contains(quotedNode_19)) {
              quotedNode1_54=CopyUtil.copy(quotedNode_19);
            }
 else {
              _parameterValues_129834374.add(quotedNode_19);
              quotedNode1_54=quotedNode_19;
            }
            if (quotedNode1_54 != null) {
              quotedNode_13.addChild("operation",HUtil.copyIfNecessary(quotedNode1_54));
            }
          }
          quotedNode_7.addChild("leftExpression",quotedNode1_52);
        }
        quotedNode_3.addChild("ifFalse",quotedNode1_50);
      }
      quotedNode_1.addChild("condition",quotedNode1_32);
    }
    result=quotedNode1_28;
  }
  return result;
}
