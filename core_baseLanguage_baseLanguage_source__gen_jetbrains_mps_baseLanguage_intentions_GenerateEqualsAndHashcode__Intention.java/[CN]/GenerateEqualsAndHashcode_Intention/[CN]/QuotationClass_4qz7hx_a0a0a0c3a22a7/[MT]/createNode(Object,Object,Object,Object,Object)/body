{
  SNode result=null;
  Set<SNode> _parameterValues_129834374=new HashSet<SNode>();
  SNode quotedNode_1=null;
  SNode quotedNode_2=null;
  SNode quotedNode_3=null;
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  SNode quotedNode_7=null;
  SNode quotedNode_8=null;
  SNode quotedNode_9=null;
  SNode quotedNode_10=null;
  SNode quotedNode_11=null;
  SNode quotedNode_12=null;
  SNode quotedNode_13=null;
  SNode quotedNode_14=null;
  SNode quotedNode_15=null;
{
    quotedNode_1=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ExpressionStatement",null,GlobalScope.getInstance(),false);
    SNode quotedNode1_16=quotedNode_1;
{
      quotedNode_2=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AssignmentExpression",null,GlobalScope.getInstance(),false);
      SNode quotedNode1_17=quotedNode_2;
{
        quotedNode_3=(SNode)parameter_31;
        SNode quotedNode1_18;
        if (_parameterValues_129834374.contains(quotedNode_3)) {
          quotedNode1_18=CopyUtil.copy(quotedNode_3);
        }
 else {
          _parameterValues_129834374.add(quotedNode_3);
          quotedNode1_18=quotedNode_3;
        }
        if (quotedNode1_18 != null) {
          quotedNode_2.addChild("lValue",HUtil.copyIfNecessary(quotedNode1_18));
        }
      }
{
        quotedNode_4=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.TernaryOperatorExpression",null,GlobalScope.getInstance(),false);
        SNode quotedNode1_19=quotedNode_4;
{
          quotedNode_5=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall",null,GlobalScope.getInstance(),false);
          SNode quotedNode1_20=quotedNode_5;
          quotedNode1_20.addReference(SReference.create("baseMethodDeclaration",quotedNode1_20,SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"),SNodeId.fromString("~Double.doubleToLongBits(double):long")));
          quotedNode1_20.addReference(SReference.create("classConcept",quotedNode1_20,SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"),SNodeId.fromString("~Double")));
{
            quotedNode_8=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",null,GlobalScope.getInstance(),false);
            SNode quotedNode1_21=quotedNode_8;
{
              quotedNode_10=(SNode)parameter_32;
              SNode quotedNode1_22;
              if (_parameterValues_129834374.contains(quotedNode_10)) {
                quotedNode1_22=CopyUtil.copy(quotedNode_10);
              }
 else {
                _parameterValues_129834374.add(quotedNode_10);
                quotedNode1_22=quotedNode_10;
              }
              if (quotedNode1_22 != null) {
                quotedNode_8.addChild("operand",HUtil.copyIfNecessary(quotedNode1_22));
              }
            }
{
              quotedNode_11=(SNode)parameter_33;
              SNode quotedNode1_23;
              if (_parameterValues_129834374.contains(quotedNode_11)) {
                quotedNode1_23=CopyUtil.copy(quotedNode_11);
              }
 else {
                _parameterValues_129834374.add(quotedNode_11);
                quotedNode1_23=quotedNode_11;
              }
              if (quotedNode1_23 != null) {
                quotedNode_8.addChild("operation",HUtil.copyIfNecessary(quotedNode1_23));
              }
            }
            quotedNode_5.addChild("actualArgument",quotedNode1_21);
          }
          quotedNode_4.addChild("ifTrue",quotedNode1_20);
        }
{
          quotedNode_6=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.LongLiteral",null,GlobalScope.getInstance(),false);
          SNode quotedNode1_24=quotedNode_6;
          quotedNode1_24.setProperty("value","0L");
          quotedNode_4.addChild("ifFalse",quotedNode1_24);
        }
{
          quotedNode_7=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression",null,GlobalScope.getInstance(),false);
          SNode quotedNode1_25=quotedNode_7;
{
            quotedNode_9=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotEqualsExpression",null,GlobalScope.getInstance(),false);
            SNode quotedNode1_26=quotedNode_9;
{
              quotedNode_12=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.FloatingPointConstant",null,GlobalScope.getInstance(),false);
              SNode quotedNode1_27=quotedNode_12;
              quotedNode1_27.setProperty("value","0.0");
              quotedNode_9.addChild("rightExpression",quotedNode1_27);
            }
{
              quotedNode_13=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",null,GlobalScope.getInstance(),false);
              SNode quotedNode1_28=quotedNode_13;
{
                quotedNode_14=(SNode)parameter_34;
                SNode quotedNode1_29;
                if (_parameterValues_129834374.contains(quotedNode_14)) {
                  quotedNode1_29=CopyUtil.copy(quotedNode_14);
                }
 else {
                  _parameterValues_129834374.add(quotedNode_14);
                  quotedNode1_29=quotedNode_14;
                }
                if (quotedNode1_29 != null) {
                  quotedNode_13.addChild("operand",HUtil.copyIfNecessary(quotedNode1_29));
                }
              }
{
                quotedNode_15=(SNode)parameter_35;
                SNode quotedNode1_30;
                if (_parameterValues_129834374.contains(quotedNode_15)) {
                  quotedNode1_30=CopyUtil.copy(quotedNode_15);
                }
 else {
                  _parameterValues_129834374.add(quotedNode_15);
                  quotedNode1_30=quotedNode_15;
                }
                if (quotedNode1_30 != null) {
                  quotedNode_13.addChild("operation",HUtil.copyIfNecessary(quotedNode1_30));
                }
              }
              quotedNode_9.addChild("leftExpression",quotedNode1_28);
            }
            quotedNode_7.addChild("expression",quotedNode1_26);
          }
          quotedNode_4.addChild("condition",quotedNode1_25);
        }
        quotedNode_2.addChild("rValue",quotedNode1_19);
      }
      quotedNode_1.addChild("expression",quotedNode1_17);
    }
    result=quotedNode1_16;
  }
  return result;
}
