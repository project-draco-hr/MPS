{
  if (node == null) {
    throw new IllegalArgumentException("initNode on null node");
  }
  Object[] parameters=new Object[0];
  NodeOrConcept nodeOrConcept=NodeOrConcept.create(node);
  String constructorName=BehaviorDescriptor.CONSTRUCTOR_METHOD_NAME;
  for (  SAbstractConcept ancestor : getConstructingOrder()) {
    BHDescriptor bhDescriptor=ConceptRegistry.getInstance().getBehaviorRegistry().getBHDescriptor(ancestor);
    if (bhDescriptor instanceof BHDescriptorLegacyAdapter) {
      InterpretedBehaviorDescriptor legacyDescriptor=((BHDescriptorLegacyAdapter)bhDescriptor).getLegacyDescriptor();
      if (legacyDescriptor.hasOwnMethod(constructorName)) {
        legacyDescriptor.invokeOwn(nodeOrConcept,constructorName,parameters);
      }
    }
 else     if (bhDescriptor instanceof BaseBHDescriptor) {
      BehaviorDescriptor behaviorDescriptor=getBehaviorDescriptor(ancestor.getQualifiedName());
      if (!(behaviorDescriptor instanceof BehaviorDescriptorAdapter)) {
        throw new IllegalStateException("Could not get legacy behavior descriptor + " + behaviorDescriptor + "; unable to resolve the constructor");
      }
      BehaviorDescriptorAdapter behaviorDescriptorAdapter=(BehaviorDescriptorAdapter)behaviorDescriptor;
      if (behaviorDescriptorAdapter.hasOwnMethod(constructorName,parameters)) {
        behaviorDescriptorAdapter.invokeOwn(nodeOrConcept.getNode(),constructorName,parameters);
      }
    }
  }
}
