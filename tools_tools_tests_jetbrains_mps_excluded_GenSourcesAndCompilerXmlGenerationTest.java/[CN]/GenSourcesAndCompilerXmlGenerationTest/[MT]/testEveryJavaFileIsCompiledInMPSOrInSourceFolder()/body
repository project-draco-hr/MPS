{
  File root=new File(".");
  MultiMap<String,String> sources=GensourcesModuleFile.getSourceFolders(root);
  MultiMap<String,String> mpsModules=Utils.collectMPSCompiledModulesInfo(root);
  Set<String> allSources=new HashSet<String>();
  allSources.addAll(sources.values());
  allSources.addAll(mpsModules.values());
  outer:   for (  File jFile : Utils.withExtension(".java",Utils.files(root))) {
    String cp=jFile.getCanonicalPath();
    for (    String sourcePath : allSources) {
      if (cp.startsWith(sourcePath + File.separator))       continue outer;
    }
    if (isUnder(cp,"/plugins/mps-obsolete/languages/generictasks/tests/"))     continue;
    if (isUnder(cp,"/plugins/mpsjava/tests/"))     continue;
    if (isUnder(cp,"/testbench/modules/testMake/solutions/jetbrains.mps.makeTest/"))     continue;
    if (isUnder(cp,"/testbench/modules/testRefactoring/languages/testRefactoring/"))     continue;
    if (isUnder(cp,"/testbench/modules/testRefactoring/languages/testRefactoringTargetLang/"))     continue;
    if (isUnder(cp,"/languages/baseLanguage/collections/runtime/source_gen.gwt/collections/gwt/jetbrains/mps/internal/collections/runtime/"))     continue;
    if (isUnder(cp,"/samples/agreement/frameworktest/test/"))     continue;
    if (isUnder(cp,"/plugins/mps-build/languages/solutions/jetbrains.mps.build.sandbox/samples/"))     continue;
    if (isUnder(cp,"/IdeaPlugin/mps-java/source_gen/"))     continue;
    if (isUnder(cp,"/IdeaPlugin/tests/src_gen/"))     continue;
    Assert.assertFalse("Java file " + cp + " is neither included in any MPS module, nor in any Idea source root",true);
  }
}
