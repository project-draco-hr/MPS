{
  if (getBuffer().hasPositionsSupport()) {
    TraceInfoGenerationUtil.createPositionInfo(this,node);
    TraceInfoGenerationUtil.createScopeInfo(this,node);
  }
  if (SLinkOperations.getTarget(node,"loopLabel",true) != null) {
    this.appendNewLine();
    this.append(SPropertyOperations.getString(SLinkOperations.getTarget(node,"loopLabel",true),"name"));
    this.append(":");
  }
 else   if (SPropertyOperations.getString(node,"label") != null) {
    this.appendNewLine();
    this.append(SPropertyOperations.getString(node,"label"));
    this.append(":");
  }
  this.appendNewLine();
  this.indentBuffer();
  this.append("for (");
  if ((SLinkOperations.getTarget(node,"variable",true) != null)) {
    TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),SLinkOperations.getTarget(node,"variable",true),this.getSNode());
  }
  for (  SNode additionalVar : SLinkOperations.getTargets(node,"additionalVar",true)) {
    this.append(", ");
    TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),additionalVar,this.getSNode());
  }
  this.append("; ");
  if ((SLinkOperations.getTarget(node,"condition",true) != null)) {
    TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),SLinkOperations.getTarget(node,"condition",true),this.getSNode());
  }
  this.append(";");
  if (ListSequence.fromList(SLinkOperations.getTargets(node,"iteration",true)).isNotEmpty()) {
    this.append(" ");
  }
  if (ListSequence.fromList(SLinkOperations.getTargets(node,"iteration",true)).isNotEmpty()) {
    for (    SNode item : SLinkOperations.getTargets(node,"iteration",true)) {
      TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),item,this.getSNode());
      if (item != ListSequence.fromList(SLinkOperations.getTargets(node,"iteration",true)).last()) {
        this.append(", ");
      }
    }
  }
  this.append(") {");
  this.increaseDepth();
  TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),SLinkOperations.getTarget(node,"body",true),this.getSNode());
  this.decreaseDepth();
  this.appendNewLine();
  this.appendWithIndent("}");
  if (getBuffer().hasPositionsSupport()) {
    TraceInfoGenerationUtil.fillPositionInfo(this,node,TraceableConcept_Behavior.call_getTraceableProperty_5067982036267369901(SNodeOperations.cast(node,"jetbrains.mps.lang.traceable.structure.TraceableConcept")));
    TraceInfoGenerationUtil.fillScopeInfo(this,node,ScopeConcept_Behavior.call_getScopeVariables_5067982036267369894(SNodeOperations.cast(node,"jetbrains.mps.lang.traceable.structure.ScopeConcept")));
  }
}
