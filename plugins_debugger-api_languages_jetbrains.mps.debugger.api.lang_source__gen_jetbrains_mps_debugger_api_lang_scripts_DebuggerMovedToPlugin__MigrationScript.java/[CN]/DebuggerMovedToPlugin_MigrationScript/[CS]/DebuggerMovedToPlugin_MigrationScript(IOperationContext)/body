{
  super("Fix references to debugger classes");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Fix references to debugger classes";
    }
    public String getAdditionalInfo(){
      return "Fix references to debugger classes";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.core.structure.BaseConcept";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return node.isRoot() && Sequence.fromIterable(ScriptsUtil.getStubImports(SNodeOperations.getModel(node),"jetbrains.mps.debug")).isNotEmpty();
    }
    public void doUpdateInstanceNode(    SNode node){
      ScriptsUtil.updateReferencesToPrefix(node,"jetbrains.mps.debug");
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
