{
  editorCell.putUserObject(EditorCell.CELL_ID,"property_text");
{
    Style inlineStyle=new Style(editorCell){
{
        this.set(StyleAttributes.DRAW_BORDER,new AttributeCalculator<Boolean>(){
          public Boolean calculate(          EditorCell cell){
            return CellModel_Constant_Editor.calculateBoolean6752_4(cell);
          }
        }
);
        this.set(StyleAttributes.TEXT_BACKGROUND_COLOR,new AttributeCalculator<Color>(){
          public Color calculate(          EditorCell cell){
            return CellModel_Constant_Editor.calculateColor6752_4(cell);
          }
        }
);
        this.set(StyleAttributes.BACKGROUND_COLOR,new AttributeCalculator<Color>(){
          public Color calculate(          EditorCell cell){
            return CellModel_Constant_Editor.calculateColor6752_5(cell);
          }
        }
);
        this.set(StyleAttributes.TEXT_COLOR,new AttributeCalculator<Color>(){
          public Color calculate(          EditorCell cell){
            return CellModel_Constant_Editor.calculateColor6752_6(cell);
          }
        }
);
        this.set(StyleAttributes.FONT_STYLE,new AttributeCalculator<Integer>(){
          public Integer calculate(          EditorCell cell){
            return CellModel_Constant_Editor.calculateFontStyle6752_0(cell);
          }
        }
);
        this.set(StyleAttributes.FONT_SIZE,new AttributeCalculator<Integer>(){
          public Integer calculate(          EditorCell cell){
            return CellModel_Constant_Editor.calculateFontSize6752_0(cell);
          }
        }
);
        this.set(StyleAttributes.UNDERLINED,new AttributeCalculator<Boolean>(){
          public Boolean calculate(          EditorCell cell){
            return CellModel_Constant_Editor.calculateUnderlined6752_0(cell);
          }
        }
);
        this.set(StyleAttributes.DEPRECATED,new AttributeCalculator<Boolean>(){
          public Boolean calculate(          EditorCell cell){
            return CellModel_Constant_Editor.calculateBoolean6752_11(cell);
          }
        }
);
      }
    }
;
    inlineStyle.apply(editorCell);
  }
  editorCell.addKeyMap(new _SplitConctantCellIntoWordsKeyMap());
}
