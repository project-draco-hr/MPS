{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(0xb401a68083254110L,0x8fd384331ff25befL,0x10313ed7688L,0x1031947e414L),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xb401a68083254110L,0x8fd384331ff25befL,0x10313ed7688L,0x1031947e414L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_phmuaq_a0a0a0a0a1a0b0a1a1;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return new FilteringScope(new ModelPlusImportedScope(_context.getModel(),true,MetaAdapterFactory.getConcept(0xb401a68083254110L,0x8fd384331ff25befL,0x10313ed7688L,"jetbrains.mps.lang.generator.structure.TemplateSwitch"))){
            @Override public boolean isExcluded(            SNode node){
              if (node == _context.getContextNode()) {
                return true;
              }
              SNode contributor=SNodeOperations.cast(_context.getContextNode(),MetaAdapterFactory.getConcept(0xb401a68083254110L,0x8fd384331ff25befL,0x10313ed7688L,"jetbrains.mps.lang.generator.structure.TemplateSwitch"));
              SNode originCandidate=SNodeOperations.cast(node,MetaAdapterFactory.getConcept(0xb401a68083254110L,0x8fd384331ff25befL,0x10313ed7688L,"jetbrains.mps.lang.generator.structure.TemplateSwitch"));
              if (ListSequence.fromList(SLinkOperations.getChildren(originCandidate,MetaAdapterFactory.getContainmentLink(0xb401a68083254110L,0x8fd384331ff25befL,0xda3dc6e5137e9b1L,0xda3dc6e5137ea56L,"parameter"))).count() != ListSequence.fromList(SLinkOperations.getChildren(contributor,MetaAdapterFactory.getContainmentLink(0xb401a68083254110L,0x8fd384331ff25befL,0xda3dc6e5137e9b1L,0xda3dc6e5137ea56L,"parameter"))).count()) {
                return true;
              }
              for (int i=0; i < ListSequence.fromList(SLinkOperations.getChildren(contributor,MetaAdapterFactory.getContainmentLink(0xb401a68083254110L,0x8fd384331ff25befL,0xda3dc6e5137e9b1L,0xda3dc6e5137ea56L,"parameter"))).count(); i++) {
                SNode p1=ListSequence.fromList(SLinkOperations.getChildren(contributor,MetaAdapterFactory.getContainmentLink(0xb401a68083254110L,0x8fd384331ff25befL,0xda3dc6e5137e9b1L,0xda3dc6e5137ea56L,"parameter"))).getElement(i);
                SNode p2=ListSequence.fromList(SLinkOperations.getChildren(originCandidate,MetaAdapterFactory.getContainmentLink(0xb401a68083254110L,0x8fd384331ff25befL,0xda3dc6e5137e9b1L,0xda3dc6e5137ea56L,"parameter"))).getElement(i);
                if (!(SPropertyOperations.getString(p1,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")).equals(SPropertyOperations.getString(p2,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"))))) {
                  return true;
                }
                return !((TypeChecker.getInstance().getSubtypingManager().isSubtype(SLinkOperations.getTarget(p2,MetaAdapterFactory.getContainmentLink(0xb401a68083254110L,0x8fd384331ff25befL,0x190d31fe6a0962e6L,0x190d31fe6a096acfL,"type")),SLinkOperations.getTarget(p1,MetaAdapterFactory.getContainmentLink(0xb401a68083254110L,0x8fd384331ff25befL,0x190d31fe6a0962e6L,0x190d31fe6a096acfL,"type"))) && TypeChecker.getInstance().getSubtypingManager().isSubtype(SLinkOperations.getTarget(p1,MetaAdapterFactory.getContainmentLink(0xb401a68083254110L,0x8fd384331ff25befL,0x190d31fe6a0962e6L,0x190d31fe6a096acfL,"type")),SLinkOperations.getTarget(p2,MetaAdapterFactory.getContainmentLink(0xb401a68083254110L,0x8fd384331ff25befL,0x190d31fe6a0962e6L,0x190d31fe6a096acfL,"type")))));
              }
              return false;
            }
          }
;
        }
      }
;
    }
  }
);
  return references;
}
