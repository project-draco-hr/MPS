{
  String message="Internal error occurred while processing mapping priority rule:\n" + (rule != null ? GenerationPartitioningUtil.asString(rule,true) : "<unknown>") + "\nmapping config\n'"+ NameUtil.nodeFQName(key)+ "'\nis not in priority map.";
  message+="\ndisposed: " + (key.getClass().getClassLoader() instanceof BundleClassLoader ? "" + ((BundleClassLoader)key.getClass().getClassLoader()).isDisposed() : "n/a");
  message+="\n---------------------------";
  message+="\ncheck priority map (mappings with equal short name): ";
  for (  MappingConfiguration mappingConfig : priorityMap.keySet()) {
    if (mappingConfig.getName().equals(key.getName())) {
      message+="\n" + NameUtil.nodeFQName(mappingConfig);
      message+="\n  disposed: " + (key.getClass().getClassLoader() instanceof BundleClassLoader ? "" + ((BundleClassLoader)key.getClass().getClassLoader()).isDisposed() : "n/a");
      message+="\n  same adapter: " + (mappingConfig == key);
      message+="\n  same node: " + (mappingConfig.getNode() == key.getNode());
      message+="\n  same model: " + (mappingConfig.getModel() == key.getModel());
    }
  }
  message+="\n---------------------------";
  String model_name=key.getModel().getLongName();
  message+="\nmappings from model '" + model_name + "' in priority map: ";
  for (  MappingConfiguration mappingConfig : priorityMap.keySet()) {
    if (mappingConfig.getModel().getLongName().equals(model_name)) {
      message+="\n" + NameUtil.nodeFQName(mappingConfig);
    }
  }
  message+="\n---------------------------";
  return message;
}
