{
  Map<SProperty,PropertyConstraintsDescriptor> properties=new HashMap<SProperty,PropertyConstraintsDescriptor>();
  properties.put(MetaAdapterFactory.getProperty(0xb83431fe5c8f40bcL,0x8a3665e25f4dd253L,0x11f4b80e9d3L,0x11f5fdf3bedL,"operationName"),new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0xb83431fe5c8f40bcL,0x8a3665e25f4dd253L,0x11f4b80e9d3L,0x11f5fdf3bedL),this){
    @Override public boolean hasOwnGetter(){
      return true;
    }
    @Override public Object getValue(    SNode node){
      String propertyName="operationName";
{
        String name=SPropertyOperations.getString(node,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
        if (name == null) {
          return null;
        }
        StringBuilder result=new StringBuilder();
        for (int i=0; i < name.length(); i++) {
          if (Character.isUpperCase(name.charAt(i))) {
            result.append(' ');
            result.append(name.toLowerCase().charAt(i));
          }
 else {
            result.append(name.charAt(i));
          }
        }
        return result.toString();
      }
    }
  }
);
  return properties;
}
