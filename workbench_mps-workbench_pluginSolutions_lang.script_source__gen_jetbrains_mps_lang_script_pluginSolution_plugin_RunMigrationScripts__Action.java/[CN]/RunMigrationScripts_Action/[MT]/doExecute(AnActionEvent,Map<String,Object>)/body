{
  SearchScope scope;
  if (RunMigrationScripts_Action.this.menuBuilder.isSelectionOnly()) {
    scope=AbstractMigrationScriptHelper.createMigrationScope(((List<SModule>)MapSequence.fromMap(_params).get("modules")),((List<SModel>)MapSequence.fromMap(_params).get("models")));
  }
 else {
    scope=AbstractMigrationScriptHelper.createMigrationScope(((MPSProject)MapSequence.fromMap(_params).get("mpsProject")));
  }
  if (!(scope.getModels().iterator().hasNext())) {
    return;
  }
  ScriptsActionGroupHelper.sortScripts(RunMigrationScripts_Action.this.menuBuilder.getAllScripts());
  RunMigrationScriptsDialog dialog=new RunMigrationScriptsDialog(((Frame)MapSequence.fromMap(_params).get("frame")),RunMigrationScripts_Action.this.menuBuilder.getAllScripts(),ScriptsActionGroupHelper.getSelectedScripts());
  int x=((Frame)MapSequence.fromMap(_params).get("frame")).getX() + ((Frame)MapSequence.fromMap(_params).get("frame")).getWidth() / 2 - dialog.getWidth() / 2;
  int y=((Frame)MapSequence.fromMap(_params).get("frame")).getY() + ((Frame)MapSequence.fromMap(_params).get("frame")).getHeight() / 2 - dialog.getHeight() / 2;
  dialog.setLocation(x,y);
  dialog.setVisible(true);
  if (dialog.isRunChecked()) {
    AbstractMigrationScriptHelper.doRunScripts(dialog.getCheckedScripts(),scope,((MPSProject)MapSequence.fromMap(_params).get("mpsProject")));
  }
 else   if (dialog.isOpenSelected()) {
    SNode selectedScript=dialog.getSelectedScripts().get(0);
    NavigationSupport.getInstance().openNode(((MPSProject)MapSequence.fromMap(_params).get("mpsProject")),selectedScript,true,true);
  }
}
