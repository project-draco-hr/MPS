{
  ModelAccess.assertLegalWrite();
  if (changeFile && !(getSource() instanceof FileDataSource)) {
    throw new UnsupportedOperationException("cannot change model file on non-file data source");
  }
  String oldFqName=getReference().getModelName();
  fireBeforeModelRenamed(new SModelRenamedEvent(this,oldFqName,newModelName));
  SModelReference newModelReference=new SModelReference(SModelFqName.fromString(newModelName),getReference().getSModelId());
  changeModelReference(newModelReference);
  if (!changeFile) {
    save();
  }
 else {
    IFile oldFile=((FileDataSource)getSource()).getFile();
    ModelRoot root=ModelRootUtil.getModelRoot(this);
    if (root instanceof DefaultModelRoot) {
      DefaultModelRoot defaultModelRoot=(DefaultModelRoot)root;
      String sourceRoot=null;
      for (      String sr : defaultModelRoot.getFiles(FileBasedModelRoot.SOURCE_ROOTS)) {
        if (oldFile.getPath().startsWith(sr)) {
          sourceRoot=sr;
          break;
        }
      }
      IFile newFile=defaultModelRoot.createSource(newModelName,FileUtil.getExtension(oldFile.getName()),sourceRoot).getFile();
      newFile.getParent().mkdirs();
      newFile.createNewFile();
      changeModelFile(newFile);
      save();
      oldFile.delete();
    }
  }
  updateReferenceAfterRename(newModelReference);
  fireModelRenamed(new SModelRenamedEvent(this,oldFqName,newModelName));
}
