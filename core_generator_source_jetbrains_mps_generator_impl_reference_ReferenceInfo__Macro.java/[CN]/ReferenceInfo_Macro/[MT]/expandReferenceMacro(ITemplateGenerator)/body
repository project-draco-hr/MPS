{
  String linkRole=getReferenceRole();
  Object result=resolveReference();
  if (result instanceof SNode) {
    myOutputTargetNode=(SNode)result;
  }
 else   if (result != null) {
    String resolveInfo=(String)result;
    if (resolveInfo.startsWith("[")) {
      String[] modelNameAndTheRest=resolveInfo.split("]");
      if (modelNameAndTheRest.length > 1 || (modelNameAndTheRest.length == 1 && resolveInfo.endsWith("]"))) {
        resolveInfo=resolveInfo.substring(resolveInfo.indexOf("]") + 1).trim();
        String modelName=modelNameAndTheRest[0].substring(1).trim();
        if (modelName.length() > 0) {
          if (!modelName.equals(generator.getOutputModel().getLongName())) {
            myExternalTargetModelReference=StubHelper.uidForPackageInStubs(modelName);
          }
        }
      }
    }
    myResolveInfoForDynamicResolve=resolveInfo;
  }
  if (myOutputTargetNode == null) {
    return;
  }
  if (myOutputTargetNode.getModel() == generator.getInputModel()) {
    SNode outputTargetNode_output=generator.findCopiedOutputNodeForInputNode(myOutputTargetNode);
    if (outputTargetNode_output != null) {
      myOutputTargetNode=outputTargetNode_output;
    }
 else {
      generator.getLogger().warning(getOutputSourceNode(),"reference macro returned node from input model; role: " + linkRole + " in "+ getOutputSourceNode().getDebugText(),GeneratorUtil.describeIfExists(myOutputTargetNode,"target node in input model"),GeneratorUtil.describeIfExists(getMacroNode(),"reference macro"));
      generator.getGeneratorSessionContext().keepTransientModel(generator.getInputModel(),true);
    }
  }
}
