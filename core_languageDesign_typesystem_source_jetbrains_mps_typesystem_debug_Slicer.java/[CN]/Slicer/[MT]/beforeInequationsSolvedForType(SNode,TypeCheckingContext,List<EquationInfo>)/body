{
  List<SliceInfo> result=new ArrayList<SliceInfo>();
  if (myNodesToSliceWith.isEmpty())   return result;
  EquationManager equationManager=typeCheckingContext.getEquationManager();
  IWrapper representator=equationManager.getRepresentatorWrapper(NodeWrapper.fromNode(type,equationManager));
  for (  SNode node : myNodesToSliceWith) {
    SNode nodeType=typeCheckingContext.getMainContext().get(node);
    if (nodeType != null) {
      NodeWrapper typeWrapper=NodeWrapper.fromNode(nodeType,equationManager);
      IWrapper representatorWrapper=equationManager.getRepresentatorWrapper(typeWrapper);
      if (representatorWrapper.equals(representator)) {
        SliceInfo sliceInfo=new SliceInfo(node,representatorWrapper.getNode(),null,null,"inequations solved",inequations);
        mySliceInfos.add(sliceInfo);
        result.add(sliceInfo);
      }
    }
  }
  return result;
}
