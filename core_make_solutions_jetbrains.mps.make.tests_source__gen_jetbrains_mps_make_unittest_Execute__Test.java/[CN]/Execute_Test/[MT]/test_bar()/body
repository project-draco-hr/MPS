{
  final ITarget make=Mockups.target(context,"make");
  final ITarget gen=Mockups.target(context,"gen");
  final ITarget text=Mockups.target(context,"text");
  context.checking(new Expectations(){
{
      atLeast(1).of(gen).before();
      will(returnValue(Sequence.fromArray(new ITarget.Name[]{new ITarget.Name("make")})));
      atLeast(1).of(text).after();
      will(returnValue(Sequence.fromArray(new ITarget.Name[]{new ITarget.Name("gen")})));
      atLeast(1).of(text).before();
      will(returnValue(Sequence.fromArray(new ITarget.Name[]{new ITarget.Name("make")})));
    }
  }
);
  Mockups.allowing(context,gen);
  Mockups.allowing(context,text);
  Mockups.allowing(context,make);
  TargetRange tr=new TargetRange();
  tr.addTarget(make);
  tr.addRelated(ListSequence.fromListAndArray(new ArrayList<ITarget>(),gen,text));
  Script sc=new Script(tr,new ITarget.Name("make"));
  sc.validate();
  Assert.assertTrue(sc.isValid());
  IResult res=sc.execute(Mockups.monitor(context,"mon"));
  Assert.assertNotNull(res);
}
