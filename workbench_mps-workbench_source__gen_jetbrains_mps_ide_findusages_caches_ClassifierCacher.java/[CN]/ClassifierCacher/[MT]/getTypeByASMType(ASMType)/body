{
  if (type == ASMPrimitiveType.BOOLEAN) {
    instance("jetbrains.mps.baseLanguage.structure.BooleanType");
  }
 else   if (type == ASMPrimitiveType.BYTE) {
    instance("jetbrains.mps.baseLanguage.structure.ByteType");
  }
 else   if (type == ASMPrimitiveType.SHORT) {
    instance("jetbrains.mps.baseLanguage.structure.ShortType");
  }
 else   if (type == ASMPrimitiveType.INT) {
    instance("jetbrains.mps.baseLanguage.structure.IntegerType");
  }
 else   if (type == ASMPrimitiveType.LONG) {
    instance("jetbrains.mps.baseLanguage.structure.LongType");
  }
 else   if (type == ASMPrimitiveType.FLOAT) {
    instance("jetbrains.mps.baseLanguage.structure.FloatType");
  }
 else   if (type == ASMPrimitiveType.DOUBLE) {
    instance("jetbrains.mps.baseLanguage.structure.DoubleType");
  }
 else   if (type == ASMPrimitiveType.VOID) {
    instance("jetbrains.mps.baseLanguage.structure.VoidType");
  }
 else   if (type == ASMPrimitiveType.CHAR) {
    instance("jetbrains.mps.baseLanguage.structure.CharType");
  }
 else   if (type instanceof ASMArrayType) {
    getTypeByASMType(((ASMArrayType)type).getElementType());
    instance("jetbrains.mps.baseLanguage.structure.ArrayType");
  }
 else   if (type instanceof ASMVarArgType) {
    getTypeByASMType(((ASMVarArgType)type).getElementType());
    instance("jetbrains.mps.baseLanguage.structure.VariableArityType");
  }
 else   if (type instanceof ASMTypeVariable) {
    instance("jetbrains.mps.baseLanguage.structure.TypeVariableReference");
  }
 else   if (type instanceof ASMClassType) {
    ASMClassType c=(ASMClassType)type;
    instance("jetbrains.mps.baseLanguage.structure.ClassifierType");
    addClassifierReference(c);
  }
 else   if (type instanceof ASMParameterizedType) {
    ASMParameterizedType pt=(ASMParameterizedType)type;
    getTypeByASMType(pt.getRawType());
    addTypeParameters(pt.getActualTypeArguments());
  }
 else   if (type instanceof ASMExtendsType) {
    ASMExtendsType e=(ASMExtendsType)type;
    if (e.getBase() instanceof ASMClassType) {
      ASMClassType ct=(ASMClassType)e.getBase();
      if (ct.getName().equals("java.lang.Object")) {
        instance("jetbrains.mps.baseLanguage.structure.WildCardType");
        return;
      }
    }
    instance("jetbrains.mps.baseLanguage.structure.UpperBoundType");
    getTypeByASMType(e.getBase());
  }
 else   if (type instanceof ASMSuperType) {
    ASMSuperType e=(ASMSuperType)type;
    instance("jetbrains.mps.baseLanguage.structure.LowerBoundType");
    getTypeByASMType(e.getBase());
  }
 else   if (type instanceof ASMUnboundedType) {
    instance("jetbrains.mps.baseLanguage.structure.WildCardType");
  }
 else {
    instance("jetbrains.mps.baseLanguage.structure.Type");
  }
}
