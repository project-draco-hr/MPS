{
  Set<SNode> result=new LinkedHashSet<SNode>();
  Datasets.collectImplementedAndExtended(myTopConcept,result);
  result.add(SNodeUtil.concept_BaseConcept.getDeclarationNode());
  myConcepts=result.toArray(new SNode[result.size()]);
  myDependsOnNodes=new HashSet<SNode>(myConcepts.length * 2);
  for (  SNode concept : myConcepts) {
    myDependsOnNodes.add(concept);
    if (SNodeUtil.isInstanceOfInterfaceConceptDeclaration(concept)) {
      for (      SNode n : SNodeUtil.getInterfaceConceptDeclaration_ExtendsReferenceNodes(concept)) {
        if (n == null) {
          continue;
        }
        myDependsOnNodes.add(n);
      }
    }
 else     if (SNodeUtil.isInstanceOfConceptDeclaration(concept)) {
      for (      SNode n : SNodeUtil.getConceptDeclaration_ImplementsReferenceNodes(concept)) {
        if (n == null) {
          continue;
        }
        myDependsOnNodes.add(n);
      }
    }
  }
}
