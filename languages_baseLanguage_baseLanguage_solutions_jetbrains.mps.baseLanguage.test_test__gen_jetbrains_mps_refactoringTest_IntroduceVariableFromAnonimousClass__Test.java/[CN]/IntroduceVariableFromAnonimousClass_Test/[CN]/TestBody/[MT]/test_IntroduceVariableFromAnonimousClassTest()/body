{
  this.addNodeById("3109730807963543192");
  this.addNodeById("3109730807963543200");
  this.addNodeById("3109730807963545002");
  IntroduceLocalVariableRefactoring refactoring=new IntroduceLocalVariableRefactoring();
  refactoring.init(SNodeOperations.cast(this.getNodeById("3109730807963543246"),"jetbrains.mps.baseLanguage.structure.GenericNewExpression"),null);
  refactoring.setName("i");
  refactoring.setReplacingAll(true);
  refactoring.doRefactoring();
  Assert.assertNull("nodes '" + SNodeOperations.cast(this.getNodeById("3109730807963543202"),"jetbrains.mps.baseLanguage.structure.ClassConcept") + "' and '"+ SNodeOperations.cast(this.getNodeById("3109730807963601732"),"jetbrains.mps.baseLanguage.structure.ClassConcept")+ "' do not match!",NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("3109730807963543202"),"jetbrains.mps.baseLanguage.structure.ClassConcept")),ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("3109730807963601732"),"jetbrains.mps.baseLanguage.structure.ClassConcept"))));
}
