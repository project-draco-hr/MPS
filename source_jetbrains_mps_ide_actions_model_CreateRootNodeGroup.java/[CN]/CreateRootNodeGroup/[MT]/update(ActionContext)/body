{
  clear();
  final SModelDescriptor modelDescriptor=context.get(SModelDescriptor.class);
  final ProjectFrame ide=context.get(ProjectFrame.class);
  IOperationContext operationContext=context.get(IOperationContext.class);
  List<Language> modelLanguages=modelDescriptor.getSModel().getLanguages(operationContext.getScope());
  if (modelLanguages.size() == 0) {
    add(new MPSAction("<NO LANGUAGES>"){
      public void execute(      ActionContext context){
      }
    }
);
  }
  for (  final Language language : modelLanguages) {
    int addCount=0;
    ActionGroup langRootsGroup=new ActionGroup(language.getNamespace()){
      public Icon getIcon(){
        return IconManager.getIconFor(language.getNamespace());
      }
    }
;
    add(langRootsGroup);
    for (    final ConceptDeclaration conceptDeclaration : language.getConceptDeclarations()) {
      if (conceptDeclaration.getRootable()) {
        String className=JavaNameUtil.className(conceptDeclaration);
        try {
          final Class<? extends SNode> nodeClass=(Class<? extends SNode>)Class.forName(className,true,ClassLoaderManager.getInstance().getClassLoader());
          langRootsGroup.add(new MPSAction(conceptDeclaration.getName()){
            public Icon getIcon(){
              return IconManager.getIconFor(nodeClass);
            }
            public boolean executeInsideCommand(){
              return false;
            }
            public void execute(            ActionContext context){
              final SNode[] node=new SNode[1];
              CommandProcessor.instance().executeCommand(new Runnable(){
                public void run(){
                  node[0]=SModelUtil.instantiateConceptDeclaration(conceptDeclaration,modelDescriptor.getSModel());
                  node[0].getModel().addRoot(node[0]);
                }
              }
);
              ide.getProjectPane().selectNode(node[0],context.get(IOperationContext.class));
              ide.getProjectPane().openEditor();
            }
          }
);
          addCount++;
        }
 catch (        ClassNotFoundException e) {
          langRootsGroup.add(new MPSAction(conceptDeclaration.getName() + " (Structure Isn't Generated)"){
            public void update(            ActionContext context){
              setEnabled(false);
            }
            public void execute(            ActionContext context){
            }
          }
);
        }
      }
    }
    if (addCount == 0) {
      langRootsGroup.add(new MPSAction("<EMPTY>"){
        public void update(        ActionContext context){
          setEnabled(false);
        }
        public void execute(        ActionContext context){
        }
      }
);
    }
  }
}
