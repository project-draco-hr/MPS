{
  return new MPSAction(NodePresentationUtil.matchingText(nodeConcept.getNode())){
    public Icon getIcon(){
      return CommandProcessor.instance().executeLightweightCommand(new Calculable<Icon>(){
        public Icon calculate(){
          return IconManager.getIconForConceptFQName(NameUtil.nodeFQName(nodeConcept.getNode()));
        }
      }
);
    }
    public boolean executeInsideCommand(){
      return false;
    }
    public void doExecute(    @NotNull final ActionContext context){
      CommandProcessor.instance().executeCommand(new Runnable(){
        public void run(){
          final SNode[] node=new SNode[1];
          CommandProcessor.instance().executeCommand(new Runnable(){
            public void run(){
              node[0]=NodeFactoryManager.createNode((ConceptDeclaration)nodeConcept.getNode().getAdapter(),null,null,modelDescriptor.getSModel(),context.getScope());
              node[0].setProperty(SModelTreeNode.PACK,myPackage);
              modelDescriptor.getSModel().addRoot(node[0]);
            }
          }
);
          ide.getProjectPane().selectNode(node[0],context.get(IOperationContext.class));
          ide.getProjectPane().openEditor();
        }
      }
);
    }
  }
;
}
