{
  removeBadMessages();
  super.paintComponent(graphics);
  Graphics2D g=(Graphics2D)graphics;
  List<EditorMessage> editorMessages=new ArrayList<EditorMessage>(myMessages);
  Collections.sort(editorMessages,new Comparator<EditorMessage>(){
    public int compare(    EditorMessage o1,    EditorMessage o2){
      if (o1 == o2)       return 0;
      if (o1 == null)       return -1;
      if (o2 == null)       return 1;
      if (o1.getStatus().ordinal() == o2.getStatus().ordinal()) {
        if (o1.isLongInGutter() == o2.isLongInGutter()) {
          return getMessageStart(o1) - getMessageStart(o2);
        }
 else {
          return o1.isLongInGutter() ? -1 : 1;
        }
      }
 else {
        return o1.getStatus().ordinal() - o2.getStatus().ordinal();
      }
    }
  }
);
  for (  EditorMessage msg : editorMessages) {
    if (msg == null || !msg.isValid(myEditorComponent)) {
      continue;
    }
    if (msg.isLongInGutter()) {
      int messageY=getMessageStart(msg);
      int messageHeight=getMessageHeight(msg) + 1;
      g.setColor(LONG_MESSAGE_COLOR);
      int messageX=(getWidth() - 2) / 3;
      int messageWidth=(getWidth() - 2) / 3 + 1;
      g.fillRect(messageX,messageY,messageWidth,messageHeight);
      g.setColor(LONG_MESSAGE_BORDER_COLOR);
      g.drawLine(messageX,messageY + messageHeight,messageX + messageWidth,messageY + messageHeight);
      g.drawLine(messageX + messageWidth,messageY,messageX + messageWidth,messageY + messageHeight);
    }
 else {
      int messageY=getMessagePosition(msg);
      g.setColor(new Color(80,80,80,70));
      g.fillRect(1,messageY,getWidth() - 2,2);
      g.setColor(msg.getColor());
      g.fillRect(0,messageY - 1,getWidth() - 2,2);
    }
  }
}
