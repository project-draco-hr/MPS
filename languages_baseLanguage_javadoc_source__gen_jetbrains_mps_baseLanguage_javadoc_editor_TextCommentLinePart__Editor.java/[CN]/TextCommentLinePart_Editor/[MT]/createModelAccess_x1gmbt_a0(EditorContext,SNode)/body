{
  ModelAccessor modelAccessor=new ModelAccessor(){
    public String getText(){
      return SPropertyOperations.getString(node,MetaAdapterFactory.getProperty(0xf280165065d5424eL,0xbb1b463a8781b786L,0x7c7f5b2f31990287L,0x7c7f5b2f31990288L,"text"));
    }
    public void setText(    String text){
      SPropertyOperations.set(node,MetaAdapterFactory.getProperty(0xf280165065d5424eL,0xbb1b463a8781b786L,0x7c7f5b2f31990287L,0x7c7f5b2f31990288L,"text"),text);
      TextCommentPartUtil.processCellText(editorContext,node,text);
    }
    public boolean isValidText(    String text){
      return true;
    }
  }
;
  EditorCell_Property editorCell=EditorCell_Property.create(editorContext,modelAccessor,node);
  editorCell.setAction(CellActionType.DELETE,EmptyCellAction.getInstance());
  editorCell.setAction(CellActionType.BACKSPACE,EmptyCellAction.getInstance());
  editorCell.setCellId("ModelAccess_x1gmbt_a0");
  editorCell.setAction(CellActionType.COMMENT,new CellAction_Comment(node));
  TextCommentLinePart_ActionMap.setCellActions(editorCell,node,editorContext);
  editorCell.setDefaultText("");
  editorCell.setSubstituteInfo(new CompositeSubstituteInfo(editorContext,new BasicCellContext(node),new SubstituteInfoPartExt[]{new TextCommentLinePart_Editor.ApplySideTransforms_left_cellMenu_x1gmbt_a0a0()}));
  return editorCell;
}
