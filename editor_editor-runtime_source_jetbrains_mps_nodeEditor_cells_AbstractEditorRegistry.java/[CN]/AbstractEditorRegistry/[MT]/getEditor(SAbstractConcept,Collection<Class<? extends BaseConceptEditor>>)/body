{
  Set<SAbstractConcept> processedConcepts=new HashSet<SAbstractConcept>();
  BreadthConceptHierarchyIterator ancestorsIterable=new BreadthConceptHierarchyIterator(concept);
  List<T> resultList=new ArrayList<T>();
  for (  SAbstractConcept next : ancestorsIterable) {
    if (processedConcepts.contains(next)) {
      continue;
    }
    T conceptEditor=getEditorForConcept(next,excludedEditors);
    if (conceptEditor != null) {
      if (isEnoughForCurrentContext(conceptEditor)) {
        return conceptEditor;
      }
 else {
        resultList.add(conceptEditor);
      }
    }
    processedConcepts.add(next);
  }
  if (resultList.isEmpty()) {
    return null;
  }
  Collections.sort(resultList,getAncestorEditorComparator());
  return resultList.get(0);
}
