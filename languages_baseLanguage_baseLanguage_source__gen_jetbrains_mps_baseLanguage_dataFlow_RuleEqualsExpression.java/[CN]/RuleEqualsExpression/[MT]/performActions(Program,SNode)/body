{
  SNode otherThanNull=NullableUtil.getOtherThanNull(node);
  if (otherThanNull == null) {
    return;
  }
  Tuples._4<SNode,SNode,Boolean,Boolean> calcWhereToJump;
  SNode beforeNode;
  SNode afterNode;
  boolean ifJump;
  calcWhereToJump=NullableUtil.calcWhereToJump(node,true);
  beforeNode=calcWhereToJump._0();
  afterNode=calcWhereToJump._1();
  ifJump=(boolean)calcWhereToJump._3();
  if (beforeNode != null) {
    if (ifJump) {
{
        Object object=node;
        if (((Program)o).contains(object)) {
          boolean before=false;
          int position=((Program)(o)).getEnd(object);
          Instruction instruction=new nullableInstruction(otherThanNull);
          instruction.setRuleReference("r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/1383888600188768200");
          instruction.setSource(node);
          ((Program)(o)).insert(instruction,position,true,before);
        }
      }
    }
 else {
{
        Object object=beforeNode;
        if (((Program)o).contains(object)) {
          boolean before=true;
          int position=((Program)(o)).getStart(beforeNode);
          Instruction instruction=new nullableInstruction(otherThanNull);
          instruction.setRuleReference("r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/1383888600189574816");
          instruction.setSource(node);
          ((Program)(o)).insert(instruction,position,true,before);
        }
      }
    }
  }
  if (afterNode != null) {
    if (ifJump) {
{
        Object object=node;
        if (((Program)o).contains(object)) {
          boolean before=false;
          int position=((Program)(o)).getEnd(object);
          Instruction instruction=new nullableInstruction(otherThanNull);
          instruction.setRuleReference("r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/1383888600189576263");
          instruction.setSource(node);
          ((Program)(o)).insert(instruction,position,true,before);
        }
      }
    }
 else {
{
        Object object=afterNode;
        if (((Program)o).contains(object)) {
          boolean before=false;
          int position=((Program)(o)).getEnd(object);
          Instruction instruction=new nullableInstruction(otherThanNull);
          instruction.setRuleReference("r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/1383888600188780235");
          instruction.setSource(node);
          ((Program)(o)).insert(instruction,position,true,before);
        }
      }
    }
  }
  calcWhereToJump=NullableUtil.calcWhereToJump(node,false);
  beforeNode=calcWhereToJump._0();
  afterNode=calcWhereToJump._1();
  ifJump=(boolean)calcWhereToJump._3();
  if (beforeNode != null) {
    if (ifJump) {
{
        Object object=node;
        if (((Program)o).contains(object)) {
          boolean before=false;
          int position=((Program)(o)).getEnd(object);
          Instruction instruction=new notNullInstruction(otherThanNull);
          instruction.setRuleReference("r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/1383888600189576596");
          instruction.setSource(node);
          ((Program)(o)).insert(instruction,position,true,before);
        }
      }
    }
 else {
{
        Object object=beforeNode;
        if (((Program)o).contains(object)) {
          boolean before=true;
          int position=((Program)(o)).getStart(beforeNode);
          Instruction instruction=new notNullInstruction(otherThanNull);
          instruction.setRuleReference("r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/1383888600189576604");
          instruction.setSource(node);
          ((Program)(o)).insert(instruction,position,true,before);
        }
      }
    }
  }
  if (afterNode != null) {
    if (ifJump) {
{
        Object object=node;
        if (((Program)o).contains(object)) {
          boolean before=false;
          int position=((Program)(o)).getEnd(object);
          Instruction instruction=new notNullInstruction(otherThanNull);
          instruction.setRuleReference("r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/1383888600189576616");
          instruction.setSource(node);
          ((Program)(o)).insert(instruction,position,true,before);
        }
      }
    }
 else {
{
        Object object=afterNode;
        if (((Program)o).contains(object)) {
          boolean before=false;
          int position=((Program)(o)).getEnd(object);
          Instruction instruction=new notNullInstruction(otherThanNull);
          instruction.setRuleReference("r:00000000-0000-4000-0000-011c895902c2(jetbrains.mps.baseLanguage.dataFlow)/1383888600189576624");
          instruction.setSource(node);
          ((Program)(o)).insert(instruction,position,true,before);
        }
      }
    }
  }
}
