{
  int currentY=((jetbrains.mps.nodeEditor.EditorComponent)myLastEditor).getViewport().getViewPosition().y;
  EditorCell selectedCell=((jetbrains.mps.nodeEditor.EditorComponent)myLastEditor).getSelectedCell();
  if (selectedCell != null) {
    currentY=selectedCell.getY();
  }
  Bounds asLeft=findNeighbourGroupAsLeftOrRight(currentY,previous,true);
  Bounds asRight=findNeighbourGroupAsLeftOrRight(currentY,previous,false);
  Bounds max;
  Bounds min;
  if (asLeft == null) {
{
      Tuples._2<Bounds,Bounds> _tmp_mf966z_a0j0q=MultiTuple.<Bounds,Bounds>from(null,asRight);
      min=_tmp_mf966z_a0j0q._0();
      max=_tmp_mf966z_a0j0q._1();
    }
  }
 else   if (asRight == null) {
{
      Tuples._2<Bounds,Bounds> _tmp_mf966z_a0a9a61=MultiTuple.<Bounds,Bounds>from(null,asLeft);
      min=_tmp_mf966z_a0a9a61._0();
      max=_tmp_mf966z_a0a9a61._1();
    }
  }
 else {
    if ((int)asLeft.start() < (int)asRight.start()) {
{
        Tuples._2<Bounds,Bounds> _tmp_mf966z_a0a0a9a61=MultiTuple.<Bounds,Bounds>from(asLeft,asRight);
        min=_tmp_mf966z_a0a0a9a61._0();
        max=_tmp_mf966z_a0a0a9a61._1();
      }
    }
 else {
{
        Tuples._2<Bounds,Bounds> _tmp_mf966z_a0a0a0j0q=MultiTuple.<Bounds,Bounds>from(asRight,asLeft);
        min=_tmp_mf966z_a0a0a0j0q._0();
        max=_tmp_mf966z_a0a0a0j0q._1();
      }
    }
  }
  if (asLeft != null && asRight != null) {
    return (previous ? max : min);
  }
 else {
    return max;
  }
}
