{
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0mb,descriptor.getConceptFqName())) {
case 0:
    return getAnonymousCellAnnotationEditorAspect();
case 1:
  return getAssertMatchEditorAspect();
case 2:
return getBootstrapActionReferenceEditorAspect();
case 3:
return getCheckDataFlowOperationEditorAspect();
case 4:
return getCheckNodeDataflowEditorAspect();
case 5:
return getCheckNodeForErrorsEditorAspect();
case 6:
return getEditorComponentExpressionEditorAspect();
case 7:
return getEditorExpressionEditorAspect();
case 8:
return getEditorTestCaseEditorAspect();
case 9:
return getExpressionContainerEditorAspect();
case 10:
return getInvokeActionStatementEditorAspect();
case 11:
return getInvokeIntentionStatementEditorAspect();
case 12:
return getMPSActionReferenceEditorAspect();
case 13:
return getMockAnnotationEditorAspect();
case 14:
return getModelExpressionEditorAspect();
case 15:
return getNodeErrorPropetyEditorAspect();
case 16:
return getNodeOperationsContainerEditorAspect();
case 17:
return getNodePropertiesContainerEditorAspect();
case 18:
return getNodeReachableEditorAspect();
case 19:
return getNodeTypePropertyEditorAspect();
case 20:
return getNodeTypeSetPropertyEditorAspect();
case 21:
return getNodeUnreachableEditorAspect();
case 22:
return getNodeWarningPropertyEditorAspect();
case 23:
return getNodesTestCaseEditorAspect();
case 24:
return getPressKeyStatementEditorAspect();
case 25:
return getProjectExpressionEditorAspect();
case 26:
return getScopesExpectedNodeEditorAspect();
case 27:
return getScopesTestEditorAspect();
case 28:
return getSimpleNodeTestEditorAspect();
case 29:
return getSwitchToInspectorEditorAspect();
case 30:
return getTestInfoEditorAspect();
case 31:
return getTestNodeEditorAspect();
case 32:
return getTestNodeAnnotationEditorAspect();
case 33:
return getTestNodeReferenceEditorAspect();
case 34:
return getTypeKeyStatementEditorAspect();
case 35:
return getTypesCheckOperationEditorAspect();
case 36:
return getVariableInializedEditorAspect();
case 37:
return getVariableLiveEditorAspect();
default :
}
return null;
}
