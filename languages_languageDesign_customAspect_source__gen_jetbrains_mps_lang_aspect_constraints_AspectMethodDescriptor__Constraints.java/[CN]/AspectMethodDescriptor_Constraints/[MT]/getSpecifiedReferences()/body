{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0xf159adf43c9340f9L,0x9c5a1f245a8697afL,0x4ac0e6949ea3f2b0L,0x4ac0e6949ea3f2b1L,"method"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xf159adf43c9340f9L,0x9c5a1f245a8697afL,0x4ac0e6949ea3f2b0L,0x4ac0e6949ea3f2b1L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_10kavj_a0a0a0a0a1a0b0a1a2;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return new SimpleScope(SNodeOperations.ofConcept(SLinkOperations.getChildren(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(_context.getReferenceNode()),MetaAdapterFactory.getConcept(0xf159adf43c9340f9L,0x9c5a1f245a8697afL,0x4ac0e6949ea3f2abL,"jetbrains.mps.lang.aspect.structure.GenerationDescriptor_ByInterface")),MetaAdapterFactory.getReferenceLink(0xf159adf43c9340f9L,0x9c5a1f245a8697afL,0x5c6b2d0d258655f8L,0x7ce2ed69c7e7de33L,"mainIntfcClass")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x4a9a46de59132803L,"member")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration"))){
            @Nullable public String getReferenceText(            @NotNull SNode target){
              return SPropertyOperations.getString(SNodeOperations.cast(target,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration")),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
            }
          }
;
        }
      }
;
    }
  }
);
  return references;
}
