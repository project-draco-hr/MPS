{
  if (myUseSystemClassLoader)   return;
  myItems=new CompositeClassPathItem();
  IClassPathItem rtJar=getRTJar();
  if (rtJar != null) {
    myItems.add(rtJar);
  }
  IClassPathItem mpsPath=getMPSPath();
  if (mpsPath != null) {
    myItems.add(mpsPath);
  }
  if (ApplicationComponents.getInstance().getComponent(MPSProjects.class) != null) {
    for (    MPSProject project : ApplicationComponents.getInstance().getComponent(MPSProjects.class).getProjects()) {
      for (      String s : project.getClassPath()) {
        addClassPathItem(s);
      }
    }
  }
  for (  IModule l : MPSModuleRepository.getInstance().getAllModules()) {
    for (    String s : l.getClassPathItems()) {
      addClassPathItem(s);
    }
  }
  myClassLoader=new MPSClassLoader(myItems);
  for (  MPSProject project : ApplicationComponents.getInstance().getComponent(MPSProjects.class).getProjects()) {
    for (    IModule module : project.getModules()) {
      AbstractModule am=(AbstractModule)module;
      ClassPathModelRootManager manager=new ClassPathModelRootManager();
      for (      ModelRoot r : am.getModelRoots()) {
        manager.read(r,module);
      }
    }
  }
}
