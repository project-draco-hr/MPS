{
  for (  SNode component : ListSequence.<SNode>fromList(SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_PreferencePage_component"))) {
    SNode newNode=SModelOperations.createNewNode(_context.getModel(),"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression",null);
    SNode typecastNode=SModelOperations.createNewNode(_context.getModel(),"jetbrains.mps.baseLanguage.structure.CastExpression",null);
    SLinkOperations.setTarget(newNode,"expression",typecastNode,true);
    SLinkOperations.setTarget(typecastNode,"type",SNodeOperations.copyNode(TypeChecker.getInstance().getTypeOf(component)),true);
    SNodeOperations.replaceWithAnother(component,newNode);
    SLinkOperations.setTarget(typecastNode,"expression",component,true);
  }
}
