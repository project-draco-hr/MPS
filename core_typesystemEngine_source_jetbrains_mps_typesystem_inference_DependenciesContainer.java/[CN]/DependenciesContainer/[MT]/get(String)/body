{
  Set<IDependency_Runtime> result=myDependenciesCache.get(key);
  if (result != null) {
    return result;
  }
  if (!isInterfaceConcept(key)) {
    String conceptDeclaration=key;
    while (conceptDeclaration != null) {
      Set<IDependency_Runtime> rules=myDependencies.get(conceptDeclaration);
      if (rules != null) {
        if (conceptDeclaration != key) {
          myDependencies.put(key,rules);
        }
synchronized (rules) {
          result=Collections.unmodifiableSet(new THashSet<IDependency_Runtime>(rules));
        }
        myDependenciesCache.putIfAbsent(key,result);
        return result;
      }
      conceptDeclaration=getSuperConcept(conceptDeclaration);
    }
  }
  myDependencies.putIfAbsent(key,Collections.synchronizedSet(new THashSet<IDependency_Runtime>(1)));
  myDependenciesCache.putIfAbsent(key,Collections.<IDependency_Runtime>emptySet());
  return Collections.emptySet();
}
