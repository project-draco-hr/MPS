{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.standalone.structure.ApplicationPluginDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.classifiers.structure.IClassifier"},new String[]{},new String[]{},new String[]{"initBlock","disposeBlock","fieldDeclaration"},new boolean[]{false,false,true},false,false,"Application Plugin","","");
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.standalone.structure.ApplicationPluginDisposeBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"dispose","","");
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.standalone.structure.ApplicationPluginInitBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"init","","");
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.standalone.structure.ApplicationPluginType","jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType",false,new String[]{"jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType"},new String[]{},new String[]{"plugin"},new String[]{},new boolean[]{},false,false,"application plugin<>","","");
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.standalone.structure.GetPreferencesComponentInProjectOperation","jetbrains.mps.lang.plugin.structure.BaseProjectOperation",false,new String[]{"jetbrains.mps.lang.plugin.structure.BaseProjectOperation"},new String[]{},new String[]{"componentDeclaration"},new String[]{},new boolean[]{},false,false,"preferenceComponent<<{componentDeclaration}>>","","");
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.standalone.structure.GetToolInProjectOperation","jetbrains.mps.lang.plugin.structure.BaseProjectOperation",false,new String[]{"jetbrains.mps.lang.plugin.structure.BaseProjectOperation"},new String[]{},new String[]{"tool"},new String[]{},new boolean[]{},false,false,"tool<<{tool}>>","","");
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.standalone.structure.ProjectPluginDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.classifiers.structure.IClassifier"},new String[]{},new String[]{},new String[]{"initBlock","disposeBlock","fieldDeclaration"},new boolean[]{false,false,true},false,false,"Project Plugin","","");
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.standalone.structure.ProjectPluginDisposeBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"dispose","","");
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.standalone.structure.ProjectPluginInitBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"init","","");
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.standalone.structure.ProjectPluginType","jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType",false,new String[]{"jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType"},new String[]{},new String[]{"plugin"},new String[]{},new boolean[]{},false,false,"project plugin<>","","");
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.lang.plugin.standalone.structure.StandalonePluginDescriptor","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
