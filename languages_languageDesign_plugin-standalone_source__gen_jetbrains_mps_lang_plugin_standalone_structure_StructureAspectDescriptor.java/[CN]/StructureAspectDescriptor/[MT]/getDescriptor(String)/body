{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.plugin.standalone.structure.ApplicationPluginDeclaration").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.classifiers.structure.IClassifier").children(new String[]{"initBlock","disposeBlock","fieldDeclaration"},new boolean[]{false,false,true}).alias("Application Plugin","").create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.lang.plugin.standalone.structure.ApplicationPluginDisposeBlock").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("dispose","").create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.plugin.standalone.structure.ApplicationPluginInitBlock").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("init","").create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.plugin.standalone.structure.ApplicationPluginType").super_("jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType").parents("jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType").references("plugin").alias("application plugin<>","").create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.plugin.standalone.structure.GetPreferencesComponentInProjectOperation").super_("jetbrains.mps.lang.plugin.structure.BaseProjectOperation").parents("jetbrains.mps.lang.plugin.structure.BaseProjectOperation").references("componentDeclaration").alias("preferenceComponent<<{componentDeclaration}>>","").create();
case 5:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.plugin.standalone.structure.GetToolInProjectOperation").super_("jetbrains.mps.lang.plugin.structure.BaseProjectOperation").parents("jetbrains.mps.lang.plugin.structure.BaseProjectOperation").references("tool").alias("tool<<{tool}>>","").create();
case 6:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.plugin.standalone.structure.ProjectPluginDeclaration").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.classifiers.structure.IClassifier").children(new String[]{"initBlock","disposeBlock","fieldDeclaration"},new boolean[]{false,false,true}).alias("Project Plugin","").create();
case 7:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.plugin.standalone.structure.ProjectPluginDisposeBlock").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("dispose","").create();
case 8:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.plugin.standalone.structure.ProjectPluginInitBlock").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("init","").create();
case 9:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.plugin.standalone.structure.ProjectPluginType").super_("jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType").parents("jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType").references("plugin").alias("project plugin<>","").create();
case 10:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.plugin.standalone.structure.StandalonePluginDescriptor").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
