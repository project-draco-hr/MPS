{
  ArrayList<ColumnDescriptor> columns=new ArrayList<ColumnDescriptor>();
  columns.add(new VoidColumnDescriptor(ClassPathEntry.PATH,"Path",-1){
    public TableCellRenderer createRenderer(){
      return new ListRendererAdapter(new StringPathRenderer());
    }
  }
);
  columns.add(new ColumnDescriptor(ClassPathEntry.INCLUDED,"Included in VCS",200){
    public TableCellRenderer createRenderer(){
      return new ListRendererAdapter(new BooleanRenderer());
    }
    public TableCellEditor createEditor(){
      return new BooleanEditor(){
        public boolean isEnabledFor(        JTable table,        Object value,        boolean isSelected,        int row,        int column){
          String path=(String)table.getModel().getValueAt(row,0);
          return !(path.trim().endsWith(".jar"));
        }
      }
;
    }
  }
);
  Computable<List<ClassPathEntry>> chooser=new ClassPathChooser(owner);
  return new BoundTablePanel(owner,caption,list,columns,chooser,true,false);
}
