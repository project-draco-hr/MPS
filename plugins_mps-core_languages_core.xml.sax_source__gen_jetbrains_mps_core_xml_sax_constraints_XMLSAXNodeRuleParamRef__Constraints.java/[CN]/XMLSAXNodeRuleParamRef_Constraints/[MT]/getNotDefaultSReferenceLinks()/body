{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(0xdcb5a83a19a844ffL,0xa4cbfc7d324ecc63L,0x4180d2369b1f16c6L,0x4180d2369b1f17e0L),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xdcb5a83a19a844ffL,0xa4cbfc7d324ecc63L,0x4180d2369b1f16c6L,0x4180d2369b1f17e0L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_58jyk7_a0a0a0a0a1a0b0a1a3;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
{
            Scope scope=Scope.getScope(_context.getContextNode(),_context.getContextRole(),_context.getPosition(),SNodeOperations.getNode("r:7fae86c9-9d2f-4341-8a38-92d558a78a9a(jetbrains.mps.core.xml.sax.structure)","980633948634473453"));
            return (scope == null ? new EmptyScope() : scope);
          }
        }
      }
;
    }
  }
);
  return references;
}
