{
  try {
    myInitializing=true;
    removeAllChildren();
    myPackageNodes.clear();
    myRootGroups.clear();
    if (myModelDescriptor != null) {
      List<SModelDescriptor> subfolderModels=getSubfolderModels(myModelDescriptor.getModule().getOwnModelDescriptors());
      for (      SModelDescriptor subfolderModel : subfolderModels) {
        add(new SModelTreeNode(subfolderModel,null,getOperationContext(),false));
      }
    }
    for (    SNodeGroupTreeNode group : myRootGroups) {
      add(group);
    }
    SModel model=getSModel();
    Condition<SNode> condition=new Condition<SNode>(){
      public boolean met(      SNode object){
        return !(BaseAdapter.fromNode(object) instanceof AttributeConcept);
      }
    }
;
    List<SNode> filteredRoots=CollectionUtil.filter(model.getRoots(),new AndCondition<SNode>(condition,myNodesCondition));
    List<SNode> sortedRoots=SortUtil.sortNodesByPresentation(filteredRoots);
    for (    SNode sortedRoot : sortedRoots) {
      MPSTreeNodeEx treeNode=createSNodeTreeNode(sortedRoot,getOperationContext(),myNodesCondition);
      MPSTreeNode group=getNodeGroupFor(sortedRoot);
      if (group != null) {
        group.add(treeNode);
      }
 else {
        add(treeNode);
      }
    }
    DefaultTreeModel treeModel=(DefaultTreeModel)getTree().getModel();
    treeModel.nodeStructureChanged(this);
  }
  finally {
    myInitialized=true;
    myInitializing=false;
  }
}
