{
  SModelDescriptor sm=getSModelDescriptor();
  if (sm != null && sm.isInitialized() && SModelRepository.getInstance().isChanged(sm)) {
    setColor(new Color(0x00,0x00,0x90));
  }
 else {
    setColor(Color.BLACK);
  }
  if (getSModelDescriptor() != null) {
    setIcon(IconManager.getIconFor(getSModelDescriptor()));
  }
 else {
    setIcon(Icons.MODEL_ICON);
  }
  if (generationRequired()) {
    setAdditionalText("generation required");
  }
 else   if (isPackaged()) {
    setAdditionalText("packaged");
  }
 else   if (isDoNotGenerate()) {
    setAdditionalText("do not generate");
  }
 else {
    setAdditionalText(null);
  }
  if (myModelDescriptor != null) {
    setNodeIdentifier(myModelDescriptor.toString());
  }
 else {
    setNodeIdentifier("");
  }
  if (checkForErrors() && myModelDescriptor != null && myModelDescriptor.isInitialized()) {
    final IScope scope=getOperationContext().getScope();
    boolean isValid=getSModelDescriptor().isValid(scope);
    setErrorState(isValid ? ErrorState.NONE : ErrorState.ERROR);
    List<String> errors=getSModelDescriptor().validate(scope);
    if (errors.isEmpty()) {
      setTooltipText(null);
    }
 else {
      String result="<html>";
      for (      String r : errors) {
        result+=r + "<br>";
      }
      setTooltipText(result);
    }
  }
  setText(calculateText());
}
