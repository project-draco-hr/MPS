{
  DefaultTreeModel treeModel=(DefaultTreeModel)getTree().getModel();
  for (  SNode removed : removedNodes) {
    SNodeTreeNode node=(SNodeTreeNode)findDescendantWith(removed);
    if (node == null)     continue;
    treeModel.removeNodeFromParent(node);
  }
  outer:   for (  SNode added : addedNodes) {
    if (added.isDeleted())     continue;
    if (added.getParent() == null)     continue;
    SNodeTreeNode parent=(SNodeTreeNode)findDescendantWith(added.getParent());
    if (parent == null)     continue;
    if (!parent.isInitialized())     continue;
    SNode parentNode=parent.getSNode();
    int indexof=parentNode.getChildren().indexOf(added);
    for (    Object childO : CollectionUtil.enumerationAsIterable(parent.children())) {
      if (childO instanceof SNodeTreeNode) {
        SNodeTreeNode child=(SNodeTreeNode)childO;
        SNode childNode=child.getSNode();
        int index=parentNode.getChildren().indexOf(childNode);
        if (index > indexof) {
          treeModel.insertNodeInto(createSNodeTreeNode(added,added.getRole_(),getOperationContext()),parent,treeModel.getIndexOfChild(parent,child));
          continue outer;
        }
      }
    }
    treeModel.insertNodeInto(createSNodeTreeNode(added,added.getRole_(),getOperationContext()),parent,parent.getChildCount());
  }
}
