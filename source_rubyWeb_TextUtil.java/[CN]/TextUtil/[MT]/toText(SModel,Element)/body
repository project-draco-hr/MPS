{
  Text result=Text.newInstance(model);
  for (  Object part : text.getContent()) {
    if (part instanceof org.jdom.Text) {
      org.jdom.Text textPart=(org.jdom.Text)part;
      for (      String sentence : splitToSentences(textPart.getText())) {
        Sentence s=toSentence(model,sentence);
        if (s.getWordsCount() > 0) {
          result.addSentence(s);
        }
      }
      continue;
    }
    if (part instanceof Element) {
      Element elem=(Element)part;
      Sentence sentence=Sentence.newInstance(model);
      String name=elem.getName();
      Tag tag=null;
      if ("a".equals(name)) {
        tag=ATag.newInstance(model);
        ((ATag)tag).setHref(elem.getAttributeValue("href"));
        tag.setText(toText(model,elem));
      }
      if ("photo".equals(name)) {
        tag=PhotoTag.newInstance(model);
        ((PhotoTag)tag).setRef(elem.getAttributeValue("ref"));
      }
      if ("b".equals(name) || "B".equals(name)) {
        tag=BoldTag.newInstance(model);
        tag.setText(toText(model,elem));
      }
      if ("br".equals(name) || "BR".equals(name)) {
        tag=BRTag.newInstance(model);
      }
      if ("i".equals(name) || "I".equals(name)) {
        tag=ItalicTag.newInstance(model);
        tag.setText(toText(model,elem));
      }
      if ("p".equals(name) || "P".equals(name)) {
        tag=ParagraphTag.newInstance(model);
        tag.setText(toText(model,elem));
      }
      if ("pre".equals(name)) {
        tag=PreTag.newInstance(model);
        tag.setText(toText(model,elem));
      }
      if ("term".equals(name)) {
        tag=TermTag.newInstance(model);
        tag.setText(toText(model,elem));
      }
      if ("cite".equals(name)) {
        tag=CiteTag.newInstance(model);
        tag.setText(toText(model,elem));
        tag.putUserObject(ResolveUtil.ID_TO_RESOLVE,elem.getAttributeValue("name"));
      }
      if ("quote".equals(name)) {
        tag=QuoteTag.newInstance(model);
        tag.setText(toText(model,elem));
        tag.putUserObject(ResolveUtil.ID_TO_RESOLVE,elem.getAttributeValue("ref"));
      }
      if ("code".equals(name)) {
        tag=CodeTag.newInstance(model);
        tag.setText(toText(model,elem));
      }
      if ("book".equals(name)) {
        tag=BookTag.newInstance(model);
        tag.setText(toText(model,elem));
        if (elem.getAttributeValue("isbn") != null) {
          ((BookTag)tag).setIsbn(elem.getAttributeValue("isbn"));
        }
      }
      if ("xref".equals(name)) {
        tag=XRefTag.newInstance(model);
        tag.setText(toText(model,elem));
        tag.putUserObject(ResolveUtil.ID_TO_RESOLVE,elem.getAttributeValue("targetID"));
      }
      if ("xref-target".equals(name)) {
        tag=XRefTargetTag.newInstance(model);
        tag.setName(elem.getAttributeValue("ID"));
        if (elem.getAttributeValue("paper") != null) {
          tag.putUserObject(ResolveUtil.ID_TO_RESOLVE,elem.getAttributeValue("paper"));
        }
        tag.setText(toText(model,elem));
      }
      if ("patternRef".equals(name)) {
        tag=PatternRefTag.newInstance(model);
        tag.putUserObject(ResolveUtil.ID_TO_RESOLVE,elem.getAttributeValue("name"));
      }
      if ("figure".equals(name)) {
        tag=FigureTag.newInstance(model);
        ((FigureTag)tag).setSource(elem.getAttributeValue("src"));
      }
      if ("figureRef".equals(name)) {
        tag=FigureRefTag.newInstance(model);
        tag.setText(toText(model,elem));
        tag.putUserObject(ResolveUtil.ID_TO_RESOLVE,elem.getAttributeValue("ref"));
      }
      if ("section".equals(name)) {
        tag=SectionTag.newInstance(model);
        tag.setText(toText(model,elem));
        if (elem.getChild("h") != null) {
          tag.setName(elem.getChild("h").getText());
        }
      }
      if ("tbd".equals(name)) {
        tag=TBDTag.newInstance(model);
        tag.setText(toText(model,elem));
      }
      if ("insertCode".equals(name)) {
        tag=InsertCodeTag.newInstance(model);
        ((InsertCodeTag)tag).setFile(elem.getAttributeValue("file"));
        ((InsertCodeTag)tag).setFragment(elem.getAttributeValue("fragment"));
      }
      if ("ul".equals(name)) {
        tag=ListTag.newInstance(model);
        for (        Element child : (List<Element>)elem.getChildren("li")) {
          ListItem item=ListItem.newInstance(model);
          item.setText(toText(model,child));
          ((ListTag)tag).addItem(item);
        }
      }
      if (tag != null) {
        sentence.addWord(tag);
      }
      result.addSentence(sentence);
      continue;
    }
  }
  return result;
}
