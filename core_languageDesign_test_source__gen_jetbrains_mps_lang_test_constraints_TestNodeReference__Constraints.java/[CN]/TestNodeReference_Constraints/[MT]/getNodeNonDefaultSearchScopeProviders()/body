{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("declaration",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      if (SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.lang.test.structure.TestNode",false,false) != null) {
        return new ArrayList<SNode>();
      }
      SNode test=SNodeOperations.getAncestorWhereConceptInList(_context.getEnclosingNode(),new String[]{"jetbrains.mps.lang.test.structure.NodesTestCase","jetbrains.mps.lang.test.structure.EditorTestCase"},true,false);
      List<SNode> result=new ArrayList<SNode>();
      if (test != null) {
        for (        SNode node : ListSequence.fromList(SNodeOperations.getDescendants(test,"jetbrains.mps.lang.test.structure.TestNodeAnnotation",true,new String[]{}))) {
          ListSequence.fromList(result).addElement(node);
        }
      }
      return result;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c89590382(jetbrains.mps.lang.test.constraints)","1213104844718");
    }
  }
);
  return result;
}
