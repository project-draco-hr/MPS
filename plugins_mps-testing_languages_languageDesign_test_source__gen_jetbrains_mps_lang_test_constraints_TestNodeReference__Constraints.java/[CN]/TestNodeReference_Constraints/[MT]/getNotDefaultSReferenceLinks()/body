{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(-8825571760360698496l,-7431307307277756308l),1210674524691l,1210674534086l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(-8825571760360698496l,-7431307307277756308l),1210674524691l,1210674534086l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          if (SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(new UUID(-8825571760360698496l,-7431307307277756308l),1216989428737l,"jetbrains.mps.lang.test.structure.TestNode"),false,false) != null) {
            return new ArrayList<SNode>();
          }
          SNode test=SNodeOperations.getNodeAncestorWhereConceptInList(_context.getEnclosingNode(),new SAbstractConcept[]{MetaAdapterFactory.getConcept(new UUID(-8825571760360698496l,-7431307307277756308l),1216913645126l,"jetbrains.mps.lang.test.structure.NodesTestCase"),MetaAdapterFactory.getConcept(new UUID(-8825571760360698496l,-7431307307277756308l),1229187653856l,"jetbrains.mps.lang.test.structure.EditorTestCase")},true,false);
          List<SNode> result=new ArrayList<SNode>();
          if (test != null) {
            for (            SNode node : ListSequence.fromList(SNodeOperations.getNodeDescendants(test,MetaAdapterFactory.getConcept(new UUID(-8825571760360698496l,-7431307307277756308l),1210673684636l,"jetbrains.mps.lang.test.structure.TestNodeAnnotation"),true,new SAbstractConcept[]{}))) {
              ListSequence.fromList(result).addElement(node);
            }
          }
          return result;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_i5q66v_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
