{
  List<INodeSubstituteAction> result=ListSequence.fromList(new ArrayList<INodeSubstituteAction>());
{
    Computable computable=new Computable(){
      public Object compute(){
        return ListSequence.fromList(SConceptOperations.getAllSubConcepts(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base"),_context.getModel(),operationContext.getScope())).where(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return !(SConceptPropertyOperations.getBoolean(it,"abstract"));
          }
        }
).toListSequence();
      }
    }
;
    Iterable queryResult=(Iterable)computable.compute();
    if (queryResult != null) {
      for (      Object item : queryResult) {
        List<INodeSubstituteAction> defaultActions=ChildSubstituteActionsHelper.createDefaultActions((SNode)item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter(),operationContext);
        ListSequence.fromList(result).addSequence(ListSequence.fromList(defaultActions));
      }
    }
  }
  return result;
}
