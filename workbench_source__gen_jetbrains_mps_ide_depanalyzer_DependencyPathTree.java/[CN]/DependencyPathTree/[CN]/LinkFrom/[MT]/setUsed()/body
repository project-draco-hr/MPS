{
  if (isUsed()) {
    return;
  }
  node=new DependencyTreeNode(link,null);
  if (isCyclic) {
    node.setCyclic();
  }
  if (from != null) {
    from.setUsed();
    from.node.add(node);
  }
  ListSequence.fromList(backdeps).visitAll(new IVisitor<DependencyPathTree.LinkFrom>(){
    public void visit(    DependencyPathTree.LinkFrom dep){
      dep.setLinkUsed(LinkFrom.this);
    }
  }
);
}
