{
  if (isUsed()) {
    return;
  }
  node=new DependencyTreeNode(link,null);
  if (isCyclic) {
    node.setCyclic();
  }
  if (from != null) {
    from.setUsed();
    from.node.add(node);
  }
  if (MapSequence.fromMap(backdeps).containsKey(this)) {
    for (    DependencyPathTree.LinkFrom dep : ListSequence.fromList(MapSequence.fromMap(backdeps).get(this))) {
      if (!(dep.isUsed())) {
        dep.setUsed();
        dep.node.setLinkLeaf(node);
      }
    }
  }
}
