{
  List<DependencyPathTree.Link> result=ListSequence.fromList(new ArrayList<DependencyPathTree.Link>());
  ModuleDescriptor descr=module.getModuleDescriptor();
switch (role) {
case None:
    addDeps(result,check_9bg0dz_b0b0a2a31(descr),DependencyPathTree.Role.UsedDevkit,DependencyPathTree.LinkType.UsesDevkit);
  addDeps(result,check_9bg0dz_b0c0a2a31(descr),DependencyPathTree.Role.UsedLanguage,DependencyPathTree.LinkType.UsesLanguage);
addDeps(result,getReexportDeps(descr),DependencyPathTree.Role.DTDependency_,DependencyPathTree.LinkType.ReexportsDep);
addDeps(result,getNonreexportDeps(descr),DependencyPathTree.Role.DTDependency_,DependencyPathTree.LinkType.Depends);
break;
case UsedDevkit:
addDeps(result,check_9bg0dz_b0a0b2a31(as_9bg0dz_a0b0a0b2a31(descr,DevkitDescriptor.class)),DependencyPathTree.Role.UsedDevkit,DependencyPathTree.LinkType.ExtendsDevkit);
addDeps(result,check_9bg0dz_b0b0b2a31(as_9bg0dz_a0b0b0b2a31(descr,DevkitDescriptor.class)),DependencyPathTree.Role.UsedLanguage,DependencyPathTree.LinkType.ExportsLanguage);
addDeps(result,check_9bg0dz_b0c0b2a31(as_9bg0dz_a0b0c0b2a31(descr,DevkitDescriptor.class)),DependencyPathTree.Role.DTDependency_,DependencyPathTree.LinkType.ExportsSolution);
break;
case UsedLanguage:
addDeps(result,check_9bg0dz_b0a0c2a31(as_9bg0dz_a0b0a0c2a31(descr,LanguageDescriptor.class)),DependencyPathTree.Role.UsedLanguage,DependencyPathTree.LinkType.ExtedndsLanguage);
if (isShowRuntime()) {
addDeps(result,check_9bg0dz_b0a0b0c2a31(as_9bg0dz_a0b0a0b0c2a31(descr,LanguageDescriptor.class)),DependencyPathTree.Role.RTDependency,DependencyPathTree.LinkType.ExportsRuntime);
}
break;
case DTDependency_:
addDeps(result,getReexportDeps(descr),DependencyPathTree.Role.DTDependency_,DependencyPathTree.LinkType.ReexportsDep);
if (isShowRuntime()) {
addDeps(result,getNonreexportDeps(descr),DependencyPathTree.Role.RTDependency,DependencyPathTree.LinkType.Depends);
}
break;
case RTDependency:
addDeps(result,getReexportDeps(descr),DependencyPathTree.Role.RTDependency,DependencyPathTree.LinkType.ReexportsDep);
addDeps(result,getNonreexportDeps(descr),DependencyPathTree.Role.RTDependency,DependencyPathTree.LinkType.Depends);
break;
default :
}
return result;
}
