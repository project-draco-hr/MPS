{
  HashMap<SNode,SNode> mapping=new HashMap<SNode,SNode>();
  SNode sourceNodePeer=getSourceNode();
  CopyUtil.copy(Arrays.asList(sourceNodePeer.getTopmostAncestor()),mapping).get(0);
  String role=SModelUtil.getGenuineLinkRole(myLinkDeclaration);
  SNode sourceNode=mapping.get(sourceNodePeer);
  SNode nodeToEquatePeer=sourceNodePeer;
  TypeChecker typeChecker=TypeChecker.getInstance();
  while (nodeToEquatePeer != null && typeChecker.getTypeOf(nodeToEquatePeer) == null) {
    nodeToEquatePeer=nodeToEquatePeer.getParent();
  }
  if (nodeToEquatePeer == null) {
    return null;
  }
  SNode nodeToEquate=mapping.get(nodeToEquatePeer);
  SNode parent=nodeToEquate.getParent();
  if (parent == null) {
    return null;
  }
  SNodeAccessUtil.setReferenceTarget(sourceNode,role,(SNode)getParameterObject());
  SNode nodeToEquateCopy=CopyUtil.copy(nodeToEquate);
  return TypeChecker.getInstance().getTypeOf(nodeToEquateCopy);
}
