{
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a,descriptor.getConceptFqName())) {
case 0:
    return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new AccountType_Editor()));
case 1:
  return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new AgreementDeclarations_Editor()));
case 2:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new Date_Editor()));
case 3:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new Date_Future_Editor()));
case 4:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new Date_Past_Editor()));
case 5:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new Event_Editor()));
case 6:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new EventType_Editor()));
case 7:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new EventVariable_Editor()));
case 8:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new EventVariableReference_Editor()));
case 9:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new Plan_Editor()));
case 10:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new PostingRule_Editor()));
case 11:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new PostingRuleTemporalProperty_Editor()));
case 12:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new Quantity_Editor()));
case 13:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new QuantityTemporalProperty_Editor()));
case 14:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new Value_Editor()));
case 15:
return collectEditors(descriptor,Collections.<ConceptEditor>singletonList(new ValueReference_Editor()));
default :
}
return Collections.<ConceptEditor>emptyList();
}
