{
{
    SAbstractConcept cncpt=c;
    Integer preIndex=indices_4qogsf_a0u.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return props_AbstractConceptDeclaration;
      }
    break;
case 1:
  if (true) {
    return props_AggregationLinkDeclarationScopeKind;
  }
break;
case 2:
if (true) {
return props_AttributeInfo;
}
break;
case 3:
if (true) {
return props_AttributeInfo_AttributedConcept;
}
break;
case 4:
if (true) {
return props_AttributeInfo_IsMultiple;
}
break;
case 5:
if (true) {
return props_ConceptDeclaration;
}
break;
case 6:
if (true) {
return props_ConstrainedDataTypeDeclaration;
}
break;
case 7:
if (true) {
return props_DataTypeDeclaration;
}
break;
case 8:
if (true) {
return props_DeprecatedNodeAnnotation;
}
break;
case 9:
if (true) {
return props_EnumerationDataTypeDeclaration;
}
break;
case 10:
if (true) {
return props_EnumerationMemberDeclaration;
}
break;
case 11:
if (true) {
return props_IConceptAspect;
}
break;
case 12:
if (true) {
return props_IStructureDeprecatable;
}
break;
case 13:
if (true) {
return props_InterfaceConceptDeclaration;
}
break;
case 14:
if (true) {
return props_InterfaceConceptReference;
}
break;
case 15:
if (true) {
return props_LinkDeclaration;
}
break;
case 16:
if (true) {
return props_PrimitiveDataTypeDeclaration;
}
break;
case 17:
if (true) {
return props_PropertyDeclaration;
}
break;
case 18:
if (true) {
return props_ReferenceLinkDeclartionScopeKind;
}
break;
default :
}
}
throw new IllegalStateException();
}
