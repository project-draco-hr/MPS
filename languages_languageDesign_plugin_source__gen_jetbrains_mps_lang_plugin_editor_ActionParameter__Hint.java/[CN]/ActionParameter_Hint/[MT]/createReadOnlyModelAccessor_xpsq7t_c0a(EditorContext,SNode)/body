{
  EditorCell_Property editorCell=EditorCell_Property.create(editorContext,new ModelAccessor(){
    public String getText(){
      SNode annotation=ListSequence.fromList(SLinkOperations.getTargets(BehaviorReflection.invokeVirtual((Class<SNode>)((Class)(Object.class)),node,"virtual_getFieldDeclaration_1171743928471867409",new Object[]{}),"annotation",true)).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SPropertyOperations.getString(SLinkOperations.getTarget(it,"annotation",false),"name").equals(SPropertyOperations.getString(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_xpsq7t_a0a0a0a0a0a0a0a0a2a(),"classifier",false),"jetbrains.mps.baseLanguage.structure.Annotation"),"name"));
        }
      }
).first();
      if (annotation == null) {
        return "";
      }
      SNode longDescription=ListSequence.fromList(SLinkOperations.getTargets(annotation,"value",true)).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return it != null && SLinkOperations.getTarget(it,"key",false) != null && "longDescription".equals(SPropertyOperations.getString(SLinkOperations.getTarget(it,"key",false),"name"));
        }
      }
).last();
      if (longDescription == null) {
        return "";
      }
      String longDescriptionString=SPropertyOperations.getString(SNodeOperations.cast(SLinkOperations.getTarget(longDescription,"value",true),"jetbrains.mps.baseLanguage.structure.StringLiteral"),"value");
      return longDescriptionString;
    }
    public void setText(    String s){
    }
    public boolean isValidText(    String s){
      return EqualUtil.equals(s,getText());
    }
  }
,node);
  editorCell.setAction(CellActionType.DELETE,EmptyCellAction.getInstance());
  editorCell.setCellId("ReadOnlyModelAccessor_xpsq7t_c0a");
  Style style=new StyleImpl();
  style.set(StyleAttributes.SELECTABLE,false);
  editorCell.getStyle().putAll(style);
  return editorCell;
}
