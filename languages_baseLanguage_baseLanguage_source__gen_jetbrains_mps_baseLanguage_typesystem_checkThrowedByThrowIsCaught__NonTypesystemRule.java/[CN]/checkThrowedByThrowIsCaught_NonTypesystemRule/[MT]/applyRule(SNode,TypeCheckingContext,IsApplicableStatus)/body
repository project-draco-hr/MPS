{
  SNode throwable=SLinkOperations.getTarget(throwStatement,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10f3ee082d8L,0x10f3ee0cd6fL,"throwable"));
  if ((throwable == null)) {
    return;
  }
  SNode throwableType=TypeChecker.getInstance().getTypeOf(throwable);
  Set<SNode> throwables=SetSequence.fromSet(new HashSet<SNode>());
  if (SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(throwable),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506dL,"jetbrains.mps.baseLanguage.structure.Type"))) {
    SetSequence.fromSet(throwables).addElement(SNodeOperations.cast(throwableType,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506dL,"jetbrains.mps.baseLanguage.structure.Type")));
  }
  if (SNodeOperations.isInstanceOf(throwableType,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506dL,"jetbrains.mps.baseLanguage.structure.Type"))) {
    RulesFunctions_BaseLanguage.check(typeCheckingContext,throwables,throwStatement);
  }
}
