{
  SNode op=SNodeOperations.getAncestor(nodeToCheck,"jetbrains.mps.bootstrap.smodelLanguage.structure.SNodeOperation",false,false);
  SNode propAAQ=SNodeOperations.getAncestor(nodeToCheck,"jetbrains.mps.bootstrap.smodelLanguage.structure.PropertyAttributeAccessQualifier",false,false);
  if (op == null || propAAQ == null) {
    TypeChecker.getInstance().reportTypeError(nodeToCheck,"not expected here","jetbrains.mps.bootstrap.smodelLanguage.helgins","1204909225630");
    return;
  }
  final SNode property=SLinkOperations.getTarget(nodeToCheck,"property",false);
  final SNode C_typevar_1204909589268=TypeChecker.getInstance().getRuntimeSupport().createNewRuntimeTypesVariable(false);
  TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getEquationManager().getRepresentator(C_typevar_1204909589268),RulesUtil.get_inputNodeConcept(op),nodeToCheck,null,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1204909602801");
  TypeChecker.getInstance().getRuntimeSupport().whenConcrete(TypeChecker.getInstance().getEquationManager().getRepresentator(C_typevar_1204909589268),new Runnable(){
    public void run(){
      SNode inputNodeConcept=TypeChecker.getInstance().getEquationManager().getRepresentator(C_typevar_1204909589268);
      List<PropertyDeclaration> declaredProperties=SModelSearchUtil_new.getPropertyDeclarationsExcludingOverridden(((AbstractConceptDeclaration)SNodeOperations.getAdapter(inputNodeConcept)));
      if (!(declaredProperties.contains(((PropertyDeclaration)SNodeOperations.getAdapter(property))))) {
        TypeChecker.getInstance().reportTypeError(nodeToCheck,"access to property '" + SPropertyOperations.getString(property,"name") + "' is not expected here","jetbrains.mps.bootstrap.smodelLanguage.helgins","1204909999919");
      }
    }
  }
,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1204909999898");
}
