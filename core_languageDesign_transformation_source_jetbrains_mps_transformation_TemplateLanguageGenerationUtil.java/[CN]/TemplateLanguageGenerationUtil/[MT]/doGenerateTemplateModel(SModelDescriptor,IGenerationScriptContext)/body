{
  Language baseLanguage=BootstrapLanguagesManager.getInstance().getBaseLanguage();
  final Language tLBase=BootstrapLanguagesManager.getInstance().getTLBase();
  Generator generator=tLBase.getGeneratorTo(baseLanguage.getNamespace());
  context.getOperationContext().getComponent(MessageView.class).add(new Message(MessageKind.INFORMATION,"Extract query methods"));
  GenerationStatus status=context.doGenerate(sourceModel,baseLanguage,CollectionUtil.iterableAsSet(generator.getOwnMappings()));
  if (status.isCanceled() || status.isError()) {
    return status;
  }
  SModelDescriptor intermediateModel=status.getOutputModel().getModelDescriptor();
  context.getOperationContext().getComponent(MessageView.class).add(new Message(MessageKind.INFORMATION,"Generate utility class"));
  status=context.doGenerate(intermediateModel,baseLanguage,null);
  return status;
}
