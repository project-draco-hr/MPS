{
  List<Set<M>> result=new LinkedList<Set<M>>();
  Graph<IModuleDecorator<M>> g=new Graph<IModuleDecorator<M>>();
  Map<IModule,IModuleDecorator<M>> moduleToDecorator=new LinkedHashMap<IModule,IModuleDecorator<M>>();
  for (  M m : modules) {
    IModuleDecorator<M> dec=decoratorBuilder.decorate(m);
    moduleToDecorator.put(m,dec);
    g.add(dec);
  }
  for (  IModuleDecorator<M> m : g.getData()) {
    m.fill(moduleToDecorator);
  }
  List<Set<IModuleDecorator<M>>> sets=Graphs.getInstance().findStronglyConnectedComponents(g);
  for (  Set<IModuleDecorator<M>> set : sets) {
    Set<M> mset=new LinkedHashSet<M>();
    result.add(mset);
    for (    IModuleDecorator<M> md : set) {
      mset.add(md.getModule());
    }
  }
  Collections.reverse(result);
  return result;
}
