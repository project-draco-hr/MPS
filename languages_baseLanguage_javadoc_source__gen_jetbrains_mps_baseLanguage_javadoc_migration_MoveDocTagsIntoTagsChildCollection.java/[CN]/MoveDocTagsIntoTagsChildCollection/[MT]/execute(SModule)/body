{
  Sequence.fromIterable(SNodeOperations.ofConcept(Sequence.fromIterable(((Iterable<SModel>)m.getModels())).translate(new ITranslator2<SModel,SNode>(){
    public Iterable<SNode> translate(    SModel it){
      return SModelOperations.nodes(it,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf93c84351fL,"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration"));
    }
  }
),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf93c84351fL,"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration"))).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode n){
      return true;
    }
  }
).sort(new ISelector<SNode,Integer>(){
    public Integer select(    SNode it){
      return ListSequence.fromList(SNodeOperations.getNodeAncestors(it,null,false)).count();
    }
  }
,false).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode it){
      final GeneratedMatchingPattern pattern=new MoveDocTagsIntoTagsChildCollection.Pattern_i7tkk0_a0a0a0a0a0a0a1();
      if (!(pattern.match(it))) {
        return;
      }
{
        SNode migratedNode=new _FunctionTypes._return_P1_E0<SNode,SNode>(){
          public SNode invoke(          SNode node){
            SNode clone=SNodeOperations.copyNode(node);
            SNode comment=AttributeOperations.getAttribute(clone,new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL,0xbb1b463a8781b786L,0x5ed0d79d7dc44bf2L,"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment")));
            if (comment != null) {
              JavaDocConverter.convertTags(comment);
            }
            return clone;
          }
        }
.invoke(it);
      }
    }
  }
);
  Sequence.fromIterable(SNodeOperations.ofConcept(Sequence.fromIterable(((Iterable<SModel>)m.getModels())).translate(new ITranslator2<SModel,SNode>(){
    public Iterable<SNode> translate(    SModel it){
      return SModelOperations.nodes(it,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca68L,"jetbrains.mps.baseLanguage.structure.FieldDeclaration"));
    }
  }
),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca68L,"jetbrains.mps.baseLanguage.structure.FieldDeclaration"))).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode n){
      return true;
    }
  }
).sort(new ISelector<SNode,Integer>(){
    public Integer select(    SNode it){
      return ListSequence.fromList(SNodeOperations.getNodeAncestors(it,null,false)).count();
    }
  }
,false).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode it){
      final GeneratedMatchingPattern pattern=new MoveDocTagsIntoTagsChildCollection.Pattern_i7tkk0_a0a0a0a0a0a1a1();
      if (!(pattern.match(it))) {
        return;
      }
{
        SNode migratedNode=new _FunctionTypes._return_P1_E0<SNode,SNode>(){
          public SNode invoke(          SNode node){
            SNode clone=SNodeOperations.copyNode(node);
            SNode comment=AttributeOperations.getAttribute(clone,new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL,0xbb1b463a8781b786L,0x5ed0d79d7dc44bf2L,"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment")));
            if (comment != null) {
              JavaDocConverter.convertTags(comment);
            }
            return clone;
          }
        }
.invoke(it);
      }
    }
  }
);
  Sequence.fromIterable(SNodeOperations.ofConcept(Sequence.fromIterable(((Iterable<SModel>)m.getModels())).translate(new ITranslator2<SModel,SNode>(){
    public Iterable<SNode> translate(    SModel it){
      return SModelOperations.nodes(it,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"));
    }
  }
),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"))).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode n){
      return true;
    }
  }
).sort(new ISelector<SNode,Integer>(){
    public Integer select(    SNode it){
      return ListSequence.fromList(SNodeOperations.getNodeAncestors(it,null,false)).count();
    }
  }
,false).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode it){
      final GeneratedMatchingPattern pattern=new MoveDocTagsIntoTagsChildCollection.Pattern_i7tkk0_a0a0a0a0a0a2a1();
      if (!(pattern.match(it))) {
        return;
      }
{
        SNode migratedNode=new _FunctionTypes._return_P1_E0<SNode,SNode>(){
          public SNode invoke(          SNode node){
            SNode clone=SNodeOperations.copyNode(node);
            SNode comment=AttributeOperations.getAttribute(clone,new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL,0xbb1b463a8781b786L,0x1cb65d9fe66a764cL,"jetbrains.mps.baseLanguage.javadoc.structure.ClassifierDocComment")));
            if (comment != null) {
              JavaDocConverter.convertTags(comment);
            }
            return clone;
          }
        }
.invoke(it);
      }
    }
  }
);
  Sequence.fromIterable(SNodeOperations.ofConcept(Sequence.fromIterable(((Iterable<SModel>)m.getModels())).translate(new ITranslator2<SModel,SNode>(){
    public Iterable<SNode> translate(    SModel it){
      return SModelOperations.nodes(it,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"));
    }
  }
),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"))).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode n){
      return true;
    }
  }
).sort(new ISelector<SNode,Integer>(){
    public Integer select(    SNode it){
      return ListSequence.fromList(SNodeOperations.getNodeAncestors(it,null,false)).count();
    }
  }
,false).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode it){
      final GeneratedMatchingPattern pattern=new MoveDocTagsIntoTagsChildCollection.Pattern_i7tkk0_a0a0a0a0a0a3a1();
      if (!(pattern.match(it))) {
        return;
      }
{
        SNode migratedNode=new _FunctionTypes._return_P1_E0<SNode,SNode>(){
          public SNode invoke(          SNode node){
            SNode clone=SNodeOperations.copyNode(node);
            SNode comment=AttributeOperations.getAttribute(clone,new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf280165065d5424eL,0xbb1b463a8781b786L,0x4a3c146b7faeeb34L,"jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment")));
            if (comment != null) {
              JavaDocConverter.convertTags(comment);
            }
            return clone;
          }
        }
.invoke(it);
      }
    }
  }
);
  return null;
}
