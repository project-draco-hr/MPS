{
  final Wrappers._T<SNode> root=new Wrappers._T<SNode>();
  final Wrappers._T<SNode> method=new Wrappers._T<SNode>();
  doSomethingAndUndo(myUiDiff,new _FunctionTypes._return_P0_E0<SNode>(){
    public SNode invoke(){
      root.value=getDocumentLayoutRoot();
      method.value=Sequence.fromIterable(BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),root.value,"jetbrains.mps.baseLanguage.structure.Classifier","call_methods_5292274854859311639",new Object[]{})).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode m){
          return "getSize".equals(SPropertyOperations.getString(m,"name"));
        }
      }
);
      Assert.assertNotNull(method.value);
      SLinkOperations.setTarget(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.cast(SLinkOperations.getTarget(method.value,"returnType",true),"jetbrains.mps.baseLanguage.structure.ClassifierType"),"classifier",root.value,false);
      return root.value;
    }
  }
,new _FunctionTypes._return_P0_E0<SNode>(){
    public SNode invoke(){
      SLinkOperations.setTarget(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.cast(SLinkOperations.getTarget(method.value,"returnType",true),"jetbrains.mps.baseLanguage.structure.ClassifierType"),"classifier",Sequence.fromIterable(BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),root.value,"jetbrains.mps.baseLanguage.structure.Classifier","call_nestedClassifiers_5292274854859193142",new Object[]{})).first(),false);
      return jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getContainingRoot(method.value);
    }
  }
);
}
