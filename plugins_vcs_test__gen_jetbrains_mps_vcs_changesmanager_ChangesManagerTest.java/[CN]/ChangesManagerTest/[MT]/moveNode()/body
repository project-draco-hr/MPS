{
  final Wrappers._T<SNode> root=new Wrappers._T<SNode>();
  final Wrappers._T<SNode> field=new Wrappers._T<SNode>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      root.value=getDocumentLayoutRoot();
      field.value=ListSequence.fromList(SLinkOperations.getTargets(root.value,"field",true)).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode f){
          return "textPositions".equals(SPropertyOperations.getString(f,"name"));
        }
      }
);
    }
  }
);
  Assert.assertNotNull(field.value);
  _FunctionTypes._return_P0_E0<? extends SNode> moveUpTwice=new _FunctionTypes._return_P0_E0<SNode>(){
    public SNode invoke(){
      jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.insertPrevSiblingChild(field.value,jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getPrevSibling(field.value));
      jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.insertPrevSiblingChild(field.value,jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getPrevSibling(field.value));
      return jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getContainingRoot(field.value);
    }
  }
;
  _FunctionTypes._return_P0_E0<? extends SNode> moveDown=new _FunctionTypes._return_P0_E0<SNode>(){
    public SNode invoke(){
      jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.insertNextSiblingChild(field.value,jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getNextSibling(field.value));
      return jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getContainingRoot(field.value);
    }
  }
;
  _FunctionTypes._return_P0_E0<? extends SNode> moveToOtherClass=new _FunctionTypes._return_P0_E0<SNode>(){
    public SNode invoke(){
      SNode inner=jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(root.value,"staticInnerClassifiers",true)).first(),"jetbrains.mps.baseLanguage.structure.ClassConcept");
      ListSequence.fromList(SLinkOperations.getTargets(inner,"field",true)).addElement(field.value);
      return jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getContainingRoot(field.value);
    }
  }
;
  List<_FunctionTypes._return_P0_E0<? extends SNode>> tasks=ListSequence.fromList(new ArrayList<_FunctionTypes._return_P0_E0<? extends SNode>>());
  for (int i=0; i < 3; i++) {
    ListSequence.fromList(tasks).addElement(moveUpTwice);
  }
  for (int i=0; i < 19; i++) {
    ListSequence.fromList(tasks).addElement(moveDown);
  }
  ListSequence.fromList(tasks).addElement(moveToOtherClass);
  doSomethingAndUndo(myUiDiff,false,tasks);
}
