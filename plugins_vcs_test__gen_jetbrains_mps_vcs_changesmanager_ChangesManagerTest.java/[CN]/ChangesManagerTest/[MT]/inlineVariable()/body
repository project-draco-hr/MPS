{
  final Wrappers._T<SNode> root=new Wrappers._T<SNode>();
  final Wrappers._T<SNode> method=new Wrappers._T<SNode>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      root.value=getDocumentLayoutRoot();
      method.value=Sequence.fromIterable(BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),root.value,"jetbrains.mps.baseLanguage.structure.Classifier","call_methods_5292274854859311639",new Object[]{})).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode f){
          return "getTextPosition".equals(SPropertyOperations.getString(f,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")));
        }
      }
);
    }
  }
);
  doSomethingAndUndo(myUiDiff,true,new _FunctionTypes._return_P0_E0<SNode>(){
    public SNode invoke(){
      SNode ifBefore=(SNode)new jetbrains.mps.smodel.SNode(InternUtil.intern("jetbrains.mps.baseLanguage.structure.IfStatement"));
      jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.insertPrevSiblingChild(ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(method.value,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123135l,"body")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123136l,1068581517665l,"statement"))).first(),ifBefore);
      return root.value;
    }
  }
,new _FunctionTypes._return_P0_E0<SNode>(){
    public SNode invoke(){
      SNode foreachBody=SLinkOperations.getTarget(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(method.value,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123135l,"body")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123136l,1068581517665l,"statement"))).getElement(1),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1144226303539l,"jetbrains.mps.baseLanguage.structure.ForeachStatement")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1154032098014l,1154032183016l,"body"));
      SNode declarationStatement=jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getChildren(foreachBody,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123136l,1068581517665l,"statement"))).getElement(0),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068581242864l,"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement"));
      final SNode declaration=SLinkOperations.getTarget(declarationStatement,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068581242864l,1068581242865l,"localVariableDeclaration"));
      final SNode initializer=SLinkOperations.getTarget(declaration,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068431474542l,1068431790190l,"initializer"));
      ListSequence.fromList(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getNodeDescendants(foreachBody,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,"jetbrains.mps.baseLanguage.structure.VariableReference"),false,new SAbstractConcept[]{})).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.isInstanceOf(SLinkOperations.getTarget(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.cast(it,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,"jetbrains.mps.baseLanguage.structure.VariableReference")),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,1068581517664l,"variableDeclaration")),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068581242863l,"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration"));
        }
      }
).toListSequence().where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode vr){
          return SLinkOperations.getTarget(vr,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,1068581517664l,"variableDeclaration")) == declaration;
        }
      }
).visitAll(new IVisitor<SNode>(){
        public void visit(        SNode vr){
          jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.replaceWithAnother(vr,jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.copyNode(initializer));
        }
      }
);
      jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.deleteNode(declarationStatement);
      return root.value;
    }
  }
,new _FunctionTypes._return_P0_E0<SNode>(){
    public SNode invoke(){
      jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.deleteNode(ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(method.value,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123135l,"body")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123136l,1068581517665l,"statement"))).getElement(2));
      jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.deleteNode(ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(method.value,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123135l,"body")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123136l,1068581517665l,"statement"))).getElement(1));
      return root.value;
    }
  }
);
}
