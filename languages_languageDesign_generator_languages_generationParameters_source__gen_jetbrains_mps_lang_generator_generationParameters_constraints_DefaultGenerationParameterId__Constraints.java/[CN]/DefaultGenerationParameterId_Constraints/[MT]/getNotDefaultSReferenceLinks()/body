{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(2927283147525800424l,-6500252810541441820l),3064182000795631740l,3064182000795631811l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(2927283147525800424l,-6500252810541441820l),3064182000795631740l,3064182000795631811l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          if ((_context.getReferenceNode() != null)) {
            return SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getReferenceNode(),MetaAdapterFactory.getReferenceLink(new UUID(2927283147525800424l,-6500252810541441820l),3064182000795631740l,3064182000795631810l,"container")),MetaAdapterFactory.getContainmentLink(new UUID(2927283147525800424l,-6500252810541441820l),8484425748929510072l,8484425748929510073l,"parameters"));
          }
          return Sequence.fromIterable(Collections.<SNode>emptyList());
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_e4b5n5_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
