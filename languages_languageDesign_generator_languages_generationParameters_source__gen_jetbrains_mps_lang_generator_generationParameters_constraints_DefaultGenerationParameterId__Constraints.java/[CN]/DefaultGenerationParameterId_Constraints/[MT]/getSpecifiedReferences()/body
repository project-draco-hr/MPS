{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0x289fcc83654341e8L,0xa5ca768235715ce4L,0x2a86294b8491c07cL,0x2a86294b8491c0c3L,"parameter"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x289fcc83654341e8L,0xa5ca768235715ce4L,0x2a86294b8491c07cL,0x2a86294b8491c0c3L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          if ((_context.getReferenceNode() != null)) {
            return SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getReferenceNode(),MetaAdapterFactory.getReferenceLink(0x289fcc83654341e8L,0xa5ca768235715ce4L,0x2a86294b8491c07cL,0x2a86294b8491c0c2L,"container")),MetaAdapterFactory.getContainmentLink(0x289fcc83654341e8L,0xa5ca768235715ce4L,0x75bebc44281efab8L,0x75bebc44281efab9L,"parameters"));
          }
          return Sequence.fromIterable(Collections.<SNode>emptyList());
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_e4b5n5_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
