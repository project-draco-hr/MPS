{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("parameter",new BaseReferenceConstraintsDescriptor("parameter",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          if ((_context.getReferenceNode() != null)) {
            return SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getReferenceNode(),"container",false),"parameters",true);
          }
          return Sequence.fromIterable(Collections.<SNode>emptyList());
        }
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_e4b5n5_a0a1a0a0a1a0b0a1a0;
        }
      }
;
    }
  }
);
  return references;
}
