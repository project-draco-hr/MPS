{
  TypeReference typRef=anno.type;
  if (typRef == null) {
    return null;
  }
  String name;
  if (typRef instanceof SingleTypeReference) {
    name=new String(((SingleTypeReference)typRef).token);
  }
 else   if (typRef instanceof QualifiedTypeReference) {
    StringBuffer sb=new StringBuffer();
    name=((QualifiedTypeReference)typRef).print(0,sb).toString();
  }
 else {
    LOG.error("Unexpected type in annotation: " + typRef.getClass().getName());
    name=null;
  }
  SNode node=buildAnnotationInstance(name);
  for (  MemberValuePair pair : anno.memberValuePairs()) {
    SNode val=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.AnnotationInstanceValue",null);
    SReference ref=new DynamicReference("key",val,null,new String(pair.name));
    val.setReference(ref.getRole(),ref);
    SLinkOperations.setTarget(val,"value",convertExpression(pair.value),true);
    ListSequence.fromList(SLinkOperations.getTargets(node,"value",true)).addElement(val);
  }
  return node;
}
