{
  _FunctionTypes._return_P1_E0<? extends Iterable<SModelReference>,? super SModel> importedModelsExtractor=new _FunctionTypes._return_P1_E0<ISequence<SModelReference>,SModel>(){
    public ISequence<SModelReference> invoke(    SModel model){
      return ListSequence.fromList(((List<jetbrains.mps.smodel.SModel.ImportElement>)((SModelInternal)model).importedModels())).select(new ISelector<jetbrains.mps.smodel.SModel.ImportElement,SModelReference>(){
        public SModelReference select(        jetbrains.mps.smodel.SModel.ImportElement ie){
          return ie.getModelReference();
        }
      }
);
    }
  }
;
  _FunctionTypes._return_P2_E0<? extends ImportedModelChange,? super SModelReference,? super Boolean> changeCreator=new _FunctionTypes._return_P2_E0<ImportedModelChange,SModelReference,Boolean>(){
    public ImportedModelChange invoke(    SModelReference mr,    Boolean deleted){
      return new ImportedModelChange(myChangeSet,mr,deleted);
    }
  }
;
  buildAddedAndDeletedDependencies(importedModelsExtractor,changeCreator);
}
