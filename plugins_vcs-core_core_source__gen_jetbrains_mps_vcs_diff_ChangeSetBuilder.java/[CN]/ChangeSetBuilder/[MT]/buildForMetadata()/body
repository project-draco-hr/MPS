{
  buildForImports();
  buildForUsedLanguages();
  buildForDependencies(ModuleDependencyChange.DependencyType.USED_DEVKIT,new _FunctionTypes._return_P1_E0<List<SModuleReference>,SModelBase>(){
    public List<SModuleReference> invoke(    SModelBase model){
      return model.importedDevkits();
    }
  }
);
  buildForLanguagesEngagedOnGeneration();
  if (myNewModel instanceof GeneratableSModel && myOldModel instanceof GeneratableSModel) {
    if (((GeneratableSModel)myNewModel).isDoNotGenerate() != ((GeneratableSModel)myOldModel).isDoNotGenerate()) {
      ListSequence.fromList(myNewChanges).addElement(new DoNotGenerateOptionChange(myChangeSet));
    }
  }
}
