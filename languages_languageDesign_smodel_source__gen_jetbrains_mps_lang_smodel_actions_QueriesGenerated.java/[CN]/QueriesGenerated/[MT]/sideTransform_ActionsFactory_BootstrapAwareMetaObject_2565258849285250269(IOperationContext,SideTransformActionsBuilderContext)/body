{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
  ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(MetaAdapterFactory.getInterfaceConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x2399a155048244c5L,"jetbrains.mps.lang.smodel.structure.BootstrapAwareMetaObject").getDeclarationNode(),_context.getSourceNode()){
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      SPropertyOperations.set(_context.getSourceNode(),MetaAdapterFactory.getProperty(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x2399a155048244c5L,0x2399a1550482726bL,"bootstrap"),"" + (true));
      return null;
    }
    public String getMatchingText(    String pattern){
      return "bootstrap";
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
    @Override protected boolean isEnabled(){
      SNode sourceNode=getSourceNode();
      SNode parent=SNodeOperations.getParent(sourceNode);
      SNode containingLink=SNodeOperations.getContainingLinkDeclaration(sourceNode);
      return parent == null || containingLink == null || (ModelConstraints.canBeParent(parent,MetaAdapterFactory.getInterfaceConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x2399a155048244c5L,"jetbrains.mps.lang.smodel.structure.BootstrapAwareMetaObject").getDeclarationNode(),containingLink,null,null) && ModelConstraints.canBeAncestor(parent,null,MetaAdapterFactory.getInterfaceConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x2399a155048244c5L,"jetbrains.mps.lang.smodel.structure.BootstrapAwareMetaObject").getDeclarationNode(),null));
    }
  }
);
  return result;
}
