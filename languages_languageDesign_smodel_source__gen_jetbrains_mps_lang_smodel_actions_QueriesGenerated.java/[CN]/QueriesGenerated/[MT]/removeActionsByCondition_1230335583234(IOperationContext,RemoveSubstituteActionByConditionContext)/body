{
  final ApplicableTypesInfo appTypesInfo;
{
    Computable calc=new Computable(){
      public Object compute(){
        ApplicableTypesInfo result=new ApplicableTypesInfo();
        SNode leftExpression=SLinkOperations.getTarget(SNodeOperations.cast(_context.getParentNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,"jetbrains.mps.baseLanguage.structure.DotExpression")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,0x116b46a4416L,"operand"));
        SNode leftType=TypeChecker.getInstance().getTypeOf(leftExpression);
        SNode operation=SLinkOperations.getTarget(SNodeOperations.as(leftExpression,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,"jetbrains.mps.baseLanguage.structure.DotExpression")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,0x116b46b36c4L,"operation"));
        SNode linkAccess=SNodeOperations.as(operation,MetaAdapterFactory.getInterfaceConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x37d97a5712d396cbL,"jetbrains.mps.lang.smodel.structure.ILinkAccess"));
        result.myLinkAccess=linkAccess;
        if ((linkAccess != null) && BehaviorReflection.invokeVirtual(Boolean.TYPE,linkAccess,"virtual_isSingularCardinality_4024382256428848847",new Object[]{})) {
          if (TypeChecker.getInstance().getRuntimeSupport().coerce_(leftType,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.lang.smodel.structure.SConceptType"),true) != null) {
            result.myLinkToConcept=true;
          }
        }
        if (TypeChecker.getInstance().getRuntimeSupport().coerce_(leftType,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.lang.smodel.structure.SConceptType"),false) != null) {
          result.myToConcept=true;
        }
        if (TypeChecker.getInstance().getRuntimeSupport().coerce_(leftType,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.lang.smodel.structure.SConceptTypeSConcept"),false) != null) {
          result.myToSConcept=true;
        }
        if (TypeChecker.getInstance().getRuntimeSupport().coerce_(leftType,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.lang.smodel.structure.SNodeType"),false) != null) {
          result.myToNode=true;
        }
        if (TypeChecker.getInstance().getRuntimeSupport().coerce_(leftType,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.lang.smodel.structure.SModelType"),false) != null) {
          result.myToModel=true;
        }
        return result;
      }
    }
;
    appTypesInfo=(ApplicableTypesInfo)calc.compute();
  }
  Iterator<SubstituteAction> actions=_context.getSubstituteActions();
  while (actions.hasNext()) {
    SubstituteAction current=actions.next();
    SNode outputConcept=(SNode)current.getOutputConcept();
    SNode applicableConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeOperation");
    Condition<SNode> cond=new Condition<SNode>(){
      public boolean met(      SNode concept){
        SNode linkAccess=appTypesInfo.myLinkAccess;
        if (linkAccess != null && !(BehaviorReflection.invokeVirtual(Boolean.TYPE,linkAccess,"virtual_isAggregation_4024382256428848854",new Object[]{}))) {
          if (SConceptOperations.isExactly(SNodeOperations.asSConcept(concept),MetaAdapterFactory.getConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x109233dbca1L,"jetbrains.mps.lang.smodel.structure.Link_SetNewChildOperation"))) {
            return true;
          }
          if (SConceptOperations.isExactly(SNodeOperations.asSConcept(concept),MetaAdapterFactory.getConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x11dfede6ec0L,"jetbrains.mps.lang.smodel.structure.Node_DetachOperation"))) {
            return true;
          }
        }
        return false;
      }
    }
;
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(applicableConcept),SNodeOperations.asSConcept(outputConcept)) && cond.met(outputConcept)) {
      actions.remove();
    }
  }
}
