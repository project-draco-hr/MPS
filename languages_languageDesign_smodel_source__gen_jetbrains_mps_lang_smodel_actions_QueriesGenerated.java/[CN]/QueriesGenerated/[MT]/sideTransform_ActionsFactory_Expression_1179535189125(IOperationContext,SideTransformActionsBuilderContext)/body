{
  List<INodeSubstituteAction> result=ListSequence.fromList(new ArrayList<INodeSubstituteAction>());
{
    SNode concept=SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeTypeCastExpression");
    ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(concept,_context.getSourceNode()){
      public SNode doSubstitute(      @Nullable final EditorContext editorContext,      String pattern){
        SNode newNode=SNodeFactoryOperations.replaceWithNewChild(_context.getSourceNode(),"jetbrains.mps.lang.smodel.structure.SNodeTypeCastExpression");
        SLinkOperations.setTarget(newNode,"leftExpression",_context.getSourceNode(),true);
        return newNode;
      }
      public String getMatchingText(      String pattern){
        return ":";
      }
      public String getVisibleMatchingText(      String pattern){
        return this.getMatchingText(pattern);
      }
      public String getDescriptionText(      String pattern){
        return "node type cast";
      }
    }
);
  }
{
    SNode concept=SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeTypeCastExpression");
    ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(concept,_context.getSourceNode()){
      public SNode doSubstitute(      @Nullable final EditorContext editorContext,      String pattern){
        SNode newNode=SNodeFactoryOperations.replaceWithNewChild(_context.getSourceNode(),"jetbrains.mps.lang.smodel.structure.SNodeTypeCastExpression");
        SLinkOperations.setTarget(newNode,"leftExpression",_context.getSourceNode(),true);
        SPropertyOperations.set(newNode,"asCast","" + (true));
        return newNode;
      }
      public String getMatchingText(      String pattern){
        return "as";
      }
      public String getVisibleMatchingText(      String pattern){
        return this.getMatchingText(pattern);
      }
      public String getDescriptionText(      String pattern){
        return "node as cast";
      }
    }
);
  }
  return result;
}
