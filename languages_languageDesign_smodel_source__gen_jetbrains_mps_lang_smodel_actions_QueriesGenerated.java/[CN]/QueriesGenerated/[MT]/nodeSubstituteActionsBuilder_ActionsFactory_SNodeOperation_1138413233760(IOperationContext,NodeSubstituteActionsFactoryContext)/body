{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
  final ApplicableTypesInfo appTypesInfo=new Computable<ApplicableTypesInfo>(){
    public ApplicableTypesInfo compute(){
      ApplicableTypesInfo result=new ApplicableTypesInfo();
      SNode leftExpression=SLinkOperations.getTarget(SNodeOperations.cast(_context.getParentNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,"jetbrains.mps.baseLanguage.structure.DotExpression")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,0x116b46a4416L,"operand"));
      SNode leftType=TypeChecker.getInstance().getTypeOf(leftExpression);
      SNode operation=SLinkOperations.getTarget(SNodeOperations.as(leftExpression,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,"jetbrains.mps.baseLanguage.structure.DotExpression")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,0x116b46b36c4L,"operation"));
      SNode linkAccess=SNodeOperations.as(operation,MetaAdapterFactory.getInterfaceConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x37d97a5712d396cbL,"jetbrains.mps.lang.smodel.structure.ILinkAccess"));
      result.myLinkAccess=linkAccess;
      if ((linkAccess != null) && ILinkAccess_BehaviorDescriptor.isSingularCardinality_id3vpu_siOTrf.invoke(linkAccess)) {
        if (TypeChecker.getInstance().getRuntimeSupport().coerce_(leftType,HUtil.createMatchingPatternByConcept(MetaAdapterFactory.getConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x110f9b63680L,"jetbrains.mps.lang.smodel.structure.ConceptNodeType")),true) != null) {
          result.myLinkToConcept=true;
        }
      }
      if (TypeChecker.getInstance().getRuntimeSupport().coerce_(leftType,HUtil.createMatchingPatternByConcept(MetaAdapterFactory.getConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x110f9b63680L,"jetbrains.mps.lang.smodel.structure.ConceptNodeType")),false) != null) {
        result.myToConcept=true;
      }
      if (TypeChecker.getInstance().getRuntimeSupport().coerce_(leftType,HUtil.createMatchingPatternByConcept(MetaAdapterFactory.getConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x5cab42cd97571ceeL,"jetbrains.mps.lang.smodel.structure.SConceptType")),false) != null) {
        result.myToSConcept=true;
      }
      if (TypeChecker.getInstance().getRuntimeSupport().coerce_(leftType,HUtil.createMatchingPatternByConcept(MetaAdapterFactory.getConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x108f968b3caL,"jetbrains.mps.lang.smodel.structure.SNodeType")),false) != null) {
        result.myToNode=true;
      }
      if (TypeChecker.getInstance().getRuntimeSupport().coerce_(leftType,HUtil.createMatchingPatternByConcept(MetaAdapterFactory.getConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x10a2d94c0cdL,"jetbrains.mps.lang.smodel.structure.SModelType")),false) != null) {
        result.myToModel=true;
      }
      return result;
    }
  }
.compute();
  return result;
}
