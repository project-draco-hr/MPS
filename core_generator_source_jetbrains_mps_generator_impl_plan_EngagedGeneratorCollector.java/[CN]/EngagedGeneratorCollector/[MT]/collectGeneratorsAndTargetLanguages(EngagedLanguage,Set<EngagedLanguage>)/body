{
  Collection<? extends GeneratorRuntime> generators=lang.getLanguage().getGenerators();
  if (generators == null) {
    return Collections.emptyList();
  }
  ArrayList<EngagedGenerator> langGenerators=new ArrayList<EngagedGenerator>(2 + generators.size());
  for (  GeneratorRuntime gr : generators) {
    if (false == gr instanceof TemplateModule) {
      continue;
    }
    final TemplateModule generator=(TemplateModule)gr;
    EngagedGenerator eg=new EngagedGenerator(generator,lang,"OWNED");
    langGenerators.add(eg);
    targetLanguages.addAll(resolveLanguages(generator.getTargetLanguages(),eg,"GENERATES INTO"));
    for (    TemplateModule tm : generator.getExtendedGenerators()) {
      langGenerators.add(new EngagedGenerator(tm,eg,"EXTENDED GENERATOR"));
    }
    for (    TemplateModule tm : generator.getEmployedGenerators()) {
      langGenerators.add(new EngagedGenerator(tm,eg,"EMPLOYED GENERATOR"));
    }
  }
  return langGenerators;
}
