{
  Collection<? extends GeneratorRuntime> generators=lang.getLanguage().getGenerators();
  if (generators == null) {
    return Collections.emptyList();
  }
  ArrayList<TemplateModule> langGenerators=new ArrayList<TemplateModule>(generators.size());
  for (  GeneratorRuntime gr : generators) {
    if (false == gr instanceof TemplateModule) {
      continue;
    }
    final TemplateModule generator=(TemplateModule)gr;
    langGenerators.add(generator);
    EngagedGenerator eg=new EngagedGenerator(generator,lang,"OWNED");
    targetLanguages.addAll(resolveLanguages(generator.getUsedLanguages(),eg,"GENERATES INTO"));
    final Collection<String> refGenLangs=getLanguagesFromReferencedModules(generator);
    moreLanguages.addAll(resolveLanguages(refGenLangs,eg,"EXTENDED GENERATOR"));
  }
  return langGenerators;
}
