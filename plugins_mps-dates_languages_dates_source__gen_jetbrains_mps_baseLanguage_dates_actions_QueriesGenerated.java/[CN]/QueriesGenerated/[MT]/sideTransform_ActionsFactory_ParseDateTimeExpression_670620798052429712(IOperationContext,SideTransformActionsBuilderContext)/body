{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
  ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.dates.structure.ParseDateTimeExpression"),_context.getSourceNode()){
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      SLinkOperations.setTarget(_context.getSourceNode(),"locale",SLinkOperations.getTarget(_quotation_createNode_3ivoac_a0a0a0a0d(),"locale",false),false);
      return SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895903dd(jetbrains.mps.baseLanguage.datesInternal.structure)","1172074383898");
    }
    public String getMatchingText(    String pattern){
      return "(";
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
    public String getDescriptionText(    String pattern){
      return "specify parsing locale";
    }
  }
);
  return result;
}
