{
  myInNode=new NodeMap<Node>(graph);
  myOutNode=new NodeMap<Node>(graph);
  myFakeEdges=new NodeMap<Edge>(graph);
  myEdgesMap=MapSequence.fromMap(new HashMap<Edge,Edge>());
  Graph modifiedGraph=new Graph();
  for (  Node node : ListSequence.fromList(graph.getNodes())) {
    MapSequence.fromMap(myInNode).put(node,modifiedGraph.addNode());
    MapSequence.fromMap(myOutNode).put(node,modifiedGraph.addNode());
    MapSequence.fromMap(myFakeEdges).put(node,MapSequence.fromMap(myInNode).get(node).addEdgeTo(MapSequence.fromMap(myOutNode).get(node)));
  }
  for (  Edge edge : ListSequence.fromList(graph.getEdges())) {
    MapSequence.fromMap(myEdgesMap).put(edge,MapSequence.fromMap(myOutNode).get(edge.getSource()).addEdgeTo(MapSequence.fromMap(myInNode).get(edge.getTarget())));
  }
  return modifiedGraph;
}
