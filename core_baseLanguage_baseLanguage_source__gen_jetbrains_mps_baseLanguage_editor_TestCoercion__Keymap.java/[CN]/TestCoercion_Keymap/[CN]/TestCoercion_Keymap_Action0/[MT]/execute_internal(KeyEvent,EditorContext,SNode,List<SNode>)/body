{
  SNode type=TypeChecker.getInstance().getTypeOf(node);
  String text="type: " + type;
{
    text=text + "\n\ncoerce to SequenceType";
    SNode coercedType=TypeChecker.getInstance().getRuntimeSupport().coerce(type,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.ext.collections.lang.structure.SequenceType"),true);
    text=text + "\nweak  : " + coercedType;
    coercedType=TypeChecker.getInstance().getRuntimeSupport().coerce(type,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.ext.collections.lang.structure.SequenceType"),false);
    text=text + "\nstrong: " + coercedType;
  }
{
    text=text + "\n\ncoerce to ListType";
    SNode coercedType=TypeChecker.getInstance().getRuntimeSupport().coerce(type,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.ext.collections.lang.structure.ListType"),true);
    text=text + "\nweak  : " + coercedType;
    coercedType=TypeChecker.getInstance().getRuntimeSupport().coerce(type,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.ext.collections.lang.structure.ListType"),false);
    text=text + "\nstrong: " + coercedType;
  }
{
    text=text + "\n\ncoerce to ClassifierType";
    SNode coercedType=TypeChecker.getInstance().getRuntimeSupport().coerce(type,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.structure.ClassifierType"),true);
    text=text + "\nweak  : " + coercedType;
    coercedType=TypeChecker.getInstance().getRuntimeSupport().coerce(type,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.structure.ClassifierType"),false);
    text=text + "\nstrong: " + coercedType;
  }
{
    text=text + "\n\ncoerce to Iterable<..>";
    SNode coercedType=TypeChecker.getInstance().getRuntimeSupport().coerce(type,new Pattern_0(),true);
    text=text + "\nweak  : " + coercedType;
    coercedType=TypeChecker.getInstance().getRuntimeSupport().coerce(type,new Pattern_1(),false);
    text=text + "\nstrong: " + coercedType;
  }
{
    text=text + "\n\ncoerce to Type";
    SNode coercedType=TypeChecker.getInstance().getRuntimeSupport().coerce(type,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.structure.Type"),true);
    text=text + "\nweak  : " + coercedType;
    coercedType=TypeChecker.getInstance().getRuntimeSupport().coerce(type,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.structure.Type"),false);
    text=text + "\nstrong: " + coercedType;
  }
  JOptionPane.showMessageDialog(null,text,node.getDebugText(),JOptionPane.INFORMATION_MESSAGE);
}
