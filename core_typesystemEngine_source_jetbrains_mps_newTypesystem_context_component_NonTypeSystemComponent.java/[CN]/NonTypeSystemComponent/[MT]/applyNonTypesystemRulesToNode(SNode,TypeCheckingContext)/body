{
  getTypechecking().runApplyRulesTo(node,new Runnable(){
    @Override public void run(){
      List<Pair<NonTypesystemRule_Runtime,IsApplicableStatus>> nonTypesystemRules=TypeChecker.getInstance().getRulesManager().getNonTypesystemRules(node);
      MyEventsReadListener nodesReadListener=new MyEventsReadListener();
      if (nonTypesystemRules == null)       return;
      boolean incrementalMode=isIncrementalMode();
      for (      Pair<NonTypesystemRule_Runtime,IsApplicableStatus> rule : nonTypesystemRules) {
        Pair<SNode,NonTypesystemRule_Runtime> nodeAndRule=new Pair<SNode,NonTypesystemRule_Runtime>(node,rule.o1);
        MyTypesReadListener typesReadListener=new MyTypesReadListener();
        if (incrementalMode) {
          if (myCheckedNodes.contains(nodeAndRule))           continue;
          nodesReadListener.clear();
          NodeReadEventsCaster.setNodesReadListener(nodesReadListener);
          TypeChecker.getInstance().addTypesReadListener(typesReadListener);
          myRuleAndNodeBeingChecked=new Pair<SNode,NonTypesystemRule_Runtime>(node,rule.o1);
        }
        try {
          getTypechecking().applyRuleToNode(node,rule.o1,rule.o2,typeCheckingContext);
        }
  finally {
          myRuleAndNodeBeingChecked=null;
          if (incrementalMode) {
            TypeChecker.getInstance().removeTypesReadListener(typesReadListener);
            NodeReadEventsCaster.removeNodesReadListener();
          }
        }
        if (incrementalMode) {
          nodesReadListener.setAccessReport(true);
          addDependentNodes(node,rule.o1,new THashSet<SNode>(nodesReadListener.getAccessedNodes()));
          addDependentProperties(node,rule.o1,new THashSet<Pair<SNode,String>>(nodesReadListener.getAccessedProperties()));
          nodesReadListener.setAccessReport(false);
          typesReadListener.setAccessReport(true);
          addDependentTypeTerms(node,rule.o1,typesReadListener.getAccessedNodes());
          typesReadListener.setAccessReport(false);
          nodesReadListener.clear();
        }
        myCheckedNodes.add(nodeAndRule);
      }
    }
  }
);
}
