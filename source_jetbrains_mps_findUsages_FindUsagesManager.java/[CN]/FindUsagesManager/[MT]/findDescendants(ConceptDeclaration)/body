{
  HashMap<SModelDescriptor,HashSet<ConceptDeclaration>> knownDescendantsInModelDescriptors=myConceptsToKnownDescendantsInModelDescriptors.get(node);
  if (knownDescendantsInModelDescriptors == null) {
    knownDescendantsInModelDescriptors=new HashMap<SModelDescriptor,HashSet<ConceptDeclaration>>();
    myConceptsToKnownDescendantsInModelDescriptors.put(node,knownDescendantsInModelDescriptors);
  }
  IScope scope=globalScope();
  Set<ConceptDeclaration> result=new HashSet<ConceptDeclaration>();
  List<SModelDescriptor> models=scope.getModelDescriptors();
  for (  SModelDescriptor model : models) {
    if (model.getStereotype().equals(SModelStereotype.JAVA_STUB))     continue;
    HashSet<ConceptDeclaration> descendantsKnownInModel=knownDescendantsInModelDescriptors.get(model);
    if (descendantsKnownInModel == null) {
      descendantsKnownInModel=new HashSet<ConceptDeclaration>();
      knownDescendantsInModelDescriptors.put(model,descendantsKnownInModel);
    }
    result.addAll(model.findDescendants(node,descendantsKnownInModel));
  }
  return result;
}
