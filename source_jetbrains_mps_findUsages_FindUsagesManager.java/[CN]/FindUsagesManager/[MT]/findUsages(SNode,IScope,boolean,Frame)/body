{
  final Set<SReference> result=new HashSet<SReference>();
  List<SModelDescriptor> models=scope.getModelDescriptors();
  ComplexMonitorableTask mainTask=new ComplexMonitorableTask("findUsages","Finding usages...","done.");
  for (  final SModelDescriptor model : new ArrayList<SModelDescriptor>(models)) {
    mainTask.addSubTask(new AtomicMonitorableTask("findUsagesIn" + model.getModelUID().toString(),"findUsagesIn"){
      public void run(){
        result.addAll(model.findUsages(node));
      }
    }
);
  }
  if (requiresMonitoring) {
    AdaptiveProgressMonitor monitor=new AdaptiveProgressMonitor("Find Usages...",frame,mainTask);
    monitor.setCloseOnExit(true);
    monitor.runMainTask();
  }
 else {
    mainTask.runTask();
  }
  return result;
}
