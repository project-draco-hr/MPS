{
  super(modelReference,source);
  getEventDispatch().addChangeListener(new SModelChangeListener(){
    @Override public void nodeAdded(    SModel model,    org.jetbrains.mps.openapi.model.SNode parent,    String role,    org.jetbrains.mps.openapi.model.SNode child){
      setChanged(true);
    }
    @Override public void nodeRemoved(    SModel model,    org.jetbrains.mps.openapi.model.SNode parent,    String role,    org.jetbrains.mps.openapi.model.SNode child){
      setChanged(true);
    }
    @Override public void propertyChanged(    org.jetbrains.mps.openapi.model.SNode node,    String propertyName,    String oldValue,    String newValue){
      setChanged(true);
    }
    @Override public void referenceChanged(    org.jetbrains.mps.openapi.model.SNode node,    String role,    SReference oldRef,    SReference newRef){
      setChanged(true);
    }
  }
);
}
