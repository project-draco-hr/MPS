{
  final SNode referentConcept=SModelUtil.getLinkDeclarationTarget(linkDeclaration);
  if (referentConcept == null) {
    return Collections.emptyList();
  }
  String referentConceptFqName=NameUtil.nodeFQName(referentConcept);
  Iterable<SNode> nodes=searchScope.getAvailableElements(null);
  List<INodeSubstituteAction> actions=new ArrayList<INodeSubstituteAction>();
  for (  SNode node : nodes) {
    if (node == null || !node.getConcept().isSubConceptOf(SConceptRepository.getInstance().getConcept(referentConceptFqName)))     continue;
    actions.add(new DefaultReferentNodeSubstituteAction(node,referenceNode,currentReferent,linkDeclaration,presentation));
  }
  return actions;
}
