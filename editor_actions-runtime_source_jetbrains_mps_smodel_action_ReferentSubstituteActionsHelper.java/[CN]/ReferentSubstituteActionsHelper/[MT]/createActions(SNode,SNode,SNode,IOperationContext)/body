{
  IScope scope=context.getScope();
  SNode referenceNodeConcept=referenceNode.getConceptDeclarationNode();
  Language primaryLanguage=SModelUtil.getDeclaringLanguage(referenceNodeConcept);
  if (primaryLanguage == null) {
    LOG.error("Couldn't build actions : couldn't get declaring language for concept " + org.jetbrains.mps.openapi.model.SNodeUtil.getDebugText(referenceNodeConcept));
    return new LinkedList<INodeSubstituteAction>();
  }
  ReferenceDescriptor refDescriptor=ModelConstraintsUtil.getReferenceDescriptor(referenceNode,SModelUtil.getLinkDeclarationRole(linkDeclaration),0);
  Scope searchScope=refDescriptor.getScope();
  if (searchScope instanceof ErrorScope) {
    LOG.error("Couldn't create referent search scope : " + ((ErrorScope)searchScope).getMessage());
    return new LinkedList<INodeSubstituteAction>();
  }
  IReferencePresentation presentation=refDescriptor.getReferencePresentation();
  return createActions(referenceNode,currentReferent,linkDeclaration,searchScope,presentation,scope);
}
