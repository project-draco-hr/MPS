{
  Set<Integer> existingIds=SetSequence.fromSetWithValues(new HashSet<Integer>(),ListSequence.fromList(SModelOperations.roots(m,MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"))).select(new ISelector<SNode,Integer>(){
    public Integer select(    SNode it){
      return SPropertyOperations.getInteger(it,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0x16096a174f259419L,"conceptId"));
    }
  }
));
  int generated=0;
  if (c instanceof jetbrains.mps.smodel.SNode) {
    SNodeId id=((jetbrains.mps.smodel.SNode)c).getNodeId();
    if (id instanceof jetbrains.mps.smodel.SNodeId.Regular) {
      generated=((int)((jetbrains.mps.smodel.SNodeId.Regular)id).getId());
    }
  }
  while (true) {
    if (generated != 0 && !(SetSequence.fromSet(existingIds).contains(generated))) {
      return generated;
    }
    generated=((int)(Math.random() * Integer.MAX_VALUE));
  }
}
