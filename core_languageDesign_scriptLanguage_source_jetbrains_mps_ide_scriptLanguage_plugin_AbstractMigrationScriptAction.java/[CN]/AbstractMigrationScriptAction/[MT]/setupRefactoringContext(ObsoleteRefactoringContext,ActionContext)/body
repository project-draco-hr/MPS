{
  List<SModelDescriptor> selectedModels=new ArrayList<SModelDescriptor>();
  List selection=context.get(List.class);
  if (selection != null && !selection.isEmpty()) {
    for (    Object o : selection) {
      if (o instanceof SModelDescriptor) {
        selectedModels.add((SModelDescriptor)o);
      }
    }
  }
 else   if (context.get(Language.class) != null) {
    selectedModels.addAll(context.get(Language.class).getOwnModelDescriptors());
  }
 else   if (context.get(Generator.class) != null) {
    selectedModels.addAll(context.get(Generator.class).getOwnModelDescriptors());
  }
 else   if (context.get(Solution.class) != null) {
    selectedModels.addAll(context.get(Solution.class).getOwnModelDescriptors());
  }
  if (!selectedModels.isEmpty()) {
    StringBuilder sb=new StringBuilder();
    String sep="";
    for (    SModelDescriptor selectedModel : selectedModels) {
      SModelUID uid=selectedModel.getModelUID();
      sb.append(sep).append(uid.toString());
      sep="\n";
    }
    refactoringContext.put(SMODEL_UID,sb.toString());
  }
}
