{
  final AspectMethodsFinder.AspectMethodQueryData data=(AspectMethodsFinder.AspectMethodQueryData)query.getObjectHolder().getObject();
  final List<SModel> applicableModelDescriptors=new ArrayList<SModel>();
  for (  SModel model : query.getScope().getModels()) {
    String modelName=model.getModelName();
    if (data.myModelName.equals(SModelStereotype.withoutStereotype(modelName)) && !(SModelStereotype.isStubModelStereotype(SModelStereotype.getStereotype(modelName)))) {
      applicableModelDescriptors.add(model);
    }
  }
  SearchResults<SNode> res=new SearchResults<SNode>();
  res.getSearchedNodes().add(data.myModelName + '#' + data.myMethodName);
  for (  SModel model : applicableModelDescriptors) {
    for (    SNode node : SNodeUtil.getDescendants(model)) {
      for (      SProperty prop : node.getProperties()) {
        String value=node.getProperty(prop);
        if (data.myMethodName.endsWith(value)) {
          res.getSearchResults().add(new SearchResult<SNode>(node,"Aspect methods"));
          break;
        }
      }
    }
  }
  return res;
}
