{
  SNode refNode=((EditorCell)MapSequence.fromMap(_params).get("editorCell")).getSNodeWRTReference();
  if (SNodeOperations.isInstanceOf(refNode,"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration")) {
    return SNodeOperations.cast(refNode,"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration");
  }
  if (SNodeOperations.isInstanceOf(refNode,"jetbrains.mps.lang.behavior.structure.ConceptConstructorDeclaration")) {
    SNode concept=SNodeOperations.getAncestor(refNode,"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration",false,false);
    if (concept != null) {
      return concept;
    }
  }
  SNode outerConcept=SNodeOperations.getAncestor(((SNode)MapSequence.fromMap(_params).get("node")),"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration",true,false);
  if (outerConcept != null) {
    return outerConcept;
  }
  if (!(((Editor)MapSequence.fromMap(_params).get("editor")) instanceof TabbedEditor)) {
    return null;
  }
  TabbedEditor tabbedEditor=(TabbedEditor)((Editor)MapSequence.fromMap(_params).get("editor"));
  SNode editedNode=((SNodePointer)tabbedEditor.getCurrentlyEditedNode()).getNode();
  if (!(SNodeOperations.isInstanceOf(editedNode,"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"))) {
    return null;
  }
  return SNodeOperations.cast(editedNode,"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration");
}
