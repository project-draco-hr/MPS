{
switch (Arrays.binarySearch(stringSwitchCases_2qnle6_a0a0a,fqName)) {
case 40:
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.Regexp"));
case 55:
  return new DataHolderConstraintsDescriptor(new StringLiteralRegexp_Constraints());
case 29:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.OrRegexp"));
case 31:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.PlusRegexp"));
case 54:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.StarRegexp"));
case 41:
return new DataHolderConstraintsDescriptor(new RegexpDeclaration_Constraints());
case 51:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.SeqRegexp"));
case 1:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.BinaryRegexp"));
case 59:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.UnaryRegexp"));
case 30:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.ParensRegexp"));
case 8:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.InlineRegexpExpression"));
case 21:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.MatchRegexpStatement"));
case 39:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.QuestionRegexp"));
case 57:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.SymbolClassRegexp"));
case 34:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.PositiveSymbolClassRegexp"));
case 28:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.NegativeSymbolClassRegexp"));
case 35:
return new DataHolderConstraintsDescriptor(new PredefinedSymbolClassDeclaration_Constraints());
case 38:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.PredefinedSymbolClasses"));
case 36:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.PredefinedSymbolClassRegexp"));
case 3:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.DotRegexp"));
case 56:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.SymbolClassPart"));
case 2:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.CharacterSymbolClassPart"));
case 10:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.IntervalSymbolClassPart"));
case 37:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.PredefinedSymbolClassSymbolClassPart"));
case 18:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.MatchParensRegexp"));
case 22:
return new DataHolderConstraintsDescriptor(new MatchVariableReference_Constraints());
case 44:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.RegexpUsingConstruction"));
case 48:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.ReplaceWithRegexpExpression"));
case 46:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.ReplaceBlock"));
case 13:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.LazyStarRegexp"));
case 11:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.LazyPlusRegexp"));
case 12:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.LazyQuestionRegexp"));
case 45:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.Regexps"));
case 42:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.RegexpDeclarationReferenceRegexp"));
case 25:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.NTimesRegexp"));
case 0:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.AtLeastNTimesRegexp"));
case 7:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.FromNToMTimesRegexp"));
case 32:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.PositiveLookAheadRegexp"));
case 26:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.NegativeLookAheadRegexp"));
case 17:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.LookRegexp"));
case 33:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.PositiveLookBehindRegexp"));
case 27:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.NegativeLookBehindRegexp"));
case 23:
return new DataHolderConstraintsDescriptor(new MatchVariableReferenceRegexp_Constraints());
case 43:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.RegexpExpression"));
case 6:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.ForEachMatchStatement"));
case 15:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.LineStartRegexp"));
case 14:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.LineEndRegexp"));
case 52:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.SplitExpression"));
case 5:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.FindMatchStatement"));
case 19:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.MatchRegexpExpression"));
case 60:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.UnicodeCharacterRegexp"));
case 9:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.IntersectionSymbolClassPart"));
case 58:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.SymbolClassRegexpAndPart"));
case 53:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.SplitOperation"));
case 20:
return new DataHolderConstraintsDescriptor(new MatchRegexpOperation_Constraints());
case 49:
return new DataHolderConstraintsDescriptor(new ReplaceWithRegexpOperation_Constraints());
case 4:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.FindMatchExpression"));
case 47:
return new DataHolderConstraintsDescriptor(new ReplaceRegexpOperation_Constraints());
case 16:
return new DataHolderConstraintsDescriptor(new LiteralReplacement_Constraints());
case 24:
return new DataHolderConstraintsDescriptor(new MatchVariableReferenceReplacement_Constraints());
case 50:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.regexp.structure.Replacement"));
default :
return null;
}
}
