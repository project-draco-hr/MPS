{
  ListSequence.fromList(SLinkOperations.getTargets(enumConstant,"method",true)).visitAll(new IVisitor<SNode>(){
    public void visit(    final SNode method){
      final String erasureSignature=BaseMethodDeclaration_Behavior.call_getErasureSignature_2830572026628006618(method);
      SNode foundDuplicate=ListSequence.fromList(SLinkOperations.getTargets(enumConstant,"method",true)).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode other){
          return other != method && eq_pw1hme_a0a0a0a0a0a0a1a0a0a0a0a1(SPropertyOperations.getString(other,"name"),SPropertyOperations.getString(method,"name")) && erasureSignature.equals(BaseMethodDeclaration_Behavior.call_getErasureSignature_2830572026628006618(other));
        }
      }
);
      if ((foundDuplicate != null)) {
{
          MessageTarget errorTarget=new NodeMessageTarget();
          errorTarget=new PropertyMessageTarget("name");
          IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(method,"method has duplicate erasure with " + BehaviorReflection.invokeVirtual(String.class,SNodeOperations.cast(SNodeOperations.getParent(enumConstant),"jetbrains.mps.baseLanguage.structure.EnumClass"),"virtual_getFqName_1213877404258",new Object[]{}) + "."+ SPropertyOperations.getString(enumConstant,"name")+ "."+ SPropertyOperations.getString(foundDuplicate,"name")+ "("+ BaseMethodDeclaration_Behavior.call_getErasureSignature_2830572026628006618(foundDuplicate)+ ")","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","8960718351576519802",null,errorTarget);
        }
      }
    }
  }
);
}
