{
  monitor.start(getDescription(),1);
  try {
    if (ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,0x101eddadad7L,"extendedInterface"))).isEmpty()) {
      return;
    }
    SNode current=node;
    for (    SNode ancestor : ListSequence.fromList(SLinkOperations.getChildren(current,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,0x101eddadad7L,"extendedInterface")))) {
      SNode ancestorNode=(SNode)SLinkOperations.getTarget(ancestor,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier"));
      ListSequence.fromList(_results).addElement(ancestorNode);
      for (      SNode ancestorAncestor : ListSequence.fromList(FindUtils.executeFinder("jetbrains.mps.baseLanguage.findUsages.InterfaceAncestors_Finder",ancestorNode,scope,monitor.subTask(1)))) {
        ListSequence.fromList(_results).addElement(ancestorAncestor);
      }
    }
  }
  finally {
    monitor.done();
  }
}
