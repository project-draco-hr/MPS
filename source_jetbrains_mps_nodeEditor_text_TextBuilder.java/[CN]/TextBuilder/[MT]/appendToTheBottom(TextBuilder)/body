{
  if (builder == ourEmptyTextBuilder)   return this;
  if (this == ourEmptyTextBuilder)   return builder;
  int indent=builder.myX - this.myX;
  TextBuilder result=new TextBuilder();
  result.myY=this.myY;
  TextBuilder leftmost;
  TextBuilder rightmost;
  if (indent >= 0) {
    leftmost=this;
    rightmost=builder;
  }
 else {
    rightmost=this;
    leftmost=builder;
  }
  result.myX=leftmost.myX;
  int width1=leftmost.myWidth;
  int width2=rightmost.myWidth + indent;
  int width=Math.max(width1,width2);
  result.myWidth=width;
  result.myFirstLine=new StringBuffer(this.myFirstLine);
  for (  StringBuffer sb : this.myLines) {
    result.myLines.add(new StringBuffer(sb));
  }
  result.myLines.add(builder.myFirstLine);
  for (  StringBuffer sb : builder.myLines) {
    result.myLines.add(new StringBuffer(sb));
  }
  StringBuffer wsIndent=makeWhitespaceStringBuffer(indent);
  if (rightmost == this) {
    result.myFirstLine.insert(0,wsIndent);
    for (int i=1; i < this.getHeight() - 1; i++) {
      result.myLines.get(i).insert(0,wsIndent);
    }
  }
 else {
    for (int i=this.getHeight() - 1; i < result.myLines.size(); i++) {
      result.myLines.get(i).insert(0,wsIndent);
    }
  }
  result.normalizeWidth();
  return result;
}
