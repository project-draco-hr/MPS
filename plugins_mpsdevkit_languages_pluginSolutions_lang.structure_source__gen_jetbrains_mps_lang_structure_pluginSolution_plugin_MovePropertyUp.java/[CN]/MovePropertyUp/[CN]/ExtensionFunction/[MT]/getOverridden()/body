{
  List<jetbrains.mps.smodel.structure.ExtensionFunction<Tuples._2<List<SNode>,MPSProject>,Void>> result=ListSequence.fromList(new ArrayList<jetbrains.mps.smodel.structure.ExtensionFunction<Tuples._2<List<SNode>,MPSProject>,Void>>());
  Iterable<Extension<jetbrains.mps.smodel.structure.ExtensionFunction<Tuples._2<List<SNode>,MPSProject>,Void>>> extensions=getAllExtensions();
  ListSequence.fromList(result).addElement(Sequence.fromIterable(extensions).where(new IWhereFilter<Extension<jetbrains.mps.smodel.structure.ExtensionFunction<Tuples._2<List<SNode>,MPSProject>,Void>>>(){
    public boolean accept(    Extension<jetbrains.mps.smodel.structure.ExtensionFunction<Tuples._2<List<SNode>,MPSProject>,Void>> it){
      return it instanceof jetbrains.mps.lang.structure.pluginSolution.plugin.MoveFeatureUp.ExtensionFunction;
    }
  }
).first().get());
  return result;
}
