{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(0xb401a68083254110L,0x8fd384331ff25befL,0x90726ff283cbf8aL,0x90726ff283cbf8cL),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xb401a68083254110L,0x8fd384331ff25befL,0x90726ff283cbf8aL,0x90726ff283cbf8cL),this){
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public boolean hasPresentation(){
          return true;
        }
        @Override public String getPresentation(        final IOperationContext operationContext,        final ReferencePresentationContext _context){
          return SPropertyOperations.getString(_context.getParameterNode(),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")) + " : " + SLinkOperations.getTarget(_context.getParameterNode(),MetaAdapterFactory.getContainmentLink(0xb401a68083254110L,0x8fd384331ff25befL,0x90726ff283822d4L,0x90726ff283822d5L,"type"));
        }
      }
;
    }
  }
);
  return references;
}
