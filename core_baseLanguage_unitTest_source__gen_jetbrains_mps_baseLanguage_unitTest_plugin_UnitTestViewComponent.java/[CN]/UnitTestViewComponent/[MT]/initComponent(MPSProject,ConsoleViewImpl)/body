{
  JPanel rightPanel=new JPanel(new BorderLayout());
  rightPanel.setBorder(null);
  JTabbedPane resultTabs=new JTabbedPane();
  rightPanel.add(resultTabs,BorderLayout.CENTER);
  TestStatisticsModel statisticsModel=new TestStatisticsModel();
  this.testState=new TestRunState(statisticsModel);
  this.treeComponent=new TestTree(this.testState,project);
  resultTabs.addTab("Output",this.getIcon("testOutput.png"),this.createOutputComponent(project,console));
  resultTabs.addTab("Statistics",this.getIcon("testStatistics.png"),this.createStatisticsComponent(statisticsModel));
  this.testController=new TestRunListener(this.testState);
  JComponent leftPanel=this.createTreeComponent();
  this.splitPaneComponent=new Splitter(false);
  this.splitPaneComponent.setProportion(0.2f);
  this.splitPaneComponent.setFirstComponent(leftPanel);
  this.splitPaneComponent.setSecondComponent(rightPanel);
  this.setLayout(new BorderLayout());
  this.add(this.splitPaneComponent,BorderLayout.CENTER);
  JComponent stackTraceActions=this.createActionsToolbar(console);
  stackTraceActions.setMaximumSize(new Dimension(rightPanel.getWidth(),stackTraceActions.getMaximumSize().height));
  rightPanel.add(stackTraceActions,BorderLayout.LINE_START);
  this.actionToolComponent=new TestToolbarPanel(this.treeComponent,this.testNavigator);
  this.progressLineComponent=new ProgressLine(this.testState);
  this.progressLineComponent.setMinimumSize(new Dimension(0,this.progressLineComponent.getMinimumSize().height));
  this.actionToolComponent.add(this.progressLineComponent,BorderLayout.CENTER);
  this.add(this.actionToolComponent,BorderLayout.NORTH);
  this.treeComponent.addTreeSelectionListener(new TestTreeSelectionListener(this.treeComponent,statisticsModel,this.outputComponent));
  this.testState.addView(this.treeComponent);
  this.testState.addView(this.progressLineComponent);
  this.testState.addView(this.outputComponent);
}
