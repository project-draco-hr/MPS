{
  JPanel rightPanel=new JPanel(new BorderLayout());
  rightPanel.setBorder(null);
  JTabbedPane resultTabs=new JTabbedPane();
  this.myTreeComponent=new TestTree(this.myProject,this.myTestState,context,this);
  resultTabs.addTab("Output",this.getIcon("testOutput.png"),this.createOutputComponent(this.myProject,console));
  StatisticsTableModel statisticsModel=new StatisticsTableModel(this.myTestState);
  resultTabs.addTab("Statistics",this.getIcon("testStatistics.png"),this.createStatisticsComponent(statisticsModel));
  JComponent leftPanel=this.createTreeComponent();
  Splitter splitter=new Splitter(false);
  splitter.setProportion(0.2f);
  splitter.setFirstComponent(leftPanel);
  splitter.setSecondComponent(rightPanel);
  this.setLayout(new BorderLayout());
  JComponent stackTraceActions=this.createActionsToolbar(console);
  stackTraceActions.setMaximumSize(new Dimension(rightPanel.getWidth(),stackTraceActions.getMaximumSize().height));
  this.myActionToolComponent=new TestToolbarPanel(this.myProject,this.myTreeComponent,this.myTestNavigator);
  this.myProgressLineComponent=new ProgressLine(this.myTestState);
  this.myProgressLineComponent.setMinimumSize(new Dimension(0,this.myProgressLineComponent.getMinimumSize().height));
  this.myTreeComponent.addTreeSelectionListener(new TestTreeSelectionListener(this.myTreeComponent,statisticsModel,this.myOutputComponent));
  this.myTreeComponent.addMouseListener(new TestTreeRootMouseListener(this.myTreeComponent,statisticsModel,this.myOutputComponent));
  leftPanel.add(this.myActionToolComponent,BorderLayout.NORTH);
  rightPanel.add(stackTraceActions,BorderLayout.LINE_START);
  rightPanel.add(this.myProgressLineComponent,BorderLayout.NORTH);
  rightPanel.add(resultTabs,BorderLayout.CENTER);
  this.add(splitter,BorderLayout.CENTER);
  this.myTestState.addView(this.myTreeComponent);
  this.myTestState.addView(this.myProgressLineComponent);
  this.myTestState.addView(this.myOutputComponent);
}
