{
  StatisticsTableModel statisticsModel=new StatisticsTableModel(this.myTestState);
  this.myTreeComponent=new TestTree(this.myProject,this.myTestState,context,this);
  this.myTreeComponent.addTreeSelectionListener(new TestTreeSelectionListener(this.myTreeComponent,statisticsModel,this.myOutputComponent));
  this.myTreeComponent.addMouseListener(new TestTreeRootMouseListener(this.myTreeComponent,statisticsModel,this.myOutputComponent));
  this.myActionToolComponent=new TestToolbarPanel(this.myProject,this.myTreeComponent,this.myTestNavigator);
  JComponent leftPanel=this.createTreeComponent();
  leftPanel.add(this.myActionToolComponent,BorderLayout.NORTH);
  JPanel rightPanel=new JPanel(new GridBagLayout());
  Splitter resultTabs=new Splitter(false);
  resultTabs.setFirstComponent(this.createOutputComponent(this.myProject,console));
  JComponent statistics=this.createStatisticsComponent(statisticsModel);
  resultTabs.setSecondComponent(statistics);
  JComponent stackTraceActions=this.createActionsToolbar(console);
  stackTraceActions.setMaximumSize(new Dimension(rightPanel.getWidth(),stackTraceActions.getMaximumSize().height));
  this.myProgressLineComponent=new ProgressLine(this.myTestState);
  this.myProgressLineComponent.setMinimumSize(new Dimension(0,this.myProgressLineComponent.getMinimumSize().height));
  GridBagConstraints c=new GridBagConstraints();
  rightPanel.setBorder(null);
  c.fill=GridBagConstraints.VERTICAL;
  c.anchor=GridBagConstraints.LINE_START;
  c.gridx=0;
  c.gridy=1;
  c.weighty=1;
  c.weightx=0;
  rightPanel.add(stackTraceActions,c);
  c.fill=GridBagConstraints.HORIZONTAL;
  c.gridx=1;
  c.gridy=0;
  c.weighty=0;
  c.weightx=1;
  rightPanel.add(this.myProgressLineComponent,c);
  c.fill=GridBagConstraints.BOTH;
  c.gridx=1;
  c.gridy=1;
  c.weighty=1;
  c.weightx=1;
  rightPanel.add(resultTabs,c);
  Splitter splitter=new Splitter(false);
  splitter.setProportion(0.2f);
  splitter.setFirstComponent(leftPanel);
  splitter.setSecondComponent(rightPanel);
  this.setLayout(new BorderLayout());
  this.add(splitter,BorderLayout.CENTER);
  this.myTestState.addView(this.myTreeComponent);
  this.myTestState.addView(this.myProgressLineComponent);
  this.myTestState.addView(this.myOutputComponent);
}
