{
  JPanel rightPanel=new JPanel(new BorderLayout());
  rightPanel.setBorder(null);
  JTabbedPane resultTabs=new JTabbedPane();
  this.treeComponent=new TestTree(this.testState,context,this);
  resultTabs.addTab("Output",this.getIcon("testOutput.png"),this.createOutputComponent(this.project,console));
  resultTabs.addTab("Statistics",this.getIcon("testStatistics.png"),this.createStatisticsComponent(statisticsModel));
  JComponent leftPanel=this.createTreeComponent();
  Splitter splitter=new Splitter(false);
  splitter.setProportion(0.2f);
  splitter.setFirstComponent(leftPanel);
  splitter.setSecondComponent(rightPanel);
  this.setLayout(new BorderLayout());
  JComponent stackTraceActions=this.createActionsToolbar(console);
  stackTraceActions.setMaximumSize(new Dimension(rightPanel.getWidth(),stackTraceActions.getMaximumSize().height));
  this.actionToolComponent=new TestToolbarPanel(this.treeComponent,this.testNavigator);
  this.progressLineComponent=new ProgressLine(this.testState);
  this.progressLineComponent.setMinimumSize(new Dimension(0,this.progressLineComponent.getMinimumSize().height));
  this.treeComponent.addTreeSelectionListener(new TestTreeSelectionListener(this.treeComponent,statisticsModel,this.outputComponent));
  this.treeComponent.addMouseListener(new TestTreeRootMouseListener(this.treeComponent,statisticsModel,this.outputComponent));
  leftPanel.add(this.actionToolComponent,BorderLayout.NORTH);
  rightPanel.add(stackTraceActions,BorderLayout.LINE_START);
  rightPanel.add(this.progressLineComponent,BorderLayout.NORTH);
  rightPanel.add(resultTabs,BorderLayout.CENTER);
  this.add(splitter,BorderLayout.CENTER);
  this.testState.addView(this.treeComponent);
  this.testState.addView(this.progressLineComponent);
  this.testState.addView(this.outputComponent);
}
