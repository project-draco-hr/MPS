{
  super(editorContext,node);
  setSubstituteInfo(new CompositeSubstituteInfo(editorContext,new BasicCellContext(node),new SubstituteInfoPartExt[]{createNewDiagramNodeActions(getSNode(),SConceptOperations.findConceptDeclaration("jetbrains.mps.samples.componentDependencies.structure.Component"),SLinkOperations.findLinkDeclaration("jetbrains.mps.samples.componentDependencies.structure.ComponentSet","util"),new _FunctionTypes._void_P3_E0<SNode,Integer,Integer>(){
    public void invoke(    SNode node,    Integer x,    Integer y){
      ListSequence.fromList(SLinkOperations.getTargets(getSNode(),"component",true)).addElement(SNodeOperations.cast(node,"jetbrains.mps.samples.componentDependencies.structure.Component"));
    }
  }
),createNewDiagramConnectorActions(getSNode(),SConceptOperations.findConceptDeclaration("jetbrains.mps.samples.componentDependencies.structure.Dependency"),SLinkOperations.findLinkDeclaration("jetbrains.mps.samples.componentDependencies.structure.ComponentSet","util"),new _FunctionTypes._return_P4_E0<Boolean,SNode,Object,SNode,Object>(){
    public Boolean invoke(    SNode from,    Object fromId,    SNode to,    Object toId){
      final SNode n=to;
      return ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.getAncestor(from,"jetbrains.mps.samples.componentDependencies.structure.Component",false,false),"dep",true)).all(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SLinkOperations.getTarget(it,"to",false) != SNodeOperations.getAncestor(n,"jetbrains.mps.samples.componentDependencies.structure.Component",false,false);
        }
      }
);
    }
  }
,new _FunctionTypes._void_P5_E0<SNode,SNode,Object,SNode,Object>(){
    public void invoke(    SNode node,    SNode from,    Object fromId,    SNode to,    Object toId){
      ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.getAncestor(from,"jetbrains.mps.samples.componentDependencies.structure.Component",false,false),"dep",true)).addElement(SNodeOperations.cast(node,"jetbrains.mps.samples.componentDependencies.structure.Dependency"));
      SLinkOperations.setTarget(SNodeOperations.cast(node,"jetbrains.mps.samples.componentDependencies.structure.Dependency"),"to",SNodeOperations.getAncestor(to,"jetbrains.mps.samples.componentDependencies.structure.Component",false,false),false);
    }
  }
)}));
  synchronize();
}
