{
  if (RulesUtil.checkAppliedCorrectly_generic(argument) && (SLinkOperations.getTarget(argument,"link",false) != null)) {
    SNode inputNodeConcept=RulesUtil.get_inputNodeConcept(argument);
    if (!((inputNodeConcept != null))) {
      TypeChecker.getInstance().reportTypeError(argument,"couldn't define node concept from left expression","jetbrains.mps.bootstrap.smodelLanguage.helgins","1178559874465");
    }
    List<LinkDeclaration> declaredLinks=SModelSearchUtil_new.getLinkDeclarationsExcludingOverridden(((AbstractConceptDeclaration)SNodeOperations.getAdapter(inputNodeConcept)));
    SNode linkDecl=SLinkOperations.getTarget(argument,"link",false);
    if (!(declaredLinks.contains(((LinkDeclaration)SNodeOperations.getAdapter(linkDecl))))) {
      TypeChecker.getInstance().reportTypeError(argument,"access to link '" + SPropertyOperations.getString(linkDecl,"role") + "' is not expected here","jetbrains.mps.bootstrap.smodelLanguage.helgins","1178559874485");
    }
  }
  TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_12().createNode(SLinkOperations.getTarget(SLinkOperations.getTarget(argument,"link",false),"target",false)),argument,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1178559874507");
}
