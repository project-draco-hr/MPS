{
  List<SNode> candidates=new ArrayList<SNode>();
  Map<SNode,SNode> concrete=MapSequence.fromMap(new HashMap<SNode,SNode>());
  for (  SNode allSuper : ConceptBehavior_Behavior.call_getAllSuperBehaviors_1818770337282950280(thisNode)) {
    for (    SNode meth : SLinkOperations.getChildren(allSuper,MetaAdapterFactory.getContainmentLink(new UUID(-5808042798135555774l,-8657779246725685839l),1225194240794l,1225194240805l,"method"))) {
      SNode baseMeth=ConceptMethodDeclaration_Behavior.call_getOverridenMethod_1225196403956(meth);
      if (baseMeth != null && !(MapSequence.fromMap(concrete).containsKey(baseMeth))) {
        MapSequence.fromMap(concrete).put(baseMeth,meth);
        ListSequence.fromList(candidates).addElement(meth);
      }
    }
  }
  List<SNode> result=new ArrayList<SNode>();
  for (  SNode method : candidates) {
    if (SPropertyOperations.getBoolean(method,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1181808852946l,"isFinal"))) {
      continue;
    }
    if (SPropertyOperations.getBoolean(method,MetaAdapterFactory.getProperty(new UUID(-5808042798135555774l,-8657779246725685839l),1225194472830l,1225194472834l,"isAbstract"))) {
      continue;
    }
    if (SNodeOperations.getParent(method) == thisNode) {
      continue;
    }
    ListSequence.fromList(result).addElement(method);
  }
  return result;
}
