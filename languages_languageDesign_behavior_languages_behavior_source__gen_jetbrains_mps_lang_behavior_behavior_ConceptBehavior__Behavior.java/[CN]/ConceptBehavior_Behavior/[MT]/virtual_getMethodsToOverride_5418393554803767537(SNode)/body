{
  List<SNode> candidates=new ArrayList<SNode>();
  Map<SNode,SNode> concrete=MapSequence.fromMap(new HashMap<SNode,SNode>());
  for (  SNode allSuper : ConceptBehavior_Behavior.call_getAllSuperBehaviors_1818770337282950280(thisNode)) {
    for (    SNode meth : SLinkOperations.getTargets(allSuper,"method",true)) {
      SNode baseMeth=ConceptMethodDeclaration_Behavior.call_getOverridenMethod_1225196403956(meth);
      if (baseMeth != null && !(MapSequence.fromMap(concrete).containsKey(baseMeth))) {
        MapSequence.fromMap(concrete).put(baseMeth,meth);
        ListSequence.fromList(candidates).addElement(meth);
      }
    }
  }
  List<SNode> result=new ArrayList<SNode>();
  for (  SNode method : candidates) {
    if (SPropertyOperations.getBoolean(method,"isFinal")) {
      continue;
    }
    if (SPropertyOperations.getBoolean(method,"isAbstract")) {
      continue;
    }
    if (SNodeOperations.getParent(method) == thisNode) {
      continue;
    }
    ListSequence.fromList(result).addElement(method);
  }
  return result;
}
