{
  List<SNode> candidates=new ArrayList<SNode>();
  Map<SNode,SNode> concrete=MapSequence.fromMap(new HashMap<SNode,SNode>());
  for (  SNode allSuper : ConceptBehavior_Behavior.call_getAllSuperBehaviors_1818770337282950280(thisNode)) {
    for (    SNode meth : SLinkOperations.getChildren(allSuper,MetaAdapterFactory.getContainmentLink(0xaf65afd8f0dd4942L,0x87d963a55f2a9db1L,0x11d43447b1aL,0x11d43447b25L,"method"))) {
      SNode baseMeth=ConceptMethodDeclaration_Behavior.call_getOverridenMethod_1225196403956(meth);
      if (baseMeth != null && !(MapSequence.fromMap(concrete).containsKey(baseMeth))) {
        MapSequence.fromMap(concrete).put(baseMeth,meth);
        ListSequence.fromList(candidates).addElement(meth);
      }
    }
  }
  List<SNode> result=new ArrayList<SNode>();
  for (  SNode method : candidates) {
    if (SPropertyOperations.getBoolean(method,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0x113294bffd2L,"isFinal"))) {
      continue;
    }
    if (SPropertyOperations.getBoolean(method,MetaAdapterFactory.getProperty(0xaf65afd8f0dd4942L,0x87d963a55f2a9db1L,0x11d4348057eL,0x11d43480582L,"isAbstract"))) {
      continue;
    }
    if (SNodeOperations.getParent(method) == thisNode) {
      continue;
    }
    ListSequence.fromList(result).addElement(method);
  }
  return result;
}
