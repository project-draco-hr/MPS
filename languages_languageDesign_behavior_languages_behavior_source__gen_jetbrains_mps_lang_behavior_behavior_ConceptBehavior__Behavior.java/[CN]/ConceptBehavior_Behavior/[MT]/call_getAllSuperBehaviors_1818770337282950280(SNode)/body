{
  Set<SNode> seen=SetSequence.fromSet(new HashSet<SNode>());
  List<SNode> conceptResult=new ArrayList<SNode>();
  Queue<SNode> q=QueueSequence.fromQueue(new LinkedList<SNode>());
  QueueSequence.fromQueue(q).addLastElement(SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getReferenceLink(new UUID(-5808042798135555774l,-8657779246725685839l),1225194240794l,1225194240799l,"concept")));
  while (QueueSequence.fromQueue(q).isNotEmpty()) {
    SNode qn=QueueSequence.fromQueue(q).removeFirstElement();
    ListSequence.fromList(conceptResult).addElement(qn);
    if (SNodeOperations.isInstanceOf(qn,MetaAdapterFactory.getConcept(new UUID(-4094437568663370681l,-8968368868337559369l),1071489090640l,"jetbrains.mps.lang.structure.structure.ConceptDeclaration"))) {
      if ((SLinkOperations.getTarget(SNodeOperations.cast(qn,MetaAdapterFactory.getConcept(new UUID(-4094437568663370681l,-8968368868337559369l),1071489090640l,"jetbrains.mps.lang.structure.structure.ConceptDeclaration")),MetaAdapterFactory.getReferenceLink(new UUID(-4094437568663370681l,-8968368868337559369l),1071489090640l,1071489389519l,"extends")) != null)) {
        SNode cl=SLinkOperations.getTarget(SNodeOperations.cast(qn,MetaAdapterFactory.getConcept(new UUID(-4094437568663370681l,-8968368868337559369l),1071489090640l,"jetbrains.mps.lang.structure.structure.ConceptDeclaration")),MetaAdapterFactory.getReferenceLink(new UUID(-4094437568663370681l,-8968368868337559369l),1071489090640l,1071489389519l,"extends"));
        if (seen.add(cl)) {
          QueueSequence.fromQueue(q).addLastElement(cl);
        }
      }
      for (      SNode i : SLinkOperations.getChildren(SNodeOperations.cast(qn,MetaAdapterFactory.getConcept(new UUID(-4094437568663370681l,-8968368868337559369l),1071489090640l,"jetbrains.mps.lang.structure.structure.ConceptDeclaration")),MetaAdapterFactory.getContainmentLink(new UUID(-4094437568663370681l,-8968368868337559369l),1071489090640l,1169129564478l,"implements"))) {
        SNode cl=SLinkOperations.getTarget(i,MetaAdapterFactory.getReferenceLink(new UUID(-4094437568663370681l,-8968368868337559369l),1169127622168l,1169127628841l,"intfc"));
        if (seen.add(cl)) {
          QueueSequence.fromQueue(q).addLastElement(cl);
        }
      }
    }
 else     if (SNodeOperations.isInstanceOf(qn,MetaAdapterFactory.getConcept(new UUID(-4094437568663370681l,-8968368868337559369l),1169125989551l,"jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration"))) {
      for (      SNode i : SLinkOperations.getChildren(SNodeOperations.cast(qn,MetaAdapterFactory.getConcept(new UUID(-4094437568663370681l,-8968368868337559369l),1169125989551l,"jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration")),MetaAdapterFactory.getContainmentLink(new UUID(-4094437568663370681l,-8968368868337559369l),1169125989551l,1169127546356l,"extends"))) {
        SNode cl=SLinkOperations.getTarget(i,MetaAdapterFactory.getReferenceLink(new UUID(-4094437568663370681l,-8968368868337559369l),1169127622168l,1169127628841l,"intfc"));
        if (seen.add(cl)) {
          QueueSequence.fromQueue(q).addLastElement(cl);
        }
      }
    }
  }
  List<SNode> result=new ArrayList<SNode>();
  for (  SNode concept : conceptResult) {
    SNode behavior=SNodeOperations.cast(AbstractConceptDeclaration_Behavior.call_findConceptAspect_8360039740498068384(concept,LanguageAspect.BEHAVIOR),MetaAdapterFactory.getConcept(new UUID(-5808042798135555774l,-8657779246725685839l),1225194240794l,"jetbrains.mps.lang.behavior.structure.ConceptBehavior"));
    if (behavior != null) {
      ListSequence.fromList(result).addElement(behavior);
    }
  }
  return result;
}
