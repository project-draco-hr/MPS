{
  if (!notAppliedChanges.contains(changeToApply)) {
    return;
  }
  notAppliedChanges.remove(changeToApply);
  changeToApply.apply(myNewModel);
  if (dependenciesMap.containsKey(changeToApply.getAffectedNodeId())) {
    for (    Change dependant : dependenciesMap.get(changeToApply.getAffectedNodeId())) {
      applyChange(dependenciesMap,notAppliedChanges,dependant);
    }
  }
  if (changeToApply instanceof AddRootChange) {
    myNewEditorComponent.editNode(myNewModel.getNodeById(changeToApply.getAffectedNodeId()),myNewEditorComponent.getOperationContext());
  }
}
