{
  final SNode[] oldNode=new SNode[1];
  final SNode[] newNode=new SNode[1];
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      oldNode[0]=myOldModel.getRootByName(node.getName());
      newNode[0]=myNewModel.getRootByName(node.getName());
    }
  }
);
  myOldEditorComponent=addEditor(context,oldNode[0],oldRevisionName);
  myNewEditorComponent=addEditor(context,newNode[0],newRevisionName);
  myNewEditorComponent.getViewport().addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      myOldEditorComponent.getViewport().setViewPosition(myNewEditorComponent.getViewport().getViewPosition());
    }
  }
);
  myOldEditorComponent.getViewport().addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      myNewEditorComponent.getViewport().setViewPosition(myOldEditorComponent.getViewport().getViewPosition());
    }
  }
);
  rebuildChangeBlocks();
}
