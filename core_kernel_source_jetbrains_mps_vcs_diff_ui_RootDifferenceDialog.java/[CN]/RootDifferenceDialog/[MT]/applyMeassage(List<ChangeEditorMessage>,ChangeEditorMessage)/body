{
  if (!notAppliedChanges.contains(m)) {
    return;
  }
  for (  SNodeId usedNodeId : m.getChange().getDependences()) {
    for (    ChangeEditorMessage message : notAppliedChanges) {
      Change change=message.getChange();
      if (change instanceof NewNodeChange || change instanceof DeleteNodeChange || change instanceof MoveNodeChange) {
        if (change.getAffectedNodeId().equals(usedNodeId)) {
          applyMeassage(notAppliedChanges,message);
          break;
        }
      }
    }
  }
  m.getChange().apply(myNewModel);
  notAppliedChanges.remove(m);
}
