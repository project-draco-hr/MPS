{
  for (  SNodeId usedNodeId : m.getChange().getUsedNodes()) {
    List<ChangeEditorMessage> changes=new ArrayList();
    changes.addAll(myNewChanges);
    changes.addAll(myOldChanges);
    for (    ChangeEditorMessage message : changes) {
      Change change=message.getChange();
      if (change instanceof NewNodeChange || change instanceof DeleteNodeChange || change instanceof MoveNodeChange) {
        if (change.getAffectedNodeId().equals(usedNodeId)) {
          applyMeassage(messages,message);
          break;
        }
      }
    }
  }
  m.getChange().apply(myNewModel);
  messages.remove(m);
}
