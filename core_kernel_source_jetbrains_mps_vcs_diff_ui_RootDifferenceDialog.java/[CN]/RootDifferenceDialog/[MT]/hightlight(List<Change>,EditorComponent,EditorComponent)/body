{
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      for (      Change change : changes) {
        if (change instanceof SetReferenceChange) {
          SetReferenceChange referenceChange=(SetReferenceChange)change;
          SNode changedNode=myNewModel.getNodeById(change.getAffectedNodeId());
          ChangeEditorMessage message=new ChangeEditorMessage(myNewModel.getNodeById(change.getAffectedNodeId()),CHANGE_COLOR,"",RootDifferenceDialog.this);
          message.setRole(referenceChange.getRole());
          newEditorComponent.getHighlightManager().mark(message);
          message=new ChangeEditorMessage(myOldModel.getNodeById(change.getAffectedNodeId()),CHANGE_COLOR,"",RootDifferenceDialog.this);
          message.setRole(referenceChange.getRole());
          oldEditorComponent.getHighlightManager().mark(message);
        }
        if (change instanceof MoveNodeChange || change instanceof ChangeConceptChange) {
          ChangeEditorMessage message=new ChangeEditorMessage(myNewModel.getNodeById(change.getAffectedNodeId()),CHANGE_COLOR,"",RootDifferenceDialog.this);
          newEditorComponent.getHighlightManager().mark(message);
          message=new ChangeEditorMessage(myOldModel.getNodeById(change.getAffectedNodeId()),CHANGE_COLOR,"",RootDifferenceDialog.this);
          oldEditorComponent.getHighlightManager().mark(message);
        }
        if (change instanceof NewNodeChange) {
          SNode addedNode=myNewModel.getNodeById(change.getAffectedNodeId());
          newEditorComponent.getHighlightManager().mark(new ChangeEditorMessage(addedNode,NEW_COLOR,"",RootDifferenceDialog.this));
        }
        if (change instanceof SetPropertyChange) {
          SetPropertyChange propertyChange=(SetPropertyChange)change;
          ChangeEditorMessage message=new ChangeEditorMessage(myNewModel.getNodeById(change.getAffectedNodeId()),CHANGE_COLOR,"",RootDifferenceDialog.this);
          message.setProperty(propertyChange.getProperty());
          newEditorComponent.getHighlightManager().mark(message);
          message=new ChangeEditorMessage(myOldModel.getNodeById(change.getAffectedNodeId()),CHANGE_COLOR,"",RootDifferenceDialog.this);
          message.setProperty(propertyChange.getProperty());
          oldEditorComponent.getHighlightManager().mark(message);
        }
        if (change instanceof DeleteNodeChange) {
          SNode removedNode=myOldModel.getNodeById(change.getAffectedNodeId());
          oldEditorComponent.getHighlightManager().mark(new ChangeEditorMessage(removedNode,DELETE_COLOR,"",RootDifferenceDialog.this));
        }
      }
    }
  }
);
}
