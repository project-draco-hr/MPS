{
  if (!notAppliedChanges.contains(changeToApply)) {
    return;
  }
  notAppliedChanges.remove(changeToApply);
  for (  SNodeId usedNodeId : changeToApply.getDependencies()) {
    for (    Change change : notAppliedChanges) {
      if (change instanceof NewNodeChange || change instanceof DeleteNodeChange || change instanceof MoveNodeChange) {
        if (change.getAffectedNodeId().equals(usedNodeId)) {
          applyChange(notAppliedChanges,change);
          break;
        }
      }
    }
  }
  for (  Change change : new ArrayList<Change>(notAppliedChanges)) {
    if (change.getDependencies().contains(change.getAffectedNodeId())) {
      applyChange(notAppliedChanges,change);
    }
  }
  changeToApply.apply(myNewModel);
  if (changeToApply instanceof AddRootChange) {
    myNewEditorComponent.editNode(myNewModel.getNodeById(changeToApply.getAffectedNodeId()),myNewEditorComponent.getOperationContext());
  }
}
