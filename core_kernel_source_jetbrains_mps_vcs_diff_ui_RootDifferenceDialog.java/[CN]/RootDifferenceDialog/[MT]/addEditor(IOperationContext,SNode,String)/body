{
  final DiffEditorComponent result=new DiffEditorComponent(context,node){
    @Override public void configureBlock(    ChangesBlock block){
      if (!myNewModel.isNotEditable()) {
        block.setRollbackButton(new RollbackButton(block.getChanges(),getChanges()));
      }
    }
  }
;
  result.setReadOnly(true);
  JPanel panel=new JPanel(new BorderLayout());
  panel.add(new JLabel(revisionName),BorderLayout.PAGE_START);
  panel.add(result.getExternalComponent(),BorderLayout.CENTER);
  myTopPanel.add(panel);
  myBottomPanel.add(result.getInspector().getExternalComponent());
  result.addCellSelectionListener(myCellSelectionListener);
  result.getViewport().addChangeListener(new ChangeListener(){
    public void stateChanged(    ChangeEvent e){
      if (myViewportSetInProgress) {
        return;
      }
      myViewportSetInProgress=true;
      result.synchronizeViewWith(myNewEditorComponent);
      result.synchronizeViewWith(myOldEditorComponent);
      myViewportSetInProgress=false;
    }
  }
);
  return result;
}
