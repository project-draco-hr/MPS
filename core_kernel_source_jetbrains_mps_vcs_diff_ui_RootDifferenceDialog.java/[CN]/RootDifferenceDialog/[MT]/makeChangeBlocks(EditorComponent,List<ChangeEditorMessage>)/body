{
  editorComponent.relayout();
  NodeHighlightManager highlightManager=editorComponent.getHighlightManager();
  highlightManager.rebuildMessages();
  for (Iterator<ChangeEditorMessage> iterator=changes.iterator(); iterator.hasNext(); ) {
    ChangeEditorMessage change=iterator.next();
    if (change.getCell() == null) {
      iterator.remove();
    }
  }
  Collections.sort(changes,new Comparator<ChangeEditorMessage>(){
    public int compare(    ChangeEditorMessage o1,    ChangeEditorMessage o2){
      return o1.getCell().getY() - o2.getCell().getY();
    }
  }
);
  ChangesBlock block=null;
  for (  ChangeEditorMessage m : changes) {
    System.out.println(m.getChange());
    EditorCell cell=m.getCell();
    if (block == null) {
      block=createChangeBlock(editorComponent,changes);
    }
 else {
      if (block.getY2() < cell.getY()) {
        editorComponent.addChanges(block);
        block=createChangeBlock(editorComponent,changes);
        System.out.println("------");
      }
    }
    block.addChange(m);
  }
  if (block != null) {
    System.out.println("------");
    editorComponent.addChanges(block);
  }
}
