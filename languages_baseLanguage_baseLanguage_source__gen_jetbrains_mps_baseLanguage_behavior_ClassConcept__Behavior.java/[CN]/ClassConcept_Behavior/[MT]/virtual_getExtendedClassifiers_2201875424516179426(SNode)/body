{
  Classifier_Behavior.callSuper_getExtendedClassifiers_2201875424516179426(thisNode,"jetbrains.mps.baseLanguage.structure.ClassConcept");
  List<SNode> extendsClassifiers=new ArrayList<SNode>();
  ListSequence.fromList(extendsClassifiers).addElement(SLinkOperations.getTarget(SLinkOperations.getTarget(thisNode,"superclass",true),"classifier",false));
  ListSequence.fromList(extendsClassifiers).addSequence(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"implementedInterface",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (SLinkOperations.getTarget(it,"classifier",false) != null);
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SLinkOperations.getTarget(it,"classifier",false);
    }
  }
));
  return ListSequence.fromListWithValues(new ArrayList<SNode>(),ListSequence.fromList(extendsClassifiers).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (it != null);
    }
  }
));
}
