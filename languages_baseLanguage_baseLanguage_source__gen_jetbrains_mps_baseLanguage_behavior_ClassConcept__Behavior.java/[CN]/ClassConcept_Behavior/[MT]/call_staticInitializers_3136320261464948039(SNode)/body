{
  List<SNode> initializers=ListSequence.fromList(new ArrayList<SNode>());
  if ((SLinkOperations.getTarget(thisNode,"classInitializer",true) != null)) {
    ListSequence.fromList(initializers).addElement(SLinkOperations.getTarget(thisNode,"classInitializer",true));
  }
  ListSequence.fromList(initializers).addSequence(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"member",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.baseLanguage.structure.StaticInitializer");
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(it,"jetbrains.mps.baseLanguage.structure.StaticInitializer");
    }
  }
));
  return initializers;
}
