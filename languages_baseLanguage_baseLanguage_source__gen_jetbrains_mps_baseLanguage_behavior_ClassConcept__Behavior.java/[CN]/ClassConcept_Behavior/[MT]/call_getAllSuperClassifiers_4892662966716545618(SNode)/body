{
  Set<SNode> seen=SetSequence.fromSet(new HashSet<SNode>());
  List<SNode> result=new ArrayList<SNode>();
  Queue<SNode> q=QueueSequence.fromQueue(new LinkedList<SNode>());
  QueueSequence.fromQueue(q).addLastElement(thisNode);
  while (QueueSequence.fromQueue(q).isNotEmpty()) {
    SNode qn=QueueSequence.fromQueue(q).removeFirstElement();
    ListSequence.fromList(result).addElement(qn);
    if (SNodeOperations.isInstanceOf(qn,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"))) {
      if ((SLinkOperations.getTarget(SNodeOperations.cast(qn,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x10f6353296dL,"superclass")) != null)) {
        SNode cl=SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.cast(qn,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x10f6353296dL,"superclass")),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier"));
        if (seen.add(cl)) {
          QueueSequence.fromQueue(q).addLastElement(cl);
        }
      }
      for (      SNode i : SLinkOperations.getChildren(SNodeOperations.cast(qn,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0xff2ac0b419L,"implementedInterface"))) {
        SNode cl=SLinkOperations.getTarget(i,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier"));
        if (seen.add(cl)) {
          QueueSequence.fromQueue(q).addLastElement(cl);
        }
      }
    }
 else     if (SNodeOperations.isInstanceOf(qn,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface"))) {
      for (      SNode i : SLinkOperations.getChildren(SNodeOperations.cast(qn,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,0x101eddadad7L,"extendedInterface"))) {
        SNode cl=SLinkOperations.getTarget(i,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier"));
        if (seen.add(cl)) {
          QueueSequence.fromQueue(q).addLastElement(cl);
        }
      }
    }
  }
  SNode obj=_quotation_createNode_xjj00_a0f0l();
  if (seen.add(SLinkOperations.getTarget(obj,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")))) {
    ListSequence.fromList(result).addElement(SLinkOperations.getTarget(obj,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")));
  }
  return result;
}
