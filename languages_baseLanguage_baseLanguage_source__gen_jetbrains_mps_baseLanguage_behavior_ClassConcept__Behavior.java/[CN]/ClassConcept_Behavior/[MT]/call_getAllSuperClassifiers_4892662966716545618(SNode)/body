{
  Set<SNode> seen=SetSequence.fromSet(new HashSet<SNode>());
  List<SNode> result=new ArrayList<SNode>();
  Queue<SNode> q=QueueSequence.fromQueue(new LinkedList<SNode>());
  QueueSequence.fromQueue(q).addLastElement(thisNode);
  while (QueueSequence.fromQueue(q).isNotEmpty()) {
    SNode qn=QueueSequence.fromQueue(q).removeFirstElement();
    ListSequence.fromList(result).addElement(qn);
    if (SNodeOperations.isInstanceOf(qn,"jetbrains.mps.baseLanguage.structure.ClassConcept")) {
      if ((SLinkOperations.getTarget(SNodeOperations.cast(qn,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"superclass",true) != null)) {
        SNode cl=SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.cast(qn,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"superclass",true),"classifier",false);
        if (seen.add(cl)) {
          QueueSequence.fromQueue(q).addLastElement(cl);
        }
      }
      for (      SNode i : SLinkOperations.getTargets(SNodeOperations.cast(qn,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"implementedInterface",true)) {
        SNode cl=SLinkOperations.getTarget(i,"classifier",false);
        if (seen.add(cl)) {
          QueueSequence.fromQueue(q).addLastElement(cl);
        }
      }
    }
 else     if (SNodeOperations.isInstanceOf(qn,"jetbrains.mps.baseLanguage.structure.Interface")) {
      for (      SNode i : SLinkOperations.getTargets(SNodeOperations.cast(qn,"jetbrains.mps.baseLanguage.structure.Interface"),"extendedInterface",true)) {
        SNode cl=SLinkOperations.getTarget(i,"classifier",false);
        if (seen.add(cl)) {
          QueueSequence.fromQueue(q).addLastElement(cl);
        }
      }
    }
  }
  SNode obj=_quotation_createNode_xjj00_a0f0m();
  if (seen.add(SLinkOperations.getTarget(obj,"classifier",false))) {
    ListSequence.fromList(result).addElement(SLinkOperations.getTarget(obj,"classifier",false));
  }
  return result;
}
