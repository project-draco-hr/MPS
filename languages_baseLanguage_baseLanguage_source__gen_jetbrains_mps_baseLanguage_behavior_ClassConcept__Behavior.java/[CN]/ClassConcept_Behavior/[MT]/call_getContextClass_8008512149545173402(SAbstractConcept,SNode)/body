{
  SNode contextNode=expr;
  SNode parent=SNodeOperations.getAncestor(expr,"jetbrains.mps.baseLanguage.structure.Classifier",false,false);
  if (SNodeOperations.isInstanceOf(parent,"jetbrains.mps.baseLanguage.structure.AnonymousClass")) {
    List<SNode> args=new ArrayList<SNode>();
    ListSequence.fromList(args).addSequence(ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(parent,"jetbrains.mps.baseLanguage.structure.AnonymousClass"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1170345865475l,1170346101385l,"parameter"))));
    ListSequence.fromList(args).addSequence(ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(parent,"jetbrains.mps.baseLanguage.structure.AnonymousClass"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141038l,"actualArgument"))));
    for (    SNode param : args) {
      if (ListSequence.fromList(SNodeOperations.getDescendants(param,null,true,new String[]{})).contains(expr)) {
        contextNode=parent;
        break;
      }
    }
  }
  return SNodeOperations.getAncestor(contextNode,"jetbrains.mps.baseLanguage.structure.ClassConcept",false,false);
}
