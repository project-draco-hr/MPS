{
  try {
    FeatureUsageTracker.getInstance().triggerFeatureUsed("navigation.goto.editorDeclaration");
    final Language l=ModelAccess.instance().runReadAction(new Computable<Language>(){
      public Language compute(){
        return SModelUtil.getDeclaringLanguage(SNodeOperations.getConceptDeclaration(((SNode)MapSequence.fromMap(_params).get("node"))));
      }
    }
);
    if (l == null) {
      JOptionPane.showMessageDialog(((Frame)MapSequence.fromMap(_params).get("frame")),"Couldn't find declaring language for concept " + BehaviorReflection.invokeVirtual(String.class,SNodeOperations.getConceptDeclaration(((SNode)MapSequence.fromMap(_params).get("node"))),"virtual_getFqName_1213877404258",new Object[]{}),"Error",JOptionPane.ERROR_MESSAGE);
      return;
    }
    org.jetbrains.mps.openapi.module.ModelAccess modelAccess=((MPSProject)MapSequence.fromMap(_params).get("project")).getRepository().getModelAccess();
    final SNode[] cd=new SNode[]{null};
    modelAccess.runReadAction(new Runnable(){
      public void run(){
        cd[0]=SNodeOperations.getConceptDeclaration(((SNode)MapSequence.fromMap(_params).get("node")));
      }
    }
);
    SNode conceptDeclaration=cd[0];
    SModel editorModel=GoToEditorDeclarationHelper.getOrCreateEditorAspect(l,conceptDeclaration);
    if (editorModel == null) {
      return;
    }
    final SNode editorNode=GoToEditorDeclarationHelper.getOrCreateEditorForConcept(editorModel,conceptDeclaration,((SNode)MapSequence.fromMap(_params).get("node")));
    if (editorNode == null) {
      return;
    }
    modelAccess.runWriteInEDT(new Runnable(){
      public void run(){
        NavigationSupport.getInstance().openNode(((IOperationContext)MapSequence.fromMap(_params).get("context")),editorNode,true,true);
        NavigationSupport.getInstance().selectInTree(((IOperationContext)MapSequence.fromMap(_params).get("context")),editorNode,false);
      }
    }
);
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "GoToEditorDeclaration",t);
    }
  }
}
