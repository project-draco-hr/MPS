{
  try {
    final Wrappers._T<Language> l=new Wrappers._T<Language>();
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        l.value=SModelUtil.getDeclaringLanguage(SNodeOperations.getConceptDeclaration(((SNode)MapSequence.fromMap(_params).get("node"))));
      }
    }
);
    if (l.value == null) {
      JOptionPane.showMessageDialog(((Frame)MapSequence.fromMap(_params).get("frame")),"Couldn't find declaring language for concept " + ((String)BehaviorManager.getInstance().invoke(Object.class,SNodeOperations.cast(SNodeOperations.getConceptDeclaration(((SNode)MapSequence.fromMap(_params).get("node"))),"jetbrains.mps.lang.core.structure.INamedConcept"),"virtual_getFqName_1213877404258",new Class[]{SNode.class})),"Error",JOptionPane.ERROR_MESSAGE);
      return;
    }
    final Wrappers._T<SNode> conceptDeclaration=new Wrappers._T<SNode>();
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        conceptDeclaration.value=SNodeOperations.getConceptDeclaration(((SNode)MapSequence.fromMap(_params).get("node")));
      }
    }
);
    SModelDescriptor editorModel=GoToEditorDeclarationHelper.getOrCreateEditorAspect(l.value,conceptDeclaration.value,((IScope)MapSequence.fromMap(_params).get("scope")));
    if (editorModel == null) {
      return;
    }
    final SNode editorNode=GoToEditorDeclarationHelper.getOrCreateEditorForConcept(editorModel,conceptDeclaration.value,((SNode)MapSequence.fromMap(_params).get("node")),((IScope)MapSequence.fromMap(_params).get("scope")));
    if (editorNode == null) {
      return;
    }
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        GoToEditorDeclaration_Action.this.navigateToEditorDeclaration(editorNode,new ModuleContext(l.value,((Project)MapSequence.fromMap(_params).get("project"))),((IEditor)MapSequence.fromMap(_params).get("editor")),_params);
      }
    }
);
  }
 catch (  Throwable t) {
    if (log.isErrorEnabled()) {
      log.error("User's action execute method failed. Action:" + "GoToEditorDeclaration",t);
    }
  }
}
