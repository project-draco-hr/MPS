{
  try {
    FeatureUsageTracker.getInstance().triggerFeatureUsed("navigation.goto.editorDeclaration");
    SAbstractConcept concept=SNodeOperations.getConcept(((SNode)MapSequence.fromMap(_params).get("node")));
    Language l=((Language)concept.getLanguage().getSourceModule());
    if (l == null) {
      SwingUtilities.invokeLater(new Runnable(){
        public void run(){
          JOptionPane.showMessageDialog(((Frame)MapSequence.fromMap(_params).get("frame")),"Couldn't find declaring language for concept " + SNodeOperations.getConcept(((SNode)MapSequence.fromMap(_params).get("node"))).getQualifiedName(),"Error",JOptionPane.ERROR_MESSAGE);
        }
      }
);
      return;
    }
    SNode conceptNode=(SNode)concept.getDeclarationNode();
    SModel editorModel=GoToEditorDeclarationHelper.getOrCreateEditorAspect(((MPSProject)MapSequence.fromMap(_params).get("project")),l,conceptNode);
    if (editorModel == null) {
      return;
    }
    final SNode editorNode=GoToEditorDeclarationHelper.getOrCreateEditorForConcept(((MPSProject)MapSequence.fromMap(_params).get("project")),editorModel,conceptNode,((SNode)MapSequence.fromMap(_params).get("node")));
    if (editorNode == null) {
      return;
    }
    NavigationSupport.getInstance().openNode(((MPSProject)MapSequence.fromMap(_params).get("project")),editorNode,true,true);
    NavigationSupport.getInstance().selectInTree(((MPSProject)MapSequence.fromMap(_params).get("project")),editorNode,false);
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "GoToEditorDeclaration",t);
    }
  }
}
