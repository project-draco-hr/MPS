{
  if (myMoveNodeItems == null) {
    throw new IllegalStateException("commit() should be called after willBeMoved() and isMoved()");
  }
  if (ListSequence.fromList(myMoveNodeItems).isEmpty()) {
    return;
  }
  if (mySourceModule == null) {
    throw new IllegalStateException("sourceModule is null");
  }
  if (myTargetModule == null) {
    throw new IllegalStateException("targetModule is null");
  }
  if (mySourceModule instanceof Language && myTargetModule instanceof Language) {
    Language sourceModule=(Language)mySourceModule;
    Language targetModule=(Language)myTargetModule;
    int sourceModuleVersion=sourceModule.getModuleVersion();
    int targetModuleVersion=targetModule.getModuleVersion();
    SNode sourceModuleRefactoringStep=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x9074634404fd4286L,0x97d5b46ae6a81709L,0x67236d4a5836cabbL,"jetbrains.mps.lang.migration.structure.PureMigrationScript")));
    SPropertyOperations.set(sourceModuleRefactoringStep,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),"MoveNodes_" + String.valueOf(sourceModuleVersion));
    SPropertyOperations.set(sourceModuleRefactoringStep,MetaAdapterFactory.getProperty(0x9074634404fd4286L,0x97d5b46ae6a81709L,0x67236d4a5836cabbL,0x67236d4a5836cabcL,"fromVersion"),"" + (sourceModuleVersion));
    ListSequence.fromList(SLinkOperations.getChildren(sourceModuleRefactoringStep,MetaAdapterFactory.getContainmentLink(0x9074634404fd4286L,0x97d5b46ae6a81709L,0x67236d4a5836cabbL,0x67236d4a5836d7f3L,"part"))).addSequence(ListSequence.fromList(myMoveNodeItems));
    SModel sourceModuleMigrationModel=LanguageAspect.MIGRATION.getOrCreate(sourceModule);
    SModelInternal sm=(SModelInternal)(SModel)sourceModuleMigrationModel;
    for (    SModelReference reference : ListSequence.fromList(SNodeOperations.getNodeDescendants(sourceModuleRefactoringStep,null,true,new SAbstractConcept[]{})).translate(new ITranslator2<SNode,SReference>(){
      public Iterable<SReference> translate(      SNode it){
        return SNodeOperations.getReferences(it);
      }
    }
).select(new ISelector<SReference,SModelReference>(){
      public SModelReference select(      SReference it){
        return it.getTargetSModelReference();
      }
    }
).distinct()) {
      if (!(ListSequence.fromList(ListSequence.fromListWithValues(new ArrayList<jetbrains.mps.smodel.SModel.ImportElement>(),sm.importedModels())).select(new ISelector<jetbrains.mps.smodel.SModel.ImportElement,SModelReference>(){
        public SModelReference select(        jetbrains.mps.smodel.SModel.ImportElement it){
          return it.getModelReference();
        }
      }
).contains(reference))) {
        sm.addModelImport(reference,true);
      }
    }
    sm.addLanguage(MetaAdapterFactory.getLanguage(MetaIdFactory.langId(0x9882f4ad195546feL,0x826994189e5dbbf2L),"jetbrains.mps.lang.migration.util"));
    SModelOperations.addRootNode(sourceModuleMigrationModel,sourceModuleRefactoringStep);
    sourceModule.setModuleVersion(sourceModuleVersion + 1);
    SNode targetModuleRefactoringStep=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x9074634404fd4286L,0x97d5b46ae6a81709L,0x67236d4a5836cabbL,"jetbrains.mps.lang.migration.structure.PureMigrationScript")));
    SPropertyOperations.set(targetModuleRefactoringStep,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),"MoveNodes_" + String.valueOf(targetModuleVersion));
    SPropertyOperations.set(targetModuleRefactoringStep,MetaAdapterFactory.getProperty(0x9074634404fd4286L,0x97d5b46ae6a81709L,0x67236d4a5836cabbL,0x67236d4a5836cabcL,"fromVersion"),"" + (targetModuleVersion));
    ListSequence.fromList(SLinkOperations.getChildren(targetModuleRefactoringStep,MetaAdapterFactory.getContainmentLink(0x9074634404fd4286L,0x97d5b46ae6a81709L,0x67236d4a5836cabbL,0x47bb811da2d68dd0L,"executeAfter"))).addElement(createOrderDependency_t528rj_a0a12a4a31(sourceModuleRefactoringStep));
    SModel targetModuleMigrationModel=LanguageAspect.MIGRATION.getOrCreate(targetModule);
    SModelInternal tm=(SModelInternal)(SModel)targetModuleMigrationModel;
    tm.addModelImport(sourceModuleMigrationModel.getReference(),true);
    targetModule.addDependency(sourceModule.getModuleReference(),false);
    tm.addLanguage(MetaAdapterFactory.getLanguage(MetaIdFactory.langId(0x9882f4ad195546feL,0x826994189e5dbbf2L),"jetbrains.mps.lang.migration.util"));
    SModelOperations.addRootNode(targetModuleMigrationModel,targetModuleRefactoringStep);
    targetModule.setModuleVersion(targetModuleVersion + 1);
  }
}
