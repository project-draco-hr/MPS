{
  if (myMoveNodeItems == null) {
    throw new IllegalStateException("commit() should be called after willBeMoved() and isMoved()");
  }
  if (ListSequence.fromList(myMoveNodeItems).isEmpty()) {
    return;
  }
  if (mySourceModule == null) {
    throw new IllegalStateException("sourceModule is null");
  }
  if (myTargetModule == null) {
    throw new IllegalStateException("targetModule is null");
  }
  if (mySourceModule instanceof Language && myTargetModule instanceof Language) {
    Language sourceModule=(Language)mySourceModule;
    int version=sourceModule.getModuleVersion();
    SNode refactoringStep=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x9882f4ad195546feL,0x826994189e5dbbf2L,0x67236d4a5836cabbL,"jetbrains.mps.lang.migration.util.structure.RefactoringStep")));
    SPropertyOperations.set(refactoringStep,MetaAdapterFactory.getProperty(0x9882f4ad195546feL,0x826994189e5dbbf2L,0x67236d4a5836cabbL,0x67236d4a5836cabcL,"fromVersion"),"" + (version));
    ListSequence.fromList(SLinkOperations.getChildren(refactoringStep,MetaAdapterFactory.getContainmentLink(0x9882f4ad195546feL,0x826994189e5dbbf2L,0x67236d4a5836cabbL,0x67236d4a5836d7f3L,"part"))).addSequence(ListSequence.fromList(myMoveNodeItems));
    SModel model=LanguageAspect.MIGRATION.getOrCreate(sourceModule);
    SModelInternal m=(SModelInternal)(SModel)model;
    m.addLanguage(MetaAdapterFactory.getLanguage(MetaIdFactory.langId(0x9882f4ad195546feL,0x826994189e5dbbf2L),"jetbrains.mps.lang.migration.util"));
    SModelOperations.addRootNode(model,refactoringStep);
    sourceModule.setModuleVersion(version + 1);
  }
}
