{
  final SNode gv=SLinkOperations.getTarget(_quotation_createNode_3484lm_a0a0a0(),"classifier",false);
  Iterable<String> setgv=ListSequence.fromList(SLinkOperations.getTargets(ListSequence.fromList(SLinkOperations.getTargets(node,"annotation",true)).findFirst(new IWhereFilter<SNode>(){
    public boolean accept(    SNode ann){
      return SLinkOperations.getTarget(ann,"annotation",false) == gv;
    }
  }
),"value",true)).translate(new ITranslator2<SNode,SNode>(){
    public Iterable<SNode> translate(    SNode av){
      return SLinkOperations.getTargets(SNodeOperations.as(SLinkOperations.getTarget(av,"value",true),"jetbrains.mps.baseLanguage.structure.ArrayLiteral"),"item",true);
    }
  }
).select(new ISelector<SNode,String>(){
    public String select(    SNode it){
      return SPropertyOperations.getString(SNodeOperations.as(it,"jetbrains.mps.baseLanguage.structure.StringLiteral"),"value");
    }
  }
);
  return Sequence.fromIterable(Variants.availableVariants()).subtract(Sequence.fromIterable(setgv)).toListSequence();
}
