{
  final SNode gv=SLinkOperations.getTarget(_quotation_createNode_3484lm_a0a0a0_0(),"classifier",false);
  SNode ann=ListSequence.fromList(SLinkOperations.getTargets(node,"annotation",true)).findFirst(new IWhereFilter<SNode>(){
    public boolean accept(    SNode ann){
      return SLinkOperations.getTarget(ann,"annotation",false) == gv;
    }
  }
);
  if ((ann == null)) {
    ann=ListSequence.fromList(SLinkOperations.getTargets(node,"annotation",true)).addElement(_quotation_createNode_3484lm_a0a0a0c0a());
  }
  ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.as(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(ann,"value",true)).first(),"value",true),"jetbrains.mps.baseLanguage.structure.ArrayLiteral"),"item",true)).addElement(_quotation_createNode_3484lm_a0a3a0(myParameter));
  IModule langToDep=Variants.moduleToGenerate(myParameter);
  ModuleReference langRefToEng=langToDep.getModuleReference();
  IModule module=SNodeOperations.getModel(node).getModelDescriptor().getModule();
  for (  IModule depOn : ModuleUtil.depsToModules(module.getDependencies())) {
    if (depOn.equals(langToDep)) {
      langToDep=null;
      break;
    }
  }
  if (langToDep != null) {
    SNodeOperations.getModel(node).getModelDescriptor().getModule().addDependency(langToDep.getModuleReference(),false);
  }
  for (  ModuleReference eng : ((jetbrains.mps.smodel.SModel)SNodeOperations.getModel(node)).engagedOnGenerationLanguages()) {
    if (eng.equals(langRefToEng)) {
      langRefToEng=null;
      break;
    }
  }
  if (langRefToEng != null) {
    ((jetbrains.mps.smodel.SModel)SNodeOperations.getModel(node)).addEngagedOnGenerationLanguage(langRefToEng);
  }
}
