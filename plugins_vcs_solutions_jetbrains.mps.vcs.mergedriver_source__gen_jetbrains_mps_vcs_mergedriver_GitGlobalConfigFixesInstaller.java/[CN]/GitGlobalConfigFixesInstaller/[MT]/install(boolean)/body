{
  if (!(PluginUtil.isGitPluginEnabled())) {
    return AbstractInstaller.State.INSTALLED;
  }
  try {
    String currentValue=GitConfigUtil.getValue(myProject,myProject.getBaseDir(),GitGlobalConfigFixesInstaller.CORE_AUTOCRLF);
    if (CORE_AUTOCRLF_VALUE.equals(currentValue)) {
      return AbstractInstaller.State.INSTALLED;
    }
  }
 catch (  VcsException e) {
    if (!(dryRun)) {
      if (log.isWarnEnabled()) {
        log.warn("Can't get value",e);
      }
    }
    return AbstractInstaller.State.NOT_INSTALLED;
  }
  if (dryRun) {
    return AbstractInstaller.State.NOT_INSTALLED;
  }
  try {
    setGlobalProperty(myProject,CORE_AUTOCRLF,CORE_AUTOCRLF_VALUE);
    return AbstractInstaller.State.INSTALLED;
  }
 catch (  VcsException e) {
    if (log.isWarnEnabled()) {
      log.warn("Can't set value",e);
    }
    Messages.showErrorDialog(myProject,"Can't set Git global property: " + e.getMessage(),"Git Global property");
    return AbstractInstaller.State.NOT_INSTALLED;
  }
}
