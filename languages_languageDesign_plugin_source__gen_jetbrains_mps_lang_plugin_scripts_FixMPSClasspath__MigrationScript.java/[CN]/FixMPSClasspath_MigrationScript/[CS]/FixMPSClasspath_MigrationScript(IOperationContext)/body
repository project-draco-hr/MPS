{
  super("Fix MPS Bootstrap Stubs");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPS.Core -> MPS.Core / MPS.OpenAPI / Annotations; fix MPS.Platform/Worbench refs";
    }
    public String getAdditionalInfo(){
      return "MPS.Core -> MPS.Core / MPS.OpenAPI / Annotations; fix MPS.Platform/Worbench refs";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.core.structure.BaseConcept";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return Sequence.fromIterable(SNodeOperations.getReferences(node)).where(new IWhereFilter<SReference>(){
        public boolean accept(        SReference it){
          SModelId mid=it.getTargetSModelReference().getModelId();
          if (!(mid instanceof jetbrains.mps.smodel.SModelId.ForeignSModelId)) {
            return false;
          }
          String modelId=((jetbrains.mps.smodel.SModelId.ForeignSModelId)mid).getId();
          return modelId.contains("6ed54515-acc8-4d1e-a16c-9fd6cfe951ea") || modelId.contains("1ed103c3-3aa6-49b7-9c21-6765ee11f224") || modelId.contains("742f6602-5a2f-4313-aa6e-ae1cd4ffdc61")|| modelId.contains("86441d7a-e194-42da-81a5-2161ec62a379");
        }
      }
).isNotEmpty();
    }
    public void doUpdateInstanceNode(    SNode node){
      MpsClasspathRefUtil.updateReferencesToMpsClasspath(node);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
