{
  SNode opExpr=SConceptOperations.createNewNode("jetbrains.mps.bootstrap.smodelLanguage.structure.SNodeOperationExpression",null);
  SNode op=null;
  SLinkOperations.setTarget(opExpr,"leftExpression",expression,true);
  Cardinality card=Cardinality.parseValue(SPropertyOperations.getString_def(param,"sourceCardinality","0..1"));
  if (card == Cardinality._0__1 || card == Cardinality._1) {
    op=SConceptOperations.createNewNode("jetbrains.mps.bootstrap.smodelLanguage.structure.SLinkAccess",null);
    SLinkOperations.setTarget(op,"link",param,false);
  }
 else {
    op=SConceptOperations.createNewNode("jetbrains.mps.bootstrap.smodelLanguage.structure.SLinkListAccess",null);
    SLinkOperations.setTarget(op,"link",param,false);
  }
  SLinkOperations.setTarget(opExpr,"nodeOperation",op,true);
  return opExpr;
}
