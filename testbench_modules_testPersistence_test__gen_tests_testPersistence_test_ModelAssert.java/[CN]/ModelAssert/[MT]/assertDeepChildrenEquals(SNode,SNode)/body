{
  Set<SContainmentLink> roles=new HashSet<SContainmentLink>();
  for (  SNode child : expectedNode.getChildren()) {
    roles.add(child.getContainmentLink());
  }
  for (  SNode child : actualNode.getChildren()) {
    roles.add(child.getContainmentLink());
  }
  for (  SContainmentLink role : roles) {
    Iterable<? extends SNode> expectedChildren=expectedNode.getChildren(role);
    Iterable<? extends SNode> actualChildren=actualNode.getChildren(role);
    int esize=IterableUtil.asCollection(expectedChildren).size();
    int asize=IterableUtil.asCollection(actualChildren).size();
    Assert.assertEquals(getErrorString("child count in role " + role,expectedNode,actualNode),esize,asize);
    Iterator<? extends SNode> actualIterator=actualChildren.iterator();
    for (    SNode expectedChild : expectedChildren) {
      SNode actualChild=actualIterator.next();
      Assert.assertEquals(getErrorString("children in role " + role,expectedNode,actualNode),expectedChild.getNodeId(),actualChild.getNodeId());
      assertDeepNodeEquals(expectedChild,actualChild);
    }
  }
}
