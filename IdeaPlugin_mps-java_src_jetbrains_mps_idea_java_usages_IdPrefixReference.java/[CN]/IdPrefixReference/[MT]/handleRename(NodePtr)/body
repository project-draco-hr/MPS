{
  SNodePointer oldNode=(SNodePointer)myTarget;
  SNode source=((MPSPsiNode)myParent).getSNodeReference().resolve(MPSModuleRepository.getInstance());
  String oldId=source.getReference(myRole).getTargetNodeId().toString();
  String what=oldNode.getNodeId().toString();
  what=what.startsWith("~") ? what.substring(1) : what;
  String replacement=newNode.getNodeId().toString();
  replacement=replacement.startsWith("~") ? replacement.substring(1) : replacement;
  String newId=carefullyReplace(oldId,what,replacement);
  source.setReference(myRole,StaticReference.create(myRole,source,newNode.getSModelReference(),new Foreign(newId)));
  if (!oldNode.getModelReference().equals(newNode.getSModelReference())) {
    SModel model=((MPSPsiNode)myParent).getSNodeReference().resolve(MPSModuleRepository.getInstance()).getModel();
    SModelReference newTargetModel=newNode.getSModelReference();
    new ModelImports(model).addModelImport(newTargetModel);
  }
}
