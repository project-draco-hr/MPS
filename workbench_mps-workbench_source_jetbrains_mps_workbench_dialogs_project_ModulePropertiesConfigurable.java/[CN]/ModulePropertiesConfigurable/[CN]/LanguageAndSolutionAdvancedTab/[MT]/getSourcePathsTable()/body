{
  myPathsTableModel=new PathsTableModel();
  final JBTable sourcePathTable=new JBTable(myPathsTableModel);
  sourcePathTable.setTableHeader(null);
  ToolbarDecorator decorator=ToolbarDecorator.createDecorator(sourcePathTable);
  decorator.setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton anActionButton){
      myPathsTableModel.add((new PathChooser()).compute());
    }
  }
).setRemoveAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton anActionButton){
      TableUtil.removeSelectedItems(sourcePathTable);
      myPathsTableModel.fireTableDataChanged();
    }
  }
).setUpAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton anActionButton){
      if (sourcePathTable.isEditing())       sourcePathTable.getCellEditor().stopCellEditing();
      final int min=sourcePathTable.getSelectionModel().getMinSelectionIndex();
      final int max=sourcePathTable.getSelectionModel().getMaxSelectionIndex();
      sourcePathTable.getSelectionModel().setSelectionInterval((min - 1 < 0 ? 0 : min - 1),(max - 1 < 0 ? 0 : max - 1));
    }
  }
).setDownAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton anActionButton){
      if (sourcePathTable.isEditing())       sourcePathTable.getCellEditor().stopCellEditing();
      final int min=sourcePathTable.getSelectionModel().getMinSelectionIndex();
      final int max=sourcePathTable.getSelectionModel().getMaxSelectionIndex();
      sourcePathTable.getSelectionModel().setSelectionInterval((min + 1 >= sourcePathTable.getRowCount() ? 0 : min + 1),(max + 1 >= sourcePathTable.getRowCount() ? 0 : max + 1));
    }
  }
);
  JPanel table=decorator.createPanel();
  table.setBorder(IdeBorderFactory.createTitledBorder("Source Paths",true));
  return table;
}
