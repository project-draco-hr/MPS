{
  List<MPSPropertiesAnActionButton> list=new ArrayList<MPSPropertiesAnActionButton>();
  list.add(new MPSPropertiesAnActionButton(PropertiesBundle.message("mps.properties.configurable.module.dependenciestab.actions.runtime"),IdeIcons.SOLUTION_ICON){
    @Override public void actionPerformed(    AnActionEvent e){
      List<ModuleReference> list=(new SolutionChooser(new IBindedDialog(){
        @Override public JComponent getMainComponent(){
          return getTabComponent();
        }
        @Override public IOperationContext getOperationContext(){
          return null;
        }
        @Override public IScope getModuleScope(){
          return null;
        }
        @Override public IScope getProjectScope(){
          return null;
        }
        @Override public void addBinding(        AutoBinding binding){
        }
      }
)).compute();
      for (      ModuleReference reference : list)       myRuntimeTableModel.addItem(new ModuleDepTableItem(reference,DependenciesTableItemRole.RUNTIME));
    }
  }
);
  list.add(new MPSPropertiesAnActionButton(PropertiesBundle.message("mps.properties.configurable.module.dependenciestab.actions.importedmodel"),IdeIcons.MODEL_ICON){
    @Override public void actionPerformed(    AnActionEvent e){
      IScope scope=MPSModuleRepository.getInstance().getModuleById(myModuleDescriptor.getId()).getScope();
      List<jetbrains.mps.smodel.SModelReference> list=(new ModelChooser(new IBindedDialog(){
        @Override public JComponent getMainComponent(){
          return getTabComponent();
        }
        @Override public IOperationContext getOperationContext(){
          return null;
        }
        @Override public IScope getModuleScope(){
          return null;
        }
        @Override public IScope getProjectScope(){
          return null;
        }
        @Override public void addBinding(        AutoBinding binding){
        }
      }
)).compute();
      for (      jetbrains.mps.smodel.SModelReference reference : list)       myRuntimeTableModel.addItem(new ModelDepTableItem(reference,DependenciesTableItemRole.ACCESSORY,scope));
    }
  }
);
  return list;
}
