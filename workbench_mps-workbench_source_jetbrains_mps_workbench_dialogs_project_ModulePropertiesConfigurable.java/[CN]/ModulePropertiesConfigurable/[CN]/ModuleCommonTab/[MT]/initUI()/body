{
  super.initUI();
  if (myConfigurableItem instanceof DevKit) {
    myModuleDependenciesTab=new ModuleDependenciesTab();
    JComponent component=getTabComponent();
    component.add(myModuleDependenciesTab.getTabComponent(),new GridConstraints(2,0,1,2,GridConstraints.ANCHOR_CENTER,GridConstraints.FILL_BOTH,GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,null,null,null,0,false));
    setTabComponent(component);
    return;
  }
  JComponent component=getTabComponent();
  final JBTable tableRoots=new JBTable();
  tableRoots.setShowHorizontalLines(false);
  tableRoots.setShowVerticalLines(false);
  myRootsTableModel=new ModuleRootsTableModel(myModuleDescriptor);
  tableRoots.setModel(myRootsTableModel);
  tableRoots.setTableHeader(null);
  ToolbarDecorator decorator=ToolbarDecorator.createDecorator(tableRoots);
  decorator.setAddAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton anActionButton){
      ModelRootChooser modelRootChooser=new ModelRootChooser(new IBindedDialog(){
        @Override public JComponent getMainComponent(){
          return getTabComponent();
        }
        @Override public IOperationContext getOperationContext(){
          return null;
        }
        @Override public IScope getModuleScope(){
          return null;
        }
        @Override public IScope getProjectScope(){
          return null;
        }
        @Override public void addBinding(        AutoBinding binding){
        }
      }
,myConfigurableItem.getBundleHome());
      myRootsTableModel.add(modelRootChooser.compute());
    }
  }
).setRemoveAction(new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton anActionButton){
      TableUtil.removeSelectedItems(tableRoots);
    }
  }
);
  decorator.setToolbarBorder(IdeBorderFactory.createBorder());
  JPanel table=decorator.createPanel();
  table.setBorder(IdeBorderFactory.createTitledBorder(PropertiesBundle.message("mps.properties.configurable.module.commontab.modelrootsborder"),false));
  myEntriesEditor=new ContentEntriesEditor(myModuleDescriptor);
  Splitter splitter=new Splitter(true);
  splitter.setFirstComponent(table);
  splitter.setSecondComponent(myEntriesEditor.getComponent());
  component.add(splitter,new GridConstraints(2,0,1,2,GridConstraints.ANCHOR_CENTER,GridConstraints.FILL_BOTH,GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,null,null,null,0,false));
  setTabComponent(component);
}
