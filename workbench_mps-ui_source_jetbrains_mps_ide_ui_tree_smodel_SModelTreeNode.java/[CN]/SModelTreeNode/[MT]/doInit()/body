{
  try {
    myInitializing=true;
    removeAllChildren();
    myPackageNodes.clear();
    myRootGroups.clear();
    for (    SModelTreeNode newChildModel : myChildModelTreeNodes) {
      DefaultTreeModel treeModel=(DefaultTreeModel)getTree().getModel();
      int index=myChildModelTreeNodes.indexOf(newChildModel);
      treeModel.insertNodeInto(newChildModel,this,index);
    }
    org.jetbrains.mps.openapi.model.SModel model=getModel();
    Iterable<SNode> iter=new ConditionalIterable<SNode>(model.getRootNodes(),myNodesCondition);
    List<SNode> filteredRoots=new ArrayList<SNode>();
    for (    SNode node : iter) {
      filteredRoots.add(node);
    }
    List<SNode> sortedRoots=SortUtil.sortNodesByPresentation(filteredRoots);
    Comparator<Object> childrenComparator=getTree().getChildrenComparator();
    if (childrenComparator != null) {
      Collections.sort(sortedRoots,childrenComparator);
    }
    for (    SNode sortedRoot : sortedRoots) {
      MPSTreeNodeEx treeNode=createSNodeTreeNode(sortedRoot,myNodesCondition);
      MPSTreeNode group=getNodeGroupFor(sortedRoot);
      if (group != null) {
        group.add(treeNode);
      }
 else {
        add(treeNode);
      }
    }
    DefaultTreeModel treeModel=(DefaultTreeModel)getTree().getModel();
    treeModel.nodeStructureChanged(this);
  }
  finally {
    myInitialized=true;
    myInitializing=false;
  }
}
