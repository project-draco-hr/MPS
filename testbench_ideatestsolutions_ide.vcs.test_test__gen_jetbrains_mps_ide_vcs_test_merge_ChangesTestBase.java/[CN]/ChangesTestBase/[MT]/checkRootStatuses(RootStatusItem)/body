{
  final NodeFileStatusMappingExt fsm=myIdeaProject.getComponent(NodeFileStatusMappingExt.class);
  final SModel model=myDiff.getModelDescriptor();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      ListSequence.fromList(SModelOperations.roots(model,null)).visitAll(new IVisitor<SNode>(){
        public void visit(        SNode r){
          fsm.getStatus(r);
        }
      }
);
    }
  }
);
  myWaitHelper.waitForChangesManager();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      ListSequence.fromList(SModelOperations.roots(model,null)).visitAll(new IVisitor<SNode>(){
        public void visit(        final SNode r){
          FileStatus actual=fsm.getStatus(r);
          FileStatus expected=check_l1nwgz_a0b0a0a0a0g0z(Sequence.fromIterable(Sequence.fromArray(statuses)).findFirst(new IWhereFilter<RootStatusItem>(){
            public boolean accept(            RootStatusItem it){
              return it.rootName().equals(r.getName());
            }
          }
));
          if (expected == null) {
            expected=FileStatus.NOT_CHANGED;
          }
          Assert.assertSame(expected,actual);
        }
      }
);
    }
  }
);
}
