{
  if (myModelDescriptor == null && myNewModel) {
    if (createPerRootModel(e))     return;
  }
  if (myModelDescriptor == null)   return;
  if (myConceptFqNameToNodePointerMap.isEmpty()) {
    ImportHelper.addLanguageImport(myProject,myModelDescriptor.getModule(),myModelDescriptor.getModule().getModel(myModelDescriptor.getModelId()),null,new Runnable(){
      @Override public void run(){
        final ProjectView projectView=ProjectView.getInstance(myProject);
        projectView.refresh();
      }
    }
);
    return;
  }
  final MyCreateFromTemplateDialog dialog=new MyCreateFromTemplateDialog(myProject);
  dialog.setTitle(MPSBundle.message("create.new.root.dialog.title"));
  myOperationContext.getProject().getModelAccess().runReadAction(new Runnable(){
    @Override public void run(){
      for (      Map.Entry<String,SNodeReference> entry : myConceptFqNameToNodePointerMap.entrySet()) {
        String conceptFqName=entry.getKey();
        SNode concept=entry.getValue().resolve(MPSModuleRepository.getInstance());
        dialog.getKindCombo().addItem(NodePresentationUtil.matchingText(concept),IconManager.getIconForConceptFQName(conceptFqName),conceptFqName);
        dialog.setTemplateKindComponentsVisible(true);
      }
    }
  }
);
  dialog.show();
  final SNodeReference rootNode=dialog.getRootNode();
  if (rootNode != null) {
    FileEditorManager.getInstance(myProject).openFile(MPSNodesVirtualFileSystem.getInstance().getFileFor(rootNode),true);
  }
}
