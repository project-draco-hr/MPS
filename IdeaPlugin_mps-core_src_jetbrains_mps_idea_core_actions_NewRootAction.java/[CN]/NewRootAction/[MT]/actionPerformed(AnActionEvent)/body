{
  final CreateFromTemplateDialog dialog=new CreateFromTemplateDialog(myProject){
    @Override protected void doOKAction(){
      final SNodePointer conceptPointer=myConceptFqNameToNodePointerMap.get(getKindCombo().getSelectedName());
      ModelAccess.instance().runWriteActionInCommand(new Runnable(){
        @Override public void run(){
          SNode concept=conceptPointer.getNode();
          SModel model=myModelDescriptor.getSModel();
          SNode newNode=NodeFactoryManager.createNode(concept,null,null,model,myOperationContext.getScope());
          ((jetbrains.mps.smodel.SNode)newNode).setName(getNameField().getText());
          model.addRoot(newNode);
          myModelDescriptor.save();
        }
      }
,myOperationContext.getProject());
      super.doOKAction();
    }
  }
;
  dialog.setTitle(MPSBundle.message("create.new.root.dialog.title"));
  ModelAccess.instance().runReadAction(new Runnable(){
    @Override public void run(){
      for (      Map.Entry<String,SNodePointer> entry : myConceptFqNameToNodePointerMap.entrySet()) {
        String conceptFqName=entry.getKey();
        SNode concept=entry.getValue().getNode();
        dialog.getKindCombo().addItem(NodePresentationUtil.matchingText(concept),IconManager.getIconForConceptFQName(conceptFqName),conceptFqName);
      }
    }
  }
);
  dialog.show();
}
