{
  super.update(e);
  ActionPlace place=e.getData(MPSDataKeys.PLACE);
  if (e.getInputEvent() instanceof KeyEvent) {
    if (!getPlaces().contains(null)) {
      if (!getPlaces().contains(place)) {
        disable(e.getPresentation());
        return;
      }
    }
  }
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      if (myDisableOnNoProject && e.getData(PlatformDataKeys.PROJECT) == null) {
        disable(e.getPresentation());
        return;
      }
      if (!collectActionData(e)) {
        disable(e.getPresentation());
        return;
      }
      THashMap<String,Object> params=new THashMap<String,Object>();
      if (!collectActionData(e,params)) {
        disable(e.getPresentation());
        return;
      }
      doUpdate(e);
      doUpdate(e,params);
    }
  }
);
}
