{
  super("Extract deprecated Icon accessors to plugin aspect");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "update icon bundle";
    }
    public String getAdditionalInfo(){
      return "update icon bundle";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.behavior.structure.ConceptBehavior";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return ListSequence.fromList(SLinkOperations.getTargets(node,"method",true)).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode m){
          return ListSequence.fromList(SNodeOperations.getDescendants(m,"jetbrains.mps.lang.resources.structure.IconResourceExpression",false,new String[]{})).isNotEmpty();
        }
      }
);
    }
    public void doUpdateInstanceNode(    SNode node){
      ExtractIconsUtil.updateIconResourceBundle(node);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
