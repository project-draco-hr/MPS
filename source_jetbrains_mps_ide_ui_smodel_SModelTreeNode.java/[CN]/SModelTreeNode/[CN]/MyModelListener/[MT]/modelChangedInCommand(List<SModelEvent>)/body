{
  getTree().rebuildTree(new Runnable(){
    public void run(){
      final Set<SNode> addedRoots=new HashSet<SNode>();
      final Set<SNode> removedRoots=new HashSet<SNode>();
      final Set<SNode> addedNodes=new HashSet<SNode>();
      final Set<SNode> removedNodes=new HashSet<SNode>();
      final Set<SNode> nodesWithChangedProperties=new HashSet<SNode>();
      final Set<SNode> nodesWithChangedRefs=new HashSet<SNode>();
      for (      SModelEvent event : events) {
        event.accept(new SModelEventVisitor(){
          public void visitRootEvent(          SModelRootEvent event){
            if (event.isAdded()) {
              addedRoots.add(event.getRoot());
              removedRoots.remove(event.getRoot());
            }
            if (event.isRemoved()) {
              removedRoots.add(event.getRoot());
              addedRoots.remove(event.getRoot());
            }
          }
          public void visitChildEvent(          SModelChildEvent event){
            if (event.isAdded()) {
              addedNodes.add(event.getChild());
            }
            if (event.isRemoved()) {
              removedNodes.add(event.getChild());
            }
          }
          public void visitPropertyEvent(          SModelPropertyEvent event){
            nodesWithChangedProperties.add(event.getNode());
          }
          public void visitReferenceEvent(          SModelReferenceEvent event){
            nodesWithChangedRefs.add(event.getReference().getSourceNode());
          }
        }
);
      }
      addAndRemoveRoots(removedRoots,addedRoots);
      addAndRemoveVisibleChildren(removedNodes,addedNodes);
      updateChangedProperties(nodesWithChangedProperties);
      updateChangedRefs(nodesWithChangedRefs);
    }
  }
,false);
}
