{
  DefaultTreeModel treeModel=(DefaultTreeModel)getTree().getModel();
  final List<SNode> allRoots=new ArrayList<SNode>(getSModelDescriptor().getSModel().getRoots());
  Collections.sort(allRoots,new ToStringComparator());
  for (  SNode node : nodesWithChangedProperties) {
    SNodeTreeNode treeNode=(SNodeTreeNode)findExactChildWith(node);
    if (treeNode == null)     continue;
    if (node.isRoot()) {
      int currentIndex=getIndex(treeNode);
      int newIndex=allRoots.indexOf(node);
      if (currentIndex != newIndex) {
        treeModel.removeNodeFromParent(treeNode);
        treeModel.insertNodeInto(treeNode,SModelTreeNode.this,newIndex);
      }
    }
    if (treeNode.isInitialized() && showPropertiesAndReferences()) {
      MPSTreeNodeEx propsNode=(MPSTreeNodeEx)treeNode.getChildAt(0);
      propsNode.update();
      propsNode.init();
      treeModel.nodeStructureChanged(propsNode);
    }
    treeModel.nodeChanged(treeNode);
  }
}
