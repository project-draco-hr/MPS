{
  removeAllChildren();
  for (  SNodeGroupTreeNode group : myRootGroups) {
    add(group);
  }
  SModel model=getSModel();
  if (!model.hasSModelCommandListener(myModelListener)) {
    model.addSModelCommandListener(myModelListener);
  }
  List<SNode> filteredRoots=CollectionUtil.filter(model.getRoots(),new Condition<SNode>(){
    public boolean met(    SNode object){
      return !(BaseAdapter.fromNode(object) instanceof AttributeConcept);
    }
  }
);
  List<SNode> sortedRoots=SortUtil.sortNodes(filteredRoots);
  for (  SNode sortedRoot : sortedRoots) {
    MPSTreeNodeEx treeNode=createSNodeTreeNode(sortedRoot,getOperationContext());
    MPSTreeNode group=getGroupNodeFor(sortedRoot);
    if (group != null) {
      group.add(treeNode);
    }
 else {
      add(treeNode);
    }
  }
  DefaultTreeModel treeModel=(DefaultTreeModel)getTree().getModel();
  treeModel.nodeStructureChanged(this);
  myInitialized=true;
}
