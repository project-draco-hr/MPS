{
  this.addNodeById("995475547969867889");
  this.addNodeById("995475547969867939");
  new ConvertAnonymousRefactoring(SNodeOperations.cast(this.getNodeById("995475547969867898"),"jetbrains.mps.baseLanguage.structure.AnonymousClass"),"MyComparable").doRefactor();
{
    List<SNode> nodesBefore=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("995475547969867890"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    List<SNode> nodesAfter=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("995475547969867969"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    Assert.assertNull("nodes '" + nodesBefore + "' and '"+ nodesAfter+ "' do not match!",NodesMatcher.matchNodes(nodesBefore,nodesAfter));
  }
}
