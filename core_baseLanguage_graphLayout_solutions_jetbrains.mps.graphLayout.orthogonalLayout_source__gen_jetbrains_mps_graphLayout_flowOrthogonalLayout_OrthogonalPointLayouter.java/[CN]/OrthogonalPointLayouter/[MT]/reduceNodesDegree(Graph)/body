{
  Set<Edge> newEdges=SetSequence.fromSet(new HashSet<Edge>());
  List<Node> realNodes=ListSequence.fromList(new ArrayList<Node>());
  ListSequence.fromList(realNodes).addSequence(ListSequence.fromList(graph.getNodes()));
  for (  Node node : ListSequence.fromList(realNodes)) {
    List<Edge> edges=node.getEdges();
    if (ListSequence.fromList(edges).count() > 4) {
      ListSequence.fromList(edges).removeLastElement();
      List<Node> newNodes=ListSequence.fromList(new ArrayList<Node>());
      ListSequence.fromList(newNodes).addElement(node);
      for (      Edge edge : ListSequence.fromList(edges)) {
        Node newNode=graph.addDummyNode();
        ListSequence.fromList(newNodes).addElement(newNode);
        newNode.addEdgeTo(edge.getOpposite(node));
        edge.removeFromGraph();
      }
      Node prev=null;
      for (      Node cur : ListSequence.fromList(newNodes)) {
        if (prev == null) {
          SetSequence.fromSet(newEdges).addElement(cur.addEdgeTo(ListSequence.fromList(newNodes).last()));
        }
 else {
          SetSequence.fromSet(newEdges).addElement(cur.addEdgeTo(prev));
        }
        prev=cur;
      }
    }
  }
  return newEdges;
}
