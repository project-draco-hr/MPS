{
  FeatureUsageTracker.getInstance().triggerFeatureUsed("refactoring.introduceConstant");
  final SNode nodeToRefactor=new ModelComputeRunnable<SNode>(new Computable<SNode>(){
    public SNode compute(){
      return SNodeOperations.getNodeAncestor(((SNode)MapSequence.fromMap(_params).get("node")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506fL,"jetbrains.mps.baseLanguage.structure.Expression"),true,false);
    }
  }
).runRead(((EditorContext)MapSequence.fromMap(_params).get("editorContext")).getRepository().getModelAccess());
  final Wrappers._T<IntroduceConstantRefactoring> refactoring=new Wrappers._T<IntroduceConstantRefactoring>();
  final Wrappers._T<String> error=new Wrappers._T<String>();
  ((EditorContext)MapSequence.fromMap(_params).get("editorContext")).getRepository().getModelAccess().runReadAction(new Runnable(){
    public void run(){
      refactoring.value=new IntroduceConstantRefactoring();
      error.value=refactoring.value.init(nodeToRefactor,((EditorComponent)MapSequence.fromMap(_params).get("component")));
    }
  }
);
  if (error.value == null) {
    IntroduceConstantDialog dialog=new IntroduceConstantDialog(((Project)MapSequence.fromMap(_params).get("projct")),refactoring.value,((EditorContext)MapSequence.fromMap(_params).get("editorContext")));
    dialog.show();
  }
 else {
    JOptionPane.showMessageDialog(((EditorComponent)MapSequence.fromMap(_params).get("component")),error.value,"Error",JOptionPane.ERROR_MESSAGE);
  }
}
