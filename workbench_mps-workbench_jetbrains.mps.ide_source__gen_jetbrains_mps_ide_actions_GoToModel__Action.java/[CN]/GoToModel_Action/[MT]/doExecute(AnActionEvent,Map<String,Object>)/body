{
  FeatureUsageTracker.getInstance().triggerFeatureUsed("navigation.goto.model");
  final MPSProject mpsProject=((MPSProject)MapSequence.fromMap(_params).get("project"));
  Condition<SModel> filter=new Condition<SModel>(){
    public boolean met(    SModel m){
      return SModelStereotype.isUserModel(m) || SModelStereotype.isStubModel(m);
    }
  }
;
  final BaseModelModel goToModelModel=new BaseModelModel(mpsProject,new ConditionalScope(mpsProject.getScope(),null,filter),new ConditionalScope(new FilteredGlobalScope(),null,filter));
  ChooseByNamePopup popup=MpsPopupFactory.createPackagePopup(mpsProject.getProject(),goToModelModel,GoToModel_Action.this);
  popup.setShowListForEmptyPattern(true);
  popup.invoke(new ChooseByNamePopupComponent.Callback(){
    public void elementChosen(    Object p0){
      SModelReference modelRef=goToModelModel.getModelObject(p0);
      if (modelRef != null) {
        new ProjectPaneNavigator(mpsProject).shallFocus(true).select(modelRef);
      }
    }
  }
,ModalityState.current(),false);
}
