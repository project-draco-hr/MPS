{
  Set<IModule> modules=SetSequence.<IModule>fromSet(new HashSet<IModule>());
  for (  SNode moduleRef : ListSequence.<SNode>fromList(SLinkOperations.getTargets(thisNode,"moduleReference",true))) {
    IModule module=Module_Behavior.call_getModule_1213877515148(SLinkOperations.getTarget(moduleRef,"module",false));
    SetSequence.fromSet(modules).addElement(module);
  }
  IClassPathItem classpath=AbstractModule.getDependenciesClasspath(modules,false);
  List<String> stringClasspath=ListSequence.<String>fromList(ModuleUtil.retrieveClassPath(classpath)).<String>select(new ISelector<String,String>(){
    public String select(    String it){
      return it.replace(File.separator,Util.SEPARATOR);
    }
  }
).distinct().toListSequence();
  return ModuleCycle_Behavior.createPathHolders_1218716903754(stringClasspath,ModuleCycle_Behavior.call_getBasedir_1218647622991(thisNode),SLinkOperations.getTargets(SNodeOperations.getAncestor(thisNode,"jetbrains.mps.build.packaging.structure.Layout",true,true),"macro",true));
}
