{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x42501924d0bd1913L,0x42501924d0bd1914L,"inequation"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x42501924d0bd1913L,0x42501924d0bd1914L),this){
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public boolean hasPresentation(){
          return true;
        }
        @Override public String getPresentation(        final IOperationContext operationContext,        final ReferencePresentationContext _context){
          if (isNotEmptyString(SPropertyOperations.getString(_context.getParameterNode(),MetaAdapterFactory.getProperty(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x11a342c1412L,0x42501924d0bd6481L,"label")))) {
            return SPropertyOperations.getString(_context.getParameterNode(),MetaAdapterFactory.getProperty(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x11a342c1412L,0x42501924d0bd6481L,"label")) + " " + SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(_context.getParameterNode()),MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0x46ab0ad5826c74caL,"conceptAlias"));
          }
 else {
            return SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(_context.getParameterNode()),MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0x46ab0ad5826c74caL,"conceptAlias"));
          }
        }
      }
;
    }
  }
);
  return references;
}
