{
  if (RoleIdsComponent.isEnabled()) {
    for (    SModel.ImportElement i : ListSequence.<SModel.ImportElement>fromList(myModel.getAdditionalModelVersions())) {
      RoleIdsComponent.modelVersionRead(i);
    }
    for (    final SNodePointer ptr : SetSequence.<SNodePointer>fromSet(MapSequence.fromMap(myNodeRoleMap).keySet())) {
      ListSequence.<SNode>fromList(MapSequence.<SNodePointer,List<SNode>>fromMap(myNodeRoleMap).get(ptr)).visitAll(new IVisitor<SNode>(){
        public void visit(        SNode n){
          RoleIdsComponent.nodeRoleRead(n,ptr);
        }
      }
);
    }
    for (    final SNodePointer ptr : SetSequence.<SNodePointer>fromSet(MapSequence.fromMap(myNodeTypeMap).keySet())) {
      ListSequence.<SNode>fromList(MapSequence.<SNodePointer,List<SNode>>fromMap(myNodeTypeMap).get(ptr)).visitAll(new IVisitor<SNode>(){
        public void visit(        SNode n){
          RoleIdsComponent.conceptRead(n,ptr);
        }
      }
);
    }
    for (    final SNodePointer ptr : SetSequence.<SNodePointer>fromSet(MapSequence.fromMap(myRefRoleMap).keySet())) {
      ListSequence.<SReference>fromList(MapSequence.<SNodePointer,List<SReference>>fromMap(myRefRoleMap).get(ptr)).visitAll(new IVisitor<SReference>(){
        public void visit(        SReference r){
          RoleIdsComponent.referenceRoleRead(r,ptr);
        }
      }
);
    }
    for (    final SNodePointer ptr : SetSequence.<SNodePointer>fromSet(MapSequence.fromMap(myPropNameMap).keySet())) {
      ListSequence.<Pair<SNode,String>>fromList(MapSequence.<SNodePointer,List<Pair<SNode,String>>>fromMap(myPropNameMap).get(ptr)).visitAll(new IVisitor<Pair<SNode,String>>(){
        public void visit(        Pair<SNode,String> nP){
          RoleIdsComponent.propertyNameRead(nP.o1,nP.o2,ptr);
        }
      }
);
    }
  }
}
