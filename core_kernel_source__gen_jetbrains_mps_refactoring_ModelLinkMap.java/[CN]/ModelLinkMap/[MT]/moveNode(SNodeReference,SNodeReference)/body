{
  boolean res=false;
  res|=move(myTargetMap,oldPtr,newPtr,new _FunctionTypes._void_P1_E0<StaticReference>(){
    public void invoke(    StaticReference ref){
      ref.setTargetSModelReference(newPtr.getModelReference());
      ref.setTargetNodeId(newPtr.getNodeId());
    }
  }
);
  res|=move(myNodeTypeMap,oldPtr,newPtr,new _FunctionTypes._void_P1_E0<SNode>(){
    public void invoke(    SNode node){
      String modelName=SModelStereotype.withoutStereotype(newPtr.getModelReference().getModelName());
      String name=node.getConcept().getName();
      new SNodeLegacy(node).setConceptFqName(NameUtil.longNameFromNamespaceAndShortName(modelName,name));
    }
  }
);
  move(myNodeRoleMap,oldPtr,newPtr,new _FunctionTypes._void_P1_E0<SNode>(){
    public void invoke(    SNode n){
    }
  }
);
  move(myRefRoleMap,oldPtr,newPtr,new _FunctionTypes._void_P1_E0<SReference>(){
    public void invoke(    SReference r){
    }
  }
);
  move(myPropNameMap,oldPtr,newPtr,new _FunctionTypes._void_P1_E0<Pair<SNode,String>>(){
    public void invoke(    Pair<SNode,String> p){
    }
  }
);
  return res;
}
