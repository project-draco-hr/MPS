{
  SModelDescriptor sourceModel=getModelDescriptor();
  Set<SModelDescriptor> result=new LinkedHashSet<SModelDescriptor>();
  List<Language> languages=getLanguages(scope);
  for (  Language language : languages) {
    for (    SModelDescriptor am : language.getAccessoryModels()) {
      if (am != sourceModel && !result.contains(am)) {
        result.add(am);
      }
    }
  }
  List<SModelDescriptor> imports=importedModels(scope);
  for (  SModelDescriptor importedModel : imports) {
    if (importedModel != sourceModel && !result.contains(importedModel)) {
      result.add(importedModel);
    }
  }
  if (getModelDescriptor() != null) {
    IModule module=getModelDescriptor().getModule();
    if (module != null) {
      result.addAll(module.getImplicitlyImportedModelsFor(getModelDescriptor()));
    }
  }
  return new ArrayList<SModelDescriptor>(result);
}
