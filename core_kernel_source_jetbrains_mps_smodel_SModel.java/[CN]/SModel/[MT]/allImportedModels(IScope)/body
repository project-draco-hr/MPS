{
  SModelDescriptor sourceModel=getModelDescriptor();
  Set<SModelDescriptor> result=new LinkedHashSet<SModelDescriptor>();
  List<Language> languages=getLanguages(scope);
  for (  Language language : languages) {
    for (    SModelDescriptor accessoryModels : language.getAccessoryModels()) {
      if (accessoryModels != sourceModel && !result.contains(accessoryModels)) {
        result.add(accessoryModels);
      }
    }
  }
  Iterator<SModelDescriptor> imports=importedModels(scope);
  while (imports.hasNext()) {
    SModelDescriptor importedModel=imports.next();
    if (importedModel != sourceModel && !result.contains(importedModel)) {
      result.add(importedModel);
    }
  }
  if (getModelDescriptor() != null) {
    IModule module=getModelDescriptor().getModule();
    if (module != null) {
      result.addAll(module.getImplicitlyImportedModelsFor(getModelDescriptor()));
    }
  }
  return new ArrayList<SModelDescriptor>(result);
}
