{
  Set<SModelReference> usedModels=collectUsedModels(this,new HashSet<SModelReference>());
  if (myModelDescriptor != null && !LanguageAspect.STRUCTURE.is(myModelDescriptor))   usedModels.remove(myReference);
  for (  ImportElement elem : myImports) {
    usedModels.remove(elem.getModelReference());
  }
  List<ImportElement> implicitImports=new ArrayList<ImportElement>(usedModels.size());
  for (  ImportElement elem : myImplicitImports) {
    if (usedModels.remove(elem.getModelReference())) {
      implicitImports.add(elem);
    }
  }
  for (  SModelReference ref : usedModels) {
    int version;
    if (RoleIdsComponent.isEnabled()) {
      version=RoleIdsComponent.getModelVersion(ref);
    }
 else {
      SModelDescriptor modelDescriptor=SModelRepository.getInstance().getModelDescriptor(ref);
      version=modelDescriptor instanceof EditableSModelDescriptor ? ((EditableSModelDescriptor)modelDescriptor).getVersion() : -1;
    }
    implicitImports.add(new ImportElement(ref,-1,version));
  }
  myImplicitImports=implicitImports;
}
