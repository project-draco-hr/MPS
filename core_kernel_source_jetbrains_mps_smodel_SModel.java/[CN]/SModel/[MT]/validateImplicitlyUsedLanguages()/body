{
  Set<SLanguage> myUsedLanguages=new HashSet<SLanguage>();
  for (  org.jetbrains.mps.openapi.model.SNode root : getRootNodes()) {
    for (    org.jetbrains.mps.openapi.model.SNode n : SNodeUtil.getDescendants(root)) {
      SConcept conceptId=n.getConcept();
      myUsedLanguages.add(conceptId.getLanguage());
      if (n.getParent() != null) {
        SContainmentLink roleId=n.getContainmentLink();
        myUsedLanguages.add(roleId.getContainingConcept().getLanguage());
      }
      for (      SProperty pid : n.getProperties()) {
        myUsedLanguages.add(pid.getContainingConcept().getLanguage());
      }
      for (      SReference ref : n.getReferences()) {
        myUsedLanguages.add(ref.getReferenceLink().getContainingConcept().getLanguage());
      }
    }
  }
  Map<SLanguage,Integer> myNewImplicitLanguagesIds=new HashMap<SLanguage,Integer>(myUsedLanguages.size());
  for (  SLanguage lang : myLanguagesIds.keySet()) {
    myUsedLanguages.remove(lang);
  }
  for (  Entry<SLanguage,Integer> lang : myImplicitLanguagesIds.entrySet()) {
    if (myUsedLanguages.remove(lang.getKey())) {
      myNewImplicitLanguagesIds.put(lang.getKey(),lang.getValue());
    }
  }
  for (  SLanguage lang : myUsedLanguages) {
    int version=((Language)lang.getSourceModule()).getLanguageVersion();
    myNewImplicitLanguagesIds.put(lang,version);
  }
  myImplicitLanguagesIds=myNewImplicitLanguagesIds;
}
