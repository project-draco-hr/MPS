{
  for (  SNode node : model.nodes()) {
    if (RoleIdsComponent.isEnabled()) {
      SNodePointer ptrConcept=RoleIdsComponent.getConceptPointer(node);
      if (ptrConcept == null) {
        LOG.warning("concept not found for node " + org.jetbrains.mps.openapi.model.SNodeUtil.getDebugText(node));
      }
 else {
        result.add(ptrConcept.getModelReference());
      }
      for (      String propname : node.getPropertyNames()) {
        SNodePointer ptrDecl=RoleIdsComponent.getPropertyNamePointer(node,propname);
        if (ptrDecl == null) {
          LOG.warning("undeclared property: '" + propname + "' in node "+ org.jetbrains.mps.openapi.model.SNodeUtil.getDebugText(node));
        }
 else {
          result.add(ptrDecl.getModelReference());
        }
      }
      for (      SReference ref : node.getReferences()) {
        if (ref.getTargetSModelReference() != null) {
          result.add(ref.getTargetSModelReference());
        }
        SNodePointer ptrDecl=RoleIdsComponent.getReferenceRolePointer(ref);
        if (ptrDecl == null) {
          LOG.warning("undeclared link role: '" + ref.getRole() + "' in node "+ org.jetbrains.mps.openapi.model.SNodeUtil.getDebugText(node));
        }
 else {
          result.add(ptrDecl.getModelReference());
        }
      }
      for (      SNode child : node.getChildren()) {
        SNodePointer ptrDecl=RoleIdsComponent.getNodeRolePointer(child);
        if (ptrDecl == null) {
          LOG.warning("undeclared child role: '" + child.getRoleInParent() + "' in node "+ org.jetbrains.mps.openapi.model.SNodeUtil.getDebugText(node));
        }
 else {
          result.add(ptrDecl.getModelReference());
        }
      }
    }
 else {
      SNode concept=node.getConceptDeclarationNode();
      if (concept == null) {
        LOG.error("concept not found for node " + org.jetbrains.mps.openapi.model.SNodeUtil.getDebugText(node));
      }
 else {
        result.add(concept.getModel().getSModelReference());
      }
      for (      String propname : node.getPropertyNames()) {
        SNode decl=node.getPropertyDeclaration(propname);
        if (decl == null) {
          LOG.error("undeclared property: '" + propname + "' in node "+ org.jetbrains.mps.openapi.model.SNodeUtil.getDebugText(node));
        }
 else {
          result.add(decl.getModel().getSModelReference());
        }
      }
      for (      SReference ref : node.getReferences()) {
        SModelReference targetModelRef=ref.getTargetSModelReference();
        if (targetModelRef == null) {
          LOG.error("target model of reference '" + ref.getRole() + "' is null in node "+ org.jetbrains.mps.openapi.model.SNodeUtil.getDebugText(node));
        }
 else {
          result.add(targetModelRef);
        }
        SNode decl=node.getLinkDeclaration(ref.getRole());
        if (decl == null) {
          LOG.error("undeclared link role: '" + ref.getRole() + "' in node "+ org.jetbrains.mps.openapi.model.SNodeUtil.getDebugText(node));
        }
 else {
          result.add(decl.getModel().getSModelReference());
        }
      }
      for (      SNode child : node.getChildren()) {
        SNode decl=child.getRoleLink();
        if (decl == null) {
          LOG.error("undeclared child role: '" + child.getRoleInParent() + "' in node "+ org.jetbrains.mps.openapi.model.SNodeUtil.getDebugText(node));
        }
 else {
          result.add(decl.getModel().getSModelReference());
        }
      }
    }
  }
  return result;
}
