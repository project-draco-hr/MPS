{
  ModelChange.assertLegalChange(getModelDescriptor());
  enforceFullLoad();
  boolean changed=false;
  for (  org.jetbrains.mps.openapi.model.SNode n : myIdToNodeMap.values()) {
    if (!(n instanceof SNode))     continue;
    SNode node=(SNode)n;
    for (    SReference reference : node.getReferences()) {
      SModelReference oldReference=reference.getTargetSModelReference();
      if (oldReference == null)       continue;
      jetbrains.mps.smodel.SModelReference oldSRef=(jetbrains.mps.smodel.SModelReference)oldReference;
      jetbrains.mps.smodel.SModelReference newRef=oldSRef.update();
      if (newRef.differs(oldSRef)) {
        changed=true;
        ((jetbrains.mps.smodel.SReference)reference).setTargetSModelReference(newRef);
      }
    }
  }
  for (  ImportElement e : myImports) {
    jetbrains.mps.smodel.SModelReference oldSRef=(jetbrains.mps.smodel.SModelReference)e.myModelReference;
    jetbrains.mps.smodel.SModelReference newRef=oldSRef.update();
    if (newRef.differs(oldSRef)) {
      changed=true;
      e.myModelReference=newRef;
    }
  }
  for (  ImportElement e : myImplicitImports) {
    jetbrains.mps.smodel.SModelReference oldSRef=(jetbrains.mps.smodel.SModelReference)e.myModelReference;
    jetbrains.mps.smodel.SModelReference newRef=oldSRef.update();
    if (newRef.differs(oldSRef)) {
      changed=true;
      e.myModelReference=newRef;
    }
  }
  return changed;
}
