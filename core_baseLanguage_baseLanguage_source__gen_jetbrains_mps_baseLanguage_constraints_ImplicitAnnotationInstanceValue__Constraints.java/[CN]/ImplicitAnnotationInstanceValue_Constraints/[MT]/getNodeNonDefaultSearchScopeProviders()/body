{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("key",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      if (SNodeOperations.isInstanceOf(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.AnnotationInstance")) {
        SNode annotationInstance=SNodeOperations.cast(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.AnnotationInstance");
        List<SNode> annotationMethodDeclarations=SLinkOperations.getTargets(SLinkOperations.getTarget(annotationInstance,"annotation",false),"method",true);
        if (ListSequence.fromList(annotationMethodDeclarations).count() == 1) {
          return annotationMethodDeclarations;
        }
      }
      return Sequence.fromIterable(Collections.<SNode>emptyList());
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c895902c1(jetbrains.mps.baseLanguage.constraints)","2580416627845385311");
    }
  }
);
  return result;
}
