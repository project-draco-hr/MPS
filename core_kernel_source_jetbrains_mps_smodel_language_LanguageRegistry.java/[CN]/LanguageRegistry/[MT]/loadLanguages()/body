{
  if (myLanguages != null)   return;
  ModelAccess.instance().runWriteAction(new Runnable(){
    public void run(){
      myLanguageToNamespace=new HashMap<Language,String>();
      myLanguages=new HashMap<String,LanguageRuntime>();
      MPSModuleRepository.getInstance().addModuleRepositoryListener(new ModuleRepositoryAdapter(){
        @Override public void moduleAdded(        IModule module){
          if (module instanceof Language) {
            Language l=(Language)module;
            String namespace=l.getModuleFqName();
            if (!myLanguages.containsKey(namespace)) {
              LanguageRuntime runtime=createRuntime(l,true);
              if (runtime != null) {
                myLanguages.put(namespace,runtime);
                myLanguageToNamespace.put(l,namespace);
                notifyLoad(Collections.singleton(runtime));
              }
            }
          }
        }
        @Override public void moduleInitialized(        IModule module){
        }
        @Override public void moduleChanged(        IModule module){
        }
        @Override public void moduleRemoved(        IModule module){
          if (module instanceof Language) {
            Language l=(Language)module;
            String namespace=myLanguageToNamespace.get(l);
            if (namespace != null) {
              LanguageRuntime runtime=myLanguages.remove(namespace);
              if (runtime != null) {
                myLanguageToNamespace.remove(l);
                notifyUnload(Collections.singleton(runtime),false);
              }
            }
          }
        }
        @Override public void repositoryChanged(){
        }
      }
);
      reloadLanguages();
    }
  }
);
}
