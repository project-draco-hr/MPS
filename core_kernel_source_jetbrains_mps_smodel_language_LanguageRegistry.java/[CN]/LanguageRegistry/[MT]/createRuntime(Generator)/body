{
  if (g.generateTemplates()) {
    Language sourceLanguage=g.getSourceLanguage();
    final String rtClassName=sourceLanguage.getModuleName() + ".Generator";
    try {
      Class<?> rtClass;
      try {
        rtClass=g.getOwnClass(rtClassName);
      }
 catch (      ClassNotFoundException ex) {
        try {
          rtClass=sourceLanguage.getOwnClass(rtClassName);
        }
 catch (        ModuleClassNotFoundException e) {
          return null;
        }
      }
      if (GeneratorRuntime.class.isAssignableFrom(rtClass)) {
        final Class<? extends GeneratorRuntime> aClass=rtClass.asSubclass(GeneratorRuntime.class);
        final LanguageRuntime sourceLanguageRuntime=getLanguage(sourceLanguage);
        if (sourceLanguageRuntime == null) {
          throw new InstantiationException(String.format("Could not find language runtime for %s to attach generator %s to",sourceLanguage.getModuleName(),g.getModuleName()));
        }
        Constructor<? extends GeneratorRuntime> constructor=null;
        for (        Constructor<?> cons : aClass.getConstructors()) {
          if (cons.getParameterTypes().length != 1) {
            continue;
          }
          final Class<?> paramType=cons.getParameterTypes()[0];
          if (paramType == sourceLanguageRuntime.getClass()) {
            constructor=aClass.getConstructor(sourceLanguageRuntime.getClass());
            break;
          }
          if (paramType == LanguageRuntime.class) {
            constructor=aClass.getConstructor(LanguageRuntime.class);
            break;
          }
        }
        if (constructor == null) {
          LOG.error(String.format("No constructor to accept language runtime found in class %s of generator %s",rtClassName,g.getModuleName()));
          return null;
        }
 else {
          return constructor.newInstance(sourceLanguageRuntime);
        }
      }
    }
 catch (    ClassNotFoundException e) {
      LOG.error(String.format("Failed to load runtime %s of generator %s",rtClassName,g.getModuleName()),e);
    }
catch (    InstantiationException|IllegalAccessException e) {
      LOG.error(String.format("Failed to instantiate runtime %s of generator %s",rtClassName,g.getModuleName()),e);
    }
catch (    NoSuchMethodException|InvocationTargetException e) {
      LOG.error(String.format("Failed to instantiate runtime %s of generator %s. Bad constructor?",rtClassName,g.getModuleName()),e);
    }
  }
  return null;
}
