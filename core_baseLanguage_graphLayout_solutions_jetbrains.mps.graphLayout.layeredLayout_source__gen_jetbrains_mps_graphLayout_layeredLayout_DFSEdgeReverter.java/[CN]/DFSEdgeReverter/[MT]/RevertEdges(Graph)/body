{
  myDfsState=MapSequence.fromMap(new HashMap<Node,Integer>());
  myToRevert=SetSequence.fromSet(new HashSet<Edge>());
  List<Node> nodes=graph.getNodes();
  for (  Node node : ListSequence.fromList(nodes)) {
    MapSequence.fromMap(myDfsState).put(node,0);
  }
  for (  Node node : ListSequence.fromList(nodes)) {
    if (MapSequence.fromMap(myDfsState).get(node) == 0) {
      dfs(node);
    }
  }
  Set<Edge> reverted=SetSequence.fromSet(new HashSet<Edge>());
  for (  Edge edge : SetSequence.fromSet(myToRevert)) {
    edge.removeFromGraph();
    SetSequence.fromSet(reverted).addElement(edge.getTarget().addEdgeTo(edge.getSource()));
  }
  return reverted;
}
