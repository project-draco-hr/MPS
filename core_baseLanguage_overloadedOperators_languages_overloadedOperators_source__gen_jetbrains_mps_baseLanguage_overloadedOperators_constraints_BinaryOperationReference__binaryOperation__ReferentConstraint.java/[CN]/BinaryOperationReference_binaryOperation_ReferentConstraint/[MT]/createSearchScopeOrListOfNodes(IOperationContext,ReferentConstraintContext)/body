{
  List<SNode> result=new ArrayList<SNode>();
  for (  Language language : ListSequence.fromList(operationContext.getScope().getVisibleLanguages())) {
    SModelDescriptor strucModelDescriptor=LanguageAspect.STRUCTURE.get(language);
    SModel strucModel=strucModelDescriptor.getSModel();
    ListSequence.fromList(result).addSequence(ListSequence.fromList(SModelOperations.getRoots(strucModel,"jetbrains.mps.lang.structure.structure.ConceptDeclaration")).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SConceptOperations.isSubConceptOf(it,"jetbrains.mps.baseLanguage.structure.BinaryOperation") && !(SConceptPropertyOperations.getBoolean(it,"abstract"));
      }
    }
));
  }
  return result;
}
