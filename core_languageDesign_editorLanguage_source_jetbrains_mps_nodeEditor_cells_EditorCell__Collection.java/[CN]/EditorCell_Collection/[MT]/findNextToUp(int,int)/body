{
  EditorCell_Collection rootCell=this;
  while (rootCell.getParent() != null) {
    rootCell=rootCell.getParent();
  }
class NextToUpCondition extends EditorCellCondition {
    public void checkLeafCell(    EditorCell cell){
      if (y < cell.getY() || !cell.isSelectable()) {
        return;
      }
      EditorCell foundCell=getFoundCell();
      if (foundCell == null) {
        setFoundCell(cell);
        return;
      }
      if (y - cell.getY() > y - foundCell.getY()) {
        return;
      }
      if (y - cell.getY() < y - foundCell.getY()) {
        setFoundCell(cell);
        return;
      }
      if (x >= cell.getX() && x < cell.getX() + cell.getWidth()) {
        setFoundCell(cell);
        return;
      }
      if (x < foundCell.getX() && x > cell.getX()) {
        setFoundCell(cell);
        return;
      }
      if (x < cell.getX() && x > foundCell.getX()) {
        return;
      }
      if (Math.abs(x - foundCell.getX()) > Math.abs(x - cell.getX())) {
        setFoundCell(cell);
      }
    }
  }
  NextToUpCondition nextToUpCondition=new NextToUpCondition();
  rootCell.iterateTreeUntilCondition(nextToUpCondition);
  return nextToUpCondition.getFoundCell();
}
