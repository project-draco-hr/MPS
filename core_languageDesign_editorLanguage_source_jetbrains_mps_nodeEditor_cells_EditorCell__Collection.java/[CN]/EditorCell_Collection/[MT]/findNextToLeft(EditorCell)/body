{
  EditorCell_Collection rootCell=this;
  while (rootCell.getParent() != null && (!(rootCell.getParent().getCellLayout() instanceof CellLayout_Vertical) || rootCell.getParent().firstCell() == rootCell)) {
    rootCell=rootCell.getParent();
  }
class NextToLeftCondition extends EditorCellCondition {
    private EditorCell myCellToCompare;
    private boolean myCollection;
    public NextToLeftCondition(    EditorCell cellToCompare){
      this.myCellToCompare=cellToCompare;
      myCollection=cellToCompare instanceof EditorCell_Collection;
    }
    public void checkLeafCell(    EditorCell cell){
      if (cell == myCellToCompare) {
        setToStop(true);
        return;
      }
      if (!cell.isSelectable()) {
      }
 else {
        setFoundCell(cell);
      }
    }
    public boolean checkNotLeafCell(    EditorCell editorCell){
      if (!myCollection)       return true;
      if (editorCell == myCellToCompare) {
        setToStop(true);
      }
      return true;
    }
  }
  NextToLeftCondition nextToLeftCondition=new NextToLeftCondition(editorCell);
  rootCell.iterateTreeUntilCondition(nextToLeftCondition);
  return nextToLeftCondition.getFoundCell();
}
