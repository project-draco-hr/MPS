{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0x3ecd7c84cde345deL,0x886c135ecc69b742L,0x5fb04b74a77cda06L,0x5fb04b74a77cda07L,"refactoringParameter"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x3ecd7c84cde345deL,0x886c135ecc69b742L,0x5fb04b74a77cda06L,0x5fb04b74a77cda07L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return SLinkOperations.getChildren(SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(0x3ecd7c84cde345deL,0x886c135ecc69b742L,0x5fb04b74a778e245L,"jetbrains.mps.lang.refactoring.structure.Refactoring"),false,false),MetaAdapterFactory.getContainmentLink(0x3ecd7c84cde345deL,0x886c135ecc69b742L,0x5fb04b74a778e245L,0x5fb04b74a778e2d8L,"parameter"));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_vznh2k_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
