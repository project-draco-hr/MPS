{
  super(descriptor,null);
  myModule=module;
  setSolutionDescriptor(descriptor,false);
  myConnection=myModule.getProject().getMessageBus().connect();
  myConnection.subscribe(ProjectTopics.PROJECT_ROOTS,new ModuleRootListener(){
    @Override public void beforeRootsChange(    ModuleRootEvent event){
    }
    @Override public void rootsChanged(    ModuleRootEvent event){
      if (myModule.getProject().equals(event.getSource())) {
        ModelAccess.instance().runWriteInEDT(new Runnable(){
          public void run(){
            if (myModule.isDisposed())             return;
            setModuleDescriptor(getModuleDescriptor(),false);
          }
        }
);
      }
    }
  }
);
  myConnection.subscribe(FacetManager.FACETS_TOPIC,new FacetManagerAdapter(){
    @Override public void facetAdded(    @NotNull Facet facet){
      handleFacetChanged(facet);
    }
    @Override public void facetRemoved(    @NotNull Facet facet){
      handleFacetChanged(facet);
    }
  }
);
}
