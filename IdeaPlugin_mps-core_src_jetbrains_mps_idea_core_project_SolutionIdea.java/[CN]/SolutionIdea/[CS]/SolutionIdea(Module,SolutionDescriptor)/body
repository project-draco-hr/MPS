{
  super(descriptor,null);
  myModule=module;
  setModuleDescriptor(descriptor);
  myConnection=myModule.getProject().getMessageBus().connect();
  myConnection.subscribe(ProjectTopics.PROJECT_ROOTS,new MyModuleRootListener());
  myConnection.subscribe(FacetManager.FACETS_TOPIC,new MyFacetManagerAdapter());
  final ProjectLibraryTable projectLibraryTable=(ProjectLibraryTable)ProjectLibraryTable.getInstance(myModule.getProject());
  ModelAccess.instance().runReadAction(new Runnable(){
    @Override public void run(){
      for (      final Library library : projectLibraryTable.getLibraries()) {
        if (ModuleLibraryType.isModuleLibrary(library)) {
          library.getRootProvider().addRootSetChangedListener(myRootSetListener);
        }
      }
      for (      SModel model : getModels()) {
        ((SModelInternal)model).addModelListener(MODEL_RUNTIME_IMPORTER);
      }
    }
  }
);
  projectLibraryTable.addListener(myLibrariesListener);
  addModuleListener(myModule.getProject().getComponent(PsiModelReloadListener.class));
  addModuleListener(MODULE_RUNTIME_IMPORTER);
}
