{
  if (myDependencies == null) {
    myDependencies=new ArrayList<Dependency>();
    ArrayList<Module> usedModules=new ArrayList<Module>(Arrays.asList(ModuleRootManager.getInstance(myModule).getDependencies()));
    for (    Map.Entry<ModuleId,ModuleReference> e : LibrariesLoader.getInstance().getLoadedSolutions().entrySet()) {
      ModuleReference lang=e.getValue();
      if (getUsedLanguagesReferences().contains(lang)) {
        Dependency dep=new Dependency();
        dep.setModuleRef(new ModuleReference(null,e.getKey()));
        dep.setReexport(false);
        myDependencies.add(dep);
      }
    }
    if (ProjectJavaSourceImporter.ourSolution != null) {
      Dependency dep=new Dependency();
      dep.setModuleRef(ProjectJavaSourceImporter.ourSolution.getModuleReference());
      dep.setReexport(false);
      myDependencies.add(dep);
    }
 else {
      System.out.println("Our stub solution is MISSING");
    }
    for (    Module usedModule : usedModules) {
      MPSFacet usedModuleMPSFacet=FacetManager.getInstance(usedModule).getFacetByType(MPSFacetType.ID);
      if (usedModuleMPSFacet != null && usedModuleMPSFacet.wasInitialized()) {
        Dependency dep=new Dependency();
        dep.setModuleRef(usedModuleMPSFacet.getSolution().getModuleReference());
        dep.setReexport(false);
        myDependencies.add(dep);
      }
    }
    addUsedLibraries(myDependencies);
    Solution jdkSolution=(Solution)MPSModuleRepository.getInstance().getModuleById(ModuleId.fromString("6354ebe7-c22a-4a0f-ac54-50b52ab9b065"));
    if (jdkSolution != null) {
      myDependencies.add(new Dependency(jdkSolution.getModuleReference(),false));
    }
  }
  return myDependencies;
}
