{
  String className=ModelAccess.instance().runReadAction(new Computable<String>(){
    @Override public String compute(){
      SNode node=getSNode();
      String fileName=StacktraceUtil.getGeneratedFileName(node);
      if (fileName.endsWith(".java")) {
        fileName=fileName.substring(0,fileName.length() - ".java".length());
      }
      return fileName;
    }
  }
);
  System.err.println("BP creating prepare request for class " + className);
  debugProcess.getRequestManager().callbackOnPrepareClasses(this,className);
  List<ReferenceType> list=debugProcess.getVirtualMachine().classesByName(className);
  for (  final ReferenceType refType : list) {
    if (refType.isPrepared()) {
      System.err.println("BP creating requests on prepared class " + className);
      processClassPrepare(debugProcess,refType);
    }
  }
}
