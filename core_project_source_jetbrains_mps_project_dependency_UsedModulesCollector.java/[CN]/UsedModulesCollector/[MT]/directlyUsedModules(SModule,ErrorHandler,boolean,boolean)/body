{
  Set<SModule> result=new HashSet<>();
  for (  SDependency dependency : module.getDeclaredDependencies()) {
    SModule dependencyModule=dependency.getTarget();
    SDependencyScope scope=dependency.getScope();
    if (dependencyModule != null) {
      boolean isExport=dependency.isReexport() || scope == EXTENDS;
      if (includeNonReexport || isExport) {
        result.add(dependencyModule);
      }
    }
 else {
      if (scope != GENERATES_INTO && scope != DESIGN) {
        handler.depCannotBeResolved(dependency);
      }
    }
  }
  if (includeNonReexport) {
    if (runtimes) {
      result.addAll(new RuntimesOfUsedLanguageCalculator(module,myLanguageRuntimesCache,handler).invoke());
    }
  }
  return result;
}
