{
  if (myNodePointer == null) {
    return;
  }
  SNode rootNode=myNodePointer.getNode();
  if (rootNode == null) {
    return;
  }
  getMessagesGutter().removeMessages(myMessageOwner);
  SModelDescriptor sm=rootNode.getModel().getModelDescriptor();
  ModelCheckResult res=(ModelCheckResult)sm.getUserObject(ModelChecker.MODEL_CHECK_RESULT);
  if (res == null) {
    return;
  }
  for (  final ModelCheckerMessage m : res.getMessages()) {
    if (m.getNode().getContainingRoot() == rootNode) {
      getHighlightManager().mark(new DefaultEditorMessage(m.getNode(),Color.PINK,m.getMessage(),myMessageOwner){
        public void paint(        Graphics g,        IEditorComponent editorComponent){
          EditorCell cell=getCell(editorComponent);
          int x=cell.getX();
          int y=cell.getY();
          int height=cell.getHeight();
          int leftInternalInset=cell.getLeftInternalInset();
          int effectiveWidth=cell.getEffectiveWidth();
          g.setColor(getColor());
          ColorAndGraphicsUtil.drawWave(g,x + leftInternalInset,x + leftInternalInset + effectiveWidth,y + height - ColorAndGraphicsUtil.WAVE_HEIGHT);
        }
        public String getMessage(){
          return m.getMessage();
        }
      }
);
    }
  }
}
