{
  if (EventUtil.isDetachedOnlyChange(events)) {
    return;
  }
  if (!EventUtil.isDramaticalChange(events)) {
    if (EventUtil.isPropertyChange(events)) {
      String propertyName=((SModelPropertyEvent)events.get(0)).getPropertyName();
      SNodePointer nodeProxy=new SNodePointer(((SModelPropertyEvent)events.get(0)).getNode());
      Pair<SNodePointer,String> pair=new Pair<SNodePointer,String>(nodeProxy,propertyName);
      Set<EditorCell_Property> editorCell_properties=myNodePropertiesAccessedCleanlyToDependentCellsMap.get(pair);
      Set<EditorCell> editorCells=myNodePropertiesAccessedDirtilyToDependentCellsMap.get(pair);
      Set<EditorCell> editorCellsDependentOnExistence=myNodePropertiesWhichExistenceWasCheckedToDependentCellsMap.get(pair);
      if (editorCellsDependentOnExistence != null) {
        if (EventUtil.isPropertyAddedOrRemoved(events.get(0))) {
          rebuildEditorContent(events);
        }
 else {
          for (          EditorCell cell : editorCellsDependentOnExistence) {
            cell.synchronizeViewWithModel();
            fireCellSynchronized(cell);
          }
          if (editorCell_properties != null) {
            for (            EditorCell cell : editorCell_properties) {
              cell.synchronizeViewWithModel();
              fireCellSynchronized(cell);
            }
          }
          relayout();
        }
        return;
      }
      if (editorCells != null) {
        rebuildEditorContent(events);
      }
 else       if (editorCell_properties != null) {
        for (        EditorCell_Property cell : editorCell_properties) {
          cell.synchronizeViewWithModel();
          fireCellSynchronized(cell);
        }
        relayout();
      }
    }
 else {
      rebuildEditorContent(events);
    }
  }
 else {
    rebuildEditorContent(events);
    if (!hasFocus() && !myIntentionsHelper.isLightBulbVisible()) {
      return;
    }
    updateSelection(events);
  }
}
