{
  if (mySelectionDisabled)   return;
  if (resetLastCaretX) {
    resetLastCaretX();
  }
  if (newSelectedCell == mySelectedCell) {
    return;
  }
  myNodeSubstituteChooser.setVisible(false);
  myNodeRangeSelection.deactivate();
  final EditorCell oldSelection=mySelectedCell;
  if (mySelectedCell != null) {
    mySelectedCell.setSelected(false);
  }
  mySelectedCell=newSelectedCell;
  if (mySelectedCell != null) {
    mySelectedCell.setSelected(true);
  }
  if (mySelectedCell != null) {
    if (scrollToCell) {
      scrollToCell(newSelectedCell);
    }
  }
  repaint();
  fireCellSelectionChanged(oldSelection,newSelectedCell);
  if (oldSelection != null && !EditorUtil.isValidCell(oldSelection)) {
    ModelAccess.instance().runWriteActionInCommand(new Runnable(){
      public void run(){
        try {
          mySelectionDisabled=true;
          EditorUtil.validateCell(oldSelection,myEditorContext,true,true);
        }
  finally {
          mySelectionDisabled=false;
        }
      }
    }
);
  }
}
