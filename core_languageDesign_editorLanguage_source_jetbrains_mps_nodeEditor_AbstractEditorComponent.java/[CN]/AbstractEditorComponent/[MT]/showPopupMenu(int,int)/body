{
  BaseGroup group=ActionUtils.getGroup(EDITOR_POPUP_MENU_ACTIONS);
  if (group == null)   return;
  JPopupMenu popupMenu=ActionUtils.createPopup(group);
  EditorCell cell=getSelectedCell();
{
    final EditorContext editorContext=createEditorContextForActions();
    List<EditorCellKeyMapAction> actions=new ArrayList<EditorCellKeyMapAction>();
    for (    EditorCellKeyMapAction action : KeyMapUtil.getRegisteredActions(cell,editorContext)) {
      try {
        if (action.isShownInPopupMenu() && action.canExecute(null,editorContext)) {
          actions.add(action);
        }
      }
 catch (      Throwable t) {
        LOG.error(t);
      }
    }
    if (!actions.isEmpty())     popupMenu.addSeparator();
    JMenu keyMapActions=new JMenu("KeyMap Actions");
    keyMapActions.setBorder(null);
    keyMapActions.setIcon(IconManager.EMPTY_ICON);
    for (    final EditorCellKeyMapAction action : actions) {
      MPSActionAdapter mpsAction=new MPSActionAdapter("" + action.getDescriptionText()){
        private EditorCellKeyMapAction myAction=action;
        @NotNull public String getKeyStroke(){
          return action.getKeyStroke();
        }
        public void doExecute(        @NotNull ActionContext context){
          myAction.execute(null,editorContext);
        }
        protected void doUpdate(        ActionContext context){
        }
      }
;
      keyMapActions.add(ActionUtils.createComponent(mpsAction));
    }
    popupMenu.add(keyMapActions);
  }
  popupMenu.show(AbstractEditorComponent.this,x,y);
}
