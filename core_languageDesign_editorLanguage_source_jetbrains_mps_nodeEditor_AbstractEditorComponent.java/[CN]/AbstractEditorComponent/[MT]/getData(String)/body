{
  if (dataId.equals(MPSDataKeys.SNODE.getName())) {
    if (getSelectedCell() != null)     return getSelectedCell().getSNode();
 else     return getRootCell().getSNode();
  }
 else   if (dataId.equals(MPSDataKeys.EDITOR_CELL.getName())) {
    return getSelectedCell();
  }
 else   if (dataId.equals(MPSDataKeys.SNODES.getName())) {
    return getSelectedNodes();
  }
 else   if (dataId.equals(MPSDataKeys.MODEL_DESCRIPTOR.getName())) {
    return ModelAccess.instance().runReadAction(new Computable(){
      public Object compute(){
        return getRootCell().getSNode().getModel().getModelDescriptor();
      }
    }
);
  }
 else   if (dataId.equals(MPSDataKeys.OPERATION_CONTEXT.getName())) {
    return getOperationContext();
  }
 else   if (dataId.equals(PlatformDataKeys.CUT_PROVIDER.getName())) {
    return new MyCutProvider();
  }
 else   if (dataId.equals(PlatformDataKeys.COPY_PROVIDER.getName())) {
    return new MyCopyProvider();
  }
 else   if (dataId.equals(PlatformDataKeys.PASTE_PROVIDER.getName())) {
    return new MyPasteProvider();
  }
 else   if (dataId.equals(MPSDataKeys.EDITOR_COMPONENT.getName())) {
    return this;
  }
 else   if (dataId.equals(MPSDataKeys.MODULES.getName())) {
    return Arrays.asList(getEditedNode().getModel().getModelDescriptor().getModule());
  }
  return null;
}
