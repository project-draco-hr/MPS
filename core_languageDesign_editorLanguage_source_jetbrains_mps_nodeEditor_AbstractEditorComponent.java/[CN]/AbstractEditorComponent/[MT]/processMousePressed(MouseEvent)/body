{
  requestFocus();
  processCoordSelection(mouseEvent);
  if (mouseEvent.isControlDown()) {
    if (getSelectedCell() != null) {
      CommandProcessor.instance().executeLightweightCommand(new Runnable(){
        public void run(){
          SNode selectedNode=getSelectedCell().getSNode();
          while (selectedNode != null) {
            final IErrorReporter herror=TypeChecker.getInstance().getTypeErrorDontCheck(selectedNode);
            if (herror != null) {
              SwingUtilities.invokeLater(new Runnable(){
                public void run(){
                  String s=herror.reportError();
                  final MPSErrorDialog dialog=new MPSErrorDialog(myOperationContext.getMainFrame(),s,"TYPESYSTEM ERROR",false);
                  JButton button=new JButton(new AbstractAction("Go To Rule"){
                    public void actionPerformed(                    ActionEvent e){
                      CommandProcessor.instance().executeLightweightCommand(new Runnable(){
                        public void run(){
                          GoToTypeErrorRuleUtil.goToTypeErrorRule(myOperationContext,herror,GoToTypeErrorRule_Action.LOG);
                          dialog.dispose();
                        }
                      }
);
                    }
                  }
);
                  dialog.addButton(button);
                  dialog.initializeUI();
                  dialog.setVisible(true);
                }
              }
);
              return;
            }
            selectedNode=selectedNode.getParent();
          }
        }
      }
);
    }
  }
}
