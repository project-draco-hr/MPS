{
  SNode result=SNodeOperations.copyNode(typeWithVars);
  List<SNode> varRefs=SNodeOperations.getNodeDescendants(result,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102467229d8L,"jetbrains.mps.baseLanguage.structure.TypeVariableReference"),false,new SAbstractConcept[]{});
  List<SNode> params=ListSequence.fromList(SLinkOperations.getChildren(classifierSubtype,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x102419671abL,"parameter"))).toListSequence();
  for (  SNode varRef : varRefs) {
    int index=SNodeOperations.getIndexInParent(SLinkOperations.getTarget(varRef,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102467229d8L,0x1024673a581L,"typeVariableDeclaration")));
    if (index < ListSequence.fromList(params).count()) {
      SNodeOperations.replaceWithAnother(varRef,SNodeOperations.copyNode(ListSequence.fromList(params).getElement(index)));
    }
 else {
      SNodeOperations.replaceWithAnother(varRef,TypeVariableDeclaration__BehaviorDescriptor.getConcreteUpperBound_id3LgQEacCviw.invoke(SLinkOperations.getTarget(varRef,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102467229d8L,0x1024673a581L,"typeVariableDeclaration"))));
    }
  }
  return result;
}
