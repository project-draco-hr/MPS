{
  SNode concreteMethodClassifierType=null;
  while (!(ListSequence.fromList(frontier).isEmpty())) {
    SNode currentType=ListSequence.fromList(frontier).removeElementAt(0);
    SNode currentClassifier=SLinkOperations.getTarget(currentType,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier"));
    if (currentClassifier == classifier) {
      concreteMethodClassifierType=currentType;
      break;
    }
    if (SNodeOperations.isInstanceOf(currentClassifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"))) {
      SNode classConcept=SNodeOperations.cast(currentClassifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"));
      SNode superclass=SLinkOperations.getTarget(classConcept,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x10f6353296dL,"superclass"));
      if ((superclass != null)) {
        ListSequence.fromList(frontier).addElement(getConcreteClassifierType(superclass,currentType));
      }
      for (      SNode intfc : SLinkOperations.getChildren(classConcept,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0xff2ac0b419L,"implementedInterface"))) {
        ListSequence.fromList(frontier).addElement(getConcreteClassifierType(intfc,currentType));
      }
    }
    if (SNodeOperations.isInstanceOf(currentClassifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface"))) {
      SNode interfaceConcept=SNodeOperations.cast(currentClassifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface"));
      for (      SNode intfc : SLinkOperations.getChildren(interfaceConcept,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,0x101eddadad7L,"extendedInterface"))) {
        ListSequence.fromList(frontier).addElement(getConcreteClassifierType(intfc,currentType));
      }
    }
  }
  return concreteMethodClassifierType;
}
