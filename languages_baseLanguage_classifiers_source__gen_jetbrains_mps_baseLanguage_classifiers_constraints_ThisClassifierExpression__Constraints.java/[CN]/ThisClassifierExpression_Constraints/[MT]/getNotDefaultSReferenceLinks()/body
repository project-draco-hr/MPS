{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(4917733117167750838l,-7710007501170303426l),1205752633985l,1218736638915l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(4917733117167750838l,-7710007501170303426l),1205752633985l,1218736638915l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return ThisClassifierExpression_Behavior.call_getPossibleClassifiers_1219068414643(SNodeOperations.cast(_context.getReferenceNode(),"jetbrains.mps.baseLanguage.classifiers.structure.ThisClassifierExpression"));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_9aiht3_a0a1a0a0a1a0b0a1a3;
        }
      }
;
    }
  }
);
  return references;
}
