{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(0x443f4c36fcf54eb6L,0x95008d06ed259e3eL,0x118bc751a81L,0x11bc25d4bc3L),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x443f4c36fcf54eb6L,0x95008d06ed259e3eL,0x118bc751a81L,0x11bc25d4bc3L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return ThisClassifierExpression_BehaviorDescriptor.getPossibleClassifiers_idhJm8WEN.invoke(SNodeOperations.cast(_context.getReferenceNode(),MetaAdapterFactory.getConcept(0x443f4c36fcf54eb6L,0x95008d06ed259e3eL,0x118bc751a81L,"jetbrains.mps.baseLanguage.classifiers.structure.ThisClassifierExpression")));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_9aiht3_a0a1a0a0a1a0b0a1a3;
        }
      }
;
    }
  }
);
  return references;
}
