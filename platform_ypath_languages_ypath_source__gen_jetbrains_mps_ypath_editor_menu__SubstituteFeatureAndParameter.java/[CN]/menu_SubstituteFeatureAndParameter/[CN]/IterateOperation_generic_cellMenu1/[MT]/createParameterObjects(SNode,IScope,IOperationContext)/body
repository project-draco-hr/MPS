{
  List<Pair<SNode,SNode>> res=ListOperations.createList(new Pair[]{});
  SNode tpoe=SNodeOperations.getAncestor(node,"jetbrains.mps.ypath.structure.TreePathOperationExpression",false,false);
  if (SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(tpoe,"expression",true)),"jetbrains.mps.ypath.structure.TreePathType")) {
    SNode nodeType=SLinkOperations.getTarget(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(tpoe,"expression",true)),"nodeType",true);
{
      ICursor<SNode> _zCursor=CursorFactory.createCursor(TreePath_Behavior.call_getFeature_1184591220431(ITreePathExpression_Behavior.call_getTreePath_1194366873089(tpoe),nodeType));
      try {
        while (_zCursor.moveToNext()) {
          SNode foo=_zCursor.getCurrent();
          if (SNodeOperations.isInstanceOf(foo,"jetbrains.mps.ypath.structure.IParamFeature")) {
{
              ICursor<SNode> _zCursor1=CursorFactory.createCursor(IParamFeature_Behavior.call_getParameterObjects_1197461148674(foo,nodeType));
              try {
                while (_zCursor1.moveToNext()) {
                  SNode bar=_zCursor1.getCurrent();
                  ListOperations.addElement(res,new Pair<SNode,SNode>(foo,bar));
                }
              }
  finally {
                _zCursor1.release();
              }
            }
          }
 else {
            ListOperations.addElement(res,new Pair<SNode,SNode>(foo,null));
          }
        }
      }
  finally {
        _zCursor.release();
      }
    }
  }
  return res;
}
