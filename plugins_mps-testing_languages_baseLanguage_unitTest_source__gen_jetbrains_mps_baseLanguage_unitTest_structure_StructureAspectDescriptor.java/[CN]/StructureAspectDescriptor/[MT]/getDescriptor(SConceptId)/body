{
switch (myConceptIndex.index(id)) {
case LanguageConceptSwitch.AfterTest:
    return myConceptAfterTest;
case LanguageConceptSwitch.AssertEquals:
  return myConceptAssertEquals;
case LanguageConceptSwitch.AssertFalse:
return myConceptAssertFalse;
case LanguageConceptSwitch.AssertInNotNull:
return myConceptAssertInNotNull;
case LanguageConceptSwitch.AssertIsNull:
return myConceptAssertIsNull;
case LanguageConceptSwitch.AssertSame:
return myConceptAssertSame;
case LanguageConceptSwitch.AssertThrows:
return myConceptAssertThrows;
case LanguageConceptSwitch.AssertTrue:
return myConceptAssertTrue;
case LanguageConceptSwitch.BTestCase:
return myConceptBTestCase;
case LanguageConceptSwitch.BeforeTest:
return myConceptBeforeTest;
case LanguageConceptSwitch.BinaryAssert:
return myConceptBinaryAssert;
case LanguageConceptSwitch.Fail:
return myConceptFail;
case LanguageConceptSwitch.ITestCase:
return myConceptITestCase;
case LanguageConceptSwitch.ITestMethod:
return myConceptITestMethod;
case LanguageConceptSwitch.ITestable:
return myConceptITestable;
case LanguageConceptSwitch.Message:
return myConceptMessage;
case LanguageConceptSwitch.MessageHolder:
return myConceptMessageHolder;
case LanguageConceptSwitch.PrepareMethod:
return myConceptPrepareMethod;
case LanguageConceptSwitch.TestMethod:
return myConceptTestMethod;
case LanguageConceptSwitch.TestMethodList:
return myConceptTestMethodList;
default :
return null;
}
}
