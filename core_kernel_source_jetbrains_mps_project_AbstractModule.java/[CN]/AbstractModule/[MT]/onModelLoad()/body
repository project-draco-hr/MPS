{
  boolean save=false;
  Set<String> visited=new HashSet<String>();
  for (  ClassPathEntry e : getModuleDescriptor().getClassPathEntrys()) {
    if (visited.contains(e.getPath())) {
      e.delete();
      save=true;
    }
    visited.add(e.getPath());
  }
  boolean setModuleDescriptor=false;
  for (  Dependency dependency : getDependOn()) {
    String moduleUID=dependency.getModuleUID();
    IModule m=MPSModuleRepository.getInstance().getModuleByUID(moduleUID);
    if (m == null) {
      ModuleStub moduleStub=MPSModuleRepository.getInstance().getModuleStubByUID(moduleUID);
      if (moduleStub != null) {
        save=true;
        setModuleDescriptor=true;
        renameModuleImport(moduleUID,moduleStub.getActualModuleId(),false);
      }
    }
  }
  for (  String languageNamespace : getUsedLanguagesNamespaces()) {
    Language language=MPSModuleRepository.getInstance().getLanguage(languageNamespace);
    if (language == null) {
      ModuleStub moduleStub=MPSModuleRepository.getInstance().getModuleStubByUID(languageNamespace);
      if (moduleStub != null) {
        save=true;
        setModuleDescriptor=true;
        renameUsedLanguage(languageNamespace,moduleStub.getActualModuleId(),false);
      }
    }
  }
  if (setModuleDescriptor && !isPackaged()) {
    setModuleDescriptor(getModuleDescriptor());
  }
  if (save && !isPackaged()) {
    save();
  }
}
