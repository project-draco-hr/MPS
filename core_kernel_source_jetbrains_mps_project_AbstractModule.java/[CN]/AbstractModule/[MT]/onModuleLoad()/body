{
  boolean needToSave=false;
  if (updateSModelReferences()) {
    needToSave=true;
  }
  if (updateModuleReferences()) {
    needToSave=true;
  }
  if (isPackaged()) {
    updatePackagedDescriptorClasspath();
  }
 else {
{
      Set<String> visited=new HashSet<String>();
      List<ClassPathEntry> remove=new ArrayList<ClassPathEntry>();
      for (      ClassPathEntry e : getModuleDescriptor().getClassPaths()) {
        if (visited.contains(e.getPath())) {
          remove.add(e);
          needToSave=true;
        }
        visited.add(e.getPath());
      }
      getModuleDescriptor().getClassPaths().removeAll(remove);
    }
{
      Set<StubModelsEntry> visited=new HashSet<StubModelsEntry>();
      List<StubModelsEntry> remove=new ArrayList<StubModelsEntry>();
      for (      StubModelsEntry e : getModuleDescriptor().getStubModelEntries()) {
        for (        StubModelsEntry ve : visited) {
          boolean eqManager=EqualUtil.equals(ve.getManager(),e.getManager());
          boolean eqPath=EqualUtil.equals(e.getPath(),ve.getPath());
          if (eqManager && eqPath) {
            remove.add(e);
            needToSave=true;
          }
        }
        visited.add(e);
      }
      getModuleDescriptor().getStubModelEntries().removeAll(remove);
    }
  }
  if (needToSave && !isPackaged()) {
    save();
  }
}
