{
  if (!isPackaged())   return;
  ModuleDescriptor descriptor=getModuleDescriptor();
  if (descriptor == null)   return;
  IFile bundleHomeFile=getBundleHome();
  if (bundleHomeFile == null)   return;
  boolean hasClasspath=false, skipClasspath=false;
  List<ModelRoot> remove=new ArrayList<ModelRoot>();
  for (  ModelRoot entry : descriptor.getStubModelEntries()) {
    String path=entry.getPath();
    if (path.endsWith(".jar")) {
      IFile cp=FileSystem.getInstance().getFileByPath(path);
      if (!cp.exists()) {
        entry.setPath(bundleHomeFile.getPath() + "!/" + cp.getName());
      }
 else       if (bundleHomeFile.equals(cp)) {
        skipClasspath=true;
      }
    }
 else {
      hasClasspath=true;
      remove.add(entry);
    }
  }
  descriptor.getStubModelEntries().removeAll(remove);
  if (hasClasspath && !skipClasspath) {
    ClassPathEntry bundleHome=new ClassPathEntry();
    bundleHome.setPath(bundleHomeFile.getPath());
    descriptor.getStubModelEntries().add(jetbrains.mps.project.structure.model.ModelRootUtil.fromClassPathEntry(bundleHome));
  }
}
