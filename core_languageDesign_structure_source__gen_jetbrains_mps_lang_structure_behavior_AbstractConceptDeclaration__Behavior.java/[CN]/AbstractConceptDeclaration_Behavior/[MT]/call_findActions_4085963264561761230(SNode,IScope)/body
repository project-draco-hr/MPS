{
  List<SNode> result=new ArrayList<SNode>();
  Language language=SModelUtil.getDeclaringLanguage(thisNode,scope);
  if (language == null) {
    return result;
  }
  SModelDescriptor actions=language.getActionsModelDescriptor();
  if (actions == null) {
    return result;
  }
  SModel model=actions.getSModel();
  for (  SNode nodeFactories : SModelOperations.getRoots(model,"jetbrains.mps.lang.actions.structure.NodeFactories")) {
    for (    SNode nodeFactory : SLinkOperations.getTargets(nodeFactories,"nodeFactory",true)) {
      if (SLinkOperations.getTarget(nodeFactory,"applicableConcept",false) == thisNode) {
        ListSequence.fromList(result).addElement(nodeFactories);
        break;
      }
    }
  }
  for (  SNode substituteActions : SModelOperations.getRoots(model,"jetbrains.mps.lang.actions.structure.NodeSubstituteActions")) {
    for (    SNode actionsBuilder : SLinkOperations.getTargets(substituteActions,"actionsBuilder",true)) {
      if (SLinkOperations.getTarget(actionsBuilder,"applicableConcept",false) == thisNode) {
        ListSequence.fromList(result).addElement(substituteActions);
        break;
      }
    }
  }
  for (  SNode pasteWrappers : SModelOperations.getRoots(model,"jetbrains.mps.lang.actions.structure.PasteWrappers")) {
    for (    SNode wrapper : SLinkOperations.getTargets(pasteWrappers,"wrapper",true)) {
      if (SLinkOperations.getTarget(wrapper,"sourceConcept",false) == thisNode) {
        ListSequence.fromList(result).addElement(pasteWrappers);
        break;
      }
    }
  }
  for (  SNode sideactions : SModelOperations.getRoots(model,"jetbrains.mps.lang.actions.structure.SideTransformHintSubstituteActions")) {
    for (    SNode actionsBuilder : SLinkOperations.getTargets(sideactions,"actionsBuilder",true)) {
      if (SLinkOperations.getTarget(actionsBuilder,"applicableConcept",false) == thisNode) {
        ListSequence.fromList(result).addElement(sideactions);
        break;
      }
    }
  }
  return result;
}
