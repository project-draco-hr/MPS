{
  SModel model=AbstractConceptDeclaration_Behavior.call_findEditorModel_5829203215232141181(thisNode,scope);
  if (model == null) {
    return null;
  }
  List<SNode> result=new ArrayList<SNode>();
  for (  SNode actionMap : SModelOperations.getRoots(model,"jetbrains.mps.lang.editor.structure.CellActionMapDeclaration")) {
    if (SLinkOperations.getTarget(actionMap,"applicableConcept",false) == thisNode) {
      ListSequence.fromList(result).addElement(actionMap);
    }
  }
  for (  SNode keyMap : SModelOperations.getRoots(model,"jetbrains.mps.lang.editor.structure.CellKeyMapDeclaration")) {
    if (SLinkOperations.getTarget(keyMap,"applicableConcept",false) == thisNode) {
      ListSequence.fromList(result).addElement(keyMap);
    }
  }
  for (  SNode menu : SModelOperations.getRoots(model,null)) {
    if (SNodeOperations.isInstanceOf(menu,"jetbrains.mps.lang.editor.structure.CellMenuComponent") || SNodeOperations.isInstanceOf(menu,"jetbrains.mps.lang.editor.structure.EditorComponentDeclaration")) {
      if (SLinkOperations.getTarget(SNodeOperations.cast(menu,"jetbrains.mps.lang.editor.structure.AbstractComponent"),"conceptDeclaration",false) == thisNode) {
        ListSequence.fromList(result).addElement(menu);
      }
    }
  }
  return result;
}
