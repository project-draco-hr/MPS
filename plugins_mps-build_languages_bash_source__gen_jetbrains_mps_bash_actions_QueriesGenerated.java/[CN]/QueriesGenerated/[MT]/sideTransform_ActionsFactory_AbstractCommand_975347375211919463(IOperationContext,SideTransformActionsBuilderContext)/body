{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    Iterable<String> parameterObjects=new Computable<Iterable<String>>(){
      public Iterable<String> compute(){
        return ListSequence.fromListAndArray(new ArrayList<String>(),">","&>","<");
      }
    }
.compute();
    if (parameterObjects != null) {
      for (      final String item : parameterObjects) {
        ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(SConceptOperations.findConceptDeclaration("jetbrains.mps.bash.structure.RedirectedCommand"),item,_context.getSourceNode()){
          public SNode doSubstitute(          @Nullable final EditorContext editorContext,          String pattern){
            SNode redirectedCommand=SNodeFactoryOperations.createNewNode("jetbrains.mps.bash.structure.RedirectedCommand",null);
            SNode redirection;
            if ((item).equals(">")) {
              redirection=SNodeFactoryOperations.createNewNode("jetbrains.mps.bash.structure.OutputRedirection",null);
            }
 else             if ((item).equals("&>")) {
              redirection=SNodeFactoryOperations.createNewNode("jetbrains.mps.bash.structure.OutputErrorRedirection",null);
            }
 else {
              redirection=SNodeFactoryOperations.createNewNode("jetbrains.mps.bash.structure.InputRedirection",null);
            }
            ListSequence.fromList(SLinkOperations.getTargets(redirectedCommand,"redirection",true)).addElement(redirection);
            SNode command=_context.getSourceNode();
            SNodeOperations.replaceWithAnother(_context.getSourceNode(),redirectedCommand);
            SLinkOperations.setTarget(redirectedCommand,"command",command,true);
            return redirectedCommand;
          }
          public String getDescriptionText(          String pattern){
            if ((item).equals(">")) {
              return "redirect output";
            }
 else             if ((item).equals("&>")) {
              return "redirect error output";
            }
            return "redirect input";
          }
        }
);
      }
    }
  }
  return result;
}
