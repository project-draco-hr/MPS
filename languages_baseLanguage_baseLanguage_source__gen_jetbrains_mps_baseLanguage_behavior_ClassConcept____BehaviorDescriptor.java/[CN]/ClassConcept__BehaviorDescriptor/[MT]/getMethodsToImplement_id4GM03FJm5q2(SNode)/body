{
  List<SNode> methods=new ArrayList<SNode>();
  MethodOverrideHelper helper=new MethodOverrideHelper(__thisNode__);
  for (  SNode method : (List<SNode>)helper.getMethods()) {
    boolean isOverridden=false;
    List<SNode> overridenMethods=helper.getOverriddenMethods(method);
    for (    SNode overridingMethod : overridenMethods) {
      isOverridden=isOverridden || (SNodeOperations.isInstanceOf(overridingMethod,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration")) && SPropertyOperations.getBoolean(SNodeOperations.getConceptDeclaration(SNodeOperations.cast(overridingMethod,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration"))),MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0x403a32c5772c7ec2L,"abstract")));
    }
    if (isOverridden) {
      continue;
    }
    SNode container=SNodeOperations.getNodeAncestor(method,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"),false,false);
    if (container == __thisNode__ || container == null) {
      continue;
    }
    if (SNodeOperations.isInstanceOf(container,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface")) || SPropertyOperations.getBoolean(method,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,0x1126a8d157dL,"isAbstract"))) {
      ListSequence.fromList(methods).addElement(method);
    }
  }
  return methods;
}
