{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,1068581517664l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,1068581517664l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          SNode sc=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.lang.plugin.structure.ParameterizedShortcutChange",true,false);
          return SLinkOperations.getChildren(SLinkOperations.getTarget(sc,MetaAdapterFactory.getReferenceLink(new UUID(2952642368903463569l,-5856357300648461647l),6193305307616715384l,6193305307616734326l,"action")),MetaAdapterFactory.getContainmentLink(new UUID(2952642368903463569l,-5856357300648461647l),1203071646776l,1227008813498l,"constructionParameter"));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_ikwodz_a0a1a0a0a1a0b0a1a3;
        }
      }
;
    }
  }
);
  return references;
}
