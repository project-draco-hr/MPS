{
  final List<VirtualFile> inVCS=new LinkedList<VirtualFile>();
  List<File> notInVCS=new LinkedList<File>();
  final ProjectLevelVcsManager manager=myProject.getComponent(ProjectLevelVcsManager.class);
  for (  VirtualFile f : files) {
    if (f != null) {
      AbstractVcs vcs=manager.getVcsFor(f);
      if (vcs != null) {
        inVCS.add(f);
      }
 else {
        File iofile=VFileSystem.toFile(f);
        if (iofile != null) {
          notInVCS.add(iofile);
        }
      }
    }
  }
  boolean result=true;
  invokeLater(new Runnable(){
    public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          LocalFileSystem lfs=LocalFileSystem.getInstance();
          for (          VirtualFile vfile : inVCS) {
            if (vfile != null) {
              AbstractVcs vcs=manager.getVcsFor(vfile);
              if (vcs != null) {
                CheckinEnvironment ci=vcs.getCheckinEnvironment();
                if (ci != null && isUnderVCS(myProject,vfile)) {
                  FilePath path=VcsContextFactory.SERVICE.getInstance().createFilePathOn(vfile);
                  ci.scheduleMissingFileForDeletion(Collections.singletonList(path));
                }
              }
            }
          }
        }
      }
);
    }
  }
);
  IProjectHandler projectHandler=myProject.getComponent(MPSProjectHolder.class).getMPSProject().getProjectHandler();
  if (projectHandler != null) {
    try {
      projectHandler.deleteFilesAndRemoveFromVCS(notInVCS);
    }
 catch (    RemoteException e) {
      LOG.error(e);
      return false;
    }
  }
 else {
    for (    File f : notInVCS) {
      f.delete();
    }
  }
  return result;
}
