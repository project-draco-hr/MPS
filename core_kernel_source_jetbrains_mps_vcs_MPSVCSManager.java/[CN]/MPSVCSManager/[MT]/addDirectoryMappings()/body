{
  List<VcsDirectoryMapping> vcsMappings=new ArrayList<VcsDirectoryMapping>();
  List<IModule> allModules=MPSModuleRepository.getInstance().getAllModules();
  Map<AbstractVcs,Set<VirtualFile>> vcss=new HashMap<AbstractVcs,Set<VirtualFile>>();
  for (  VcsDirectoryMapping map : myManager.getDirectoryMappings()) {
    AbstractVcs vcs=myManager.findVcsByName(map.getVcs());
    Set<VirtualFile> files=vcss.get(vcs);
    if (files == null) {
      files=new HashSet<VirtualFile>();
      vcss.put(vcs,files);
    }
    files.add(VFileSystem.getFile(map.getDirectory()));
  }
  for (  IModule module : allModules) {
    if (module.isPackaged())     continue;
    IFile descriptor=module.getDescriptorFile();
    if (descriptor == null)     continue;
    VirtualFile file=VFileSystem.getFile(descriptor.getParent());
    if (file == null)     continue;
    AbstractVcs vcs=myManager.findVersioningVcs(file);
    if (vcs == null)     continue;
    while (true) {
      VirtualFile parent=file.getParent();
      if (parent == null) {
        break;
      }
      if (vcs.isVersionedDirectory(parent)) {
        file=parent;
      }
 else {
        break;
      }
    }
    Set<VirtualFile> files=vcss.get(vcs);
    if (files == null) {
      files=new HashSet<VirtualFile>();
      vcss.put(vcs,files);
    }
    files.add(file);
  }
  for (  AbstractVcs vcs : vcss.keySet()) {
    Set<VirtualFile> files=vcss.get(vcs);
    Collection<String> roots=getRoots(files);
    for (    String path : roots) {
      vcsMappings.add(new VcsDirectoryMapping(path,vcs.getName()));
    }
  }
  myManager.setDirectoryMappings(vcsMappings);
}
