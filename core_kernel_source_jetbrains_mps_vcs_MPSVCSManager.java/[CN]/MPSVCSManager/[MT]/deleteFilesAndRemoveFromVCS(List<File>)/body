{
  final List<File> inVCS=new LinkedList<File>();
  List<File> notInVCS=new LinkedList<File>();
  ProjectLevelVcsManager manager=myProject.getComponent(ProjectLevelVcsManager.class);
  for (  File f : files) {
    VirtualFile virtualFile=VFileSystem.getFile(f);
    if (virtualFile != null) {
      AbstractVcs vcs=manager.getVcsFor(virtualFile);
      if (vcs != null) {
        inVCS.add(f);
      }
 else {
        notInVCS.add(f);
      }
    }
  }
  boolean result=true;
  invokeLater(new Runnable(){
    public void run(){
      ApplicationManager.getApplication().runWriteAction(new Runnable(){
        public void run(){
          LocalFileSystem lfs=LocalFileSystem.getInstance();
          for (          File file : inVCS) {
            VirtualFile vfile=lfs.refreshAndFindFileByIoFile(file);
            if (vfile != null) {
              try {
                vfile.delete(this);
              }
 catch (              IOException ex) {
                ex.printStackTrace();
              }
            }
          }
        }
      }
);
    }
  }
);
  IProjectHandler projectHandler=myProject.getComponent(MPSProjectHolder.class).getMPSProject().getProjectHandler();
  if (projectHandler != null) {
    try {
      projectHandler.deleteFilesAndRemoveFromVCS(notInVCS);
    }
 catch (    RemoteException e) {
      LOG.error(e);
      return false;
    }
  }
 else {
    for (    File f : files) {
      f.delete();
    }
  }
  return result;
}
