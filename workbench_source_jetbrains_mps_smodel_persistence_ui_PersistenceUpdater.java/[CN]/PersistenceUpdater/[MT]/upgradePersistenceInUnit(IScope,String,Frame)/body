{
  final List<EditableSModelDescriptor> modelDescriptors=new ArrayList<EditableSModelDescriptor>();
  final List<SModelDescriptor> scopeModelDescriptors=new ArrayList<SModelDescriptor>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      for (      SModelDescriptor d : scope.getOwnModelDescriptors()) {
        scopeModelDescriptors.add(d);
      }
    }
  }
);
  for (  SModelDescriptor modelDescriptor : scopeModelDescriptors) {
    if (!SModelStereotype.isUserModel(modelDescriptor))     continue;
    int version=-1;
    if (modelDescriptor.getLoadingState() != ModelLoadingState.NOT_LOADED) {
      version=modelDescriptor.getSModel().getPersistenceVersion();
    }
 else {
      if (modelDescriptor instanceof EditableSModelDescriptor) {
        IFile file=((EditableSModelDescriptor)modelDescriptor).getModelFile();
        if (file != null) {
          version=ModelPersistence.loadDescriptor(file).getPersistenceVersion();
        }
      }
    }
    if (version != -1 && version < PersistenceSettings.MAX_VERSION) {
      modelDescriptors.add((EditableSModelDescriptor)modelDescriptor);
    }
  }
  if (modelDescriptors.isEmpty()) {
    JOptionPane.showMessageDialog(mainframe,"No Models To Upgrade Found");
    return;
  }
  PersistenceSettings persistenceSettings=ApplicationManager.getApplication().getComponent(PersistenceSettings.class);
  boolean needsAskUpgradePersistence=!persistenceSettings.isUserPersistenceVersionDefined() || persistenceSettings.getUserSelectedPersistenceVersion() < PersistenceSettings.MAX_VERSION;
  UpdatePersistenceDialog updatePersistenceDialog=new UpdatePersistenceDialog(modelDescriptors,mainframe,unitDescription,needsAskUpgradePersistence);
  updatePersistenceDialog.showDialog();
  if (updatePersistenceDialog.getAnswer()) {
    ModelAccess.instance().runWriteAction(new Runnable(){
      public void run(){
        upgradePersistence(modelDescriptors,PersistenceSettings.MAX_VERSION);
      }
    }
);
    if (needsAskUpgradePersistence && updatePersistenceDialog.needsSetVersion()) {
      persistenceSettings.setUserPersistenceVersion(PersistenceSettings.MAX_VERSION);
    }
  }
}
