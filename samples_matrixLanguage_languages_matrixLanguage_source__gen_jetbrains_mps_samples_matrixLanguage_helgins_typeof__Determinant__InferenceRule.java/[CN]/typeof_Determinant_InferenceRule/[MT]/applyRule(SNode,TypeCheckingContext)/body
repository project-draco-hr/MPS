{
{
    final SNode type=TypeChecker.getInstance().getRuntimeSupport().typeOf(SLinkOperations.getTarget(nodeToCheck,"literal",true),"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.helgins)","1210175481776",true);
    TypeChecker.getInstance().getRuntimeSupport().whenConcrete(type,new Runnable(){
      public void run(){
        if (!(SNodeOperations.isInstanceOf(TypeChecker.getInstance().getEquationManager().getRepresentator(type),"jetbrains.mps.samples.matrixLanguage.structure.MatrixType"))) {
{
            BaseIntentionProvider intentionProvider=null;
            TypeChecker.getInstance().reportTypeError(nodeToCheck,"Should be matrix but was " + SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(TypeChecker.getInstance().getEquationManager().getRepresentator(type)),"name"),"r:fa2583c4-881b-48c1-ac69-00d684ad49dd(jetbrains.mps.samples.matrixLanguage.helgins@12_0)","1222950472394",intentionProvider);
          }
        }
        SNode matrix=(SNode)TypeChecker.getInstance().getEquationManager().getRepresentator(type);
{
          SNode _nodeToCheck_1029348928467=nodeToCheck;
          BaseIntentionProvider intentionProvider=null;
          TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(nodeToCheck,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.helgins)","1215405423730",true),SLinkOperations.getTarget(matrix,"scalarType",true),_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.helgins)","1215405423725",intentionProvider);
        }
      }
    }
,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.helgins)","1210172894554");
  }
}
