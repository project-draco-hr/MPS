{
  if (child && AttributesRolesUtil.isAttributeRole(role)) {
    return null;
  }
  String relationKind=child ? "child" : "referent";
  AbstractConceptDeclaration concept=sourceNode.getConceptDeclarationAdapter();
  if (concept == null) {
    return new RoleValidationStatus(sourceNode,"cannot find concept '" + sourceNode.getConceptFqName() + "'");
  }
  LinkDeclaration link=SModelSearchUtil.findMostSpecificLinkDeclaration(concept,role);
  if (link == null) {
    return new RoleValidationStatus(sourceNode,"concept '" + concept.getName() + "' cannot have "+ relationKind+ " with role '"+ role+ "'",GeneratorUtil.describe(targetNode,relationKind + (child ? "" : " (hidden in editor)")));
  }
  if (!SModelUtil_new.isAcceptableTarget(link,targetNode)) {
    if (child && targetNode.getUserObject(DelayedChanges.MAP_SRC_TEMP_NODE) != null) {
      return null;
    }
    String expected=link.getTarget().getName();
    String was=targetNode.getConceptShortName();
    return new RoleValidationStatus(sourceNode,relationKind + " '" + expected+ "' is expected for role '"+ role+ "' but was '"+ was+ "'",GeneratorUtil.describe(targetNode,relationKind));
  }
  return null;
}
