{
  SNode childStatement=child;
  while ((childStatement != null) && SNodeOperations.getParent(childStatement) != __thisNode__) {
    childStatement=SNodeOperations.getParent(childStatement);
  }
  if (SConceptOperations.isExactly(SNodeOperations.asSConcept(kind),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37a7f6eL,"jetbrains.mps.baseLanguage.structure.VariableDeclaration"))) {
    if (SLinkOperations.getTarget(__thisNode__,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10ef02a8c6aL,0x10ef02ec241L,"expression")) == childStatement) {
      return ScopeUtils.lazyParentScope(__thisNode__,kind);
    }
    List<SNode> variables=new ArrayList<SNode>();
    for (    SNode caseNode : SLinkOperations.getChildren(__thisNode__,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10ef02a8c6aL,0x10ef02edcafL,"case"))) {
      if (caseNode == childStatement) {
        break;
      }
      ListSequence.fromList(variables).addSequence(ListSequence.fromList(StatementList__BehaviorDescriptor.getLocalVariableDeclarations_id3tkxRydYUUs.invoke(SLinkOperations.getTarget(caseNode,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10ef02cdd1bL,0x10ef02d8048L,"body")),null)));
    }
    return Scopes.forVariables(kind,variables,ScopeUtils.lazyParentScope(__thisNode__,kind));
  }
  if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(kind),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x50c493bf9552f6aL,"jetbrains.mps.baseLanguage.structure.LoopLabel"))) {
    List<SNode> parameter=new ArrayList<SNode>();
    if ((SLinkOperations.getTarget(__thisNode__,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10ef02a8c6aL,0x4091554b655a230eL,"switchLabel")) != null)) {
      ListSequence.fromList(parameter).addElement(SLinkOperations.getTarget(__thisNode__,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10ef02a8c6aL,0x4091554b655a230eL,"switchLabel")));
    }
    SNode[] nodesInScope=new SNode[ListSequence.fromList(SLinkOperations.getChildren(__thisNode__,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10ef02a8c6aL,0x10ef02edcafL,"case"))).count() + 1];
    for (int i=0; i < ListSequence.fromList(SLinkOperations.getChildren(__thisNode__,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10ef02a8c6aL,0x10ef02edcafL,"case"))).count(); i++) {
      nodesInScope[i]=ListSequence.fromList(SLinkOperations.getChildren(__thisNode__,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10ef02a8c6aL,0x10ef02edcafL,"case"))).getElement(i);
    }
    nodesInScope[nodesInScope.length - 1]=SLinkOperations.getTarget(__thisNode__,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10ef02a8c6aL,0x10ef02c1b6eL,"defaultBlock"));
    if (Arrays.asList(nodesInScope).contains(child)) {
      return Scopes.forLoopLabels(parameter,ScopeUtils.lazyParentScope(__thisNode__,kind));
    }
  }
  return null;
}
