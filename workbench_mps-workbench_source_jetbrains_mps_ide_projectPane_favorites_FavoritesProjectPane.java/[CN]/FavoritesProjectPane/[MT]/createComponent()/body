{
  if (isComponentCreated()) {
    rebuildTree();
    return myScrollPane;
  }
  myTree=new MyLogicalViewTree(ProjectHelper.toMPSProject(getProject()));
  myFavoritesListener=new MPSFavoritesListener(){
    @Override public void rootsChanged(    String listName){
      refreshMySubIdsAndSelect(listName);
      getTree().rebuildLater();
    }
    @Override public void listAdded(    String listName){
      refreshMySubIdsAndSelect(listName);
    }
    @Override public void listRemoved(    String listName){
      String selectedSubId=getSubId();
      refreshMySubIdsAndSelect(selectedSubId);
    }
    private void refreshMySubIdsAndSelect(    String listName){
      myFavoritesManager.removeListener(myFavoritesListener);
      getProjectView().removeProjectPane(FavoritesProjectPane.this);
      getProjectView().addProjectPane(FavoritesProjectPane.this);
      myFavoritesManager.addListener(myFavoritesListener);
      if (ArrayUtil.find(myFavoritesManager.getFavoriteNames(),listName) == -1) {
        getProjectView().changeView(ProjectPane.ID);
        return;
      }
      getProjectView().changeView(ID,listName);
    }
  }
;
  myFavoritesManager.addListener(myFavoritesListener);
  rebuildTree();
  myScrollPane=ScrollPaneFactory.createScrollPane(myTree);
  return myScrollPane;
}
