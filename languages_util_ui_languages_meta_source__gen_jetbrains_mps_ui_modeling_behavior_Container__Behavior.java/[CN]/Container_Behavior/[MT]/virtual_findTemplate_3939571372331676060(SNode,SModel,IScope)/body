{
  final List<SNode> asc=Sequence.fromIterable(Container_Behavior.call_allSpecializes_513490887686361085(thisNode)).toListSequence();
  return ListSequence.fromList(SModelOperations.getNodesIncludingImported(model,scope,"jetbrains.mps.ui.modeling.structure.ContainerTemplate")).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode ct){
      return ListSequence.fromList(asc).contains(SLinkOperations.getTarget(ct,"container",false));
    }
  }
).sort(new ISelector<SNode,Comparable<?>>(){
    public Comparable<?> select(    SNode ct){
      return ListSequence.fromList(asc).indexOf(SLinkOperations.getTarget(ct,"container",false));
    }
  }
,true).first();
}
