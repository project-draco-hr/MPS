{
{
    SAbstractConcept cncpt=((SAbstractConcept)concept);
    Integer preIndex=indices_xbvbvu_a0a.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return Collections.<ConceptEditor>singletonList(new ConstantValue_Editor());
      }
    break;
case 1:
  if (true) {
    return Collections.<ConceptEditor>singletonList(new ExtractStatementListExpression_Editor());
  }
break;
case 2:
if (true) {
return Collections.<ConceptEditor>singletonList(new ExtractStatementListInnerExpression_Editor());
}
break;
case 3:
if (true) {
return Collections.<ConceptEditor>singletonList(new ExtractStaticInnerClassExpression_Editor());
}
break;
case 4:
if (true) {
return Collections.<ConceptEditor>singletonList(new ExtractStaticMethodExpression_Editor());
}
break;
case 5:
if (true) {
return Collections.<ConceptEditor>singletonList(new ExtractStaticMethod_CallExpression_Editor());
}
break;
case 6:
if (true) {
return Collections.<ConceptEditor>singletonList(new ExtractToConstantExpression_Editor());
}
break;
case 7:
if (true) {
return Collections.<ConceptEditor>singletonList(new ExtractToConstantRefExpression_Editor());
}
break;
case 8:
if (true) {
return Collections.<ConceptEditor>singletonList(new InternalAnonymousClass_Editor());
}
break;
case 9:
if (true) {
return Collections.<ConceptEditor>singletonList(new InternalAnonymousClassCreator_Editor());
}
break;
case 10:
if (true) {
return Collections.<ConceptEditor>singletonList(new InternalClassCreator_Editor());
}
break;
case 11:
if (true) {
return Collections.<ConceptEditor>singletonList(new InternalClassExpression_Editor());
}
break;
case 12:
if (true) {
return Collections.<ConceptEditor>singletonList(new InternalClassifierType_Editor());
}
break;
case 13:
if (true) {
return Collections.<ConceptEditor>singletonList(new InternalNewExpression_Editor());
}
break;
case 14:
if (true) {
return Collections.<ConceptEditor>singletonList(new InternalPartialFieldReference_Editor());
}
break;
case 15:
if (true) {
return Collections.<ConceptEditor>singletonList(new InternalPartialInstanceMethodCall_Editor());
}
break;
case 16:
if (true) {
return Collections.<ConceptEditor>singletonList(new InternalStaticFieldReference_Editor());
}
break;
case 17:
if (true) {
return Collections.<ConceptEditor>singletonList(new InternalStaticMethodCall_Editor());
}
break;
case 18:
if (true) {
return Collections.<ConceptEditor>singletonList(new InternalSuperMethodCallOperation_Editor());
}
break;
case 19:
if (true) {
return Collections.<ConceptEditor>singletonList(new InternalThisExpression_Editor());
}
break;
case 20:
if (true) {
return Collections.<ConceptEditor>singletonList(new InternalTypedStaticFieldReference_Editor());
}
break;
case 21:
if (true) {
return Collections.<ConceptEditor>singletonList(new InternalVariableReference_Editor());
}
break;
case 22:
if (true) {
return Collections.<ConceptEditor>singletonList(new TypeHintExpression_Editor());
}
break;
case 23:
if (true) {
return Collections.<ConceptEditor>singletonList(new WeakClassReference_Editor());
}
break;
default :
}
}
return Collections.<ConceptEditor>emptyList();
}
