{
  return new FilteringScope(ClassifierScopes.getVisibleClassifiersScope(contextNode,scope)){
    @Override public boolean isExcluded(    SNode node){
      if (!(SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.structure.ClassConcept"))) {
        return true;
      }
      SNode clazz=SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.ClassConcept");
      if (SPropertyOperations.getBoolean(clazz,"abstractClass")) {
        return true;
      }
      return !(DefaultConstructorUtils.containsDefaultConstructor(clazz));
    }
  }
;
}
