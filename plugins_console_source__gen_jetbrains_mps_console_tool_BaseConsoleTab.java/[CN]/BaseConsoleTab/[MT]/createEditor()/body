{
  this.myEditor=new UIEditorComponent(check_6q36mf_a0a0a0a02(ProjectHelper.toMPSProject(myTool.getProject())),null){
    @Nullable @Override public Object getData(    @NonNls String key){
      if (PlatformDataKeys.FILE_EDITOR.is(key)) {
        return myFileEditor;
      }
      if (PlatformDataKeys.PASTE_PROVIDER.is(key)) {
        PasteProvider parentPasteProvider=as_6q36mf_a0a0a1a0a0a0a0u(super.getData(key),PasteProvider.class);
        return (myTool.getPasteAsRef() ? new BaseConsoleTab.MyPasteProvider(parentPasteProvider) : parentPasteProvider);
      }
      return super.getData(key);
    }
    @Override public boolean isReadOnly(){
      final SNode selectedNode=getSelectedNode();
      final Wrappers._boolean editable=new Wrappers._boolean(false);
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          if (selectedNode != null) {
            EditorCell selectedCell=getSelectedCell();
            if (eq_6q36mf_a0a1a0a0a0a0a2a1a0a0a0u(check_6q36mf_a0a1a0a0c0b0a0a0a02(selectedCell),SLinkOperations.getTarget(myRoot,"commandHolder",true)) && check_6q36mf_a0b0a0a2a1a0a0a0u(selectedCell)) {
              editable.value=false;
            }
 else {
              editable.value=SNodeOperations.getAncestor(selectedNode,"jetbrains.mps.console.base.structure.CommandHolder",true,false) == SLinkOperations.getTarget(myRoot,"commandHolder",true);
            }
          }
 else {
            List<SNode> selectedNodes=getSelectedNodes();
            if (selectedNodes != null) {
              editable.value=ListSequence.fromList(selectedNodes).all(new IWhereFilter<SNode>(){
                public boolean accept(                SNode it){
                  return SNodeOperations.getAncestor(it,"jetbrains.mps.console.base.structure.CommandHolder",false,false) == SLinkOperations.getTarget(myRoot,"commandHolder",true);
                }
              }
);
            }
          }
        }
      }
);
      return !(editable.value);
    }
  }
;
  myEditor.editNode(myRoot);
}
