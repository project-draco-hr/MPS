{
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      SNodeReference pastingNodeReference=null;
      try {
        for (        Transferable trf : CopyPasteManagerEx.getInstanceEx().getAllContents()) {
          if (trf != null && trf.isDataFlavorSupported(SModelDataFlavor.sNodeReference)) {
            pastingNodeReference=(SNodeReference)trf.getTransferData(SModelDataFlavor.sNodeReference);
          }
          break;
        }
      }
 catch (      UnsupportedFlavorException ignored) {
      }
catch (      IOException ignored) {
      }
      EditorCell currentCell=myEditor.getSelectedCell();
      SNode referenceTarget=check_6q36mf_a0d0a0a5lb(pastingNodeReference);
      if (referenceTarget != null && currentCell != null && !(check_6q36mf_a0a4a0a0f73(check_6q36mf_a0a0e0a0a5lb(pastingNodeReference),myModel))) {
        SNode refContainer=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-2442401883381282302l,-5546511894809623691l),5842059399443118718l,"jetbrains.mps.console.base.structure.PastedNodeReference")));
        SLinkOperations.setTarget(refContainer,MetaAdapterFactory.getReferenceLink(new UUID(-2442401883381282302l,-5546511894809623691l),3939645998855102389l,328850564588043375l,"target"),referenceTarget);
        NodePaster paster=new NodePaster(ListSequence.fromListAndArray(new ArrayList<SNode>(),refContainer));
        if (paster.canPaste(currentCell)) {
          paster.paste(currentCell);
        }
 else         if (paster.canPasteWithRemove(myEditor.getSelectedNodes())) {
          paster.pasteWithRemove(myEditor.getSelectedNodes());
        }
        TemporaryModels.getInstance().addMissingImports(myModel);
      }
 else {
        check_6q36mf_a0a0e0a0a5lb_0(myDefaultPasteProvider,context);
      }
    }
  }
);
}
