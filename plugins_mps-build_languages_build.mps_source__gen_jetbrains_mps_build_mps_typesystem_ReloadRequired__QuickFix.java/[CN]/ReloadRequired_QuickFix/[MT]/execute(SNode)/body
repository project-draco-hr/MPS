{
  SNode module=SNodeOperations.as(node,MetaAdapterFactory.getConcept(new UUID(934837630734519964l,-6831122735637083229l),322010710375871467l,"jetbrains.mps.build.mps.structure.BuildMps_AbstractModule"));
  if (module == null) {
    return;
  }
  SNode project=SNodeOperations.as(SNodeOperations.getContainingRoot(node),MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),5617550519002745363l,"jetbrains.mps.build.structure.BuildProject"));
  if ((project == null)) {
    return;
  }
  if (SNodeOperations.isInstanceOf(module,MetaAdapterFactory.getConcept(new UUID(934837630734519964l,-6831122735637083229l),5507251971038816436l,"jetbrains.mps.build.mps.structure.BuildMps_Generator"))) {
    return;
  }
  PathConverter pathConverter=new PathConverter(project);
  try {
    VisibleModules visible=new VisibleModules(project);
    visible.collect();
    ModuleLoader.createModuleChecker(module,visible,pathConverter).check(ModuleChecker.CheckType.LOAD_IMPORTANT_PART);
  }
 catch (  ModuleLoaderException ex) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error(ex.getMessage(),ex);
    }
  }
}
