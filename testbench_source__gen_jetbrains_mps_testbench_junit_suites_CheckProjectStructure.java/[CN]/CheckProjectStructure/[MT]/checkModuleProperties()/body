{
  final List<String> errors=new ArrayList<String>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      List<SModule> modules=ListSequence.fromListAndArray(new ArrayList<SModule>(),myModule);
      if (myModule instanceof Language) {
        ListSequence.fromList(modules).addSequence(CollectionSequence.fromCollection(((Language)myModule).getGenerators()));
      }
      for (      SModule sm : modules) {
        MessageCollectConsumer consumer=new MessageCollectConsumer();
        ValidationUtil.validateModule(sm,consumer);
        if (consumer.getErrors().isEmpty()) {
          continue;
        }
        StringBuilder errorMessages=new StringBuilder();
        for (        String item : consumer.getErrors()) {
          errorMessages.append("\t").append(item).append("\n");
        }
        errors.add("Error in module " + sm.getModuleName() + ": "+ errorMessages.toString());
      }
    }
  }
);
  Assert.assertTrue("Module property or dependency errors:\n" + CheckingTestsUtil.formatErrors(errors),errors.isEmpty());
}
