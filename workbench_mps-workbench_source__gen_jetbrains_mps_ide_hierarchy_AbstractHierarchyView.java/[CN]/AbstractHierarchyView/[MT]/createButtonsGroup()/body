{
  GroupedToggleAction childrenAction=new GroupedToggleAction("Children Hierarchy","Show children hierarchy",Icons.CHILDREN_ICON,true){
    public void select(){
      myHierarchyTree.setParentHierarchy(false);
      myHierarchyTree.rebuildNow();
    }
  }
;
  GroupedToggleAction parentAction=new GroupedToggleAction("Parent Hierarchy","Show parent hierarchy",Icons.PARENT_ICON,false){
    public void select(){
      myHierarchyTree.setParentHierarchy(true);
      myHierarchyTree.rebuildNow();
    }
  }
;
  ToggleActionGroup toggleGroup=new ToggleActionGroup();
  toggleGroup.add(childrenAction);
  toggleGroup.add(parentAction);
  ToggleAction thisModelAction=new ToggleAction("Only This Model","Show hierarchy only for model",Icons.THIS_MODEL_ICON){
    private boolean mySelected=false;
    public boolean isSelected(    AnActionEvent e){
      return mySelected;
    }
    public void setSelected(    AnActionEvent e,    boolean state){
      mySelected=state;
      myHierarchyTree.setIsOnlyInOneModel(mySelected);
    }
  }
;
  ToggleAction generatorModelsAction=new ToggleAction("Show Generator Classes","Show classes from generator models in hierarchy",Icons.GENERATOR_ICON){
    private boolean mySelected=false;
    public boolean isSelected(    AnActionEvent e){
      return mySelected;
    }
    public void setSelected(    AnActionEvent e,    boolean state){
      mySelected=state;
      myHierarchyTree.setShowGeneratorModels(mySelected);
    }
  }
;
  BaseAction expandAllAction=new BaseAction("Expand all","Expand all nodes",AllIcons.Actions.Expandall){
    protected void doExecute(    AnActionEvent e,    Map<String,Object> _params){
      myHierarchyTree.expandAll();
    }
  }
;
  BaseAction collapseAllAction=new BaseAction("Collapse all","Collapse all nodes",AllIcons.Actions.Collapseall){
    protected void doExecute(    AnActionEvent e,    Map<String,Object> _params){
      myHierarchyTree.collapseAll();
    }
  }
;
  BaseAction refreshAction=new BaseAction("Refresh","Refresh",AllIcons.Actions.Refresh){
    protected void doExecute(    AnActionEvent e,    Map<String,Object> _params){
      myHierarchyTree.rebuildNow();
    }
  }
;
  return ActionUtils.groupFromActions(childrenAction,parentAction,thisModelAction,generatorModelsAction,expandAllAction,collapseAllAction,refreshAction,createCloseAction());
}
