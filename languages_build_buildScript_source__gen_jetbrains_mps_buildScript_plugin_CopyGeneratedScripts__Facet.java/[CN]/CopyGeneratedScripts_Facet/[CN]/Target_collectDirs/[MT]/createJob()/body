{
  return new IJob.Stub(){
    public IResult execute(    final Iterable<IResource> input,    final IJobMonitor monitor,    final IPropertiesAccessor pa){
      Iterable<IResource> _output_ixa0pj_a0b=null;
switch (0) {
case 0:
        pa.global().properties(Target_collectDirs.this.getName(),CopyGeneratedScripts_Facet.Target_collectDirs.Parameters.class).originalNodesToDestination(MapSequence.fromMap(new HashMap<SNodePointer,String>()));
      pa.global().properties(Target_collectDirs.this.getName(),CopyGeneratedScripts_Facet.Target_collectDirs.Parameters.class).status(MapSequence.fromMap(new HashMap<SModelReference,GenerationStatus>()));
    for (    IResource resource : Sequence.fromIterable(input)) {
      final GResource gres=(GResource)resource;
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          MapSequence.fromMap(pa.global().properties(Target_collectDirs.this.getName(),CopyGeneratedScripts_Facet.Target_collectDirs.Parameters.class).status()).put(gres.model().getSModelReference(),gres.status());
          Iterable<SNode> buildScriptDescendants=ListSequence.fromList(SModelOperations.getRoots(gres.status().getOutputModel(),null)).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              Object userObject=it.getUserObject(GenerationUtil.SCRIPTS_DIR_PROPERTY);
              return userObject != null && userObject instanceof String;
            }
          }
);
          for (          SNode descendant : Sequence.fromIterable(buildScriptDescendants)) {
            SNode originalNode=TextGenerator.getOriginalInputNodeForNearestParent(descendant);
            MapSequence.fromMap(pa.global().properties(Target_collectDirs.this.getName(),CopyGeneratedScripts_Facet.Target_collectDirs.Parameters.class).originalNodesToDestination()).put(new SNodePointer(originalNode),((String)descendant.getUserObject(GenerationUtil.SCRIPTS_DIR_PROPERTY)));
          }
        }
      }
);
      _output_ixa0pj_a0b=Sequence.fromIterable(_output_ixa0pj_a0b).concat(Sequence.fromIterable(Sequence.<IResource>singleton(resource)));
    }
default :
  return new IResult.SUCCESS(_output_ixa0pj_a0b);
}
}
}
;
}
