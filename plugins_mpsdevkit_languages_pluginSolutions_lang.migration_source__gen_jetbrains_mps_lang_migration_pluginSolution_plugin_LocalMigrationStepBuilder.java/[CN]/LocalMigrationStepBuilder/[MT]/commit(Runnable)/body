{
  Map<RefactoringPart,Iterable<SNodeReference>> affectedNodes=MapSequence.fromMap(new HashMap<RefactoringPart,Iterable<SNodeReference>>());
  for (  MoveNodePart part : ListSequence.fromList(myParts)) {
    MapSequence.fromMap(affectedNodes).put(part,part.getAffectedNodes(myProject.getScope(),myProject.getRepository()));
  }
  callBack.run();
  for (  MoveNodePart part : ListSequence.fromList(myParts)) {
    part.execute(Sequence.fromIterable(MapSequence.fromMap(affectedNodes).get(part)).select(new ISelector<SNodeReference,SNode>(){
      public SNode select(      SNodeReference it){
        return it.resolve(myProject.getRepository());
      }
    }
));
  }
}
