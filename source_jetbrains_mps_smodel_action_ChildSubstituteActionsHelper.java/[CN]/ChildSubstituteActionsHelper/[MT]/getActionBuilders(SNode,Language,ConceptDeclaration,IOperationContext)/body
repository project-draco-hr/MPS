{
  List<NodeSubstituteActionsBuilder> actionsBuilders=new LinkedList<NodeSubstituteActionsBuilder>();
  SModelDescriptor actionsModelDescr=language.getActionsModelDescriptor();
  if (actionsModelDescr != null) {
    List<SNode> roots=actionsModelDescr.getSModel().getRoots();
    for (    SNode root : roots) {
      if (root instanceof NodeSubstituteActions) {
        Iterator<NodeSubstituteActionsBuilder> iterator=((NodeSubstituteActions)root).actionsBuilders();
        while (iterator.hasNext()) {
          NodeSubstituteActionsBuilder actionsBuilder=iterator.next();
          ConceptDeclaration applicableConcept=actionsBuilder.getApplicableConcept();
          if (SModelUtil.isAssignableConcept(applicableConcept,childConcept) && satisfiesPrecondition(actionsBuilder,parentNode,context)) {
            actionsBuilders.add(actionsBuilder);
          }
        }
      }
    }
  }
  return actionsBuilders;
}
