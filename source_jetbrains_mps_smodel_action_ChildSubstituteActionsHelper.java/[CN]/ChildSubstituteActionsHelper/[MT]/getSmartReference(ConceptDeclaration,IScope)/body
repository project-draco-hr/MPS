{
  String expectedReferentRole=null;
  String alias=referenceDeclaringConcept.getConceptProperty("alias",scope);
  if (alias != null) {
    if (!alias.matches(".*<\\{.+\\}>.*")) {
      return null;
    }
    String[] matches=alias.split("<\\{|\\}>");
    expectedReferentRole=matches[1];
  }
  List<LinkDeclaration> links=SModelSearchUtil.getReferenceLinkDeclarationsExcludingOverridden(referenceDeclaringConcept);
  if (expectedReferentRole != null) {
    for (    LinkDeclaration linkDeclaration : links) {
      if (expectedReferentRole.equals(linkDeclaration.getRole())) {
        return linkDeclaration;
      }
    }
    LOG.warning("The '" + alias + "' doesn't match any link in "+ referenceDeclaringConcept.getDebugText());
  }
 else {
    if (links.size() == 1) {
      if (SModelUtil.getGenuineLinkSourceCardinality(links.get(0)) == Cardinality._1) {
        return links.get(0);
      }
    }
  }
  return null;
}
