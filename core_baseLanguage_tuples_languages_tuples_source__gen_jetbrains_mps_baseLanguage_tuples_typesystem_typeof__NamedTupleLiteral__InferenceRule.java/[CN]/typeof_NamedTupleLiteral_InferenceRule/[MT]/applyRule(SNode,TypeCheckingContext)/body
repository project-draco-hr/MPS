{
  if (!(ListSequence.fromList(SLinkOperations.getTargets(literal,"componentRef",true)).count() == ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(literal,"tupleDeclaration",false),"component",true)).count())) {
    BaseIntentionProvider intentionProvider=null;
    IErrorTarget errorTarget=new NodeErrorTarget();
    IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(literal,"Invalid components number","r:e119dbbd-3529-4067-8bad-6b9edd79d0b6(jetbrains.mps.baseLanguage.tuples.typesystem)","1239579091243",intentionProvider,errorTarget);
  }
  Map<SNode,List<SNode>> mmap=MapSequence.fromMap(new HashMap<SNode,List<SNode>>());
  for (  SNode cmpRef : ListSequence.fromList(SLinkOperations.getTargets(literal,"componentRef",true))) {
    SNode matchedType=RulesFunctions_BaseLanguage.inference_matchTypeWithTypeVariables(typeCheckingContext,SLinkOperations.getTarget(SLinkOperations.getTarget(cmpRef,"componentDeclaration",false),"type",true),mmap);
{
      SNode _nodeToCheck_1029348928467=SLinkOperations.getTarget(cmpRef,"value",true);
      BaseIntentionProvider intentionProvider=null;
      EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:e119dbbd-3529-4067-8bad-6b9edd79d0b6(jetbrains.mps.baseLanguage.tuples.typesystem)","1901065672425830131",0,intentionProvider);
      _info_12389875345.setInequationGroup("default");
      typeCheckingContext.createLessThanInequation((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467,"r:e119dbbd-3529-4067-8bad-6b9edd79d0b6(jetbrains.mps.baseLanguage.tuples.typesystem)","1901065672425830133",true),(SNode)matchedType,false,_info_12389875345);
    }
  }
  List<SNode> PTYPES=new ArrayList<SNode>();
  for (  SNode foo : ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(literal,"tupleDeclaration",false),"typeVariableDeclaration",true))) {
    List<SNode> nodes=MapSequence.fromMap(mmap).get(foo);
    final SNode PTYPE_typevar_1239968089672=typeCheckingContext.createNewRuntimeTypesVariable();
    if (ListSequence.fromList(nodes).isNotEmpty()) {
{
        SNode _nodeToCheck_1029348928467=literal;
        BaseIntentionProvider intentionProvider=null;
        EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:e119dbbd-3529-4067-8bad-6b9edd79d0b6(jetbrains.mps.baseLanguage.tuples.typesystem)","1239968096090",0,intentionProvider);
        typeCheckingContext.createEquation((SNode)typeCheckingContext.getEquationManager().getRepresentator(PTYPE_typevar_1239968089672),(SNode)ListSequence.fromList(nodes).first(),_info_12389875345);
      }
    }
    ListSequence.fromList(PTYPES).addElement(typeCheckingContext.getEquationManager().getRepresentator(PTYPE_typevar_1239968089672));
  }
{
    SNode _nodeToCheck_1029348928467=literal;
    BaseIntentionProvider intentionProvider=null;
    EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:e119dbbd-3529-4067-8bad-6b9edd79d0b6(jetbrains.mps.baseLanguage.tuples.typesystem)","1239901165879",0,intentionProvider);
    typeCheckingContext.createEquation((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467,"r:e119dbbd-3529-4067-8bad-6b9edd79d0b6(jetbrains.mps.baseLanguage.tuples.typesystem)","1239968222968",true),(SNode)new typeof_NamedTupleLiteral_InferenceRule.QuotationClass_bcpcms_a0a5a0().createNode(PTYPES,SLinkOperations.getTarget(literal,"tupleDeclaration",false),typeCheckingContext),_info_12389875345);
  }
  RulesFunctions_BaseLanguage.inference_equateMatchingTypeVariables(typeCheckingContext,mmap);
}
