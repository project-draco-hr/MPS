{
  if (!(ListSequence.fromList(SLinkOperations.getChildren(subtype,MetaAdapterFactory.getContainmentLink(0xa247e09e243545baL,0xb8d207e93feba96aL,0x1207157a8dcL,0x1207158795cL,"componentType"))).count() == ListSequence.fromList(SLinkOperations.getChildren(supertype,MetaAdapterFactory.getContainmentLink(0xa247e09e243545baL,0xb8d207e93feba96aL,0x1207157a8dcL,0x1207158795cL,"componentType"))).count())) {
    MessageTarget errorTarget=new NodeMessageTarget();
    IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(equationInfo.getNodeWithError(),"Member types count don't match","r:e119dbbd-3529-4067-8bad-6b9edd79d0b6(jetbrains.mps.baseLanguage.tuples.typesystem)","1238854492399",null,errorTarget);
    HUtil.addAdditionalRuleIdsFromInfo(_reporter_2309309498,equationInfo);
  }
{
    SNode lmt;
    SNode rmt;
    Iterator<SNode> lmt_iterator=ListSequence.fromList(SLinkOperations.getChildren(subtype,MetaAdapterFactory.getContainmentLink(0xa247e09e243545baL,0xb8d207e93feba96aL,0x1207157a8dcL,0x1207158795cL,"componentType"))).iterator();
    Iterator<SNode> rmt_iterator=ListSequence.fromList(SLinkOperations.getChildren(supertype,MetaAdapterFactory.getContainmentLink(0xa247e09e243545baL,0xb8d207e93feba96aL,0x1207157a8dcL,0x1207158795cL,"componentType"))).iterator();
    while (true) {
      if (!(lmt_iterator.hasNext())) {
        break;
      }
      if (!(rmt_iterator.hasNext())) {
        break;
      }
      lmt=lmt_iterator.next();
      rmt=rmt_iterator.next();
{
        SNode _nodeToCheck_1029348928467=equationInfo.getNodeWithError();
        EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:e119dbbd-3529-4067-8bad-6b9edd79d0b6(jetbrains.mps.baseLanguage.tuples.typesystem)","1238854598691",0,null);
        _info_12389875345.getOuterRulesIdFromInfo(equationInfo);
        typeCheckingContext.createLessThanInequality((SNode)lmt,(SNode)rmt,false,true,_info_12389875345);
      }
    }
  }
}
