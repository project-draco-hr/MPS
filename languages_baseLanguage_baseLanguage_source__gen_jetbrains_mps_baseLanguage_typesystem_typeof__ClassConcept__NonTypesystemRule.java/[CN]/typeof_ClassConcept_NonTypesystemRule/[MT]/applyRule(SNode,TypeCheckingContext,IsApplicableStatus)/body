{
  if ((SLinkOperations.getTarget(cls,"superclass",true) != null) && !(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SLinkOperations.getTarget(cls,"superclass",true),"classifier",false),"jetbrains.mps.baseLanguage.structure.ClassConcept"))) {
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(SLinkOperations.getTarget(cls,"superclass",true),"Class expected","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1221637809856",null,errorTarget);
    }
  }
  for (  SNode impl : ListSequence.fromList(SLinkOperations.getTargets(cls,"implementedInterface",true))) {
    if (!(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(impl,"classifier",false),"jetbrains.mps.baseLanguage.structure.Interface"))) {
{
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(impl,"Interface expected","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1221637809876",null,errorTarget);
      }
    }
  }
  for (  SNode m : Classifier_Behavior.call_methods_5292274854859311639(cls)) {
    typeCheckingContext.addDependencyForCurrent(m);
  }
  if (!(SPropertyOperations.getBoolean(cls,"abstractClass")) && ListSequence.fromList(BehaviorReflection.invokeVirtual((Class<List<SNode>>)(((Class)(Object.class))),cls,"virtual_getMethodsToImplement_5418393554803775106",new Object[]{})).isNotEmpty()) {
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(cls,"Class has unimplemented methods (press Ctrl+I to see)","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1221637871546",null,errorTarget);
    }
  }
}
