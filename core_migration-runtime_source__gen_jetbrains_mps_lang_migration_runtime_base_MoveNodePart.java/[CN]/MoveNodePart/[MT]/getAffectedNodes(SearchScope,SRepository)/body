{
  Iterable<SReference> references;
  SNode targetFromNode=BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),SLinkOperations.getTarget(myInfo,MetaAdapterFactory.getContainmentLink(0x9882f4ad195546feL,0x826994189e5dbbf2L,0x67236d4a5830221eL,0x67236d4a58343d15L,"fromNode")),"virtual_tryToFindNode_7431903976166009863",new Object[]{repository});
{
    QueryExecutionContext context=new QueryExecutionContext(){
      public SearchScope getDefaultSearchScope(){
        return CommandUtil.createScope(searchScope);
      }
    }
;
    if (targetFromNode != null) {
      references=CommandUtil.usages(CommandUtil.createConsoleScope(null,false,context),targetFromNode);
    }
 else {
      references=CommandUtil.references(CommandUtil.createConsoleScope(null,false,context));
    }
  }
  return Sequence.fromIterable(references).where(new IWhereFilter<SReference>(){
    public boolean accept(    SReference it){
      return BehaviorReflection.invokeVirtual(Boolean.TYPE,SLinkOperations.getTarget(myInfo,MetaAdapterFactory.getContainmentLink(0x9882f4ad195546feL,0x826994189e5dbbf2L,0x67236d4a5830221eL,0x67236d4a58343d15L,"fromNode")),"virtual_isSameTarget_7431903976166009839",new Object[]{it});
    }
  }
).select(new ISelector<SReference,SNodeReference>(){
    public SNodeReference select(    SReference it){
      return it.getSourceNode().getReference();
    }
  }
).toListSequence();
}
