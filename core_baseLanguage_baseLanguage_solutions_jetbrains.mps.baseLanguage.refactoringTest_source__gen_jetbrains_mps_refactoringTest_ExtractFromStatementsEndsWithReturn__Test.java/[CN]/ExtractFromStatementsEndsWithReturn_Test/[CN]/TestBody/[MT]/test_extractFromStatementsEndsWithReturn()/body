{
  this.addNodeById("1230052642040");
  this.addNodeById("1230052642053");
  ExtractMethodRefactoringParameters params=new ExtractMethodRefactoringParameters(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230052642046"),"jetbrains.mps.baseLanguage.structure.ReturnStatement")));
  params.setName("foo");
  ExtractMethodRefactoring ref=ExtractMethodFactory.createRefactoring(params);
  ref.doRefactor();
  Assert.assertEquals(null,NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230052642041"),"jetbrains.mps.baseLanguage.structure.ClassConcept")),ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230052642054"),"jetbrains.mps.baseLanguage.structure.ClassConcept"))));
}
