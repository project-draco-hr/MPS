{
  Classifier cls=subType.getClassifier();
  List<TypeVariableDeclaration> declarations=cls.getTypeVariableDeclarations();
  List<Type> typeParameters=subType.getParameters();
  SModel model=TypeChecker.getInstance().getRuntimeTypesModel();
  ClassifierType result=CopyUtil.copy(declaredSupertype);
  for (  Type t : result.getParameters()) {
    if (t instanceof TypeVariableReference) {
      TypeVariableReference ref=(TypeVariableReference)t;
      int i=declarations.indexOf(ref.getTypeVariableDeclaration());
      Type newT=null;
      if (i > -1 && i < typeParameters.size()) {
        newT=typeParameters.get(i);
      }
      if (newT != null) {
        newT=CopyUtil.copy(newT);
        result.replaceChild(t,newT);
      }
 else {
        result.removeChild(t);
      }
    }
  }
  return result;
}
