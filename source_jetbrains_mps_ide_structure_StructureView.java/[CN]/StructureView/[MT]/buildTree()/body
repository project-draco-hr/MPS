{
  if (myConcept == null) {
    return new TextTreeNode("No Concept");
  }
  MPSTreeNode root=new TextTreeNode(myConcept.getName()){
{
      setIcon(IconManager.getIconFor(myConcept.getNode()));
    }
  }
;
  ConceptAndSuperConceptsScope scope=new ConceptAndSuperConceptsScope(myConcept);
  TextTreeNode properties=new TextTreeNode("Properties");
  root.add(properties);
  for (  PropertyDeclaration prop : scope.getAdapters(PropertyDeclaration.class)) {
    properties.add(new PropertyDeclarationTreeNode(prop));
  }
  TextTreeNode references=new TextTreeNode("References");
  root.add(references);
  for (  LinkDeclaration ld : scope.getAdapters(LinkDeclaration.class)) {
    if (ld.getMetaClass() == LinkMetaclass.reference) {
      references.add(new LinkTreeNode(ld));
    }
  }
  TextTreeNode children=new TextTreeNode("Children");
  root.add(children);
  for (  LinkDeclaration ld : scope.getAdapters(LinkDeclaration.class)) {
    if (ld.getMetaClass() == LinkMetaclass.aggregation) {
      children.add(new LinkTreeNode(ld));
    }
  }
  TextTreeNode conceptPropertyDeclarations=new TextTreeNode("Concept Property Declarations");
  root.add(conceptPropertyDeclarations);
  for (  ConceptPropertyDeclaration cpd : scope.getAdapters(ConceptPropertyDeclaration.class)) {
    conceptPropertyDeclarations.add(new ConceptPropertyDeclarationTreeNode(cpd));
  }
  TextTreeNode conceptLinkDeclarations=new TextTreeNode("Concept Link Declarations");
  root.add(conceptLinkDeclarations);
  for (  ConceptLinkDeclaration cld : scope.getAdapters(ConceptLinkDeclaration.class)) {
    conceptLinkDeclarations.add(new ConceptLinkDeclarationTreeNode(cld));
  }
  return root;
}
