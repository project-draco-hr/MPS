{
  MPSTreeNode root=new TextTreeNode("Tests");
  this.setRootVisible(false);
  TestNameMap<TestCaseTreeNode,TestMethodTreeNode> temp=new TestNameMap<TestCaseTreeNode,TestMethodTreeNode>();
  for (  SNode testCase : SetSequence.fromSet(MapSequence.fromMap(this.tests).keySet())) {
    if ((testCase == null)) {
      continue;
    }
    TestCaseTreeNode testCaseTreeNode=new TestCaseTreeNode(this.operationContext,testCase);
    boolean hasFailedTest=false;
    for (    SNode method : ListSequence.fromList(MapSequence.fromMap(this.tests).get(testCase))) {
      TestMethodTreeNode oldMethodTreeNode=this.map.get(ITestCase_Behavior.call_getClassName_1216136193905(testCase),ITestMethod_Behavior.call_getTestName_1216136419751(method));
      TestMethodTreeNode newMethodTreeNode=new TestMethodTreeNode(this.operationContext,method);
      TestMethodTreeNode methodTreeNode=(oldMethodTreeNode == null ? newMethodTreeNode : oldMethodTreeNode);
      boolean isFailedMethod=isFailed(methodTreeNode);
      hasFailedTest=hasFailedTest || isFailedMethod;
      if (this.isAllTree || isFailedMethod) {
        if (methodTreeNode == null) {
          continue;
        }
        testCaseTreeNode.add(methodTreeNode);
        temp.put(testCase,method,methodTreeNode);
      }
 else {
        temp.put(testCase,method,methodTreeNode);
      }
    }
    if (this.isAllTree || hasFailedTest) {
      root.add(testCaseTreeNode);
      temp.put(testCase,testCaseTreeNode);
    }
 else {
      temp.put(testCase,testCaseTreeNode);
    }
  }
  this.map=temp;
  return root;
}
