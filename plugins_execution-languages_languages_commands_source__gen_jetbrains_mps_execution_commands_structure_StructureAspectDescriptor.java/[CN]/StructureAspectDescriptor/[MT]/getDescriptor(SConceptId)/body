{
  Integer index=myIndexMap.get(id);
  if (index == null) {
    return null;
  }
switch (((int)index)) {
case 0:
    return myConceptBuilderBlockStatement;
case 1:
  return myConceptBuilderParameter;
case 2:
return myConceptCommandBuilderExpression;
case 3:
return myConceptCommandDebuggerOperation;
case 4:
return myConceptCommandDeclaration;
case 5:
return myConceptCommandMethod;
case 6:
return myConceptCommandParameterAssignment;
case 7:
return myConceptCommandParameterDeclaration;
case 8:
return myConceptCommandParameterReference;
case 9:
return myConceptCommandPartLengthOperation;
case 10:
return myConceptCommandPartToListOperation;
case 11:
return myConceptCommandProcessType;
case 12:
return myConceptCommandReferenceExpression;
case 13:
return myConceptCommandType;
case 14:
return myConceptDebuggerSettingsCommandParameterDeclaration;
case 15:
return myConceptExecuteCommandPart;
case 16:
return myConceptExplicitCommandParameterDeclaration;
case 17:
return myConceptKeyValueCommandPart;
case 18:
return myConceptListCommandPart;
case 19:
return myConceptNewProcessBuilderExpression;
case 20:
return myConceptProcessBuilderCommandPart;
case 21:
return myConceptProcessBuilderCommandPartType;
case 22:
return myConceptProcessType;
case 23:
return myConceptPropertyCommandPart;
case 24:
return myConceptRedirectOutputExpression;
case 25:
return myConceptReportErrorStatement;
case 26:
return myConceptReportExecutionError;
case 27:
return myConceptStartAndWaitOperation;
default :
throw new IllegalStateException();
}
}
