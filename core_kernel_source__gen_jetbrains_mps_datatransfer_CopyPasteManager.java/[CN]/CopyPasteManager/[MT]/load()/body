{
  if (myLoaded) {
    return;
  }
  myPostProcessors=MapSequence.fromMap(new HashMap<SNode,AbstractManager.Descriptor<PastePostProcessor>>());
  myPreProcessors=MapSequence.fromMap(new HashMap<SNode,AbstractManager.Descriptor<CopyPreProcessor>>());
  for (  Language language : MPSModuleRepository.getInstance().getAllLanguages()) {
    SModelDescriptor actionsModelDescriptor=language.getActionsModelDescriptor();
    if (actionsModelDescriptor == null) {
      continue;
    }
    Iterable<SNode> roots=new ConditionalIterable<SNode>(actionsModelDescriptor.getSModel().roots(),new Condition<SNode>(){
      public boolean met(      SNode node){
        return SNodeOperations.isInstanceOf(node,"jetbrains.mps.lang.actions.structure.CopyPasteHandlers");
      }
    }
);
    for (    SNode root : roots) {
      for (      SNode preProcessor : ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(root,"jetbrains.mps.lang.actions.structure.CopyPasteHandlers"),"preProcessor",true))) {
        MapSequence.fromMap(myPreProcessors).put(SLinkOperations.getTarget(preProcessor,"concept",false),new AbstractManager.Descriptor<CopyPreProcessor>(language.getModuleFqName() + "." + LanguageAspect.ACTIONS.getName()+ "."+ CopyPreProcessor_Behavior.call_getClassName_5948027493682347861(preProcessor),language,LOG));
      }
      for (      SNode postProcessor : ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(root,"jetbrains.mps.lang.actions.structure.CopyPasteHandlers"),"postProcessor",true))) {
        MapSequence.fromMap(myPostProcessors).put(SLinkOperations.getTarget(postProcessor,"concept",false),new AbstractManager.Descriptor<PastePostProcessor>(language.getModuleFqName() + "." + LanguageAspect.ACTIONS.getName()+ "."+ PastePostProcessor_Behavior.call_getClassName_5457641811177522085(postProcessor),language,LOG));
      }
    }
  }
  myLoaded=true;
}
