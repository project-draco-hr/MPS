{
  super(mergeModelsDialog,"Merging " + rootName);
  myModelsDialog=mergeModelsDialog;
  myOperationContext=mergeModelsDialog.getOperationContext();
  myMergeContext=mergeContext;
  myRootId=rootId;
  myMineEditor=addEditor(0,myMergeContext.getMyModel(),"My Changes");
  myResultEditor=addEditor(1,myMergeContext.getResultModel(),"Merge Result");
  myRepositoryEditor=addEditor(2,myMergeContext.getRepositoryModel(),"Repository Changes");
  myMineBuilder=new ChangeGroupBuilder(myMergeContext,myMergeContext.getMyChangeSet(),myMineEditor,myResultEditor);
  myRepositoryBuilder=new ChangeGroupBuilder(myMergeContext,myMergeContext.getRepositoryChangeSet(),myResultEditor,myRepositoryEditor);
  myMineStrip=addTrapeciumStrip(0,myMineBuilder);
  myRepositoryStrip=addTrapeciumStrip(1,myRepositoryBuilder);
  myMinePainter=MergeButtonsPainter.addTo(this,myMineEditor,myMineBuilder);
  myRepositoryPainter=MergeButtonsPainter.addTo(this,myRepositoryEditor,myRepositoryBuilder);
  JSplitPane splitPane=new JSplitPane(JSplitPane.VERTICAL_SPLIT,myTopComponent,myBottomComponent);
  splitPane.setResizeWeight(1);
  myContainer=new JPanel(new BorderLayout());
  DefaultActionGroup actionGroup=ActionUtils.groupFromActions(new ApplyNonConflictsForRoot(myMergeContext,this));
  ActionToolbar toolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,actionGroup,true);
  toolbar.updateActionsImmediately();
  myContainer.add(toolbar.getComponent(),BorderLayout.NORTH);
  myContainer.add(splitPane,BorderLayout.CENTER);
  highlightAllChanges();
}
