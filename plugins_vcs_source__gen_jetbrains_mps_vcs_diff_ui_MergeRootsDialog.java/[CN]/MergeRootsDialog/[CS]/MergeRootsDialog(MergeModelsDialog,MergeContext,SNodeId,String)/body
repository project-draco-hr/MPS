{
  super(mergeModelsDialog,"Merging " + rootName);
  myModelsDialog=mergeModelsDialog;
  myOperationContext=mergeModelsDialog.getOperationContext();
  myMergeContext=mergeContext;
  myRootId=rootId;
  myStateToRestore=myMergeContext.getCurrentState();
  myMineEditor=addEditor(0,myMergeContext.getMyModel());
  myResultEditor=addEditor(1,myMergeContext.getResultModel());
  myRepositoryEditor=addEditor(2,myMergeContext.getRepositoryModel());
  linkEditors(true,false);
  linkEditors(false,false);
  linkEditors(true,true);
  linkEditors(false,true);
  JSplitPane splitPane=new JSplitPane(JSplitPane.VERTICAL_SPLIT,myTopPanel,myBottomPanel);
  splitPane.setResizeWeight(0.7);
  myContainer=new JPanel(new BorderLayout());
  DefaultActionGroup actionGroup=ActionUtils.groupFromActions(GoToNeighbourOccurence.previousInstance(myMergeContext,this),GoToNeighbourOccurence.nextInstance(myMergeContext,this),Separator.getInstance(),new ApplyNonConflictsForRoot(myMergeContext,this));
  ActionToolbar toolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,actionGroup,true);
  toolbar.updateActionsImmediately();
  myContainer.add(toolbar.getComponent(),BorderLayout.NORTH);
  myContainer.add(splitPane,BorderLayout.CENTER);
  highlightAllChanges();
}
