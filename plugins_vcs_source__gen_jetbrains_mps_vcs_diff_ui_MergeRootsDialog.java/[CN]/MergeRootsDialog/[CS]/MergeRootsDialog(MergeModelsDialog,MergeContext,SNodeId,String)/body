{
  super(mergeModelsDialog,"Merging " + rootName);
  myOperationContext=mergeModelsDialog.getOperationContext();
  myMergeContext=mergeContext;
  myRootId=rootId;
  myMineEditor=addEditor(0,myMergeContext.getMyModel(),"My Changes");
  myResultEditor=addEditor(1,myMergeContext.getResultModel(),"Merge Result");
  myRepositoryEditor=addEditor(2,myMergeContext.getRepositoryModel(),"Repository Changes");
  myMineChangeGroupBuilder=new ChangeGroupBuilder(myMergeContext,myMergeContext.getMyChangeSet(),myMineEditor,myResultEditor);
  myRepositoryChangeGroupBuilder=new ChangeGroupBuilder(myMergeContext,myMergeContext.getRepositoryChangeSet(),myResultEditor,myRepositoryEditor);
  addTrapeciumStrip(0,myMineChangeGroupBuilder);
  addTrapeciumStrip(1,myRepositoryChangeGroupBuilder);
  MergeButtonsPainter.addTo(myMineEditor,myMineChangeGroupBuilder);
  MergeButtonsPainter.addTo(myRepositoryEditor,myRepositoryChangeGroupBuilder);
  JSplitPane modelsPane=new JSplitPane(JSplitPane.VERTICAL_SPLIT,myTopComponent,myBottomComponent);
  modelsPane.setResizeWeight(1);
  myContainer=new JPanel(new BorderLayout());
  myContainer.add(modelsPane);
  highlightAllChanges();
}
