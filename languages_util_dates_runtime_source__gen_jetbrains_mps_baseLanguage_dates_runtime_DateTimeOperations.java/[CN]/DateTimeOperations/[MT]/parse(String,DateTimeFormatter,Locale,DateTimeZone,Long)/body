{
  if (zone == null) {
    zone=currentZone.get();
  }
  if (locale != null) {
    formatter=formatter.withLocale(locale);
  }
  if (zone != null) {
    formatter=formatter.withZone(zone);
  }
  try {
    if (defValues != null) {
      MutableDateTime mdt=new MutableDateTime((defValues != null ? defValues : 0L));
      formatter=formatter.withDefaultYear(mdt.getYear());
      int res=formatter.parseInto(mdt,datetimeString,0);
      if (res <= 0) {
        throw new IllegalArgumentException(datetimeString);
      }
      return DateTimeOperations.convert(mdt.toDateTime());
    }
 else {
      DateTime dt=formatter.parseDateTime(datetimeString);
      return DateTimeOperations.convert(dt);
    }
  }
 catch (  IllegalArgumentException iae) {
    throw new IllegalArgumentException("Error parsing date/time (" + iae.getMessage() + ")");
  }
catch (  UnsupportedOperationException uoe) {
    throw new IllegalArgumentException("Error parsing date/time (" + uoe.getMessage() + ")");
  }
}
