{
  this.nextNode=null;
  this.hasNextNode=false;
  while (!ancestorsIteratorsStack.isEmpty()) {
    Iterator<T> it=ancestorsIteratorsStack.pop();
    if (it.hasNext()) {
      ancestorsIteratorsStack.push(it);
      T node=it.next();
      Iterator<T> parentIt=getOppositeContents(node).iterator();
      if (parentIt.hasNext()) {
        ancestorsIteratorsStack.push(parentIt);
      }
      this.nextNode=node;
      this.hasNextNode=true;
      break;
    }
  }
}
