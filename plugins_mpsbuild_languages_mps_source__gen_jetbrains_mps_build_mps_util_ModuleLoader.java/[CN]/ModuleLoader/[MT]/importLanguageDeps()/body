{
  LanguageDescriptor descriptor=((LanguageDescriptor)myModuleDescriptor);
  for (  ModuleReference lang : descriptor.getExtendedLanguages()) {
    SNode resolved=SNodeOperations.as(visible.resolve(lang.getModuleFqName(),lang.getModuleId().toString()),"jetbrains.mps.build.mps.structure.BuildMps_Language");
    if (resolved == null) {
      report("cannot find extended language in dependencies: " + lang.getModuleFqName(),myModule);
      continue;
    }
    SNode ul=SConceptOperations.createNewNode("jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyExtendLanguage",null);
    SLinkOperations.setTarget(ul,"language",resolved,false);
    SNode res=SConceptOperations.createNewNode("jetbrains.mps.build.mps.structure.BuildMps_ExtractedModuleDependency",null);
    SLinkOperations.setTarget(res,"dependency",ul,true);
    ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(myModule,"jetbrains.mps.build.mps.structure.BuildMps_Module"),"dependencies",true)).addElement(res);
  }
}
