{
  String moduleFilePath=BuildSourcePath_Behavior.call_getLocalPath_5481553824944787364(SLinkOperations.getTarget(module,"path",true),(genContext != null ? Context.defaultContext(genContext) : Context.defaultContext()));
  try {
    moduleFilePath=new File(moduleFilePath).getCanonicalPath();
  }
 catch (  IOException ex) {
  }
  IFile file=FileSystem.getInstance().getFileByPath(moduleFilePath);
  if (!(file.exists()) || file.isDirectory()) {
    report("cannot import module file for " + SPropertyOperations.getString(module,"name") + ": file doesn't exist ("+ moduleFilePath+ ")",originalModule);
    return null;
  }
  DescriptorIO<? extends ModuleDescriptor> loader=DescriptorIOFacade.getInstance().fromFileType(file);
  if (loader == null) {
    report("cannot import module file for " + SPropertyOperations.getString(module,"name") + ": unknown module type",originalModule);
    return null;
  }
  try {
    ModuleDescriptor md=loader.readFromFile(file);
    if (md.getLoadException() != null) {
      report("cannot import module file for " + SPropertyOperations.getString(module,"name") + ": exception: "+ md.getLoadException().getMessage(),originalModule);
      return null;
    }
    return md;
  }
 catch (  Exception ex) {
    report("cannot import module file for " + SPropertyOperations.getString(module,"name") + ": exception: "+ ex.getMessage(),originalModule);
  }
  return null;
}
