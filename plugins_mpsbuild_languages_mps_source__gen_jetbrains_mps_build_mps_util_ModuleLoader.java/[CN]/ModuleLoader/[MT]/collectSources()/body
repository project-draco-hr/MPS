{
  SNode module=SNodeOperations.cast(myModule,"jetbrains.mps.build.mps.structure.BuildMps_Module");
  List<String> res=new ArrayList<String>();
  for (  String sp : myModuleDescriptor.getSourcePaths()) {
    res.add(sp);
  }
  IFile genPath=ProjectPathUtil.getGeneratorOutputPath(myModuleFile,myModuleDescriptor);
  if (genPath != null) {
    res.add(genPath.getPath());
  }
  for (  String path : res) {
    SNode p=convertPath(path,myOriginalModule);
    if (p == null) {
      continue;
    }
    SNode javaSource=SConceptOperations.createNewNode("jetbrains.mps.build.mps.structure.BuildMps_ModuleJavaSource",null);
    SLinkOperations.setTarget(javaSource,"sources",SConceptOperations.createNewNode("jetbrains.mps.build.structure.BuildInputFiles",null),true);
    SLinkOperations.setTarget(SNodeOperations.cast(SLinkOperations.getTarget(javaSource,"sources",true),"jetbrains.mps.build.structure.BuildInputFiles"),"dir",p,true);
    ListSequence.fromList(SLinkOperations.getTargets(module,"sources",true)).addElement(javaSource);
  }
  for (  ModelRoot modelRoot : myModuleDescriptor.getModelRoots()) {
    if (modelRoot.getManager() != null) {
      continue;
    }
    String path=modelRoot.getPath();
    SNode p=convertPath(path,myOriginalModule);
    if (p == null) {
      continue;
    }
    SNode mroot=SConceptOperations.createNewNode("jetbrains.mps.build.mps.structure.BuildMps_ModuleModelRoot",null);
    SLinkOperations.setTarget(mroot,"folder",p,true);
    ListSequence.fromList(SLinkOperations.getTargets(module,"sources",true)).addElement(mroot);
  }
}
