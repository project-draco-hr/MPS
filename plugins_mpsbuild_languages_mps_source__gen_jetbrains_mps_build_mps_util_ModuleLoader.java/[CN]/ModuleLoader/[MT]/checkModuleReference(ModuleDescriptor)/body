{
  boolean success=true;
  ModuleReference moduleReference=md.getModuleReference();
  if (neq_a6ewnz_a0c0h(SPropertyOperations.getString(myModule,"name"),moduleReference.getModuleFqName())) {
    report("name in import doesn't match file content " + SPropertyOperations.getString(myModule,"name") + ", should be: "+ moduleReference.getModuleFqName(),myOriginalModule);
    success=false;
  }
  if (neq_a6ewnz_a0d0h(SPropertyOperations.getString(myModule,"uuid"),moduleReference.getModuleId().toString())) {
    report("module id in import doesn't match file content " + SPropertyOperations.getString(myModule,"name") + ", should be: "+ moduleReference.getModuleId().toString(),myOriginalModule);
    success=false;
  }
  if (SNodeOperations.isInstanceOf(myModule,"jetbrains.mps.build.mps.structure.BuildMps_Module")) {
    boolean inFile=myModuleDescriptor instanceof SolutionDescriptor && !(((SolutionDescriptor)myModuleDescriptor).getCompileInMPS());
    if (SPropertyOperations.getBoolean(SNodeOperations.cast(myModule,"jetbrains.mps.build.mps.structure.BuildMps_Module"),"doNotCompile") != inFile) {
      report("compile in MPS flag doesn't match file content " + SPropertyOperations.getString(myModule,"name") + ", should be: "+ inFile,myOriginalModule);
      success=false;
    }
  }
  return success;
}
