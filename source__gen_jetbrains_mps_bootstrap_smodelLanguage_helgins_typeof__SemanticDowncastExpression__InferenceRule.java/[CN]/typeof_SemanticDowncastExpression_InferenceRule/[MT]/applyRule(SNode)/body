{
  TypeChecker.getInstance().getRuntimeSupport().check(SLinkOperations.getTarget(argument,"leftExpression",true));
  if ((SLinkOperations.getTarget(argument,"leftExpression",true) != null)) {
    SNode leftType=TypeChecker.getInstance().getRuntimeSupport().typeOf(SLinkOperations.getTarget(argument,"leftExpression",true));
    if (SNodeOperations.isInstanceOf(leftType,"jetbrains.mps.bootstrap.smodelLanguage.structure.SModelType")) {
      TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_20().createNode(),argument);
      return;
    }
    if (SNodeOperations.isInstanceOf(leftType,"jetbrains.mps.bootstrap.smodelLanguage.structure.SNodeType")) {
      TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_21().createNode(),argument);
      return;
    }
    if (SNodeOperations.isInstanceOf(leftType,"jetbrains.mps.bootstrap.smodelLanguage.structure.SConceptType")) {
      TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_22().createNode(),argument);
      return;
    }
    TypeChecker.getInstance().getRuntimeSupport().givetype(leftType,argument);
  }
}
