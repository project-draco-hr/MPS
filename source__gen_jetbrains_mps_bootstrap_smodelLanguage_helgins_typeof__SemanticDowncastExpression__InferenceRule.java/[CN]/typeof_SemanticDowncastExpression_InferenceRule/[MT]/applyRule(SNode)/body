{
  SNode leftExpr=SLinkOperations.getTarget(argument,"leftExpression",true);
  if (!(!((leftExpr == null)))) {
    TypeChecker.getInstance().reportTypeError(argument,"not expected here");
  }
  TypeChecker.getInstance().getRuntimeSupport().check(leftExpr);
  if (!(!((TypeChecker.getInstance().getRuntimeSupport().typeOf(leftExpr) == null)))) {
    TypeChecker.getInstance().reportTypeError(leftExpr,"no type");
  }
  do {
    SNode matchedNode_1178287491305=TypeChecker.getInstance().getRuntimeSupport().typeOf(leftExpr);
{
      boolean matches_1178287491308=false;
      matches_1178287491308=SModelUtil_new.isAssignableConcept(TypeChecker.getInstance().getRuntimeSupport().typeOf(leftExpr).getConceptFqName(),"jetbrains.mps.bootstrap.smodelLanguage.structure.SModelType");
      if (matches_1178287491308) {
        TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_32().createNode(),argument);
        break;
      }
    }
    do {
      SNode matchedNode_1178287491317=TypeChecker.getInstance().getRuntimeSupport().typeOf(leftExpr);
{
        boolean matches_1178287491320=false;
        matches_1178287491320=SModelUtil_new.isAssignableConcept(TypeChecker.getInstance().getRuntimeSupport().typeOf(leftExpr).getConceptFqName(),"jetbrains.mps.bootstrap.smodelLanguage.structure.SNodeType");
        if (matches_1178287491320) {
          TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_33().createNode(),argument);
          break;
        }
      }
    }
 while (false);
  }
 while (false);
}
