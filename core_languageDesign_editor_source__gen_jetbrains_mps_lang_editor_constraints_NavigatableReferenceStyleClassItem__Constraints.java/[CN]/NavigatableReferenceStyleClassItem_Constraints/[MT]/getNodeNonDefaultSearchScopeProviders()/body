{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("link",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      SNode editorComponent=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.lang.editor.structure.BaseEditorComponent",true,false);
      SNode editedConcept=AbstractComponent_Behavior.call_getConceptDeclaration_7055725856388417603(editorComponent);
      return AbstractConceptDeclaration_Behavior.call_getReferenceLinkDeclarations_1213877394496(editedConcept);
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c89590298(jetbrains.mps.lang.editor.constraints)","1227861668969");
    }
  }
);
  return result;
}
