{
  return new MPSAction(NodePresentationUtil.matchingText(nodeConcept.getNode())){
    public Icon getIcon(){
      return CommandProcessor.instance().executeLightweightCommand(new Calculable<Icon>(){
        public Icon calculate(){
          return IconManager.getIconForConceptFQName(NameUtil.nodeFQName(nodeConcept.getNode()));
        }
      }
);
    }
    public boolean executeInsideCommand(){
      return false;
    }
    public void doExecute(    @NotNull final ActionContext context){
      SNode node=CommandProcessor.instance().executeCommand(new Calculable<SNode>(){
        public SNode calculate(){
          SNode result=NodeFactoryManager.createNode((ConceptDeclaration)nodeConcept.getNode().getAdapter(),null,null,modelDescriptor.getSModel(),context.getScope());
          result.setProperty(SModelTreeNode.PACK,myPackage);
          modelDescriptor.getSModel().addRoot(result);
          return result;
        }
      }
);
      ide.getProjectPane().selectNode(node,context.get(IOperationContext.class));
      ide.getProjectPane().openEditor();
    }
  }
;
}
