{
  final DependenciesHelper helper=new DependenciesHelper(myContext,myInitialProject);
  return Sequence.fromIterable(this.getDependency()).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return DependenciesHelper.getOriginalNode(it,myContext);
    }
  }
).select(new ISelector<SNode,String>(){
    public String select(    SNode it){
      SNode layoutNode=helper.artifacts().get(it);
      if ((layoutNode == null)) {
        return null;
      }
      String val=BuildLayout_PathElement_BehaviorDescriptor.location_id6b4RkXS8sT2.invoke(layoutNode,helper,it);
      if (val == null) {
        return null;
      }
      return val;
    }
  }
).where(new IWhereFilter<String>(){
    public boolean accept(    String it){
      return (it != null && it.length() > 0);
    }
  }
).sort(new ISelector<String,String>(){
    public String select(    String it){
      return it;
    }
  }
,true).toGenericArray(String.class);
}
