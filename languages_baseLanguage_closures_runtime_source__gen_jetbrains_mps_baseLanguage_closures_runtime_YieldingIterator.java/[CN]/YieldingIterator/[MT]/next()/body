{
switch (state) {
case AT_END:
    throw new NoSuchElementException();
case UNKNOWN:
  try {
    if (!(this.moveToNext())) {
      this.state=YieldingIterator.State.AT_END;
      throw new NoSuchElementException();
    }
  }
 catch (  DelayedException ex) {
    this.delayedEx=ex;
    this.state=YieldingIterator.State.AT_END;
    throw new NoSuchElementException();
  }
case HAS_NEXT:
T res=this.yielded;
this.yielded=null;
this.state=YieldingIterator.State.UNKNOWN;
return res;
default :
throw new IllegalStateException();
}
}
