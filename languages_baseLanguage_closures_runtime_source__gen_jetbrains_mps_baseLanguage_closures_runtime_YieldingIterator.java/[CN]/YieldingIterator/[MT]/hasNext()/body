{
  if (state == YieldingIterator.State.UNKNOWN) {
    try {
      this.state=((this.moveToNext() ? YieldingIterator.State.HAS_NEXT : YieldingIterator.State.AT_END));
    }
 catch (    DelayedException ex) {
      this.state=YieldingIterator.State.AT_END;
      throw ex;
    }
  }
  if (delayedEx != null) {
    DelayedException tmp=this.delayedEx;
    this.delayedEx=null;
    throw tmp;
  }
  return state == YieldingIterator.State.HAS_NEXT;
}
