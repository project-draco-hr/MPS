{
  return Sequence.fromIterable(mappers).select(new ISelector<_FunctionTypes._return_P1_E0<? extends String,? super String>,String>(){
    public String select(    _FunctionTypes._return_P1_E0<? extends String,? super String> it){
      return it.invoke(unitName);
    }
  }
).distinct().translate(new ITranslator2<String,SModelDescriptor>(){
    public Iterable<SModelDescriptor> translate(    final String modelFqName){
      return Sequence.fromIterable(Sequence.fromArray(SModelStereotype.values)).where(new IWhereFilter<String>(){
        public boolean accept(        String it){
          return !(SModelStereotype.isStubModelStereotype(it));
        }
      }
).select(new ISelector<String,SModelDescriptor>(){
        public SModelDescriptor select(        String stereotype){
          return SModelRepository.getInstance().getModelDescriptor(new SModelFqName(modelFqName,stereotype));
        }
      }
);
    }
  }
).where(new IWhereFilter<SModelDescriptor>(){
    public boolean accept(    SModelDescriptor it){
      return it != null;
    }
  }
);
}
