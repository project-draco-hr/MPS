{
  Method m=getCanBeParentMethod(parentNode,context);
  if (m != null) {
    try {
      final CanBeAParentContext canBeAParentContext=new CanBeAParentContext(parentNode,childConcept,link);
      if (!(Boolean)m.invoke(null,context,canBeAParentContext)) {
        return false;
      }
      ConceptConstraints constraints=getClassConstraints(context,m);
      if (constraints != null) {
        return myConceptConstraintExtensionManager.checkCanBeParentExtensions(BaseAdapter.fromAdapter(constraints.getConcept()),context,canBeAParentContext);
      }
    }
 catch (    IllegalAccessException e) {
      LOG.error(e);
    }
catch (    InvocationTargetException e) {
      LOG.error(e);
    }
  }
  return true;
}
