{
  Method method=getCanBeChildMethod(fqName,context);
  if (method != null) {
    try {
      SNode concept=BaseAdapter.fromAdapter(SModelUtil_new.findConceptDeclaration(fqName,context.getScope()));
      final CanBeAChildContext canBeAChildContext=new CanBeAChildContext(parentNode,link,concept);
      if (!(Boolean)method.invoke(null,context,canBeAChildContext)) {
        return false;
      }
      ConceptConstraints constraints=getClassConstraints(context,method);
      if (constraints != null) {
        return myConceptConstraintExtensionManager.checkCanBeChildExtensions(BaseAdapter.fromAdapter(constraints.getConcept()),context,canBeAChildContext);
      }
    }
 catch (    IllegalAccessException e) {
      LOG.error(e);
    }
catch (    InvocationTargetException e) {
      LOG.error(e);
    }
  }
  return true;
}
