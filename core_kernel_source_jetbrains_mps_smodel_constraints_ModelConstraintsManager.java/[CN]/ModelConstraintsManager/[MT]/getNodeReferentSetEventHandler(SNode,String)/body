{
  String nodeConceptFqName=node.getConceptFqName();
  String originalKey=nodeConceptFqName + "#" + referentRole;
synchronized (myLock) {
    INodeReferentSetEventHandler result=myNodeReferentSetEventHandlersMap.get(originalKey);
    if (result != null || myNodeReferentSetEventHandlersMap.containsKey(originalKey)) {
      return result;
    }
    List<SNode> hierarchy=SModelUtil_new.getConceptAndSuperConcepts(node.getConceptDeclarationNode());
    for (    SNode concept : hierarchy) {
      Language l=SModelUtil.getDeclaringLanguage(concept);
      ensureLanguageAdded(l);
      String conceptFqName=NameUtil.nodeFQName(concept);
      result=myNodeReferentSetEventHandlersMap.get(conceptFqName + "#" + referentRole);
      if (result != null) {
        break;
      }
    }
    myNodeReferentSetEventHandlersMap.put(originalKey,result);
    return result;
  }
}
