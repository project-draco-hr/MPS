{
  if (parentNode == null)   return null;
  Method m=getCanBeAncestorMethod(parentNode,context);
  if (m != null) {
    try {
      if (!(Boolean)m.invoke(null,context,new CanBeAnAncestorContext(parentNode,childConcept))) {
        ConceptConstraints constraints=getClassConstraints(context,m);
        return constraints != null ? BaseAdapter.fromAdapter(constraints.getCanBeAncestor()) : null;
      }
    }
 catch (    IllegalAccessException e) {
      LOG.error(e);
    }
catch (    InvocationTargetException e) {
      LOG.error(e);
    }
  }
  return canBeAncestorReturnBlock(parentNode.getParent(),childConcept,context);
}
