{
synchronized (myCanBeRootMethods) {
    if (myCanBeRootMethods.containsKey(conceptFqName)) {
      return myCanBeRootMethods.get(conceptFqName);
    }
    IScope scope=context.getScope();
    SNode concept=SModelUtil.findConceptDeclaration(conceptFqName,scope);
    if (concept != null) {
      String fqName=NameUtil.nodeFQName(concept);
      Language language=scope.getLanguage(NameUtil.namespaceFromConceptFQName(fqName));
      if (language != null) {
        Class behaviorClass=language.getClass(constraintsClassByConceptFqName(fqName));
        if (behaviorClass != null) {
          try {
            Method method=behaviorClass.getMethod(BehaviorConstants.CAN_BE_A_ROOT_METHOD_NAME,IOperationContext.class,CanBeARootContext.class);
            myCanBeRootMethods.put(conceptFqName,method);
            return method;
          }
 catch (          NoSuchMethodException e) {
          }
        }
      }
    }
    myCanBeRootMethods.put(conceptFqName,null);
    return null;
  }
}
