{
  HashSet<SContainmentLink> roles=new HashSet<SContainmentLink>();
  for (  SNode child : a.getChildren()) {
    roles.add(child.getContainmentLink());
  }
  for (  SNode child : b.getChildren()) {
    roles.add(child.getContainmentLink());
  }
  for (  SContainmentLink role : roles) {
    Iterable<? extends SNode> children1=a.getChildren(role);
    Iterable<? extends SNode> children2=b.getChildren(role);
    int size1=countElements(children1.iterator());
    int size2=countElements(children2.iterator());
    if (size1 != size2) {
      difference.add(new ChildrenCountDifference(role,size1,size2));
      continue;
    }
    Iterator<? extends SNode> iterator1=children1.iterator();
    Iterator<? extends SNode> iterator2=children2.iterator();
    while (iterator1.hasNext() && iterator2.hasNext()) {
      NodeDifference d=match(iterator1.next(),iterator2.next());
      if (d != null) {
        difference.add(d);
      }
    }
  }
}
