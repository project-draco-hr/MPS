{
  HashSet<SReferenceLink> roles=new HashSet<SReferenceLink>();
  for (  SReference nextReference : a.getReferences()) {
    roles.add(nextReference.getLink());
  }
  for (  SReference nextReference : b.getReferences()) {
    roles.add(nextReference.getLink());
  }
  for (  SReferenceLink role : roles) {
    SReference reference1=a.getReference(role);
    SNode referenceTarget1=null;
    if (reference1 != null) {
      referenceTarget1=reference1.getTargetNode();
    }
    SReference reference2=b.getReference(role);
    SNode referenceTarget2=null;
    if (reference2 != null) {
      referenceTarget2=reference2.getTargetNode();
    }
    if (map.containsKey(referenceTarget1)) {
      if (map.get(referenceTarget1) != referenceTarget2) {
        difference.add(new ReferenceDifference(role,true,map.get(referenceTarget1),referenceTarget2));
      }
    }
 else {
      if (referenceTarget1 != referenceTarget2) {
        difference.add(new ReferenceDifference(role,false,referenceTarget1,referenceTarget2));
      }
    }
  }
}
