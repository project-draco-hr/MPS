{
  EditorCell actionCell=selectedCell;
  while (actionCell != null) {
    boolean conditionSatisfied=false;
    if (action.getCaretPolicy() == EditorCellKeyMapAction.CARET_AT_ANY_POSITION) {
      conditionSatisfied=true;
    }
 else     if (action.getCaretPolicy() == actualCaretPosition) {
      if (action.getCaretPolicy() == EditorCellKeyMapAction.CARET_AT_FIRST_POSITION) {
        conditionSatisfied=(EditorUtil.findFirstSelectableCell(actionCell) == selectedCell);
      }
 else       if (action.getCaretPolicy() == EditorCellKeyMapAction.CARET_AT_LAST_POSITION) {
        conditionSatisfied=(EditorUtil.findLastSelectableCell(actionCell) == selectedCell);
      }
 else {
        conditionSatisfied=true;
      }
    }
    try {
      if (conditionSatisfied && canExecuteKeyMapAction(action,keyEvent,actionCell,editorContext)) {
        return actionCell;
      }
    }
 catch (    Exception e) {
      LOG.error(e);
      return null;
    }
    if (actionCell == keymapOwnerCell) {
      return null;
    }
    actionCell=actionCell.getParent();
  }
  return null;
}
