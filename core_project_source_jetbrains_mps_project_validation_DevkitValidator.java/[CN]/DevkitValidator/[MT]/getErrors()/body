{
  List<String> errors=new ArrayList<String>();
  Throwable loadException=myModule.getModuleDescriptor().getLoadException();
  if (loadException != null) {
    errors.add("Couldn't load module: " + loadException.getMessage());
    return errors;
  }
  for (  SModuleReference extDevkit : myModule.getModuleDescriptor().getExtendedDevkits()) {
    if (ModuleRepositoryFacade.getInstance().getModule(extDevkit) == null) {
      errors.add("Can't find extended devkit: " + extDevkit.getModuleName());
    }
  }
  for (  SModuleReference expLang : myModule.getModuleDescriptor().getExportedLanguages()) {
    if (ModuleRepositoryFacade.getInstance().getModule(expLang) == null) {
      errors.add("Can't find exported language: " + expLang.getModuleName());
    }
  }
  for (  SModuleReference expSol : myModule.getModuleDescriptor().getExportedSolutions()) {
    if (ModuleRepositoryFacade.getInstance().getModule(expSol) == null) {
      errors.add("Can't find exported language: " + expSol.getModuleName());
    }
  }
  return errors;
}
