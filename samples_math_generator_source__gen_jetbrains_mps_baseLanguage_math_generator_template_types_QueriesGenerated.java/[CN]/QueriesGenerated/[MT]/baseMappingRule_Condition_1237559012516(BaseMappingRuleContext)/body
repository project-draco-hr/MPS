{
  SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1070534934090l,1070534934092l,"expression"))),MetaAdapterFactory.getConcept(new UUID(3676340747305173022l,-6911132873973321185l),1237106070629l,"jetbrains.mps.baseLanguage.math.structure.BigDecimalType"));
  return TypeChecker.getInstance().getSubtypingManager().isSubtype(SLinkOperations.getTarget(_context.getNode(),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1070534934090l,1070534934091l,"type")),SLinkOperations.getTarget(_quotation_createNode_x583g4_a1a0a0a1a21(),MetaAdapterFactory.getReferenceLink(new UUID(-1338283401124492350l,-9092293120968916352l),1159268661480l,1159268661479l,"descriptor"))) && SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1070534934090l,1070534934092l,"expression"))),MetaAdapterFactory.getConcept(new UUID(3676340747305173022l,-6911132873973321185l),1237106079927l,"jetbrains.mps.baseLanguage.math.structure.BigIntegerType")) || SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1070534934090l,1070534934092l,"expression"))),MetaAdapterFactory.getConcept(new UUID(3676340747305173022l,-6911132873973321185l),1237106070629l,"jetbrains.mps.baseLanguage.math.structure.BigDecimalType")) || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1070534934090l,1070534934091l,"type")),MetaAdapterFactory.getConcept(new UUID(3676340747305173022l,-6911132873973321185l),1237107700024l,"jetbrains.mps.baseLanguage.math.structure.ComplexType")) && SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1070534934090l,1070534934092l,"expression"))),MetaAdapterFactory.getConcept(new UUID(3676340747305173022l,-6911132873973321185l),1237108887116l,"jetbrains.mps.baseLanguage.math.structure.BigComplexType"));
}
