{
  SNode myType=TypeChecker.getInstance().getTypeOf(_context.getNode());
  SNode parentType=MathUtil.getUnboxedElementType(TypeChecker.getInstance().getTypeOf(SNodeOperations.getParent(_context.getNode())));
  SNode ce=MathTypeUtil.typeCast(SNodeOperations.cast(myType,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506dL,"jetbrains.mps.baseLanguage.structure.Type")),SNodeOperations.cast(parentType,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506dL,"jetbrains.mps.baseLanguage.structure.Type")));
  SLinkOperations.setTarget(ce,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf940dabe4aL,0xf940dabe4cL,"expression"),SNodeOperations.copyNode(_context.getNode()));
  return ce;
}
