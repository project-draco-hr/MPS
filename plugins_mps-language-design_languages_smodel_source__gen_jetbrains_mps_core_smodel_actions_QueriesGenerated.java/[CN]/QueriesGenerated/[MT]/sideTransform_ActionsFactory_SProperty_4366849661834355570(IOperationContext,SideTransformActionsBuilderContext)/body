{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
  ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(SConceptOperations.findConceptDeclaration("jetbrains.mps.core.smodel.structure.SConceptQuery"),_context.getSourceNode()){
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      SNode query=SNodeFactoryOperations.replaceWithNewChild(_context.getSourceNode(),"jetbrains.mps.core.smodel.structure.SConceptQuery");
      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getSourceNode(),"type",true),"jetbrains.mps.core.structure.structure.SEnumerationDataType")) {
      }
 else       if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getSourceNode(),"type",true),"jetbrains.mps.core.structure.structure.SPrimitiveDataType")) {
        SNode primitive=SNodeOperations.cast(SLinkOperations.getTarget(_context.getSourceNode(),"type",true),"jetbrains.mps.core.structure.structure.SPrimitiveDataType");
        if (SPropertyOperations.hasValue(primitive,"kind","bool","string")) {
          SNodeFactoryOperations.setNewChild(query,"type","jetbrains.mps.core.query.structure.MqlBoolType");
        }
 else         if (SPropertyOperations.hasValue(primitive,"kind","string","string")) {
          SNodeFactoryOperations.setNewChild(query,"type","jetbrains.mps.core.query.structure.MqlStringType");
        }
 else         if (SPropertyOperations.hasValue(primitive,"kind","int","string")) {
          SNodeFactoryOperations.setNewChild(query,"type","jetbrains.mps.core.query.structure.MqlIntType");
        }
      }
      SPropertyOperations.set(query,"name",SPropertyOperations.getString(_context.getSourceNode(),"name"));
      return query;
    }
    public String getMatchingText(    String pattern){
      return "(";
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
  }
);
  return result;
}
