{
  final List<String> methodsToRemove=ListSequence.fromList(new LinkedList<String>());
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      for (      ITestNodeWrapper testCase : MapSequence.fromMap(TestRunState.this.myTestToMethodsMap).keySet()) {
        if (testCase.getFqName().equals(testCaseName)) {
          for (          ITestNodeWrapper testMethod : MapSequence.fromMap(myTestToMethodsMap).get(testCase)) {
            String methodKey=testCaseName + '.' + testMethod.getName();
            ListSequence.fromList(methodsToRemove).addElement(methodKey);
          }
        }
      }
    }
  }
);
synchronized (this.myTestMethods) {
    for (    String methodKey : methodsToRemove) {
      if (ListSequence.fromList(this.myTestMethods).contains(methodKey)) {
        ListSequence.fromList(this.myTestMethods).removeElement(methodKey);
      }
    }
  }
}
