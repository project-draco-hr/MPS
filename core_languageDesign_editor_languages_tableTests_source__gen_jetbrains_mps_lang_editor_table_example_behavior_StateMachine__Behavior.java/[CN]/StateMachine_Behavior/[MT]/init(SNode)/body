{
  int count=3;
  for (int i=0; i < count; i++) {
    SNode event=SConceptOperations.createNewNode("jetbrains.mps.lang.editor.table.example.structure.Event",null);
    SPropertyOperations.set(event,"name","e_" + i);
    ListSequence.fromList(SLinkOperations.getTargets(thisNode,"events",true)).addElement(event);
  }
  for (int i=0; i < count; i++) {
    SNode state=SConceptOperations.createNewNode("jetbrains.mps.lang.editor.table.example.structure.State",null);
    SPropertyOperations.set(state,"name","s_" + i);
    ListSequence.fromList(SLinkOperations.getTargets(thisNode,"states",true)).addElement(state);
  }
  for (int i=0; i < count; i++) {
    SNode sourceState=ListSequence.fromList(SLinkOperations.getTargets(thisNode,"states",true)).getElement(i);
    SNode targetState=ListSequence.fromList(SLinkOperations.getTargets(thisNode,"states",true)).getElement((i + 1 == count ? 0 : i + 1));
    SNode event=ListSequence.fromList(SLinkOperations.getTargets(thisNode,"events",true)).getElement(i);
    SNode transition=SConceptOperations.createNewNode("jetbrains.mps.lang.editor.table.example.structure.Transition",null);
    SLinkOperations.setTarget(transition,"fromState",SConceptOperations.createNewNode("jetbrains.mps.lang.editor.table.example.structure.StateReference",null),true);
    SLinkOperations.setTarget(SLinkOperations.getTarget(transition,"fromState",true),"state",sourceState,false);
    SLinkOperations.setTarget(transition,"toState",SConceptOperations.createNewNode("jetbrains.mps.lang.editor.table.example.structure.StateReference",null),true);
    SLinkOperations.setTarget(SLinkOperations.getTarget(transition,"toState",true),"state",targetState,false);
    SLinkOperations.setTarget(transition,"trigger",SConceptOperations.createNewNode("jetbrains.mps.lang.editor.table.example.structure.EventReference",null),true);
    SLinkOperations.setTarget(SLinkOperations.getTarget(transition,"trigger",true),"event",event,false);
    SPropertyOperations.set(transition,"condition","true");
    ListSequence.fromList(SLinkOperations.getTargets(thisNode,"transitions",true)).addElement(transition);
  }
}
