{
  Map<String,PropertyConstraintsDescriptor> properties=new HashMap();
  properties.put("name",new BasePropertyConstraintsDescriptor("name",this){
    @Override public boolean hasOwnGetter(){
      return true;
    }
    @Override public Object getValue(    SNode node,    IScope scope){
      String propertyName="name";
{
        String prefix="";
        if (SNodeOperations.getAncestor(SLinkOperations.getTarget(node,"macro",false),"jetbrains.mps.buildScript.structure.BuildProject",false,false) != SNodeOperations.getAncestor(node,"jetbrains.mps.buildScript.structure.BuildProject",false,false)) {
          prefix=SPropertyOperations.getString(SNodeOperations.getAncestor(SLinkOperations.getTarget(node,"macro",false),"jetbrains.mps.buildScript.structure.BuildProject",false,false),"name") + ".";
        }
        return "${" + prefix + SPropertyOperations.getString(SLinkOperations.getTarget(node,"macro",false),"name")+ "}";
      }
    }
  }
);
  return properties;
}
