{
  boolean checkModels=ApplicationManager.getApplication().getComponent(GenerationSettings.class).isCheckModelsBeforeGeneration();
  if (!(checkModels)) {
    return true;
  }
  ModelCheckerViewer viewer=ModelCheckerTool_Tool.this.checkModels(modelDescriptors,operationContext,false);
  SearchResults<ModelCheckerIssue> issues=viewer.getSearchResults();
  int warnings=ModelCheckerUtils.getIssueCountForCategory(issues,ModelCheckerUtils.CATEGORY_WARNING);
  int errors=ModelCheckerUtils.getIssueCountForCategory(issues,ModelCheckerUtils.CATEGORY_ERROR);
  if (errors != 0) {
    final String dialogMessage="Model checker found " + errors + " errors and "+ warnings+ " warnings. Review them and don't generate models or ignore them?";
    DialogWrapper dialog=new DialogWrapper(ModelCheckerTool_Tool.this.myProject,true){
{
        this.setTitle("Check Before Generation");
        this.setButtonsAlignment(SwingUtilities.CENTER);
        this.init();
      }
      @Nullable protected JComponent createCenterPanel(){
        JPanel panel=new JPanel(new BorderLayout());
        JCheckBox checkBox=new JCheckBox("Don't check models before generation");
        checkBox.addItemListener(new ItemListener(){
          public void itemStateChanged(          ItemEvent ev){
            boolean selected=ev.getStateChange() == ItemEvent.SELECTED;
            GenerationSettings.getInstance().setCheckModelsBeforeGeneration(!(selected));
          }
        }
);
        panel.add(new JLabel(dialogMessage),BorderLayout.CENTER);
        panel.add(checkBox,BorderLayout.SOUTH);
        return panel;
      }
      @Override protected Action getCancelAction(){
        Action cancelAction=super.getCancelAction();
        cancelAction.putValue(Action.NAME,"Ignore Errors");
        return cancelAction;
      }
      @Override protected Action getOKAction(){
        Action okAction=super.getOKAction();
        okAction.putValue(Action.NAME,"Review Errors");
        return okAction;
      }
    }
;
    dialog.show();
    if (dialog.isOK()) {
      ModelCheckerTool_Tool.this.showTabWithResults(viewer);
      viewer.saveGenerationRunnable(regenerationRunnable);
      return false;
    }
 else {
      return true;
    }
  }
  return true;
}
