{
  String visibleMatchingText=action.getVisibleMatchingText(pattern);
  if (pattern == null || visibleMatchingText == null) {
    return visibleMatchingText;
  }
  List<Integer> indexesOfColoredChars=getIndexes(action,IntelligentInputUtil.trimLeft(pattern),visibleMatchingText);
  if (indexesOfColoredChars.isEmpty()) {
    return visibleMatchingText;
  }
  StringBuilder builder=new StringBuilder("<html>");
  Iterator<Integer> coloredIndexIterator=indexesOfColoredChars.iterator();
  int currentColoredIndex=coloredIndexIterator.next();
  boolean isTextColoredNow=false;
  for (int i=0; i < visibleMatchingText.length(); i++) {
    if (i == currentColoredIndex && !isTextColoredNow) {
      builder.append("<font color='");
      builder.append(color);
      builder.append("'>");
      isTextColoredNow=true;
    }
    char c=visibleMatchingText.charAt(i);
    if (c == '<') {
      builder.append("&lt;");
    }
 else     if (c == '>') {
      builder.append("&gt;");
    }
 else     if (c == ' ') {
      builder.append("&nbsp;");
    }
 else {
      builder.append(c);
    }
    if (isTextColoredNow) {
      boolean hasNext=coloredIndexIterator.hasNext();
      if (hasNext) {
        currentColoredIndex=coloredIndexIterator.next();
      }
      if (!hasNext || currentColoredIndex > i + 1) {
        builder.append("</font>");
        isTextColoredNow=false;
      }
    }
  }
  builder.append("</html>");
  return builder.toString();
}
