{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("action",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      List<SNode> ownActions=SModelOperations.getRoots(SNodeOperations.getModel(_context.getEnclosingNode()),"jetbrains.mps.lang.plugin.structure.ActionDeclaration");
      List<SNode> abstractImported=ListSequence.fromList(SModelOperations.getRootsIncludingImported(SNodeOperations.getModel(_context.getEnclosingNode()),GlobalScope.getInstance(),"jetbrains.mps.lang.plugin.structure.ActionDeclaration")).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return ListSequence.fromList(SLinkOperations.getTargets(it,"constructionParameter",true)).isNotEmpty();
        }
      }
).toListSequence();
      return ListSequence.fromList(ownActions).union(ListSequence.fromList(abstractImported));
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c89590361(jetbrains.mps.lang.plugin.constraints)","7029281142617299477");
    }
  }
);
  return result;
}
