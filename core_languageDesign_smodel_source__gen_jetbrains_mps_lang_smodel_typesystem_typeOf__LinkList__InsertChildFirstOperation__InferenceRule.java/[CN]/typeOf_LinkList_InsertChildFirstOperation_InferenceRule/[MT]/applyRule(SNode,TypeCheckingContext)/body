{
  RulesUtil.checkAppliedTo_LinkListAccess_aggregation(typeCheckingContext,op);
  SNode parameter=SLinkOperations.getTarget(op,"childNode",true);
  if ((parameter != null)) {
    final SNode ExpectedType_typevar_1206101286415=typeCheckingContext.createNewRuntimeTypesVariable();
    RulesUtil.equate_inputNodeType(typeCheckingContext,op,typeCheckingContext.getEquationManager().getRepresentator(ExpectedType_typevar_1206101286415));
    SNode parmType=typeCheckingContext.typeOf(parameter,"r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)","1205272570106",true);
{
      SNode _nodeToCheck_1029348928467=op;
      BaseIntentionProvider intentionProvider=null;
      typeCheckingContext.createLessThanInequation(parmType,typeCheckingContext.getEquationManager().getRepresentator(ExpectedType_typevar_1206101286415),_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)","1205272570108",false,0,intentionProvider);
    }
  }
}
