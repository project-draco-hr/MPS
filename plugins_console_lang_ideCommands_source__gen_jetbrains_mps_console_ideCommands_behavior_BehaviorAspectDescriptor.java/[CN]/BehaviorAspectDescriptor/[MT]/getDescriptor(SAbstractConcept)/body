{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_846f5o_a0cb.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return myAbsractMake__BehaviorDescriptor;
      }
    break;
case 1:
  if (true) {
    return myActionCallDeclaredParameter__BehaviorDescriptor;
  }
break;
case 2:
if (true) {
return myActionCallGlobalParameter__BehaviorDescriptor;
}
break;
case 3:
if (true) {
return myActionCallParameter__BehaviorDescriptor;
}
break;
case 4:
if (true) {
return myCallActionExpression__BehaviorDescriptor;
}
break;
case 5:
if (true) {
return myClean__BehaviorDescriptor;
}
break;
case 6:
if (true) {
return myClickableGenerator__BehaviorDescriptor;
}
break;
case 7:
if (true) {
return myGlobalStatisticTarget__BehaviorDescriptor;
}
break;
case 8:
if (true) {
return myINodeSetReference__BehaviorDescriptor;
}
break;
case 9:
if (true) {
return myIStatisticsTarget__BehaviorDescriptor;
}
break;
case 10:
if (true) {
return myMake__BehaviorDescriptor;
}
break;
case 11:
if (true) {
return myModelProperties__BehaviorDescriptor;
}
break;
case 12:
if (true) {
return myModelReference__BehaviorDescriptor;
}
break;
case 13:
if (true) {
return myModelStatisticsTarget__BehaviorDescriptor;
}
break;
case 14:
if (true) {
return myModuleProperties__BehaviorDescriptor;
}
break;
case 15:
if (true) {
return myOfAspectOperation__BehaviorDescriptor;
}
break;
case 16:
if (true) {
return myProjectStatisticsTarget__BehaviorDescriptor;
}
break;
case 17:
if (true) {
return myRebuildProjectCommand__BehaviorDescriptor;
}
break;
case 18:
if (true) {
return myRemoveGenSources__BehaviorDescriptor;
}
break;
case 19:
if (true) {
return myShowBrokenReferences__BehaviorDescriptor;
}
break;
case 20:
if (true) {
return myShowExpression__BehaviorDescriptor;
}
break;
case 21:
if (true) {
return myShowGenPlan__BehaviorDescriptor;
}
break;
case 22:
if (true) {
return myStatCommand__BehaviorDescriptor;
}
break;
case 23:
if (true) {
return mySubtreeStatisticsTarget__BehaviorDescriptor;
}
break;
case 24:
if (true) {
return myUnloadModelsCommand__BehaviorDescriptor;
}
break;
default :
}
}
return null;
}
