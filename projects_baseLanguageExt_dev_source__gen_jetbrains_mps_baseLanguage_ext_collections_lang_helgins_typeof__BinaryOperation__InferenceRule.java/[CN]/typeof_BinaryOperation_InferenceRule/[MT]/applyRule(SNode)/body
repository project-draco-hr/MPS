{
  SNode lValue=RulesFunctions_Collections.getInput(argument);
  SNode rValue=SLinkOperations.getTarget(argument,"rightExpression",true);
  final SNode elementType_typevar_1184848397564=TypeChecker.getInstance().getRuntimeSupport().createNewRuntimeTypesVariable(false);
  final SNode sequenceType_typevar_1184848409899=TypeChecker.getInstance().getRuntimeSupport().createNewRuntimeTypesVariable(false);
  TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getEquationManager().getRepresentator(sequenceType_typevar_1184848409899),new QuotationClass_35().createNode(TypeChecker.getInstance().getEquationManager().getRepresentator(elementType_typevar_1184848397564)),argument,null,"jetbrains.mps.baseLanguage.ext.collections.lang.helgins","1184848442457");
  TypeChecker.getInstance().getRuntimeSupport().createLessThanInequation(TypeChecker.getInstance().getRuntimeSupport().typeOf(lValue,"jetbrains.mps.baseLanguage.ext.collections.lang.helgins","1184848533289",true),TypeChecker.getInstance().getEquationManager().getRepresentator(sequenceType_typevar_1184848409899),lValue,null,"jetbrains.mps.baseLanguage.ext.collections.lang.helgins","1184848544308");
  TypeChecker.getInstance().getRuntimeSupport().createLessThanInequation(TypeChecker.getInstance().getRuntimeSupport().typeOf(rValue,"jetbrains.mps.baseLanguage.ext.collections.lang.helgins","1184848549565",true),TypeChecker.getInstance().getEquationManager().getRepresentator(sequenceType_typevar_1184848409899),rValue,null,"jetbrains.mps.baseLanguage.ext.collections.lang.helgins","1184848553704");
  TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(argument,"jetbrains.mps.baseLanguage.ext.collections.lang.helgins","1184848561861",true),TypeChecker.getInstance().getEquationManager().getRepresentator(sequenceType_typevar_1184848409899),argument,null,"jetbrains.mps.baseLanguage.ext.collections.lang.helgins","1184848565182");
}
