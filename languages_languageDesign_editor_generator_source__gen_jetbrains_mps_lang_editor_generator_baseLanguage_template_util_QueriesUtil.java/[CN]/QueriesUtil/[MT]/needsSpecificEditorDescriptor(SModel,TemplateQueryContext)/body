{
  final List<SAbstractConcept> editorConcepts=Sequence.fromIterable(Sequence.fromArray(QueriesUtil.editorRootConcepts())).toListSequence();
  return LanguageRuntimeGeneratorUtils.hasManualEditorAspectDescriptor(context,model) || ListSequence.fromList(SModelOperations.roots(model,null)).any(new IWhereFilter<SNode>(){
    public boolean accept(    final SNode root){
      return ListSequence.fromList(editorConcepts).any(new IWhereFilter<SAbstractConcept>(){
        public boolean accept(        SAbstractConcept concept){
          return SNodeOperations.isInstanceOf(root,SNodeOperations.asSConcept(concept));
        }
      }
);
    }
  }
);
}
