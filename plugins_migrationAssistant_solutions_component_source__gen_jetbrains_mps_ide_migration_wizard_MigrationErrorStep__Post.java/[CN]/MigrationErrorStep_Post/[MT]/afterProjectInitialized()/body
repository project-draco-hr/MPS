{
  return new _FunctionTypes._void_P0_E0(){
    public void invoke(){
      jetbrains.mps.project.Project mpsProject=ProjectHelper.toMPSProject(myProject);
      Iterable<SModule> modules=((Iterable<SModule>)mpsProject.getModulesWithGenerators());
      Iterable<SNode> problems=MigrationCheckUtil.getProblemNodes(modules);
      List<SearchResult<jetbrains.mps.smodel.SNode>> results=Sequence.fromIterable(problems).select(new ISelector<SNode,SearchResult<jetbrains.mps.smodel.SNode>>(){
        public SearchResult<jetbrains.mps.smodel.SNode> select(        SNode it){
          return new SearchResult<jetbrains.mps.smodel.SNode>(((jetbrains.mps.smodel.SNode)it),"Language not found");
        }
      }
).toListSequence();
      myProject.getComponent(UsagesViewTool.class).show(new SearchResults<jetbrains.mps.smodel.SNode>(Collections.<jetbrains.mps.smodel.SNode>emptySet(),results),"");
    }
  }
;
}
