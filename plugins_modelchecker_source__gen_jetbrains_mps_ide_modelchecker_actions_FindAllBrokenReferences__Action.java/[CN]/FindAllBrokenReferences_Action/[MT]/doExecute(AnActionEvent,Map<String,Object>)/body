{
  try {
    List<SModel> models=ListSequence.fromListWithValues(new ArrayList<SModel>(),Sequence.fromIterable(((Iterable<SModule>)((MPSProject)MapSequence.fromMap(_params).get("mpsProject")).getModulesWithGenerators())).translate(new ITranslator2<SModule,SModel>(){
      public Iterable<SModel> translate(      SModule it){
        return it.getModels();
      }
    }
).where(new IWhereFilter<SModel>(){
      public boolean accept(      SModel md){
        return SModelStereotype.isUserModel(md);
      }
    }
));
    ModelCheckerTool.getInstance(((MPSProject)MapSequence.fromMap(_params).get("mpsProject")).getProject()).checkModels(models,null,true,new ModelCheckerIssueFinder(new UnresolvedReferencesChecker(((MPSProject)MapSequence.fromMap(_params).get("mpsProject")))));
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "FindAllBrokenReferences",t);
    }
  }
}
