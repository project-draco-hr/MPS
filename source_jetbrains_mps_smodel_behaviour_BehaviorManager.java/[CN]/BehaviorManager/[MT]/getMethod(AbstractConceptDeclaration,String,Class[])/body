{
  Method method=null;
  String fqName=NameUtil.nodeFQName(concept);
  MethodInfo mi=new MethodInfo(fqName,methodName,parameterTypes);
  if (myMethods.containsKey(mi)) {
    return myMethods.get(mi);
  }
  String behaviorClass=behaviorClassByConceptFqName(fqName);
  try {
    Class cls=Class.forName(behaviorClass,true,ClassLoaderManager.getInstance().getClassLoader());
    method=cls.getMethod(methodName,parameterTypes);
  }
 catch (  ClassNotFoundException e) {
  }
catch (  NoSuchMethodException e) {
  }
  if (method != null) {
    method.setAccessible(true);
    myMethods.put(mi,method);
  }
  return method;
}
