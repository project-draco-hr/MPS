{
  if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.structure.VariableDeclaration")) {
    SNode variable=SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.VariableDeclaration");
    SNode nodeType=SLinkOperations.getTarget(variable,"type",true);
    if (nodeType != null) {
      String name=ListSequence.fromList(((List<String>)BehaviorManager.getInstance().invoke(Object.class,SNodeOperations.cast(nodeType,"jetbrains.mps.baseLanguage.structure.Type"),"virtual_getVariableSuffixes_1213877337304",new Class[]{SNode.class}))).first();
      if (MapSequence.fromMap(usedNames).containsKey(name)) {
        int i=MapSequence.fromMap(usedNames).get(name);
        i=i + 1;
        MapSequence.fromMap(usedNames).put(name,i);
        name=name + i;
      }
 else {
        MapSequence.fromMap(usedNames).put(name,0);
      }
      String prefix=((String)BehaviorManager.getInstance().invoke(Object.class,SNodeOperations.cast(variable,"jetbrains.mps.baseLanguage.structure.VariableDeclaration"),"virtual_getPrefix_3012473318495495520",new Class[]{SNode.class,Project.class},myProject));
      String suffix=((String)BehaviorManager.getInstance().invoke(Object.class,SNodeOperations.cast(variable,"jetbrains.mps.baseLanguage.structure.VariableDeclaration"),"virtual_getSuffix_3012473318495499856",new Class[]{SNode.class,Project.class},myProject));
      String mainName=(StringUtils.isEmpty(prefix) ? name : NameUtil.capitalize(name));
      SPropertyOperations.set(variable,"name",prefix + mainName + suffix);
    }
  }
  for (  SNode child : SNodeOperations.getChildren(node)) {
    setVariableNames(child,usedNames);
  }
}
