{
  if (SModelStereotype.isStubModelStereotype(SNodeOperations.getModel(baseMethod).getStereotype())) {
    setVariableNames(method,MapSequence.fromMap(new HashMap<String,Integer>()));
  }
  if (myRemoveAttributes) {
    for (    SNode child : SNodeOperations.getChildren(method)) {
      removeAttributes(child);
    }
  }
  boolean isInterfaceMethod=SNodeOperations.isInstanceOf(SNodeOperations.getParent(baseMethod),"jetbrains.mps.baseLanguage.structure.Interface") || SPropertyOperations.getBoolean(baseMethod,"isAbstract");
  if (myInsertOverride && !(isInterfaceMethod)) {
    boolean isNeedAddAnnotation=true;
    for (    SNode annotation : SLinkOperations.getTargets(method,"annotation",true)) {
      if (SLinkOperations.getTarget(annotation,"annotation",false) == SNodeOperations.getNode("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)","~Override")) {
        isNeedAddAnnotation=false;
        break;
      }
    }
    if (isNeedAddAnnotation) {
      ListSequence.fromList(SLinkOperations.getTargets(method,"annotation",true)).addElement(new OverrideImplementMethodsHelper.QuotationClass_tfz3o4_a0a0a0c0d0b().createNode());
    }
  }
  Iterable<SNode> paramList=ListSequence.fromList(SLinkOperations.getTargets(method,"parameter",true)).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return new OverrideImplementMethodsHelper.QuotationClass_tfz3o4_a0a0a0a0f0b().createNode(it);
    }
  }
);
  SNode defaultExpr;
  if (isInterfaceMethod) {
    defaultExpr=((SNode)BehaviorManager.getInstance().invoke(Object.class,SNodeOperations.cast(SLinkOperations.getTarget(baseMethod,"returnType",true),"jetbrains.mps.baseLanguage.structure.Type"),"virtual_createDefaultTypeExpression_3359611512358152580",new Class[]{SNode.class}));
  }
 else {
    defaultExpr=new OverrideImplementMethodsHelper.QuotationClass_tfz3o4_a0a0a0h0b().createNode(baseMethod,Sequence.fromIterable(paramList).toListSequence());
  }
  if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(method,"returnType",true),"jetbrains.mps.baseLanguage.structure.VoidType")) {
    if (!(isInterfaceMethod)) {
      ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method,"body",true),"statement",true)).addElement(new OverrideImplementMethodsHelper.QuotationClass_tfz3o4_a0a0a0a0j0b().createNode(defaultExpr));
    }
  }
 else {
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method,"body",true),"statement",true)).addElement(getReturnStatement(defaultExpr));
  }
}
