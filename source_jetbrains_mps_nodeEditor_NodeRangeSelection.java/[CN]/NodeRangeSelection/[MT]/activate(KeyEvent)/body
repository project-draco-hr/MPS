{
  EditorCell selectedCell=myEditorComponent.getSelectedCell();
  SNode childNode=selectedCell.getSemanticNode();
  SNode parentNode=childNode.getParent();
  String role=null;
  while (parentNode != null) {
    role=childNode.getRole_();
    LinkDeclaration childDeclaration=SModelUtil.getChildDeclaration(parentNode,role);
    Cardinality cardinality=childDeclaration.getSourceCardinality();
    if (cardinality == Cardinality._0_n || cardinality == Cardinality._1_n) {
      break;
    }
    childNode=parentNode;
    parentNode=childNode.getParent();
  }
  if (parentNode == null) {
    return false;
  }
  myActive=true;
  myRole=role;
  myParentNode=parentNode;
  myFirstNode=childNode;
  myLastNode=childNode;
  myEditorComponent.repaint();
  myEditorComponent.pushKeyboardHandler(this);
  if (selectedCell != myEditorComponent.findNodeCell(childNode)) {
    return true;
  }
  processKeyPressed(myEditorComponent.getContext(),keyEvent);
  return true;
}
