{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(8675788371017092295l,-9098312342032910879l),1221163681458l,1221164078452l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(8675788371017092295l,-9098312342032910879l),1221163681458l,1221164078452l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          SNode dotOperandConcept=SNodeOperation_Behavior.call_getLeftNodeConcept_1213877508847(SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeOperation"))),SNodeOperations.cast(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.DotExpression"));
          List<SNode> links=AbstractConceptDeclaration_Behavior.call_getLinkDeclarations_1213877394480(dotOperandConcept);
          return ListSequence.fromList(links).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return SPropertyOperations.hasValue(it,MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1071489288298l,1071599937831l,"metaClass"),"reference","reference");
            }
          }
);
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_q5w6y3_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
