{
  List<ModelChange> nodeChanges=MapSequence.fromMap(myNodeToChanges).get(event.getReference().getSourceNode().getNodeId());
  invalidateChanges(ListSequence.fromList(nodeChanges).ofType(SetReferenceChange.class).where(new IWhereFilter<SetReferenceChange>(){
    public boolean accept(    SetReferenceChange ch){
      return eq_bow6nj_a0a0a0a0a0a1a3wb(ch.getRole(),event.getReference().getRole());
    }
  }
));
  invalidateDeletedRoot(event);
}
