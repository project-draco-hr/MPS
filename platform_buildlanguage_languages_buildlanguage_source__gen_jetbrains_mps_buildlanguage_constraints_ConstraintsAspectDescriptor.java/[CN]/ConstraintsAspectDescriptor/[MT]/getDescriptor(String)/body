{
  if ("jetbrains.mps.buildlanguage.structure.Project".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.Project"));
  }
  if ("jetbrains.mps.buildlanguage.structure.AbstractCall".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.AbstractCall"));
  }
  if ("jetbrains.mps.buildlanguage.structure.TargetDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.TargetDeclaration"));
  }
  if ("jetbrains.mps.buildlanguage.structure.PropertyDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.PropertyDeclaration"));
  }
  if ("jetbrains.mps.buildlanguage.structure.PropertyValueExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.PropertyValueExpression"));
  }
  if ("jetbrains.mps.buildlanguage.structure.TargetReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new TargetReference_Constraints());
  }
  if ("jetbrains.mps.buildlanguage.structure.PropertyReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new PropertyReference_Constraints());
  }
  if ("jetbrains.mps.buildlanguage.structure.StringLiteral".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new StringLiteral_Constraints());
  }
  if ("jetbrains.mps.buildlanguage.structure.IPropertyHolder".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.IPropertyHolder"));
  }
  if ("jetbrains.mps.buildlanguage.structure.BooleanLiteral".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.BooleanLiteral"));
  }
  if ("jetbrains.mps.buildlanguage.structure.IntLiteral".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.IntLiteral"));
  }
  if ("jetbrains.mps.buildlanguage.structure.BooleanType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.BooleanType"));
  }
  if ("jetbrains.mps.buildlanguage.structure.StringType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.StringType"));
  }
  if ("jetbrains.mps.buildlanguage.structure.IntegerType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.IntegerType"));
  }
  if ("jetbrains.mps.buildlanguage.structure.PropertyType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.PropertyType"));
  }
  if ("jetbrains.mps.buildlanguage.structure.BinaryOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.BinaryOperation"));
  }
  if ("jetbrains.mps.buildlanguage.structure.PlusOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.PlusOperation"));
  }
  if ("jetbrains.mps.buildlanguage.structure.Enum".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.Enum"));
  }
  if ("jetbrains.mps.buildlanguage.structure.StringEnum".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.StringEnum"));
  }
  if ("jetbrains.mps.buildlanguage.structure.IntegerEnum".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.IntegerEnum"));
  }
  if ("jetbrains.mps.buildlanguage.structure.FileName".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.FileName"));
  }
  if ("jetbrains.mps.buildlanguage.structure.FileType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.FileType"));
  }
  if ("jetbrains.mps.buildlanguage.structure.IProjectComponent".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.IProjectComponent"));
  }
  if ("jetbrains.mps.buildlanguage.structure.ImportPropertyNode".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.ImportPropertyNode"));
  }
  if ("jetbrains.mps.buildlanguage.structure.CallReferenceType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.CallReferenceType"));
  }
  if ("jetbrains.mps.buildlanguage.structure.CallReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new CallReference_Constraints());
  }
  if ("jetbrains.mps.buildlanguage.structure.ISource".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.ISource"));
  }
  if ("jetbrains.mps.buildlanguage.structure.ICommented".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.ICommented"));
  }
  if ("jetbrains.mps.buildlanguage.structure.TargetReferencePropertyValueExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new TargetReferencePropertyValueExpression_Constraints());
  }
  if ("jetbrains.mps.buildlanguage.structure.ImportProject".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.ImportProject"));
  }
  if ("jetbrains.mps.buildlanguage.structure.MultiLineString".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new MultiLineString_Constraints());
  }
  if ("jetbrains.mps.buildlanguage.structure.ExternalPropertyDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ExternalPropertyDeclaration_Constraints());
  }
  if ("jetbrains.mps.buildlanguage.structure.AbstractImportProject".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.AbstractImportProject"));
  }
  if ("jetbrains.mps.buildlanguage.structure.ITargetReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.ITargetReference"));
  }
  if ("jetbrains.mps.buildlanguage.structure.AbstractImportProperties".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.AbstractImportProperties"));
  }
  if ("jetbrains.mps.buildlanguage.structure.ImportPropertiesFromFile".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.ImportPropertiesFromFile"));
  }
  if ("jetbrains.mps.buildlanguage.structure.IAntScript".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.IAntScript"));
  }
  if ("jetbrains.mps.buildlanguage.structure.IDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.IDeclaration"));
  }
  if ("jetbrains.mps.buildlanguage.structure.AbstractPropertyDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.buildlanguage.structure.AbstractPropertyDeclaration"));
  }
  return null;
}
