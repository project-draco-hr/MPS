{
  setSourceElement(new MPSPsiElement(source));
  final Wrappers._boolean isApplicable=new Wrappers._boolean();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      isApplicable.value=ListSequence.fromList(SNodeOperations.getDescendants(source,"jetbrains.mps.build.custommps.structure.MPSBuild",false,new String[]{})).isNotEmpty();
    }
  }
);
  if (!(isApplicable.value)) {
    return null;
  }
  final Wrappers._T<String> configurationId=new Wrappers._T<String>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      configurationId.value=ListSequence.fromList(SLinkOperations.getTargets(source,"configuration",true)).first().getId();
    }
  }
);
  CustomMPSApplication_Configuration configuration=new CustomMPSApplication_Configuration(getContext().getProject(),(CustomMPSApplication_Configuration_Factory)getConfigurationFactory(),SPropertyOperations.getString(source,"name"));
  configuration.getNode().setNode(source);
  configuration.setConfigurationId(configurationId.value);
  return configuration;
}
