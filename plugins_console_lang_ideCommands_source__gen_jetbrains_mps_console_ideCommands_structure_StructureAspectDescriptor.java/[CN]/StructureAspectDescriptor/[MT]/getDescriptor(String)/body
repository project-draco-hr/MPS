{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.GlobalStatable").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.console.ideCommands.structure.IStatable").alias("global","").create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.IStatable").interface_().create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.ModelStatCommand").super_("jetbrains.mps.console.base.structure.InterpretedCommand").parents("jetbrains.mps.console.base.structure.InterpretedCommand").children(new String[]{"model"},new boolean[]{false}).alias("model info","").create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.ModelStatable").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.console.ideCommands.structure.IStatable").children(new String[]{"target"},new boolean[]{false}).alias("model","").create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.ProjectStatable").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.console.ideCommands.structure.IStatable").alias("project","").create();
case 5:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.RebuildProjectCommand").super_("jetbrains.mps.console.base.structure.InterpretedCommand").parents("jetbrains.mps.console.base.structure.InterpretedCommand").children(new String[]{"model"},new boolean[]{false}).alias("rebuild project","clean and make").create();
case 6:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.StatCommand").super_("jetbrains.mps.console.base.structure.InterpretedCommand").parents("jetbrains.mps.console.base.structure.InterpretedCommand").children(new String[]{"target"},new boolean[]{false}).alias("stat","").create();
case 7:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.UnloadModelsCommand").super_("jetbrains.mps.console.base.structure.InterpretedCommand").parents("jetbrains.mps.console.base.structure.InterpretedCommand").alias("unload models","").create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
