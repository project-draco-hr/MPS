{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.AbsractMake").super_("jetbrains.mps.console.blCommand.structure.QueryExpression").parents("jetbrains.mps.console.blCommand.structure.QueryExpression").children(new String[]{"argument"},new boolean[]{false}).abstract_().create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.ActionCallDeclaredParameter").super_("jetbrains.mps.console.ideCommands.structure.ActionCallParameter").parents("jetbrains.mps.console.ideCommands.structure.ActionCallParameter").references("declaration").create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.ActionCallGlobalParameter").super_("jetbrains.mps.console.ideCommands.structure.ActionCallParameter").parents("jetbrains.mps.console.ideCommands.structure.ActionCallParameter").references("declaration").create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.ActionCallParameter").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"value"},new boolean[]{false}).abstract_().create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.CallActionExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression","jetbrains.mps.console.blCommand.structure.ConsoleExpression").references("action").children(new String[]{"parameter"},new boolean[]{true}).alias("#callAction","execute mps action with custom parameters").create();
case 5:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.Clean").super_("jetbrains.mps.console.ideCommands.structure.AbsractMake").parents("jetbrains.mps.console.ideCommands.structure.AbsractMake").alias("#clean","").create();
case 6:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.ClickableGenerator").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.console.base.structure.IClickable").properties("moduleId").create();
case 7:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.GlobalStatisticTarget").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.console.ideCommands.structure.IStatisticsTarget","jetbrains.mps.console.ideCommands.structure.INodeSetReference").alias("global","").create();
case 8:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.INodeSetReference").interface_().create();
case 9:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.IStatisticsTarget").interface_().create();
case 10:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.Make").super_("jetbrains.mps.console.ideCommands.structure.AbsractMake").parents("jetbrains.mps.console.ideCommands.structure.AbsractMake").alias("#make","").create();
case 11:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.ModelProperties").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").children(new String[]{"targetModel"},new boolean[]{false}).alias("#modelProperties","").create();
case 12:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.ModelReference").super_("jetbrains.mps.lang.smodel.structure.ModelReferenceExpression").parents("jetbrains.mps.lang.smodel.structure.ModelReferenceExpression").alias("model","").create();
case 13:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.ModelStatisticsTarget").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.console.ideCommands.structure.IStatisticsTarget","jetbrains.mps.console.ideCommands.structure.INodeSetReference").children(new String[]{"target"},new boolean[]{false}).alias("model","").create();
case 14:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.ModuleProperties").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").children(new String[]{"targetModule"},new boolean[]{false}).alias("#moduleProperties","").create();
case 15:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.NodeReference").super_("jetbrains.mps.lang.smodel.structure.NodeRefExpression").parents("jetbrains.mps.lang.smodel.structure.NodeRefExpression").alias("node","").create();
case 16:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.OfAspectOperation").super_("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation").parents("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation","jetbrains.mps.console.blCommand.structure.ConsoleOperation").references("requestedAspect").alias("ofAspect","").create();
case 17:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.ProjectStatisticsTarget").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.console.ideCommands.structure.IStatisticsTarget","jetbrains.mps.console.ideCommands.structure.INodeSetReference").alias("project","").create();
case 18:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.RebuildProjectCommand").super_("jetbrains.mps.console.base.structure.InterpretedCommand").parents("jetbrains.mps.console.base.structure.InterpretedCommand","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").children(new String[]{"model"},new boolean[]{false}).abstract_().alias("#rebuild project","clean and make").create();
case 19:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.RemoveGenSources").super_("jetbrains.mps.console.ideCommands.structure.AbsractMake").parents("jetbrains.mps.console.ideCommands.structure.AbsractMake").alias("#removeGenSources","").create();
case 20:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.ShowBrokenReferences").super_("jetbrains.mps.console.base.structure.InterpretedCommand").parents("jetbrains.mps.console.base.structure.InterpretedCommand").children(new String[]{"target"},new boolean[]{false}).alias("#showBrokenRefs","").create();
case 21:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.ShowGenPlan").super_("jetbrains.mps.console.base.structure.InterpretedCommand").parents("jetbrains.mps.console.base.structure.InterpretedCommand").children(new String[]{"targetModel"},new boolean[]{false}).alias("#showGenPlan","").create();
case 22:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.StatCommand").super_("jetbrains.mps.console.base.structure.InterpretedCommand").parents("jetbrains.mps.console.base.structure.InterpretedCommand").children(new String[]{"target"},new boolean[]{false}).alias("#stat","").create();
case 23:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.SubtreeStatisticsTarget").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.console.ideCommands.structure.IStatisticsTarget","jetbrains.mps.console.ideCommands.structure.INodeSetReference").children(new String[]{"target"},new boolean[]{false}).alias("node","").create();
case 24:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.UnloadModelsCommand").super_("jetbrains.mps.console.base.structure.InterpretedCommand").parents("jetbrains.mps.console.base.structure.InterpretedCommand","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").abstract_().alias("#unload models","").create();
case 25:
return new ConceptDescriptorBuilder("jetbrains.mps.console.ideCommands.structure.WithDependencies").super_("jetbrains.mps.console.blCommand.structure.QueryParameter").parents("jetbrains.mps.console.blCommand.structure.QueryParameter").alias("withDependencies","").create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
