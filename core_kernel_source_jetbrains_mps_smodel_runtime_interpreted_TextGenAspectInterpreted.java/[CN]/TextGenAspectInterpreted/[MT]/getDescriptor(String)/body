{
  SNode concept=SModelUtil.findConceptDeclaration(conceptFqName,GlobalScope.getInstance());
  if (concept == null) {
    LOG.error("Can't find concept node for concept: " + conceptFqName);
    return new DefaultTextGen();
  }
  SNode baseConcept=SModelUtil.getBaseConcept();
  while (concept != baseConcept) {
    Language l=SModelUtil.getDeclaringLanguage(concept);
    String packageName=NameUtil.namespaceFromConceptFQName(NameUtil.nodeFQName(concept));
    String className=concept.getName();
    String textgenClassname=packageName + ".textGen." + className+ "_TextGen";
    Class textgenClass=l.getClass(textgenClassname);
    if (textgenClass != null) {
      try {
        return (SNodeTextGen)textgenClass.newInstance();
      }
 catch (      Throwable t) {
        LOG.error(t,conceptFqName);
      }
    }
    concept=SNodeUtil.getConceptDeclaration_Extends(concept);
    if (concept == null) {
      concept=baseConcept;
    }
  }
  return new DefaultTextGen();
}
