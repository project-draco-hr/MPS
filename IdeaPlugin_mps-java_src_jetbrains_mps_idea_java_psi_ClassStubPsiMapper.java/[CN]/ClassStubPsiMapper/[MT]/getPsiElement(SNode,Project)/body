{
  return ModelAccess.instance().runReadAction(new Computable<PsiElement>(){
    @Override public PsiElement compute(){
      if (!hasCorrespondingPsi(node.getModel())) {
        return null;
      }
      boolean isClassifier=node.getConcept().isSubConceptOf(SConceptRepository.getInstance().getConcept("jetbrains.mps.baseLanguage.structure.Classifier"));
      if (!isClassifier) {
        return null;
      }
      SModel model=node.getModel();
      String classFQName=SNodeOperations.getModelLongName(model) + "." + node.getName();
      return JavaPsiFacade.getInstance(project).findClass(classFQName,GlobalSearchScope.allScope(project));
    }
  }
);
}
