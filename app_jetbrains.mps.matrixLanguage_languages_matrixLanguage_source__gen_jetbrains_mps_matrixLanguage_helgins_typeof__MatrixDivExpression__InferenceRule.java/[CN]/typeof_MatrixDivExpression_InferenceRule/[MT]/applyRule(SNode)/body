{
  final SNode v_typevar_1210172745581=TypeChecker.getInstance().getRuntimeSupport().createNewRuntimeTypesVariable();
  TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(nodeToCheck,"jetbrains.mps.matrixLanguage.helgins","1210172745586",true),TypeChecker.getInstance().getEquationManager().getRepresentator(v_typevar_1210172745581),nodeToCheck,null,"jetbrains.mps.matrixLanguage.helgins","1210172745582");
  TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(SLinkOperations.getTarget(nodeToCheck,"leftExpression",true),"jetbrains.mps.matrixLanguage.helgins","1210172745592",true),TypeChecker.getInstance().getEquationManager().getRepresentator(v_typevar_1210172745581),SLinkOperations.getTarget(nodeToCheck,"leftExpression",true),null,"jetbrains.mps.matrixLanguage.helgins","1210172745588");
  TypeChecker.getInstance().getRuntimeSupport().createLessThanInequation(TypeChecker.getInstance().getRuntimeSupport().typeOf(SLinkOperations.getTarget(nodeToCheck,"rightExpression",true),"jetbrains.mps.matrixLanguage.helgins","1210152315158",true),new QuotationClass_4().createNode(),SLinkOperations.getTarget(nodeToCheck,"rightExpression",true),null,"jetbrains.mps.matrixLanguage.helgins","1210152315156",false,0);
}
