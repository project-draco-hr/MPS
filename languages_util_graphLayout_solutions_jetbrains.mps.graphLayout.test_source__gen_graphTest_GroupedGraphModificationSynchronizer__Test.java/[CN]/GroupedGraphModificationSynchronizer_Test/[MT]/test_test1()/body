{
  String graphString="4 4  0 2  0 3  1 2  1 3";
  Graph graph=GraphIO.scanGraph(graphString);
  Set<Edge> initEdges=SetSequence.<Edge>fromSet(new HashSet<Edge>());
  SetSequence.fromSet(initEdges).addSequence(ListSequence.<Edge>fromList(graph.getEdges()));
  Graph groupedGraph=new Graph();
  groupedGraph.createNode();
  groupedGraph.createNode();
  Map<Node,Node> nodeMap=MapSequence.<Node,Node>fromMap(new HashMap<Node,Node>());
  MapSequence.<Node,Node>fromMap(nodeMap).put(graph.getNode(0),groupedGraph.getNode(0));
  MapSequence.<Node,Node>fromMap(nodeMap).put(graph.getNode(1),groupedGraph.getNode(0));
  MapSequence.<Node,Node>fromMap(nodeMap).put(graph.getNode(2),groupedGraph.getNode(1));
  MapSequence.<Node,Node>fromMap(nodeMap).put(graph.getNode(3),groupedGraph.getNode(1));
  Map<Edge,Edge> invEdgeMap=MapSequence.<Edge,Edge>fromMap(new HashMap<Edge,Edge>());
  Map<Edge,Edge> edgeMap=MapSequence.<Edge,Edge>fromMap(new HashMap<Edge,Edge>());
  for (  Edge edge : ListSequence.<Edge>fromList(graph.getEdges())) {
    Node groupSource=MapSequence.<Node,Node>fromMap(nodeMap).get(edge.getSource());
    Node groupTarget=MapSequence.<Node,Node>fromMap(nodeMap).get(edge.getTarget());
    Edge groupEdge=groupedGraph.connect(groupSource,groupTarget);
    MapSequence.<Edge,Edge>fromMap(edgeMap).put(edge,groupEdge);
    MapSequence.<Edge,Edge>fromMap(invEdgeMap).put(groupEdge,edge);
  }
  GroupedGraphModificationSynchronizer synchronizer=new GroupedGraphModificationSynchronizer(groupedGraph,graph,invEdgeMap);
  EdgesHistoryManager manager=new EdgesHistoryManager(graph);
  Edge firstEdge=MapSequence.<Edge,Edge>fromMap(edgeMap).get(ListSequence.<Edge>fromList(graph.getEdges()).getElement(1));
  Edge secondEdge=MapSequence.<Edge,Edge>fromMap(edgeMap).get(ListSequence.<Edge>fromList(graph.getEdges()).getElement(2));
  groupedGraph.revertEdge(firstEdge);
  Node node=ListSequence.<Edge>fromList(groupedGraph.splitEdge(firstEdge)).getElement(0).getTarget();
  groupedGraph.removeEdge(secondEdge);
  List<Edge> gSplit=ListSequence.<Edge>fromList(new LinkedList<Edge>());
  ListSequence.<Edge>fromList(gSplit).addElement(groupedGraph.connect(secondEdge.getSource(),node));
  ListSequence.<Edge>fromList(gSplit).addElement(groupedGraph.connect(node,secondEdge.getTarget()));
  groupedGraph.getModificationProcessor().fire(new GraphModificationEvent(GraphModificationEvent.Type.EDGE_SPLITTED,secondEdge,gSplit));
}
