{
  this.readActionProperties(node,action);
  addClassifierReference(SLinkOperations.findLinkDeclaration("jetbrains.mps.platform.conf.structure.Action","actionClass"),node,action.getAttributeValue(CLASS));
  for (  Element elm : elements(action,SHORTCUT,KEYBOARD_SHORTCUT,MOUSE_SHORTCUT,ADD_TO_GROUP)) {
    if (Namespace.NO_NAMESPACE.equals(elm.getNamespace())) {
      if (SHORTCUT.equals(elm.getName())) {
        SNode shc=SLinkOperations.addNewChild(node,"shortcut","jetbrains.mps.platform.conf.structure.Shortcut");
        setProperty("keymap",shc,elm.getAttributeValue(KEYMAP));
        setProperty("keystroke",shc,elm.getAttributeValue(FIRST_KEYSTROKE));
        setProperty("keystroke2",shc,elm.getAttributeValue(SECOND_KEYSTROKE));
      }
 else       if (KEYBOARD_SHORTCUT.equals(elm.getName())) {
        SNode shc=SLinkOperations.addNewChild(node,"shortcut","jetbrains.mps.platform.conf.structure.KeyboardShortcut");
        setProperty("keymap",shc,elm.getAttributeValue(KEYMAP));
        setProperty("keystroke",shc,elm.getAttributeValue(FIRST_KEYSTROKE));
        setProperty("keystroke2",shc,elm.getAttributeValue(SECOND_KEYSTROKE));
      }
 else       if (MOUSE_SHORTCUT.equals(elm.getName())) {
        SNode shc=SLinkOperations.addNewChild(node,"shortcut","jetbrains.mps.platform.conf.structure.MouseShortcut");
        setProperty("keymap",shc,elm.getAttributeValue(KEYMAP));
        setProperty("keystroke",shc,elm.getAttributeValue(KEYSTROKE));
      }
 else       if (ADD_TO_GROUP.equals(elm.getName())) {
        this.readAddToGroup(node,elm);
      }
    }
  }
}
