{
  TypeSystemStateTreeNode result=new TypeSystemStateTreeNode("Inequalities by groups",myOperationContext);
  Set<String> nodePresentations=new HashSet<String>();
  for (  Map.Entry<Set<SNode>,Set<InequalityBlock>> entry : myState.getInequalities().getInequalityGroups(myState.getBlocks(BlockKind.INEQUALITY)).entrySet()) {
    Set<SNode> key=entry.getKey();
    TypeSystemStateTreeNode current;
    if (key.isEmpty()) {
      current=result;
    }
 else {
      current=new TypeSystemStateTreeNode(key.toString(),myOperationContext);
    }
    nodePresentations.clear();
    for (    InequalityBlock block : entry.getValue()) {
      BlockTreeNode node=new BlockTreeNode(block,myOperationContext,myState,myEditorComponent);
      String presentation=node.toString();
      if (!(nodePresentations.contains(presentation))) {
        current.add(node);
        nodePresentations.add(presentation);
      }
    }
    if (!(key.isEmpty())) {
      result.add(current);
    }
  }
  return result;
}
