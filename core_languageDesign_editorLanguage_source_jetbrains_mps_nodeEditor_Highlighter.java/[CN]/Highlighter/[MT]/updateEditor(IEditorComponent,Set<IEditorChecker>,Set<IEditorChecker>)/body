{
  if (editor == null || editor.getRootCell() == null) {
    return false;
  }
  NodeHighlightManager highlightManager=editor.getHighlightManager();
  for (  final IEditorChecker checker : checkersToRecheck) {
    final LinkedHashSet<IEditorMessage> messages=new LinkedHashSet<IEditorMessage>();
    final IEditorMessageOwner[] owners=new IEditorMessageOwner[1];
    Runnable runnable=new Runnable(){
      public void run(){
        SNode node=editor.getEditedNode();
        if (node == null)         return;
        owners[0]=checker.getOwner(node);
        messages.addAll(checker.createMessages(node,editor.getOperationContext()));
      }
    }
;
    ModelAccess.instance().runReadAction(runnable);
    IEditorMessageOwner owner=owners[0];
    if (owner != null) {
      highlightManager.clearForOwner(owner);
    }
    for (    IEditorMessage message : messages) {
      highlightManager.mark(message);
    }
  }
  for (  final IEditorChecker checker : checkersToRemove) {
    final IEditorMessageOwner[] owners=new IEditorMessageOwner[1];
    Runnable runnable=new Runnable(){
      public void run(){
        SNode node=editor.getEditedNode();
        if (node == null)         return;
        owners[0]=checker.getOwner(node);
      }
    }
;
    ModelAccess.instance().runReadAction(runnable);
    highlightManager.clearForOwner(owners[0]);
  }
  return true;
}
