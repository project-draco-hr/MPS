{
  final SNode editedNode=component.getEditedNode();
  if (editedNode != null) {
    final Set<IEditorChecker> checkers=new LinkedHashSet<IEditorChecker>();
    Set<IEditorChecker> checkersToRemove=new LinkedHashSet<IEditorChecker>();
synchronized (CHECKERS_LOCK) {
      checkers.addAll(myCheckers);
      checkersToRemove.addAll(myCheckersToRemove);
      myCheckersToRemove.clear();
    }
    final Set<IEditorChecker> checkersToRecheck=new LinkedHashSet<IEditorChecker>();
    if (!wasCheckedOnce(component)) {
      checkersToRecheck.addAll(checkers);
    }
 else {
      CommandProcessor.instance().tryToExecuteLightweightCommand(new Runnable(){
        public void run(){
          for (          IEditorChecker checker : checkers) {
            if (checker.hasDramaticalEvent(events)) {
              checkersToRecheck.add(checker);
            }
          }
        }
      }
);
    }
    if (checkersToRecheck.isEmpty()) {
      return false;
    }
    myCheckedOnceEditors.add(component);
    if (updateEditor(component,checkersToRecheck,checkersToRemove)) {
      return true;
    }
  }
  return false;
}
