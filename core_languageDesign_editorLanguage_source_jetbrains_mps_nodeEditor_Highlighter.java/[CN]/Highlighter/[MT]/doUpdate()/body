{
  List<SModelEvent> events=new ArrayList<SModelEvent>();
synchronized (EVENTS_LOCK) {
    events.addAll(myLastEvents);
    myLastEvents.clear();
  }
  Set<IEditorChecker> checkers=new LinkedHashSet<IEditorChecker>();
  Set<IEditorChecker> checkersToRemove=new LinkedHashSet<IEditorChecker>();
synchronized (CHECKERS_LOCK) {
    checkers.addAll(myCheckers);
    checkersToRemove.addAll(myCheckersToRemove);
    myCheckersToRemove.clear();
  }
  boolean isUpdated=false;
  List<IEditor> allEditors=getAllEditors();
  for (  IEditor editor : allEditors) {
    EditorComponent component=editor.getCurrentEditorComponent();
    if (component != null) {
      if (updateEditorComponent(component,events,checkers,checkersToRemove)) {
        isUpdated=true;
      }
    }
  }
  if (myInspectorTool != null) {
    if (updateEditorComponent(myInspectorTool.getInspector(),events,checkers,checkersToRemove)) {
      isUpdated=true;
    }
  }
  if (isUpdated) {
    IEditor currentEditor=getCurrentEditor();
    if (currentEditor != null) {
      currentEditor.repaint();
      EditorComponent component=currentEditor.getCurrentEditorComponent();
      if (component != null) {
        component.getMessagesGutter().repaint();
      }
    }
  }
}
