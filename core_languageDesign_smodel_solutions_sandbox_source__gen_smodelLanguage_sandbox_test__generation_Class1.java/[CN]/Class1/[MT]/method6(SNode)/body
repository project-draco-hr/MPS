{
  List<SNode> nodes=SLinkOperations.getTargets(node,"statement",true);
  SLinkOperations.addNewChild(node,"statement","jetbrains.mps.baseLanguage.structure.Statement");
  SLinkOperations.addNewChild(node,"statement","jetbrains.mps.baseLanguage.structure.Statement");
  ListSequence.fromList(SLinkOperations.getTargets(node,"statement",true)).addElement(null);
  ListSequence.fromList(SLinkOperations.getTargets(node,"statement",true)).addSequence(null);
  ListSequence.fromList(SLinkOperations.getTargets(node,"statement",true)).insertElement(0,SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ReturnStatement",null));
  int c1=ListSequence.fromList(SLinkOperations.getTargets(node,"statement",true)).count();
  List<SNode> macros=SLinkOperations.getTargets(SNodeOperations.cast(node,""),AttributesRolesUtil.childRoleFromAttributeRole("nodeMacro"),true);
  SLinkOperations.addNewChild(node,AttributesRolesUtil.childRoleFromAttributeRole("nodeMacro"),"jetbrains.mps.lang.generator.structure.NodeMacro");
  SLinkOperations.addNewChild(node,AttributesRolesUtil.childRoleFromAttributeRole("nodeMacro"),"jetbrains.mps.lang.generator.structure.NodeMacro");
  ListSequence.fromList(SLinkOperations.getTargets(node,AttributesRolesUtil.childRoleFromAttributeRole("nodeMacro"),true)).addElement(null);
  ListSequence.fromList(SLinkOperations.getTargets(node,AttributesRolesUtil.childRoleFromAttributeRole("nodeMacro"),true)).addSequence(null);
  ListSequence.fromList(SLinkOperations.getTargets(node,AttributesRolesUtil.childRoleFromAttributeRole("nodeMacro"),true)).insertElement(0,null);
  int c2=ListSequence.fromList(SLinkOperations.getTargets(node,AttributesRolesUtil.childRoleFromAttributeRole("nodeMacro"),true)).count();
  int c3=ListSequence.fromList(SLinkOperations.getTargets(node,AttributesRolesUtil.childRoleFromAttributeRole("nodeMacro"),true)).count();
  int all=ListSequence.fromList(SNodeOperations.getAllAttributes(node)).count();
  SNodeOperations.copyNode(SLinkOperations.getTarget(node,AttributesRolesUtil.childRoleFromPropertyAttributeRole("propertyMacro","alias"),true));
}
