{
  super(operationContext,false);
  final KeyboardFocusManager fm=KeyboardFocusManager.getCurrentKeyboardFocusManager();
  fm.addPropertyChangeListener("focusOwner",new PropertyChangeListener(){
    public void propertyChange(    PropertyChangeEvent evt){
      System.out.println("was " + evt.getOldValue());
      System.out.println("now " + evt.getNewValue());
      System.out.println("");
    }
  }
);
  myExternalComponent=new JPanel(new BorderLayout());
  myExternalComponent.add(super.getExternalComponent(),BorderLayout.CENTER);
  myExternalComponent.add(getMessagesGutter(),BorderLayout.EAST);
  addCellSelectionListener(new CellSelectionListener(){
    public void selectionChanged(    EditorComponent editor,    EditorCell oldSelection,    EditorCell newSelection){
      final SNode[] toSelect=new SNode[1];
      if (newSelection != null) {
        toSelect[0]=newSelection.getSNode();
      }
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          if (!isFocusOwner())           return;
          inspect(toSelect[0]);
        }
      }
);
    }
  }
);
  addFocusListener(new FocusAdapter(){
    public void focusGained(    FocusEvent e){
      if (getSelectedNode() != null) {
        ModelAccess.instance().runReadAction(new Runnable(){
          public void run(){
            inspect(getSelectedNode());
          }
        }
);
      }
    }
  }
);
}
