{
  SNode variable=SLinkOperations.getTarget(this.myReference,"variableDeclaration",false);
  SNode assignment=null;
  for (  WriteInstruction definition : SetSequence.fromSet(this.myDefinitions)) {
    if (definition.getVariable() == variable) {
      assignment=((SNode)definition.getSource());
    }
  }
  SNode nodeToSelect;
  if (assignment == null) {
    nodeToSelect=SLinkOperations.getTarget(SLinkOperations.getTarget(this.myReference,"variableDeclaration",false),"initializer",true);
    SNodeOperations.replaceWithAnother(this.myReference,nodeToSelect);
  }
 else   if (SNodeOperations.isInstanceOf(assignment,"jetbrains.mps.baseLanguage.structure.VariableDeclaration")) {
    nodeToSelect=SNodeOperations.copyNode(SLinkOperations.getTarget(SNodeOperations.cast(assignment,"jetbrains.mps.baseLanguage.structure.VariableDeclaration"),"initializer",true));
    SNodeOperations.replaceWithAnother(this.myReference,nodeToSelect);
  }
 else {
    nodeToSelect=SNodeOperations.copyNode(SLinkOperations.getTarget(SNodeOperations.cast(assignment,"jetbrains.mps.baseLanguage.structure.AssignmentExpression"),"rValue",true));
    SNodeOperations.replaceWithAnother(this.myReference,nodeToSelect);
    this.optimizeAssignment(SNodeOperations.cast(assignment,"jetbrains.mps.baseLanguage.structure.AssignmentExpression"),variable);
  }
  this.optimizeDeclaration(variable);
  return nodeToSelect;
}
