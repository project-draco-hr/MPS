{
  SNode method=SNodeOperations.getAncestor(variable,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration",false,false);
  Program program=DataFlowManager.getInstance().buildProgramFor(SLinkOperations.getTarget(method,"body",true));
  for (  Instruction instruction : ListSequence.fromList(program.getInstructions())) {
    if (instruction instanceof ReadInstruction) {
      ReadInstruction read=(ReadInstruction)instruction;
      if (read.getVariable() == variable) {
        return;
      }
    }
  }
  for (  Instruction instruction : ListSequence.fromList(program.getInstructions())) {
    if (instruction instanceof WriteInstruction) {
      WriteInstruction write=(WriteInstruction)instruction;
      if (write.getSource() != variable && write.getVariable() == variable) {
        SNodeOperations.deleteNode(SLinkOperations.getTarget(variable,"initializer",true));
        return;
      }
    }
  }
  SNodeOperations.deleteNode(SNodeOperations.getAncestor(variable,"jetbrains.mps.baseLanguage.structure.Statement",false,false));
}
