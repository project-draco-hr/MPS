{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_1htk8d_a0hb.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return myConceptAbstractCommand;
      }
    break;
case 1:
  if (true) {
    return myConceptCommandList;
  }
break;
case 2:
if (true) {
return myConceptCommentLine;
}
break;
case 3:
if (true) {
return myConceptDirection;
}
break;
case 4:
if (true) {
return myConceptDrop;
}
break;
case 5:
if (true) {
return myConceptEast;
}
break;
case 6:
if (true) {
return myConceptEmptyLine;
}
break;
case 7:
if (true) {
return myConceptHeading;
}
break;
case 8:
if (true) {
return myConceptIfStatement;
}
break;
case 9:
if (true) {
return myConceptIsFull;
}
break;
case 10:
if (true) {
return myConceptIsMark;
}
break;
case 11:
if (true) {
return myConceptIsWall;
}
break;
case 12:
if (true) {
return myConceptLeftTurn;
}
break;
case 13:
if (true) {
return myConceptLibrary;
}
break;
case 14:
if (true) {
return myConceptLogicalExpression;
}
break;
case 15:
if (true) {
return myConceptLooking;
}
break;
case 16:
if (true) {
return myConceptNorth;
}
break;
case 17:
if (true) {
return myConceptNot;
}
break;
case 18:
if (true) {
return myConceptPick;
}
break;
case 19:
if (true) {
return myConceptRepeat;
}
break;
case 20:
if (true) {
return myConceptRequire;
}
break;
case 21:
if (true) {
return myConceptRoutineCall;
}
break;
case 22:
if (true) {
return myConceptRoutineDefinition;
}
break;
case 23:
if (true) {
return myConceptScript;
}
break;
case 24:
if (true) {
return myConceptSouth;
}
break;
case 25:
if (true) {
return myConceptStep;
}
break;
case 26:
if (true) {
return myConceptTraceMessage;
}
break;
case 27:
if (true) {
return myConceptWest;
}
break;
case 28:
if (true) {
return myConceptWhile;
}
break;
default :
}
}
return null;
}
