{
  SNode effectiveNode=null;
  SReference reference=null;
  effectiveNode=node.getReferent("extends");
  reference=node.getReference("extends");
  LinkDeclaration linkDeclaration=SModelUtil.getLinkDeclaration(node,"extends",context.getOperationContext());
  if (!(reference == null) && !((reference.isResolved()))) {
    EditorCell_Error noRefCell=EditorCell_Error.create(context,node,BadReferenceTextProvider.getBadReferenceText(reference));
    noRefCell.setEditable(true);
    noRefCell.setDrawBrackets(false);
    noRefCell.setBracketsColor(Color.black);
    noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION,linkDeclaration);
    noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE,node);
    noRefCell.setAction(EditorCellAction.DELETE,new CellAction_Empty());
    noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node,linkDeclaration,context));
    ConceptDeclaration_ExtendsActionSet.setCellActions(noRefCell,node,context);
    noRefCell.putUserObject(EditorCell.CELL_ID,"1105726767725");
    return noRefCell;
  }
  if (effectiveNode == null) {
{
      EditorCell_Constant noRefCell=EditorCell_Constant.create(context,node,null,true);
      noRefCell.setDefaultText("<none>");
      noRefCell.setEditable(true);
      noRefCell.setDrawBrackets(false);
      noRefCell.setBracketsColor(Color.black);
      noRefCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION,linkDeclaration);
      noRefCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE,node);
      noRefCell.setAction(EditorCellAction.DELETE,new CellAction_Empty());
      noRefCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node,linkDeclaration,context));
      ConceptDeclaration_ExtendsActionSet.setCellActions(noRefCell,node,context);
      noRefCell.putUserObject(EditorCell.CELL_ID,"1105726767725");
      return noRefCell;
    }
  }
  AbstractCellProvider inlineComponent=new ConceptDeclaration_Editor_extends_InlineComponent(effectiveNode);
  EditorCell editorCell=inlineComponent.createEditorCell(context);
  EditorUtil.setSemanticNodeToCells(editorCell,node);
  editorCell.setSelectable(true);
  editorCell.setDrawBorder(true);
  editorCell.setDrawBrackets(false);
  editorCell.setBracketsColor(Color.black);
  editorCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION,linkDeclaration);
  editorCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE,node);
  editorCell.setAction(EditorCellAction.DELETE,new CellAction_DeleteReferenceToNode(node,"extends",effectiveNode));
  editorCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node,linkDeclaration,context));
  ConceptDeclaration_ExtendsActionSet.setCellActions(editorCell,node,context);
  return editorCell;
}
