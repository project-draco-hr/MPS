{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("variable",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      SNode ancestor=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.build.distrib.structure.DistribConfiguration",true,false);
      List<SNode> availableVars=ListSequence.fromList(new ArrayList<SNode>());
      ListSequence.fromList(availableVars).addSequence(ListSequence.fromList(SLinkOperations.getTargets(Configuration_Behavior.call_getLayout_1213877261819(SLinkOperations.getTarget(ancestor,"buildScriptConfiguration",false)),"builtInVariable",true)));
      ListSequence.fromList(availableVars).addSequence(ListSequence.fromList(SLinkOperations.getTargets(Configuration_Behavior.call_getLayout_1213877261819(SLinkOperations.getTarget(ancestor,"buildScriptConfiguration",false)),"variable",true)));
      return availableVars;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:cbd3ad66-b4a6-4397-9afb-cbc7a80da1e5(jetbrains.mps.build.distrib.constraints)","1234515222366");
    }
  }
);
  return result;
}
