{
switch (kind) {
case INPUT:
case APPROXIMATE_INPUT:
    return Generator.Input;
case OUTPUT:
case APPROXIMATE_OUTPUT:
  return Generator.Output;
case RULE:
return Generator.Rule;
case RULE_CONSEQUENCE:
return Generator.RuleConsequence;
case MACRO:
return Generator.Macro;
case TEMPLATE:
return Generator.Template;
case SWITCH:
return Generator.Switch;
case COPY_OPERATION:
return Generator.CopyOperation;
case MAPPING_SCRIPT:
return Generator.MappingScript;
}
return null;
}
