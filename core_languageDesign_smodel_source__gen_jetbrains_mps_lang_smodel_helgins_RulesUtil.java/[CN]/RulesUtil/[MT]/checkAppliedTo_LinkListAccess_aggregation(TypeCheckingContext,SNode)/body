{
  SNode leftExpression=SNodeOperation_Behavior.call_getLeftExpression_1213877508894(op);
{
    final SNode LeftType=typeCheckingContext.typeOf(leftExpression,"r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.helgins)","1206099228546",false);
    TypeChecker.getInstance().getRuntimeSupport().whenConcrete(LeftType,new Runnable(){
      public void run(){
        boolean isGood=false;
        SNode linkAccessT=TypeChecker.getInstance().getRuntimeSupport().coerce(typeCheckingContext.getEquationManager().getRepresentator(LeftType),HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.lang.smodel.structure._LinkAccessT"),false);
        if (linkAccessT != null) {
          if (!(SPropertyOperations.getBoolean(linkAccessT,"singularCradinality"))) {
            isGood=true;
          }
        }
        if (!(isGood)) {
          BaseIntentionProvider intentionProvider=null;
          typeCheckingContext.reportTypeError(op,"operation is only applicable to aggregation-link-list-access","r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.helgins)","1205271287931",intentionProvider);
        }
      }
    }
,"r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.helgins)","1205267224541");
  }
}
