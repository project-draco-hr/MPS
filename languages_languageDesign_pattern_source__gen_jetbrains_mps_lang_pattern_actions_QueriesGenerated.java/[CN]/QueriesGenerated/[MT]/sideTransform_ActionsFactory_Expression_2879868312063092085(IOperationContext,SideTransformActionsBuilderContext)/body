{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
  ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.pattern.structure.OrPattern"),_context.getSourceNode()){
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      SNode orPattern=SNodeFactoryOperations.createNewNode("jetbrains.mps.lang.pattern.structure.OrPattern",null);
      SNodeOperations.replaceWithAnother(_context.getSourceNode(),orPattern);
      return SLinkOperations.setTarget(ListSequence.fromList(SLinkOperations.getTargets(orPattern,"clause",true)).first(),"patternNode",_context.getSourceNode(),true);
    }
    public String getMatchingText(    String pattern){
      return "|";
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
  }
);
  return result;
}
