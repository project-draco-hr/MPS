{
  if (ListSequence.fromList(SLinkOperations.getTargets(annotable,"annotation",true)).isNotEmpty()) {
    for (    SNode item : SLinkOperations.getTargets(annotable,"annotation",true)) {
      TextGenManager.instance().appendNodeText(textGen.getContext(),textGen.getBuffer(),item,textGen.getSNode());
    }
  }
  if (SNodeOperations.isInstanceOf(annotable,"jetbrains.mps.lang.core.structure.IDeprecatable") && BehaviorReflection.invokeVirtual(Boolean.TYPE,SNodeOperations.cast(annotable,"jetbrains.mps.lang.core.structure.IDeprecatable"),"virtual_isDeprecated_1224609060727",new Object[]{})) {
    boolean containsDeprecated=false;
    for (    SNode annotationInstance : SLinkOperations.getTargets(annotable,"annotation",true)) {
      if (SLinkOperations.getTarget(annotationInstance,"annotation",false) == SNodeOperations.getNode("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)","~Deprecated")) {
        containsDeprecated=true;
        break;
      }
    }
    if (!(containsDeprecated)) {
      SNode deprecated=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.AnnotationInstance",null);
      SLinkOperations.setTarget(deprecated,"annotation",SNodeOperations.getNode("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)","~Deprecated"),false);
      TextGenManager.instance().appendNodeText(textGen.getContext(),textGen.getBuffer(),deprecated,textGen.getSNode());
    }
  }
}
