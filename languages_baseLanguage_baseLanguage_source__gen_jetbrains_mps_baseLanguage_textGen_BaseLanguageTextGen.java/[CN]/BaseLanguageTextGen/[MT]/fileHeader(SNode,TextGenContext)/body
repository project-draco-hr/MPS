{
  final TextGenSupport tgs=new TextGenSupport(ctx);
  boolean topClassifier=!(Classifier_Behavior.call_isInner_521412098689998677(cls));
  if (topClassifier) {
    int wasPart=tgs.getLegacyBuffer().selectPart(TextGenBuffer.TOP);
    tgs.append("package " + BaseLanguageTextGen.getPackageName(cls,ctx) + ";");
    tgs.newLine();
    tgs.newLine();
    tgs.append("/*Generated by MPS */");
    tgs.newLine();
    tgs.getLegacyBuffer().selectPart(wasPart);
  }
  if (SNodeOperations.isInstanceOf(cls,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface"))) {
    BaseLanguageTextGen.registerExtendsRelation(SLinkOperations.getChildren(SNodeOperations.cast(cls,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,0x101eddadad7L,"extendedInterface")),topClassifier,ctx);
  }
 else   if (SNodeOperations.isInstanceOf(cls,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"))) {
    BaseLanguageTextGen.registerExtendsRelation(SLinkOperations.getChildren(SNodeOperations.cast(cls,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0xff2ac0b419L,"implementedInterface")),topClassifier,ctx);
    BaseLanguageTextGen.registerExtendsRelation(Sequence.fromIterable(Sequence.<SNode>singleton(SLinkOperations.getTarget(SNodeOperations.cast(cls,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x10f6353296dL,"superclass")))).toListSequence(),topClassifier,ctx);
  }
}
