{
  Integer index=myIndexMap.get(id);
  if (index == null) {
    return null;
  }
switch (((int)index)) {
case 0:
    return myConceptAbstractFunctionType;
case 1:
  return myConceptClosureArgReference;
case 2:
return myConceptClosureControlStatement;
case 3:
return myConceptClosureLiteral;
case 4:
return myConceptClosureLiteralType;
case 5:
return myConceptCompactInvokeFunctionExpression;
case 6:
return myConceptControlAbstractionContainer;
case 7:
return myConceptControlAbstractionDeclaration;
case 8:
return myConceptControlClosureLiteral;
case 9:
return myConceptFunctionMethodDeclaration;
case 10:
return myConceptFunctionType;
case 11:
return myConceptInvokeExpression;
case 12:
return myConceptInvokeFunctionExpression;
case 13:
return myConceptInvokeFunctionOperation;
case 14:
return myConceptPairOfInts;
case 15:
return myConceptStringPropertyHolder;
case 16:
return myConceptUnboundClosureParameterDeclaration;
case 17:
return myConceptUnrestrictedClosureLiteral;
case 18:
return myConceptUnrestrictedFunctionType;
case 19:
return myConceptYieldAllStatement;
case 20:
return myConceptYieldStatement;
default :
throw new IllegalStateException();
}
}
