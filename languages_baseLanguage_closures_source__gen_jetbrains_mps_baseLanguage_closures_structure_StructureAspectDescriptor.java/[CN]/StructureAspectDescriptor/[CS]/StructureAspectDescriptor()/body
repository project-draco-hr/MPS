{
  myFqNameToConcept.put("jetbrains.mps.baseLanguage.closures.structure.AbstractFunctionType",null);
  myFqNameToConcept.put("jetbrains.mps.baseLanguage.closures.structure.ClosureArgReference",null);
  myFqNameToConcept.put("jetbrains.mps.baseLanguage.closures.structure.ClosureControlStatement",null);
  myFqNameToConcept.put("jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral",null);
  myFqNameToConcept.put("jetbrains.mps.baseLanguage.closures.structure.CompactInvokeFunctionExpression",null);
  myFqNameToConcept.put("jetbrains.mps.baseLanguage.closures.structure.ControlAbstractionContainer",null);
  myFqNameToConcept.put("jetbrains.mps.baseLanguage.closures.structure.ControlAbstractionDeclaration",null);
  myFqNameToConcept.put("jetbrains.mps.baseLanguage.closures.structure.ControlClosureLiteral",null);
  myFqNameToConcept.put("jetbrains.mps.baseLanguage.closures.structure.FunctionMethodDeclaration",null);
  myFqNameToConcept.put("jetbrains.mps.baseLanguage.closures.structure.FunctionType",null);
  myFqNameToConcept.put("jetbrains.mps.baseLanguage.closures.structure.InvokeExpression",null);
  myFqNameToConcept.put("jetbrains.mps.baseLanguage.closures.structure.InvokeFunctionExpression",null);
  myFqNameToConcept.put("jetbrains.mps.baseLanguage.closures.structure.InvokeFunctionOperation",null);
  myFqNameToConcept.put("jetbrains.mps.baseLanguage.closures.structure.PairOfInts",null);
  myFqNameToConcept.put("jetbrains.mps.baseLanguage.closures.structure.StringPropertyHolder",null);
  myFqNameToConcept.put("jetbrains.mps.baseLanguage.closures.structure.UnboundClosureParameterDeclaration",null);
  myFqNameToConcept.put("jetbrains.mps.baseLanguage.closures.structure.UnrestrictedClosureLiteral",null);
  myFqNameToConcept.put("jetbrains.mps.baseLanguage.closures.structure.UnrestrictedFunctionType",null);
  myFqNameToConcept.put("jetbrains.mps.baseLanguage.closures.structure.YieldAllStatement",null);
  myFqNameToConcept.put("jetbrains.mps.baseLanguage.closures.structure.YieldStatement",null);
}
