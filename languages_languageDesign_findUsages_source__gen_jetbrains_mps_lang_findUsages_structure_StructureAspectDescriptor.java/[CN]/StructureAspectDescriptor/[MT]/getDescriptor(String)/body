{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.lang.findUsages.structure.AbstractFinderDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"forConcept"},new String[]{"isApplicableFunction","findFunction","searchedNodesBlock","categorizeBlock"},new boolean[]{false,false,false,false},true,false,"","","");
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.lang.findUsages.structure.CategorizeBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"getCategory","","");
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.lang.findUsages.structure.CheckCancelledStatusStatement","jetbrains.mps.baseLanguage.structure.Statement",false,new String[]{"jetbrains.mps.baseLanguage.structure.Statement"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"check cancelled status","","");
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.lang.findUsages.structure.ConceptFunctionParameter_node","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"node","function parameter","");
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.lang.findUsages.structure.ExecuteFinderExpression","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"finder"},new String[]{"queryNode","queryScope","monitor"},new boolean[]{false,false,false},false,false,"execute","","");
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.lang.findUsages.structure.ExecuteFindersGetSearchResults","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{},new String[]{"queryNode","scope","progress","finder"},new boolean[]{false,false,false,true},false,false,"execute finders","","");
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.lang.findUsages.structure.FindBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"find","","");
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.lang.findUsages.structure.FinderDeclaration","jetbrains.mps.lang.findUsages.structure.AbstractFinderDeclaration",false,new String[]{"jetbrains.mps.lang.findUsages.structure.AbstractFinderDeclaration","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.checkedName.structure.ICheckedNamePolicy","jetbrains.mps.lang.structure.structure.IConceptAspect"},new String[]{"description","longDescription"},new String[]{},new String[]{"isVisibleBlock","isUsedByDefault"},new boolean[]{false,false},false,false,"","","");
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.lang.findUsages.structure.FinderReference","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"finder"},new String[]{},new boolean[]{},false,false,"","","");
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.lang.findUsages.structure.IsApplicableBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"isApplicable","","");
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.lang.findUsages.structure.IsUsedByDefault","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"isUsedByDefault","","");
case 11:
return new CompiledConceptDescriptor("jetbrains.mps.lang.findUsages.structure.IsVisibleBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"isVisible","","");
case 12:
return new CompiledConceptDescriptor("jetbrains.mps.lang.findUsages.structure.MakeResultProvider","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{},new String[]{"finder"},new boolean[]{true},false,false,"make result provider","","");
case 13:
return new CompiledConceptDescriptor("jetbrains.mps.lang.findUsages.structure.NodeStatement","jetbrains.mps.baseLanguage.structure.Statement",false,new String[]{"jetbrains.mps.baseLanguage.structure.Statement"},new String[]{},new String[]{},new String[]{"foundNode"},new boolean[]{false},false,false,"add node","","");
case 14:
return new CompiledConceptDescriptor("jetbrains.mps.lang.findUsages.structure.ResultStatement","jetbrains.mps.baseLanguage.structure.Statement",false,new String[]{"jetbrains.mps.baseLanguage.structure.Statement"},new String[]{},new String[]{},new String[]{"foundNode"},new boolean[]{false},false,false,"add result","","");
case 15:
return new CompiledConceptDescriptor("jetbrains.mps.lang.findUsages.structure.SearchedNodesBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"getSearchedNodes","","");
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
