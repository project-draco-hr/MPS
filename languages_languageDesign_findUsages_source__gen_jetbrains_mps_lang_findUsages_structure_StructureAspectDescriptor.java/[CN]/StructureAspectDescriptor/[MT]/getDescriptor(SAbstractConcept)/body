{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_1htk8d_a0u.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return myConceptAbstractFinderDeclaration;
      }
    break;
case 1:
  if (true) {
    return myConceptCategorizeBlock;
  }
break;
case 2:
if (true) {
return myConceptCheckCancelledStatusStatement;
}
break;
case 3:
if (true) {
return myConceptConceptFunctionParameter_node;
}
break;
case 4:
if (true) {
return myConceptExecuteFinderExpression;
}
break;
case 5:
if (true) {
return myConceptExecuteFindersGetSearchResults;
}
break;
case 6:
if (true) {
return myConceptFindBlock;
}
break;
case 7:
if (true) {
return myConceptFinderDeclaration;
}
break;
case 8:
if (true) {
return myConceptFinderReference;
}
break;
case 9:
if (true) {
return myConceptIsApplicableBlock;
}
break;
case 10:
if (true) {
return myConceptIsUsedByDefault;
}
break;
case 11:
if (true) {
return myConceptIsVisibleBlock;
}
break;
case 12:
if (true) {
return myConceptMakeResultProvider;
}
break;
case 13:
if (true) {
return myConceptNodeStatement;
}
break;
case 14:
if (true) {
return myConceptResultStatement;
}
break;
case 15:
if (true) {
return myConceptSearchedNodesBlock;
}
break;
default :
}
}
return null;
}
