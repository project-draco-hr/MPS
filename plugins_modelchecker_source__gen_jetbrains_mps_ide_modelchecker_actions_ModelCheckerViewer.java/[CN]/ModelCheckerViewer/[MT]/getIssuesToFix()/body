{
  final Set<SNodePointer> includedResultNodes=SetSequence.<SNodePointer>fromSetWithValues(new HashSet<SNodePointer>(),myUsagesView.getIncludedResultNodes());
  return ListSequence.<SearchResult<ModelCheckerIssue>>fromList(((List<SearchResult<ModelCheckerIssue>>)getSearchResults().getSearchResults())).<ModelCheckerIssue>select(new ISelector<SearchResult<ModelCheckerIssue>,ModelCheckerIssue>(){
    public ModelCheckerIssue select(    SearchResult<ModelCheckerIssue> sr){
      return sr.getObject();
    }
  }
).where(new IWhereFilter<ModelCheckerIssue>(){
    public boolean accept(    ModelCheckerIssue sr){
      return sr instanceof ModelCheckerIssue.NodeIssue && SetSequence.<SNodePointer>fromSet(includedResultNodes).contains(new SNodePointer(((ModelCheckerIssue.NodeIssue)sr).getNode())) && sr.isFixable();
    }
  }
).toListSequence();
}
