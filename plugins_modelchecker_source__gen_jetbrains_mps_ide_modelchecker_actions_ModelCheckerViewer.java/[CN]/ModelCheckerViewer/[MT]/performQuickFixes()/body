{
  final Wrappers._int fixedTotal=new Wrappers._int(0);
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      List<ModelCheckerIssue> issuesToFix=ModelCheckerViewer.this.getIssuesToFix();
      if (ListSequence.fromList(issuesToFix).isEmpty()) {
        Messages.showInfoMessage("There are no quick fixes for current problems","No Quick Fixes");
        return;
      }
      int dialogAnswer=Messages.showYesNoDialog(myOperationContext.getIdeaProject(),"You are going to remove undeclared properties, children from nodes and resolve references. " + "You may not be able to undo it. Are you sure?","Warning",null);
      if (dialogAnswer != 0) {
        return;
      }
      while (true) {
        int fixedBefore=fixedTotal.value;
        for (        ModelCheckerIssue issue : ListSequence.fromListWithValues(new ArrayList<ModelCheckerIssue>(),issuesToFix)) {
          if (issue.fix()) {
            fixedTotal.value++;
            ListSequence.fromList(issuesToFix).removeElement(issue);
          }
        }
        if (fixedBefore == fixedTotal.value) {
          break;
        }
      }
    }
  }
);
  if (fixedTotal.value != 0) {
    int dialogAnswer1=Messages.showYesNoDialog(myOperationContext.getIdeaProject(),"Model checker fixed " + fixedTotal.value + " issues. Do you wish to recheck?","Recheck",null);
    if (dialogAnswer1 != 0) {
      return;
    }
    runCheck();
  }
}
