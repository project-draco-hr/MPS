{
  if (myLanguage == null) {
    return;
  }
{
    final SearchScope scope=CommandUtil.createScope(myModule);
    QueryExecutionContext context=new QueryExecutionContext(){
      public SearchScope getDefaultSearchScope(){
        return scope;
      }
    }
;
    Collection<SNode> allSideTransformActions=CommandUtil.instances(CommandUtil.createConsoleScope(null,false,context),MetaAdapterFactory.getConcept(0xaee9cad2acd44608L,0xaef20004f6a1cdbdL,0x108fad1c116L,"jetbrains.mps.lang.actions.structure.SideTransformHintSubstituteActions"));
    for (    SNode actions : CollectionSequence.fromCollection(allSideTransformActions)) {
      for (      SNode builder : ListSequence.fromList(SLinkOperations.getChildren(actions,MetaAdapterFactory.getContainmentLink(0xaee9cad2acd44608L,0xaef20004f6a1cdbdL,0x108fad1c116L,0x108fad1c117L,"actionsBuilder"))).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return !((myMigrateConceptFromSameLanguage ^ isDefinedInSameLanguage(SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(0xaee9cad2acd44608L,0xaef20004f6a1cdbdL,0x108facec6d2L,0x108facec6d6L,"applicableConcept")))));
        }
      }
)) {
        if (SConceptOperations.isExactly(SNodeOperations.asSConcept(SNodeOperations.getConcept(builder)),MetaAdapterFactory.getConcept(0xaee9cad2acd44608L,0xaef20004f6a1cdbdL,0x108facec6d2L,"jetbrains.mps.lang.actions.structure.SideTransformHintSubstituteActionsBuilder"))) {
          addToConceptAndTagToBuilderMap(actions,builder);
          addToBuilderToMenuMap(actions,builder);
        }
 else {
          AttributeOperations.setAttribute(builder,new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xaee9cad2acd44608L,0xaef20004f6a1cdbdL,0x7ce019826543db5L,"jetbrains.mps.lang.actions.structure.MigrateManuallyAnnotation")),SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xaee9cad2acd44608L,0xaef20004f6a1cdbdL,0x7ce019826543db5L,"jetbrains.mps.lang.actions.structure.MigrateManuallyAnnotation")));
        }
      }
    }
    Set<SNode> actionsKeySet=myActionsToConceptAndTagToBuilder.keySet();
    for (    SNode actions : SetSequence.fromSet(actionsKeySet)) {
      Map<Pair<SNode,String>,List<SNode>> conceptAndTagToBuilder=myActionsToConceptAndTagToBuilder.get(actions);
      for (      Pair<SNode,String> key : SetSequence.fromSet(conceptAndTagToBuilder.keySet())) {
        migrateSideTransformActions(actions,key.o1,key.o2,conceptAndTagToBuilder.get(key));
      }
    }
  }
  ActionMigrationHelper.addMissingImports(myNewlyCreatedMenus,ActionMigrationHelper.getEditorAspect(myLanguage),ActionMigrationHelper.getActionsAspect(myLanguage),myLanguage.getRepository());
  if (!(myNewlyCreatedMenus.isEmpty())) {
    ActionMigrationHelper.addModelImport(ActionMigrationHelper.getActionsAspect(myLanguage),ActionMigrationHelper.getEditorAspect(myLanguage));
  }
}
