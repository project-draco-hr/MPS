{
  Point point=dtde.getLocation();
  TreePath treePath=myTree.getPathForLocation(point.x,point.y);
  if (treePath == null) {
    dtde.rejectDrop();
    return;
  }
  Object target=treePath.getLastPathComponent();
  if (!(target instanceof MPSTreeNode)) {
    dtde.rejectDrop();
    return;
  }
  Object source=null;
  try {
    source=dtde.getTransferable().getTransferData(myDataFlavor);
  }
 catch (  Throwable t) {
    t.printStackTrace();
  }
  if (!(source instanceof List) || ((List)source).isEmpty()) {
    dtde.rejectDrop();
    return;
  }
  final List<Pair<SNode,String>> sourceNodes=(List<Pair<SNode,String>>)source;
  SModelDescriptor targetModel=getTargetModel(treePath);
  final String targetPackage=(getTargetVirtualPackage(treePath) == null) ? "" : getTargetVirtualPackage(treePath);
  List<Pair<SNode,String>> nodeToMove=getNodesToMove(targetModel,targetPackage,sourceNodes);
  if (nodeToMove.isEmpty()) {
    dtde.rejectDrop();
    return;
  }
  Project project=MPSDataKeys.PROJECT.getData(DataManager.getInstance().getDataContext());
  JFrame frame=WindowManager.getInstance().getFrame(project);
  String text=getConfirnLabel(sourceNodes,targetPackage);
  int result=JOptionPane.showConfirmDialog(frame,text,"Move Nodes",JOptionPane.YES_NO_OPTION);
  if (result == JOptionPane.YES_OPTION) {
    ModelAccess.instance().runWriteActionInCommand(new Runnable(){
      public void run(){
        for (        Pair<SNode,String> sourceNode : sourceNodes) {
          String fullTargetPack=getFullTargetPack(targetPackage,sourceNode.o2);
          sourceNode.o1.setProperty(SModelTreeNode.PACK,fullTargetPack);
          if (SNodeOperations.isInstanceOf(sourceNode.o1,SNodeUtil.concept_AbstractConceptDeclaration)) {
            List<SNode> allAspects=AbstractConceptDeclaration_Behavior.call_findAllAspects_7754459869734028917(sourceNode.o1);
            for (            SNode aspect : allAspects) {
              aspect.setProperty(SModelTreeNode.PACK,fullTargetPack);
            }
          }
        }
      }
    }
);
  }
  dtde.acceptDrop(dtde.getDropAction());
}
