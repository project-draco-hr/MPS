{
  myCommandListener=new CommandAdapter(){
    @Override public void beforeCommandFinished(    CommandEvent event){
      if (event.getCommand() == myCommand) {
        if (!isUndoRedoCommand) {
          commit();
        }
 else {
          ReloadManager.getInstance().flush();
        }
      }
      myCommand=null;
      isUndoRedoCommand=false;
      nodeUpdaters.clear();
      sreferenceUpdaters.clear();
      prefixReferenceUpdaters.clear();
    }
  }
;
  myUndoRedoSupport=new UndoableAction(){
    @Override public void undo() throws UnexpectedUndoException {
      rememberCommand();
      isUndoRedoCommand=true;
    }
    @Override public void redo() throws UnexpectedUndoException {
      rememberCommand();
      isUndoRedoCommand=true;
    }
    @Nullable @Override public DocumentReference[] getAffectedDocuments(){
      return DocumentReference.EMPTY_ARRAY;
    }
    @Override public boolean isGlobal(){
      return false;
    }
  }
;
  CommandProcessor.getInstance().addCommandListener(myCommandListener);
}
