{
  if (SNodeOperations.getParent(binaryOperation) != null && SNodeOperations.isInstanceOf(SNodeOperations.getParent(binaryOperation),"jetbrains.mps.baseLanguage.structure.BinaryOperation")) {
    SNode parent=SNodeOperations.cast(SNodeOperations.getParent(binaryOperation),"jetbrains.mps.baseLanguage.structure.BinaryOperation");
    boolean isRigth=false;
    if (SLinkOperations.getTarget(parent,"rightExpression",true) == binaryOperation) {
      isRigth=true;
    }
 else     if (SLinkOperations.getTarget(parent,"leftExpression",true) == binaryOperation) {
      isRigth=false;
    }
    if (ParenthesisUtil.isBadPriority(binaryOperation,parent,isRigth)) {
{
        BaseQuickFixProvider intentionProvider=null;
        intentionProvider=new BaseQuickFixProvider("jetbrains.mps.baseLanguage.typesystem.BinaryExpressionPriority_QuickFix",true);
        intentionProvider.putArgument("child",binaryOperation);
        intentionProvider.putArgument("parent",parent);
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(binaryOperation,"Bad priority of operations","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","6778605776626937239",intentionProvider,errorTarget);
      }
    }
  }
}
