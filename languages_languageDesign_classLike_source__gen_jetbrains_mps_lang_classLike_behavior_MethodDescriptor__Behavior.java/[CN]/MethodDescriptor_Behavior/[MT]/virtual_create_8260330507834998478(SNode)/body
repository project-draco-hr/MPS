{
  SNode method=SNodeFactoryOperations.createNewNode("jetbrains.mps.lang.classLike.structure.ClassLikeMethod",null);
  SPropertyOperations.set(method,"name",SPropertyOperations.getString(thisNode,"name"));
  SLinkOperations.setTarget(method,"body",SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StatementList",null),true);
  ListSequence.fromList(SLinkOperations.getTargets(method,"parameter",true)).addSequence(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"param",true)).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it,"type",true),"jetbrains.mps.lang.classLike.structure.DependentTypeDeclaration")) {
        SNode type=SConceptOperations.createNewNode("jetbrains.mps.lang.classLike.structure.DependentTypeInstance",null);
        SLinkOperations.setTarget(type,"decl",SNodeOperations.cast(SLinkOperations.getTarget(it,"type",true),"jetbrains.mps.lang.classLike.structure.DependentTypeDeclaration"),false);
        SNode result=createParameterDeclaration_9j0ugw_a0c0a0a0a0a3a0(SPropertyOperations.getString(it,"name"),SNodeOperations.cast(HUtil.copyIfNecessary(type),"jetbrains.mps.baseLanguage.structure.Type"));
        SLinkOperations.setTarget(type,"point",result,false);
        return result;
      }
 else {
        return createParameterDeclaration_9j0ugw_a0a0a0a0a0a3a0(SPropertyOperations.getString(it,"name"),SNodeOperations.cast(HUtil.copyIfNecessary(SLinkOperations.getTarget(it,"type",true)),"jetbrains.mps.baseLanguage.structure.Type"));
      }
    }
  }
));
  SNode returnType=MethodDescriptor_Behavior.call_getReturnType_3855110916779541832(thisNode);
  if (SNodeOperations.isInstanceOf(returnType,"jetbrains.mps.lang.classLike.structure.DependentTypeDeclaration")) {
    SNode node=SConceptOperations.createNewNode("jetbrains.mps.lang.classLike.structure.DependentTypeInstance",null);
    SLinkOperations.setTarget(node,"decl",SNodeOperations.cast(returnType,"jetbrains.mps.lang.classLike.structure.DependentTypeDeclaration"),false);
    SLinkOperations.setTarget(node,"point",method,false);
    SLinkOperations.setTarget(method,"returnType",node,true);
  }
 else {
    SLinkOperations.setTarget(method,"returnType",SNodeOperations.copyNode(returnType),true);
  }
  SLinkOperations.setTarget(method,"decl",thisNode,false);
  return method;
}
