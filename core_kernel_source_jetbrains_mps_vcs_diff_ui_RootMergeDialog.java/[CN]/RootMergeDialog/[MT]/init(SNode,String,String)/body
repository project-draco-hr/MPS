{
  final SNode[] change1Node=new SNode[1];
  final SNode[] resultNode=new SNode[1];
  final SNode[] change2Node=new SNode[1];
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      change1Node[0]=myChange1Model.getRootByName(node.getName());
      resultNode[0]=myResultModel.getRootByName(node.getName());
      change2Node[0]=myChange2Model.getRootByName(node.getName());
    }
  }
);
  myComponent=new JPanel(new GridLayout(1,3));
  myChange1EditorComponent=addEditor(myContext,change1Node[0],"");
  List<Change> revert1Changes=new DiffBuilder(myResultModel,myChange1Model).getChanges();
  myChange1EditorComponent.hightlight(revert1Changes,false);
  myChange1EditorComponent.makeChangeBlocks(new Runnable(){
    public void run(){
    }
  }
);
  myResultEditorComponent=addEditor(myContext,resultNode[0],"");
  List<Change> baseChanges=new DiffBuilder(myResultModel,myBaseModel).getChanges();
  myResultEditorComponent.hightlight(baseChanges,true);
  myChange2EditorComponent=addEditor(myContext,change2Node[0],"");
  List<Change> revert2Changes=new DiffBuilder(myChange2Model,myBaseModel).getChanges();
  myChange2EditorComponent.hightlight(revert2Changes,true);
  myChange2EditorComponent.makeChangeBlocks(new Runnable(){
    public void run(){
    }
  }
);
}
