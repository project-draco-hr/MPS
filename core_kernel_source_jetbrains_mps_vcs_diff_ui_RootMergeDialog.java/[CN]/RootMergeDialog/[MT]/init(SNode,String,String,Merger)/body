{
  myMerger=merger;
  final SNode[] change1Node=new SNode[1];
  final SNode[] resultNode=new SNode[1];
  final SNode[] change2Node=new SNode[1];
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      change1Node[0]=myChange1Model.getRootByName(node.getName());
      resultNode[0]=myResultModel.getRootByName(node.getName());
      change2Node[0]=myChange2Model.getRootByName(node.getName());
    }
  }
);
  myTopComponent=new JPanel(new GridLayout(1,3));
  myBottomComponent=new JPanel(new GridLayout(1,3));
  for (  Change conflict : merger.getConflictedChanges()) {
    conflict.setError(true);
  }
  myChange1EditorComponent=addEditor(myContext,change1Node[0],"");
  myChange1EditorComponent.hightlight(merger.getBaseMyneChange(),false,false);
  myResultEditorComponent=addEditor(myContext,resultNode[0],"");
  myResultEditorComponent.hightlight(new ArrayList<Change>(myMerger.getConflictedChanges()),true,false);
  myChange2EditorComponent=addEditor(myContext,change2Node[0],"");
  myChange2EditorComponent.hightlight(merger.getBaseRepoChange(),false,false);
  myContainer=new JSplitPane(JSplitPane.VERTICAL_SPLIT,myTopComponent,myBottomComponent);
  myContainer.setResizeWeight(1);
}
