{
  boolean hasIndent=collection != myCell && collection.getStyle().get(StyleAttributes.INDENT_LAYOUT_INDENT);
  boolean hasAnchor=collection != myCell && collection.getStyle().get(StyleAttributes.INDENT_LAYOUT_INDENT_ANCHOR);
  boolean hasWrapAnchor=collection.getStyle().get(StyleAttributes.INDENT_LAYOUT_WRAP_ANCHOR);
  int indent=hasIndent && hasAnchor ? currentIndent() + myIndentSize : hasIndent ? myCurrentIndent + myIndentSize : hasAnchor ? currentIndent() + getFirstChildLeftGap(collection) : myCurrentIndent;
  int wrapIndent=hasWrapAnchor ? currentIndent() + getFirstChildLeftGap(collection) : (hasAnchor || hasIndent) ? indent + 2 * myIndentSize : myCurrentIndentAfterWrap;
  withIndent(indent,wrapIndent,new Runnable(){
    @Override public void run(){
      for (      EditorCell child : collection) {
        if (child instanceof EditorCell_Collection && isIndentCollection((EditorCell_Collection)child)) {
          layoutCollection((EditorCell_Collection)child);
        }
 else {
          layout(child);
        }
      }
    }
  }
);
}
