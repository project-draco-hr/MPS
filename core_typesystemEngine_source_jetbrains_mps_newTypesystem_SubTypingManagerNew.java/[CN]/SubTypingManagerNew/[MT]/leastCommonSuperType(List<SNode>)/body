{
  if (types.size() == 0) {
    return null;
  }
  if (types.size() == 1) {
    return types.iterator().next();
  }
  int newNodesSize=1;
  while (types.size() > newNodesSize) {
    int size=types.size();
    SNode left=types.remove(0);
    SNode right=types.remove(0);
    Set<SNode> newNodes=leastCommonSuperTypes(left,right);
    newNodesSize=newNodes.size();
    types.addAll(newNodes);
  }
  return LatticeUtil.meetNodes(new HashSet<SNode>(types));
}
