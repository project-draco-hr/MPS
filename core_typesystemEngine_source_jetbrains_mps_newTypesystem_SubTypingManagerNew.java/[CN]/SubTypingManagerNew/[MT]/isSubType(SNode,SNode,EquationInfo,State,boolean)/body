{
  long start=System.nanoTime();
  Boolean aBoolean=NodeReadAccessCasterInEditor.runReadTransparentAction(new Computable<Boolean>(){
    public Boolean compute(){
      THashSet<Pair<SNode,SNode>> matchingPairs=new THashSet<Pair<SNode,SNode>>();
      SubtypingResolver subtypingResolver=new SubtypingResolver(state == null ? null : state.getTypeCheckingContext(),matchingPairs);
      boolean result=subtypingResolver.isSubType(subType,superType,isWeak);
      if (result) {
        Equations equations=state != null ? state.getEquations() : null;
        if (equations != null) {
          equations.addEquations(matchingPairs,info);
        }
      }
      return result;
    }
  }
);
  TypeSystemReporter.getInstance().reportIsSubType(subType,superType,(System.nanoTime() - start));
  return aBoolean;
}
