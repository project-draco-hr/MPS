{
  if (left == null || right == null) {
    return false;
  }
  return LanguageScopeExecutor.execWithMultiLanguageScope(collectLanguagesRecursively(left,right),new Computable<Boolean>(){
    @Override public Boolean compute(){
      List<Pair<ComparisonRule_Runtime,IsApplicable2Status>> comparisonRule_runtimes=myTypeChecker.getRulesManager().getComparisonRules(left,right,isWeak);
      if (comparisonRule_runtimes != null) {
        for (        Pair<ComparisonRule_Runtime,IsApplicable2Status> comparisonRule_runtime : comparisonRule_runtimes) {
          if (comparisonRule_runtime.o1.areComparable(left,right,comparisonRule_runtime.o2))           return true;
        }
      }
      comparisonRule_runtimes=myTypeChecker.getRulesManager().getComparisonRules(right,left,isWeak);
      if (comparisonRule_runtimes != null) {
        for (        Pair<ComparisonRule_Runtime,IsApplicable2Status> comparisonRule_runtime : comparisonRule_runtimes) {
          if (comparisonRule_runtime.o1.areComparable(right,left,comparisonRule_runtime.o2))           return true;
        }
      }
      return false;
    }
  }
);
}
