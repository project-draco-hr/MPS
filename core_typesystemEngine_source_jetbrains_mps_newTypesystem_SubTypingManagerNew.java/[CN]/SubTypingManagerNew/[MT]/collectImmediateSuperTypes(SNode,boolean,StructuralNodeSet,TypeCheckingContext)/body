{
  if (term == null) {
    return;
  }
  LanguageScopeExecutor.execWithLanguageScope(null,new Computable<Object>(){
    @Override public Object compute(){
      List<Pair<SubtypingRule_Runtime,IsApplicableStatus>> subtypingRule_runtimes=myTypeChecker.getRulesManager().getSubtypingRules(term,isWeak);
      if (subtypingRule_runtimes != null) {
        for (        final Pair<SubtypingRule_Runtime,IsApplicableStatus> subtypingRule : subtypingRule_runtimes) {
          List<SNode> superTypes=subtypingRule.o1.getSubOrSuperTypes(term,context,subtypingRule.o2);
          if (superTypes != null) {
            result.addAll(superTypes);
          }
        }
      }
      return result;
    }
  }
);
}
