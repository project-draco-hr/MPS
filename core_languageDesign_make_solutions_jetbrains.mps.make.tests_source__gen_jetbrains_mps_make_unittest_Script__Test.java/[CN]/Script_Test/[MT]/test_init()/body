{
  IScript.Stub stub=new IScript.Stub(){
    public IResult execute(){
      throw new AssertionFailedError();
    }
    public IResult execute(    Iterable<? extends IResource> input){
      throw new AssertionFailedError();
    }
    public Iterable<ITarget> allTargets(){
      throw new AssertionFailedError();
    }
    public ITarget defaultTarget(){
      throw new AssertionFailedError();
    }
    public boolean isValid(){
      throw new AssertionFailedError();
    }
  }
;
  final List<String> res=ListSequence.fromList(new ArrayList<String>());
  IScript.StubBoss boss=new IScript.StubBoss(stub){
    @Override public void init(    IParametersPool ppool){
      ListSequence.fromList(res).addElement("boss");
      super.init(ppool);
    }
  }
;
  stub.init(null);
  Assert.assertEquals(ListSequence.fromListAndArray(new ArrayList<String>(),"boss"),res);
  new IScript.StubBoss(boss){
    @Override public void init(    IParametersPool ppool){
      ListSequence.fromList(res).addElement("bossboss");
      super.init(ppool);
    }
  }
;
  stub.init(null);
  Assert.assertEquals(ListSequence.fromListAndArray(new ArrayList<String>(),"boss","boss","bossboss"),res);
  return;
}
