{
  HashMap<String,INodePropertyValidator> result=new HashMap<String,INodePropertyValidator>();
  result.put("sourceCardinality",new BaseNodePropertyValidator(){
    public boolean checkPropertyValue(    final SNode node,    final String propertyName,    final String propertyValue,    final IScope scope){
      return SPropertyOperations.hasValue(node,"metaClass","aggregation","reference") || SEnumOperations.getEnumMemberValue(SEnumOperations.getEnumMember(SEnumOperations.getEnum("r:00000000-0000-4000-0000-011c89590292(jetbrains.mps.lang.structure.structure)","Cardinality"),"1")).equals((SPropertyOperations.getString(propertyValue))) || SEnumOperations.getEnumMemberValue(SEnumOperations.getEnumMember(SEnumOperations.getEnum("r:00000000-0000-4000-0000-011c89590292(jetbrains.mps.lang.structure.structure)","Cardinality"),"0..1")).equals((SPropertyOperations.getString(propertyValue)));
    }
  }
);
  result.put("role",new BaseNodePropertyValidator(){
    public boolean checkPropertyValue(    final SNode node,    final String propertyName,    final String propertyValue,    final IScope scope){
      return (SPropertyOperations.getString(propertyValue)).matches("[a-zA-Z[_]][a-zA-Z0-9$[_]]*");
    }
  }
);
  return result;
}
