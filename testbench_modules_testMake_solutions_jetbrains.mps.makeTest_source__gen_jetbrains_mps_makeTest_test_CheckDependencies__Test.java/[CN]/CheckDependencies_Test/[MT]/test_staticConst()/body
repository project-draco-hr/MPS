{
  MakeAssert.assertDependenciesChecked("staticConst",new ChangeModel(){
    @Override public void change(    SModel model){
      super.change(model);
      SPropertyOperations.set(SNodeOperations.cast(SLinkOperations.getTarget(Sequence.fromIterable(BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),ListSequence.fromList(SModelOperations.getRoots(model,"jetbrains.mps.baseLanguage.structure.ClassConcept")).first(),"jetbrains.mps.baseLanguage.structure.Classifier","call_staticFields_5292274854859223538",new Object[]{})).first(),"initializer",true),"jetbrains.mps.baseLanguage.structure.IntegerConstant"),"value","" + (0));
    }
  }
);
}
