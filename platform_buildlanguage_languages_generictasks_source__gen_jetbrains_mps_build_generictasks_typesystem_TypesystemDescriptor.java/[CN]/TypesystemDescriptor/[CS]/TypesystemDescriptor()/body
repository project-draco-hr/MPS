{
{
    InferenceRule_Runtime inferenceRule=new typeof_Attribute_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    InferenceRule_Runtime inferenceRule=new typeof_GenericAttributeDeclaration_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    InferenceRule_Runtime inferenceRule=new typeof_CustomNestedReference_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    InferenceRule_Runtime inferenceRule=new typeof_CustomNestedDeclaration_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    InferenceRule_Runtime inferenceRule=new typeof_DefaultClassifierFieldAccessOperation_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    NonTypesystemRule_Runtime nonTypesystemRule=new chechAttributeDeclarationDefaultValueIsInEnum_NonTypesystemRule();
    this.myNonTypesystemRules.add(nonTypesystemRule);
  }
{
    NonTypesystemRule_Runtime nonTypesystemRule=new checkParentsOfInterfaceAreInterfaces_NonTypesystemRule();
    this.myNonTypesystemRules.add(nonTypesystemRule);
  }
{
    NonTypesystemRule_Runtime nonTypesystemRule=new checkAttributeValueIsInEnum_NonTypesystemRule();
    this.myNonTypesystemRules.add(nonTypesystemRule);
  }
{
    NonTypesystemRule_Runtime nonTypesystemRule=new checkAllRequiredAttributesPresent_NonTypesystemRule();
    this.myNonTypesystemRules.add(nonTypesystemRule);
  }
}
