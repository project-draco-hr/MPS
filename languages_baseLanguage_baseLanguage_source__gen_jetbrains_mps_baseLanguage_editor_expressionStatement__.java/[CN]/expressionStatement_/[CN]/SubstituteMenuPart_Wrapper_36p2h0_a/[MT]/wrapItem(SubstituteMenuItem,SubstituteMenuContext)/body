{
  return new SubstituteMenuItemWrapper(item){
    private SNode myCreatedNode;
    @Override public SAbstractConcept getOutputConcept(){
      return item.getOutputConcept();
    }
    @Override public SNode createNode(    @NotNull String pattern){
      SNode nodeToWrap=super.createNode(pattern);
      myCreatedNode=nodeToWrap;
      SNode result=SNodeFactoryOperations.createNewNode(SNodeOperations.getModel(nodeToWrap),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b213L,"jetbrains.mps.baseLanguage.structure.ExpressionStatement")),null);
      SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b213L,0xf8cc56b214L,"expression"),nodeToWrap);
      return result;
    }
    @Override public void select(    @NotNull SNode createdNode,    @NotNull String pattern){
      super.select(myCreatedNode,pattern);
    }
  }
;
}
