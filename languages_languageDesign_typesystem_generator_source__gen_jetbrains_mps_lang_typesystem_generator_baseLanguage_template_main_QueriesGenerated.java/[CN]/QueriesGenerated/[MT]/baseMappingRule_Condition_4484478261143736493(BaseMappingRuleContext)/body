{
  SNode condition=SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(_context.getNode(),MetaAdapterFactory.getReferenceLink(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x11192d97ff9L,0x11192d9d83cL,"patternVarDecl")),MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x1117e29d976L,"jetbrains.mps.lang.typesystem.structure.ApplicableNodeCondition"),false,false);
  SNode parent=SNodeOperations.getParent(condition);
  return SNodeOperations.isInstanceOf(parent,MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x1117e7b5c73L,"jetbrains.mps.lang.typesystem.structure.AbstractRule")) && SNodeOperations.isInstanceOf(parent,MetaAdapterFactory.getInterfaceConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x3e3c1137fe6cb779L,"jetbrains.mps.lang.typesystem.structure.IRuleWithTwoNodes")) && IRuleWithTwoNodes__BehaviorDescriptor.getSecondNodeCondition_id3SW4jvYrbIS.invoke(SNodeOperations.cast(parent,MetaAdapterFactory.getInterfaceConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x3e3c1137fe6cb779L,"jetbrains.mps.lang.typesystem.structure.IRuleWithTwoNodes"))) == condition;
}
