{
  SNode grandparent=SNodeOperations.getParent(SNodeOperations.getParent(_context.getNode()));
  if (SNodeOperations.isInstanceOf(grandparent,"jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement")) {
    SNode abstractEquationStatement=SNodeOperations.cast(grandparent,"jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement");
    if ((SLinkOperations.getTarget(abstractEquationStatement,"nodeToCheck",true) != null)) {
      return true;
    }
    SNode leftPart=SLinkOperations.getTarget(abstractEquationStatement,"leftExpression",true);
    if (SNodeOperations.isInstanceOf(leftPart,"jetbrains.mps.lang.typesystem.structure.NormalTypeClause")) {
      SNode normalTypeClause=SNodeOperations.cast(leftPart,"jetbrains.mps.lang.typesystem.structure.NormalTypeClause");
      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(normalTypeClause,"normalType",true),"jetbrains.mps.lang.typesystem.structure.TypeOfExpression")) {
        if (SLinkOperations.getTarget(normalTypeClause,"normalType",true) == _context.getNode()) {
          return false;
        }
 else {
          return true;
        }
      }
    }
    SNode rightPart=SLinkOperations.getTarget(abstractEquationStatement,"rightExpression",true);
    if (SNodeOperations.isInstanceOf(rightPart,"jetbrains.mps.lang.typesystem.structure.NormalTypeClause")) {
      SNode normalTypeClause=SNodeOperations.cast(rightPart,"jetbrains.mps.lang.typesystem.structure.NormalTypeClause");
      if (SLinkOperations.getTarget(normalTypeClause,"normalType",true) == _context.getNode()) {
        return false;
      }
    }
    return true;
  }
 else {
    return true;
  }
}
