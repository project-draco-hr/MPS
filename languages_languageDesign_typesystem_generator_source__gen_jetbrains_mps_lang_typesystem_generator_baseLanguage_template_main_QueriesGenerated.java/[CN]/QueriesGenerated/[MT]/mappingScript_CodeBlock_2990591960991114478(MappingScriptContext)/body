{
  List<SNode> nodesToProcess=new ArrayList<SNode>();
  ListSequence.fromList(nodesToProcess).addSequence(ListSequence.fromList(SModelOperations.nodes(_context.getModel(),MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x1117f3c1ffaL,"jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement"))));
  ListSequence.fromList(nodesToProcess).addSequence(ListSequence.fromList(SModelOperations.nodes(_context.getModel(),MetaAdapterFactory.getInterfaceConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x11db4aad802L,"jetbrains.mps.lang.typesystem.structure.MessageStatement"))));
  ListSequence.fromList(nodesToProcess).addSequence(ListSequence.fromList(SModelOperations.nodes(_context.getModel(),MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x11b36163865L,"jetbrains.mps.lang.typesystem.structure.TypesystemQuickFix"))));
  ListSequence.fromList(nodesToProcess).addSequence(ListSequence.fromList(SModelOperations.nodes(_context.getModel(),MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x114177ce6cdL,"jetbrains.mps.lang.typesystem.structure.WhenConcreteStatement"))));
  ListSequence.fromList(nodesToProcess).addSequence(ListSequence.fromList(SModelOperations.nodes(_context.getModel(),MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x1117f0ad10aL,"jetbrains.mps.lang.typesystem.structure.TypeOfExpression"))));
  ListSequence.fromList(nodesToProcess).addSequence(ListSequence.fromList(SModelOperations.nodes(_context.getModel(),MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x58e32a0782bca52aL,"jetbrains.mps.lang.typesystem.structure.SubstituteTypeRule"))));
  for (  SNode node : nodesToProcess) {
    SModel originalModel=_context.getOriginalInputModel();
    String modelId=(SNodeOperations.isInstanceOf(node,MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x11b36163865L,"jetbrains.mps.lang.typesystem.structure.TypesystemQuickFix")) ? jetbrains.mps.util.SNodeOperations.getModelLongName(originalModel) : originalModel.getReference().toString());
    SNode origNode=_context.getOriginalCopiedInputNode((SNodeOperations.isInstanceOf(node,MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x58e32a0782bca52aL,"jetbrains.mps.lang.typesystem.structure.SubstituteTypeRule")) ? SLinkOperations.getTarget(SNodeOperations.cast(node,MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x58e32a0782bca52aL,"jetbrains.mps.lang.typesystem.structure.SubstituteTypeRule")),MetaAdapterFactory.getContainmentLink(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x58e32a0782bca52aL,0x65a1a729b445aec0L,"body")) : node));
    if ((origNode != null)) {
      String nodeId=origNode.getNodeId().toString();
      SNode annotation=AttributeOperations.createAndSetAttrbiute(node,new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x2980b78b2f03a40bL,"jetbrains.mps.lang.typesystem.structure.OriginalNodeId")),"jetbrains.mps.lang.typesystem.structure.OriginalNodeId");
      SPropertyOperations.set(annotation,MetaAdapterFactory.getProperty(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x2980b78b2f03a40bL,0x2980b78b2f03a418L,"nodeId"),nodeId);
      SPropertyOperations.set(annotation,MetaAdapterFactory.getProperty(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x2980b78b2f03a40bL,0x2980b78b2f03a437L,"modelId"),modelId);
    }
 else {
      _context.showErrorMessage(node,"original node is null");
    }
  }
}
