{
  Set<SNode> visited=SetSequence.fromSet(new LinkedHashSet<SNode>());
  for (  SNode plugin : ListSequence.fromList(myPlugins)) {
    collectDependencies(plugin,visited);
  }
  myDependency=SetSequence.fromSet(visited).subtract(ListSequence.fromList(myPlugins)).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.as(DependenciesHelper.getOriginalNode(it,myContext),"jetbrains.mps.build.mps.structure.BuildMps_IdeaPlugin");
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (it != null);
    }
  }
);
}
