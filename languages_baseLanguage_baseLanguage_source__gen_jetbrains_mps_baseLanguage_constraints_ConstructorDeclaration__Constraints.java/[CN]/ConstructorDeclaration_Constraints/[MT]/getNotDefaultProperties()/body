{
  Map<String,PropertyConstraintsDescriptor> properties=new HashMap();
  properties.put("name",new BasePropertyConstraintsDescriptor("name",this){
    @Override public boolean hasOwnGetter(){
      return true;
    }
    @Override public Object getValue(    SNode node){
      String propertyName="name";
      return SPropertyOperations.getString(SNodeOperations.as(SNodeOperations.getParent(node),"jetbrains.mps.lang.core.structure.INamedConcept"),"name");
    }
  }
);
  properties.put("nestedName",new BasePropertyConstraintsDescriptor("nestedName",this){
    @Override public boolean hasOwnGetter(){
      return true;
    }
    @Override public Object getValue(    SNode node){
      String propertyName="nestedName";
      return SPropertyOperations.getString(SNodeOperations.getAncestor(node,"jetbrains.mps.baseLanguage.structure.Classifier",false,false),"nestedName");
    }
  }
);
  properties.put("resolveInfo",new BasePropertyConstraintsDescriptor("resolveInfo",this){
    @Override public boolean hasOwnGetter(){
      return true;
    }
    @Override public Object getValue(    SNode node){
      String propertyName="resolveInfo";
      return SPropertyOperations.getString(SNodeOperations.as(SNodeOperations.getParent(node),"jetbrains.mps.lang.core.structure.IResolveInfo"),"resolveInfo");
    }
  }
);
  return properties;
}
