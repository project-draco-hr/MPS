{
{
    SAbstractConcept cncpt=c;
    Integer preIndex=indices_lpa09p_a0u.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return props_DevKit;
      }
    break;
case 1:
  if (true) {
    return props_Generator;
  }
break;
case 2:
if (true) {
return props_Language;
}
break;
case 3:
if (true) {
return props_MappingConfigExternalRef;
}
break;
case 4:
if (true) {
return props_MappingConfigNormalRef;
}
break;
case 5:
if (true) {
return props_MappingConfigRefAllGlobal;
}
break;
case 6:
if (true) {
return props_MappingConfigRefAllLocal;
}
break;
case 7:
if (true) {
return props_MappingConfigRefBase;
}
break;
case 8:
if (true) {
return props_MappingConfigRefSet;
}
break;
case 9:
if (true) {
return props_MappingPriorityRule;
}
break;
case 10:
if (true) {
return props_ModelReference;
}
break;
case 11:
if (true) {
return props_ModelRoot;
}
break;
case 12:
if (true) {
return props_Module;
}
break;
case 13:
if (true) {
return props_ModuleDependency;
}
break;
case 14:
if (true) {
return props_ModuleReference;
}
break;
case 15:
if (true) {
return props_Solution;
}
break;
case 16:
if (true) {
return props_SourcePath;
}
break;
case 17:
if (true) {
return props_StubEntry;
}
break;
case 18:
if (true) {
return props_StubSolution;
}
break;
default :
}
}
throw new IllegalStateException();
}
