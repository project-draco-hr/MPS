{
  String conceptFqName=myHelper.readType(nodeElement.getAttributeValue(ModelPersistence.TYPE));
  SNode node=new SNode(model,conceptFqName);
  String idValue=nodeElement.getAttributeValue(ModelPersistence.ID);
  if (idValue != null) {
    SNodeId id=SNodeId.fromString(idValue);
    if (id == null) {
      LOG.error("invalid id string");
      return null;
    }
    node.setId(id);
  }
  for (  Element element : (List<Element>)nodeElement.getChildren(ModelPersistence.PROPERTY)) {
    String propertyName=myHelper.readName(element.getAttributeValue(ModelPersistence.NAME));
    String propertyValue=element.getAttributeValue(ModelPersistence.VALUE);
    if (propertyValue != null) {
      node.setProperty(propertyName,propertyValue);
    }
  }
  for (  Element link : (List<Element>)nodeElement.getChildren(ModelPersistence.LINK)) {
    String role=link.getAttributeValue(ModelPersistence.ROLE);
    String target=link.getAttributeValue(ModelPersistence.TARGET_NODE_ID);
    String resolveInfo=link.getAttributeValue(ModelPersistence.RESOLVE_INFO);
    SReference reference=myHelper.readLink(node,role,target,resolveInfo);
    if (reference != null)     node.addReference(reference);
  }
  if (!isRootStub)   readChildren(node,nodeElement);
  return node;
}
