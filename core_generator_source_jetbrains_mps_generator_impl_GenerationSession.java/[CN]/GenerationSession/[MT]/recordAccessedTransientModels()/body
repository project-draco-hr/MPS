{
  Collection<SModelReference> modelToKeepCandidates=new LinkedHashSet<SModelReference>();
  modelToKeepCandidates.addAll(myLogRecorder.ofKind(MessageKind.ERROR));
  if (myGenerationOptions.isShowWarnings() && myGenerationOptions.isKeepModelsWithWarnings()) {
    modelToKeepCandidates.addAll(myLogRecorder.ofKind(MessageKind.WARNING));
  }
  for (  SModelReference mr : modelToKeepCandidates) {
    mySessionContext.keepTransientModel(mr,false);
  }
  myLogRecorder.reset();
  final boolean discardTransients=!myGenerationOptions.isSaveTransientModels();
  for (  SModel m : myTransientModelsToRecycle) {
    if (discardTransients && !modelToKeepCandidates.contains(m.getReference())) {
      mySessionContext.getModule().removeModel(m);
    }
 else {
      mySessionContext.keepTransientModel(m.getReference(),true);
    }
  }
  myTransientModelsToRecycle.clear();
}
