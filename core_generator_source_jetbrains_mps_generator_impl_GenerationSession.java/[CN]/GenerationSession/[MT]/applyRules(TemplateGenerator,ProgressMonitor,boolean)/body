{
  final SModel originalOutputModel=tg.getOutputModel();
  ttrace.push(String.format("Step %d.%d",myMajorStep + 1,myMinorStep),true);
  final boolean hasChanges=tg.apply(progress,isPrimary);
  ttrace.pop();
  if (isPrimary || hasChanges) {
    myIntermediateCache.store(myMajorStep,myMinorStep,tg,myDependenciesBuilder);
  }
  if (hasChanges) {
    SModel realOutputModel=tg.getOutputModel();
    myDependenciesBuilder.updateModel(realOutputModel);
  }
 else {
    myDependenciesBuilder.dropModel();
    if (!isPrimary) {
      myMinorStep--;
    }
    if (myLogger.needsInfo()) {
      myLogger.info(String.format("unchanged, empty model '%s' removed",SModelStereotype.getStereotype(originalOutputModel)));
    }
  }
  return hasChanges;
}
