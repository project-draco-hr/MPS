{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.logging.structure.LogStatement");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          return SEnumOperations.getEnumMembers(SEnumOperations.getEnum("r:00000000-0000-4000-0000-011c8959057f(jetbrains.mps.baseLanguage.logging.structure)","Severity"));
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SNode logStatement=SNodeFactoryOperations.createNewNode(model,MetaAdapterFactory.getConcept(new UUID(8505622446592443681l,-8359413340076074077l),1167227138527l,"jetbrains.mps.baseLanguage.logging.structure.LogStatement"),null);
              SPropertyOperations.set(logStatement,MetaAdapterFactory.getProperty(new UUID(8505622446592443681l,-8359413340076074077l),1167227138527l,1167245565795l,"severity"),SEnumOperations.getEnumMemberValue((item)));
              SNodeFactoryOperations.setNewChild(logStatement,MetaAdapterFactory.getContainmentLink(new UUID(8505622446592443681l,-8359413340076074077l),1167227138527l,1167227463056l,"logExpression"),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1070475926800l,"jetbrains.mps.baseLanguage.structure.StringLiteral"));
              SNode catchClause=SNodeOperations.getNodeAncestor(_context.getParentNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1164903280175l,"jetbrains.mps.baseLanguage.structure.CatchClause"),true,false);
              if ((catchClause != null) && (SLinkOperations.getTarget(catchClause,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1164903280175l,1164903359217l,"throwable")) != null)) {
                SPropertyOperations.set(logStatement,MetaAdapterFactory.getProperty(new UUID(8505622446592443681l,-8359413340076074077l),1167227138527l,1167228628751l,"hasException"),"" + (true));
                SNode lvr=SLinkOperations.setNewChild(logStatement,MetaAdapterFactory.getContainmentLink(new UUID(8505622446592443681l,-8359413340076074077l),1167227138527l,1167227561449l,"exception"),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,"jetbrains.mps.baseLanguage.structure.VariableReference"));
                SLinkOperations.setTarget(lvr,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,1068581517664l,"variableDeclaration"),SLinkOperations.getTarget(catchClause,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1164903280175l,1164903359217l,"throwable")));
              }
              return logStatement;
            }
            public String getMatchingText(            String pattern){
              return SEnumOperations.getEnumMemberValue((item));
            }
            public String getVisibleMatchingText(            String pattern){
              return getMatchingText(pattern);
            }
            public String getDescriptionText(            String pattern){
              return "Log statement";
            }
          }
);
        }
      }
    }
  }
  return result;
}
