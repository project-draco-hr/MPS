{
  SNode andExpression=SNodeOperations.cast(SLinkOperations.getTarget(node,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b217L,0xf8cc56b218L,"condition")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfb7c3070eeL,"jetbrains.mps.baseLanguage.structure.AndExpression"));
  SNode left=SLinkOperations.getTarget(andExpression,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbdeb6fecfL,0xfbdeb7a11cL,"leftExpression"));
  SNode right=SLinkOperations.getTarget(andExpression,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbdeb6fecfL,0xfbdeb7a11bL,"rightExpression"));
  SLinkOperations.setTarget(node,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b217L,0xf8cc56b218L,"condition"),right);
  SNode statement=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b217L,"jetbrains.mps.baseLanguage.structure.IfStatement")),null);
  SLinkOperations.setTarget(statement,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b217L,0xf8cc56b218L,"condition"),left);
  SNodeOperations.replaceWithAnother(node,statement);
  ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(statement,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b217L,0xf8cc56b219L,"ifTrue")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b200L,0xf8cc6bf961L,"statement"))).addElement(node);
  SNodeOperations.deleteNode(andExpression);
}
