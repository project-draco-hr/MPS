{
  Iterable<SNode> fwdRefs=ListSequence.fromList(SNodeOperations.getNodeDescendants(typeVariableDeclaration,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1109283449304l,"jetbrains.mps.baseLanguage.structure.TypeVariableReference"),false,new SConcept[]{})).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SLinkOperations.getTarget(SNodeOperations.cast(it,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1109283449304l,"jetbrains.mps.baseLanguage.structure.TypeVariableReference")),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1109283449304l,1109283546497l,"typeVariableDeclaration"));
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return eq_pivjqh_a0a0a0a0a0a0a0b(SNodeOperations.getParent(it),SNodeOperations.getParent(typeVariableDeclaration));
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.getIndexInParent(it) > SNodeOperations.getIndexInParent(typeVariableDeclaration);
    }
  }
);
  if (Sequence.fromIterable(fwdRefs).isNotEmpty()) {
    String msg="Illegal forward reference to type parameter " + SPropertyOperations.getString(Sequence.fromIterable(fwdRefs).first(),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"));
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(typeVariableDeclaration,msg,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","8302934035192815238",null,errorTarget);
    }
  }
}
