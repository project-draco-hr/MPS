{
  int behaviorIndex=Arrays.binarySearch(myConceptBehaviorIds,conceptId.getIdValue());
switch (behaviorIndex) {
case 0:
    return myConceptEditorDeclaration_BehaviorDescriptor;
case 1:
  return myEditorCellModel_BehaviorDescriptor;
case 2:
return myCellModel_Collection_BehaviorDescriptor;
case 3:
return myCellModel_Constant_BehaviorDescriptor;
case 4:
return myCellModel_Property_BehaviorDescriptor;
case 5:
return myCellModel_RefNode_BehaviorDescriptor;
case 6:
return myCellModel_RefNodeList_BehaviorDescriptor;
case 7:
return myCellModel_ModelAccess_BehaviorDescriptor;
case 8:
return myCellModel_Error_BehaviorDescriptor;
case 9:
return myCellModel_Custom_BehaviorDescriptor;
case 10:
return myEditorComponentDeclaration_BehaviorDescriptor;
case 11:
return myCellModel_Component_BehaviorDescriptor;
case 12:
return myBaseEditorComponent_BehaviorDescriptor;
case 13:
return myCellKeyMapDeclaration_BehaviorDescriptor;
case 14:
return myCellModel_RefCell_BehaviorDescriptor;
case 15:
return myInlineEditorComponent_BehaviorDescriptor;
case 16:
return myCellModel_Alternation_BehaviorDescriptor;
case 17:
return myCellModel_AttributedPropertyCell_BehaviorDescriptor;
case 18:
return myCellModel_AttributedLinkCell_BehaviorDescriptor;
case 19:
return myCellKeyMap_AbstractFunction_BehaviorDescriptor;
case 20:
return myCellKeyMap_IsApplicableFunction_BehaviorDescriptor;
case 21:
return myCellActionMapDeclaration_BehaviorDescriptor;
case 22:
return myCellActionMap_ExecuteFunction_BehaviorDescriptor;
case 23:
return myCellModel_WithRole_BehaviorDescriptor;
case 24:
return myCellModel_ListWithRole_BehaviorDescriptor;
case 25:
return myQueryFunction_NodeCondition_BehaviorDescriptor;
case 26:
return myCellModel_AttributedNodeCell_BehaviorDescriptor;
case 27:
return myCellMenuPart_PropertyValues_GetValues_BehaviorDescriptor;
case 28:
return myCellMenuPart_ReplaceChild_defaultConceptOfChild_BehaviorDescriptor;
case 29:
return myCellMenuPart_AbstractGroup_Query_BehaviorDescriptor;
case 30:
return myCellMenuPart_ReplaceNode_Group_Create_BehaviorDescriptor;
case 31:
return myCellMenuPart_AbstractGroup_MatchingText_BehaviorDescriptor;
case 32:
return myCellMenuPart_AbstractGroup_DescriptionText_BehaviorDescriptor;
case 33:
return myCellMenuDescriptor_BehaviorDescriptor;
case 34:
return myCellMenuPart_Abstract_BehaviorDescriptor;
case 35:
return myCellMenuPart_ReplaceNode_CustomNodeConcept_BehaviorDescriptor;
case 36:
return myCellMenuPart_ReplaceChild_Group_Query_BehaviorDescriptor;
case 37:
return myCellMenuPart_ReplaceChild_Group_Create_BehaviorDescriptor;
case 38:
return myCellMenuPart_ReplaceChild_CustomChildConcept_Query_BehaviorDescriptor;
case 39:
return myCellMenuPart_ReplaceChild_Item_Create_BehaviorDescriptor;
case 40:
return myCellMenuPart_Generic_Group_Handler_BehaviorDescriptor;
case 41:
return myCellMenuPart_Generic_Item_Handler_BehaviorDescriptor;
case 42:
return myCellMenuComponent_BehaviorDescriptor;
case 43:
return myCellMenuComponentFeature_Property_BehaviorDescriptor;
case 44:
return myCellMenuComponentFeature_Link_BehaviorDescriptor;
case 45:
return myAbstractComponent_BehaviorDescriptor;
case 46:
return myQueryFunction_JComponent_BehaviorDescriptor;
case 47:
return myConceptFunctionParameter_text_BehaviorDescriptor;
case 48:
return myQueryFunction_ModelAccess_Getter_BehaviorDescriptor;
case 49:
return myQueryFunction_ModelAccess_Setter_BehaviorDescriptor;
case 50:
return myQueryFunction_ModelAccess_Validator_BehaviorDescriptor;
case 51:
return myConceptFunctionParameter_oldText_BehaviorDescriptor;
case 52:
return myQueryFunction_CellProvider_BehaviorDescriptor;
case 53:
return myQueryFunction_Color_BehaviorDescriptor;
case 54:
return myQueryFunction_NodeFactory_BehaviorDescriptor;
case 55:
return myQueryFunction_ImagePath_BehaviorDescriptor;
case 56:
return myCellMenuPart_PropertyPostfixHints_GetPostfixes_BehaviorDescriptor;
case 57:
return myQueryFunction_NodeListFilter_BehaviorDescriptor;
case 58:
return myCellModel_NonEmptyProperty_BehaviorDescriptor;
case 59:
return myStyleSheet_BehaviorDescriptor;
case 60:
return myStyleSheetClass_BehaviorDescriptor;
case 61:
return myStyleClassItem_BehaviorDescriptor;
case 62:
return myForegroundColorStyleClassItem_BehaviorDescriptor;
case 63:
return myBooleanStyleSheetItem_BehaviorDescriptor;
case 64:
return myEditableStyleClassItem_BehaviorDescriptor;
case 65:
return mySelectableStyleSheetItem_BehaviorDescriptor;
case 66:
return myAutoDeletableStyleClassItem_BehaviorDescriptor;
case 67:
return myDrawBorderStyleClassItem_BehaviorDescriptor;
case 68:
return myForegroundNullColorStyleClassItem_BehaviorDescriptor;
case 69:
return myCellModel_Indent_BehaviorDescriptor;
case 70:
return myTextBackgroundColorStyleClassItem_BehaviorDescriptor;
case 71:
return myTextBackgroundColorSelectedStyleClassItem_BehaviorDescriptor;
case 72:
return myPaddingLeftStyleClassItem_BehaviorDescriptor;
case 73:
return myPaddingRightStyleClassItem_BehaviorDescriptor;
case 74:
return myFirstPositionAllowedStyleClassItem_BehaviorDescriptor;
case 75:
return myLastPositionAllowedStyleClassItem_BehaviorDescriptor;
case 76:
return myCellModel_TransactionalProperty_BehaviorDescriptor;
case 77:
return myTransactionalPropertyHandler_BehaviorDescriptor;
case 78:
return myDrawBracketsStyleClassItem_BehaviorDescriptor;
case 79:
return myIStyleContainer_BehaviorDescriptor;
case 80:
return myQueryFunction_FontStyle_BehaviorDescriptor;
case 81:
return myQueryFunction_Integer_BehaviorDescriptor;
case 82:
return myQueryFunction_StyleParameter_BehaviorDescriptor;
case 83:
return myQueryFunction_Underlined_BehaviorDescriptor;
case 84:
return myStrikeOutStyleSheet_BehaviorDescriptor;
case 85:
return myQueryFunction_Boolean_BehaviorDescriptor;
case 86:
return myIQueryFunction_Color_BehaviorDescriptor;
case 87:
return myRGBColor_BehaviorDescriptor;
case 88:
return myCellModel_ReadOnlyModelAccessor_BehaviorDescriptor;
case 89:
return myPaddingTopStyleClassItem_BehaviorDescriptor;
case 90:
return myPaddingBottomStyleClassItem_BehaviorDescriptor;
case 91:
return myAbstractPaddingStyleClassItem_BehaviorDescriptor;
case 92:
return myPunctuationLeftStyleClassItem_BehaviorDescriptor;
case 93:
return myPunctuationRightStyleClassItem_BehaviorDescriptor;
case 94:
return myBaseLineCell_BehaviorDescriptor;
case 95:
return myQueryFunction_String_BehaviorDescriptor;
case 96:
return myIndentLayoutIndentStyleClassItem_BehaviorDescriptor;
case 97:
return myIndentLayoutNewLineStyleClassItem_BehaviorDescriptor;
case 98:
return myIndentLayoutNewLineChildrenStyleClassItem_BehaviorDescriptor;
case 99:
return myIndentLayoutOnNewLineStyleClassItem_BehaviorDescriptor;
case 100:
return myIndentLayoutNoWrapClassItem_BehaviorDescriptor;
case 101:
return myAppendTextOperation_BehaviorDescriptor;
case 102:
return mySetBoldOperation_BehaviorDescriptor;
case 103:
return myQueryFunction_MethodPresentation_BehaviorDescriptor;
case 104:
return myConceptFunctionParameter_parameterObject_BehaviorDescriptor;
case 105:
return myQueryFunction_SeparatorText_BehaviorDescriptor;
case 106:
return myReadOnlyStyleClassItem_BehaviorDescriptor;
case 107:
return myQueryFunction_ColorComposit_BehaviorDescriptor;
case 108:
return myIStyleSheetMember_BehaviorDescriptor;
case 109:
return myStyleClass_BehaviorDescriptor;
case 110:
return myCellActionMap_CanExecuteFunction_BehaviorDescriptor;
case 111:
return myQueryFunction_Style_BehaviorDescriptor;
case 112:
return mySelectInEditorOperation_BehaviorDescriptor;
case 113:
return myCellModel_URL_BehaviorDescriptor;
case 114:
return myStyleAttributeDeclaration_BehaviorDescriptor;
case 115:
return myQueryFunction_AttributeStyleParameter_BehaviorDescriptor;
case 116:
return myStyleKey_BehaviorDescriptor;
case 117:
return myConceptFunctionParameter_StyledText_BehaviorDescriptor;
case 118:
return myAbstractStyledTextOperation_BehaviorDescriptor;
case 119:
return myConceptEditorHintDeclaration_BehaviorDescriptor;
case 120:
return myQueryHintsSpecification_BehaviorDescriptor;
case 121:
return myQueryFunction_IsMethodCurrent_BehaviorDescriptor;
case 122:
return myQueryFunction_SNode_BehaviorDescriptor;
case 123:
return myDefaultBaseLine_BehaviorDescriptor;
case 124:
return myQueryFunction_ParametersList_BehaviorDescriptor;
case 125:
return myIndentLayoutIndentAnchorStyleClassItem_BehaviorDescriptor;
case 126:
return myIndentLayoutWrapAnchorStyleClassItem_BehaviorDescriptor;
case 127:
return myScriptKindClassItem_BehaviorDescriptor;
case 128:
return myCellModel_NextEditor_BehaviorDescriptor;
case 129:
return mySynchronizeable_BehaviorDescriptor;
default :
return null;
}
}
