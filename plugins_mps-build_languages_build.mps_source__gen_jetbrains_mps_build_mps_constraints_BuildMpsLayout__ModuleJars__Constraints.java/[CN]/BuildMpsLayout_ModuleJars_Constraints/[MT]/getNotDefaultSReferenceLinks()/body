{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(0xcf935df46994e9cL,0xa132fa109541cba3L,0x11918e0f209b83e7L,0x11918e0f209b83e9L),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xcf935df46994e9cL,0xa132fa109541cba3L,0x11918e0f209b83e7L,0x11918e0f209b83e9L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_9ulpon_a0a0a0a0a1a0b0a1a1;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
{
            Scope outer=Scope.getScope(Scope.parent(_context.getContextNode()),_context.getContextNode(),MetaAdapterFactory.getConcept(0xcf935df46994e9cL,0xa132fa109541cba3L,0x48e82d508331930cL,"jetbrains.mps.build.mps.structure.BuildMps_Module").getDeclarationNode());
            return (outer == null ? null : new FilteringScope(outer){
              @Override public boolean isExcluded(              SNode node){
                return SNodeOperations.isInstanceOf(node,MetaAdapterFactory.getConcept(0xcf935df46994e9cL,0xa132fa109541cba3L,0x4c6db07d2e56a8b4L,"jetbrains.mps.build.mps.structure.BuildMps_Generator"));
              }
            }
);
          }
        }
      }
;
    }
  }
);
  return references;
}
