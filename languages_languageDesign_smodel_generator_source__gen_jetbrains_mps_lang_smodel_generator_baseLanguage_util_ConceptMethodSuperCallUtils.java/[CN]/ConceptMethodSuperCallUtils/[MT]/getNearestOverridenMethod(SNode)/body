{
  if (!((boolean)Node_ConceptMethodCall__BehaviorDescriptor.isVirtualMethodCall_idhEwIWlZ.invoke(methodCall))) {
    return SLinkOperations.getTarget(methodCall,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration"));
  }
  SAbstractConcept concept;
  boolean includingStart;
  SNode superNode=SNodeOperations.cast(SNodeOperation__BehaviorDescriptor.getLeftExpression_idhEwJdGu.invoke(methodCall),MetaAdapterFactory.getConcept(0xaf65afd8f0dd4942L,0x87d963a55f2a9db1L,0x11d434a6558L,"jetbrains.mps.lang.behavior.structure.SuperNodeExpression"));
  if (SLinkOperations.getTarget(superNode,MetaAdapterFactory.getReferenceLink(0xaf65afd8f0dd4942L,0x87d963a55f2a9db1L,0x11d434a6558L,0x498a2c3387127040L,"superConcept")) != null) {
    SNode superConcept=SLinkOperations.getTarget(superNode,MetaAdapterFactory.getReferenceLink(0xaf65afd8f0dd4942L,0x87d963a55f2a9db1L,0x11d434a6558L,0x498a2c3387127040L,"superConcept"));
    concept=SNodeOperations.asSConcept(superConcept);
    includingStart=true;
  }
 else {
    SNode behavior=SNodeOperations.getNodeAncestor(methodCall,MetaAdapterFactory.getConcept(0xaf65afd8f0dd4942L,0x87d963a55f2a9db1L,0x11d43447b1aL,"jetbrains.mps.lang.behavior.structure.ConceptBehavior"),false,false);
    concept=SNodeOperations.asSConcept(SLinkOperations.getTarget(behavior,MetaAdapterFactory.getReferenceLink(0xaf65afd8f0dd4942L,0x87d963a55f2a9db1L,0x11d43447b1aL,0x11d43447b1fL,"concept")));
    includingStart=false;
  }
  return ConceptMethodSuperCallUtils.findMethodInConceptMethods(concept,methodCall,includingStart);
}
