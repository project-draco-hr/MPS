{
  LanguageRegistry instance=(myRepository != null ? LanguageRegistry.getInstance(myRepository) : LanguageRegistry.getInstance());
  LanguageRuntime language=instance.getLanguage(concept.getLanguage());
  if (language != null) {
    DataFlowAspectDescriptor aspect=language.getAspect(DataFlowAspectDescriptor.class);
    if (aspect instanceof DataFlowAspectDescriptorBase) {
      Collection<IDataFlowBuilder> dataFlowBuilders=((DataFlowAspectDescriptorBase)aspect).getDataFlowBuilders(concept);
      Optional<IDataFlowBuilder> first=dataFlowBuilders.stream().filter(new Predicate<IDataFlowBuilder>(){
        public boolean test(        IDataFlowBuilder builder){
          return builder.getModes().isEmpty() || builder.getModes().stream().anyMatch(new Predicate<IDataFlowModeId>(){
            public boolean test(            IDataFlowModeId mode){
              return getBuilderContext().getBuilderModes().contains(mode);
            }
          }
);
        }
      }
).findFirst();
      return (first.isPresent() ? first.get() : null);
    }
  }
  return null;
}
