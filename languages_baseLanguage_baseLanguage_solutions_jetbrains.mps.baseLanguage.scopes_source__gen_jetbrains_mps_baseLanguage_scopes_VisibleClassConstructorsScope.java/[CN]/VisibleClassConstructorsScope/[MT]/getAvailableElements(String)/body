{
  return ListSequence.fromList(classifiers.getAvailableElements(prefix)).translate(new ITranslator2<SNode,SNode>(){
    public Iterable<SNode> translate(    SNode it){
      return ListSequence.fromList(SNodeOperations.getChildren(it)).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SNodeOperations.isInstanceOf(it,"jetbrains.mps.baseLanguage.structure.ConstructorDeclaration");
        }
      }
);
    }
  }
).toListSequence();
}
