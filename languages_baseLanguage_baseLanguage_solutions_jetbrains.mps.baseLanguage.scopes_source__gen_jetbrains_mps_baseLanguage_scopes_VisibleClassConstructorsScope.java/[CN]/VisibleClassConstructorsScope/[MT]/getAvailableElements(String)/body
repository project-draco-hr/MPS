{
  Iterable<SNode> allConstructors=ListSequence.fromList(visibleClassifiers.getAvailableElements(prefix)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.baseLanguage.structure.ClassConcept");
    }
  }
).translate(new ITranslator2<SNode,SNode>(){
    public Iterable<SNode> translate(    SNode it){
      return SLinkOperations.getTargets(SNodeOperations.cast(it,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"constructor",true);
    }
  }
);
  return ListSequence.fromListWithValues(new ArrayList(),allConstructors);
}
