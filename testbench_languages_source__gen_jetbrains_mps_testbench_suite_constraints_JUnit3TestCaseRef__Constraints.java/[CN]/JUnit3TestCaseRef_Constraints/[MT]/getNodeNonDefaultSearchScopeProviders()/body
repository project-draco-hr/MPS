{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("klass",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      IScope ms=ModuleSuite_Behavior.call_scope_1280144168199518341(SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.testbench.suite.structure.ModuleSuite",true,false));
      return new VisibleClassifiersScope(_context.getEnclosingNode(),IClassifiersSearchScope.CLASS,(ms != null ? ms : operationContext.getScope())){
        @NotNull @Override public List<SNode> getClassifiers(){
          SNode testCase=SLinkOperations.getTarget(new JUnit3TestCaseRef_Constraints.QuotationClass_qx1fe9_a0a0a0a0a0b0c0a1a0b0i().createNode(),"classifier",false);
          List<SNode> res=super.getClassifiers();
          for (Iterator<SNode> it=ListSequence.fromList(res).iterator(); it.hasNext(); ) {
            if (!(Classifier_Behavior.call_isDescendant_7165541881557222913(it.next(),testCase))) {
              it.remove();
            }
          }
          return res;
        }
      }
;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:137cc691-13a2-4fdd-885a-88f9405e83c0(jetbrains.mps.testbench.suite.constraints)","1280144168199457729");
    }
  }
);
  return result;
}
