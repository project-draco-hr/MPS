{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    Iterable<SNode> parameterObjects=new Computable<Iterable<SNode>>(){
      public Iterable<SNode> compute(){
        return SLinkOperations.getChildren(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getSourceNode(),MetaAdapterFactory.getContainmentLink(new UUID(7596465798203917883l,-4873580700227838512l),7178445679340358576l,7178445679340358578l,"reference")),MetaAdapterFactory.getReferenceLink(new UUID(7596465798203917883l,-4873580700227838512l),6447445394688422642l,6447445394688422643l,"facet")),MetaAdapterFactory.getContainmentLink(new UUID(7596465798203917883l,-4873580700227838512l),6418371274763029523l,6418371274763146558l,"targetDeclaration"));
      }
    }
.compute();
    if (parameterObjects != null) {
      for (      final SNode item : parameterObjects) {
        ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(SConceptOperations.findConceptDeclaration("jetbrains.mps.make.facet.structure.TargetReferenceExpression"),item,_context.getSourceNode()){
          public SNode doSubstitute(          @Nullable final EditorContext editorContext,          String pattern){
            SNode tre=SNodeOperations.replaceWithNewChild(_context.getSourceNode(),"jetbrains.mps.make.facet.structure.TargetReferenceExpression");
            SLinkOperations.setTarget(tre,MetaAdapterFactory.getContainmentLink(new UUID(7596465798203917883l,-4873580700227838512l),8703512757937156087l,8703512757937161134l,"facetRef"),_context.getSourceNode());
            SLinkOperations.setTarget(tre,MetaAdapterFactory.getReferenceLink(new UUID(7596465798203917883l,-4873580700227838512l),8703512757937156087l,8703512757937161148l,"target"),(item));
            return tre;
          }
          public String getMatchingText(          String pattern){
            return ":" + SPropertyOperations.getString((item),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"));
          }
          public String getVisibleMatchingText(          String pattern){
            return getMatchingText(pattern);
          }
          @Override protected boolean isEnabled(){
            SNode sourceNode=getSourceNode();
            SNode parent=SNodeOperations.getParent(sourceNode);
            SNode containingLink=SNodeOperations.getContainingLinkDeclaration(sourceNode);
            return parent == null || containingLink == null || (ModelConstraints.canBeParent(parent,SConceptOperations.findConceptDeclaration("jetbrains.mps.make.facet.structure.TargetReferenceExpression"),containingLink,null,null) && ModelConstraints.canBeAncestor(parent,null,SConceptOperations.findConceptDeclaration("jetbrains.mps.make.facet.structure.TargetReferenceExpression"),null));
          }
        }
);
      }
    }
  }
  return result;
}
