{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.make.facet.structure.LocalParametersComponentExpression");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          return SLinkOperations.getChildren(SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getParentNode(),MetaAdapterFactory.getConcept(0x696c11654a59463bL,0xbc5d902caab85dd0L,0x5912a2ab1cd24c3dL,"jetbrains.mps.make.facet.structure.TargetDeclaration"),false,false),MetaAdapterFactory.getContainmentLink(0x696c11654a59463bL,0xbc5d902caab85dd0L,0x5912a2ab1cd24c3dL,0x6598ce4d2f20bbdfL,"parameters")),MetaAdapterFactory.getContainmentLink(0xa247e09e243545baL,0xb8d207e93feba96aL,0x1208fa48aa5L,0x12099b7fca9L,"component"));
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SNode lve=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x696c11654a59463bL,0xbc5d902caab85dd0L,0x6598ce4d2f231cb2L,"jetbrains.mps.make.facet.structure.LocalParametersExpression")),null);
              SNode lvce=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x696c11654a59463bL,0xbc5d902caab85dd0L,0x6598ce4d2f231cb3L,"jetbrains.mps.make.facet.structure.LocalParametersComponentExpression")),null);
              SLinkOperations.setTarget(lvce,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,0x116b46a4416L,"operand"),lve);
              SLinkOperations.setTarget(lvce,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,0x116b46b36c4L,"operation"),_quotation_createNode_59frgq_a0d0a0a0((item)));
              return lvce;
            }
            public String getMatchingText(            String pattern){
              return SPropertyOperations.getString((item),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
            }
            public String getVisibleMatchingText(            String pattern){
              return getMatchingText(pattern);
            }
          }
);
        }
      }
    }
  }
  return result;
}
