{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.make.facet.structure.ForeignParametersComponentExpression");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          final SNode td=SNodeOperations.getNodeAncestor(_context.getParentNode(),MetaAdapterFactory.getConcept(0x696c11654a59463bL,0xbc5d902caab85dd0L,0x5912a2ab1cd24c3dL,"jetbrains.mps.make.facet.structure.TargetDeclaration"),false,false);
          SNode fd=SNodeOperations.cast(SNodeOperations.getParent(td),MetaAdapterFactory.getConcept(0x696c11654a59463bL,0xbc5d902caab85dd0L,0x5912a2ab1cd24c13L,"jetbrains.mps.make.facet.structure.FacetDeclaration"));
          return ListSequence.fromList(SLinkOperations.getChildren(fd,MetaAdapterFactory.getContainmentLink(0x696c11654a59463bL,0xbc5d902caab85dd0L,0x5912a2ab1cd24c13L,0x5912a2ab1cd4153eL,"targetDeclaration"))).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode sibl){
              return sibl != td;
            }
          }
).concat(ListSequence.fromList(SLinkOperations.getChildren(fd,MetaAdapterFactory.getContainmentLink(0x696c11654a59463bL,0xbc5d902caab85dd0L,0x5912a2ab1cd24c13L,0x5979ed6d2b21b300L,"required"))).translate(new ITranslator2<SNode,SNode>(){
            public Iterable<SNode> translate(            SNode rfd){
              return SLinkOperations.getChildren(SLinkOperations.getTarget(rfd,MetaAdapterFactory.getReferenceLink(0x696c11654a59463bL,0xbc5d902caab85dd0L,0x5979ed6d2b21b2f2L,0x5979ed6d2b21b2f3L,"facet")),MetaAdapterFactory.getContainmentLink(0x696c11654a59463bL,0xbc5d902caab85dd0L,0x5912a2ab1cd24c13L,0x5912a2ab1cd4153eL,"targetDeclaration"));
            }
          }
)).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode rtd){
              return SLinkOperations.getTarget(rtd,MetaAdapterFactory.getContainmentLink(0x696c11654a59463bL,0xbc5d902caab85dd0L,0x5912a2ab1cd24c3dL,0x6598ce4d2f20bbdfL,"parameters"));
            }
          }
).translate(new ITranslator2<SNode,SNode>(){
            public Iterable<SNode> translate(            SNode p){
              return SLinkOperations.getChildren(p,MetaAdapterFactory.getContainmentLink(0xa247e09e243545baL,0xb8d207e93feba96aL,0x1208fa48aa5L,0x12099b7fca9L,"component"));
            }
          }
).toListSequence();
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SNode fve=_quotation_createNode_gb3jz3_a0a0a0a0(SNodeOperations.getNodeAncestor((item),MetaAdapterFactory.getConcept(0x696c11654a59463bL,0xbc5d902caab85dd0L,0x5912a2ab1cd24c3dL,"jetbrains.mps.make.facet.structure.TargetDeclaration"),false,false));
              SNode op=_quotation_createNode_gb3jz3_a0b0a0a0((item));
              return _quotation_createNode_gb3jz3_a2a0a0a(fve,op);
            }
            public String getMatchingText(            String pattern){
              return SPropertyOperations.getString(SNodeOperations.getNodeAncestor((item),MetaAdapterFactory.getConcept(0x696c11654a59463bL,0xbc5d902caab85dd0L,0x5912a2ab1cd24c3dL,"jetbrains.mps.make.facet.structure.TargetDeclaration"),false,false),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")) + "." + SPropertyOperations.getString((item),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
            }
            public String getVisibleMatchingText(            String pattern){
              return getMatchingText(pattern);
            }
          }
);
        }
      }
    }
  }
  return result;
}
