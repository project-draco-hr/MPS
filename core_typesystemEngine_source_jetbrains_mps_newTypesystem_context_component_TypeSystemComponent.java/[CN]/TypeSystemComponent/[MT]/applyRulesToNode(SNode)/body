{
  final List<Pair<SNode,List<Pair<InferenceRule_Runtime,IsApplicableStatus>>>> nodesAndRules=new ArrayList<Pair<SNode,List<Pair<InferenceRule_Runtime,IsApplicableStatus>>>>();
  for (  SNode nodeOrAttr : nodesToApplyRulesTo(node)) {
    List<Pair<InferenceRule_Runtime,IsApplicableStatus>> rules=TypeChecker.getInstance().getRulesManager().getInferenceRules(nodeOrAttr);
    if (rules != null && !rules.isEmpty()) {
      nodesAndRules.add(new Pair<SNode,List<Pair<InferenceRule_Runtime,IsApplicableStatus>>>(nodeOrAttr,rules));
      Pair<InferenceRule_Runtime,IsApplicableStatus> lastPair=rules.get(rules.size() - 1);
      if (lastPair.o1.overrides(nodeOrAttr,lastPair.o2)) {
        break;
      }
    }
  }
  if (nodesAndRules.isEmpty())   return false;
  return getTypechecking().runApplyRulesTo(node,new Runnable(){
    @Override public void run(){
      for (      Pair<SNode,List<Pair<InferenceRule_Runtime,IsApplicableStatus>>> pair : nodesAndRules) {
        applyRulesToNode(pair.o1,pair.o2);
      }
    }
  }
);
}
