{
  this.addNodeById("1230052684687");
  this.addNodeById("1230052684697");
  this.addNodeById("1230052684705");
  this.addNodeById("1230052684709");
  SNode call=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StaticMethodCall",null);
  SLinkOperations.setTarget(call,"baseMethodDeclaration",this.getNodeById("1230052684711"),false);
  SLinkOperations.setTarget(call,"classConcept",this.getNodeById("1230052684710"),false);
  SNodeOperations.replaceWithAnother(this.getNodeById("1230052684702"),call);
  ExtractMethodRefactoringParameters params=new ExtractMethodRefactoringParameters(ListSequence.<SNode>fromArray(this.getNodeById("1230052684691")));
  params.setName("foo");
  ExtractMethodRefactoring ref=ExtractMethodFabric.createRefactoring(params);
  ref.setStaticContainer(this.getNodeById("1230052684706"));
  ref.doRefactor();
  Assert.assertEquals(null,NodesMatcher.matchNodes(ListSequence.<SNode>fromArray(this.getNodeById("1230052684688"),this.getNodeById("1230052684706")),ListSequence.<SNode>fromArray(this.getNodeById("1230052684698"),this.getNodeById("1230052684710"))));
}
