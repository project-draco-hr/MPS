{
  this.addNodeById("1230040828215");
  this.addNodeById("1230040828225");
  this.addNodeById("1230040828233");
  this.addNodeById("1230040828237");
  SNode call=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StaticMethodCall",null);
  SLinkOperations.setTarget(call,"baseMethodDeclaration",this.getNodeById("1230040828239"),false);
  SLinkOperations.setTarget(call,"classConcept",this.getNodeById("1230040828238"),false);
  SNodeOperations.replaceWithAnother(this.getNodeById("1230040828230"),call);
  ExtractMethodRefactoringParameters params=new ExtractMethodRefactoringParameters(ListSequence.<SNode>fromArray(this.getNodeById("1230040828219")));
  params.setName("foo");
  ExtractMethodRefactoring ref=ExtractMethodFabric.createRefactoring(params);
  ref.setStaticContainer(this.getNodeById("1230040828234"));
  ref.doRefactor();
  Assert.assertEquals(null,NodesMatcher.matchNodes(ListSequence.<SNode>fromArray(this.getNodeById("1230040828216"),this.getNodeById("1230040828234")),ListSequence.<SNode>fromArray(this.getNodeById("1230040828226"),this.getNodeById("1230040828238"))));
}
