{
  int changesBefore=ListSequence.fromList(myUtilDiff.getChangeSet().getModelChanges()).count();
  SModel modelContent=ModelPersistence.readModel(myUtilDiff.getModelDescriptor().getModelFile(),false);
  SNode node=(SNode)new SNode(modelContent,"jetbrains.mps.baseLanguage.structure.ClassConcept");
  SPropertyOperations.set(node,"name","NewRoot");
  SModelOperations.addRootNode(modelContent,node);
  myUtilVirtualFile.setBinaryContent(ModelPersistence.modelToString(modelContent).getBytes(FileUtil.DEFAULT_CHARSET));
  waitForModelReplaced(myUtilDiff.getModelDescriptor());
  waitForChangesManager();
  Assert.assertEquals(changesBefore + 1,ListSequence.fromList(myUtilDiff.getChangeSet().getModelChanges()).count());
}
