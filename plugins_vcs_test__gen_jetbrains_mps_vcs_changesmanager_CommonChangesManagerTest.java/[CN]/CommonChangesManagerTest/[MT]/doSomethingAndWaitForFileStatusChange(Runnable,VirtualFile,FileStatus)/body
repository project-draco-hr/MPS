{
  waitForSomething(new Runnable(){
    public void run(){
      final FileStatus statusBefore=myFileStatusManager.getStatus(file);
      final Wrappers._T<FileStatusListener> listener=new Wrappers._T<FileStatusListener>();
      final _FunctionTypes._void_P0_E0 stopIfNeeded=new _FunctionTypes._void_P0_E0(){
        public void invoke(){
          if ((expectedFileStatus == null ? statusBefore != myFileStatusManager.getStatus(file) : expectedFileStatus == myFileStatusManager.getStatus(file))) {
            myFileStatusManager.removeFileStatusListener(listener.value);
            waitCompleted();
          }
        }
      }
;
      listener.value=new FileStatusListener(){
        public void fileStatusesChanged(){
          stopIfNeeded.invoke();
        }
        public void fileStatusChanged(        @NotNull VirtualFile f){
          stopIfNeeded.invoke();
        }
      }
;
      myFileStatusManager.addFileStatusListener(listener.value);
      task.run();
      VcsDirtyScopeManager.getInstance(myIdeaProject).fileDirty(file);
      myChangeListManager.scheduleUpdate();
      stopIfNeeded.invoke();
    }
  }
);
}
