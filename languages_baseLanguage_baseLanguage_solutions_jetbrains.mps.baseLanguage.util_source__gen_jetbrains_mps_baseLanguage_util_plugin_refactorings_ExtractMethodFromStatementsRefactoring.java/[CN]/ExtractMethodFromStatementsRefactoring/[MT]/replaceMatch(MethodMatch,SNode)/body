{
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      SNode methodCall=ExtractMethodFromStatementsRefactoring.this.createMethodCall(match,methodDeclaration);
      SNode callStatement=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b213L,"jetbrains.mps.baseLanguage.structure.ExpressionStatement")));
      SLinkOperations.setTarget(callStatement,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b213L,0xf8cc56b214L,"expression"),methodCall);
      List<SNode> statements=match.getNodes();
      SNodeOperations.insertPrevSiblingChild(ListSequence.fromList(statements).first(),callStatement);
      for (      SNode statement : ListSequence.fromList(statements)) {
        SNodeOperations.deleteNode(statement);
      }
    }
  }
);
}
