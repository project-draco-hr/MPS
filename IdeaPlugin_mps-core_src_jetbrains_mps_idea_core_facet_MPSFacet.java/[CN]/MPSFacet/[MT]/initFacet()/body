{
  StartupManager.getInstance(getModule().getProject()).runWhenProjectIsInitialized(new Runnable(){
    @Override public void run(){
      myMpsProject=ProjectHelper.fromIdeaProject(getModule().getProject());
      myMpsProject.getModelAccess().runWriteAction(new Runnable(){
        @Override public void run(){
          SolutionDescriptor solutionDescriptor=getConfiguration().getBean().getSolutionDescriptor();
          Solution solution=new SolutionIdea(getModule(),solutionDescriptor);
          com.intellij.openapi.project.Project project=getModule().getProject();
          SRepository repository=myMpsProject.getRepository();
          if (new ModuleRepositoryFacade(repository).getModule(solutionDescriptor.getModuleReference()) != null) {
            MessagesViewTool.log(project,MessageKind.ERROR,MPSBundle.message("facet.cannot.load.second.module",solutionDescriptor.getNamespace()));
            return;
          }
          ((SRepositoryExt)repository).registerModule(mySolution=solution,myMpsProject);
          myMpsProject.addModule(mySolution);
          LOG.info(MPSBundle.message("facet.module.loaded",MPSFacet.this.mySolution.getModuleName()));
          IdeaPluginDescriptor descriptor=PluginManager.getPlugin(PluginManager.getPluginByClassName(MPSFacet.class.getName()));
          String version=descriptor == null ? null : descriptor.getVersion();
          UsageTrigger.trigger("MPS.initFacet." + version);
        }
      }
);
    }
  }
);
}
