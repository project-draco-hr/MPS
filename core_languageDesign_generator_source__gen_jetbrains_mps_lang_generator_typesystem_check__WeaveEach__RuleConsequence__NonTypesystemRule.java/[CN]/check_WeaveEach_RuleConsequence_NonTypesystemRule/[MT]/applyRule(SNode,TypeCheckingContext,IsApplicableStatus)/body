{
  SNode template=SLinkOperations.getTarget(weaveEach,"template",false);
  if ((template == null)) {
{
      BaseQuickFixProvider intentionProvider=null;
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(weaveEach,"No template","r:00000000-0000-4000-0000-011c895902e4(jetbrains.mps.lang.generator.typesystem)","546192990993044375",intentionProvider,errorTarget);
    }
  }
 else   if (!(ListSequence.fromList(SLinkOperations.getTargets(template,"parameter",true)).isEmpty())) {
{
      BaseQuickFixProvider intentionProvider=null;
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(weaveEach,"Cannot weave template with arguments","r:00000000-0000-4000-0000-011c895902e4(jetbrains.mps.lang.generator.typesystem)","546192990993046864",intentionProvider,errorTarget);
    }
  }
 else {
    final SNode templateApplicableConcept=SLinkOperations.getTarget(template,"applicableConcept",false);
    if (templateApplicableConcept == null) {
      return;
    }
    SNode query=SLinkOperations.getTarget(weaveEach,"sourceNodesQuery",true);
    SNode NT=QueriesUtil.getOutputNodeType_fromSourceQuery(query);
    SNode nodeConcept=SLinkOperations.getTarget(SNodeOperations.cast(NT,"jetbrains.mps.lang.smodel.structure.SNodeType"),"concept",false);
    if (!(SModelUtil.isAssignableConcept(nodeConcept,templateApplicableConcept))) {
{
        BaseQuickFixProvider intentionProvider=null;
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(weaveEach,"template is not applicable to " + NT,"r:00000000-0000-4000-0000-011c895902e4(jetbrains.mps.lang.generator.typesystem)","546192990993046908",intentionProvider,errorTarget);
      }
    }
  }
}
