{
  Iterable<SNode> visibleContainers=ListSequence.fromList(SModelOperations.getRoots(myModel,"jetbrains.mps.baseLanguage.overloadedOperators.structure.ContainerImport")).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(new UUID(-248448403205894696l,-5239469005774541060l),7363434029342207049l,7363434029342207301l,"container")) != null);
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(new UUID(-248448403205894696l,-5239469005774541060l),7363434029342207049l,7363434029342207301l,"container"));
    }
  }
);
  if (Sequence.fromIterable(visibleContainers).isEmpty()) {
    visibleContainers=SModelOperations.getRootsIncludingImported(myModel,"jetbrains.mps.baseLanguage.overloadedOperators.structure.OverloadedOperatorContainer");
  }
  return Sequence.fromIterable(visibleContainers).translate(new ITranslator2<SNode,SNode>(){
    public Iterable<SNode> translate(    SNode it){
      return SLinkOperations.getChildren(it,MetaAdapterFactory.getContainmentLink(new UUID(-248448403205894696l,-5239469005774541060l),483844232470139399l,483844232470139400l,"operators"));
    }
  }
);
}
