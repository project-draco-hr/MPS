{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("elementDeclaration",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      SNode contextBuilder=Builder_Behavior.getContextBuilder_7057666463730366732(_context.getEnclosingNode());
      if (contextBuilder == null) {
        return new ModelAndImportedModelsScope(_context.getModel(),false,operationContext.getScope());
      }
 else       if (SNodeOperations.isInstanceOf(contextBuilder,"jetbrains.mps.xmlQuery.structure.ElementBuilder")) {
        return new SimpleSearchScope(ElementUtil.getElementDeclarations(SLinkOperations.getTarget(SNodeOperations.cast(contextBuilder,"jetbrains.mps.xmlQuery.structure.ElementBuilder"),"elementDeclaration",false),_context.getEnclosingNode(),operationContext.getScope()));
      }
 else {
        return new EmptySearchScope();
      }
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:e79b58b4-ea58-4c9d-b43b-c3a260addf6a(jetbrains.mps.xmlQuery.constraints)","1384720974900260388");
    }
  }
);
  return result;
}
