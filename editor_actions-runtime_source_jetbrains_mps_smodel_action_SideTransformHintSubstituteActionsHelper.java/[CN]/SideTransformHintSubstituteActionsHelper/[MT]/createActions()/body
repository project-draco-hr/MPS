{
  if (!isValid())   return Collections.emptyList();
  return ModelAccess.instance().runReadAction(new Computable<List<INodeSubstituteAction>>(){
    public List<INodeSubstituteAction> compute(){
      return TypeContextManager.getInstance().runResolveAction(new Computable<List<INodeSubstituteAction>>(){
        @Override public List<INodeSubstituteAction> compute(){
          return Collections.unmodifiableList(SideTransformUtil.createActions(mySourceNode,myTransformTags,mySide,myContext));
        }
      }
);
    }
  }
);
}
