{
  Result result=new Result();
  List<Language> projectLangs=p.getProjectModules(Language.class);
  List<Solution> projectSolutions=p.getProjectModules(Solution.class);
  monitor.start("Optimizing project imports",projectLangs.size() + projectSolutions.size());
  try {
    for (    Language l : projectLangs) {
      monitor.step(l.toString());
      result.add(optimizeLanguageImports_internal(l));
      monitor.advance(1);
      if (monitor.isCanceled()) {
        return result;
      }
    }
    for (    Solution s : p.getProjectModules(Solution.class)) {
      monitor.step(s.toString());
      result.add(optimizeSolutionImports_internal(s));
      monitor.advance(1);
      if (monitor.isCanceled()) {
        return result;
      }
    }
  }
  finally {
    monitor.done();
  }
  return result;
}
