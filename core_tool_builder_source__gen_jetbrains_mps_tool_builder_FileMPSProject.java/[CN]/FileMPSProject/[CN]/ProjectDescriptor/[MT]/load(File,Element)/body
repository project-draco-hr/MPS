{
  FileMPSProject.ProjectDescriptor result_dkknya_a0a5o=this;
  final String result_dkknya_a0a0a5o=project.getName();
  result_dkknya_a0a5o.setName(result_dkknya_a0a0a5o);
  if (modulesXml == null) {
    return;
  }
  List<Element> moduleList=ListSequence.fromList(new ArrayList<Element>());
  ListSequence.fromList(moduleList).addSequence(Sequence.fromIterable(XmlUtil.children(XmlUtil.first(modulesXml,"projectSolutions"),"solutionPath")));
  ListSequence.fromList(moduleList).addSequence(Sequence.fromIterable(XmlUtil.children(XmlUtil.first(modulesXml,"projectLanguages"),"languagePath")));
  ListSequence.fromList(moduleList).addSequence(Sequence.fromIterable(XmlUtil.children(XmlUtil.first(modulesXml,"projectDevkits"),"devkitPath")));
  ListSequence.fromList(moduleList).addSequence(Sequence.fromIterable(XmlUtil.children(XmlUtil.first(modulesXml,"projectModules"),"modulePath")));
  for (  Element moduleElement : ListSequence.fromList(moduleList)) {
    Path modulePath=new Path();
    Path result_dkknya_a1a9a0a5o=modulePath;
    final String result_dkknya_a1a1a9a0a5o=MacrosFactory.forProjectFile(FileSystem.getInstance().getFileByPath(project.getPath())).expandPath(moduleElement.getAttributeValue("path").replace("$PROJECT_DIR$","${project}"));
    result_dkknya_a1a9a0a5o.setPath(result_dkknya_a1a1a9a0a5o);
    final String result_dkknya_a2a1a9a0a5o=moduleElement.getAttributeValue("folder");
    result_dkknya_a1a9a0a5o.setMPSFolder(result_dkknya_a2a1a9a0a5o);
    result_dkknya_a0a5o.addModule(modulePath);
  }
}
