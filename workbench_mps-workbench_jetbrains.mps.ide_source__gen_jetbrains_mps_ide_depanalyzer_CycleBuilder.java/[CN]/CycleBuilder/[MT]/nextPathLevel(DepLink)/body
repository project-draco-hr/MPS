{
  if (ListSequence.fromList(l.children()).isEmpty() && l.getReused() != null) {
    if (myReusedChecked.add(l.getReused())) {
      debug(l,"(reused)");
      nextPathLevel(l.getReused());
    }
 else {
      debug(l,"(reused, already checked, ignored)");
    }
    return;
  }
  debug(l,"");
  myNestLevelDebug++;
  for (  DepLink ch : ListSequence.fromList(l.children()).where(new IWhereFilter<DepLink>(){
    public boolean accept(    DepLink it){
      return elementMatch.met(it);
    }
  }
)) {
    if (myCurrent.seen(ch)) {
      if (eq_tn82ka_a0a0a0d0l(ch.getRoleModuleKey(),myTarget.getRoleModuleKey())) {
        myCurrent.push(ch);
        myCycles.add(new DepPath(myCurrent));
        myCurrent.pop();
      }
      continue;
    }
    myCurrent.push(ch);
    nextPathLevel(ch);
    myCurrent.pop();
  }
  myNestLevelDebug--;
}
