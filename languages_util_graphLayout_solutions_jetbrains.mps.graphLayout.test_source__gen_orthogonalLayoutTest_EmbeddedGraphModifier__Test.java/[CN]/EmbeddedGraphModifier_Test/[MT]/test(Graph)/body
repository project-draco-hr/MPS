{
  Map<Node,List<Node>> nodeMap=MapSequence.<Node,List<Node>>fromMap(new LinkedHashMap<Node,List<Node>>(16,(float)0.75,false));
  EmbeddedGraphModifier modifier=prepare(graph,nodeMap);
  modifier.makeRectanglesForNodes(nodeMap);
  EmbeddedGraph embeddedGraph=modifier.getEmbeddedGraph();
  CheckEmbeddedGraph.checkEmbeddedGraph(embeddedGraph,false);
  Map<Dart,Direction2D> dartDirections=modifier.getDartDirections();
  for (  Edge edge : ListSequence.<Edge>fromList(graph.getEdges())) {
    List<Dart> darts=embeddedGraph.getDarts(edge);
    Assert.assertTrue(ListSequence.<Dart>fromList(darts).count() == 2);
    for (    Dart dart : ListSequence.<Dart>fromList(darts)) {
      Assert.assertTrue(MapSequence.fromMap(dartDirections).containsKey(dart));
    }
  }
  Assert.assertTrue(SetSequence.<Dart>fromSet(MapSequence.fromMap(dartDirections).keySet()).count() == ListSequence.<Edge>fromList(graph.getEdges()).count() * 2);
}
