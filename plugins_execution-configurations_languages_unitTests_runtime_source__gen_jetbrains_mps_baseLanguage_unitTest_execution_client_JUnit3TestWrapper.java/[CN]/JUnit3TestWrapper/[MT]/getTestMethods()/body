{
  List<SNode> nodes=new ClassifierAndSuperClassifiersScope(getNode(),IClassifiersSearchScope.INSTANCE_METHOD).getNodes();
  return Sequence.fromIterable(SNodeOperations.ofConcept(nodes,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration"))).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return JUnit3MethodWrapper.isTestMethod(it);
    }
  }
).select(new ISelector<SNode,ITestNodeWrapper>(){
    public ITestNodeWrapper select(    SNode it){
      return TestNodeWrapperFactory.tryToWrap(it);
    }
  }
).where(new IWhereFilter<ITestNodeWrapper>(){
    public boolean accept(    ITestNodeWrapper it){
      return it != null;
    }
  }
);
}
