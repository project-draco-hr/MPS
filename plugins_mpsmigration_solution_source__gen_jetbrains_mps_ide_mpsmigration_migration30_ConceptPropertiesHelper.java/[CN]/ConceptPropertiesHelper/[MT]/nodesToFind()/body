{
  Set<String> result=SetSequence.fromSet(new HashSet<String>());
  SetSequence.fromSet(result).addElement("jetbrains.mps.lang.structure.structure.ConceptPropertyDeclaration");
  SetSequence.fromSet(result).addElement("jetbrains.mps.lang.structure.structure.ConceptProperty");
  SetSequence.fromSet(result).addElement("jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess");
  SetSequence.fromSet(result).addElement("jetbrains.mps.lang.editor.structure.CellModel_ConceptProperty");
  SetSequence.fromSet(result).addElement("jetbrains.mps.lang.structure.structure.ReferenceConceptLinkDeclaration");
  SetSequence.fromSet(result).addElement("jetbrains.mps.lang.structure.structure.ReferenceConceptLink");
  SetSequence.fromSet(result).addElement("jetbrains.mps.lang.smodel.structure.SConceptLinkAccess");
  return SetSequence.fromSetWithValues(new HashSet<SAbstractConcept>(),SetSequence.fromSet(result).select(new ISelector<String,SAbstractConcept>(){
    public SAbstractConcept select(    String it){
      return SConceptRepository.getInstance().getConcept(it);
    }
  }
));
}
