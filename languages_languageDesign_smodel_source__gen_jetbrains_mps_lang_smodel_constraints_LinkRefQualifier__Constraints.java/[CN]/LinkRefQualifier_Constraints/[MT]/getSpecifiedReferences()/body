{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x11886c4bac0L,0x11886c4bac1L,"link"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x11886c4bac0L,0x11886c4bac1L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          if (!(SNodeOperations.isInstanceOf(_context.getEnclosingNode(),MetaAdapterFactory.getInterfaceConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x312a67f61731e269L,"jetbrains.mps.lang.smodel.structure.ILinkAccessQualifierContainer")))) {
            return null;
          }
          SNode qualifierContainer=SNodeOperations.cast(_context.getEnclosingNode(),MetaAdapterFactory.getInterfaceConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x312a67f61731e269L,"jetbrains.mps.lang.smodel.structure.ILinkAccessQualifierContainer"));
          return ILinkAccessQualifierContainer__BehaviorDescriptor.getLinkAccessScope_id2xk$X1Ld2Yi.invoke(qualifierContainer);
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_cgym5w_a0a1a0a0a1a0b0a1a2;
        }
      }
;
    }
  }
);
  return references;
}
