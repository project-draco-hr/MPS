{
  try {
    final Wrappers._T<SModelDescriptor> result=new Wrappers._T<SModelDescriptor>();
    ModelAccess.instance().runWriteActionInCommand(new Runnable(){
      public void run(){
        String namespace=NewSubTestModel_Action.this.getNamespace();
        String name=NewSubTestModel_Action.this.getTestModelName();
        SModelFqName newModelFqName=new SModelFqName(namespace,name,SModelStereotype.TESTS);
        result.value=NewSubTestModel_Action.this.model.getModule().createModel(newModelFqName,ModelRootUtil.getSModelRoot(NewSubTestModel_Action.this.model));
        SModel createdModel=result.value.getSModel();
        SModel sourceModel=NewSubTestModel_Action.this.model.getSModel();
        createdModel.addImportedModel(sourceModel.getSModelReference());
        for (        SModel.ImportElement importElement : sourceModel.getImportElements()) {
          createdModel.addImportedModel(importElement.getModelReference());
        }
        for (        ModuleReference importedLanguage : sourceModel.getExplicitlyImportedLanguages()) {
          createdModel.addLanguage(importedLanguage);
        }
        for (        ModuleReference devKit : sourceModel.getDevKitRefs()) {
          createdModel.addDevKit(devKit);
        }
      }
    }
);
    ProjectPane.getInstance(NewSubTestModel_Action.this.ideaProject).selectModel(result.value);
  }
 catch (  Throwable t) {
    if (log.isErrorEnabled()) {
      log.error("User's action execute method failed. Action:" + "NewSubTestModel",t);
    }
  }
}
