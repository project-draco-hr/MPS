{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.contracts.structure.Condition","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.contracts.structure.ContractThisExpression","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.contracts.structure.MethodConditions","jetbrains.mps.lang.core.structure.NodeAttribute",false,new String[]{"jetbrains.mps.lang.core.structure.NodeAttribute"},new String[]{},new String[]{});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.contracts.structure.Postcondition","jetbrains.mps.baseLanguage.contracts.structure.Condition",false,new String[]{"jetbrains.mps.baseLanguage.contracts.structure.Condition"},new String[]{},new String[]{});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.contracts.structure.Precondition","jetbrains.mps.baseLanguage.contracts.structure.Condition",false,new String[]{"jetbrains.mps.baseLanguage.contracts.structure.Condition"},new String[]{},new String[]{});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.contracts.structure.ResultExpression","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
