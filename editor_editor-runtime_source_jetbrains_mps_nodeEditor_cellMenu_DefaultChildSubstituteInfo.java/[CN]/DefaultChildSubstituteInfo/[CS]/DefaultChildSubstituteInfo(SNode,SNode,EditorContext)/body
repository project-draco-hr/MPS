{
  super(editorContext);
  NodeReadAccessCasterInEditor.runReadTransparentAction(new Runnable(){
    public void run(){
      if (isNotAggregation(linkDeclaration)) {
        LOG.error("only aggregation links are allowed here",linkDeclaration);
      }
      SNode genuineLinkDeclaration=SModelUtil.getGenuineLinkDeclaration(linkDeclaration);
      if (SModelUtil.isMultipleLinkDeclaration(genuineLinkDeclaration)) {
        LOG.error("only cardinalities 1 or 0..1 are allowed here",linkDeclaration);
      }
      myParentNode=sourceNode;
      SNode mostSpecificLinkDeclaration=SModelSearchUtil.findMostSpecificLinkDeclaration(myParentNode.getConceptDeclarationNode(),SModelUtil.getLinkDeclarationRole(linkDeclaration));
      myLinkDeclaration=mostSpecificLinkDeclaration;
      List<SNode> ch=sourceNode.getChildren(SModelUtil.getGenuineLinkRole(linkDeclaration));
      myCurrentChild=ch.iterator().hasNext() ? ch.iterator().next() : null;
    }
  }
);
}
