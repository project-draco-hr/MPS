{
  SNode selected=editorContext.getSelectedNode();
  if (SNodeOperations.isInstanceOf(selected,"jetbrains.mps.baseLanguage.structure.CommentPart") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(selected),"jetbrains.mps.baseLanguage.structure.SingleLineComment") && !(ListSequence.fromList(SLinkOperations.getTargets(node,"commentPart",true)).contains(SNodeOperations.cast(selected,"jetbrains.mps.baseLanguage.structure.CommentPart")))) {
    SNode prevLine=SNodeOperations.cast(SNodeOperations.getParent(selected),"jetbrains.mps.baseLanguage.structure.SingleLineComment");
    ListSequence.fromList(SLinkOperations.getTargets(prevLine,"commentPart",true)).addSequence(ListSequence.fromList(SLinkOperations.getTargets(node,"commentPart",true)));
    SNodeOperations.deleteNode(node);
    return;
  }
  if (SNodeOperations.isInstanceOf(ListSequence.fromList(SLinkOperations.getTargets(node,"commentPart",true)).first(),"jetbrains.mps.baseLanguage.structure.StatementCommentPart")) {
    SNodeOperations.replaceWithAnother(node,SLinkOperations.getTarget(SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(node,"commentPart",true)).first(),"jetbrains.mps.baseLanguage.structure.StatementCommentPart"),"commentedStatement",true));
    return;
  }
  if (SNodeOperations.isInstanceOf(selected,"jetbrains.mps.baseLanguage.structure.SingleLineComment") && SNodeOperations.isInstanceOf(SNodeOperations.getPrevSibling(selected),"jetbrains.mps.baseLanguage.structure.SingleLineComment")) {
    SNode prevLine=SNodeOperations.cast(SNodeOperations.getPrevSibling(selected),"jetbrains.mps.baseLanguage.structure.SingleLineComment");
    ListSequence.fromList(SLinkOperations.getTargets(prevLine,"commentPart",true)).addSequence(ListSequence.fromList(SLinkOperations.getTargets(node,"commentPart",true)));
    SNodeOperations.deleteNode(node);
  }
}
