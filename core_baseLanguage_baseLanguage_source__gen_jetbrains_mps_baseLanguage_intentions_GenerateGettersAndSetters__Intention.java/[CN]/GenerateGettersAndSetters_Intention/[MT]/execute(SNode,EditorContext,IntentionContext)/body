{
  SNode classConcept=SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.ClassConcept");
  SNode lastAdded=null;
  Project ideaProject=editorContext.getOperationContext().getIdeaProject();
  for (  final SNode field : ((List<SNode>)intentionContext.getContextParametersMap().get("selectedFields"))) {
    final String getterName=GenerateGettersAndSettersUtil.getFieldGetterName(field,ideaProject);
    final Wrappers._boolean getterIsAbsent=new Wrappers._boolean(true);
    ListSequence.fromList(SLinkOperations.getTargets(classConcept,"method",true)).visitAll(new IVisitor<SNode>(){
      public void visit(      SNode it){
        if (getterName.equals(SPropertyOperations.getString(it,"name")) && ListSequence.fromList(SLinkOperations.getTargets(it,"parameter",true)).isEmpty()) {
          getterIsAbsent.value=false;
        }
      }
    }
);
    if (!(getterIsAbsent.value)) {
      continue;
    }
    SNode fieldReference=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalInstanceFieldReference",null);
    SLinkOperations.setTarget(fieldReference,"variableDeclaration",field,false);
    lastAdded=ListSequence.fromList(SLinkOperations.getTargets(classConcept,"method",true)).addElement(new GenerateGettersAndSetters_Intention.QuotationClass_43x4b2_a0a0a6a3a7().createNode(SLinkOperations.getTarget(field,"type",true),fieldReference,getterName));
    final String setterName=GenerateGettersAndSettersUtil.getFieldSetterName(field,ideaProject);
    final Wrappers._boolean setterIsAbsent=new Wrappers._boolean(true);
    ListSequence.fromList(SLinkOperations.getTargets(classConcept,"method",true)).visitAll(new IVisitor<SNode>(){
      public void visit(      SNode method){
        if (setterName.equals(SPropertyOperations.getString(method,"name")) && ListSequence.fromList(SLinkOperations.getTargets(method,"parameter",true)).count() == 1) {
          setterIsAbsent.value=false;
        }
      }
    }
);
    if (!(setterIsAbsent.value)) {
      continue;
    }
    String parameterName=GenerateGettersAndSettersUtil.getParameterNameForField(field,ideaProject);
    lastAdded=ListSequence.fromList(SLinkOperations.getTargets(classConcept,"method",true)).addElement(new GenerateGettersAndSetters_Intention.QuotationClass_43x4b2_a0a0a31a3a7().createNode(SNodeOperations.copyNode(fieldReference),SLinkOperations.getTarget(field,"type",true),parameterName,setterName));
  }
  if (lastAdded != null) {
    editorContext.select(lastAdded);
  }
}
