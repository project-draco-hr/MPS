{
  List<SNode> fields=SLinkOperations.getTargets(SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"field",true);
  if (ListSequence.fromList(fields).isEmpty()) {
    return false;
  }
  boolean allGettersImplemented=true;
  for (  SNode fieldDeclaration : fields) {
    final Wrappers._boolean hasCurrentFieldGetter=new Wrappers._boolean(false);
    final String getterName="get" + NameUtil.capitalize(SPropertyOperations.getString(fieldDeclaration,"name"));
    ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"method",true)).visitAll(new IVisitor<SNode>(){
      public void visit(      SNode it){
        if (getterName.equals(SPropertyOperations.getString(it,"name")) && ListSequence.fromList(SLinkOperations.getTargets(it,"parameter",true)).isEmpty()) {
          hasCurrentFieldGetter.value=true;
        }
      }
    }
);
    if (!(hasCurrentFieldGetter.value)) {
      allGettersImplemented=false;
    }
  }
  if (!(allGettersImplemented)) {
    return true;
  }
 else {
    boolean hasAllSetters=true;
    for (    SNode field : fields) {
      final String setterName="set" + NameUtil.capitalize(SPropertyOperations.getString(field,"name"));
      final Wrappers._boolean hasCurrentFieldSetter=new Wrappers._boolean(false);
      ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"method",true)).visitAll(new IVisitor<SNode>(){
        public void visit(        SNode method){
          if (setterName.equals(SPropertyOperations.getString(method,"name"))) {
            hasCurrentFieldSetter.value=true;
          }
        }
      }
);
      if (!(hasCurrentFieldSetter.value)) {
        hasAllSetters=false;
      }
    }
    return !(hasAllSetters);
  }
}
