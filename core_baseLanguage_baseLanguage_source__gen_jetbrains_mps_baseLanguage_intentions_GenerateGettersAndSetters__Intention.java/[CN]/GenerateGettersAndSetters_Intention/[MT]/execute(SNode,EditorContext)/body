{
  SNode classConcept=SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.ClassConcept");
  List<SNode> fields=SLinkOperations.getTargets(classConcept,"field",true);
  Pair p;
  final SNode thisExpression=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ThisExpression",null);
  for (  final SNode field : fields) {
    final String getterName="get" + NameUtil.capitalize(SPropertyOperations.getString(field,"name"));
    final Wrappers._boolean getterIsAbsent=new Wrappers._boolean(true);
    ListSequence.fromList(SLinkOperations.getTargets(classConcept,"method",true)).visitAll(new IVisitor<SNode>(){
      public void visit(      SNode it){
        if (getterName.equals(SPropertyOperations.getString(it,"name")) && ListSequence.fromList(SLinkOperations.getTargets(it,"parameter",true)).isEmpty()) {
          getterIsAbsent.value=false;
        }
      }
    }
);
    if (getterIsAbsent.value) {
      SLinkOperations.addChild(classConcept,"method",new _Quotations.QuotationClass_30().createNode(SLinkOperations.getTarget(field,"type",true),thisExpression,field,getterName));
    }
    final String setterName="set" + NameUtil.capitalize(SPropertyOperations.getString(field,"name"));
    final Wrappers._boolean setterIsAbsent=new Wrappers._boolean(true);
    ListSequence.fromList(SLinkOperations.getTargets(classConcept,"method",true)).visitAll(new IVisitor<SNode>(){
      public void visit(      SNode method){
        if (setterName.equals(SPropertyOperations.getString(method,"name")) && ListSequence.fromList(SLinkOperations.getTargets(method,"parameter",true)).count() == 1) {
          setterIsAbsent.value=false;
        }
      }
    }
);
    if (!(setterIsAbsent.value)) {
      continue;
    }
    SLinkOperations.addChild(classConcept,"method",new _Quotations.QuotationClass_31().createNode(thisExpression,field,SLinkOperations.getTarget(field,"type",true),SPropertyOperations.getString(field,"name"),setterName));
  }
}
