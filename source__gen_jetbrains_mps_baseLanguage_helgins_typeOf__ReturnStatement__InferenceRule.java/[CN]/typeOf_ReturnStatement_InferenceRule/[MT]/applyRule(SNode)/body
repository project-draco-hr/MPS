{
  TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(argument),TypeChecker.getInstance().getRuntimeSupport().typeOf(SLinkOperations.getTarget(argument,"expression",true)),argument);
  if ((SNodeOperations.getAncestor(argument,"jetbrains.mps.baseLanguage.structure.ConceptFunction",false,false) == null)) {
    if ((SNodeOperations.getAncestor(argument,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration",false,false) != null)) {
      TypeChecker.getInstance().getRuntimeSupport().createLessThanInequation(TypeChecker.getInstance().getRuntimeSupport().typeOf(SLinkOperations.getTarget(argument,"expression",true)),SLinkOperations.getTarget(SNodeOperations.getAncestor(argument,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration",false,false),"returnType",true),SLinkOperations.getTarget(argument,"expression",true));
    }
  }
}
