{
  final List<INodeSubstituteAction>[] result=new List[1];
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      TypeChecker.getInstance().enableTypesComputingForCompletion();
      try {
        result[0]=SideTransformUtil.createActions(mySourceNode,myTransformTags,mySide,myContext);
      }
 catch (      Throwable t) {
        LOG.error(t);
        result[0]=new ArrayList<INodeSubstituteAction>();
      }
 finally {
        TypeChecker.getInstance().clearTypesComputedForCompletion();
      }
    }
  }
);
  return result[0];
}
