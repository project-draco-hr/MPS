{
  final List<VcsDirectoryMapping> vcsMappings=new ArrayList<VcsDirectoryMapping>();
  MPSProject mpsProject=myProject.getComponent(MPSProjectHolder.class).getMPSProject();
  List<IModule> allModules=mpsProject.getModules();
  Map<AbstractVcs,Set<VirtualFile>> vcss=new HashMap<AbstractVcs,Set<VirtualFile>>();
  for (  IModule module : allModules) {
    if (module.isPackaged())     continue;
    IFile descriptor=module.getDescriptorFile();
    if (descriptor == null)     continue;
    VirtualFile file=VFileSystem.getFile(descriptor.getParent());
    discoverMappingsForFile(vcss,file);
    List<SModelRoot> modelRoots=module.getSModelRoots();
    for (    SModelRoot root : modelRoots) {
      discoverMappingsForFile(vcss,VFileSystem.getFile(root.getPath()));
    }
  }
  for (  AbstractVcs vcs : vcss.keySet()) {
    Set<VirtualFile> files=vcss.get(vcs);
    Collection<String> roots=getRoots(files);
    for (    String path : roots) {
      vcsMappings.add(new VcsDirectoryMapping(path,vcs.getName()));
    }
  }
  for (  VcsDirectoryMapping oldMapping : myVcsManager.getDirectoryMappings()) {
    String oldDir=oldMapping.getDirectory();
    boolean matched=false;
    for (    VcsDirectoryMapping newMapping : vcsMappings) {
      if (newMapping.getDirectory().equals(oldDir)) {
        matched=true;
      }
    }
    if (!matched) {
      vcsMappings.add(oldMapping);
    }
  }
  StartupManager.getInstance(myProject).registerPostStartupActivity(new Runnable(){
    public void run(){
      myVcsManager.setDirectoryMappings(vcsMappings);
    }
  }
);
}
