{
  MatchResult<Meta,Target> result=new MatchResult<Meta,Target>();
  if (type1 == type2)   return result;
  if (type1 == null || type2 == null)   return MatchResult.FALSE;
  if (type1.isVar() || type2.isVar()) {
    result.addEquation(type1,type2);
    return result;
  }
  if (type1.getMeta() != type2.getMeta()) {
    return MatchResult.FALSE;
  }
  Set<String> referenceRoles=type1.getReferenceRoles();
  referenceRoles.addAll(type2.getReferenceRoles());
  for (  String role : referenceRoles) {
    if (type1.getReferent(role) != type2.getReferent(role)) {
      return MatchResult.FALSE;
    }
  }
  Set<String> childRoles=type1.getChildRoles();
  childRoles.addAll(type2.getChildRoles());
  for (  String role : childRoles) {
    List<Type<Meta,Target>> children1=type1.getChildren(role);
    List<Type<Meta,Target>> children2=type2.getChildren(role);
    if (children1.size() != children2.size()) {
      return MatchResult.FALSE;
    }
    for (Iterator<Type<Meta,Target>> i1=children1.iterator(), i2=children2.iterator(); i1.hasNext() && i2.hasNext(); ) {
      Type<Meta,Target> child1=i1.next();
      Type<Meta,Target> child2=i2.next();
      MatchResult<Meta,Target> childResult=match(child1,child2);
      if (!childResult.isCorrectMatch()) {
        return MatchResult.FALSE;
      }
 else {
        result.addEquations(childResult);
      }
    }
  }
  return result;
}
