{
  Language language=new Language();
  LanguageDescriptor languageDescriptor;
  if (descriptorFile.exists()) {
    languageDescriptor=LanguageDescriptorPersistence.loadLanguageDescriptor(descriptorFile);
    if (languageDescriptor.getUUID() == null) {
      languageDescriptor.setUUID(UUID.randomUUID().toString());
      LanguageDescriptorPersistence.saveLanguageDescriptor(descriptorFile,languageDescriptor);
    }
  }
 else {
    languageDescriptor=createNewDescriptor(namespace,descriptorFile);
  }
  language.myDescriptorFile=descriptorFile;
  MPSModuleRepository repository=MPSModuleRepository.getInstance();
  if (repository.existsModule(languageDescriptor.getModuleReference())) {
    LOG.error("Loading module " + languageDescriptor.getNamespace() + " for the second time");
    return repository.getLanguage(languageDescriptor.getModuleReference());
  }
  language.setLanguageDescriptor(languageDescriptor,false);
  repository.addModule(language,moduleOwner);
  if (language.myFirstLoad) {
    language.myFirstLoad=false;
    for (    StubSolution ss : languageDescriptor.getStubSolutions()) {
      SolutionDescriptor descriptor=new SolutionDescriptor();
      descriptor.setUUID(ss.getId().toString());
      descriptor.setNamespace(ss.getName());
      descriptor.setCompileInMPS(false);
      descriptor.setEnableJavaStubs(true);
      descriptor.setExternallyVisible(true);
      descriptor.setDontLoadClasses(true);
      Solution solution=Solution.newInstance(descriptor,language);
      language.myStubSolutions.add(solution);
    }
  }
  return language;
}
