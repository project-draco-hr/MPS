{
  if (myNamesLoadingState == ModelLoadingState.FULLY_LOADED)   return myNameToConceptCache.get(conceptName);
  if (myNameToConceptCache.containsKey(conceptName))   return myNameToConceptCache.get(conceptName);
  if (myNamesWithNoConcepts.contains(conceptName))   return null;
  SModelDescriptor structureModelDescriptor=getStructureModelDescriptor();
  if (structureModelDescriptor == null)   return null;
  SModel structureModel=structureModelDescriptor.getSModel();
  if (myNamesLoadingState.compareTo(ModelLoadingState.FULLY_LOADED) < 0) {
    for (    SNode root : structureModel.roots()) {
      if (root.getAdapter() instanceof AbstractConceptDeclaration) {
        myNameToConceptCache.putIfAbsent(root.getName(),(AbstractConceptDeclaration)root.getAdapter());
      }
    }
    if (myNameToConceptCache.containsKey(conceptName))     return myNameToConceptCache.get(conceptName);
  }
  for (  SNode node : structureModel.nodes()) {
    if (node.getAdapter() instanceof AbstractConceptDeclaration) {
      myNameToConceptCache.putIfAbsent(node.getName(),(AbstractConceptDeclaration)node.getAdapter());
    }
  }
  AbstractConceptDeclaration result=myNameToConceptCache.get(conceptName);
  if (result == null) {
    myNamesWithNoConcepts.add(conceptName);
  }
  return result;
}
