{
  super.updatePackagedDescriptorClasspath();
  if (!isPackaged())   return;
  if (myLanguageDescriptor != null) {
    Set<StubModelsEntry> visited=new HashSet<StubModelsEntry>();
    List<StubModelsEntry> remove=new ArrayList<StubModelsEntry>();
    for (    StubModelsEntry entry : myLanguageDescriptor.getRuntimeStubModels()) {
      IFile cp=FileSystem.getInstance().getFileByPath(entry.getPath());
      if ((!cp.exists()) || cp.isDirectory() || visited.contains(entry)) {
        remove.add(entry);
      }
      visited.add(entry);
    }
    myLanguageDescriptor.getRuntimeStubModels().removeAll(remove);
    IFile bundleParent=getBundleHome().getParent();
    String jarName=getModuleFqName() + "." + MPSExtentions.RUNTIME_ARCH;
    IFile jarFile=bundleParent.child(jarName);
    String path=jarFile.getAbsolutePath();
    StubModelsEntry tmp=new StubModelsEntry();
    tmp.setPath(path);
    tmp.setManager(LanguageID.JAVA_MANAGER);
    if (jarFile.exists() && !visited.contains(tmp)) {
      ClassPathEntry runtimeJar=new ClassPathEntry();
      runtimeJar.setPath(path);
      myLanguageDescriptor.getRuntimeStubModels().add(StubModelsEntry.fromClassPathEntry(runtimeJar));
    }
  }
}
