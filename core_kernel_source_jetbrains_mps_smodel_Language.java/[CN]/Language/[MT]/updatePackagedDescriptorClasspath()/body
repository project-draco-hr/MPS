{
  super.updatePackagedDescriptorClasspath();
  if (!isPackaged())   return;
  if (myLanguageDescriptor != null) {
    IFile bundleParent=getBundleHome().getParent();
    String jarName=getModuleFqName() + "." + MPSExtentions.RUNTIME_ARCH;
    IFile bundleHomeFile=bundleParent.getDescendant(jarName);
    if (!bundleHomeFile.exists())     return;
    boolean hasClasspath=false, skipClasspath=false;
    List<ModelRoot> remove=new ArrayList<ModelRoot>();
    for (    ModelRoot entry : myLanguageDescriptor.getRuntimeStubModels()) {
      String path=entry.getPath();
      if (path.endsWith(".jar")) {
        IFile cp=FileSystem.getInstance().getFileByPath(path);
        if (!cp.exists()) {
          entry.setPath(bundleHomeFile.getPath() + "!/" + cp.getName());
        }
 else         if (bundleHomeFile.equals(cp)) {
          skipClasspath=true;
        }
      }
 else {
        hasClasspath=true;
        remove.add(entry);
      }
    }
    myLanguageDescriptor.getRuntimeStubModels().removeAll(remove);
    if (hasClasspath && !skipClasspath) {
      ClassPathEntry bundleHome=new ClassPathEntry();
      bundleHome.setPath(bundleHomeFile.getPath());
      myLanguageDescriptor.getRuntimeStubModels().add(jetbrains.mps.project.structure.model.ModelRootUtil.fromClassPathEntry(bundleHome));
    }
  }
}
