{
  this.addNodeById("4412735672778826495");
  this.addNodeById("4412735672778826537");
  InlineMethodRefactoring ref=new InlineMethodRefactoring(SNodeOperations.cast(this.getNodeById("4412735672778826530"),"jetbrains.mps.baseLanguage.structure.LocalMethodCall"));
  ref.doRefactor();
  Assert.assertNull("nodes '" + SNodeOperations.cast(this.getNodeById("4412735672778826503"),"jetbrains.mps.baseLanguage.structure.ClassConcept") + "' and '"+ SNodeOperations.cast(this.getNodeById("4412735672778826549"),"jetbrains.mps.baseLanguage.structure.ClassConcept")+ "' do not match!",NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("4412735672778826503"),"jetbrains.mps.baseLanguage.structure.ClassConcept")),ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("4412735672778826549"),"jetbrains.mps.baseLanguage.structure.ClassConcept"))));
}
