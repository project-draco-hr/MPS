{
  if ("jetbrains.mps.make.facet.structure.IFacet".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.make.facet.structure.IFacet"));
  }
  if ("jetbrains.mps.make.facet.structure.FacetDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new FacetDeclaration_Constraints());
  }
  if ("jetbrains.mps.make.facet.structure.TargetDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new TargetDeclaration_Constraints());
  }
  if ("jetbrains.mps.make.facet.structure.TargetDependency".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new TargetDependency_Constraints());
  }
  if ("jetbrains.mps.make.facet.structure.FacetReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new FacetReference_Constraints());
  }
  if ("jetbrains.mps.make.facet.structure.ExtendsFacetReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ExtendsFacetReference_Constraints());
  }
  if ("jetbrains.mps.make.facet.structure.RelatedFacetReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new RelatedFacetReference_Constraints());
  }
  if ("jetbrains.mps.make.facet.structure.ParametersDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.make.facet.structure.ParametersDeclaration"));
  }
  if ("jetbrains.mps.make.facet.structure.LocalParametersExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.make.facet.structure.LocalParametersExpression"));
  }
  if ("jetbrains.mps.make.facet.structure.LocalParametersComponentExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.make.facet.structure.LocalParametersComponentExpression"));
  }
  if ("jetbrains.mps.make.facet.structure.ForeignParametersExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ForeignParametersExpression_Constraints());
  }
  if ("jetbrains.mps.make.facet.structure.ForeignParametersComponentExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.make.facet.structure.ForeignParametersComponentExpression"));
  }
  if ("jetbrains.mps.make.facet.structure.ResourceTypeDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ResourceTypeDeclaration_Constraints());
  }
  if ("jetbrains.mps.make.facet.structure.ResourceClassifierType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ResourceClassifierType_Constraints());
  }
  return null;
}
