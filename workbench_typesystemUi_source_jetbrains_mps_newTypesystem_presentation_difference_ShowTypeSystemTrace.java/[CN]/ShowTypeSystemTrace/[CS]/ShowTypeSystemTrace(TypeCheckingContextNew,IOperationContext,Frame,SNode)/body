{
  super(frame);
  this.setLayout(new BorderLayout());
  this.getContentPane().setBackground(this.getBackground());
  myTree=new TypeSystemTraceTree(operationContext,t,frame,node);
  JScrollPane scrollPane=new JScrollPane(myTree);
  scrollPane.setBackground(this.getBackground());
  this.add(scrollPane,BorderLayout.CENTER);
  JPanel checkBoxes=new JPanel();
  checkBoxes.setLayout(new FlowLayout());
  this.add(checkBoxes,BorderLayout.SOUTH);
  myBlockDependencies=new Checkbox("Block dependencies");
  myBlockDependencies.setState(myTree.isShowDependencyOperations());
  myTraceForNode=new Checkbox("Trace for selected node");
  myGenerationMode=new Checkbox("Generation mode");
  checkBoxes.add(myBlockDependencies);
  checkBoxes.add(myTraceForNode);
  checkBoxes.add(myGenerationMode);
  CheckBoxListener listener=new CheckBoxListener();
  myBlockDependencies.addItemListener(listener);
  myTraceForNode.addItemListener(listener);
  myGenerationMode.addItemListener(listener);
  myTree.setBackground(getBackground());
  myTree.setForeground(new Color(0x07025D));
  this.setPreferredSize(new Dimension(500,900));
  String title="TypeSystem trace";
  if (myTree.isTraceForNode() && node != null) {
    title=title.concat(" for selected node (" + node + ")");
  }
  setTitle(title);
  this.pack();
  this.setModal(true);
  this.setVisible(true);
}
