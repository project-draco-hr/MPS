{
  FastNodeFinder fnf=FastNodeFinderManager.get(model);
  processTemplateNodeAttribute(fnf.getNodes(RuleUtil.concept_TemplateFragment,false));
  processTemplateNodeAttribute(fnf.getNodes(RuleUtil.concept_RootTemplateAnnotation,false));
  final NodeScanner ns=new NodeScanner(new MacroFilter());
  for (  SNode rc : fnf.getNodes(RuleUtil.concept_InlineTemplate_RuleConsequence,false)) {
    SNode templateNode=RuleUtil.getInlineTemplate_templateNode(rc);
    ns.scan(templateNode);
  }
  myTargetLanguages.addAll(ns.getUsedLanguages());
  processQueryNodes(fnf.getNodes(RuleUtil.concept_TemplateQueryBase,true));
  return this;
}
