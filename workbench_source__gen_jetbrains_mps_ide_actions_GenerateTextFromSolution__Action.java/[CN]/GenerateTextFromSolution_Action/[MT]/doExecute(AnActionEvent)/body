{
  try {
    final Wrappers._T<GenParameters> params=new Wrappers._T<GenParameters>(null);
    final Wrappers._T<String> exceptionMsg=new Wrappers._T<String>(null);
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        ModuleTestConfiguration conf=new ModuleTestConfiguration();
        conf.setModuleRef(GenerateTextFromSolution_Action.this.module.getModuleReference());
        conf.setName("tmp");
        try {
          params.value=conf.getGenParams(GenerateTextFromSolution_Action.this.mpsProject,true);
        }
 catch (        IllegalGeneratorConfigurationException e) {
          exceptionMsg.value=e.getMessage();
        }
      }
    }
);
    if (exceptionMsg.value != null) {
      JOptionPane.showMessageDialog(GenerateTextFromSolution_Action.this.frame,exceptionMsg.value);
      return;
    }
    GeneratorManager manager=GenerateTextFromSolution_Action.this.context.getComponent(GeneratorManager.class);
    manager.generateModelsWithProgressWindow(params.value.getModelDescriptors(),GenerateTextFromSolution_Action.this.context,new OutputViewGenerationHandler(),false);
  }
 catch (  Throwable t) {
    if (log.isErrorEnabled()) {
      log.error("User's action execute method failed. Action:" + "GenerateTextFromSolution",t);
    }
  }
}
