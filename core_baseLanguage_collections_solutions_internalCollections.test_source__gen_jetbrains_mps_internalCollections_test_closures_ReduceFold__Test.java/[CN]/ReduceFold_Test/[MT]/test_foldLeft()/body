{
  Iterable<Integer> in=this.input10();
  String con=Sequence.fromIterable(in).foldLeft("",new ILeftCombinator<Integer,String>(){
    public String combine(    String s,    Integer it){
      return "" + s + it;
    }
  }
);
  Assert.assertEquals("12345678910",con);
  Iterable<Integer> single=Sequence.<Integer>singleton(42);
  Assert.assertEquals("bar42",Sequence.fromIterable(single).foldLeft("bar",new ILeftCombinator<Integer,String>(){
    public String combine(    String s,    Integer it){
      return "" + s + it;
    }
  }
));
  Iterable<Integer> empty=Sequence.fromIterable(Collections.<Integer>emptyList());
  Assert.assertEquals("ack",Sequence.fromIterable(empty).foldLeft("ack",new ILeftCombinator<Integer,String>(){
    public String combine(    String s,    Integer it){
      throw new RuntimeException();
    }
  }
));
}
