{
  Iterable<Integer> in=this.input10();
  String con=Sequence.fromIterable(in).foldRight("",new IRightCombinator<Integer,String>(){
    public String combine(    Integer it,    String s){
      return "" + it + s;
    }
  }
);
  Assert.assertEquals("10987654321",con);
  Iterable<Integer> single=Sequence.<Integer>singleton(42);
  Assert.assertEquals("bar42",Sequence.fromIterable(single).foldRight("bar",new IRightCombinator<Integer,String>(){
    public String combine(    Integer it,    String s){
      return s + it;
    }
  }
));
  Iterable<Integer> empty=Sequence.fromIterable(Collections.<Integer>emptyList());
  Assert.assertEquals("ack",Sequence.fromIterable(empty).foldRight("ack",new IRightCombinator<Integer,String>(){
    public String combine(    Integer it,    String s){
      throw new RuntimeException();
    }
  }
));
}
