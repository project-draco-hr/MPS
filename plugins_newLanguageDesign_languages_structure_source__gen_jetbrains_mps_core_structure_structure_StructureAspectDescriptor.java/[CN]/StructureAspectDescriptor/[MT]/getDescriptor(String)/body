{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SAbstractConcept").super_("jetbrains.mps.core.structure.structure.SStructureElement").parents("jetbrains.mps.core.structure.structure.SStructureElement","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.ScopeProvider").children(new String[]{"annotations","members"},new boolean[]{true,true}).abstract_().create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SAbstractLink").super_("jetbrains.mps.core.structure.structure.SConceptFeature").parents("jetbrains.mps.core.structure.structure.SConceptFeature").references("target").children(new String[]{"cardinality","constraints"},new boolean[]{false,false}).abstract_().create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SCardinality").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").properties("isRequired","isMultiple").final_().create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SCardinalityContainer").interface_().create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SChildLink").super_("jetbrains.mps.core.structure.structure.SAbstractLink").parents("jetbrains.mps.core.structure.structure.SAbstractLink","jetbrains.mps.core.structure.structure.SCardinalityContainer").final_().create();
case 5:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SConcept").super_("jetbrains.mps.core.structure.structure.SAbstractConcept").parents("jetbrains.mps.core.structure.structure.SAbstractConcept").properties("isAbstract","isFinal","canBeRoot").references("extends").children(new String[]{"implements"},new boolean[]{true}).final_().alias("concept","").create();
case 6:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SConceptAnnotation").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
case 7:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SConceptFeature").super_("jetbrains.mps.core.structure.structure.SConceptMember").parents("jetbrains.mps.core.structure.structure.SConceptMember","jetbrains.mps.lang.core.structure.INamedConcept").abstract_().create();
case 8:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SConceptMember").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
case 9:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SConceptMemberComment").super_("jetbrains.mps.core.structure.structure.SConceptMember").parents("jetbrains.mps.core.structure.structure.SConceptMember").properties("comment").final_().alias("#","").create();
case 10:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SConceptMemberEmptyLine").super_("jetbrains.mps.core.structure.structure.SConceptMember").parents("jetbrains.mps.core.structure.structure.SConceptMember").alias("<empty>","").create();
case 11:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SConstraints").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"parts"},new boolean[]{true}).final_().create();
case 12:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SConstraintsPart").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
case 13:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SConstraintsPartComment").super_("jetbrains.mps.core.structure.structure.SConstraintsPart").parents("jetbrains.mps.core.structure.structure.SConstraintsPart").properties("comment").final_().alias("#","comment").create();
case 14:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SConstraintsPartEmptyLine").super_("jetbrains.mps.core.structure.structure.SConstraintsPart").parents("jetbrains.mps.core.structure.structure.SConstraintsPart").final_().alias("<empty>","").create();
case 15:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SDataType").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
case 16:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SEnumeration").super_("jetbrains.mps.core.structure.structure.SStructureElement").parents("jetbrains.mps.core.structure.structure.SStructureElement","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.ScopeProvider").references("default").children(new String[]{"members"},new boolean[]{true}).final_().alias("enum","").create();
case 17:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SEnumerationDataType").super_("jetbrains.mps.core.structure.structure.SDataType").parents("jetbrains.mps.core.structure.structure.SDataType").references("enum").final_().create();
case 18:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SEnumerationMember").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").create();
case 19:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SInterfaceConcept").super_("jetbrains.mps.core.structure.structure.SAbstractConcept").parents("jetbrains.mps.core.structure.structure.SAbstractConcept").children(new String[]{"extends"},new boolean[]{true}).final_().alias("interface concept","").create();
case 20:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SInterfaceReference").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("target").final_().create();
case 21:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SPrimitiveDataType").super_("jetbrains.mps.core.structure.structure.SDataType").parents("jetbrains.mps.core.structure.structure.SDataType","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").properties("kind").final_().create();
case 22:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SProperty").super_("jetbrains.mps.core.structure.structure.SConceptFeature").parents("jetbrains.mps.core.structure.structure.SConceptFeature","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").children(new String[]{"type","constraints"},new boolean[]{false,false}).final_().create();
case 23:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SReference").super_("jetbrains.mps.core.structure.structure.SAbstractLink").parents("jetbrains.mps.core.structure.structure.SAbstractLink").final_().alias("ref","model reference").create();
case 24:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SStructureComment").super_("jetbrains.mps.core.structure.structure.SStructurePart").parents("jetbrains.mps.core.structure.structure.SStructurePart").properties("comment").final_().alias("#","").create();
case 25:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SStructureContainer").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.ScopeProvider").children(new String[]{"structure"},new boolean[]{true}).final_().alias("language aspect","").create();
case 26:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SStructureElement").super_("jetbrains.mps.core.structure.structure.SStructurePart").parents("jetbrains.mps.core.structure.structure.SStructurePart","jetbrains.mps.lang.core.structure.INamedConcept").abstract_().create();
case 27:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SStructureEmptyLine").super_("jetbrains.mps.core.structure.structure.SStructurePart").parents("jetbrains.mps.core.structure.structure.SStructurePart").final_().alias("<empty>","").create();
case 28:
return new ConceptDescriptorBuilder("jetbrains.mps.core.structure.structure.SStructurePart").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
