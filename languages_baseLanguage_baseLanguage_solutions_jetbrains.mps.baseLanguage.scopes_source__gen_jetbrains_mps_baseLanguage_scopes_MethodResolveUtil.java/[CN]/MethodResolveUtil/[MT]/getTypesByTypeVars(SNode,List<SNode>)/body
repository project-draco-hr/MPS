{
  Map<SNode,SNode> typeByTypeVar=MapSequence.fromMap(new HashMap<SNode,SNode>());
  for (  IMapping<SNode,SNode> elem : MapSequence.fromMap(ClassifierScopeUtils.resolveClassifierTypeVars(classifier))) {
    typeByTypeVar.put(elem.key(),elem.value());
  }
  Iterator<SNode> typeParms=ListSequence.fromList(typeParameters).iterator();
  for (  SNode typeVar : ListSequence.fromList(SLinkOperations.getTargets(classifier,"typeVariableDeclaration",true))) {
    if (!(typeParms.hasNext())) {
      break;
    }
    SNode typeParm=SNodeOperations.as(typeParms.next(),"jetbrains.mps.baseLanguage.structure.Type");
    if ((typeParm == null) || SLinkOperations.getTarget(SNodeOperations.as(typeParm,"jetbrains.mps.baseLanguage.structure.TypeVariableReference"),"typeVariableDeclaration",false) == typeVar) {
      continue;
    }
    MapSequence.fromMap(typeByTypeVar).put(typeVar,SNodeOperations.cast(typeParm,"jetbrains.mps.baseLanguage.structure.Type"));
  }
  return typeByTypeVar;
}
