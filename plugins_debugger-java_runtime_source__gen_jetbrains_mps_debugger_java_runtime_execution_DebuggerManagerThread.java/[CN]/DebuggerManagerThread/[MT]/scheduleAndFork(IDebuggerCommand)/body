{
  if (myCommandQueue.isClosed()) {
    command.notifyCancelled();
  }
 else {
    scheduleInternal(new CommandWrapper(command){
      @Override public void run() throws Exception {
        startNewWorkerThread();
        try {
          super.run();
        }
  finally {
          final DebuggerManagerThread.WorkerThread thread=(DebuggerManagerThread.WorkerThread)Thread.currentThread();
          invokeAndWaitInternal(new DebuggerCommand(){
            protected void action() throws Exception {
              switchToThread(thread);
            }
            @Override protected void commandCancelled(){
              thread.interrupt();
            }
          }
);
        }
      }
    }
);
  }
}
