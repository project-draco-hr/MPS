{
  final IDebuggerCommand currentCommand=myCommandQueue.getCurrentCommand();
  if (DebuggerManagerThread.isManagerThread()) {
    processCommand(command);
  }
 else {
    scheduleFirst(command);
  }
  Alarm alarm=new Alarm(Alarm.ThreadToUse.SHARED_THREAD);
  alarm.addRequest(new Runnable(){
    @Override public void run(){
      if (myCommandQueue.getCurrentCommand() == currentCommand) {
        myWorkerThread.interrupt();
        startNewWorkerThread();
      }
    }
  }
,IDebuggerManagerThread.COMMAND_TIMEOUT);
}
