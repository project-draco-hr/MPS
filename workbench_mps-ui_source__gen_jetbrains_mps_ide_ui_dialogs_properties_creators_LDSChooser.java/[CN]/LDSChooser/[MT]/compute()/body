{
  final Wrappers._T<List<SModuleReference>> refs=new Wrappers._T<List<SModuleReference>>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      Collection<SModule> modules=ModuleRepositoryFacade.getInstance().getAllModules(SModule.class);
      refs.value=CollectionSequence.fromCollection(modules).where(new IWhereFilter<SModule>(){
        public boolean accept(        SModule it){
          return VisibleModuleRegistry.getInstance().isVisible(it);
        }
      }
).select(new ISelector<SModule,SModuleReference>(){
        public SModuleReference select(        SModule lang){
          return lang.getModuleReference();
        }
      }
).toListSequence();
    }
  }
);
  return CommonChoosers.showDialogModuleCollectionChooser(null,"DevKit contents",refs.value,null);
}
