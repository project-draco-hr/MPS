{
  Font font=UIUtil.getLabelFont();
  FontMetrics fontMetrics=myTabComponent.getComponent().getFontMetrics(font);
  Icon icon=myDescriptor.getIcon();
  Dimension size=new Dimension(ActionToolbar.DEFAULT_MINIMUM_BUTTON_SIZE);
  size.width-=4;
  size.height-=4;
  if (icon != null && (icon.getIconWidth() > size.width && icon.getIconHeight() > size.height)) {
    size.width=icon.getIconWidth();
    size.height=icon.getIconHeight();
  }
  String text=myDescriptor.getTitle();
  int textWidth=fontMetrics.stringWidth(text);
  int textHeight=fontMetrics.getMaxAscent() + fontMetrics.getMaxDescent();
  size.width+=2 + textWidth;
  BufferedImage image=UIUtil.createImage(size.width,size.height,BufferedImage.TYPE_INT_ARGB);
  Graphics g=image.getGraphics();
  int textX=0;
  int textY=(size.height - textHeight) / 2 + fontMetrics.getMaxAscent();
  if (icon != null) {
    int x=(size.width - icon.getIconWidth() - textWidth) / 2;
    int y=(size.height - icon.getIconHeight()) / 2;
    icon.paintIcon(null,g,x,y);
    textX=x + icon.getIconWidth() + 2;
  }
  UIUtil.applyRenderingHints(g);
  Color color=getButtonForegroundColor();
  if (color != null) {
    g.setColor(color);
  }
  g.setFont(font);
  g.drawString(text,textX,textY);
  Character shortcutChar=myDescriptor.getShortcutChar();
  if (shortcutChar != null) {
    final int mnemonicIndex=text.indexOf(shortcutChar);
    if (mnemonicIndex >= 0) {
      final char[] chars=text.toCharArray();
      final int startX=textX + fontMetrics.charsWidth(chars,0,mnemonicIndex);
      final int startY=textY + fontMetrics.getMaxDescent();
      final int endX=startX + fontMetrics.charWidth(text.charAt(mnemonicIndex));
      UIUtil.drawLine(g,startX,startY,endX,startY);
    }
  }
  return new ImageIcon(image);
}
