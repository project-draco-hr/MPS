{
  List<INodeSubstituteAction> result=ListSequence.fromList(new ArrayList<INodeSubstituteAction>());
{
    SNode concept=SConceptOperations.findConceptDeclaration("jetbrains.mps.template.structure.MtlBuilder");
    ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(concept,_context.getSourceNode()){
      public SNode doSubstitute(      String pattern){
        return SNodeFactoryOperations.setNewChild(_context.getSourceNode(),"contextNode","jetbrains.mps.query.structure.MqlNodeType");
      }
      public String getMatchingText(      String pattern){
        return "::";
      }
      public String getVisibleMatchingText(      String pattern){
        return this.getMatchingText(pattern);
      }
      public String getDescriptionText(      String pattern){
        return "add context node";
      }
    }
);
  }
  return result;
}
