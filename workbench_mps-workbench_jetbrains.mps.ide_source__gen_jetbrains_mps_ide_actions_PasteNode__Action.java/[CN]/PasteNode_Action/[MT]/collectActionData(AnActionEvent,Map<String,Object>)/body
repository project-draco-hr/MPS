{
  if (!(super.collectActionData(event,_params))) {
    return false;
  }
{
    MPSProject p=event.getData(MPSCommonDataKeys.MPS_PROJECT);
    MapSequence.fromMap(_params).put("project",p);
    if (p == null) {
      return false;
    }
  }
{
    EditorComponent editorComponent=event.getData(MPSEditorDataKeys.EDITOR_COMPONENT);
    if (editorComponent != null && editorComponent.isInvalid()) {
      editorComponent=null;
    }
    MapSequence.fromMap(_params).put("editorComponent",editorComponent);
  }
{
    IOperationContext p=event.getData(MPSCommonDataKeys.OPERATION_CONTEXT);
    MapSequence.fromMap(_params).put("context",p);
    if (p == null) {
      return false;
    }
  }
{
    SModel p=event.getData(MPSCommonDataKeys.CONTEXT_MODEL);
    MapSequence.fromMap(_params).put("contextModel",p);
    if (p == null) {
      return false;
    }
    if (!(p instanceof EditableSModel) || ((EditableSModel)p).isReadOnly()) {
      return false;
    }
  }
{
    SNode p=event.getData(MPSCommonDataKeys.NODE);
    MapSequence.fromMap(_params).put("node",p);
  }
{
    List<Pair<SModel,String>> p=event.getData(MPSDataKeys.VIRTUAL_PACKAGES);
    MapSequence.fromMap(_params).put("packs",p);
    if (p == null) {
      return false;
    }
  }
  return true;
}
