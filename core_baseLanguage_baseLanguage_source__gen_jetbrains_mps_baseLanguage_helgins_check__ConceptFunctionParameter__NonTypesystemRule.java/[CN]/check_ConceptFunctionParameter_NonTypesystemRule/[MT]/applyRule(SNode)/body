{
  SNode conceptFunction=SNodeOperations.getAncestor(parameter,"jetbrains.mps.baseLanguage.structure.ConceptFunction",false,false);
  if (SNodeOperations.isInstanceOf(conceptFunction,"jetbrains.mps.baseLanguage.structure.Closure")) {
    TypeChecker.getInstance().reportTypeError(parameter,"concept function parameter can not be used in closure","jetbrains.mps.baseLanguage.helgins","1197313614703");
  }
 else {
    final SNode parameterConcept=SNodeOperations.getConceptDeclaration(parameter);
    Iterable<SNode> seq=ListSequence.fromList(ConceptFunction_Behavior.call_getParameters_1197312191473(conceptFunction)).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SConceptOperations.isSubConceptOf(parameterConcept,NameUtil.nodeFQName(it));
      }
    }
);
    if (Sequence.fromIterable(seq).isEmpty()) {
      TypeChecker.getInstance().reportTypeError(parameter,"not applicable in this context","jetbrains.mps.baseLanguage.helgins","1197313958459");
    }
  }
}
