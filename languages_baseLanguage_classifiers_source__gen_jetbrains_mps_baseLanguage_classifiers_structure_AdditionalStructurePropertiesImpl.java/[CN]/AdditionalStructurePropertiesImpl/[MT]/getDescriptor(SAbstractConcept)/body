{
{
    SAbstractConcept cncpt=c;
    Integer preIndex=indices_4qogsf_a0o.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return props_BaseClassifierType;
      }
    break;
case 1:
  if (true) {
    return props_DefaultClassifier;
  }
break;
case 2:
if (true) {
return props_DefaultClassifierFieldAccessOperation;
}
break;
case 3:
if (true) {
return props_DefaultClassifierFieldDeclaration;
}
break;
case 4:
if (true) {
return props_DefaultClassifierMethodCallOperation;
}
break;
case 5:
if (true) {
return props_DefaultClassifierMethodDeclaration;
}
break;
case 6:
if (true) {
return props_DefaultClassifierType;
}
break;
case 7:
if (true) {
return props_IClassifier;
}
break;
case 8:
if (true) {
return props_IClassifierPart;
}
break;
case 9:
if (true) {
return props_IMember;
}
break;
case 10:
if (true) {
return props_IMemberOperation;
}
break;
case 11:
if (true) {
return props_SuperClassifierExpresson;
}
break;
case 12:
if (true) {
return props_ThisClassifierExpression;
}
break;
default :
}
}
throw new IllegalStateException();
}
