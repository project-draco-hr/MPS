{
  return new _FunctionTypes._return_P0_E0<ISetSequence<SNode>>(){
    public ISetSequence<SNode> invoke(){
      final Set<SNode> s=SetSequence.fromSetAndArray(new LinkedHashSet<SNode>(),thisNode,SLinkOperations.getTarget(thisNode,"child",true));
      final Set<SNode> s2=SetSequence.fromSetWithValues(new LinkedHashSet<SNode>(),SetSequence.fromSet(s).intersect(SetSequence.fromSet(s)));
      final Set<SNode> s3=SetSequence.fromSetWithValues(new LinkedHashSet<SNode>(),SetSequence.fromSet(s2).disjunction(SetSequence.fromSet(s2)));
      final Set<SNode> s4=SetSequence.fromSetWithValues(new LinkedHashSet<SNode>(),SetSequence.fromSet(s3).union(Sequence.fromIterable(Sequence.<SNode>singleton(null))));
      return SetSequence.fromSetWithValues(new LinkedHashSet<SNode>(),SetSequence.fromSet(s).union(SetSequence.fromSet(SetSequence.fromSetAndArray(new LinkedHashSet<SNode>(),SLinkOperations.getTarget(thisNode,"z",true),SLinkOperations.getTarget(SLinkOperations.getTarget(thisNode,"z",true),"z",true)))));
    }
  }
.invoke();
}
