{
  SearchResults searchResults=new SearchResults();
  for (  SNode selNode : ListSequence.fromList(refactoringContext.getSelectedNodes())) {
    searchResults.addAll(FindUtils.getSearchResults(new EmptyProgressMonitor(),selNode,GlobalScope.getInstance(),"jetbrains.mps.lang.structure.findUsages.ConceptInstances_Finder","jetbrains.mps.lang.structure.findUsages.NodeAndDescendantsUsages_Finder"));
  }
  Map<LanguageAspect,List<SNode>> aspectNodes=ConceptMoveUtil.getAspectNodes(((Language)refactoringContext.getParameter("sourceLanguage")),refactoringContext.getSelectedNodes());
  for (  SNode node : Sequence.fromIterable(MapSequence.fromMap(aspectNodes).values()).translate(new ITranslator2<List<SNode>,SNode>(){
    public Iterable<SNode> translate(    List<SNode> it){
      return it;
    }
  }
)) {
    searchResults.addAll(FindUtils.getSearchResults(new EmptyProgressMonitor(),node,GlobalScope.getInstance(),"jetbrains.mps.lang.structure.findUsages.NodeAndDescendantsUsages_Finder"));
  }
  return searchResults;
}
