{
  super("Migrate NodeCheckOperationsContainer to NodeOperationsContainer");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Migrate NodeCheckOperationsContainer to NodeOperationsContainer";
    }
    public String getAdditionalInfo(){
      return "Migrate NodeCheckOperationsContainer to NodeOperationsContainer";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.test.structure.NodeCheckOperationsContainer";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return true;
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode parent=SNodeOperations.getParent(node);
      SNode newAnnotation=SConceptOperations.createNewNode("jetbrains.mps.lang.test.structure.NodeOperationsContainer",null);
      ListSequence.fromList(SLinkOperations.getTargets(newAnnotation,"nodeOperations",true)).addSequence(ListSequence.fromList(SLinkOperations.getTargets(node,"nodeCheckOperations",true)));
      AttributeOperations.setAttribute(parent,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.lang.test.structure.NodeOperationsContainer"),newAnnotation);
      AttributeOperations.setAttribute(parent,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.lang.test.structure.NodeCheckOperationsContainer"),null);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
