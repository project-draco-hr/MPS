{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_2qnle6_a0c.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return new BuildAspect_Constraints();
      }
    break;
case 1:
  if (true) {
    return new BuildExternalLayout_Constraints();
  }
break;
case 2:
if (true) {
return new BuildExternalLayoutDependency_Constraints();
}
break;
case 3:
if (true) {
return new BuildLayout_Constraints();
}
break;
case 4:
if (true) {
return new BuildLayout_CompileOutputOf_Constraints();
}
break;
case 5:
if (true) {
return new BuildLayout_File_Constraints();
}
break;
case 6:
if (true) {
return new BuildLayout_FileStub_Constraints();
}
break;
case 7:
if (true) {
return new BuildLayout_Filemode_Constraints();
}
break;
case 8:
if (true) {
return new BuildLayout_FilesOf_Constraints();
}
break;
case 9:
if (true) {
return new BuildLayout_Import_Constraints();
}
break;
case 10:
if (true) {
return new BuildLayout_ImportContent_Constraints();
}
break;
case 11:
if (true) {
return new BuildLayout_JarManifest_Constraints();
}
break;
case 12:
if (true) {
return new BuildLayout_JarManifest_Section_Constraints();
}
break;
case 13:
if (true) {
return new BuildLayout_NamedContainer_Constraints();
}
break;
case 14:
if (true) {
return new BuildProjectDependency_Constraints();
}
break;
case 15:
if (true) {
return new BuildSourceMacroRelativePath_Constraints();
}
break;
case 16:
if (true) {
return new BuildSourcePath_Constraints();
}
break;
case 17:
if (true) {
return new BuildSource_JavaClassFolder_Constraints();
}
break;
case 18:
if (true) {
return new BuildSource_JavaDependencyLibrary_Constraints();
}
break;
case 19:
if (true) {
return new BuildSource_JavaExternalJarFolderRef_Constraints();
}
break;
case 20:
if (true) {
return new BuildSource_JavaExternalJarRef_Constraints();
}
break;
case 21:
if (true) {
return new BuildSource_JavaLibrary_Constraints();
}
break;
case 22:
if (true) {
return new BuildSource_JavaModule_Constraints();
}
break;
case 23:
if (true) {
return new BuildSource_JavaModuleOptions_Constraints();
}
break;
case 24:
if (true) {
return new BuildSource_JavaOptions_Constraints();
}
break;
case 25:
if (true) {
return new BuildSource_JavaSources_Constraints();
}
break;
case 26:
if (true) {
return new BuildStringPart_Constraints();
}
break;
case 27:
if (true) {
return new BuildTextStringPart_Constraints();
}
break;
case 28:
if (true) {
return new BuildVarRefStringPart_Constraints();
}
break;
case 29:
if (true) {
return new BuildVariableMacro_Constraints();
}
break;
case 30:
if (true) {
return new BuildVariableMacroInitValue_Constraints();
}
break;
case 31:
if (true) {
return new BuildVariableMacroInitWithDate_Constraints();
}
break;
default :
}
}
return new BaseConstraintsDescriptor(concept);
}
