{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("declaration",new BaseReferenceConstraintsDescriptor("declaration",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_tpbdkp_a0a0a0a0a1a0b0a1a3;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          if (SNodeOperations.isInstanceOf(_context.getEnclosingNode(),"jetbrains.mps.console.blCommand.structure.CallActionExpression")) {
            return new NamedElementsScope(ListSequence.fromList(SNodeOperations.getChildren(SLinkOperations.getTarget(SNodeOperations.cast(_context.getEnclosingNode(),"jetbrains.mps.console.blCommand.structure.CallActionExpression"),"action",false))).where(new IWhereFilter<SNode>(){
              public boolean accept(              SNode it){
                return SNodeOperations.isInstanceOf(it,"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration");
              }
            }
).select(new ISelector<SNode,SNode>(){
              public SNode select(              SNode it){
                return SNodeOperations.cast(it,"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration");
              }
            }
));
          }
          return null;
        }
      }
;
    }
  }
);
  return references;
}
