{
  Statistics.clearAll();
  if (!checkGenerationStep(generationStepController)) {
    throw new GenerationCanceledException();
  }
  GenerationStatus status;
  boolean wasErrors=false;
  boolean wasWarnings=false;
  int stepCount=1;
  SModelDescriptor currInputModel=inputModel;
  while (true) {
    addMessage(new Message(MessageKind.INFORMATION,"execute step " + (stepCount++)));
    status=generateModel_internal(currInputModel.getSModel(),targetLanguage,generationStepController);
    wasErrors|=status.isError();
    wasWarnings|=status.hasWarnings();
    if (status.isCanceled()) {
      break;
    }
    if (!generationStepController.advanceStep()) {
      break;
    }
    if (generationStepController.getCurrentMappings().isEmpty()) {
      break;
    }
    if (status.getOutputModel() == null) {
      break;
    }
    currInputModel=status.getOutputModel().getModelDescriptor();
  }
  return new GenerationStatus(status.getInputModel(),status.getOutputModel(),status.getTraceMap(),wasErrors,wasWarnings,status.isCanceled());
}
