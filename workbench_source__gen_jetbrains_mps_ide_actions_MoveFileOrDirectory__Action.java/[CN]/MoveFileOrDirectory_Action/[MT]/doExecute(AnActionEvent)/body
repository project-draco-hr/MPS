{
  try {
    String path=MoveFileOrDirectory_Action.this.selectedFile.getParent().getPath();
    MoveFileDialog dialog=new MoveFileDialog(MoveFileOrDirectory_Action.this.project,path,MoveFileOrDirectory_Action.this.selectedFile.isDirectory());
    dialog.show();
    if (!(dialog.isOK())) {
      return;
    }
    final String result=dialog.getResult();
    ModelAccess.instance().runWriteActionInCommand(new Runnable(){
      public void run(){
        try {
          if (MoveFileOrDirectory_Action.this.isNotValid(result)) {
            return;
          }
          VirtualFile virtualFile=VFileSystem.getFile(result);
          MoveFileOrDirectory_Action.this.selectedFile.move(null,virtualFile);
          ProjectView.getInstance(MoveFileOrDirectory_Action.this.project).refresh();
          SwingUtilities.invokeLater(new Runnable(){
            public void run(){
              ProjectView.getInstance(MoveFileOrDirectory_Action.this.project).getProjectViewPaneById(BaseDirectoryProjectView.ID).select(null,MoveFileOrDirectory_Action.this.selectedFile,true);
            }
          }
);
        }
 catch (        IOException e) {
        }
      }
    }
);
  }
 catch (  Throwable t) {
    if (log.isErrorEnabled()) {
      log.error("User's action execute method failed. Action:" + "MoveFileOrDirectory",t);
    }
  }
}
