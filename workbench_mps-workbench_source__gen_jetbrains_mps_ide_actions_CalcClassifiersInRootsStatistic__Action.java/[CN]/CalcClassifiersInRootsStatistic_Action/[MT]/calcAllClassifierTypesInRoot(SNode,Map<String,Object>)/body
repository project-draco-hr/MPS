{
  TypeCheckingContext context=TypeContextManager.getInstance().createTypeCheckingContext(rootNode);
  context.checkRoot();
  List<SNode> result=ListSequence.fromList(new ArrayList<SNode>());
  for (  SNode node : jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.getNodeDescendants(rootNode,MetaAdapterFactory.getConcept(new UUID(-3554657779850784990l,-7236703803128771572l),1133920641626l,"jetbrains.mps.lang.core.structure.BaseConcept"),true,new SConcept[]{})) {
    SNode type=context.typeOf(node);
    if (jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.isInstanceOf(type,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType"))) {
      ListSequence.fromList(result).addElement(jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.cast(type,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType")));
    }
  }
  context.dispose();
  return result;
}
