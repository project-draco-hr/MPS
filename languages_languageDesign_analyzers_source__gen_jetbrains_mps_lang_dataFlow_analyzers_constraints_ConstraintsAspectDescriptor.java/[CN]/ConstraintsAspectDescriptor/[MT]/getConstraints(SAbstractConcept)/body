{
  SAbstractConcept cncpt=concept;
switch (index_2qnle6_a0c.index(cncpt)) {
case 0:
    return new Analyzer_Constraints();
case 1:
  return new AnalyzerConstructorParameterReference_Constraints();
case 2:
return new AnalyzerRunnerAnalyzeOperation_Constraints();
case 3:
return new AnalyzerRunnerCreator_Constraints();
case 4:
return new ApplicableNodeReference_Constraints();
case 5:
return new ConceptCondition_Constraints();
case 6:
return new CustomInstructionsContainerReference_Constraints();
case 7:
return new InstructionReference_Constraints();
case 8:
return new IsOperation_Constraints();
case 9:
return new ProgramParameter_Constraints();
case 10:
return new Rule_Constraints();
default :
}
return new BaseConstraintsDescriptor(concept);
}
