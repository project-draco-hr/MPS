{
  List<SModelTreeNode> result=new ArrayList<SModelTreeNode>();
  List<SModelDescriptor> sortedModels=SortUtil.sortModels(models);
  Map<SModelDescriptor,SModelTreeNode> map=new LinkedHashMap<SModelDescriptor,SModelTreeNode>();
  for (  SModelDescriptor md : sortedModels) {
    SModelTreeNode treeNode=new SModelTreeNode(md,null,context,false){
      @Override public boolean isPackageLikeView(){
        return true;
      }
    }
;
    map.put(md,treeNode);
    result.add(treeNode);
  }
  for (  SModelTreeNode treeNode : map.values()) {
    List<SModelDescriptor> subfolderModels=treeNode.getSubfolderModels(map.keySet());
    for (    SModelDescriptor subfolderModel : subfolderModels) {
      result.remove(map.get(subfolderModel));
    }
    treeNode.addChildModels(sortedModels);
  }
  return result;
}
