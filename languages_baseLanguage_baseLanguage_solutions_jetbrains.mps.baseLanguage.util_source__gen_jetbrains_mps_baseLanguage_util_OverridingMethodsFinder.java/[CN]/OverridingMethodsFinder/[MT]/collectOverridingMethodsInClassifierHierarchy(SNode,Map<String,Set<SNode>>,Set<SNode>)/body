{
  if (SNodeOperations.isInstanceOf(classifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"))) {
    SNode clazz=SNodeOperations.cast(classifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    SNode superClass=((SLinkOperations.getTarget(clazz,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x10f6353296dL,"superclass")) != null) ? SLinkOperations.getTarget(SLinkOperations.getTarget(clazz,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x10f6353296dL,"superclass")),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")) : SNodeOperations.getNode("6354ebe7-c22a-4a0f-ac54-50b52ab9b065/f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)","~Object"));
    if (addIfNotContains(visitedClassifiers,superClass)) {
      collectOverridingMethods(classifier,superClass,nameToMethodsMap,visitedClassifiers);
    }
    ListSequence.fromList(SLinkOperations.getChildren(clazz,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0xff2ac0b419L,"implementedInterface"))).select(new ISelector<SNode,SNode>(){
      public SNode select(      SNode it){
        return SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier"));
      }
    }
).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return addIfNotContains(visitedClassifiers,it);
      }
    }
).visitAll(new IVisitor<SNode>(){
      public void visit(      SNode it){
        collectOverridingMethods(classifier,it,nameToMethodsMap,visitedClassifiers);
      }
    }
);
    if (SNodeOperations.isInstanceOf(classifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x1107e0cb103L,"jetbrains.mps.baseLanguage.structure.AnonymousClass"))) {
      SNode superClassifier=SLinkOperations.getTarget(SNodeOperations.cast(classifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x1107e0cb103L,"jetbrains.mps.baseLanguage.structure.AnonymousClass")),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x1107e0cb103L,0x1107e0fd2a0L,"classifier"));
      if (addIfNotContains(visitedClassifiers,superClassifier)) {
        collectOverridingMethods(classifier,superClassifier,nameToMethodsMap,visitedClassifiers);
      }
    }
  }
 else   if (SNodeOperations.isInstanceOf(classifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface"))) {
    ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(classifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,0x101eddadad7L,"extendedInterface"))).select(new ISelector<SNode,SNode>(){
      public SNode select(      SNode it){
        return SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier"));
      }
    }
).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return addIfNotContains(visitedClassifiers,it);
      }
    }
).visitAll(new IVisitor<SNode>(){
      public void visit(      SNode it){
        collectOverridingMethods(classifier,it,nameToMethodsMap,visitedClassifiers);
      }
    }
);
  }
}
