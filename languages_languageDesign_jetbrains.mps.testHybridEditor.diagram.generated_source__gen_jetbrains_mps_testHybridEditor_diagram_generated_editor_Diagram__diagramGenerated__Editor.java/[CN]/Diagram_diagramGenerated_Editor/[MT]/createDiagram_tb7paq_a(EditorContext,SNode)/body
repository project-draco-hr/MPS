{
  DiagramView view=new ConnectionRoutingView(new OrthogonalRouter());
  DiagramViewCell editorCell=DiagramViewCell.createViewCell(editorContext,node,view);
  EditorCell_Collection blockCollection=jetbrains.mps.nodeEditor.cells.EditorCell_Collection.createIndent2(editorContext,node);
  for (  SNode blockNode : ListSequence.fromList(SLinkOperations.getTargets(node,"blocks",true))) {
    GenericViewCell blockCell=(GenericViewCell)editorContext.createNodeCell(blockNode);
    View blockView=blockCell.getView();
    blockCollection.addEditorCell(blockCell);
    View oldParent=blockView.parent();
    if (oldParent != null) {
      oldParent.children().remove(oldParent.children().indexOf(blockView));
    }
    view.itemsView.children().add(blockView);
  }
  editorCell.addEditorCell(blockCollection);
  for (  SNode connectorNode : ListSequence.fromList(SLinkOperations.getTargets(node,"connectors",true))) {
    final ConnectorViewCell connectorCell=(ConnectorViewCell)(editorContext.createNodeCell(connectorNode));
    connectorCell.removeAllCells();
    View connectorView=connectorCell.getView();
    View fromView=connectorCell.getOutputView(editorCell);
    View toView=connectorCell.getInputView(editorCell);
    if (fromView != null && toView != null) {
      PolylineConnection connection=connectorCell.getConnection();
      if (connectorView.parent() != null) {
        connectorView.parent().children().remove(connectorView.parent().children().indexOf(connectorView));
      }
      connection.view().invalidate();
      connection.toView().set(toView);
      connection.fromView().set(fromView);
      view.connections.add(connection);
      for (      LineView line : ListSequence.fromList(connection.getLines())) {
        connectorCell.addEditorCell(GenericViewCell.createViewCell(editorContext,connectorNode,line));
      }
      editorCell.addEditorCell(connectorCell);
    }
  }
  editorCell.setCellId("Diagram_tb7paq_a");
  editorCell.setBig(true);
  return editorCell;
}
