{
  if (!(node.getConcept().isValid())) {
    return IdeIcons.UNKNOWN_ICON;
  }
  boolean withoutAdditional=false;
  Icon mainIcon=null;
  SNode concept=SNodeOperations.asNode(SNodeOperations.getConcept(node));
  if (SNodeOperations.isInstanceOf(concept,MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979ba0450L,"jetbrains.mps.lang.structure.structure.ConceptDeclaration"))) {
    String alternativeIconPath=ConceptRegistry.getInstance().getConstraintsDescriptor(SNodeOperations.getConcept(node)).getAlternativeIcon(node);
    if (alternativeIconPath != null) {
      mainIcon=getIcon(SModelUtil.getDeclaringLanguage(concept),alternativeIconPath);
    }
    if (mainIcon == null) {
      mainIcon=getIcon(SNodeOperations.cast(concept,MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979ba0450L,"jetbrains.mps.lang.structure.structure.ConceptDeclaration")));
    }
  }
  if (mainIcon == null) {
    if (jetbrains.mps.util.SNodeOperations.isRoot(node)) {
      return IdeIcons.DEFAULT_ROOT_ICON;
    }
 else {
      return IdeIcons.DEFAULT_NODE_ICON;
    }
  }
  SModel model=SNodeOperations.getModel(node);
  if (model == null || jetbrains.mps.util.SNodeOperations.isModelDisposed(model)) {
    return mainIcon;
  }
  if (!(SModelStereotype.isUserModel(model)) || model instanceof EditableSModel && model.isReadOnly()) {
    mainIcon=new LayeredIcon(mainIcon,PlatformIcons.LOCKED_ICON);
  }
  RowIcon result=new RowIcon(2);
  result.setIcon(mainIcon,0);
  if (!(withoutAdditional)) {
    result.setIcon(((Icon)BHReflection.invoke(node,SMethodTrimmedId.create("getAdditionalIcon",null,"4mxbjAOAE$e"))),1);
  }
  List<Icon> markIcons=((List<Icon>)BHReflection.invoke(node,SMethodTrimmedId.create("getMarkIcons",null,"3pOfV45ExLD")));
  if (markIcons != null) {
    LayeredIcon layeredIcon=new LayeredIcon(markIcons.size() + 1);
    layeredIcon.setIcon(result,0);
    for (int i=0; i < markIcons.size(); i++) {
      layeredIcon.setIcon(markIcons.get(i),i + 1);
    }
    return layeredIcon;
  }
  return result;
}
