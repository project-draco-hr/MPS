{
  try {
    ProgressManager.getInstance().run(new Task.Modal(((Project)MapSequence.fromMap(_params).get("project")),"Finding Usages",true){
      public void run(      @NotNull ProgressIndicator p0){
        final Wrappers._T<SearchResults<SNode>> concepts=new Wrappers._T<SearchResults<SNode>>();
        final Wrappers._T<List<SearchResult<SNode>>> results=new Wrappers._T<List<SearchResult<SNode>>>();
        ModelAccess.instance().runReadAction(new Runnable(){
          public void run(){
            concepts.value=FindUtils.getSearchResults(new EmptyProgressMonitor(),SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.structure.structure.ConceptDeclaration"),GlobalScope.getInstance(),"jetbrains.mps.lang.structure.findUsages.ConceptInstances_Finder");
            results.value=ListSequence.fromList(((List<SearchResult<SNode>>)concepts.value.getSearchResults())).where(new IWhereFilter<SearchResult<SNode>>(){
              public boolean accept(              SearchResult<SNode> it){
                SNode node=(SNode)it.getObject();
                return SPropertyOperations.getBoolean(node,"rootable") && isEmpty_567cn5_a0a1a0a0a0a0a1a0a0a0a3a0a0a0a0a0a5(SPropertyOperations.getString(node,"iconPath"));
              }
            }
).toListSequence();
          }
        }
);
        if (p0.isCanceled()) {
          return;
        }
        SwingUtilities.invokeLater(new Runnable(){
          public void run(){
            RefactoringAccess.getInstance().showRefactoringView(((Project)MapSequence.fromMap(_params).get("project")),new RefactoringViewAction(){
              public void performAction(              RefactoringViewItem refactoringViewItem){
                refactoringViewItem.close();
              }
            }
,new SearchResults(concepts.value.getSearchedNodes(),results.value),false,"Safe Delete");
          }
        }
);
      }
    }
);
  }
 catch (  Throwable t) {
    LOG.error("User's action execute method failed. Action:" + "FindRootableConceptsWithoutIcons",t);
  }
}
