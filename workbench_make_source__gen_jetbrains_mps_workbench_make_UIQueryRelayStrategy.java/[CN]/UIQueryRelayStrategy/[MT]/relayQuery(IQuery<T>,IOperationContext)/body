{
  List<T> optList=Sequence.fromIterable(query.options()).toListSequence();
  final String[] options=ListSequence.fromList(optList).select(new ISelector<T,String>(){
    public String select(    T o){
      return o.getText();
    }
  }
).toGenericArray(String.class);
  final int defopt=ListSequence.fromList(optList).indexOf(query.defaultOption());
  final Wrappers._int res=new Wrappers._int(-1);
  ThreadUtils.runInUIThreadAndWait(new Runnable(){
    public void run(){
      res.value=Messages.showDialog(context.getIdeaProject(),query.getText(),query.getTitle(),options,defopt,defopt,Messages.getQuestionIcon());
    }
  }
);
  if (res.value < 0) {
    return query.voidOption();
  }
  return ListSequence.fromList(optList).getElement(res.value);
}
