{
  Map<String,SNode> rightNestedIndex=MapSequence.fromMap(new HashMap<String,SNode>());
  for (  SNode cl : ListSequence.fromList(SNodeOperations.getNodeDescendants(right,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"),true,new SAbstractConcept[]{}))) {
    MapSequence.fromMap(rightNestedIndex).put(SPropertyOperations.getString(cl,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")),cl);
  }
  for (  SNode cl : ListSequence.fromList(SNodeOperations.getNodeDescendants(left,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"),true,new SAbstractConcept[]{}))) {
    SNode rightBrother=SNodeOperations.cast(MapSequence.fromMap(rightNestedIndex).get(SPropertyOperations.getString(cl,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"))),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"));
    Assert.assertNull(MapSequence.fromMap(nodeMap).get(cl));
    MapSequence.fromMap(nodeMap).put(cl,rightBrother);
    buildJustNodeMap(SLinkOperations.getChildren(left,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102463b447aL,0x102463bb98eL,"typeVariableDeclaration")),SLinkOperations.getChildren(right,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102463b447aL,0x102463bb98eL,"typeVariableDeclaration")),nodeMap);
    buildMethodsNodeMap(left,right,nodeMap);
  }
  if (SNodeOperations.isInstanceOf(left,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a69dc80cL,"jetbrains.mps.baseLanguage.structure.Annotation")) && SNodeOperations.isInstanceOf(right,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a69dc80cL,"jetbrains.mps.baseLanguage.structure.Annotation"))) {
    Map<String,SNode> rightMethodIndex=MapSequence.fromMap(new HashMap<String,SNode>());
    for (    SNode mthd : ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(right,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a69dc80cL,"jetbrains.mps.baseLanguage.structure.Annotation")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x101f2cc410bL,"method")))) {
      MapSequence.fromMap(rightMethodIndex).put(SPropertyOperations.getString(mthd,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")),mthd);
    }
    for (    SNode mthd : ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(left,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a69dc80cL,"jetbrains.mps.baseLanguage.structure.Annotation")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x101f2cc410bL,"method")))) {
      Assert.assertNull(MapSequence.fromMap(nodeMap).get(mthd));
      MapSequence.fromMap(nodeMap).put(mthd,MapSequence.fromMap(rightMethodIndex).get(SPropertyOperations.getString(mthd,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"))));
    }
  }
}
