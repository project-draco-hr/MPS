{
  boolean wereErrors=false;
  List<SNode> binRoots=SModelOperations.getRoots(left,null);
  List<SNode> srcRoots=SModelOperations.getRoots(right,null);
  binRoots=ListSequence.fromList(binRoots).sort(new ISelector<SNode,String>(){
    public String select(    SNode it){
      return SPropertyOperations.getString(SNodeOperations.cast(it,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,"jetbrains.mps.baseLanguage.structure.Classifier")),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"));
    }
  }
,true).toListSequence();
  srcRoots=ListSequence.fromList(srcRoots).sort(new ISelector<SNode,String>(){
    public String select(    SNode it){
      return SPropertyOperations.getString(SNodeOperations.cast(it,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,"jetbrains.mps.baseLanguage.structure.Classifier")),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"));
    }
  }
,true).toListSequence();
  List<NodeDifference> diff=NodesMatcher.matchNodes(binRoots,srcRoots,nodeMap);
  if (diff != null) {
    wereErrors=true;
    System.out.println("Diff: " + diff);
  }
  return wereErrors;
}
