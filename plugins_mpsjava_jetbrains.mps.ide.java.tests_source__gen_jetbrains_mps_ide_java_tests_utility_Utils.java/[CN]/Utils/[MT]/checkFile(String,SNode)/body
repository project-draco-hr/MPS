{
  JavaSourceStubModelRoot mr=new JavaSourceStubModelRoot();
  mr.setModule(getModule());
  mr.setContentRoot(path);
  mr.addFile(JavaSourceStubModelRoot.SOURCE_ROOTS,path);
  Iterator<SModel> models=mr.loadModels().iterator();
  Assert.assertTrue("No models returned from model root",models.hasNext());
  Iterator<? extends SNode> roots=models.next().getRootNodes().iterator();
  Assert.assertTrue("The model has no roots",roots.hasNext());
  SNode result=SNodeOperations.cast((roots.next()),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"));
  result=SNodeOperations.copyNode(result);
  expected=SNodeOperations.copyNode(expected);
  NodePatcher.removeStatements(expected);
  NodePatcher.fixNonStatic(expected);
  NodePatcher.fixNonStatic(result);
  NodePatcher.copyImportAttrs(result,expected);
{
    List<SNode> nodesBefore=ListSequence.fromListAndArray(new ArrayList<SNode>(),expected);
    List<SNode> nodesAfter=ListSequence.fromListAndArray(new ArrayList<SNode>(),result);
    Assert.assertNull("nodes '" + nodesBefore + "' and '"+ nodesAfter+ "' do not match!",NodesMatcher.matchNodes(nodesBefore,nodesAfter));
  }
}
