{
  Map<String,SNode> rightRootIndex=MapSequence.fromMap(new HashMap<String,SNode>());
  for (  SNode rightRoot : ListSequence.fromList(SModelOperations.getRoots(right,null))) {
    MapSequence.fromMap(rightRootIndex).put(SPropertyOperations.getString(SNodeOperations.cast(rightRoot,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1212170275853l,"jetbrains.mps.baseLanguage.structure.IValidIdentifier")),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")),rightRoot);
  }
  for (  SNode leftRoot : ListSequence.fromList(SModelOperations.getRoots(left,null))) {
    SNode rightBrother=MapSequence.fromMap(rightRootIndex).get(SPropertyOperations.getString(SNodeOperations.cast(leftRoot,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1212170275853l,"jetbrains.mps.baseLanguage.structure.IValidIdentifier")),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")));
    if ((rightBrother != null)) {
      NodePatcher.copyImportAttrs(leftRoot,rightBrother);
    }
    buildClassifierNodeMap(SNodeOperations.cast(leftRoot,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,"jetbrains.mps.baseLanguage.structure.Classifier")),SNodeOperations.cast(rightBrother,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,"jetbrains.mps.baseLanguage.structure.Classifier")),nodeMap);
  }
}
