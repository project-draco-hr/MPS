{
  Map<String,SNode> rightRootIndex=MapSequence.fromMap(new HashMap<String,SNode>());
  for (  SNode rightRoot : ListSequence.fromList(SModelOperations.roots(right,null))) {
    MapSequence.fromMap(rightRootIndex).put(SPropertyOperations.getString(SNodeOperations.cast(rightRoot,MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11a3afa8c0dL,"jetbrains.mps.baseLanguage.structure.IValidIdentifier")),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")),rightRoot);
  }
  for (  SNode leftRoot : ListSequence.fromList(SModelOperations.roots(left,null))) {
    SNode rightBrother=MapSequence.fromMap(rightRootIndex).get(SPropertyOperations.getString(SNodeOperations.cast(leftRoot,MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11a3afa8c0dL,"jetbrains.mps.baseLanguage.structure.IValidIdentifier")),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")));
    if ((rightBrother != null)) {
      NodePatcher.copyImportAttrs(leftRoot,rightBrother);
    }
    buildClassifierNodeMap(SNodeOperations.cast(leftRoot,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier")),SNodeOperations.cast(rightBrother,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier")),nodeMap);
  }
}
