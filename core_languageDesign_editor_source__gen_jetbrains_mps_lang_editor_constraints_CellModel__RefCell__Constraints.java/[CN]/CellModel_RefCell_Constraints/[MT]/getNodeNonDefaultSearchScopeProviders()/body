{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("relationDeclaration",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      SNode editorComponent=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.lang.editor.structure.BaseEditorComponent",true,false);
      SNode editedConcept=AbstractComponent_Behavior.call_getConceptDeclaration_7055725856388417603(editorComponent);
      List<SNode> links=AbstractConceptDeclaration_Behavior.call_getLinkDeclarations_1213877394480(editedConcept);
      return ListSequence.fromList(links).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return LinkDeclaration_Behavior.call_isSingular_1213877254557(it);
        }
      }
).toListSequence();
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c89590298(jetbrains.mps.lang.editor.constraints)","1213104846436");
    }
  }
);
  return result;
}
