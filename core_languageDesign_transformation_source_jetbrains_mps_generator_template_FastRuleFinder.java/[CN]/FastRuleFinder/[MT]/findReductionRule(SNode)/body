{
  AbstractConceptDeclaration concept=(AbstractConceptDeclaration)node.getConceptDeclarationAdapter();
  if (concept == null) {
    myGenerator.showWarningMessage(node,"skip reduction: couldn't find concept declaration adapter for " + node.getDebugText());
    return null;
  }
  List<Reduction_MappingRule> allRules=myRules_all.get(concept);
  if (allRules == null) {
    cacheAllApplicableRules(concept,SModelUtil_new.getBaseConcept());
    allRules=myRules_all.get(concept);
  }
  if (allRules == null) {
    return null;
  }
  for (  Reduction_MappingRule rule : allRules) {
    if (GeneratorUtil.checkCondition(rule.getConditionFunction(),false,node,rule.getNode(),myGenerator)) {
      return BaseAdapter.fromAdapter(rule);
    }
  }
  return null;
}
