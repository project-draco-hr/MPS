{
  myChangeSet=changeSet;
  myProject=project;
  myDiffEditorsGroup=new DiffEditorsGroup(){
    @Nullable @Override protected SNodeId mapID(    DiffEditor myEditor,    SNodeId myNodeId,    DiffEditor otherEditor){
      if (myEditor == otherEditor) {
        return myNodeId;
      }
      if (myOldEditor == myEditor && myNewEditor == otherEditor) {
        return myChangeSet.mapToNewId(myNodeId);
      }
      if (myNewEditor == myEditor && myOldEditor == otherEditor) {
        return myChangeSet.mapToOldId(myNodeId);
      }
      return null;
    }
  }
;
  myStatusBar=statusBar;
  myOldEditor=addEditor(0,myChangeSet.getOldModel(),myChangeSet.getOldNodeId(),titles[0]);
  myNewEditor=addEditor(1,myChangeSet.getNewModel(),myChangeSet.getNewNodeId(),titles[1]);
  linkEditors(true);
  linkEditors(false);
  myPanel.setSplitterProportionKey(PARAM_INSPECTOR_SPLITTER_POSITION);
  myPanel.setFirstComponent(myTopPanel);
  if (isInspectorShown) {
    myPanel.setSecondComponent(myBottomPanel);
  }
  myTraverser=new NextPreviousTraverser(myChangeGroupLayouts,myNewEditor.getMainEditor());
  createActionGroup();
}
