{
  final List<ModelChange> changesToApply=ListSequence.fromList(new ArrayList<ModelChange>());
  final List<ModelChange> changesToExclude=ListSequence.fromList(new ArrayList<ModelChange>());
  for (  ModelChange change : Sequence.fromIterable(getUnresolvedChangesForSelection())) {
    if (mine == myMergeContext.isMyChange(change)) {
      ListSequence.fromList(changesToApply).addElement(change);
      if (change instanceof MetadataChange) {
        SetSequence.fromSet(myAppliedMetadataChanges).addElement(change);
      }
    }
 else {
      ListSequence.fromList(changesToExclude).addElement(change);
    }
  }
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      myMergeContext.applyChanges(changesToApply);
      myMergeContext.excludeChanges(changesToExclude);
      myMergeTree.rebuildNow();
    }
  }
);
}
