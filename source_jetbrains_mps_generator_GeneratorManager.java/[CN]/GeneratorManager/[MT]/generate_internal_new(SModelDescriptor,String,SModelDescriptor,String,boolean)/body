{
  System.out.println("Generating sourceModel " + sourceModelDescr.getFQName());
  IModelGenerator generator=null;
  try {
    Class cls=Class.forName(generatorClassFQName);
    generator=(IModelGenerator)cls.getConstructor(MPSProject.class).newInstance(myProject);
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  if (generator == null) {
    return;
  }
  SModel targetModel=JavaGenUtil.createTargetJavaModel(sourceModelDescr.getSModel(),JavaNameUtil.packageNameForModelFqName(sourceModelDescr.getFQName()),myProject);
  try {
    if (generator instanceof ITemplateGenerator) {
      ((ITemplateGenerator)generator).generate(sourceModelDescr.getSModel(),targetModel,templatesModel.getSModel());
    }
 else {
      generator.generate(sourceModelDescr.getSModel(),targetModel);
    }
    if (generateText) {
      generateText(targetModel);
    }
 else {
      generateSource(outputPath,sourceModelDescr.getSModel(),targetModel);
    }
    JavaClassMaps.clearMaps();
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
}
