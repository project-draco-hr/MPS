{
  System.out.println("Generating configuration " + configuration.getName());
  System.out.println("Output path is " + configuration.getOutputPath());
  System.out.println("");
  for (  GeneratorConfigurationCommand cmd : CollectionUtil.iteratorAsIterable(configuration.commands())) {
    System.out.println("Executing " + cmd.getSourceLanguage().getName() + " -> "+ cmd.getTargetLanguage());
    Set<SModelDescriptor> models=findModelsWithLanguage(cmd.getSourceLanguage().getName());
    System.out.println("Models to generate from " + models.toString());
    Generator generator=findGenerator(cmd.getSourceLanguage().getName(),cmd.getTargetLanguage().getName());
    String generatorClass=findGeneratorClass(generator);
    System.out.println("Generator class is " + generatorClass);
    SModelDescriptor templatesModel=loadTemplatesModel(generator);
    System.out.println("Templates model is " + templatesModel.getFQName());
    for (    SModelDescriptor model : models) {
      generate_internal(model,generatorClass,templatesModel,generateText);
    }
  }
}
