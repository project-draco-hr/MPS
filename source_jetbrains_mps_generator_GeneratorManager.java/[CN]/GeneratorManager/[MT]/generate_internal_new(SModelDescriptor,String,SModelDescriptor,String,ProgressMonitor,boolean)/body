{
  IModelGenerator generator=null;
  try {
    Class cls=Class.forName(generatorClassFQName,true,ClassLoaderManager.getInstance().getClassLoader());
    if (ITemplateGenerator.class.isAssignableFrom(cls)) {
      generator=(ITemplateGenerator)cls.getConstructor(MPSProject.class,ProgressMonitor.class).newInstance(myProject,monitor);
    }
 else {
      generator=(IModelGenerator)cls.getConstructor(MPSProject.class).newInstance(myProject);
    }
  }
 catch (  Exception e) {
    e.printStackTrace();
  }
  if (generator == null) {
    return;
  }
  try {
    SModel targetModel=null;
    if (generator instanceof ITemplateGenerator) {
      targetModel=generateByTemplateGenerator(sourceModelDescr,templatesModel.getSModel(),(ITemplateGenerator)generator);
    }
 else {
      ProgressMonitor childMonitor=monitor.startSubTask(AMOUNT_PER_MODEL);
      targetModel=JavaGenUtil.createTargetJavaModel(sourceModelDescr.getSModel(),JavaNameUtil.packageNameForModelFqName(sourceModelDescr.getFQName()),myProject);
      generator.generate(sourceModelDescr.getSModel(),targetModel,monitor);
      childMonitor.finish();
    }
    if (generateText) {
      generateText(targetModel);
    }
 else {
      generateSource(outputPath,sourceModelDescr.getSModel(),targetModel);
    }
  }
  finally {
    JavaClassMaps.clearMaps();
  }
}
