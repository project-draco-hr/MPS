{
  final SModel model=ApplicationComponents.getInstance().getComponent(ProjectModel.class).getSModel();
  GeneratorConfiguration configuration=new CommandRunnable<GeneratorConfiguration>(model){
    protected GeneratorConfiguration onRun(){
      GeneratorConfiguration conf=GeneratorConfiguration.newInstance(model);
      conf.setOutputPath(language.getSourceDir().getAbsolutePath());
      conf.addCommand(createCommand(model,"jetbrains.mps.bootstrap.structureLanguage","jetbrains.mps.baseLanguage"));
      conf.addCommand(createCommand(model,"jetbrains.mps.bootstrap.editorLanguage","jetbrains.mps.baseLanguage"));
      conf.addCommand(createCommand(model,"jetbrains.mps.typesystem.typesystemLanguage","jetbrains.mps.baseLanguage"));
      return conf;
    }
  }
.run();
  Set<SModelDescriptor> models=new HashSet<SModelDescriptor>();
  models.add(language.getStructureModelDescriptor());
  if (language.getEditorDescriptor() != null) {
    models.add(language.getEditorDescriptor());
  }
  if (language.getTypesystemModelDescriptor() != null) {
    models.add(language.getTypesystemModelDescriptor());
  }
  generate(configuration,models,false);
}
