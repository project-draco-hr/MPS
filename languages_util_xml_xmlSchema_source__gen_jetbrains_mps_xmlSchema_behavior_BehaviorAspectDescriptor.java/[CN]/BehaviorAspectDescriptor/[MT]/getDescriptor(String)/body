{
switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0a,fqName)) {
case 11:
    return new ElementWithContent_BehaviorDescriptor();
case 24:
  return new Schema_BehaviorDescriptor();
case 26:
return new Sequence_BehaviorDescriptor();
case 10:
return new ElementReference_BehaviorDescriptor();
case 21:
return new MixedAttribute_BehaviorDescriptor();
case 18:
return new GroupDeclaration_BehaviorDescriptor();
case 5:
return new Choice_BehaviorDescriptor();
case 19:
return new GroupReference_BehaviorDescriptor();
case 23:
return new OccursAttribute_BehaviorDescriptor();
case 31:
return new UnboundExpression_BehaviorDescriptor();
case 7:
return new ComplexType_BehaviorDescriptor();
case 17:
return new Extension_BehaviorDescriptor();
case 9:
return new DeclarationBlock_BehaviorDescriptor();
case 29:
return new TextLine_BehaviorDescriptor();
case 0:
return new AttributeDeclaration_BehaviorDescriptor();
case 1:
return new AttributeGroup_BehaviorDescriptor();
case 2:
return new AttributeGroupReference_BehaviorDescriptor();
case 8:
return new ComplexTypeReference_BehaviorDescriptor();
case 6:
return new ComplexContent_BehaviorDescriptor();
case 30:
return new TypeExpressionList_BehaviorDescriptor();
case 27:
return new SimpleContent_BehaviorDescriptor();
case 12:
return new ElementWithType_BehaviorDescriptor();
case 32:
return new UseAttribute_BehaviorDescriptor();
case 16:
return new EntitySet_BehaviorDescriptor();
case 14:
return new EntityDeclaration_BehaviorDescriptor();
case 13:
return new EntityBlock_BehaviorDescriptor();
case 15:
return new EntityLine_BehaviorDescriptor();
case 22:
return new NamespaceDeclaration_BehaviorDescriptor();
case 28:
return new StringSchemaType_BehaviorDescriptor();
case 20:
return new IntegerSchemaType_BehaviorDescriptor();
case 3:
return new BooleanSchemaType_BehaviorDescriptor();
case 4:
return new BoundExpression_BehaviorDescriptor();
case 25:
return new SchemaComment_BehaviorDescriptor();
default :
return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
}
}
