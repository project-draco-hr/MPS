{
  SNode mindMap=SNodeOperations.getNodeAncestor(node,MetaAdapterFactory.getConcept(0x33f294fd370a4a40L,0x999b43f382910018L,0x1198689ff14758fL,"jetbrains.mps.samples.mindmaps.structure.MindMap"),false,false);
  ListSequence.fromList(SLinkOperations.getChildren(mindMap,MetaAdapterFactory.getContainmentLink(0x33f294fd370a4a40L,0x999b43f382910018L,0x1198689ff14758fL,0x1198689ff14c5dbL,"relationships"))).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return eq_tcgyjr_a0a0a0a0a0a0c0d2_0(SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(0x33f294fd370a4a40L,0x999b43f382910018L,0x1198689ff14bad3L,0x1198689ff14c5dfL,"target")),node) || eq_tcgyjr_a0a0a0a0a0a0c0d2(SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(0x33f294fd370a4a40L,0x999b43f382910018L,0x1198689ff14bad3L,0x517b79625769ba9eL,"source")),node);
    }
  }
).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode it){
      SNodeOperations.deleteNode(it);
    }
  }
);
  SNodeOperations.deleteNode(node);
}
