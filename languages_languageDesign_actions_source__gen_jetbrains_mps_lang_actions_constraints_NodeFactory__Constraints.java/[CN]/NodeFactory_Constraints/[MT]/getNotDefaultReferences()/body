{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("applicableConcept",new BaseReferenceConstraintsDescriptor("applicableConcept",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          Language language=Language.getLanguageForLanguageAspect(_context.getModel().getModelDescriptor());
          SModel structureModel=language.getStructureModelDescriptor().getSModel();
          return new ModelNodesSearchScope(structureModel);
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_i503fz_a0a1a0a0a1a0b0a1a2;
        }
      }
;
    }
  }
);
  return references;
}
