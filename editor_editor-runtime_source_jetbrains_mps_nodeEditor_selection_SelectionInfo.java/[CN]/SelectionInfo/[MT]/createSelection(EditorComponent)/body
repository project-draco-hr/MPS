{
  try {
    Class<Selection> selectionClass;
    if (myModuleID != null) {
      IModule module=MPSModuleRepository.getInstance().getModuleByFqName(myModuleID);
      if (module == null) {
        LOG.error("Specified selection class module was not found by ID: " + myModuleID);
        return null;
      }
      selectionClass=module.getClass(mySelectionClassName);
    }
 else {
      selectionClass=(Class<Selection>)getClass().getClassLoader().loadClass(mySelectionClassName);
    }
    if (!Selection.class.isAssignableFrom(selectionClass)) {
      LOG.error("Serialized selection class: " + mySelectionClassName + " is not a subclas of "+ Selection.class.getName());
      return null;
    }
    Constructor<Selection> constructor=selectionClass.getConstructor(EditorComponent.class,Map.class,CellInfo.class);
    return constructor.newInstance(editorComponent,myProperties,myCellInfo);
  }
 catch (  ClassNotFoundException e) {
    LOG.error(e);
    return null;
  }
catch (  NoSuchMethodException e) {
    LOG.error(e);
    return null;
  }
catch (  InvocationTargetException e) {
    if (e.getTargetException() instanceof SelectionRestoreException) {
      return null;
    }
    LOG.error(e);
    return null;
  }
catch (  InstantiationException e) {
    LOG.error(e);
    return null;
  }
catch (  IllegalAccessException e) {
    LOG.error(e);
    return null;
  }
}
