{
  SNode operand=null;
  int tokPos=0;
  SNode mbVarRef=UnknownNameRef_Behavior.call_tryFirstTokenAsVarRef_4018023047319628132(thisNode);
  if ((mbVarRef != null)) {
    operand=mbVarRef;
    tokPos=1;
    System.err.println("DEBUG: normal dot expr");
  }
 else {
    Tuples._2<SNode,Integer> classAndPos=UnknownNameRef_Behavior.call_tryFindClass_2621000434129553484(thisNode);
    if (classAndPos == null) {
      return null;
    }
    SNode cls=classAndPos._0();
    tokPos=(int)classAndPos._1();
    if (tokPos == (int)ListSequence.fromList(SLinkOperations.getTargets(thisNode,"token",true)).count()) {
      return cls;
    }
 else {
      SNode statFieldRef=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StaticFieldReference",null);
      SLinkOperations.setTarget(statFieldRef,"classifier",cls,false);
      SReference fieldRef=new DynamicReference("staticFieldDeclaration",statFieldRef,null,SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"token",true)).getElement(tokPos),"value"));
      statFieldRef.addReference(fieldRef);
      operand=statFieldRef;
      tokPos=tokPos + 1;
      System.err.println("DEBUG: no variable elements in scope");
    }
  }
  if ((operand == null)) {
    return null;
  }
  while (tokPos < ListSequence.fromList(SLinkOperations.getTargets(thisNode,"token",true)).count()) {
    SNode dotExpr=UnknownNameRef_Behavior.makeFieldDotExpression_8473865358220213520(operand,SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"token",true)).getElement(tokPos),"value"));
    operand=dotExpr;
    tokPos++;
  }
  return operand;
}
