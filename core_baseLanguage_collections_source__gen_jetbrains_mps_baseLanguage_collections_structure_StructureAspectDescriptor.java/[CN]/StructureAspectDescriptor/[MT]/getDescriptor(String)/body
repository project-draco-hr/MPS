{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator","jetbrains.mps.baseLanguage.structure.AbstractCreator",false,new String[]{"jetbrains.mps.baseLanguage.structure.AbstractCreator"},new String[]{},new String[]{});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.AbstractContainerType","jetbrains.mps.baseLanguage.structure.Type",false,new String[]{"jetbrains.mps.baseLanguage.structure.Type"},new String[]{},new String[]{});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.AbstractEnumeratorOperation","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.structure.IOperation"},new String[]{},new String[]{});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.AbstractIteratorOperation","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.structure.IOperation"},new String[]{},new String[]{});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.AbstractMappingOperation","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.structure.IOperation"},new String[]{},new String[]{});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation","jetbrains.mps.baseLanguage.collections.structure.SequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SequenceOperation"},new String[]{},new String[]{});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.AddAllElementsOperation","jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation","jetbrains.mps.baseLanguage.collections.structure.IListOperation","jetbrains.mps.baseLanguage.collections.structure.IQueueOperation","jetbrains.mps.baseLanguage.collections.structure.IStackOperation"},new String[]{},new String[]{});
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.AddAllSetElementsOperation","jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation"},new String[]{},new String[]{});
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.AddElementOperation","jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation","jetbrains.mps.baseLanguage.collections.structure.IListOperation"},new String[]{},new String[]{});
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.AddFirstElementOperation","jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation","jetbrains.mps.baseLanguage.collections.structure.IListOperation","jetbrains.mps.baseLanguage.collections.structure.IDequeOperation","jetbrains.mps.baseLanguage.collections.structure.IStackOperation"},new String[]{},new String[]{});
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.AddLastElementOperation","jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation","jetbrains.mps.baseLanguage.collections.structure.IListOperation"},new String[]{},new String[]{});
case 11:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.AddSetElementOperation","jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation"},new String[]{},new String[]{});
case 12:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.AllConstant","jetbrains.mps.baseLanguage.structure.IntegerConstant",false,new String[]{"jetbrains.mps.baseLanguage.structure.IntegerConstant"},new String[]{},new String[]{});
case 13:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.AllOperation","jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation"},new String[]{},new String[]{});
case 14:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.AlsoSortOperation","jetbrains.mps.baseLanguage.collections.structure.SortOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SortOperation"},new String[]{},new String[]{});
case 15:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.AnyOperation","jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation"},new String[]{},new String[]{});
case 16:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.AsSequenceOperation","jetbrains.mps.baseLanguage.structure.AbstractOperation",false,new String[]{"jetbrains.mps.baseLanguage.structure.AbstractOperation","jetbrains.mps.baseLanguage.structure.IOperation"},new String[]{},new String[]{});
case 17:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.BinaryOperation","jetbrains.mps.baseLanguage.collections.structure.SequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SequenceOperation"},new String[]{},new String[]{});
case 18:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ChunkOperation","jetbrains.mps.baseLanguage.collections.structure.SequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SequenceOperation"},new String[]{},new String[]{});
case 19:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ClearAllElementsOperation","jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation","jetbrains.mps.baseLanguage.collections.structure.IListOperation","jetbrains.mps.baseLanguage.collections.structure.IQueueOperation","jetbrains.mps.baseLanguage.collections.structure.IStackOperation"},new String[]{},new String[]{});
case 20:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ClearSetOperation","jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation"},new String[]{},new String[]{});
case 21:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ComparatorSortOperation","jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation"},new String[]{},new String[]{});
case 22:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ConcatOperation","jetbrains.mps.baseLanguage.collections.structure.BinaryOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.BinaryOperation"},new String[]{},new String[]{});
case 23:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ContainerIteratorType","jetbrains.mps.baseLanguage.collections.structure.IteratorType",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.IteratorType"},new String[]{},new String[]{});
case 24:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ContainsAllOperation","jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation"},new String[]{},new String[]{});
case 25:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ContainsKeyOperation","jetbrains.mps.baseLanguage.collections.structure.MapOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.MapOperation"},new String[]{},new String[]{});
case 26:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ContainsOperation","jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation"},new String[]{},new String[]{});
case 27:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ContainsValueOperation","jetbrains.mps.baseLanguage.collections.structure.MapOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.MapOperation"},new String[]{},new String[]{});
case 28:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.CustomContainerCreator","jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator"},new String[]{},new String[]{"containerDeclaration"});
case 29:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.CustomContainerDeclaration","jetbrains.mps.baseLanguage.structure.GenericDeclaration",false,new String[]{"jetbrains.mps.baseLanguage.structure.GenericDeclaration","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.baseLanguage.structure.IVisible"},new String[]{},new String[]{});
case 30:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.CustomContainers","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{});
case 31:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.CustomMapCreator","jetbrains.mps.baseLanguage.collections.structure.HashMapCreator",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.HashMapCreator"},new String[]{},new String[]{"containerDeclaration"});
case 32:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.CutOperation","jetbrains.mps.baseLanguage.collections.structure.ChunkOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.ChunkOperation"},new String[]{},new String[]{});
case 33:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.DequeType","jetbrains.mps.baseLanguage.collections.structure.QueueType",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.QueueType"},new String[]{},new String[]{});
case 34:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.DisjunctOperation","jetbrains.mps.baseLanguage.collections.structure.BinaryOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.BinaryOperation"},new String[]{},new String[]{});
case 35:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.DistinctOperation","jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation"},new String[]{},new String[]{});
case 36:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.DowncastExpression","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{});
case 37:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.EnumeratorType","jetbrains.mps.baseLanguage.structure.Type",false,new String[]{"jetbrains.mps.baseLanguage.structure.Type"},new String[]{},new String[]{});
case 38:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ExcludeOperation","jetbrains.mps.baseLanguage.collections.structure.BinaryOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.BinaryOperation"},new String[]{},new String[]{});
case 39:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.FindFirstOperation","jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation"},new String[]{},new String[]{});
case 40:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.FindLastOperation","jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation"},new String[]{},new String[]{});
case 41:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.FoldLeftOperation","jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation"},new String[]{},new String[]{});
case 42:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.FoldRightOperation","jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation"},new String[]{},new String[]{});
case 43:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ForEachStatement","jetbrains.mps.baseLanguage.structure.AbstractLoopStatement",false,new String[]{"jetbrains.mps.baseLanguage.structure.AbstractLoopStatement"},new String[]{},new String[]{});
case 44:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ForEachVariable","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.baseLanguage.structure.IValidIdentifier","jetbrains.mps.baseLanguage.structure.IVariableDeclaration"},new String[]{},new String[]{});
case 45:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ForEachVariableReference","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"variable"});
case 46:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.GetCurrentOperation","jetbrains.mps.baseLanguage.collections.structure.AbstractEnumeratorOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.AbstractEnumeratorOperation"},new String[]{},new String[]{});
case 47:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.GetElementOperation","jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation","jetbrains.mps.baseLanguage.collections.structure.IListOperation"},new String[]{},new String[]{});
case 48:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.GetEnumeratorOperation","jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation"},new String[]{},new String[]{});
case 49:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.GetFirstOperation","jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation"},new String[]{},new String[]{});
case 50:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.GetIndexOfOperation","jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation"},new String[]{},new String[]{});
case 51:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.GetIteratorOperation","jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation"},new String[]{},new String[]{});
case 52:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.GetKeysOperation","jetbrains.mps.baseLanguage.collections.structure.MapOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.MapOperation"},new String[]{},new String[]{});
case 53:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.GetLastIndexOfOperation","jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation"},new String[]{},new String[]{});
case 54:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.GetLastOperation","jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation"},new String[]{},new String[]{});
case 55:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.GetNextOperation","jetbrains.mps.baseLanguage.collections.structure.AbstractIteratorOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.AbstractIteratorOperation"},new String[]{},new String[]{});
case 56:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.GetSizeOperation","jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation"},new String[]{},new String[]{});
case 57:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.GetValuesOperation","jetbrains.mps.baseLanguage.collections.structure.MapOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.MapOperation"},new String[]{},new String[]{});
case 58:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.HasNextOperation","jetbrains.mps.baseLanguage.collections.structure.AbstractIteratorOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.AbstractIteratorOperation"},new String[]{},new String[]{});
case 59:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.HashMapCreator","jetbrains.mps.baseLanguage.structure.AbstractCreator",false,new String[]{"jetbrains.mps.baseLanguage.structure.AbstractCreator"},new String[]{},new String[]{});
case 60:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.HashSetCreator","jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator"},new String[]{},new String[]{});
case 61:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.HeadListOperation","jetbrains.mps.baseLanguage.collections.structure.SequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SequenceOperation","jetbrains.mps.baseLanguage.collections.structure.IListOperation"},new String[]{},new String[]{});
case 62:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.HeadMapOperation","jetbrains.mps.baseLanguage.collections.structure.SortedMapOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SortedMapOperation"},new String[]{},new String[]{});
case 63:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.HeadSetOperation","jetbrains.mps.baseLanguage.collections.structure.SortedSetOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SortedSetOperation"},new String[]{},new String[]{});
case 64:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.IContainerOperation",null,true,new String[]{"jetbrains.mps.baseLanguage.structure.IOperation"},new String[]{},new String[]{});
case 65:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.IDequeOperation",null,true,new String[]{"jetbrains.mps.baseLanguage.collections.structure.IQueueOperation","jetbrains.mps.baseLanguage.collections.structure.IStackOperation"},new String[]{},new String[]{});
case 66:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.IListOperation",null,true,new String[]{"jetbrains.mps.baseLanguage.collections.structure.IContainerOperation"},new String[]{},new String[]{});
case 67:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.IQueueOperation",null,true,new String[]{"jetbrains.mps.baseLanguage.collections.structure.IContainerOperation"},new String[]{},new String[]{});
case 68:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.IStackOperation",null,true,new String[]{"jetbrains.mps.baseLanguage.collections.structure.IContainerOperation"},new String[]{},new String[]{});
case 69:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.InsertElementOperation","jetbrains.mps.baseLanguage.collections.structure.SequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SequenceOperation","jetbrains.mps.baseLanguage.collections.structure.IListOperation"},new String[]{},new String[]{});
case 70:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation","jetbrains.mps.baseLanguage.collections.structure.SequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SequenceOperation"},new String[]{},new String[]{});
case 71:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.IntersectOperation","jetbrains.mps.baseLanguage.collections.structure.BinaryOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.BinaryOperation"},new String[]{},new String[]{});
case 72:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.IsEmptyOperation","jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation"},new String[]{},new String[]{});
case 73:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.IsNotEmptyOperation","jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation"},new String[]{},new String[]{});
case 74:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.IteratorType","jetbrains.mps.baseLanguage.structure.Type",false,new String[]{"jetbrains.mps.baseLanguage.structure.Type"},new String[]{},new String[]{});
case 75:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.JoinOperation","jetbrains.mps.baseLanguage.collections.structure.SequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SequenceOperation"},new String[]{},new String[]{});
case 76:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.KeyAccessOperation","jetbrains.mps.baseLanguage.collections.structure.AbstractMappingOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.AbstractMappingOperation"},new String[]{},new String[]{});
case 77:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.LinkedHashMapCreator","jetbrains.mps.baseLanguage.collections.structure.HashMapCreator",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.HashMapCreator"},new String[]{"order"},new String[]{});
case 78:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.LinkedHashSetCreator","jetbrains.mps.baseLanguage.collections.structure.HashSetCreator",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.HashSetCreator"},new String[]{},new String[]{});
case 79:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.LinkedListCreator","jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator"},new String[]{},new String[]{});
case 80:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.LinkedListType","jetbrains.mps.baseLanguage.collections.structure.ListType",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.ListType"},new String[]{},new String[]{});
case 81:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ListCreatorWithInit","jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator"},new String[]{},new String[]{});
case 82:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ListElementAccessExpression","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{});
case 83:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ListType","jetbrains.mps.baseLanguage.structure.Type",false,new String[]{"jetbrains.mps.baseLanguage.structure.Type"},new String[]{},new String[]{});
case 84:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.MapClearOperation","jetbrains.mps.baseLanguage.collections.structure.MapOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.MapOperation"},new String[]{},new String[]{});
case 85:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.MapElement","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{});
case 86:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.MapEntry","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 87:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.MapInitializer","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 88:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.MapOperation","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.structure.IOperation"},new String[]{},new String[]{});
case 89:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.MapOperationExpression","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{});
case 90:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.MapRemoveOperation","jetbrains.mps.baseLanguage.collections.structure.MapOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.MapOperation"},new String[]{},new String[]{});
case 91:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.MapType","jetbrains.mps.baseLanguage.structure.Type",false,new String[]{"jetbrains.mps.baseLanguage.structure.Type"},new String[]{},new String[]{});
case 92:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.MappingType","jetbrains.mps.baseLanguage.structure.Type",false,new String[]{"jetbrains.mps.baseLanguage.structure.Type"},new String[]{},new String[]{});
case 93:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.MappingsSetOperation","jetbrains.mps.baseLanguage.collections.structure.MapOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.MapOperation"},new String[]{},new String[]{});
case 94:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.MoveNextOperation","jetbrains.mps.baseLanguage.collections.structure.AbstractEnumeratorOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.AbstractEnumeratorOperation"},new String[]{},new String[]{});
case 95:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation","jetbrains.mps.baseLanguage.collections.structure.SequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SequenceOperation"},new String[]{},new String[]{});
case 96:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.PageOperation","jetbrains.mps.baseLanguage.collections.structure.SequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SequenceOperation"},new String[]{},new String[]{});
case 97:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.PeekOperation","jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation","jetbrains.mps.baseLanguage.collections.structure.IStackOperation","jetbrains.mps.baseLanguage.collections.structure.IDequeOperation"},new String[]{},new String[]{});
case 98:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.PopOperation","jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation","jetbrains.mps.baseLanguage.collections.structure.IStackOperation","jetbrains.mps.baseLanguage.collections.structure.IDequeOperation"},new String[]{},new String[]{});
case 99:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.PriorityQueueCreator","jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.AbstractContainerCreator"},new String[]{},new String[]{});
case 100:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.PushOperation","jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation","jetbrains.mps.baseLanguage.collections.structure.IStackOperation","jetbrains.mps.baseLanguage.collections.structure.IDequeOperation"},new String[]{},new String[]{});
case 101:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.PutAllOperation","jetbrains.mps.baseLanguage.collections.structure.MapOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.MapOperation"},new String[]{},new String[]{});
case 102:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.QueueType","jetbrains.mps.baseLanguage.collections.structure.AbstractContainerType",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.AbstractContainerType"},new String[]{},new String[]{});
case 103:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ReduceLeftOperation","jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation"},new String[]{},new String[]{});
case 104:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ReduceRightOperation","jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation"},new String[]{},new String[]{});
case 105:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.RemoveAllElementsOperation","jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation","jetbrains.mps.baseLanguage.collections.structure.IListOperation","jetbrains.mps.baseLanguage.collections.structure.IQueueOperation","jetbrains.mps.baseLanguage.collections.structure.IStackOperation"},new String[]{},new String[]{});
case 106:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.RemoveAllSetElementsOperation","jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation"},new String[]{},new String[]{});
case 107:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.RemoveAtElementOperation","jetbrains.mps.baseLanguage.collections.structure.SequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SequenceOperation","jetbrains.mps.baseLanguage.collections.structure.IListOperation"},new String[]{},new String[]{});
case 108:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.RemoveElementOperation","jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation","jetbrains.mps.baseLanguage.collections.structure.IListOperation","jetbrains.mps.baseLanguage.collections.structure.IQueueOperation","jetbrains.mps.baseLanguage.collections.structure.IStackOperation"},new String[]{},new String[]{});
case 109:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.RemoveFirstElementOperation","jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation","jetbrains.mps.baseLanguage.collections.structure.IListOperation","jetbrains.mps.baseLanguage.collections.structure.IQueueOperation","jetbrains.mps.baseLanguage.collections.structure.IStackOperation"},new String[]{},new String[]{});
case 110:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.RemoveLastElementOperation","jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation","jetbrains.mps.baseLanguage.collections.structure.IListOperation","jetbrains.mps.baseLanguage.collections.structure.IDequeOperation"},new String[]{},new String[]{});
case 111:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.RemoveOperation","jetbrains.mps.baseLanguage.collections.structure.AbstractIteratorOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.AbstractIteratorOperation"},new String[]{},new String[]{});
case 112:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.RemoveSetElementOperation","jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation"},new String[]{},new String[]{});
case 113:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.RemoveWhereOperation","jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation","jetbrains.mps.baseLanguage.collections.structure.IListOperation","jetbrains.mps.baseLanguage.collections.structure.IStackOperation","jetbrains.mps.baseLanguage.collections.structure.IQueueOperation","jetbrains.mps.baseLanguage.collections.structure.IDequeOperation"},new String[]{},new String[]{});
case 114:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ReverseOperation","jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation","jetbrains.mps.baseLanguage.collections.structure.IListOperation"},new String[]{},new String[]{});
case 115:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.SelectOperation","jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation"},new String[]{},new String[]{});
case 116:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.SequenceCreator","jetbrains.mps.baseLanguage.structure.AbstractCreator",false,new String[]{"jetbrains.mps.baseLanguage.structure.AbstractCreator"},new String[]{},new String[]{});
case 117:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.SequenceOperation","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.structure.IOperation"},new String[]{},new String[]{});
case 118:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.SequenceType","jetbrains.mps.baseLanguage.structure.Type",false,new String[]{"jetbrains.mps.baseLanguage.structure.Type"},new String[]{},new String[]{});
case 119:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.SetElementOperation","jetbrains.mps.baseLanguage.collections.structure.SequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SequenceOperation","jetbrains.mps.baseLanguage.collections.structure.IListOperation"},new String[]{},new String[]{});
case 120:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.SetType","jetbrains.mps.baseLanguage.structure.Type",false,new String[]{"jetbrains.mps.baseLanguage.structure.Type"},new String[]{},new String[]{});
case 121:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.SingleArgumentSequenceOperation","jetbrains.mps.baseLanguage.collections.structure.SequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SequenceOperation"},new String[]{},new String[]{});
case 122:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.SingletonSequenceCreator","jetbrains.mps.baseLanguage.structure.AbstractCreator",false,new String[]{"jetbrains.mps.baseLanguage.structure.AbstractCreator"},new String[]{},new String[]{});
case 123:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.SkipOperation","jetbrains.mps.baseLanguage.collections.structure.SequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SequenceOperation"},new String[]{},new String[]{});
case 124:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.SkipStatement","jetbrains.mps.baseLanguage.structure.Statement",false,new String[]{"jetbrains.mps.baseLanguage.structure.Statement"},new String[]{},new String[]{});
case 125:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.SmartClosureParameterDeclaration","jetbrains.mps.baseLanguage.closures.structure.UnboundClosureParameterDeclaration",false,new String[]{"jetbrains.mps.baseLanguage.closures.structure.UnboundClosureParameterDeclaration"},new String[]{},new String[]{});
case 126:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.SortDirection","jetbrains.mps.baseLanguage.structure.BooleanConstant",false,new String[]{"jetbrains.mps.baseLanguage.structure.BooleanConstant"},new String[]{},new String[]{});
case 127:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.SortOperation","jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation"},new String[]{},new String[]{});
case 128:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.SortedMapOperation","jetbrains.mps.baseLanguage.collections.structure.MapOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.MapOperation"},new String[]{},new String[]{});
case 129:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.SortedMapType","jetbrains.mps.baseLanguage.collections.structure.MapType",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.MapType"},new String[]{},new String[]{});
case 130:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.SortedSetOperation","jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.AbstractSetOperation"},new String[]{},new String[]{});
case 131:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.SortedSetType","jetbrains.mps.baseLanguage.collections.structure.SetType",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SetType"},new String[]{},new String[]{});
case 132:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.StackType","jetbrains.mps.baseLanguage.collections.structure.AbstractContainerType",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.AbstractContainerType"},new String[]{},new String[]{});
case 133:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.StopStatement","jetbrains.mps.baseLanguage.structure.Statement",false,new String[]{"jetbrains.mps.baseLanguage.structure.Statement"},new String[]{},new String[]{});
case 134:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.SubListOperation","jetbrains.mps.baseLanguage.collections.structure.SequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SequenceOperation","jetbrains.mps.baseLanguage.collections.structure.IListOperation"},new String[]{},new String[]{});
case 135:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.SubMapOperation","jetbrains.mps.baseLanguage.collections.structure.SortedMapOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SortedMapOperation"},new String[]{},new String[]{});
case 136:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.SubSetOperation","jetbrains.mps.baseLanguage.collections.structure.SortedSetOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SortedSetOperation"},new String[]{},new String[]{});
case 137:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.TailListOperation","jetbrains.mps.baseLanguage.collections.structure.SequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SequenceOperation","jetbrains.mps.baseLanguage.collections.structure.IListOperation"},new String[]{},new String[]{});
case 138:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.TailMapOperation","jetbrains.mps.baseLanguage.collections.structure.SortedMapOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SortedMapOperation"},new String[]{},new String[]{});
case 139:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.TailOperation","jetbrains.mps.baseLanguage.collections.structure.ChunkOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.ChunkOperation"},new String[]{},new String[]{});
case 140:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.TailSetOperation","jetbrains.mps.baseLanguage.collections.structure.SortedSetOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SortedSetOperation"},new String[]{},new String[]{});
case 141:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.TakeOperation","jetbrains.mps.baseLanguage.collections.structure.SequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.SequenceOperation"},new String[]{},new String[]{});
case 142:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ToArrayOperation","jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation"},new String[]{},new String[]{});
case 143:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ToIteratorOperation","jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation"},new String[]{},new String[]{});
case 144:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ToListOperation","jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.NoArgumentsSequenceOperation"},new String[]{},new String[]{});
case 145:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.TranslateOperation","jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation"},new String[]{},new String[]{});
case 146:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.TreeMapCreator","jetbrains.mps.baseLanguage.collections.structure.HashMapCreator",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.HashMapCreator"},new String[]{},new String[]{});
case 147:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.TreeSetCreator","jetbrains.mps.baseLanguage.collections.structure.HashSetCreator",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.HashSetCreator"},new String[]{},new String[]{});
case 148:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.UnionOperation","jetbrains.mps.baseLanguage.collections.structure.BinaryOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.BinaryOperation"},new String[]{},new String[]{});
case 149:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.ValueAccessOperation","jetbrains.mps.baseLanguage.collections.structure.AbstractMappingOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.AbstractMappingOperation"},new String[]{},new String[]{});
case 150:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.VisitAllOperation","jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation"},new String[]{},new String[]{});
case 151:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.collections.structure.WhereOperation","jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation",false,new String[]{"jetbrains.mps.baseLanguage.collections.structure.InternalSequenceOperation"},new String[]{},new String[]{});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
