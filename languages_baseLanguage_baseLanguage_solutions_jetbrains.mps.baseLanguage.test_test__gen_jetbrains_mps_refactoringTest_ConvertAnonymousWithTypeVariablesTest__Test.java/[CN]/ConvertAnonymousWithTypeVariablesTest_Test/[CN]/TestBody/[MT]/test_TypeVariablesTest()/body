{
  this.addNodeById("2230400082817266598");
  this.addNodeById("2230400082817266608");
  this.addNodeById("2230400082817278213");
  new ConvertAnonymousRefactoring(SNodeOperations.cast(this.getNodeById("2230400082817266637"),"jetbrains.mps.baseLanguage.structure.AnonymousClass"),"MyParam").doRefactor();
{
    List<SNode> nodesBefore=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("2230400082817266612"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    List<SNode> nodesAfter=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("2230400082817278239"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    Assert.assertNull("nodes '" + nodesBefore + "' and '"+ nodesAfter+ "' do not match!",NodesMatcher.matchNodes(nodesBefore,nodesAfter));
  }
}
