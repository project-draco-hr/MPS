{
  setSourceElement(new MPSPsiElement(source));
  SNode method=TestNodeWrapperFactory.findWrappableAncestor(source,false);
  if (method != null && TestNodeWrapperFactory.tryToWrap(method) != null) {
    return null;
  }
  SNode testNode=SNodeOperations.cast(TestNodeWrapperFactory.findWrappableAncestor(source,true),"jetbrains.mps.lang.core.structure.INamedConcept");
  if (testNode == null) {
    return null;
  }
  ITestNodeWrapper wrapper=TestNodeWrapperFactory.tryToWrap(testNode);
  if (wrapper == null || Sequence.fromIterable(wrapper.getTestMethods()).isEmpty()) {
    return null;
  }
  JUnitTests_Configuration configuration=new JUnitTests_Configuration(getContext().getProject(),(JUnitTests_Configuration_Factory)getConfigurationFactory(),SPropertyOperations.getString(testNode,"name"));
  configuration.setRunType(JUnitRunTypes2.NODE);
  configuration.setTestCases(TestUtils.nodeToCloneableList(testNode));
  return configuration;
}
