{
  try {
    SNode classConcept=GenerateConstructor_Action.this.getClassConcept(_params);
    SNode superclass;
    SNodeReference[] ctors=null;
    boolean needsShowConstructorsDialog=false;
    SNodeReference[] selectedConstructors=null;
    SNodeReference[] selectedFields=null;
    superclass=SNodeOperations.as(SLinkOperations.getTarget(SLinkOperations.getTarget(classConcept,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,1165602531693l,"superclass")),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1107535924139l,"classifier")),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    if (superclass == null) {
      superclass=SNodeOperations.getNode("6354ebe7-c22a-4a0f-ac54-50b52ab9b065/f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)","~Object");
    }
    if (Sequence.fromIterable(BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),superclass,"jetbrains.mps.baseLanguage.structure.ClassConcept","call_constructors_5292274854859503373",new Object[]{})).count() > 1) {
      needsShowConstructorsDialog=true;
      ctors=Sequence.fromIterable(BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),superclass,"jetbrains.mps.baseLanguage.structure.ClassConcept","call_constructors_5292274854859503373",new Object[]{})).select(new ISelector<SNode,SNodePointer>(){
        public SNodePointer select(        SNode it){
          return new SNodePointer(it);
        }
      }
).toGenericArray(SNodePointer.class);
    }
 else {
      selectedConstructors=new SNodeReference[]{new SNodePointer(Sequence.fromIterable(BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),superclass,"jetbrains.mps.baseLanguage.structure.ClassConcept","call_constructors_5292274854859503373",new Object[]{})).first())};
    }
    if (needsShowConstructorsDialog) {
      SelectConstructorsDialog selectConstructorsDialog=new SelectConstructorsDialog(ctors,((EditorContext)MapSequence.fromMap(_params).get("editorContext")).getOperationContext().getProject());
      selectConstructorsDialog.setTitle("Choose Super Class Constructor");
      selectConstructorsDialog.show();
      if (!(selectConstructorsDialog.isOK())) {
        return;
      }
      List<SNodeReference> selectedElements=selectConstructorsDialog.getSelectedElements();
      selectedConstructors=(selectedElements != null ? selectedElements.toArray(new SNodeReference[selectedElements.size()]) : new SNodeReference[0]);
    }
    boolean needsShowFieldsDialog=false;
    SNodeReference[] fields=null;
    if (Sequence.fromIterable(BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),classConcept,"jetbrains.mps.baseLanguage.structure.ClassConcept","call_fields_5292274854859383272",new Object[]{})).isNotEmpty()) {
      needsShowFieldsDialog=true;
      fields=Sequence.fromIterable(BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),classConcept,"jetbrains.mps.baseLanguage.structure.ClassConcept","call_fields_5292274854859383272",new Object[]{})).select(new ISelector<SNode,SNodePointer>(){
        public SNodePointer select(        SNode it){
          return new SNodePointer(it);
        }
      }
).toGenericArray(SNodePointer.class);
    }
 else {
      selectedFields=new SNodeReference[0];
    }
    if (needsShowFieldsDialog) {
      SelectFieldsDialog selectFieldsDialog=new SelectFieldsDialog(fields,true,((EditorContext)MapSequence.fromMap(_params).get("editorContext")).getOperationContext().getProject());
      selectFieldsDialog.setTitle("Choose Fields to Initialize by Constructor");
      selectFieldsDialog.show();
      if (!(selectFieldsDialog.isOK())) {
        return;
      }
      selectedFields=Sequence.fromIterable(((Iterable<SNodeReference>)selectFieldsDialog.getSelectedElements())).toGenericArray(SNodeReference.class);
    }
    SNode constructorDeclaration=null;
    Project project=((EditorContext)MapSequence.fromMap(_params).get("editorContext")).getOperationContext().getProject();
    for (    SNodeReference ptr : selectedConstructors) {
      SNode selectedSuperConstructor=SNodeOperations.cast(((SNodePointer)ptr).resolve(MPSModuleRepository.getInstance()),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123140l,"jetbrains.mps.baseLanguage.structure.ConstructorDeclaration"));
      SNode constructor=SNodeFactoryOperations.addNewChild(classConcept,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,5375687026011219971l,"member"),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123140l,"jetbrains.mps.baseLanguage.structure.ConstructorDeclaration")));
      constructorDeclaration=constructor;
      SNodeFactoryOperations.setNewChild(constructor,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123135l,"body"),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123136l,"jetbrains.mps.baseLanguage.structure.StatementList")));
      if (ListSequence.fromList(SLinkOperations.getChildren(selectedSuperConstructor,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123134l,"parameter"))).isNotEmpty()) {
        SNode invocation=SNodeFactoryOperations.addNewChild(SLinkOperations.getTarget(constructor,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123135l,"body")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123136l,1068581517665l,"statement"),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1070475587102l,"jetbrains.mps.baseLanguage.structure.SuperConstructorInvocation")));
        SLinkOperations.setTarget(invocation,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141037l,"baseMethodDeclaration"),selectedSuperConstructor);
        for (        SNode superParam : SLinkOperations.getChildren(selectedSuperConstructor,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123134l,"parameter"))) {
          final SNode parameter=SNodeFactoryOperations.addNewChild(constructor,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123134l,"parameter"),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068498886292l,"jetbrains.mps.baseLanguage.structure.ParameterDeclaration")));
          SPropertyOperations.set(parameter,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"),SPropertyOperations.getString(superParam,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")));
          SLinkOperations.setTarget(parameter,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type"),SNodeOperations.copyNode(SLinkOperations.getTarget(superParam,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type"))));
          ListSequence.fromList(SLinkOperations.getChildren(superParam,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1188208481402l,1188208488637l,"annotation"))).visitAll(new IVisitor<SNode>(){
            public void visit(            SNode it){
              ListSequence.fromList(SLinkOperations.getChildren(parameter,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1188208481402l,1188208488637l,"annotation"))).addElement(SNodeOperations.copyNode(it));
            }
          }
);
          SNode paramReference=SNodeFactoryOperations.addNewChild(invocation,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141038l,"actualArgument"),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,"jetbrains.mps.baseLanguage.structure.VariableReference")));
          SLinkOperations.setTarget(paramReference,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,1068581517664l,"variableDeclaration"),parameter);
        }
      }
      for (      SNodeReference fieldPtr : selectedFields) {
        SNode field=SNodeOperations.cast(((SNodePointer)fieldPtr).resolve(MPSModuleRepository.getInstance()),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468200l,"jetbrains.mps.baseLanguage.structure.FieldDeclaration"));
        SNode parameterDeclaration=_quotation_createNode_yl16du_a0b0f0r0a(SNodeOperations.copyNode(SLinkOperations.getTarget(field,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type"))),GenerateGettersAndSettersUtil.getParameterNameForField(field,project));
        ListSequence.fromList(SLinkOperations.getChildren(constructor,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123134l,"parameter"))).addElement(parameterDeclaration);
        SNode expressionStatement=SNodeFactoryOperations.addNewChild(SLinkOperations.getTarget(constructor,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123135l,"body")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123136l,1068581517665l,"statement"),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123155l,"jetbrains.mps.baseLanguage.structure.ExpressionStatement")));
        SNode assignmentExpression=SNodeFactoryOperations.setNewChild(expressionStatement,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123155l,1068580123156l,"expression"),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068498886294l,"jetbrains.mps.baseLanguage.structure.AssignmentExpression")));
        SLinkOperations.setTarget(assignmentExpression,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1215693861676l,1068498886295l,"lValue"),_quotation_createNode_yl16du_a0a5a5a71a0(field));
        SLinkOperations.setTarget(assignmentExpression,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1215693861676l,1068498886297l,"rValue"),_quotation_createNode_yl16du_a0a6a5a71a0(parameterDeclaration));
      }
    }
    if (constructorDeclaration != null) {
      ((EditorContext)MapSequence.fromMap(_params).get("editorContext")).select(constructorDeclaration);
    }
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "GenerateConstructor",t);
    }
  }
}
