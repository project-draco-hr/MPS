{
  return new MigrationConfig(callConcept,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.LocalMethodCall")){
    public SNode createCondition(    SNode arg){
      return new LocalMethodCallsMigration.QuotationClass_lds4sy_a0b0a0a0a0b().createNode(declarationConcept,arg);
    }
    @Override public boolean isConditionNonTrivial(){
      return true;
    }
    public SNode migrateInstanceNode(    SNode node){
      SNode result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalMethodCall",null);
      SLinkOperations.setTarget(result,"baseMethodDeclaration",SLinkOperations.getTarget(node,"baseMethodDeclaration",false),false);
      for (      SNode attribute : SLinkOperations.getTargets(node,"smodelAttribute",true)) {
        SNode copy=SNodeOperations.cast(CopyUtil.copyAndPreserveId(attribute),"jetbrains.mps.lang.core.structure.Attribute");
        ListSequence.fromList(SNodeOperations.getChildren(result,SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.core.structure.BaseConcept","smodelAttribute"))).addElement(copy);
      }
      result.setId(node.getSNodeId());
      return result;
    }
    @Override public boolean isInstanceNodeMigrationNonTrivial(){
      return true;
    }
  }
;
}
