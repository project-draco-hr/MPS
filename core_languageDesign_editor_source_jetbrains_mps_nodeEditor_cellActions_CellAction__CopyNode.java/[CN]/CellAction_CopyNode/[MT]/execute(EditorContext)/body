{
  List<SNode> nodeList=new LinkedList<SNode>();
  EditorComponent editorComponent=context.getNodeEditorComponent();
  TextBuilder textBuilder=TextRenderUtil.getTextBuilderForSelectedCellsOfEditor(editorComponent);
  NodeRangeSelection nodeRangeSelection=editorComponent.getNodeRangeSelection();
  if (nodeRangeSelection.isActive()) {
    nodeList.addAll(nodeRangeSelection.getNodes());
    LOG.debug("Copy " + nodeList.size() + " nodes : ");
    for (    SNode aNodeList : nodeList) {
      LOG.debug("    " + aNodeList.getDebugText());
    }
  }
 else {
    nodeList.add(editorComponent.getSelectedCell().getSNode());
    LOG.debug("Copy node : " + nodeList.get(0).getDebugText());
  }
  List<SNode> copyNodeList=new ArrayList<SNode>();
  Map<SNode,Set<SNode>> nodesAndAttributes=new HashMap<SNode,Set<SNode>>();
  for (  SNode node : nodeList) {
    final SNode parent=node.getParent();
    if (parent != null && AttributesRolesUtil.isAttributeRole(node.getRole_())) {
      EditorCell selectedCell=editorComponent.getSelectedCell();
      Condition<EditorCell> condition=new Condition<EditorCell>(){
        public boolean met(        EditorCell object){
          SNode selectedNode=object.getSNode();
          return selectedNode != null && selectedNode.getParent() == parent && AttributesRolesUtil.isAttributeRole(selectedNode.getRole_());
        }
      }
;
      Mapper<EditorCell,SNode> mapper=new Mapper<EditorCell,SNode>(){
        public SNode map(        EditorCell editorCell){
          return editorCell.getSNode();
        }
      }
;
      Set<SNode> selectedAttributes=new HashSet<SNode>();
      if (selectedCell instanceof EditorCell_Collection) {
        EditorCell_Collection selectedCollection=(EditorCell_Collection)selectedCell;
        selectedAttributes.addAll(CollectionUtil.map(CollectionUtil.filter(selectedCollection.dfsCells(),condition),mapper));
      }
 else {
        if (condition.met(selectedCell)) {
          selectedAttributes.add(selectedCell.getSNode());
        }
      }
      copyNodeList.add(parent);
      nodesAndAttributes.put(parent,selectedAttributes);
    }
 else {
      copyNodeList.add(node);
    }
  }
  CopyPasteUtil.copyNodesAndTextToClipboard(copyNodeList,nodesAndAttributes,textBuilder.getText());
}
