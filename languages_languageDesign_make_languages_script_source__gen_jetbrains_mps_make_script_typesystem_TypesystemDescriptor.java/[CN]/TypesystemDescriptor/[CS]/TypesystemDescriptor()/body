{
{
    InferenceRule_Runtime inferenceRule=new typeof_AllWorkLeftExpression_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    InferenceRule_Runtime inferenceRule=new typeof_BeginWorkStatement_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    InferenceRule_Runtime inferenceRule=new typeof_DoneWorkStatement_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    InferenceRule_Runtime inferenceRule=new typeof_OptionExpression_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    InferenceRule_Runtime inferenceRule=new typeof_OutputResources_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    InferenceRule_Runtime inferenceRule=new typeof_PropertiesAccessorParameter_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    InferenceRule_Runtime inferenceRule=new typeof_RelayQueryExpression_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    SubtypingRule_Runtime subtypingRule=new IResource_subtypeOf_ResourceType_SubtypingRule();
    this.mySubtypingRules.add(subtypingRule);
  }
{
    SubtypingRule_Runtime subtypingRule=new ResourceType_subtypeOf_IResource_SubtypingRule();
    this.mySubtypingRules.add(subtypingRule);
  }
{
    ComparisonRule_Runtime comparisonRule=new ResourceType_comparableWith_IResource_ComparisonRule();
    this.myComparisonRules.add(comparisonRule);
  }
}
