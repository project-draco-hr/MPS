{
  SNode methodCall=this.createMethodCall(match,methodDeclaration);
  SNode returnlStatement=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc67c7feL,"jetbrains.mps.baseLanguage.structure.ReturnStatement")));
  SLinkOperations.setTarget(returnlStatement,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc67c7feL,0xf8cc6bf96cL,"expression"),methodCall);
  List<SNode> statements=match.getNodes();
  SNodeOperations.insertPrevSiblingChild(ListSequence.fromList(statements).first(),returnlStatement);
  for (  SNode statement : ListSequence.fromList(statements)) {
    SNodeOperations.deleteNode(statement);
  }
}
