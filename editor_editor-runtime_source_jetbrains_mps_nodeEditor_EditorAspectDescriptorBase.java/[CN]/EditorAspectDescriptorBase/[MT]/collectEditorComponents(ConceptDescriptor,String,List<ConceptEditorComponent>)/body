{
  Pair<ConceptDescriptor,String> key=new Pair<ConceptDescriptor,String>(descriptor,editorComponentId);
  if (!ValidEditorDescriptorsCache.getInstance().isDescriptorValid(this)) {
    myEditorComponentsCache.clear();
  }
 else {
    if (myEditorComponentsCache.containsKey(key)) {
      return myEditorComponentsCache.get(key);
    }
  }
  Collection<ConceptEditorComponent> allEditors=getAllEditors(descriptor,initialEditors,new EditorComputable<Collection<ConceptEditorComponent>>(){
    @Override public Collection<ConceptEditorComponent> compute(    EditorAspectDescriptor editorDescriptor){
      return editorDescriptor.getEditorComponents(descriptor,editorComponentId);
    }
  }
);
  myEditorComponentsCache.put(key,allEditors);
  ValidEditorDescriptorsCache.getInstance().cacheDescriptor(this);
  return allEditors;
}
