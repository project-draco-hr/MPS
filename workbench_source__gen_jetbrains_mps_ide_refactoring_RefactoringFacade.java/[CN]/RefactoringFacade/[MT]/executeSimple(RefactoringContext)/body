{
  ThreadUtils.assertEDT();
  final IRefactoring refactoring=refactoringContext.getRefactoring();
  List<SModel> modelsToGenerate=getModelsToGenerate(refactoring,refactoringContext);
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      try {
        refactoring.refactor(refactoringContext);
        if (refactoring instanceof ILoggableRefactoring) {
          if (!(refactoringContext.isLocal())) {
            writeIntoLog(refactoringContext);
          }
          RefactoringFacade.updateModels(refactoringContext);
        }
      }
 catch (      Throwable t) {
        LOG.error("An exception occured while trying to execute refactoring " + refactoring.getUserFriendlyName() + ". Models could have been corrupted.",t);
      }
    }
  }
);
  if (refactoringContext.getDoesGenerateModels()) {
    generateModels(modelsToGenerate,refactoringContext);
  }
 else {
  }
  try {
    refactoring.doWhenDone(refactoringContext);
  }
 catch (  Throwable t) {
    LOG.error("An error occurred in doWhenDone(), refactoring: " + refactoring.getUserFriendlyName(),t);
  }
}
