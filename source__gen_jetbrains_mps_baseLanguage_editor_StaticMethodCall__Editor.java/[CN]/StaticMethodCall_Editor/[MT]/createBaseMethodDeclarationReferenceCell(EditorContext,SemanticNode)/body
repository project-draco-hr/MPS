{
  SemanticNode effectiveNode=node.getReferent("baseMethodDeclaration",(SemanticNode)null);
  if (effectiveNode == null) {
    EditorCell_Error errorCell=EditorCell_Error.create(editorContext,node,"<no method>");
    errorCell.setAction(EditorCellAction.DELETE,new CellAction_Empty());
    StaticMethodCall_MethodNameActions.setCellActions(errorCell,node);
    SemanticLinkDeclaration linkDeclaration=SemanticModelUtil.getLinkDeclaration(node,"baseMethodDeclaration");
    errorCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION,linkDeclaration);
    errorCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE,node);
    return errorCell;
  }
  AbstractCellProvider baseMethodDeclaration_InlineComponent=new StaticMethodCall_Editor_baseMethodDeclaration_InlineComponent(effectiveNode);
  EditorCell editorCell=baseMethodDeclaration_InlineComponent.createEditorCell(editorContext);
  EditorUtil.setSemanticNodeToCells(editorCell,node);
  StaticMethodCall_MethodNameActions.setCellActions(editorCell,node);
  SemanticLinkDeclaration linkDeclaration=SemanticModelUtil.getLinkDeclaration(node,"baseMethodDeclaration");
  editorCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION,linkDeclaration);
  editorCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE,node);
  return editorCell;
}
