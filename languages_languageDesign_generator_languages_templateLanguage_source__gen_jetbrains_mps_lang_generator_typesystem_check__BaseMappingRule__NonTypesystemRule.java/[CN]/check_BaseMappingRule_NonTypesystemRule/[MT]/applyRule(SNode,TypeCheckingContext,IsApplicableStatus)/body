{
  if (SPropertyOperations.getBoolean(bmr,MetaAdapterFactory.getProperty(new UUID(-5475912601019530992l,-8082971551085732881l),1167169308231l,1167272244852l,"applyToConceptInheritors")) || (SLinkOperations.getTarget(bmr,MetaAdapterFactory.getReferenceLink(new UUID(-5475912601019530992l,-8082971551085732881l),1167169308231l,1167169349424l,"applicableConcept")) == null)) {
    return;
  }
  if (SPropertyOperations.getBoolean(SLinkOperations.getTarget(bmr,MetaAdapterFactory.getReferenceLink(new UUID(-5475912601019530992l,-8082971551085732881l),1167169308231l,1167169349424l,"applicableConcept")),MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1169125787135l,4628067390765956802l,"abstract"))) {
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportWarning(bmr,"Rule for an abstract concept with disabled inheritors won't apply ever. Pick non-abstract concept or enable rule for concept inheritors as well","r:00000000-0000-4000-0000-011c895902e4(jetbrains.mps.lang.generator.typesystem)","3381764287261048628",null,errorTarget);
    }
  }
}
