{
  if ((SLinkOperations.getTarget(bmr,MetaAdapterFactory.getReferenceLink(0xb401a68083254110L,0x8fd384331ff25befL,0x10fc0b64647L,0x10fc0b6e730L,"applicableConcept")) == null)) {
    return;
  }
  if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(SLinkOperations.getTarget(bmr,MetaAdapterFactory.getReferenceLink(0xb401a68083254110L,0x8fd384331ff25befL,0x10fc0b64647L,0x10fc0b6e730L,"applicableConcept"))),MetaAdapterFactory.getConcept(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x47bf8397520e5939L,"jetbrains.mps.lang.core.structure.Attribute"))) {
{
      MessageTarget errorTarget=new NodeMessageTarget();
      errorTarget=new ReferenceMessageTarget("applicableConcept");
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportWarning(bmr,"Transformation of an attribute may end up with hard to explain outcome","r:00000000-0000-4000-0000-011c895902e4(jetbrains.mps.lang.generator.typesystem)","2826485732397637989",null,errorTarget);
    }
  }
  if (!(SPropertyOperations.getBoolean(bmr,MetaAdapterFactory.getProperty(0xb401a68083254110L,0x8fd384331ff25befL,0x10fc0b64647L,0x10fc6d8f674L,"applyToConceptInheritors"))) && SPropertyOperations.getBoolean(SLinkOperations.getTarget(bmr,MetaAdapterFactory.getReferenceLink(0xb401a68083254110L,0x8fd384331ff25befL,0x10fc0b64647L,0x10fc0b6e730L,"applicableConcept")),MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0x403a32c5772c7ec2L,"abstract"))) {
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportWarning(bmr,"Rule for an abstract concept with disabled inheritors won't apply ever. Pick non-abstract concept or enable rule for concept inheritors as well","r:00000000-0000-4000-0000-011c895902e4(jetbrains.mps.lang.generator.typesystem)","3381764287261048628",null,errorTarget);
    }
  }
}
