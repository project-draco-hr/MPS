{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.lang.quotation.structure.AbstractAntiquotation",null,true,new String[]{"jetbrains.mps.lang.core.structure.IMetaLevelChanger","jetbrains.mps.lang.core.structure.IAntisuppressErrors","jetbrains.mps.lang.core.structure.ScopeProvider"},new String[]{"label"},new String[]{});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.lang.quotation.structure.Antiquotation","jetbrains.mps.lang.core.structure.NodeAttribute",false,new String[]{"jetbrains.mps.lang.core.structure.NodeAttribute","jetbrains.mps.lang.quotation.structure.AbstractAntiquotation"},new String[]{},new String[]{});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.lang.quotation.structure.ListAntiquotation","jetbrains.mps.lang.core.structure.NodeAttribute",false,new String[]{"jetbrains.mps.lang.core.structure.NodeAttribute","jetbrains.mps.lang.quotation.structure.AbstractAntiquotation"},new String[]{},new String[]{});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.lang.quotation.structure.PropertyAntiquotation","jetbrains.mps.lang.core.structure.PropertyAttribute",false,new String[]{"jetbrains.mps.lang.core.structure.PropertyAttribute","jetbrains.mps.lang.quotation.structure.AbstractAntiquotation"},new String[]{},new String[]{});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.lang.quotation.structure.Quotation","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression","jetbrains.mps.lang.core.structure.IMetaLevelChanger","jetbrains.mps.lang.core.structure.ISuppressErrors"},new String[]{},new String[]{});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.lang.quotation.structure.ReferenceAntiquotation","jetbrains.mps.lang.core.structure.LinkAttribute",false,new String[]{"jetbrains.mps.lang.core.structure.LinkAttribute","jetbrains.mps.lang.quotation.structure.AbstractAntiquotation"},new String[]{},new String[]{});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
