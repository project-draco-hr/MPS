{
switch (myConceptIndex.index(id)) {
case LanguageConceptSwitch.AbstractAntiquotation:
    return myConceptAbstractAntiquotation;
case LanguageConceptSwitch.Antiquotation:
  return myConceptAntiquotation;
case LanguageConceptSwitch.GeneratorInternal_InternalReferenceHolder:
return myConceptGeneratorInternal_InternalReferenceHolder;
case LanguageConceptSwitch.GeneratorInternal_PropertyDescriptor:
return myConceptGeneratorInternal_PropertyDescriptor;
case LanguageConceptSwitch.GeneratorInternal_ReferenceDescriptor:
return myConceptGeneratorInternal_ReferenceDescriptor;
case LanguageConceptSwitch.ListAntiquotation:
return myConceptListAntiquotation;
case LanguageConceptSwitch.NodeBuilder:
return myConceptNodeBuilder;
case LanguageConceptSwitch.NodeBuilderExpression:
return myConceptNodeBuilderExpression;
case LanguageConceptSwitch.NodeBuilderInitLink:
return myConceptNodeBuilderInitLink;
case LanguageConceptSwitch.NodeBuilderInitPart:
return myConceptNodeBuilderInitPart;
case LanguageConceptSwitch.NodeBuilderInitProperty:
return myConceptNodeBuilderInitProperty;
case LanguageConceptSwitch.NodeBuilderList:
return myConceptNodeBuilderList;
case LanguageConceptSwitch.NodeBuilderNode:
return myConceptNodeBuilderNode;
case LanguageConceptSwitch.NodeBuilderRef:
return myConceptNodeBuilderRef;
case LanguageConceptSwitch.PropertyAntiquotation:
return myConceptPropertyAntiquotation;
case LanguageConceptSwitch.Quotation:
return myConceptQuotation;
case LanguageConceptSwitch.ReferenceAntiquotation:
return myConceptReferenceAntiquotation;
default :
return null;
}
}
