{
  boolean needStopReductionBlocking=false;
  boolean wasChanged=myGenerator.isChanged();
  try {
    Reduction_MappingRule reductionRule=myRuleFinder.findReductionRule(inputNode);
    if (reductionRule != null) {
      myGenerator.setChanged(true);
      needStopReductionBlocking=startReductionBlockingForInput(inputNode);
      List<SNode> outputNodes=GeneratorUtil.applyReductionRule(inputNode,reductionRule,myGenerator);
      if (outputNodes.size() == 1) {
        myGenerator.addOutputNodeByInputNodeAndMappingName(inputNode,mappingName,outputNodes.get(0));
        myGenerator.addCopiedOutputNodeForInputNode(inputNode,outputNodes.get(0));
      }
      return outputNodes;
    }
  }
 catch (  DismissTopMappingRuleException ex) {
    myGenerator.setChanged(wasChanged);
  }
 finally {
    if (needStopReductionBlocking) {
      stopReductionBlockingForInput(inputNode);
    }
  }
  return null;
}
