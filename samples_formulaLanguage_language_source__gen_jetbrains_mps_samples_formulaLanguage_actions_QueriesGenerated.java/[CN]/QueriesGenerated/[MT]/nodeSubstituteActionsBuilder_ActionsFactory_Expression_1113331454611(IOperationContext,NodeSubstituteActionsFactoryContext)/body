{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.samples.formulaLanguage.structure.IntegerConstant");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode res=SModelOperations.createNewNode(model,null,SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xb1a9bc478a264792L,0x8b684660c531090aL,0x102db8aa3f9L,"jetbrains.mps.samples.formulaLanguage.structure.IntegerConstant")));
          SPropertyOperations.set(res,MetaAdapterFactory.getProperty(0xb1a9bc478a264792L,0x8b684660c531090aL,0x102db8aa3f9L,0x102db8ae25bL,"value"),"" + (Integer.parseInt(pattern)));
          return res;
        }
        public boolean hasSubstitute(){
          return true;
        }
        public boolean canSubstitute_internal(        String pattern,        boolean strictly){
{
            Pattern _pattern_0=REGEXP_x583g4_a0a0a0c0a0a0a0c0a0b0a;
            Matcher _matcher_0=_pattern_0.matcher(pattern);
            if (_matcher_0.matches()) {
              return true;
            }
          }
          return false;
        }
        public String getDescriptionText(        String pattern){
          return "integer constant (formula language)";
        }
      }
);
    }
  }
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.samples.formulaLanguage.structure.FloatingPointConstant");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode res=SModelOperations.createNewNode(model,null,SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xb1a9bc478a264792L,0x8b684660c531090aL,0x102db8bab3cL,"jetbrains.mps.samples.formulaLanguage.structure.FloatingPointConstant")));
          if (pattern.endsWith(".")) {
            SPropertyOperations.set(res,MetaAdapterFactory.getProperty(0xb1a9bc478a264792L,0x8b684660c531090aL,0x102db8bab3cL,0x1033349beb2L,"value"),pattern + "0");
          }
 else {
            SPropertyOperations.set(res,MetaAdapterFactory.getProperty(0xb1a9bc478a264792L,0x8b684660c531090aL,0x102db8bab3cL,0x1033349beb2L,"value"),pattern);
          }
          return res;
        }
        public boolean hasSubstitute(){
          return true;
        }
        public boolean canSubstitute_internal(        String pattern,        boolean strictly){
{
            Pattern _pattern_0=REGEXP_x583g4_a0a0a0c0a0a0a0c0a0c0a;
            Matcher _matcher_0=_pattern_0.matcher(pattern);
            if (_matcher_0.matches()) {
              return true;
            }
          }
          return false;
        }
      }
);
    }
  }
  return result;
}
