{
  monitor.start(getDescription(),0);
  try {
    SNode classifier=(SNode)SNodeOperations.getParent(node);
    final SNode instanceMethod=node;
    for (    SNode derivedClassifier : ListSequence.fromList(ClassifierSuccessors.getInstance().getDerivedClassifiers(classifier,scope))) {
      Sequence.fromIterable(Classifier_Behavior.call_methods_5292274854859311639(derivedClassifier)).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return BaseMethodDeclaration_Behavior.call_hasSameSignature_1213877350435(instanceMethod,it);
        }
      }
).visitAll(new IVisitor<SNode>(){
        public void visit(        SNode it){
          ListSequence.fromList(_results).addElement(it);
        }
      }
);
      if (SNodeOperations.isInstanceOf(derivedClassifier,"jetbrains.mps.baseLanguage.structure.EnumClass")) {
        for (        SNode enumConstant : ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(derivedClassifier,"jetbrains.mps.baseLanguage.structure.EnumClass"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1083245097125l,1083245396908l,"enumConstant")))) {
          ListSequence.fromList(SLinkOperations.getChildren(enumConstant,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1083245299891l,492581319488141108l,"method"))).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return BaseMethodDeclaration_Behavior.call_hasSameSignature_1213877350435(instanceMethod,it);
            }
          }
).visitAll(new IVisitor<SNode>(){
            public void visit(            SNode it){
              ListSequence.fromList(_results).addElement(it);
            }
          }
);
        }
      }
    }
  }
  finally {
    monitor.done();
  }
}
