{
  if (node == null)   return;
  boolean incrementalMode=isIncrementalMode();
  MyEventsReadListener nodesReadListener=incrementalMode ? new MyEventsReadListener() : null;
  myQueue.add(node);
  myQueue.addAll(additionalNodes);
  for (SNode sNode=myQueue.poll(); sNode != null; sNode=myQueue.poll()) {
    if (myFullyCheckedNodes.contains(sNode)) {
      continue;
    }
    Set<SNode> candidatesForFrontier=new LinkedHashSet<SNode>();
    if (forceChildrenCheck) {
      candidatesForFrontier.addAll(sNode.getChildren());
    }
    for (    SNode candidate : candidatesForFrontier) {
      if (candidate == null || myFullyCheckedNodes.contains(candidate))       continue;
      myQueue.add(candidate);
    }
    if (!myPartlyCheckedNodes.contains(sNode)) {
      MyLanguageCachesReadListener languageCachesReadListener=null;
      if (incrementalMode) {
        languageCachesReadListener=new MyLanguageCachesReadListener();
        nodesReadListener.clear();
        NodeReadEventsCaster.setNodesReadListener(nodesReadListener);
        LanguageHierarchyCache.getInstance().setReadAccessListener(languageCachesReadListener);
      }
      boolean typeAffected=false;
      try {
        myNodes.add(sNode);
        typeAffected=applyRulesToNode(sNode);
      }
  finally {
        if (incrementalMode) {
          LanguageHierarchyCache.getInstance().removeReadAccessListener();
          NodeReadEventsCaster.removeNodesReadListener();
        }
      }
      if (incrementalMode) {
        nodesReadListener.setAccessReport(true);
        Set<SNode> accessedNodes=nodesReadListener.getAccessedNodes();
        addDependentNodesTypeSystem(sNode,accessedNodes,typeAffected);
        nodesReadListener.setAccessReport(false);
        if (languageCachesReadListener != null) {
          languageCachesReadListener.setAccessReport(true);
          if (languageCachesReadListener.isCacheAccessed()) {
            addCacheDependentNodesTypesystem(sNode);
          }
          languageCachesReadListener.setAccessReport(false);
        }
        nodesReadListener.clear();
      }
      myPartlyCheckedNodes.add(sNode);
    }
    myFullyCheckedNodes.add(sNode);
    if (typeCalculated(targetNode) != null)     return;
  }
}
