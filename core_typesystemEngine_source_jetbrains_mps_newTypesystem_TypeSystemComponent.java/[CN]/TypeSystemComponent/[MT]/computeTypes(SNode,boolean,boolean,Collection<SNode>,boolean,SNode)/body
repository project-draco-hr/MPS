{
  try {
    if (refreshTypes) {
      clear();
      setTargetNode(initialNode);
    }
 else {
      myState.clearStateObjects();
      doInvalidate();
      myPartlyCheckedNodes.addAll(myFullyCheckedNodes);
      myFullyCheckedNodes.clear();
    }
    computeTypesForNode(nodeToCheck,forceChildrenCheck,additionalNodes,initialNode);
    if (typeCalculated(initialNode) != null)     return;
    solveInequalitiesAndExpandTypes(finalExpansion);
    performActionsAfterChecking();
    myState.performActionsAfterChecking();
  }
  finally {
    myInvalidationWasPerformed=false;
  }
}
