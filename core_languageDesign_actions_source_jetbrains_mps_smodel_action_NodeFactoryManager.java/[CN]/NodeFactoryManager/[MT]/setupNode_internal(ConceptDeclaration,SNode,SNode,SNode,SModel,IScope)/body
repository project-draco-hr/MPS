{
  List<NodeFactory> nodeFactories=new ArrayList<NodeFactory>();
  for (  String ancestor : LanguageHierarchyCache.getInstance().getAncestorsNames(NameUtil.nodeFQName(nodeConcept))) {
    SNode acd=SModelUtil.findConceptDeclaration(ancestor,scope);
    Language language=SModelUtil.getDeclaringLanguage(acd);
    if (language == null)     break;
    SModelDescriptor actionsModelDescriptor=language.getActionsModelDescriptor();
    if (actionsModelDescriptor != null) {
      List<NodeFactories> nodeFactoriesList=actionsModelDescriptor.getSModel().getRootsAdapters(NodeFactories.class);
      for (      NodeFactories nodeFactoriesContainer : nodeFactoriesList) {
        for (        NodeFactory nodeFactory : nodeFactoriesContainer.getNodeFactories()) {
          if (nodeFactory.getApplicableConcept() == BaseAdapter.fromNode(acd)) {
            nodeFactories.add(nodeFactory);
          }
        }
      }
    }
  }
  if (nodeFactories.isEmpty())   return false;
  for (  NodeFactory factory : nodeFactories) {
    invokeNodeSetupFunction(factory,newNode,sampleNode,enclosingNode,model);
  }
  return true;
}
