{
  List<SModel> result=ListSequence.fromList(new ArrayList<SModel>());
  final Collection<String> files=getFiles(FileBasedModelRoot.SOURCE_ROOTS);
  final Collection<String> excludedFiles=getFiles(FileBasedModelRoot.EXCLUDED);
  final HashSet<String> processedFiles=new HashSet<String>();
  for (  String file : files) {
    Set<IFile> jarFiles=new HashSet<IFile>();
    collectJarFiles(FileSystem.getInstance().getFileByPath(file),jarFiles);
    for (    IFile jarFile : jarFiles) {
      String jarPath=jarFile.getPath();
      if (processedFiles.contains(jarPath) || excludedFiles.contains(jarPath)) {
        continue;
      }
      findAndAddModels(jarPath,result);
      processedFiles.add(jarPath);
    }
    if (processedFiles.contains(file) || excludedFiles.contains(file)) {
      continue;
    }
    findAndAddModels(file,result);
  }
  return result;
}
