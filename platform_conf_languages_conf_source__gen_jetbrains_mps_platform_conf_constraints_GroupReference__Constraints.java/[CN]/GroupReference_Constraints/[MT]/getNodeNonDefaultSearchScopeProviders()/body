{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("group",new BaseNodeReferenceSearchScopeProvider(){
    public boolean hasPresentation(){
      return true;
    }
    public String getPresentation(    final IOperationContext operationContext,    final PresentationReferentConstraintContext _context){
      return SPropertyOperations.getString(_context.getParameterNode(),"id");
    }
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      return Sequence.fromIterable(((Iterable<IModule>)operationContext.getScope().getVisibleModules())).<SModelDescriptor>translate(new ITranslator2<IModule,SModelDescriptor>(){
        public Iterable<SModelDescriptor> translate(        IModule m){
          return m.getOwnModelDescriptors();
        }
      }
).where(new IWhereFilter<SModelDescriptor>(){
        public boolean accept(        SModelDescriptor smd){
          return !("java_stub".equals(smd.getStereotype()));
        }
      }
).<SNode>translate(new ITranslator2<SModelDescriptor,SNode>(){
        public Iterable<SNode> translate(        SModelDescriptor smd){
          return SModelOperations.getNodes(((SModel)smd.getSModel()),"jetbrains.mps.platform.conf.structure.Group");
        }
      }
);
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:2fe958f4-f755-4faa-af2a-c5125dc0cfc1(jetbrains.mps.platform.conf.constraints)","2948583337000056360");
    }
  }
);
  result.put("anchor",new BaseNodeReferenceSearchScopeProvider(){
    public boolean hasPresentation(){
      return true;
    }
    public String getPresentation(    final IOperationContext operationContext,    final PresentationReferentConstraintContext _context){
      return SConceptPropertyOperations.getString(_context.getParameterNode(),"alias") + " " + SPropertyOperations.getString(_context.getParameterNode(),"id");
    }
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      return Sequence.fromIterable(((Iterable<IModule>)operationContext.getScope().getVisibleModules())).<SModelDescriptor>translate(new ITranslator2<IModule,SModelDescriptor>(){
        public Iterable<SModelDescriptor> translate(        IModule m){
          return m.getOwnModelDescriptors();
        }
      }
).where(new IWhereFilter<SModelDescriptor>(){
        public boolean accept(        SModelDescriptor smd){
          return !("java_stub".equals(smd.getStereotype()));
        }
      }
).<SNode>translate(new ITranslator2<SModelDescriptor,SNode>(){
        public Iterable<SNode> translate(        SModelDescriptor smd){
          return SModelOperations.getNodes(((SModel)smd.getSModel()),"jetbrains.mps.platform.conf.structure.AbstractAction");
        }
      }
);
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:2fe958f4-f755-4faa-af2a-c5125dc0cfc1(jetbrains.mps.platform.conf.constraints)","2948583337000056409");
    }
  }
);
  return result;
}
