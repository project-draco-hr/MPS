{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("requestedAspect",new BaseReferenceConstraintsDescriptor("requestedAspect",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_srl38n_a0a0a0a0a1a0b0a1a1;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return new NamedElementsScope(SNodeOperations.ofConcept(SNodeOperations.getChildren(SNodeOperations.getNode("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)","~LanguageAspect")),"jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration"));
        }
      }
;
    }
  }
);
  return references;
}
