{
  CellProviderWithRole provider=new RefCellCellProvider(node,editorContext);
  provider.setRole("constructorDeclaration");
  provider.setNoTargetText("<no constructorDeclaration>");
  EditorCell editorCell;
  provider.setAuxiliaryCellProvider(new ClassCreator_Editor._Inline_53xyyk_a1a());
  editorCell=provider.createEditorCell(editorContext);
  if (editorCell.getRole() == null) {
    editorCell.setReferenceCell(true);
    editorCell.setRole("baseMethodDeclaration");
  }
  editorCell.setTransformationMenuLookup(new NamedTransformationMenuLookup(LanguageRegistry.getInstance(editorContext.getRepository()),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11a59b0fbceL,"jetbrains.mps.baseLanguage.structure.ClassCreator"),"jetbrains.mps.baseLanguage.editor.ClassCreator_ApplySideTransforms"));
  editorCell.setSubstituteInfo(new CompositeSubstituteInfo(editorContext,provider.getCellContext(),new SubstituteInfoPartExt[]{new ClassCreator_Editor.ReplaceWith_DefaultClassCreator_cellMenu_53xyyk_a0b0(),new ClassCreator_Editor.ClassCreator_constructorDeclaration_cellMenu_53xyyk_b0b0(),new SChildSubstituteInfoPartEx(editorCell)}));
  SNode attributeConcept=provider.getRoleAttribute();
  Class attributeKind=provider.getRoleAttributeClass();
  if (attributeConcept != null) {
    EditorManager manager=EditorManager.getInstanceFromContext(editorContext);
    return manager.createNodeRoleAttributeCell(attributeConcept,attributeKind,editorCell);
  }
 else   return editorCell;
}
