{
  CellProviderWithRole provider=new RefCellCellProvider(node,editorContext);
  provider.setRole("constructorDeclaration");
  provider.setNoTargetText("<no constructorDeclaration>");
  EditorCell editorCell;
  provider.setAuxiliaryCellProvider(new ClassCreator_Editor._Inline_53xyyk_a1a());
  editorCell=provider.createEditorCell(editorContext);
  if (editorCell.getRole() == null) {
    editorCell.setReferenceCell(true);
    editorCell.setRole("baseMethodDeclaration");
  }
  Style style=new StyleImpl();
  style.set(StyleAttributes.RT_ANCHOR_TAG,"ext_2_RTransform");
  editorCell.getStyle().putAll(style);
  editorCell.setSubstituteInfo(new CompositeSubstituteInfo(editorContext,provider.getCellContext(),new SubstituteInfoPartExt[]{new ClassCreator_Editor.ReplaceWith_DefaultClassCreator_cellMenu_53xyyk_a0b0(),new ClassCreator_Editor.ClassCreator_constructorDeclaration_cellMenu_53xyyk_b0b0()}));
  SNode attributeConcept=provider.getRoleAttribute();
  Class attributeKind=provider.getRoleAttributeClass();
  if (attributeConcept != null) {
    IOperationContext opContext=editorContext.getOperationContext();
    EditorManager manager=EditorManager.getInstanceFromContext(opContext);
    return manager.createNodeRoleAttributeCell(editorContext,attributeConcept,attributeKind,editorCell);
  }
 else   return editorCell;
}
