{
  monitor.start(getDescription(),2);
  try {
    List<SNode> fieldDeclarations=new ArrayList<SNode>();
    ListSequence.fromList(fieldDeclarations).addElement(node);
    if (SNodeOperations.getNodeAncestor(node,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"),false,false) != null) {
      ListSequence.fromList(fieldDeclarations).addSequence(ListSequence.fromList((List<SNode>)FindUtils.executeFinder("jetbrains.mps.baseLanguage.findUsages.OverridingFields_Finder",node,scope,monitor.subTask(1))));
    }
    for (    SNode fieldDeclaration : ListSequence.fromList(fieldDeclarations)) {
      for (      SNode fieldUsage : ListSequence.fromList(FindUtils.executeFinder("jetbrains.mps.lang.structure.findUsages.NodeUsages_Finder",fieldDeclaration,scope,monitor.subTask(1)))) {
        ListSequence.fromList(_results).addElement(fieldUsage);
      }
    }
  }
  finally {
    monitor.done();
  }
}
