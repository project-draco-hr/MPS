{
  FileStatusManager.getInstance(myProject).addFileStatusListener(myFileStatusListener);
  VirtualFileManager.getInstance().addVirtualFileListener(myFileListener);
  VirtualFileManager.getInstance().addVirtualFileManagerListener(myVirtualFileManagerListener);
  myProject.getComponent(ProjectLevelVcsManager.class).addVcsListener(myDirectoryMappingListener);
  ChangeListManager.getInstance(myProject).addChangeListListener(myChangeListListener);
  GlobalSModelEventsManager.getInstance().addGlobalModelListener(myGlobalSModelListener);
  myMessageBusConnection=myBus.connect();
  myMessageBusConnection.subscribe(FileEditorManagerListener.FILE_EDITOR_MANAGER,new FileEditorManagerAdapter(){
    @Override public void fileOpened(    FileEditorManager source,    VirtualFile file){
      if (myProjectView.isAutoscrollFromSource(getId())) {
        selectNode(file,false);
      }
    }
    @Override public void selectionChanged(    FileEditorManagerEvent event){
      if (myProjectView.isAutoscrollFromSource(getId())) {
        VirtualFile newFile=event.getNewFile();
        if (newFile != null) {
          selectNode(newFile,false);
        }
      }
    }
  }
);
}
