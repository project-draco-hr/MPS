{
  ListSequence.<SNode>fromList(SLinkOperations.getTargets(innerClass,"typeVariableDeclaration",true)).addSequence(Sequence.<SNode>fromIterable(MapSequence.fromMap(this.myInnerTypeVaryables).values()));
  for (  SNode typeReference : ListSequence.<SNode>fromList(SNodeOperations.getDescendants(innerClass,"jetbrains.mps.baseLanguage.structure.TypeVariableReference",false,new String[]{}))) {
    if (MapSequence.fromMap(this.myInnerTypeVaryables).containsKey(SLinkOperations.getTarget(typeReference,"typeVariableDeclaration",false))) {
      SNodeOperations.replaceWithAnother(typeReference,new ConvertAnonymousRefactoring.QuotationClass_qy1soj_a0a0a0a0b0n().createNode(MapSequence.<SNode,SNode>fromMap(this.myInnerTypeVaryables).get(SLinkOperations.getTarget(typeReference,"typeVariableDeclaration",false))));
    }
  }
}
