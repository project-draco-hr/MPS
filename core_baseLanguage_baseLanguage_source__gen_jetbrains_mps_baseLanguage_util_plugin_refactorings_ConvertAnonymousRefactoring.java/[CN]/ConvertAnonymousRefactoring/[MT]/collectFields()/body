{
  this.myInnerFields=MapSequence.fromMap(new LinkedHashMap<SNode,SNode>(16,(float)0.75,false));
  for (  SNode varReference : Sequence.fromIterable(this.getExternalReferences(this.myClassToRefactor))) {
    SNode varDeclaration=SLinkOperations.getTarget(varReference,"variableDeclaration",false);
    if (!(MapSequence.fromMap(this.myInnerFields).containsKey(varDeclaration))) {
      MapSequence.fromMap(this.myInnerFields).put(varDeclaration,new ConvertAnonymousRefactoring.QuotationClass_qy1soj_a1a0a0b0b0d().createNode(SNodeOperations.copyNode(SLinkOperations.getTarget(varDeclaration,"type",true)),"my" + NameUtil.capitalize(SPropertyOperations.getString(varDeclaration,"name"))));
    }
  }
}
