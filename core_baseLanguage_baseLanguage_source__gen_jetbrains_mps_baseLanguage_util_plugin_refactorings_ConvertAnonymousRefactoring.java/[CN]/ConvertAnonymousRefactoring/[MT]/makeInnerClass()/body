{
  SNode innerClass=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ClassConcept",null);
  SPropertyOperations.set(innerClass,"name",this.myNameForInnerClass);
  SLinkOperations.setTarget(innerClass,"visibility",SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.PrivateVisibility",null),true);
  this.chooseNonStaticForInnerClass(innerClass);
  this.copyChildren(this.myClassToRefactor,innerClass);
  this.addSuperToInnerClass(innerClass);
  this.makeInnerConstructor(innerClass);
  this.addTypeVaryablesToInnerClass(innerClass);
  this.addFieldsToInnerClass(innerClass);
  return innerClass;
}
