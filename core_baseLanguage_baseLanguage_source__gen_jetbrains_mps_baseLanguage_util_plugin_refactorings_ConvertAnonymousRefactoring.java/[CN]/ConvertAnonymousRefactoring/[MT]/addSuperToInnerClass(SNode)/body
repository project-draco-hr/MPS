{
  SNode superInnerClass=new ConvertAnonymousRefactoring.QuotationClass_qy1soj_a0a0a51().createNode(SLinkOperations.getTarget(this.myClassToRefactor,"classifier",false));
  this.addTypeVaryablesToSuperInnerClass(superInnerClass);
  if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(this.myClassToRefactor,"classifier",false),"jetbrains.mps.baseLanguage.structure.Interface")) {
    ListSequence.fromList(SLinkOperations.getTargets(innerClass,"implementedInterface",true)).addElement(superInnerClass);
  }
 else {
    SLinkOperations.setTarget(innerClass,"superclass",superInnerClass,true);
  }
}
