{
  DocCommentHelper.addJavadocLangIfMissing(node);
  if ((AttributeOperations.getAttribute(node,new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment"))) == null)) {
    SNodeFactoryOperations.setNewAttribute(node,new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment")),"jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment");
    SNode line=SNodeFactoryOperations.addNewChild(AttributeOperations.getAttribute(node,new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment"))),"body","jetbrains.mps.baseLanguage.javadoc.structure.CommentLine");
    SNodeFactoryOperations.addNewChild(line,"part","jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart");
  }
 else {
    AttributeOperations.setAttribute(node,new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment")),null);
  }
  editorContext.select(ListSequence.fromList(SLinkOperations.getTargets(AttributeOperations.getAttribute(node,new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment"))),"body",true)).first());
}
