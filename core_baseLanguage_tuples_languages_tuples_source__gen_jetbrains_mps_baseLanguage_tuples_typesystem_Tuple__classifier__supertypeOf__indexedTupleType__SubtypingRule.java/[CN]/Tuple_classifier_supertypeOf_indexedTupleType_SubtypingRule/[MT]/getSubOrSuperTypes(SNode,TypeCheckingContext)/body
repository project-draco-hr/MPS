{
  List<SNode> result=new ArrayList<SNode>();
  String clname="Tuples._" + ListSequence.fromList(SLinkOperations.getTargets(itt,"componentType",true)).count();
  SModel rtmodel=SNodeOperations.getModel(SLinkOperations.getTarget(new _Quotations.QuotationClass_7().createNode(typeCheckingContext),"classifier",false));
  for (  SNode ct : SModelOperations.getNodes(rtmodel,"jetbrains.mps.baseLanguage.structure.Classifier")) {
    if ((clname).equals(SPropertyOperations.getString(ct,"name"))) {
      SNode supertype=new _Quotations.QuotationClass_8().createNode(ct,typeCheckingContext);
      ListSequence.fromList(result).addElement(supertype);
      for (      SNode comptype : SLinkOperations.getTargets(itt,"componentType",true)) {
        SNode javatype=null;
        try {
          javatype=Type_Behavior.call_getJavaType_1213877337345(comptype);
        }
 catch (        RuntimeException ignored) {
        }
        SLinkOperations.addChild(supertype,"parameter",javatype);
      }
    }
  }
  return result;
}
