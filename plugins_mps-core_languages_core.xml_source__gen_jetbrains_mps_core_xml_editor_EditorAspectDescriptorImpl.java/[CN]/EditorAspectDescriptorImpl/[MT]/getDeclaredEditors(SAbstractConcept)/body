{
{
    SAbstractConcept cncpt=((SAbstractConcept)concept);
    Integer preIndex=indices_xbvbvu_a0a.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return Collections.<ConceptEditor>singletonList(new XmlAttribute_Editor());
      }
    break;
case 1:
  if (true) {
    return Collections.<ConceptEditor>singletonList(new XmlBaseAttribute_Editor());
  }
break;
case 2:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlBaseElement_Editor());
}
break;
case 3:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlCDATA_Editor());
}
break;
case 4:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlCharRef_Editor());
}
break;
case 5:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlCharRefValue_Editor());
}
break;
case 6:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlComment_Editor());
}
break;
case 7:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlCommentLine_Editor());
}
break;
case 8:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlContent_Editor());
}
break;
case 9:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlDeclaration_Editor());
}
break;
case 10:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlDoctypeDeclaration_Editor());
}
break;
case 11:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlDocument_Editor());
}
break;
case 12:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlElement_Editor());
}
break;
case 13:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlEntityRef_Editor());
}
break;
case 14:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlEntityRefValue_Editor());
}
break;
case 15:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlExternalId_Editor());
}
break;
case 16:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlFile_Editor());
}
break;
case 17:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlNoSpaceValue_Editor());
}
break;
case 18:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlProcessingInstruction_Editor());
}
break;
case 19:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlProlog_Editor());
}
break;
case 20:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlPrologElement_Editor());
}
break;
case 21:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlText_Editor());
}
break;
case 22:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlTextValue_Editor());
}
break;
case 23:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlValuePart_Editor());
}
break;
case 24:
if (true) {
return Collections.<ConceptEditor>singletonList(new XmlWhitespace_Editor());
}
break;
default :
}
}
return Collections.<ConceptEditor>emptyList();
}
