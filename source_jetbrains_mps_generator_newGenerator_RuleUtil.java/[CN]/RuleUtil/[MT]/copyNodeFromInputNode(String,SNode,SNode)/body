{
  List<SNode> outputNodes=myRuleManager.getReductionRuleManager().tryToReduce(inputNode);
  if (outputNodes != null) {
    return outputNodes;
  }
  SNode outputNode=ModelPersistence.createNodeInstance(templateNode.getClass().getName(),myOutputModel);
  if (outputNode == null) {
    myGenerator.showErrorMessage(null,templateNode,"'copyNodeFromInputNode' cannot create output node");
    return null;
  }
  myGenerator.addOutputNodeByTemplateNodeAndInputNode(templateNode,inputNode,outputNode);
  myGenerator.addOutputNodeByRuleNameAndInputNode(ruleName,inputNode,outputNode);
  myOutputModel.addLanguage(templateNode.getLanguage(myGenerator.getScope()));
  for (  String property : templateNode.getProperties().keySet()) {
    outputNode.setProperty(property,templateNode.getProperty(property),false);
  }
  SModel templateModel=templateNode.getModel();
  for (  SReference reference : templateNode.getReferences()) {
    SNode templateReferentNode=reference.getTargetNode();
    if (templateReferentNode == null) {
      myGenerator.showErrorMessage(null,templateNode,"'copyNodeFromInputNode' referent node is null in template model");
      continue;
    }
    if (templateReferentNode.getModel().equals(templateModel)) {
      myGenerator.addReferenceInfo(new ReferenceInfo_Default(outputNode,reference.getRole(),templateNode,templateReferentNode,inputNode));
    }
 else {
      outputNode.addReferent(reference.getRole(),templateReferentNode);
    }
  }
  for (  BaseAdapter templateChildNode : templateNode.getAdapter().getChildren()) {
    String childRole=templateNode.getRoleOf(templateChildNode.getNode());
    List<SNode> outputChildNodes=copyNodeFromInputNode(ruleName,templateChildNode.getNode(),inputNode);
    if (outputChildNodes != null) {
      for (      SNode outputChildNode : outputChildNodes) {
        outputNode.addChild(childRole,outputChildNode);
      }
    }
  }
  outputNodes=new LinkedList<SNode>();
  outputNodes.add(outputNode);
  return outputNodes;
}
