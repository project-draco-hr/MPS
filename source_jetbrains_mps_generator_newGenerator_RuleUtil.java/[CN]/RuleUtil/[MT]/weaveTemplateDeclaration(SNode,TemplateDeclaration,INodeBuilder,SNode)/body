{
  if (template == null) {
    myGenerator.showErrorMessage(sourceNode,BaseAdapter.fromAdapter(template),ruleNode,"couldn't evaluate weaving rule: no template");
    return;
  }
  List<TemplateFragment> templateFragments=getTemplateFragments(template);
  if (templateFragments.isEmpty()) {
    myGenerator.showErrorMessage(sourceNode,template.getNode(),ruleNode,"nothing to weave: no template fragments found in template");
    return;
  }
  boolean allFragmentsWhichUseDefaultContextHaveSameParent=true;
  SNode defaultContext=null;
  for (  TemplateFragment templateFragment : templateFragments) {
    if (templateFragment.getContextProviderAspectId() == null) {
      SNode fragmentContextNode=BaseAdapter.fromAdapter(templateFragment.getParent().getParent());
      if (defaultContext == null) {
        defaultContext=fragmentContextNode;
      }
 else       if (defaultContext != fragmentContextNode) {
        allFragmentsWhichUseDefaultContextHaveSameParent=false;
        break;
      }
    }
  }
  if (!allFragmentsWhichUseDefaultContextHaveSameParent) {
    for (    TemplateFragment templateFragment : templateFragments) {
      if (templateFragment.getContextProviderAspectId() == null) {
        myGenerator.showErrorMessage(null,templateFragment.getNode(),null,"template fragment uses <default context>: conflicts with other fragments which use <default context>");
      }
    }
  }
  String ruleMappingName=ruleNode.getName();
  for (  TemplateFragment templateFragment : templateFragments) {
    SNode templateFragmentNode=BaseAdapter.fromAdapter(templateFragment.getParent());
    String mappingName=templateFragment.getName();
    if (mappingName == null) {
      mappingName=ruleMappingName;
    }
    List<SNode> weavingSourceNodes=TemplateGenUtil.createSourceNodeListForTemplateNode_ForNewGenerator(sourceNode,templateFragmentNode,0,myGenerator);
    for (    SNode weavingSourceNode : weavingSourceNodes) {
      SNode contextParentNode=getContextNodeForTemplateFragment(templateFragmentNode,contextNodeBuilder);
      if (contextParentNode != null) {
        SNode templateParentNode=templateFragmentNode.getParent();
        String childRole=templateParentNode.getRoleOf(templateFragmentNode);
        List<SNode> outputNodesToWeave=createNodeFromTemplate(mappingName,templateFragmentNode,weavingSourceNode,contextParentNode,childRole,0);
        if (outputNodesToWeave != null) {
          for (          SNode outputNodeToWeave : outputNodesToWeave) {
            contextParentNode.addChild(childRole,outputNodeToWeave);
          }
        }
      }
 else {
        myGenerator.showErrorMessage(sourceNode,templateFragment.getNode(),ruleNode,"couldn't define 'context' for template fragment");
      }
    }
  }
}
