{
  if (template == null) {
    myGenerator.showErrorMessage(inputNode,BaseAdapter.fromAdapter(template),ruleNode,"couldn't evaluate weaving rule: no template");
    return;
  }
  List<TemplateFragment> templateFragments=getTemplateFragments(template);
  if (templateFragments.isEmpty()) {
    myGenerator.showErrorMessage(inputNode,template.getNode(),ruleNode,"nothing to weave: no template fragments found in template");
    return;
  }
  boolean allFragmentsWhichUseDefaultContextHaveSameParent=true;
  SNode defaultContext=null;
  for (  TemplateFragment templateFragment : templateFragments) {
    if (templateFragment.getContextProviderAspectId() == null && templateFragment.getContextNodeQuery() == null) {
      SNode fragmentContextNode=BaseAdapter.fromAdapter(templateFragment.getParent().getParent());
      if (defaultContext == null) {
        defaultContext=fragmentContextNode;
      }
 else       if (defaultContext != fragmentContextNode) {
        allFragmentsWhichUseDefaultContextHaveSameParent=false;
        break;
      }
    }
  }
  if (!allFragmentsWhichUseDefaultContextHaveSameParent) {
    for (    TemplateFragment templateFragment : templateFragments) {
      if (templateFragment.getContextProviderAspectId() == null && templateFragment.getContextNodeQuery() == null) {
        myGenerator.showErrorMessage(null,templateFragment.getNode(),null,"template fragment uses <default context>: conflicts with other fragments which use <default context>");
      }
    }
  }
  String ruleMappingName=ruleNode.getName();
  for (  TemplateFragment templateFragment : templateFragments) {
    SNode templateFragmentNode=BaseAdapter.fromAdapter(templateFragment.getParent());
    SNode contextParentNode=null;
    try {
      contextParentNode=getContextNodeForTemplateFragment(inputNode,templateFragmentNode,outputContextNode);
    }
 catch (    Exception e) {
      LOG.error(e);
    }
    if (contextParentNode != null) {
      String mappingName=templateFragment.getName() != null ? templateFragment.getName() : ruleMappingName;
      List<SNode> outputNodesToWeave=createOutputNodesForTemplateNode(mappingName,templateFragmentNode,inputNode,0,true);
      if (outputNodesToWeave != null) {
        String childRole=templateFragmentNode.getRole_();
        for (        SNode outputNodeToWeave : outputNodesToWeave) {
          contextParentNode.addChild(childRole,outputNodeToWeave);
        }
      }
    }
 else {
      myGenerator.showErrorMessage(inputNode,templateFragment.getNode(),ruleNode,"couldn't define 'context' for template fragment");
    }
  }
}
