{
  SNode fh=ListSequence.fromList(SLinkOperations.getTargets(thisNode,"funHolders",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SPropertyOperations.getBoolean(it,"byIndex") == SNodeOperations.isInstanceOf(range,"jetbrains.mps.ypath.structure.IndexRange");
    }
  }
).first();
  if ((fh != null)) {
    if (IRange_Behavior.call_isInsertionPoint_1213877238219(range)) {
      if (ListSequence.fromList(SLinkOperations.getTargets(fh,"functions",true)).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SNodeOperations.isInstanceOf(it,"jetbrains.mps.ypath.structure.GFInsertFunWrapper");
        }
      }
).isNotEmpty()) {
        return true;
      }
      if (!(SPropertyOperations.getBoolean(range,"has_start") || SPropertyOperations.getBoolean(range,"has_end")) && SPropertyOperations.getBoolean(range,"includes_start")) {
        return ListSequence.fromList(SLinkOperations.getTargets(fh,"functions",true)).where(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return SNodeOperations.isInstanceOf(it,"jetbrains.mps.ypath.structure.IGenericFeatureFunFragment") && SPropertyOperations.hasValue(SNodeOperations.cast(it,"jetbrains.mps.ypath.structure.IGenericFeatureFunFragment"),"fragmentType","INSERT_AT_START","REPLACE_SINGLE");
          }
        }
).isNotEmpty();
      }
 else       if (!(SPropertyOperations.getBoolean(range,"has_start") || SPropertyOperations.getBoolean(range,"has_end")) && SPropertyOperations.getBoolean(range,"includes_end")) {
        return ListSequence.fromList(SLinkOperations.getTargets(fh,"functions",true)).where(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return SNodeOperations.isInstanceOf(it,"jetbrains.mps.ypath.structure.IGenericFeatureFunFragment") && SPropertyOperations.hasValue(SNodeOperations.cast(it,"jetbrains.mps.ypath.structure.IGenericFeatureFunFragment"),"fragmentType","INSERT_AT_END","REPLACE_SINGLE");
          }
        }
).isNotEmpty();
      }
 else       if (SPropertyOperations.getBoolean(range,"has_start")) {
        return ListSequence.fromList(SLinkOperations.getTargets(fh,"functions",true)).where(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return SNodeOperations.isInstanceOf(it,"jetbrains.mps.ypath.structure.IGenericFeatureFunFragment") && SPropertyOperations.hasValue(SNodeOperations.cast(it,"jetbrains.mps.ypath.structure.IGenericFeatureFunFragment"),"fragmentType","INSERT_AFTER","REPLACE_SINGLE");
          }
        }
).isNotEmpty();
      }
 else {
        return ListSequence.fromList(SLinkOperations.getTargets(fh,"functions",true)).where(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return SNodeOperations.isInstanceOf(it,"jetbrains.mps.ypath.structure.IGenericFeatureFunFragment") && SPropertyOperations.hasValue(SNodeOperations.cast(it,"jetbrains.mps.ypath.structure.IGenericFeatureFunFragment"),"fragmentType","INSERT_BEFORE","REPLACE_SINGLE");
          }
        }
).isNotEmpty();
      }
    }
 else     if (SNodeOperations.isInstanceOf(replaceExp,"jetbrains.mps.ypath.structure.EmptySequenceExpression")) {
      if (ListSequence.fromList(SLinkOperations.getTargets(fh,"functions",true)).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SNodeOperations.isInstanceOf(it,"jetbrains.mps.ypath.structure.GFRemoveFunWrapper");
        }
      }
).isNotEmpty()) {
        return true;
      }
      if (IRange_Behavior.call_isSingle_1213877238256(range)) {
        return ListSequence.fromList(SLinkOperations.getTargets(fh,"functions",true)).where(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return SNodeOperations.isInstanceOf(it,"jetbrains.mps.ypath.structure.IGenericFeatureFunFragment") && SPropertyOperations.hasValue(SNodeOperations.cast(it,"jetbrains.mps.ypath.structure.IGenericFeatureFunFragment"),"fragmentType","REMOVE_SINGLE","REPLACE_SINGLE");
          }
        }
).isNotEmpty();
      }
 else       if (IRange_Behavior.call_isLeftOpenSelection_1213877238312(range) || IRange_Behavior.call_isRightOpenSelection_1213877238328(range) || IRange_Behavior.call_isDoubleSelection_1213877238301(range)) {
        return ListSequence.fromList(SLinkOperations.getTargets(fh,"functions",true)).where(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return SNodeOperations.isInstanceOf(it,"jetbrains.mps.ypath.structure.IGenericFeatureFunFragment") && SPropertyOperations.hasValue(SNodeOperations.cast(it,"jetbrains.mps.ypath.structure.IGenericFeatureFunFragment"),"fragmentType","REMOVE_SELECTION","REPLACE_SINGLE");
          }
        }
).isNotEmpty();
      }
 else       if (IRange_Behavior.call_isAll_1213877238199(range)) {
        return ListSequence.fromList(SLinkOperations.getTargets(fh,"functions",true)).where(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return SNodeOperations.isInstanceOf(it,"jetbrains.mps.ypath.structure.IGenericFeatureFunFragment") && SPropertyOperations.hasValue(SNodeOperations.cast(it,"jetbrains.mps.ypath.structure.IGenericFeatureFunFragment"),"fragmentType","REMOVE_ALL","REPLACE_SINGLE");
          }
        }
).isNotEmpty();
      }
    }
 else {
      if (ListSequence.fromList(SLinkOperations.getTargets(fh,"functions",true)).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SNodeOperations.isInstanceOf(it,"jetbrains.mps.ypath.structure.GFReplaceFunWrapper");
        }
      }
).isNotEmpty()) {
        return true;
      }
      if (IRange_Behavior.call_isSingle_1213877238256(range)) {
        return ListSequence.fromList(SLinkOperations.getTargets(fh,"functions",true)).where(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return SNodeOperations.isInstanceOf(it,"jetbrains.mps.ypath.structure.IGenericFeatureFunFragment") && SPropertyOperations.hasValue(SNodeOperations.cast(it,"jetbrains.mps.ypath.structure.IGenericFeatureFunFragment"),"fragmentType","REPLACE_SINGLE","REPLACE_SINGLE");
          }
        }
).isNotEmpty();
      }
 else       if (IRange_Behavior.call_isLeftOpenSelection_1213877238312(range) || IRange_Behavior.call_isRightOpenSelection_1213877238328(range) || IRange_Behavior.call_isDoubleSelection_1213877238301(range)) {
        return ListSequence.fromList(SLinkOperations.getTargets(fh,"functions",true)).where(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return SNodeOperations.isInstanceOf(it,"jetbrains.mps.ypath.structure.IGenericFeatureFunFragment") && SPropertyOperations.hasValue(SNodeOperations.cast(it,"jetbrains.mps.ypath.structure.IGenericFeatureFunFragment"),"fragmentType","REPLACE_SELECTION","REPLACE_SINGLE");
          }
        }
).isNotEmpty();
      }
 else       if (IRange_Behavior.call_isAll_1213877238199(range)) {
        return ListSequence.fromList(SLinkOperations.getTargets(fh,"functions",true)).where(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return SNodeOperations.isInstanceOf(it,"jetbrains.mps.ypath.structure.IGenericFeatureFunFragment") && SPropertyOperations.hasValue(SNodeOperations.cast(it,"jetbrains.mps.ypath.structure.IGenericFeatureFunFragment"),"fragmentType","REPLACE_ALL","REPLACE_SINGLE");
          }
        }
).isNotEmpty();
      }
    }
  }
  return false;
}
