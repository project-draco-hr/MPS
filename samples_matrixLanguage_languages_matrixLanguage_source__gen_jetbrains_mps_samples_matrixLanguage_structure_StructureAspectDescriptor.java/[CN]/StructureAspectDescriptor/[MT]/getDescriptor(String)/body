{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a,conceptFqName)) {
case 0:
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.matrixLanguage.structure.DeterminantExpression",new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Expression"});
case 1:
  return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.matrixLanguage.structure.ForEachMatrixElement",new String[]{"jetbrains.mps.baseLanguage.structure.AbstractLoopStatement"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.AbstractLoopStatement"});
case 2:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.matrixLanguage.structure.MatrixAddExpression",new String[]{"jetbrains.mps.baseLanguage.structure.BinaryOperation"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.BinaryOperation"});
case 3:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.matrixLanguage.structure.MatrixDivExpression",new String[]{"jetbrains.mps.baseLanguage.structure.BinaryOperation"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.BinaryOperation"});
case 4:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.matrixLanguage.structure.MatrixElementVariableDeclaration",new String[]{"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration"});
case 5:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.matrixLanguage.structure.MatrixElementVariableReference",new String[]{"jetbrains.mps.baseLanguage.structure.LocalVariableReference"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.LocalVariableReference"});
case 6:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.matrixLanguage.structure.MatrixIndexVariableDeclaration",new String[]{"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration"});
case 7:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.matrixLanguage.structure.MatrixIndexVariableReference",new String[]{"jetbrains.mps.baseLanguage.structure.LocalVariableReference"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.LocalVariableReference"});
case 8:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.matrixLanguage.structure.MatrixLiteral",new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Expression"});
case 9:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.matrixLanguage.structure.MatrixMultExpression",new String[]{"jetbrains.mps.baseLanguage.structure.BinaryOperation"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.BinaryOperation"});
case 10:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.matrixLanguage.structure.MatrixRow",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 11:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.matrixLanguage.structure.MatrixSubExpression",new String[]{"jetbrains.mps.baseLanguage.structure.BinaryOperation"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.BinaryOperation"});
case 12:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.matrixLanguage.structure.MatrixType",new String[]{"jetbrains.mps.baseLanguage.structure.Type"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Type"});
case 13:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.matrixLanguage.structure.TransposeExpression",new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Expression"});
default :
return null;
}
}
