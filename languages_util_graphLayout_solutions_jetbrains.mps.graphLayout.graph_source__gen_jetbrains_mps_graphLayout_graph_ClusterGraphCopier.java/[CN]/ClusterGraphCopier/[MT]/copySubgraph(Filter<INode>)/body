{
  super.copySubgraph(nodeFilter);
  Tree tree=myClusteredGraph.getInclusionTree();
  List<Node> clusters=tree.getNodes();
  for (  Node leafCluster : ListSequence.fromList(clusters).where(new IWhereFilter<Node>(){
    public boolean accept(    Node it){
      return (int)ListSequence.fromList(it.getOutEdges()).count() == 0;
    }
  }
)) {
    Node node=this.getLeafNode(leafCluster);
    if (nodeFilter.accept(node)) {
      findGoodClusters(leafCluster);
    }
  }
  Tree copyTree=getCopy().getInclusionTree();
  Node copyRoot=copyTree.createNode();
  getCopy().setRoot(copyRoot);
  copyCluster(myClusteredGraph.getRoot(),copyRoot);
  return getCopy();
}
