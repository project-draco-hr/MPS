{
  if (myTypes.isEmpty()) {
    myTypes.add(type);
    return;
  }
  if (myTypes.peek() instanceof ASMClassType) {
    ASMClassType ct=(ASMClassType)myTypes.pop();
    ASMParameterizedType replacement=new ASMParameterizedType(ct,new ArrayList<ASMType>());
    if (!(myTypes.isEmpty())) {
      ASMParameterizedType parent=(ASMParameterizedType)unwrap(myTypes.peek());
      parent.removeArgument(ct);
      parent.addArgument(replacement);
    }
    myTypes.push(replacement);
  }
 else   if (myTypes.peek() instanceof ASMBoundedType) {
    ASMBoundedType bounded=(ASMBoundedType)myTypes.peek();
    ASMType bound=bounded.getBound();
    ASMType wrapped=wrap(type);
    if (bound instanceof ASMParameterizedType) {
      ((ASMParameterizedType)bound).addArgument(wrapped);
    }
 else {
      ASMParameterizedType newBound=new ASMParameterizedType(bound,new ArrayList<ASMType>());
      newBound.addArgument(wrapped);
      bounded.setBound(newBound);
    }
  }
  ASMType wrapped=wrap(type);
  if (myTypes.peek() instanceof ASMParameterizedType) {
    ((ASMParameterizedType)myTypes.peek()).addArgument(wrapped);
  }
  if (type instanceof ASMClassType) {
    myTypes.push(wrapped);
  }
}
