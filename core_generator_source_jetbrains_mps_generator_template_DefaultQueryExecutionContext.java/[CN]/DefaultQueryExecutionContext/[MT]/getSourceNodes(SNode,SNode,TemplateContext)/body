{
  try {
    final SNodeReference qr=query.getReference();
    SourceNodesQuery q=myNodesQueries.get(qr);
    if (q == null) {
      q=myGenerator.getGeneratorSessionContext().getQueryProvider(qr).getSourceNodesQuery(query);
      myNodesQueries.put(qr,q);
    }
    final Collection<SNode> result=q.evaluate(new SourceSubstituteMacroNodesContext(context,templateNode.getReference(),myGenerator));
    CollectionUtil.checkForNulls(result,"null values in source nodes");
    @SuppressWarnings("unchecked") List<SNode> resultList=(result instanceof List) ? (List<SNode>)result : new ArrayList<SNode>(result);
    return resultList;
  }
 catch (  GenerationFailureException ex) {
    throw ex;
  }
catch (  Exception e) {
    getLog().handleException(e);
    getLog().error(query.getReference(),"cannot evaluate query, exception was thrown",GeneratorUtil.describeInput(context));
    return Collections.emptyList();
  }
}
