{
  if (condition == null) {
    if (required) {
      getLog().error(ruleNode.getReference(),"rule condition required",GeneratorUtil.describeInput(templateContext));
      return false;
    }
    return true;
  }
  String methodName=TemplateFunctionMethodName.baseMappingRule_Condition(condition);
  try {
    return QueryMethodGenerated.<Boolean>invoke(methodName,myGenerator.getGeneratorSessionContext(),new ReductionRuleQueryContext(templateContext,ruleNode,myGenerator),ruleNode.getModel(),true);
  }
 catch (  ClassNotFoundException e) {
    getLog().warning(condition.getReference(),String.format("cannot find condition method '%s' : evaluate to FALSE",methodName));
  }
catch (  NoSuchMethodException e) {
    getLog().warning(condition.getReference(),String.format("cannot find condition method '%s' : evaluate to FALSE",methodName));
  }
catch (  Throwable t) {
    getLog().handleException(t);
    getLog().error(condition.getReference(),String.format("error executing condition '%s', exception was thrown",methodName));
    throw new GenerationFailureException(t);
  }
  return false;
}
