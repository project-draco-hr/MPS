{
  if (condition == null) {
    if (required) {
      myGenerator.showErrorMessage(templateContext.getInput(),null,ruleNode,"rule condition required");
      return false;
    }
    return true;
  }
  String methodName=TemplateFunctionMethodName.baseMappingRule_Condition(condition);
  try {
    return (Boolean)QueryMethodGenerated.invoke(methodName,myGenerator.getGeneratorSessionContext(),new ReductionRuleQueryContext(templateContext,ruleNode,myGenerator),ruleNode.getModel(),true);
  }
 catch (  ClassNotFoundException e) {
    myGenerator.getLogger().warning(condition,"cannot find condition method '" + methodName + "' : evaluate to FALSE");
  }
catch (  NoSuchMethodException e) {
    myGenerator.getLogger().warning(condition,"cannot find condition method '" + methodName + "' : evaluate to FALSE");
  }
catch (  Throwable t) {
    myGenerator.getLogger().handleException(t);
    myGenerator.getLogger().error(condition,"error executing condition " + methodName + ", exception was thrown");
    throw new GenerationFailureException(t);
  }
  return false;
}
