{
  SNode function=RuleUtil.getIfMacro_ConditionFunction(ifMacro);
  if (function == null) {
    getLog().error(ifMacro.getReference(),"cannot evaluate if-macro condition",GeneratorUtil.describeInput(context));
    throw new GenerationFailureException("cannot evaluate if-macro condition");
  }
  String methodName=TemplateFunctionMethodName.ifMacro_Condition(function);
  try {
    return QueryMethodGenerated.<Boolean>invoke(methodName,myGenerator.getGeneratorSessionContext(),new IfMacroContext(context.subContext(inputNode),ifMacro.getReference(),myGenerator),ifMacro.getModel(),true);
  }
 catch (  ClassNotFoundException e) {
    getLog().warning(ifMacro.getReference(),String.format("cannot find condition method '%s' : evaluate to FALSE",methodName));
  }
catch (  NoSuchMethodException e) {
    getLog().warning(ifMacro.getReference(),String.format("cannot find condition method '%s' : evaluate to FALSE",methodName));
  }
catch (  Throwable t) {
    getLog().handleException(t);
    getLog().error(ifMacro.getReference(),String.format("error executing condition '%s', exception was thrown",methodName));
    throw new GenerationFailureException(t);
  }
  return false;
}
