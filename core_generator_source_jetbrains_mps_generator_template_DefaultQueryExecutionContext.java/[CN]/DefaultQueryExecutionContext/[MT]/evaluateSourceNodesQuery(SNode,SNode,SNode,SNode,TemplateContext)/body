{
  String methodName=TemplateFunctionMethodName.sourceSubstituteMacro_SourceNodesQuery(query);
  try {
    Object result=QueryMethodGenerated.invoke(methodName,myGenerator.getGeneratorSessionContext(),new SourceSubstituteMacroNodesContext(inputNode,ruleNode,macroNode,context,myGenerator),query.getModel());
    List<SNode> resultList;
    if (result instanceof List) {
      resultList=(List<SNode>)result;
    }
 else {
      resultList=new ArrayList<SNode>(IterableUtil.asCollection((Iterable<SNode>)result));
    }
    CollectionUtil.checkForNulls(resultList);
    return resultList;
  }
 catch (  NoSuchMethodException e) {
    myGenerator.getLogger().warning(macroNode,"cannot find nodes query '" + methodName + "' : evaluate to empty list");
    return new ArrayList<SNode>();
  }
catch (  Exception e) {
    myGenerator.getLogger().handleException(e);
    myGenerator.showErrorMessage(inputNode,query,"cannot evaluate query, exception was thrown");
    return new LinkedList<SNode>();
  }
}
