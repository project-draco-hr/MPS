{
  final Wrappers._int time=new Wrappers._int(0);
  Sequence.fromIterable(ws).where(new IWhereFilter<CycleDetector.Wrapper<V>>(){
    public boolean accept(    CycleDetector.Wrapper<V> w){
      return !(w.entered);
    }
  }
).visitAll(new IVisitor<CycleDetector.Wrapper<V>>(){
    public void visit(    CycleDetector.Wrapper<V> w){
      time.value=dfsVisitFold(w,time.value,new _FunctionTypes._return_P2_E0<Integer,CycleDetector.Wrapper<V>,Integer>(){
        public Integer invoke(        CycleDetector.Wrapper<V> ww,        Integer t){
          return ww.setStartTime(++t);
        }
      }
,new _FunctionTypes._return_P2_E0<Integer,CycleDetector.Wrapper<V>,Integer>(){
        public Integer invoke(        CycleDetector.Wrapper<V> ww,        Integer t){
          return ww.setEndTime(++t);
        }
      }
,CycleDetector.this.forward);
    }
  }
);
  Sequence.fromIterable(ws).visitAll(new IVisitor<CycleDetector.Wrapper<V>>(){
    public void visit(    CycleDetector.Wrapper<V> w){
      w.clear();
    }
  }
);
}
