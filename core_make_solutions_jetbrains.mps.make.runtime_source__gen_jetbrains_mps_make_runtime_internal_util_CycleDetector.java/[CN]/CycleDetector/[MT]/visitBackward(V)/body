{
  CycleDetector.Data data=MapSequence.fromMap(dataMap).get(v);
  data.color=CycleDetector.Color.GRAY;
  Sequence.fromIterable(backwardEdges(v)).sort(new Comparator<V>(){
    public int compare(    V a,    V b){
      return MapSequence.fromMap(dataMap).get(b).endTime - MapSequence.fromMap(dataMap).get(a).endTime;
    }
  }
,true).visitAll(new IVisitor<V>(){
    public void visit(    V prev){
      if (CycleDetector.Color.BLACK == MapSequence.fromMap(dataMap).get(prev).color) {
        MapSequence.fromMap(dataMap).get(v).addSuccessor(prev);
        visitBackward(prev);
      }
    }
  }
);
  data.color=CycleDetector.Color.WHITE;
}
