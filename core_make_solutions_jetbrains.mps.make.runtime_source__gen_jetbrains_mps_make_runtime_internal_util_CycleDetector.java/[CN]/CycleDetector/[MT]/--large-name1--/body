{
  final Wrappers._T<T> _seed=new Wrappers._T<T>(seed);
  w.enter();
  _seed.value=foldBefore.invoke(w,_seed.value);
  Sequence.fromIterable(edges.invoke(w)).where(new IWhereFilter<CycleDetector.Wrapper<V>>(){
    public boolean accept(    CycleDetector.Wrapper<V> ww){
      return !(ww.entered);
    }
  }
).visitAll(new IVisitor<CycleDetector.Wrapper<V>>(){
    public void visit(    CycleDetector.Wrapper<V> ww){
      _seed.value=CycleDetector.this.<T>dfsVisitFold(ww,_seed.value,foldBefore,foldAfter,edges);
    }
  }
);
  w.exit();
  _seed.value=foldAfter.invoke(w,_seed.value);
  return _seed.value;
}
