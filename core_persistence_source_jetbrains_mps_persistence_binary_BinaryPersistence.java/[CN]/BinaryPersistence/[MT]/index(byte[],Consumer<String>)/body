{
  ModelInputStream mis=null;
  try {
    mis=new ModelInputStream(new ByteArrayInputStream(content));
    SModelHeader modelHeader=loadHeader(mis);
    SModel model=new DefaultSModel(modelHeader.getModelReference(),modelHeader);
    loadModelProperties(model,mis);
    for (    ImportElement element : model.importedModels()) {
      consumer.consume(element.getModelReference().getModelName());
    }
    new NodesReader(modelHeader.getModelReference(),false){
      @Override protected SConcept readConceptId(      ModelInputStream is) throws IOException {
        SConcept cid=super.readConceptId(is);
        String name=MPSModuleRepository.getInstance().getDebugRegistry().getConceptName(cid);
        consumer.consume(name);
        return cid;
      }
      @Override protected SNodeId readTargetNodeId(      ModelInputStream is) throws IOException {
        SNodeId id=super.readTargetNodeId(is);
        if (id != null) {
          consumer.consume(id.toString());
        }
        return id;
      }
    }
.readNodes(mis);
  }
 catch (  IOException e) {
    throw new ModelReadException("Couldn't read model: " + e.getMessage(),e);
  }
 finally {
    FileUtil.closeFileSafe(mis);
  }
}
