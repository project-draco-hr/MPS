{
  os.writeInt(languages.size());
  for (  SLanguage language : languages) {
    os.writeString(IdHelper.getLanguageId(language).serialize());
    os.writeString(language.getQualifiedName());
  }
  os.writeInt(importedModels.size());
  for (  ImportElement ie : importedModels) {
    SModelReference ref=ie.getModelReference();
    org.jetbrains.mps.openapi.model.SModel model=ref.resolve(MPSModuleRepository.getInstance());
    String name=model != null ? model.getModelName() : DebugRegistry.getInstance().getModelName(ref);
    os.writeModelReference(ref);
    os.writeString(name == null ? "" : name);
  }
  Map<SConceptId,String> conceptIds=new HashMap<SConceptId,String>();
  Map<SPropertyId,String> propIds=new HashMap<SPropertyId,String>();
  Map<SReferenceLinkId,String> refIds=new HashMap<SReferenceLinkId,String>();
  Map<SContainmentLinkId,String> roleIds=new HashMap<SContainmentLinkId,String>();
  final IdInfoCollector ic=new IdInfoCollector();
  ic.fill(rootNodes);
  ic.getDebugInfoById(conceptIds,propIds,refIds,roleIds);
  os.writeInt(conceptIds.size());
  for (  Entry<SConceptId,String> e : conceptIds.entrySet()) {
    os.writeString(e.getKey().serialize());
    os.writeString(e.getValue() == null ? "" : e.getValue());
  }
  os.writeInt(propIds.size());
  for (  Entry<SPropertyId,String> e : propIds.entrySet()) {
    os.writeString(e.getKey().serialize());
    os.writeString(e.getValue() == null ? "" : e.getValue());
  }
  os.writeInt(refIds.size());
  for (  Entry<SReferenceLinkId,String> e : refIds.entrySet()) {
    os.writeString(e.getKey().serialize());
    os.writeString(e.getValue() == null ? "" : e.getValue());
  }
  os.writeInt(roleIds.size());
  for (  Entry<SContainmentLinkId,String> e : roleIds.entrySet()) {
    os.writeString(e.getKey().serialize());
    os.writeString(e.getValue() == null ? "" : e.getValue());
  }
}
