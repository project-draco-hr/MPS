{
  DebugRegistry debugRegistry=MPSModuleRepository.getInstance().getDebugRegistry();
  os.writeInt(languages.size());
  for (  SLanguageId languageId : languages) {
    Language lang=new SLanguageAdapter(languageId).getSourceModule();
    String name=lang != null ? lang.getModuleName() : debugRegistry.getLanguageName(languageId);
    os.writeString(languageId.serialize());
    os.writeString(name);
  }
  os.writeInt(importedModels.size());
  for (  ImportElement ie : importedModels) {
    SModelReference ref=ie.getModelReference();
    org.jetbrains.mps.openapi.model.SModel model=ref.resolve(MPSModuleRepository.getInstance());
    String name=model != null ? model.getModelName() : debugRegistry.getModelName(ref);
    os.writeModelReference(ref);
    os.writeString(name);
  }
  Map<SConceptId,String> conceptIds=new HashMap<SConceptId,String>();
  Map<SProperty,String> propIds=new HashMap<SProperty,String>();
  Map<SReferenceLinkId,String> refIds=new HashMap<SReferenceLinkId,String>();
  Map<SContainmentLink111,String> roleIds=new HashMap<SContainmentLink111,String>();
  DebugRegistryUtil.getDebugInfoById(rootNodes,conceptIds,propIds,refIds,roleIds);
  os.writeInt(conceptIds.size());
  for (  Entry<SConceptId,String> e : conceptIds.entrySet()) {
    os.writeString(e.getKey().serialize());
    os.writeString(e.getValue());
  }
  os.writeInt(propIds.size());
  for (  Entry<SProperty,String> e : propIds.entrySet()) {
    os.writeString(e.getKey().serialize());
    os.writeString(e.getValue());
  }
  os.writeInt(refIds.size());
  for (  Entry<SReferenceLinkId,String> e : refIds.entrySet()) {
    os.writeString(e.getKey().serialize());
    os.writeString(e.getValue());
  }
  os.writeInt(roleIds.size());
  for (  Entry<SContainmentLink111,String> e : roleIds.entrySet()) {
    os.writeString(e.getKey().serialize());
    os.writeString(e.getValue());
  }
}
