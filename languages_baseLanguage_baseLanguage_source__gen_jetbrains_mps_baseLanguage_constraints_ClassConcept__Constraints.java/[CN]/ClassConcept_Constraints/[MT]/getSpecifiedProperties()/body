{
  Map<SProperty,PropertyConstraintsDescriptor> properties=new HashMap<SProperty,PropertyConstraintsDescriptor>();
  properties.put(MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x451f9e9f920b7f7dL,"isStatic"),new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x451f9e9f920b7f7dL),this){
    @Override public boolean hasOwnGetter(){
      return true;
    }
    @Override public Object getValue(    SNode node){
      String propertyName="isStatic";
      return !(SPropertyOperations.getBoolean(node,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x73c6d8a8c021f99L,"nonStatic")));
    }
    @Override public boolean hasOwnSetter(){
      return true;
    }
    @Override public void setValue(    SNode node,    String propertyValue){
      String propertyName="isStatic";
      SPropertyOperations.set(node,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x73c6d8a8c021f99L,"nonStatic"),"" + (!((SPropertyOperations.getBoolean(propertyValue)))));
    }
  }
);
  return properties;
}
