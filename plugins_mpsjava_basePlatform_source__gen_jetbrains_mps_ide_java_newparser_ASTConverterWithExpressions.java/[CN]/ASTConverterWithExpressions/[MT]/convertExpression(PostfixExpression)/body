{
  SNode op;
switch (x.operator) {
case OperatorIds.MINUS:
    op=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11aded05fe6L,"jetbrains.mps.baseLanguage.structure.PostfixDecrementExpression")));
  break;
case OperatorIds.PLUS:
op=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11adecdb4f0L,"jetbrains.mps.baseLanguage.structure.PostfixIncrementExpression")));
break;
default :
throw new JavaParseException("Unexpected postfix operator");
}
SLinkOperations.setTarget(op,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x120a4c1f269L,0x120a4c433a6L,"expression"),convertExpressionWrap(x.lhs));
return op;
}
