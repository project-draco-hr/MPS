{
  List<SNode> initializers=new ArrayList<SNode>();
  if (x.expressions != null) {
    for (    Expression expression : x.expressions) {
      ListSequence.fromList(initializers).addElement(convertExpressionWrap(expression));
    }
  }
  SNode arrayLiteral=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a770dc0dL,"jetbrains.mps.baseLanguage.structure.ArrayLiteral")));
  for (  SNode initializer : initializers) {
    ListSequence.fromList(SLinkOperations.getChildren(arrayLiteral,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a770dc0dL,0x114a770fdbfL,"item"))).addElement(initializer);
  }
  return arrayLiteral;
}
