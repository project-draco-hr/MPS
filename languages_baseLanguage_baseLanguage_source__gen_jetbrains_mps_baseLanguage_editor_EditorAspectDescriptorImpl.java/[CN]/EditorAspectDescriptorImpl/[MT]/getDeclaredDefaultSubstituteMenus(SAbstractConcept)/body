{
{
    SAbstractConcept cncpt=concept;
switch (index_xbvbvu_a0i.index(cncpt)) {
case 0:
      return Collections.<SubstituteMenu>singletonList(new AbstractCreator_SubstituteMenu());
case 1:
    return Collections.<SubstituteMenu>singletonList(new AnnotationInstanceExpression_SubstituteMenu());
case 2:
  return Collections.<SubstituteMenu>singletonList(new AnnotationInstanceValue_SubstituteMenu());
case 3:
return Collections.<SubstituteMenu>singletonList(new AnonymousClass_SubstituteMenu());
case 4:
return Collections.<SubstituteMenu>singletonList(new AnonymousClassCreator_SubstituteMenu());
case 5:
return Collections.<SubstituteMenu>singletonList(new ArrayLiteral_SubstituteMenu());
case 6:
return Collections.<SubstituteMenu>singletonList(new ArrayType_SubstituteMenu());
case 7:
return Collections.<SubstituteMenu>singletonList(new AsExpression_SubstituteMenu());
case 8:
return Collections.<SubstituteMenu>singletonList(new BLBottomType_SubstituteMenu());
case 9:
return Collections.<SubstituteMenu>singletonList(new BooleanConstant_SubstituteMenu());
case 10:
return Collections.<SubstituteMenu>singletonList(new BreakStatement_SubstituteMenu());
case 11:
return Collections.<SubstituteMenu>singletonList(new CastExpression_SubstituteMenu());
case 12:
return Collections.<SubstituteMenu>singletonList(new ClassifierClassExpression_SubstituteMenu());
case 13:
return Collections.<SubstituteMenu>singletonList(new ClassifierMember_SubstituteMenu());
case 14:
return Collections.<SubstituteMenu>singletonList(new ClassifierType_SubstituteMenu());
case 15:
return Collections.<SubstituteMenu>singletonList(new CommentedStatement_SubstituteMenu());
case 16:
return Collections.<SubstituteMenu>singletonList(new CommentedStatementsBlock_SubstituteMenu());
case 17:
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_SubstituteMenu());
case 18:
return Collections.<SubstituteMenu>singletonList(new ContinueStatement_SubstituteMenu());
case 19:
return Collections.<SubstituteMenu>singletonList(new DotExpression_SubstituteMenu());
case 20:
return Collections.<SubstituteMenu>singletonList(new EnumValueOfExpression_SubstituteMenu());
case 21:
return Collections.<SubstituteMenu>singletonList(new EnumValuesExpression_SubstituteMenu());
case 22:
return Collections.<SubstituteMenu>singletonList(new Expression_SubstituteMenu());
case 23:
return Collections.<SubstituteMenu>singletonList(new FloatingPointConstant_SubstituteMenu());
case 24:
return Collections.<SubstituteMenu>singletonList(new FloatingPointFloatConstant_SubstituteMenu());
case 25:
return Collections.<SubstituteMenu>singletonList(new IfStatement_SubstituteMenu());
case 26:
return Collections.<SubstituteMenu>singletonList(new ImplicitAnnotationInstanceValue_SubstituteMenu());
case 27:
return Collections.<SubstituteMenu>singletonList(new IncompleteMemberDeclaration_SubstituteMenu());
case 28:
return Collections.<SubstituteMenu>singletonList(new IntegerConstant_SubstituteMenu());
case 29:
return Collections.<SubstituteMenu>singletonList(new LocalInstanceFieldReference_SubstituteMenu());
case 30:
return Collections.<SubstituteMenu>singletonList(new LocalInstanceMethodCall_SubstituteMenu());
case 31:
return Collections.<SubstituteMenu>singletonList(new LocalStaticFieldReference_SubstituteMenu());
case 32:
return Collections.<SubstituteMenu>singletonList(new LocalStaticMethodCall_SubstituteMenu());
case 33:
return Collections.<SubstituteMenu>singletonList(new LocalVariableDeclaration_SubstituteMenu());
case 34:
return Collections.<SubstituteMenu>singletonList(new LocalVariableReference_SubstituteMenu());
case 35:
return Collections.<SubstituteMenu>singletonList(new LongLiteral_SubstituteMenu());
case 36:
return Collections.<SubstituteMenu>singletonList(new NullType_SubstituteMenu());
case 37:
return Collections.<SubstituteMenu>singletonList(new ParameterDeclaration_SubstituteMenu());
case 38:
return Collections.<SubstituteMenu>singletonList(new ParameterReference_SubstituteMenu());
case 39:
return Collections.<SubstituteMenu>singletonList(new PlaceholderMember_SubstituteMenu());
case 40:
return Collections.<SubstituteMenu>singletonList(new PrimitiveClassExpression_SubstituteMenu());
case 41:
return Collections.<SubstituteMenu>singletonList(new RemarkStatement_SubstituteMenu());
case 42:
return Collections.<SubstituteMenu>singletonList(new Statement_SubstituteMenu());
case 43:
return Collections.<SubstituteMenu>singletonList(new StatementCommentPart_SubstituteMenu());
case 44:
return Collections.<SubstituteMenu>singletonList(new StatementList_SubstituteMenu());
case 45:
return Collections.<SubstituteMenu>singletonList(new StaticFieldDeclaration_SubstituteMenu());
case 46:
return Collections.<SubstituteMenu>singletonList(new StaticMethodDeclaration_SubstituteMenu());
case 47:
return Collections.<SubstituteMenu>singletonList(new StringLiteral_SubstituteMenu());
case 48:
return Collections.<SubstituteMenu>singletonList(new StringToken_SubstituteMenu());
case 49:
return Collections.<SubstituteMenu>singletonList(new StubStatementList_SubstituteMenu());
case 50:
return Collections.<SubstituteMenu>singletonList(new SubstringExpression_SubstituteMenu());
case 51:
return Collections.<SubstituteMenu>singletonList(new SuperConstructorInvocation_SubstituteMenu());
case 52:
return Collections.<SubstituteMenu>singletonList(new TextCommentPart_SubstituteMenu());
case 53:
return Collections.<SubstituteMenu>singletonList(new ThisConstructorInvocation_SubstituteMenu());
case 54:
return Collections.<SubstituteMenu>singletonList(new Type_SubstituteMenu());
case 55:
return Collections.<SubstituteMenu>singletonList(new UndefinedType_SubstituteMenu());
case 56:
return Collections.<SubstituteMenu>singletonList(new UnknownConsCall_SubstituteMenu());
case 57:
return Collections.<SubstituteMenu>singletonList(new UnknownDotCall_SubstituteMenu());
case 58:
return Collections.<SubstituteMenu>singletonList(new UnknownLocalCall_SubstituteMenu());
case 59:
return Collections.<SubstituteMenu>singletonList(new UnknownNameRef_SubstituteMenu());
case 60:
return Collections.<SubstituteMenu>singletonList(new UnknownNew_SubstituteMenu());
case 61:
return Collections.<SubstituteMenu>singletonList(new UnresolvedNameReference_SubstituteMenu());
case 62:
return Collections.<SubstituteMenu>singletonList(new ValueParameter_SubstituteMenu());
case 63:
return Collections.<SubstituteMenu>singletonList(new Visibility_SubstituteMenu());
default :
}
}
return Collections.<SubstituteMenu>emptyList();
}
