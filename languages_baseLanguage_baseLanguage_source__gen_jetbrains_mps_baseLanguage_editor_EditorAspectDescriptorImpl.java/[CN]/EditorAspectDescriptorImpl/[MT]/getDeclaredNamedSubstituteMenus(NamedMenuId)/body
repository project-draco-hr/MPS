{
{
    SAbstractConcept cncpt=(SAbstractConcept)menuId.getConcept();
switch (index_xbvbvu_a0j.index(cncpt)) {
case 0:
      if (true) {
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0a1a0a9,menuId.getFqName())) {
case 0:
          return Arrays.asList(new SubstituteMenu[]{new StaticFieldInClassifier()});
case 1:
        return Arrays.asList(new SubstituteMenu[]{new ctor_IncompleteMember()});
case 2:
      return Arrays.asList(new SubstituteMenu[]{new ctor_IncompleteMemberInInterface()});
case 3:
    return Arrays.asList(new SubstituteMenu[]{new ctor_InterfaceMemberBasedOnIncomplete()});
case 4:
  return Arrays.asList(new SubstituteMenu[]{new ctor_MemberBasedOnIncomplete()});
default :
}
}
break;
case 1:
if (true) {
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0b1a0a9,menuId.getFqName())) {
case 0:
return Arrays.asList(new SubstituteMenu[]{new CreateEnumConstantReferences()});
case 1:
return Arrays.asList(new SubstituteMenu[]{new ParensAroundEmptyExpression()});
case 2:
return Arrays.asList(new SubstituteMenu[]{new PrimitiveClassExpression()});
case 3:
return Arrays.asList(new SubstituteMenu[]{new conceptFunctionParameters()});
case 4:
return Arrays.asList(new SubstituteMenu[]{new constants()});
case 5:
return Arrays.asList(new SubstituteMenu[]{new liveTemplates_Expression()});
case 6:
return Arrays.asList(new SubstituteMenu[]{new new_()});
case 7:
return Arrays.asList(new SubstituteMenu[]{new qualifiedSuperMethodCallExpression()});
case 8:
return Arrays.asList(new SubstituteMenu[]{new smartCast()});
case 9:
return Arrays.asList(new SubstituteMenu[]{new staticAccess()});
case 10:
return Arrays.asList(new SubstituteMenu[]{new thisExpression()});
case 11:
return Arrays.asList(new SubstituteMenu[]{new valueParameter()});
default :
}
}
break;
case 2:
if (true) {
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0c1a0a9,menuId.getFqName())) {
case 0:
return Arrays.asList(new SubstituteMenu[]{new menuForSubstitutingInIf()});
default :
}
}
break;
case 3:
if (true) {
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0d1a0a9,menuId.getFqName())) {
case 0:
return Arrays.asList(new SubstituteMenu[]{new expressionStatement_()});
case 1:
return Arrays.asList(new SubstituteMenu[]{new ifStatement_()});
case 2:
return Arrays.asList(new SubstituteMenu[]{new localVariables()});
case 3:
return Arrays.asList(new SubstituteMenu[]{new localVariablesWithType()});
case 4:
return Arrays.asList(new SubstituteMenu[]{new loopStatements()});
case 5:
return Arrays.asList(new SubstituteMenu[]{new thisAndSuperConstructor()});
default :
}
}
break;
default :
}
}
return Collections.<SubstituteMenu>emptyList();
}
