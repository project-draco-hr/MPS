{
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0b,descriptor.getConceptFqName())) {
case 0:
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a0a1,editorComponentId)) {
case 0:
      return Collections.<ConceptEditorComponent>singletonList(new BaseMethodDeclaration_BodyComponent(null));
case 1:
    return Collections.<ConceptEditorComponent>singletonList(new BaseMethodDeclaration_NameCellComponent(null));
default :
}
break;
case 1:
if ("jetbrains.mps.baseLanguage.editor.ClassifierMembers_Component".equals(editorComponentId)) {
return Collections.<ConceptEditorComponent>singletonList(new ClassifierMembers_Component(null));
}
break;
case 2:
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0c0a1,editorComponentId)) {
case 0:
return Collections.<ConceptEditorComponent>singletonList(new ConceptFunctionAliased_Component(null));
case 1:
return Collections.<ConceptEditorComponent>singletonList(new ConceptFunction_Component(null));
case 2:
return Collections.<ConceptEditorComponent>singletonList(new ConceptFunction_Folded_Component(null));
default :
}
break;
case 3:
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0d0a1,editorComponentId)) {
case 0:
return Collections.<ConceptEditorComponent>singletonList(new GenericDeclaration_FoldedCodeBlock_Component(null));
case 1:
return Collections.<ConceptEditorComponent>singletonList(new _GenericDeclaration_TypeVariables_Component(null));
default :
}
break;
case 4:
if ("jetbrains.mps.baseLanguage.editor.HasAnnotation_AnnotationComponent".equals(editorComponentId)) {
return Collections.<ConceptEditorComponent>singletonList(new HasAnnotation_AnnotationComponent(null));
}
break;
case 5:
if ("jetbrains.mps.baseLanguage.editor._DeprecatedPart".equals(editorComponentId)) {
return Collections.<ConceptEditorComponent>singletonList(new _DeprecatedPart(null));
}
break;
case 6:
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0g0a1,editorComponentId)) {
case 0:
return Collections.<ConceptEditorComponent>singletonList(new IMethodCall_actualArguments(null));
case 1:
return Collections.<ConceptEditorComponent>singletonList(new IMethodCall_typeArguments(null));
default :
}
break;
case 7:
if ("jetbrains.mps.baseLanguage.editor._Component_Visibility".equals(editorComponentId)) {
return Collections.<ConceptEditorComponent>singletonList(new _Component_Visibility(null));
}
break;
case 8:
if ("jetbrains.mps.baseLanguage.editor.TokensWithDots".equals(editorComponentId)) {
return Collections.<ConceptEditorComponent>singletonList(new TokensWithDots(null));
}
break;
case 9:
if ("jetbrains.mps.baseLanguage.editor.UnknownQualifiedName".equals(editorComponentId)) {
return Collections.<ConceptEditorComponent>singletonList(new UnknownQualifiedName(null));
}
break;
case 10:
if ("jetbrains.mps.baseLanguage.editor.VariableDeclaration_NameCellComponent".equals(editorComponentId)) {
return Collections.<ConceptEditorComponent>singletonList(new VariableDeclaration_NameCellComponent(null));
}
break;
default :
}
return Collections.emptyList();
}
