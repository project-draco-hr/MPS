{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_xbvbvu_a0g.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return Collections.<TransformationMenu>singletonList(new AbstractClassifierReference_TransformationMenu());
      }
    break;
case 1:
  if (true) {
    return Collections.<TransformationMenu>singletonList(new AbstractCreator_TransformationMenu());
  }
break;
case 2:
if (true) {
return Collections.<TransformationMenu>singletonList(new AnonymousClass_TransformationMenu());
}
break;
case 3:
if (true) {
return Collections.<TransformationMenu>singletonList(new ArrayCreator_TransformationMenu());
}
break;
case 4:
if (true) {
return Collections.<TransformationMenu>singletonList(new ArrayType_TransformationMenu());
}
break;
case 5:
if (true) {
return Collections.<TransformationMenu>singletonList(new BinaryOperation_TransformationMenu());
}
break;
case 6:
if (true) {
return Collections.<TransformationMenu>singletonList(new BreakStatement_TransformationMenu());
}
break;
case 7:
if (true) {
return Collections.<TransformationMenu>singletonList(new CatchClause_TransformationMenu());
}
break;
case 8:
if (true) {
return Collections.<TransformationMenu>singletonList(new ClassConcept_TransformationMenu());
}
break;
case 9:
if (true) {
return Collections.<TransformationMenu>singletonList(new ClassCreator_TransformationMenu());
}
break;
case 10:
if (true) {
return Collections.<TransformationMenu>singletonList(new ClassifierType_TransformationMenu());
}
break;
case 11:
if (true) {
return Collections.<TransformationMenu>singletonList(new ContinueStatement_TransformationMenu());
}
break;
case 12:
if (true) {
return Collections.<TransformationMenu>singletonList(new DefaultClassCreator_TransformationMenu());
}
break;
case 13:
if (true) {
return Collections.<TransformationMenu>singletonList(new DimensionExpression_TransformationMenu());
}
break;
case 14:
if (true) {
return Collections.<TransformationMenu>singletonList(new ElsifClause_TransformationMenu());
}
break;
case 15:
if (true) {
return Collections.<TransformationMenu>singletonList(new Expression_TransformationMenu());
}
break;
case 16:
if (true) {
return Collections.<TransformationMenu>singletonList(new FieldDeclaration_TransformationMenu());
}
break;
case 17:
if (true) {
return Collections.<TransformationMenu>singletonList(new GenericDeclaration_TransformationMenu());
}
break;
case 18:
if (true) {
return Collections.<TransformationMenu>singletonList(new IOperation_TransformationMenu());
}
break;
case 19:
if (true) {
return Collections.<TransformationMenu>singletonList(new IncompleteMemberDeclaration_TransformationMenu());
}
break;
case 20:
if (true) {
return Collections.<TransformationMenu>singletonList(new InstanceMethodDeclaration_TransformationMenu());
}
break;
case 21:
if (true) {
return Collections.<TransformationMenu>singletonList(new Interface_TransformationMenu());
}
break;
case 22:
if (true) {
return Collections.<TransformationMenu>singletonList(new LocalMethodCall_TransformationMenu());
}
break;
case 23:
if (true) {
return Collections.<TransformationMenu>singletonList(new MethodDeclaration_TransformationMenu());
}
break;
case 24:
if (true) {
return Collections.<TransformationMenu>singletonList(new PlaceholderMember_TransformationMenu());
}
break;
case 25:
if (true) {
return Collections.<TransformationMenu>singletonList(new ReturnStatement_TransformationMenu());
}
break;
case 26:
if (true) {
return Collections.<TransformationMenu>singletonList(new Statement_TransformationMenu());
}
break;
case 27:
if (true) {
return Collections.<TransformationMenu>singletonList(new StaticFieldDeclaration_TransformationMenu());
}
break;
case 28:
if (true) {
return Collections.<TransformationMenu>singletonList(new SwitchStatement_TransformationMenu());
}
break;
case 29:
if (true) {
return Collections.<TransformationMenu>singletonList(new ThisExpression_TransformationMenu());
}
break;
case 30:
if (true) {
return Collections.<TransformationMenu>singletonList(new TryCatchStatement_TransformationMenu());
}
break;
case 31:
if (true) {
return Collections.<TransformationMenu>singletonList(new TryStatement_TransformationMenu());
}
break;
case 32:
if (true) {
return Collections.<TransformationMenu>singletonList(new Type_TransformationMenu());
}
break;
case 33:
if (true) {
return Collections.<TransformationMenu>singletonList(new VariableDeclaration_TransformationMenu());
}
break;
case 34:
if (true) {
return Collections.<TransformationMenu>singletonList(new VariableReference_TransformationMenu());
}
break;
case 35:
if (true) {
return Collections.<TransformationMenu>singletonList(new Visibility_TransformationMenu());
}
break;
case 36:
if (true) {
return Collections.<TransformationMenu>singletonList(new WildCardType_TransformationMenu());
}
break;
default :
}
}
return Collections.<TransformationMenu>emptyList();
}
