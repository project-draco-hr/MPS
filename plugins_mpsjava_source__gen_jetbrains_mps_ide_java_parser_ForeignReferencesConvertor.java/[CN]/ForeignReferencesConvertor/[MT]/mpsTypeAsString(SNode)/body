{
  if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.ClassifierType")) {
    StringBuilder sb=new StringBuilder();
    SNode classifierType=SNodeOperations.cast(type,"jetbrains.mps.baseLanguage.structure.ClassifierType");
    SNode classifier=SLinkOperations.getTarget(classifierType,"classifier",false);
    sb.append(SNodeOperations.getModel(classifier).getLongName()).append('.').append(SPropertyOperations.getString(classifier,"name"));
    List<SNode> typeParameters=SLinkOperations.getTargets(classifierType,"parameter",true);
    if (typeParameters != null && !(ListSequence.<SNode>fromList(typeParameters).isEmpty())) {
      sb.append('<');
      appendTypesList(sb,typeParameters);
      sb.append('>');
    }
    return sb.toString();
  }
  if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.ArrayType")) {
    return mpsTypeAsString(SLinkOperations.getTarget(SNodeOperations.cast(type,"jetbrains.mps.baseLanguage.structure.ArrayType"),"componentType",true)) + "[]";
  }
  if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.VariableArityType")) {
    return mpsTypeAsString(SLinkOperations.getTarget(SNodeOperations.cast(type,"jetbrains.mps.baseLanguage.structure.VariableArityType"),"componentType",true)) + "...";
  }
  if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.PrimitiveType")) {
    return SModelUtil_new.getAlias(SNodeOperations.getConceptDeclaration(type));
  }
  if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.TypeVariableReference")) {
    return SPropertyOperations.getString(SLinkOperations.getTarget(SNodeOperations.cast(type,"jetbrains.mps.baseLanguage.structure.TypeVariableReference"),"typeVariableDeclaration",false),"name");
  }
  if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.UpperBoundType")) {
    return "? extends " + mpsTypeAsString(SLinkOperations.getTarget(SNodeOperations.cast(type,"jetbrains.mps.baseLanguage.structure.UpperBoundType"),"bound",true));
  }
  if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.LowerBoundType")) {
    return "? super " + mpsTypeAsString(SLinkOperations.getTarget(SNodeOperations.cast(type,"jetbrains.mps.baseLanguage.structure.LowerBoundType"),"bound",true));
  }
  if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.WildCardType")) {
    return "?";
  }
  return null;
}
