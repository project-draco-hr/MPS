{
  try {
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        NodeHighlightManager highlightManager=HighlightUsages_Action.this.editorComponent.getHighlightManager();
        EditorMessageOwner messageOwner=HighlightUsages_Action.this.editorComponent.getHighlightMessagesOwner();
        SNode node=HighlightUsages_Action.this.editorCell.getSNodeWRTReference();
        Set<SReference> usages=HighlightUsages_Action.this.model.findUsages(node);
        boolean highlight=highlightManager.getMessageFor(HighlightUsages_Action.this.editorCell.getSNode()) == null;
        if (usages.size() > 0 && SNodeOperations.getContainingRoot(node) == HighlightUsages_Action.this.editorComponent.getRootCell().getSNode().getContainingRoot()) {
          if (highlight) {
            highlightManager.mark(node,HighlightConstants.NODE_COLOR,"source node",messageOwner);
          }
 else {
            EditorMessage message=highlightManager.getMessageFor(node);
            highlightManager.removeMessage(message);
          }
        }
        for (        SReference ref : SetSequence.fromSet(usages)) {
          if (ref.getSourceNode().getContainingRoot() == HighlightUsages_Action.this.editorComponent.getRootCell().getSNode().getContainingRoot()) {
            if (highlight) {
              highlightManager.mark(ref.getSourceNode(),HighlightConstants.USAGES_COLOR,"usage",messageOwner);
            }
 else {
              EditorMessage message=highlightManager.getMessageFor(ref.getSourceNode());
              highlightManager.removeMessage(message);
            }
          }
        }
        highlightManager.repaintAndRebuildEditorMessages();
      }
    }
);
  }
 catch (  Throwable t) {
    if (log.isErrorEnabled()) {
      log.error("User's action execute method failed. Action:" + "HighlightUsages",t);
    }
  }
}
