{
  Iterable<SNode> availableElements=(Iterable<SNode>)ModelConstraints.getReferenceDescriptor(ScopesTest__BehaviorDescriptor.getCheckingReference_id4IvydoGvimX.invoke(__thisNode__)).getScope().getAvailableElements(null);
  Iterable<SNode> expectedElements=ListSequence.fromList(SLinkOperations.getChildren(__thisNode__,MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L,0x98deb16074f1d86cL,0x7181d929c720809L,0x32ba5b0ec25fea03L,"nodes"))).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(0x8585453e6bfb4d80L,0x98deb16074f1d86cL,0x32ba5b0ec25fe9f3L,0x383e5e55de89bc1fL,"ref"));
    }
  }
);
  Assert.assertEquals(SetSequence.fromSetWithValues(new HashSet(),expectedElements),SetSequence.fromSetWithValues(new HashSet(),availableElements));
}
