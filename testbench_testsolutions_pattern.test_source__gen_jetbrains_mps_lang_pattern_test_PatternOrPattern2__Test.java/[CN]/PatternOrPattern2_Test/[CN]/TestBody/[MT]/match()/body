{
  SNode nodeToMatch=_quotation_createNode_49ctdq_a0a0c2();
  GeneratedMatchingPattern pattern=new Pattern_10w56h577lyib(_quotation_createNode_49ctdq_a0a0b0c2(),_quotation_createNode_49ctdq_b0a0b0c2(),_quotation_createNode_49ctdq_c0a0b0c2());
  boolean matchNeeded=true;
  boolean matches=pattern.match(nodeToMatch);
  if (matchNeeded != matches) {
    return false;
  }
  if (!(matchNeeded)) {
    return true;
  }
{
    List<SNode> nodesBefore=ListSequence.fromListAndArray(new ArrayList<SNode>(),_quotation_createNode_49ctdq_a0a0a0g0c2());
    List<SNode> nodesAfter=ListSequence.fromListAndArray(new ArrayList<SNode>(),(SNode)pattern.getFieldValue("patternVar_s"));
    Assert.assertNull("nodes '" + nodesBefore + "' and '"+ nodesAfter+ "' do not match!",NodesMatcher.matchNodes(nodesBefore,nodesAfter));
  }
  return true;
}
