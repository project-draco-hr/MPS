{
  if (BuildRelativePath_Behavior.call_isEmptyTail_8654221991637157686(SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SConceptOperations.findConceptDeclaration("jetbrains.mps.build.structure.BuildRelativePath"))),SLinkOperations.getTarget(thisNode,"compositePart",true))) {
    return null;
  }
  SNode copy=SNodeOperations.copyNode(thisNode);
  SNode cp=SLinkOperations.getTarget(copy,"compositePart",true);
  if (BuildRelativePath_Behavior.call_isEmptyTail_8654221991637157686(SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SConceptOperations.findConceptDeclaration("jetbrains.mps.build.structure.BuildRelativePath"))),SLinkOperations.getTarget(cp,"tail",true))) {
    SLinkOperations.setTarget(copy,"compositePart",null,true);
  }
 else {
    SNode prev=cp;
    cp=BuildRelativePath_Behavior.call_next_8654221991637156927(SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SConceptOperations.findConceptDeclaration("jetbrains.mps.build.structure.BuildRelativePath"))),cp);
    while (cp != null) {
      SNode next=BuildRelativePath_Behavior.call_next_8654221991637156927(SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SConceptOperations.findConceptDeclaration("jetbrains.mps.build.structure.BuildRelativePath"))),cp);
      if (next != null) {
        prev=cp;
        cp=next;
      }
 else {
        break;
      }
    }
    SLinkOperations.setTarget(prev,"tail",null,true);
  }
  return copy;
}
