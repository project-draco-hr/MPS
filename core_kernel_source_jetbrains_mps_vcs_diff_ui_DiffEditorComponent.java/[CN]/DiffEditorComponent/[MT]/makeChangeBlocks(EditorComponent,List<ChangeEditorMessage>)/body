{
  relayout();
  final NodeHighlightManager highlightManager=component.getHighlightManager();
  for (Iterator<ChangeEditorMessage> iterator=changeEditorMessages.iterator(); iterator.hasNext(); ) {
    ChangeEditorMessage change=iterator.next();
    if (highlightManager.getCell(change) == null) {
      iterator.remove();
    }
  }
  Collections.sort(changeEditorMessages,new Comparator<ChangeEditorMessage>(){
    public int compare(    ChangeEditorMessage o1,    ChangeEditorMessage o2){
      return highlightManager.getCell(o1).getY() - highlightManager.getCell(o2).getY();
    }
  }
);
  ChangesBlock block=null;
  for (  ChangeEditorMessage m : changeEditorMessages) {
    EditorCell cell=highlightManager.getCell(m);
    if (block == null) {
      block=new ChangesBlock();
    }
 else {
      if (block.getY2() < cell.getY()) {
        configureBlock(block);
        addBlock(component,block);
        block=new ChangesBlock();
      }
    }
    configureBlock(block);
    block.addChange(m,cell);
  }
  if (block != null) {
    addBlock(component,block);
  }
}
