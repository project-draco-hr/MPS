{
  SNode tupleType=TypeChecker.getInstance().getTypeOf(_context.getNode());
  if (ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.as(tupleType,"jetbrains.mps.baseLanguage.tuples.structure.NamedTupleType"),"parameter",true)).any(new IWhereFilter<SNode>(){
    public boolean accept(    SNode pt){
      return SNodeOperations.isInstanceOf(pt,"jetbrains.mps.lang.typesystem.structure.RuntimeTypeVariable");
    }
  }
)) {
    System.out.println("**** Got ya! " + BaseConcept_Behavior.call_getPresentation_1213877396640(SNodeOperations.cast(tupleType,"jetbrains.mps.baseLanguage.tuples.structure.NamedTupleType")));
  }
  return ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.as(tupleType,"jetbrains.mps.baseLanguage.tuples.structure.NamedTupleType"),"parameter",true)).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode t){
      return ClassifierTypeUtil.getTypeCoercedToClassifierType(t);
    }
  }
);
}
