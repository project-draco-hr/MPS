{
  SNode output=_context.getOutputNodeByInputNodeAndMappingLabel(SLinkOperations.getTarget(_context.getNode(),"tupleDeclaration",false),"namedTupleDecl2class");
  if ((output != null)) {
    return ListSequence.<SNode>fromList(SLinkOperations.getTargets(SNodeOperations.cast(output,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"constructor",true)).first();
  }
  return TupleDeclarationUtil.getResolveInfo(SLinkOperations.getTarget(_context.getNode(),"tupleDeclaration",false));
}
