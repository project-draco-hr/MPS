{
  SNode output=_context.getOutputNodeByInputNodeAndMappingLabelAndOutputNode(SLinkOperations.getTarget(SNodeOperations.as(SLinkOperations.getTarget(SNodeOperations.as(SNodeOperations.getParent(_context.getNode()),"jetbrains.mps.baseLanguage.structure.VariableDeclaration"),"type",true),"jetbrains.mps.baseLanguage.tuples.structure.NamedTupleType"),"classifier",false),_context.getOutputNode(),"namedTupleDecl2class");
  if ((output != null)) {
    return output;
  }
  return TupleDeclarationUtil.getResolveInfo(SLinkOperations.getTarget(SNodeOperations.as(SLinkOperations.getTarget(SNodeOperations.as(SNodeOperations.getParent(_context.getNode()),"jetbrains.mps.baseLanguage.structure.VariableDeclaration"),"type",true),"jetbrains.mps.baseLanguage.tuples.structure.NamedTupleType"),"classifier",false));
}
