{
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      try {
        SearchQuery searchQuery=new SearchQuery(new NodeHolder(SLinkOperations.getTarget(QueryExecutor.this.myModelQuery,"conceptDeclaration",false)),QueryExecutor.this.myScope);
        BaseFinder[] finders=new BaseFinder[1];
        finders[0]=new ConceptInstances_Finder();
        SearchResults instances=FindUtils.getSearchResults(indicator,searchQuery,finders);
        Query queryInstance=(Query)Class.forName(QueryExecutor.this.myClassName,true,QueryExecutor.this.myLoader).newInstance();
        List<SearchResult<SNode>> instancesList=instances.getSearchResults();
        Iterator<SearchResult<SNode>> it=instancesList.iterator();
        while (it.hasNext()) {
          SearchResult<SNode> current=it.next();
          if (!(queryInstance.isSatisfies(current.getObject()))) {
            it.remove();
          }
        }
        QueryExecutor.this.myProject.getComponent(UsagesViewTool.class).showResults(searchQuery,new SearchResults(instances.getSearchedNodes(),instancesList));
      }
 catch (      Throwable t) {
        t.printStackTrace();
      }
    }
  }
);
}
