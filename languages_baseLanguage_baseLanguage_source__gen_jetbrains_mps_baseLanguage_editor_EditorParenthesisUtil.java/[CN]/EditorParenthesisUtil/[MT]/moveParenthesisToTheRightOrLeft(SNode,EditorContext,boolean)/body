{
  if (!(SNodeOperations.isInstanceOf(SNodeOperations.getParent(expr),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,"jetbrains.mps.baseLanguage.structure.BinaryOperation")))) {
    return;
  }
  SNode binOp=ParenthesisUtil.getBinOp(expr,toRight);
  if (binOp == null) {
    return;
  }
  SNode sidemost=findRightmostOrLeftmostLeafExpression(SLinkOperations.getTarget(expr,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1079359253375l,1079359253376l,"expression")),toRight);
  SNode leaf=findRightmostOrLeftmostLeafExpression((toRight ? SLinkOperations.getTarget(binOp,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,1081773367579l,"rightExpression")) : SLinkOperations.getTarget(binOp,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,1081773367580l,"leftExpression"))),!(toRight));
  SNode backsideSubtree=(toRight ? SLinkOperations.getTarget(binOp,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,1081773367580l,"leftExpression")) : SLinkOperations.getTarget(binOp,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,1081773367579l,"rightExpression")));
  SNodeOperations.detachNode(backsideSubtree);
  SNodeOperations.replaceWithAnother(binOp,backsideSubtree);
  SNodeOperations.replaceWithAnother(sidemost,binOp);
  if (toRight) {
    SLinkOperations.setTarget(binOp,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,1081773367580l,"leftExpression"),sidemost);
  }
 else {
    SLinkOperations.setTarget(binOp,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,1081773367579l,"rightExpression"),sidemost);
  }
  SNode sideSubtree=(toRight ? SLinkOperations.getTarget(binOp,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,1081773367579l,"rightExpression")) : SLinkOperations.getTarget(binOp,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,1081773367580l,"leftExpression")));
  SNodeOperations.detachNode(leaf);
  if (toRight) {
    SLinkOperations.setTarget(binOp,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,1081773367579l,"rightExpression"),leaf);
  }
 else {
    SLinkOperations.setTarget(binOp,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,1081773367580l,"leftExpression"),leaf);
  }
  if (sideSubtree != leaf) {
    SNode leafParentOperation=SNodeOperations.cast(sideSubtree,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,"jetbrains.mps.baseLanguage.structure.BinaryOperation"));
    SNode exprParent=SNodeOperations.getParent(expr);
    SNodeOperations.replaceWithAnother(expr,sideSubtree);
    if (toRight) {
      SLinkOperations.setTarget(leafParentOperation,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,1081773367580l,"leftExpression"),expr);
    }
 else {
      SLinkOperations.setTarget(leafParentOperation,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,1081773367579l,"rightExpression"),expr);
    }
    if (SNodeOperations.isInstanceOf(exprParent,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,"jetbrains.mps.baseLanguage.structure.BinaryOperation"))) {
      ParenthesisUtil.checkOperationWRTPriority(SNodeOperations.cast(exprParent,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,"jetbrains.mps.baseLanguage.structure.BinaryOperation")));
    }
  }
  SNode binOpCheck=(SNodeOperations.isInstanceOf(SNodeOperations.getParent(binOp),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,"jetbrains.mps.baseLanguage.structure.BinaryOperation")) ? SNodeOperations.cast(SNodeOperations.getParent(binOp),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,"jetbrains.mps.baseLanguage.structure.BinaryOperation")) : binOp);
  ParenthesisUtil.checkOperationWRTPriority(binOpCheck);
  selectNode(context,expr,toRight);
}
