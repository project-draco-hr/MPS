{
  Color selectionForeground=UIManager.getColor("Tree.selectionForeground");
  Color selectionBackground=UIManager.getColor("Tree.selectionBackground");
  Color textForeground=UIManager.getColor("Tree.textForeground");
  Color textBackground=UIManager.getColor("Tree.textBackground");
  myRenderer.setEnabled(tree.isEnabled());
  if (selected) {
    myRenderer.setForeground(selectionForeground);
    myRenderer.setBackground(selectionBackground);
  }
 else {
    myRenderer.setForeground(textForeground);
    myRenderer.setBackground(textBackground);
  }
  final DefaultMutableTreeNode node=(DefaultMutableTreeNode)value;
  final String text=tree.convertValueToText(value,selected,expanded,leaf,row,hasFocus);
  ModelAccess.instance().runReadAction(new Runnable(){
    @Override public void run(){
      if (node.getUserObject() instanceof MappingSelectTree.NodeData) {
        MappingSelectTree.NodeData data=(MappingSelectTree.NodeData)node.getUserObject();
        myRenderer.setText(data.getText());
        myRenderer.setSelected(data.isSelected());
      }
 else {
        myRenderer.setText(text);
        myRenderer.setSelected(false);
      }
    }
  }
);
  return myRenderer;
}
