{
  final SnapshotModelData modelData=new SnapshotModelData(getReference(),new ForeignNodeIdMap());
  final ModuleDescriptor moduleDescriptor=((AbstractModule)myModule).getModuleDescriptor();
  final IFile file=((AbstractModule)myModule).getDescriptorFile();
  if (file != null && moduleDescriptor != null) {
    if (myModule instanceof Language) {
      SNode langNode=new ProjectStructureBuilder((AbstractModule)myModule,this).convertLanguage();
      ArrayList<Generator> generators=new ArrayList<Generator>(((Language)myModule).getGenerators());
      Collections.sort(generators,new SModuleNameComparator());
      for (      Generator g : generators) {
        ListSequence.fromList(SLinkOperations.getChildren(langNode,MetaAdapterFactory.getContainmentLink(0x86ef829012bb4ca7L,0x947f093788f263a9L,0x5869770da61dfe1fL,0x5869770da61dfe37L,"generator"))).addElement(new ProjectStructureBuilder(g,this).convertGenerator());
      }
      modelData.addRootNode(langNode);
    }
 else {
      SNode root=new ProjectStructureBuilder((AbstractModule)myModule,this).convert();
      modelData.addRootNode(root);
    }
  }
  return new ModelLoadResult<jetbrains.mps.smodel.SModel>(modelData,ModelLoadingState.FULLY_LOADED);
}
