{
  final jetbrains.mps.smodel.SModel model=new SnapshotModelData(getReference(),new ForeignNodeIdMap());
  final ModuleDescriptor moduleDescriptor=((AbstractModule)myModule).getModuleDescriptor();
  final IFile file=((AbstractModule)myModule).getDescriptorFile();
  if (file != null && moduleDescriptor != null) {
    NodeReadAccessCasterInEditor.runReadTransparentAction(new Runnable(){
      @Override public void run(){
        new ProjectStructureBuilder(moduleDescriptor,file,model){
          @Override public Iterable<SModelReference> loadReferences(          SNode m,          ModuleDescriptor descriptor){
            SModule module=(moduleDescriptor == descriptor ? myModule : ModuleRepositoryFacade.getInstance().getModule(descriptor.getModuleReference()));
            if (module == null) {
              return Collections.emptyList();
            }
            return Sequence.fromIterable(module.getModels()).where(new IWhereFilter<SModel>(){
              @Override public boolean accept(              SModel o){
                return SModelStereotype.isUserModel(o);
              }
            }
).select(new ISelector<SModel,SModelReference>(){
              @Override public SModelReference select(              SModel o){
                return o.getReference();
              }
            }
);
          }
        }
.convert();
      }
    }
);
  }
  return new ModelLoadResult<jetbrains.mps.smodel.SModel>(model,ModelLoadingState.FULLY_LOADED);
}
