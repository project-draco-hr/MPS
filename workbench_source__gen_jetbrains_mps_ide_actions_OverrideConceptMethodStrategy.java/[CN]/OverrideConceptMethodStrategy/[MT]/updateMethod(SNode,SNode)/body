{
  super.updateMethod(sourceMethod,method);
  Iterable<SNode> paramList=ListSequence.fromList(SLinkOperations.getTargets(method,"parameter",true)).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return new OverrideConceptMethodStrategy.QuotationClass_3gioqg_a0a0a0a0b0a().createNode(it);
    }
  }
);
  SNode superCallExpr=new OverrideConceptMethodStrategy.QuotationClass_3gioqg_a0a2a0().createNode(Sequence.fromIterable(paramList).toListSequence(),sourceMethod);
  if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(method,"returnType",true),"jetbrains.mps.baseLanguage.structure.VoidType")) {
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method,"body",true),"statement",true)).addElement(new OverrideConceptMethodStrategy.QuotationClass_3gioqg_a0a0a0d0a().createNode(superCallExpr));
  }
 else {
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method,"body",true),"statement",true)).addElement(getReturnStatement(superCallExpr));
  }
}
