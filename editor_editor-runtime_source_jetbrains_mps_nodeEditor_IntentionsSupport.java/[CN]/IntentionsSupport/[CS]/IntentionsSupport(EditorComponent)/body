{
  myEditor=editor;
  myLightBulb=new LightBulbMenu(){
    @Override public void activate(){
      getModelAccess().runReadAction(new Runnable(){
        @Override public void run(){
          checkAndShowMenu();
        }
      }
);
    }
  }
;
  myEditor.getViewport().addChangeListener(new ChangeListener(){
    @Override public void stateChanged(    ChangeEvent e){
      adjustLightBulbLocation();
    }
  }
);
  myShowIntentionsAction=new AbstractAction(){
    @Override public void actionPerformed(    ActionEvent e){
      getModelAccess().runReadAction(new Runnable(){
        @Override public void run(){
          checkAndShowMenu();
        }
      }
);
    }
  }
;
  myEditor.registerKeyboardAction(myShowIntentionsAction,KeyStroke.getKeyStroke("alt ENTER"),JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  myEditor.addFocusListener(new FocusAdapter(){
    @Override public void focusGained(    FocusEvent e){
      updateIntentionsStatus();
    }
    @Override public void focusLost(    FocusEvent e){
      hideLightBulb();
    }
  }
);
  myEditor.getSelectionManager().addSelectionListener(new SelectionListener(){
    @Override public void selectionChanged(    jetbrains.mps.openapi.editor.EditorComponent editorComponent,    Selection oldSelection,    Selection newSelection){
      if (oldSelection == newSelection) {
        return;
      }
      if (!((EditorComponent)editorComponent).isFocusOwner())       return;
      updateIntentionsStatus();
    }
  }
);
}
