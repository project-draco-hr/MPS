{
  final Set<Pair<IntentionExecutable,SNode>> result=new LinkedHashSet<Pair<IntentionExecutable,SNode>>();
  final SNode node=myEditor.getSelectedNode();
  final EditorContext editorContext=myEditor.getEditorContext();
  if (node != null && editorContext != null) {
    final QueryDescriptor query=new QueryDescriptor();
    query.setEnabledOnly(true);
    final Collection<Pair<IntentionExecutable,SNode>> availableIntentions=TypeContextManager.getInstance().runTypeCheckingComputation(myEditor.getTypecheckingContextOwner(),myEditor.getEditedNode(),new Computation<Collection<Pair<IntentionExecutable,SNode>>>(){
      @Override public Collection<Pair<IntentionExecutable,SNode>> compute(      TypeCheckingContext context){
        return IntentionsManager.getInstance().getAvailableIntentions(query,node,editorContext);
      }
    }
);
    result.addAll(availableIntentions);
  }
  return result;
}
