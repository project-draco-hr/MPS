{
  List<Pair<Intention,SNode>> groupItems=new ArrayList<Pair<Intention,SNode>>();
  groupItems.addAll(getEnabledIntentions());
  List<AnAction> actions=new ArrayList<AnAction>();
  collectActionsAsIntentions(ActionManager.getInstance().getAction(MPSActions.ACTIONS_AS_INTENTIONS_GROUP),actions,dataContext);
  if (groupItems.isEmpty() && actions.isEmpty()) {
    return null;
  }
  Collections.sort(groupItems,new Comparator<Pair<Intention,SNode>>(){
    public int compare(    Pair<Intention,SNode> o1,    Pair<Intention,SNode> o2){
      Intention intention1=o1.o1;
      Intention intention2=o2.o1;
      SNode node1=o1.o2;
      SNode node2=o2.o2;
      EditorContext context=myEditor.getEditorContext();
      return intention1.getDescription(node1,context).compareTo(intention2.getDescription(node2,context));
    }
  }
);
  BaseGroup group=new BaseGroup("");
  for (  final Pair<Intention,SNode> pair : groupItems) {
    group.add(getIntentionGroup(pair.o1,pair.o2));
  }
  group.addAll(actions);
  return group;
}
