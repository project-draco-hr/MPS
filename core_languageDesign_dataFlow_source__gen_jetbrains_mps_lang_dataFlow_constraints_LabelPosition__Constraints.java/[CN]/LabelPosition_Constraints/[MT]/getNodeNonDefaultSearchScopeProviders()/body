{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("label",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      List<SNode> labels=new ArrayList<SNode>();
      SNode builder=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.lang.dataFlow.structure.DataFlowBuilderDeclaration",true,false);
      ListSequence.fromList(labels).addSequence(ListSequence.fromList(SNodeOperations.getDescendants(builder,"jetbrains.mps.lang.dataFlow.structure.EmitLabelStatement",true,new String[]{})));
      return labels;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c89590377(jetbrains.mps.lang.dataFlow.constraints)","1213104855809");
    }
  }
);
  return result;
}
