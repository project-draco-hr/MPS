{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("label",new BaseReferenceConstraintsDescriptor("label",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          List<SNode> labels=new ArrayList<SNode>();
          SNode builder=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.lang.dataFlow.structure.DataFlowBuilderDeclaration",true,false);
          ListSequence.fromList(labels).addSequence(ListSequence.fromList(SNodeOperations.getDescendants(builder,"jetbrains.mps.lang.dataFlow.structure.EmitLabelStatement",true,new String[]{})));
          return labels;
        }
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_t9qyyi_a0a1a0a0a1a0b0a1a0;
        }
      }
;
    }
  }
);
  return references;
}
