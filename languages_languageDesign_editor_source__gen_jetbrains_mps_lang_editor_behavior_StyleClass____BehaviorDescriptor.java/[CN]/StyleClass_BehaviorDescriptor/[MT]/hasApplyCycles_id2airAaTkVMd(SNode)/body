{
  List<SNode> dependencies=ListSequence.fromList(new ArrayList<SNode>());
  List<SNode> adding=ListSequence.fromListAndArray(new ArrayList<SNode>(),__thisNode__);
  while (ListSequence.fromList(adding).isNotEmpty()) {
    if (ListSequence.fromList(dependencies).intersect(ListSequence.fromList(adding)).isNotEmpty()) {
      return true;
    }
    ListSequence.fromList(dependencies).addSequence(ListSequence.fromList(adding));
    adding=ListSequence.fromListWithValues(new ArrayList<SNode>(),SNodeOperations.ofConcept(Sequence.fromIterable(SNodeOperations.ofConcept(ListSequence.fromList(adding).translate(new ITranslator2<SNode,SNode>(){
      public Iterable<SNode> translate(      SNode it){
        return SLinkOperations.getChildren(it,MetaAdapterFactory.getContainmentLink(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x11beb039542L,0x11beb040d06L,"styleItem"));
      }
    }
),MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x1b1161f6e648b4b2L,"jetbrains.mps.lang.editor.structure.ApplyStyleClass"))).select(new ISelector<SNode,SNode>(){
      public SNode select(      SNode it){
        return SLinkOperations.getTarget(SLinkOperations.getTarget(it,MetaAdapterFactory.getContainmentLink(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x1b1161f6e648b4b2L,0x1b1161f6e66c1a3cL,"target")),MetaAdapterFactory.getReferenceLink(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x7e9b10ab1edbd2fbL,0x7e9b10ab1edbd57eL,"style"));
      }
    }
),MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x2ef3b3796a126f24L,"jetbrains.mps.lang.editor.structure.StyleClass")));
  }
  return false;
}
