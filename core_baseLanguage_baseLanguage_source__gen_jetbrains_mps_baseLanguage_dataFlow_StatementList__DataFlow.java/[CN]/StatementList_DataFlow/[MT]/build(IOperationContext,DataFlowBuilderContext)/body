{
  if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(_context.getNode()),"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration")) {
    SNode bmd=SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()),"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration");
    for (    SNode param : ListSequence.fromList(SLinkOperations.getTargets(bmd,"parameter",true))) {
      _context.getBuilder().build((SNode)param);
    }
  }
  _context.getBuilder().emitNop();
  SNode lastStatement=null;
  if (ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(),"statement",true)).isNotEmpty()) {
    SNode methodLike=SNodeOperations.getAncestor(_context.getNode(),"jetbrains.mps.baseLanguage.structure.IMethodLike",false,false);
    if ((methodLike != null)) {
      if (IMethodLike_Behavior.call_getBody_1239354440022(methodLike) == _context.getNode()) {
        lastStatement=IMethodLike_Behavior.call_getLastStatement_1239354409446(methodLike);
      }
    }
  }
  for (  SNode s : SLinkOperations.getTargets(_context.getNode(),"statement",true)) {
    _context.getBuilder().build((SNode)s);
    if (s == lastStatement && SNodeOperations.isInstanceOf(s,"jetbrains.mps.baseLanguage.structure.ExpressionStatement") && LastStatementUtil.canMakeReturnStatement(s,GlobalScope.getInstance())) {
      _context.getBuilder().emitRet();
    }
  }
}
