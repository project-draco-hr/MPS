{
  if (SConceptOperations.isSubConceptOf(kind,"jetbrains.mps.build.structure.BuildExternalLayout")) {
    return new ModelPlusImportedScope(SNodeOperations.getModel(thisNode),true,SNodeOperations.getModel(thisNode).getModelDescriptor().getModule().getScope(),NameUtil.nodeFQName(kind));
  }
  if (SConceptOperations.isSubConceptOf(kind,"jetbrains.mps.build.structure.BuildProject")) {
    final SNode _this=thisNode;
    return ScopeUtil.where(new ModelPlusImportedScope(SNodeOperations.getModel(thisNode),true,SNodeOperations.getModel(thisNode).getModelDescriptor().getModule().getScope(),NameUtil.nodeFQName(kind)),new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
      public Boolean invoke(      SNode n){
        return n != _this && !(Sequence.fromIterable(BuildProject_Behavior.call_getVisibleProjects_1224588814561807665(SNodeOperations.cast(n,"jetbrains.mps.build.structure.BuildProject"),false)).contains(_this));
      }
    }
);
  }
  if ("layout".equals(role)) {
    if (SConceptOperations.isSubConceptOf(kind,"jetbrains.mps.build.structure.BuildSource_FilesetProjectPart")) {
      return DescendantsScope.forNamedElements(thisNode,SLinkOperations.findLinkDeclaration("jetbrains.mps.build.structure.BuildProject","parts"),kind);
    }
    for (    SNode plugin : ListSequence.fromList(SLinkOperations.getTargets(thisNode,"plugins",true))) {
      Scope layoutScope=BuildPlugin_Behavior.call_getLayoutScope_1224588814561807654(plugin,kind);
      if (layoutScope != null) {
        return layoutScope;
      }
    }
  }
 else   if ("parts".equals(role)) {
    for (    SNode plugin : ListSequence.fromList(SLinkOperations.getTargets(thisNode,"plugins",true))) {
      Scope projectScope=BuildPlugin_Behavior.call_getProjectStructureScope_3734116213129936182(plugin,kind);
      if (projectScope != null) {
        return projectScope;
      }
    }
  }
  return new EmptyScope();
}
