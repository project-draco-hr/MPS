{
  if (SetSequence.fromSet(visited).contains(thisNode)) {
    return new EmptyScope();
  }
  SetSequence.fromSet(visited).addElement(thisNode);
  Scope rootScope=ScopeUtil.simpleRoleScope(thisNode,SLinkOperations.findLinkDeclaration("jetbrains.mps.build.structure.BuildProject","macros"));
  SNode containingProject=SNodeOperations.getAncestor(child,"jetbrains.mps.build.structure.BuildProject",false,false);
  if (neq_save77_a0e0l(containingProject,thisNode)) {
    rootScope=ScopeUtil.where(rootScope,new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
      public Boolean invoke(      SNode node){
        return BuildMacro_Behavior.call_isPublic_6547494638219688113(SNodeOperations.cast(node,"jetbrains.mps.build.structure.BuildMacro"));
      }
    }
);
  }
  if ((containingProject != null)) {
    final Wrappers._T<SNode> definedMacro=new Wrappers._T<SNode>();
    if (ListSequence.fromList(SLinkOperations.getTargets(containingProject,"macros",true)).contains(child)) {
      definedMacro.value=SNodeOperations.cast(child,"jetbrains.mps.build.structure.BuildMacro");
    }
 else {
      definedMacro.value=ListSequence.fromList(SLinkOperations.getTargets(containingProject,"macros",true)).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return ListSequence.fromList(SNodeOperations.getDescendants(it,null,false,new String[]{})).contains(child);
        }
      }
);
    }
    if ((definedMacro.value != null)) {
      rootScope=ScopeUtil.where(rootScope,new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
        public Boolean invoke(        SNode visibleNode){
          return !(ListSequence.fromList(SNodeOperations.getNextSiblings(definedMacro.value,false)).contains(visibleNode)) && !(eq_save77_a0a0a0a0a1a0b0c0f0l(definedMacro.value,visibleNode));
        }
      }
);
    }
  }
  List<Scope> scopes=ListSequence.fromList(new ArrayList<Scope>());
  ListSequence.fromList(scopes).addElement(rootScope);
  ListSequence.fromList(scopes).addSequence(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"dependencies",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.structure.BuildProjectDependency");
    }
  }
).select(new ISelector<SNode,Scope>(){
    public Scope select(    SNode it){
      return BuildProject_Behavior.call_getBuildMacroScope_3767587139141108514(SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.build.structure.BuildProjectDependency"),"script",false),child,visited);
    }
  }
));
  ListSequence.fromList(scopes).addSequence(Sequence.fromIterable(ScopeUtil.imported(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"dependencies",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return !(SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.structure.BuildProjectDependency"));
    }
  }
),SConceptOperations.findConceptDeclaration("jetbrains.mps.build.structure.BuildMacro"),child)));
  return new CompositeScope(ListSequence.fromList(scopes).toGenericArray(Scope.class)){
    @Override public Iterable<SNode> getAvailableElements(    @Nullable String prefix){
      return Sequence.fromIterable(super.getAvailableElements(prefix)).distinct();
    }
  }
;
}
