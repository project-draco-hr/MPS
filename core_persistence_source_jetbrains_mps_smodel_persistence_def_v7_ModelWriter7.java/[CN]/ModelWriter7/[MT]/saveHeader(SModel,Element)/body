{
  int version=sourceModel.getVersion();
  if (version >= 0) {
    rootElement.setAttribute(SModelHeader.VERSION,Integer.toString(version));
  }
  if (sourceModel instanceof DefaultSModel) {
    SModelHeader header=((DefaultSModel)sourceModel).getSModelHeader();
    if (header.isDoNotGenerate()) {
      rootElement.setAttribute(SModelHeader.DO_NOT_GENERATE,"true");
    }
    for (    Map.Entry<String,String> en : header.getOptionalProperties().entrySet()) {
      rootElement.setAttribute(en.getKey(),StringUtil.escapeXml(en.getValue()));
    }
  }
  Element persistenceElement=new Element(ModelPersistence.PERSISTENCE);
  persistenceElement.setAttribute(ModelPersistence.PERSISTENCE_VERSION,getModelPersistenceVersion() + "");
  rootElement.addContent(persistenceElement);
  for (  SModuleReference languageNamespace : sourceModel.importedLanguages()) {
    Element languageElem=new Element(ModelPersistence.LANGUAGE);
    languageElem.setAttribute(ModelPersistence.NAMESPACE,languageNamespace.toString());
    rootElement.addContent(languageElem);
  }
  for (  SModuleReference languageNamespace : sourceModel.engagedOnGenerationLanguages()) {
    Element languageElem=new Element(ModelPersistence.LANGUAGE_ENGAGED_ON_GENERATION);
    languageElem.setAttribute(ModelPersistence.NAMESPACE,languageNamespace.toString());
    rootElement.addContent(languageElem);
  }
  for (  SModuleReference devkitNamespace : sourceModel.importedDevkits()) {
    Element devkitElem=new Element(ModelPersistence.DEVKIT);
    devkitElem.setAttribute(ModelPersistence.NAMESPACE,devkitNamespace.toString());
    rootElement.addContent(devkitElem);
  }
  for (  ImportElement importElement : sourceModel.importedModels()) {
    SModelReference modelRef=importElement.getModelReference();
    myHelper.addModelReference(modelRef);
    Element elem=new Element(ModelPersistence.IMPORT_ELEMENT);
    elem.setAttribute(ModelPersistence.MODEL_IMPORT_INDEX,"" + myHelper.getImportIndex(modelRef));
    elem.setAttribute(ModelPersistence.MODEL_UID,modelRef.toString());
    elem.setAttribute(ModelPersistence.VERSION,"" + importElement.getUsedVersion());
    rootElement.addContent(elem);
  }
  for (  ImportElement importElement : sourceModel.getAdditionalModelVersions()) {
    SModelReference modelRef=importElement.getModelReference();
    myHelper.addModelReference(modelRef);
    Element elem=new Element(ModelPersistence.IMPORT_ELEMENT);
    elem.setAttribute(ModelPersistence.MODEL_IMPORT_INDEX,"" + myHelper.getImportIndex(modelRef));
    elem.setAttribute(ModelPersistence.MODEL_UID,modelRef.toString());
    elem.setAttribute(ModelPersistence.VERSION,"" + importElement.getUsedVersion());
    elem.setAttribute(ModelPersistence.IMPLICIT,"yes");
    rootElement.addContent(elem);
  }
}
