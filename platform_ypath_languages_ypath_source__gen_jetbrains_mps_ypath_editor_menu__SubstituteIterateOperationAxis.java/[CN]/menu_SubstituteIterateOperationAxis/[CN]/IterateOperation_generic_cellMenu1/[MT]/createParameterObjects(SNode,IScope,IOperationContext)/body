{
  SNode tpoe=SNodeOperations.getAncestor(node,"jetbrains.mps.ypath.structure.TreePathOperationExpression",false,false);
  List<Triplet> res=ListOperations.createList(new Triplet[]{});
  if (SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(tpoe,"expression",true)),"jetbrains.mps.ypath.structure.TreePathType")) {
    SNode nodeType=SLinkOperations.getTarget(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(tpoe,"expression",true)),"nodeType",true);
{
      ICursor<TraversalAxis> _zCursor2=CursorFactory.createCursor(TraversalAxis.getConstants());
      try {
        while (_zCursor2.moveToNext()) {
          TraversalAxis axis=_zCursor2.getCurrent();
          ListOperations.addElement(res,new Triplet(axis,null,null));
{
            ICursor<SNode> _zCursor3=CursorFactory.createCursor(TreePath_Behavior.call_getFeature_1184591220431(ITreePathExpression_Behavior.call_getTreePath_1194366873089(tpoe),nodeType));
            try {
              while (_zCursor3.moveToNext()) {
                SNode feat=_zCursor3.getCurrent();
                if (TraversalAxisUtil.isAcceptableFeatureForAxis(feat,axis)) {
                  if (SPropertyOperations.getBoolean(feat,"default")) {
                    ListOperations.addElement(res,new Triplet(axis,feat,null));
                  }
 else                   if (SNodeOperations.isInstanceOf(feat,"jetbrains.mps.ypath.structure.IParamFeature")) {
{
                      ICursor<SNode> _zCursor4=CursorFactory.createCursor(IParamFeature_Behavior.call_getParameterObjects_1197461148674(feat,nodeType));
                      try {
                        while (_zCursor4.moveToNext()) {
                          SNode pw=_zCursor4.getCurrent();
                          ListOperations.addElement(res,new Triplet(axis,feat,pw));
                        }
                      }
  finally {
                        _zCursor4.release();
                      }
                    }
                  }
 else {
                    ListOperations.addElement(res,new Triplet(axis,feat,null));
                  }
                }
              }
            }
  finally {
              _zCursor3.release();
            }
          }
        }
      }
  finally {
        _zCursor2.release();
      }
    }
  }
  return res;
}
