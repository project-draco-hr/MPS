{
  pushCollection();
  addLabel(camelToLabel(SPropertyOperations.getString(conceptDeclaration,"name")));
  final SNode nameProperty=getNameProperty(conceptDeclaration);
  if ((nameProperty != null)) {
    addProperty(nameProperty);
  }
  Iterable<SNode> props=ListSequence.fromList(AbstractConceptDeclaration_Behavior.call_getPropertyDeclarations_1213877394546(conceptDeclaration)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return it != nameProperty && SNodeOperations.getParent(it) != SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)","1133920641626");
    }
  }
);
  List<SNode> children=ListSequence.fromList(AbstractConceptDeclaration_Behavior.call_getLinkDeclarations_1213877394480(conceptDeclaration)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.getParent(it) != SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)","1133920641626");
    }
  }
).toListSequence();
  List<SNode> references=ListSequence.fromList(children).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SPropertyOperations.hasValue(it,"metaClass","reference","reference") || isSmartReference(it);
    }
  }
).toListSequence();
  ListSequence.fromList(children).removeSequence(ListSequence.fromList(references));
  buildHeader(references);
  addPunctuation("(");
  noSpace();
  boolean first=true;
  for (  SNode property : Sequence.fromIterable(props)) {
    if (!(first)) {
      addPunctuation(",");
    }
    addLabel(camelToLabel(SPropertyOperations.getString(property,"name")));
    addPunctuation(":");
    addProperty(property);
    first=false;
  }
  for (  SNode linkDeclaration : ListSequence.fromList(children).sort(new ISelector<SNode,Comparable<?>>(){
    public Comparable<?> select(    SNode it){
      return LinkDeclaration_Behavior.call_isSingular_1213877254557(it);
    }
  }
,false)) {
    if (!(first)) {
      addPunctuation(",");
    }
    addLabel(camelToLabel(SPropertyOperations.getString(linkDeclaration,"role")));
    if (LinkDeclaration_Behavior.call_isSingular_1213877254557(linkDeclaration)) {
      addPunctuation(":");
      addRefNode(linkDeclaration);
    }
 else {
      addPunctuation("(");
      noSpace();
      addRefNodeList(linkDeclaration,null);
      addPunctuation(")");
    }
    noSpace();
    first=false;
  }
  addPunctuation(")");
  popCollection();
}
