{
  try {
    final Wrappers._T<SNode> command=new Wrappers._T<SNode>();
    ModelAccess.instance().runWriteActionInCommand(new Runnable(){
      public void run(){
        command.value=SConceptOperations.createNewNode("jetbrains.mps.console.ideCommands.structure.ShowGenPlan",null);
        SLinkOperations.setTarget(command.value,"targetModel",SConceptOperations.createNewNode("jetbrains.mps.console.ideCommands.structure.ModelReference",null),true);
        SPropertyOperations.set(SLinkOperations.getTarget(command.value,"targetModel",true),"fqName",((SModel)MapSequence.fromMap(_params).get("model")).getModelName());
        SPropertyOperations.set(SLinkOperations.getTarget(command.value,"targetModel",true),"name",SNodeOperations.getModelLongName(((SModel)MapSequence.fromMap(_params).get("model"))));
        SPropertyOperations.set(SLinkOperations.getTarget(command.value,"targetModel",true),"stereotype",SModelStereotype.getStereotype(((SModel)MapSequence.fromMap(_params).get("model"))));
      }
    }
);
    ((Project)MapSequence.fromMap(_params).get("project")).getComponent(ConsoleTool.class).executeCommand(command.value);
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Priority.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "ShowGenerationPlan",t);
    }
  }
}
