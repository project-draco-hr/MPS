{
  try {
    Iterable<? extends SModule> modules=((MPSProject)MapSequence.fromMap(_params).get("project")).getModulesWithGenerators();
    final ModelFactory defaultModelFactory=PersistenceFacade.getInstance().getDefaultModelFactory();
    Iterable<PersistenceVersionAware> models=Sequence.fromIterable(modules).translate(new ITranslator2<SModule,SModel>(){
      public Iterable<SModel> translate(      SModule it){
        return it.getModels();
      }
    }
).ofType(EditableSModel.class).ofType(PersistenceVersionAware.class).where(new IWhereFilter<PersistenceVersionAware>(){
      public boolean accept(      PersistenceVersionAware it){
        return it.getModelFactory() == defaultModelFactory && it.getPersistenceVersion() < 9;
      }
    }
);
    Sequence.fromIterable(models).visitAll(new IVisitor<PersistenceVersionAware>(){
      public void visit(      PersistenceVersionAware it){
        it.load();
      }
    }
);
    models=Sequence.fromIterable(models).subtract(Sequence.fromIterable(models).where(new IWhereFilter<PersistenceVersionAware>(){
      public boolean accept(      PersistenceVersionAware it){
        SModuleReference mr=it.getModule().getModuleReference();
        return mr.equals(PersistenceFacade.getInstance().createModuleReference("343e2a8b-449f-45b3-9da8-1463945cb208(testRefactoring)")) || mr.equals(PersistenceFacade.getInstance().createModuleReference("7bb4f305-7fb7-495b-be9c-5777cd6ab9d6(testRefactoringTargetLang)")) || mr.equals(PersistenceFacade.getInstance().createModuleReference("343e2a8b-449f-45b3-9da8-1463945cb208(testRefactoring)"))|| mr.equals(PersistenceFacade.getInstance().createModuleReference("24106442-1955-413a-8c2b-cc6969a4b149(testRefactoring.sandbox)"));
      }
    }
));
    Sequence.fromIterable(models).visitAll(new IVisitor<PersistenceVersionAware>(){
      public void visit(      PersistenceVersionAware model){
        model.setPersistenceVersion(9);
        ((EditableSModel)model).setChanged(true);
        ((EditableSModel)model).save();
      }
    }
);
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "MigrateIds",t);
    }
  }
}
