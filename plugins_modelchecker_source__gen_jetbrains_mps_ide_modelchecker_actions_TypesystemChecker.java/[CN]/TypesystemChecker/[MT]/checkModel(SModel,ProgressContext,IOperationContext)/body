{
  List<SearchResult<ModelCheckerIssue>> results=ListSequence.fromList(new ArrayList<SearchResult<ModelCheckerIssue>>());
  for (  SNode rootNode : ListSequence.fromList(SModelOperations.getRoots(model,null))) {
    if (!(progressContext.checkAndUpdateIndicator("Checking " + SModelOperations.getModelName(model) + " for typesystem rules..."))) {
      break;
    }
    TypeCheckingContext typeCheckingContext=TypeContextManager.getInstance().createTypeCheckingContext(rootNode);
    typeCheckingContext.setOperationContext(operationContext);
    Set<Pair<SNode,List<IErrorReporter>>> nodeWithErrors=typeCheckingContext.checkRootAndGetErrors(true);
    for (    Pair<SNode,List<IErrorReporter>> nodeErrorReporters : SetSequence.fromSet(nodeWithErrors)) {
      SNode node=nodeErrorReporters.o1;
      for (      IErrorReporter errorReporter : ListSequence.fromList(nodeErrorReporters.o2)) {
        addIssue(results,node,errorReporter.reportError(),getResultCategory(errorReporter.getMessageStatus()),"type system",null);
      }
    }
    typeCheckingContext.dispose();
  }
  return results;
}
