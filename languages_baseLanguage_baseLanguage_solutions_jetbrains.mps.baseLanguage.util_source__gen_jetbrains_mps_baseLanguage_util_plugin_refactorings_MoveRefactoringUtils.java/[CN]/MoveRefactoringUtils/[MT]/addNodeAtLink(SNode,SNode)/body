{
  if (SNodeOperations.isInstanceOf(container,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,"jetbrains.mps.baseLanguage.structure.Classifier")) && SNodeOperations.isInstanceOf(node,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1178285077437l,"jetbrains.mps.baseLanguage.structure.ClassifierMember"))) {
    MemberInsertingUtils.insertClassifierMemberInBestPlace(SNodeOperations.cast(container,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,"jetbrains.mps.baseLanguage.structure.Classifier")),SNodeOperations.cast(node,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1178285077437l,"jetbrains.mps.baseLanguage.structure.ClassifierMember")));
  }
 else {
    SNode concept=SNodeOperations.getConceptDeclaration(node);
    for (    SNode link : ListSequence.fromList(BehaviorReflection.invokeNonVirtual((Class<List<SNode>>)((Class)Object.class),SNodeOperations.getConceptDeclaration(container),"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration","call_getLinkDeclarations_1213877394480",new Object[]{}))) {
      if (SLinkOperations.getTarget(link,MetaAdapterFactory.getReferenceLink(new UUID(-4094437568663370681l,-8968368868337559369l),1071489288298l,1071599976176l,"target")) == concept) {
        container.addChild(SPropertyOperations.getString(link,MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1071489288298l,1071599776563l,"role")),node);
      }
    }
  }
}
