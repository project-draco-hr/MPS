{
{
    SAbstractConcept cncpt=((SAbstractConcept)concept);
    Integer preIndex=indices_xbvbvu_a0a.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return Collections.<ConceptEditor>singletonList(new AuthorBlockDocTag_Editor());
      }
    break;
case 1:
  if (true) {
    return Collections.<ConceptEditor>singletonList(new BaseDocReference_Editor());
  }
break;
case 2:
if (true) {
return Collections.<ConceptEditor>singletonList(new BaseInlineDocTag_Editor());
}
break;
case 3:
if (true) {
return Collections.<ConceptEditor>singletonList(new BaseParameterReference_Editor());
}
break;
case 4:
if (true) {
return Collections.<ConceptEditor>singletonList(new BaseVariableDocReference_Editor());
}
break;
case 5:
if (true) {
return Collections.<ConceptEditor>singletonList(new ClassifierDocComment_Editor());
}
break;
case 6:
if (true) {
return Collections.<ConceptEditor>singletonList(new ClassifierDocReference_Editor());
}
break;
case 7:
if (true) {
return Collections.<ConceptEditor>singletonList(new CodeInlineDocTag_Editor());
}
break;
case 8:
if (true) {
return Collections.<ConceptEditor>singletonList(new CodeSnippet_Editor());
}
break;
case 9:
if (true) {
return Collections.<ConceptEditor>singletonList(new CommentLine_Editor());
}
break;
case 10:
if (true) {
return Collections.<ConceptEditor>singletonList(new DeprecatedBlockDocTag_Editor());
}
break;
case 11:
if (true) {
return Collections.<ConceptEditor>singletonList(new DocMethodParameterReference_Editor());
}
break;
case 12:
if (true) {
return Collections.<ConceptEditor>singletonList(new DocTypeParameterReference_Editor());
}
break;
case 13:
if (true) {
return Collections.<ConceptEditor>singletonList(new EmptyBlockDocTag_Editor());
}
break;
case 14:
if (true) {
return Collections.<ConceptEditor>singletonList(new FieldDocComment_Editor());
}
break;
case 15:
if (true) {
return Collections.<ConceptEditor>singletonList(new FieldDocReference_Editor());
}
break;
case 16:
if (true) {
return Collections.<ConceptEditor>singletonList(new HTMLElement_Editor());
}
break;
case 17:
if (true) {
return Collections.<ConceptEditor>singletonList(new InheritDocInlineDocTag_Editor());
}
break;
case 18:
if (true) {
return Collections.<ConceptEditor>singletonList(new InlineTagCommentLinePart_Editor());
}
break;
case 19:
if (true) {
return Collections.<ConceptEditor>singletonList(new LinkInlineDocTag_Editor());
}
break;
case 20:
if (true) {
return Collections.<ConceptEditor>singletonList(new MethodDocComment_Editor());
}
break;
case 21:
if (true) {
return Collections.<ConceptEditor>singletonList(new MethodDocReference_Editor());
}
break;
case 22:
if (true) {
return Collections.<ConceptEditor>singletonList(new ParameterBlockDocTag_Editor());
}
break;
case 23:
if (true) {
return Collections.<ConceptEditor>singletonList(new ReturnBlockDocTag_Editor());
}
break;
case 24:
if (true) {
return Collections.<ConceptEditor>singletonList(new SeeBlockDocTag_Editor());
}
break;
case 25:
if (true) {
return Collections.<ConceptEditor>singletonList(new SinceBlockDocTag_Editor());
}
break;
case 26:
if (true) {
return Collections.<ConceptEditor>singletonList(new StaticFieldDocReference_Editor());
}
break;
case 27:
if (true) {
return Collections.<ConceptEditor>singletonList(new TextCommentLinePart_Editor());
}
break;
case 28:
if (true) {
return Collections.<ConceptEditor>singletonList(new ThrowsBlockDocTag_Editor());
}
break;
case 29:
if (true) {
return Collections.<ConceptEditor>singletonList(new ValueInlineDocTag_Editor());
}
break;
case 30:
if (true) {
return Collections.<ConceptEditor>singletonList(new VersionBlockDocTag_Editor());
}
break;
default :
}
}
return Collections.<ConceptEditor>emptyList();
}
