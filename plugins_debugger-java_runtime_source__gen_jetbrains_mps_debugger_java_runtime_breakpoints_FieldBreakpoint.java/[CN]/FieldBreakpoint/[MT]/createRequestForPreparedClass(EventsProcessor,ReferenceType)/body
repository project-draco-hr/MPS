{
  RequestManager requestManager=debugProcess.getRequestManager();
  if (!(updateFieldName())) {
    return;
  }
  try {
    Field field=EvaluationUtils.getInstance().findField((ClassType)classType,myFieldName);
    AccessWatchpointRequest fieldAccessRequest=requestManager.createFieldAccessRequest(this,field);
    ModificationWatchpointRequest fieldModificationRequest=requestManager.createFieldModificationRequest(this,field);
    requestManager.enableRequest(fieldAccessRequest);
    requestManager.enableRequest(fieldModificationRequest);
  }
 catch (  ClassNotPreparedException ex) {
    LOG.warn("ClassNotPreparedException: " + ex.getMessage());
  }
catch (  ObjectCollectedException ex) {
    LOG.warn("ObjectCollectedException: " + ex.getMessage());
  }
catch (  InternalException ex) {
    LOG.error(ex);
  }
catch (  Exception ex) {
    LOG.error(ex);
  }
}
