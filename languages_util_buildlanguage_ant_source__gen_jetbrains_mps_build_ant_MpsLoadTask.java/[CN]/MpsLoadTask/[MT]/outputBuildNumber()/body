{
  String antTaskBuildNumber=null;
  URL resource=getClass().getResource("/build.number");
  if (resource == null) {
    log("Can't determine version of ant task.",Project.MSG_DEBUG);
    return;
  }
  try {
    antTaskBuildNumber=MpsLoadTask.readBuildNumber(resource.openStream());
    if (antTaskBuildNumber == null || antTaskBuildNumber.isEmpty()) {
      log("Can't determine version of ant task.",Project.MSG_DEBUG);
      return;
    }
  }
 catch (  IOException ignore) {
    log("Can't determine version of ant task.",Project.MSG_DEBUG);
    return;
  }
  String mpsBuildNumber=null;
  try {
    mpsBuildNumber=MpsLoadTask.readBuildNumber(new FileInputStream(new File(myMpsHome.getAbsolutePath() + File.separator + "build.number")));
    if (mpsBuildNumber == null || mpsBuildNumber.isEmpty()) {
      log("Can't determine version of MPS.",Project.MSG_DEBUG);
      return;
    }
  }
 catch (  IOException ignore) {
    log("Can't determine version of MPS.",Project.MSG_DEBUG);
    return;
  }
  if (mpsBuildNumber.equals(antTaskBuildNumber)) {
    log("Build number " + mpsBuildNumber,Project.MSG_INFO);
  }
 else {
    log("MPS build number is " + mpsBuildNumber + ", while ant task build number is "+ antTaskBuildNumber+ ".\n"+ "This may cause errors.",Project.MSG_WARN);
  }
}
