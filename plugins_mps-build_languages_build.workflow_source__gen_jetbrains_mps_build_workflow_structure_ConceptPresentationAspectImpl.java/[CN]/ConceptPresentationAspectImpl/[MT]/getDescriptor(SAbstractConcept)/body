{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)LanguageRegistry.getInstance().getLanguage(MetaAdapterFactory.getLanguage(SLanguageId.deserialize("698a8d22-a104-47a0-ba8d-10e3ec237f13"),"jetbrains.mps.build.workflow")).getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case 0:
    return props_BwfAntStatement;
case 1:
  return props_BwfAntTaskBundleDeclaration;
case 2:
return props_BwfAntTaskDeclaration;
case 3:
return props_BwfCustomMacro;
case 4:
return props_BwfDependency;
case 5:
return props_BwfFileSet;
case 6:
return props_BwfJavaClassPath;
case 7:
return props_BwfJavaDependency;
case 8:
return props_BwfJavaDescriptor;
case 9:
return props_BwfJavaLibrary;
case 10:
return props_BwfJavaLibraryReference;
case 11:
return props_BwfJavaModule;
case 12:
return props_BwfJavaModuleReference;
case 13:
return props_BwfMacro;
case 14:
return props_BwfMacroListImport;
case 15:
return props_BwfPathDeclaration;
case 16:
return props_BwfPathReference;
case 17:
return props_BwfProject;
case 18:
return props_BwfProjectPart;
case 19:
return props_BwfProjectPartStatement;
case 20:
return props_BwfStatement;
case 21:
return props_BwfSubTask;
case 22:
return props_BwfSubTaskDependency;
case 23:
return props_BwfTask;
case 24:
return props_BwfTaskDependency;
case 25:
return props_BwfTaskLibrary;
case 26:
return props_BwfTaskLibraryDependency;
case 27:
return props_BwfTaskPart;
}
throw new IllegalStateException();
}
