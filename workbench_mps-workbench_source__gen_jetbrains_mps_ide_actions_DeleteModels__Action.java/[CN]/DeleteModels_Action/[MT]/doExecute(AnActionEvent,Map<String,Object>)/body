{
  try {
    final DeleteDialog.DeleteOption safeOption=new DeleteDialog.DeleteOption("Safe Delete",false,true);
    DeleteDialog.DeleteOption filesOption=new DeleteDialog.DeleteOption("Delete Files",false,true);
    DeleteDialog dialog=new DeleteDialog(((MPSProject)MapSequence.fromMap(_params).get("project")),"Delete Models","Are you sure you want to delete selected models?",safeOption);
    dialog.show();
    if (!(dialog.isOK())) {
      return;
    }
    ModelAccess modelAccess=((MPSProject)MapSequence.fromMap(_params).get("project")).getRepository().getModelAccess();
    modelAccess.executeCommandInEDT(new Runnable(){
      public void run(){
        for (        SModel model : ListSequence.fromList(((List<SModel>)MapSequence.fromMap(_params).get("models")))) {
          if (SModelStereotype.isStubModelStereotype(SModelStereotype.getStereotype(model))) {
            continue;
          }
          DeleteModelHelper.deleteModel(((MPSProject)MapSequence.fromMap(_params).get("project")),((SModule)MapSequence.fromMap(_params).get("contextModule")),model,safeOption.selected,true);
        }
      }
    }
);
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Priority.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "DeleteModels",t);
    }
  }
}
