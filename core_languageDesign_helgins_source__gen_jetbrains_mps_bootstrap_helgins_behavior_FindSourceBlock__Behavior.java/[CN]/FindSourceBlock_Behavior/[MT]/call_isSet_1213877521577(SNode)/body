{
  Iterable<SNode> returnStatements=RulesFunctions_BaseLanguage.collectReturnStatements(thisNode);
  SNode lastStatement=ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(thisNode,"body",true),"statement",true)).last();
  Set<SNode> expressions=new HashSet<SNode>();
  for (  SNode returnStatement : returnStatements) {
    expressions.add(SLinkOperations.getTarget(returnStatement,"expression",true));
  }
  if (SNodeOperations.isInstanceOf(lastStatement,"jetbrains.mps.baseLanguage.structure.ExpressionStatement")) {
    expressions.add(SLinkOperations.getTarget(lastStatement,"expression",true));
  }
  for (  SNode expr : expressions) {
    if (TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(expr),new QuotationClass_1().createNode())) {
      return true;
    }
  }
  return false;
}
