{
  fireReloadStarted();
  LOG.debug("Starting reload for:\n" + ((SetSequence.fromSet(myChangedModels).isEmpty() ? "" : "Changed models : " + myChangedModels + "\n")) + ((SetSequence.fromSet(myChangedModules).isEmpty() ? "" : "Changed modules : " + myChangedModules + "\n"))+ ((SetSequence.fromSet(myChangedProjects).isEmpty() ? "" : "Changed projects : " + myChangedProjects + "\n"))+ ((SetSequence.fromSet(myNewModelVFiles).isEmpty() ? "" : "New models : " + myNewModelVFiles + "\n"))+ ((SetSequence.fromSet(myNewModuleVFiles).isEmpty() ? "" : "New modules : " + myNewModuleVFiles + "\n"))+ ((SetSequence.fromSet(myDeletedModels).isEmpty() ? "" : "Deleted models : " + myDeletedModels + "\n"))+ ((SetSequence.fromSet(myDeletedModules).isEmpty() ? "" : "Deleted modules : " + myDeletedModules + "\n")));
  try {
    if (!(SetSequence.fromSet(myNewModuleVFiles).isEmpty())) {
      if (log.isInfoEnabled()) {
        log.info("Reloading libraries.");
      }
      progressIndicator.setText("Reloading libraries... Please wait.");
      ModelAccess.instance().runWriteAction(new Runnable(){
        public void run(){
          LibraryInitializer.getInstance().update();
        }
      }
);
    }
    preprocess();
    boolean areModulesUpdated=updateModules(progressIndicator);
    updateModels(progressIndicator);
    if (areModulesUpdated || !(SetSequence.fromSet(myNewModuleVFiles).isEmpty())) {
      progressIndicator.setText("Reloading classes... Please wait.");
      if (log.isInfoEnabled()) {
        log.info("Reloading classes.");
      }
      ModelAccess.instance().runWriteAction(new Runnable(){
        public void run(){
          ClassLoaderManager.getInstance().reloadAll(new EmptyProgressIndicator());
        }
      }
);
    }
  }
  finally {
    if (log.isInfoEnabled()) {
      log.info("Reload finished.");
    }
    fireReloadFinished();
    for (    Project project : ProjectManager.getInstance().getOpenProjects()) {
      ProjectPane.getInstance(project).rebuild();
    }
  }
}
