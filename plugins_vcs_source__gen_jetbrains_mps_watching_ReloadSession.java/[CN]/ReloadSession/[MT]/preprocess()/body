{
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      for (      VirtualFile virtualFile : myNewModelVFiles) {
        if (!(virtualFile.exists())) {
          continue;
        }
        IModule module=MPSModuleRepository.getInstance().getModuleForModelFile(FileUtil.getCanonicalPath(virtualFile.getPath()));
        if (module != null) {
          SetSequence.fromSet(myChangedModules).addElement(module);
        }
      }
      for (      SModelDescriptor modelDescriptor : myDeletedModels) {
        IModule module=modelDescriptor.getModule();
        if (module != null) {
          SetSequence.fromSet(myChangedModules).addElement(module);
        }
      }
      Set<EditableSModelDescriptor> skip=SetSequence.fromSet(new HashSet<EditableSModelDescriptor>());
      for (      EditableSModelDescriptor modelDescriptor : myChangedModels) {
        IModule module=modelDescriptor.getModule();
        if (SetSequence.fromSet(myChangedModules).contains(module)) {
          if (log.isDebugEnabled()) {
            log.debug("Skip model " + modelDescriptor + " since we want to reload "+ module);
          }
          SetSequence.fromSet(skip).addElement(modelDescriptor);
          break;
        }
      }
      Iterable<Generator> generators=SetSequence.fromSet(myChangedModules).where(new IWhereFilter<IModule>(){
        public boolean accept(        IModule m){
          return m instanceof Generator;
        }
      }
).select(new ISelector<IModule,Generator>(){
        public Generator select(        IModule m){
          return (Generator)m;
        }
      }
).toListSequence();
      for (      Generator gen : Sequence.fromIterable(generators)) {
        if (log.isDebugEnabled()) {
          log.debug("Skip generator " + gen + " since we want to reload "+ gen.getSourceLanguage());
        }
        SetSequence.fromSet(myChangedModules).removeElement(gen);
        SetSequence.fromSet(myChangedModules).addElement(gen.getSourceLanguage());
      }
      SetSequence.fromSet(myChangedModules).removeSequence(SetSequence.fromSet(myDeletedModules));
      SetSequence.fromSet(myChangedModels).removeSequence(SetSequence.fromSet(skip));
    }
  }
);
}
