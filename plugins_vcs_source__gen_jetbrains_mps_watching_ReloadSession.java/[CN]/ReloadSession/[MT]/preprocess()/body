{
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      for (      VirtualFile virtualFile : myNewModelVFiles) {
        if (!(virtualFile.exists())) {
          continue;
        }
        IModule module=MPSModuleRepository.getInstance().getModuleForModelFile(FileUtil.getCanonicalPath(virtualFile.getPath()));
        if (module != null) {
          SetSequence.fromSet(myChangedModules).addElement(module);
        }
      }
      Iterable<Generator> generators=SetSequence.fromSet(myChangedModules).where(new IWhereFilter<IModule>(){
        public boolean accept(        IModule m){
          return m instanceof Generator;
        }
      }
).<Generator>select(new ISelector<IModule,Generator>(){
        public Generator select(        IModule m){
          return (Generator)m;
        }
      }
);
      for (      Generator gen : generators) {
        if (log.isDebugEnabled()) {
          log.debug("Skip generator " + gen + " since we want to reload "+ gen.getSourceLanguage());
        }
        SetSequence.fromSet(myChangedModules).removeElement(gen);
        SetSequence.fromSet(myChangedModules).addElement(gen.getSourceLanguage());
      }
      SetSequence.fromSet(myChangedModules).removeSequence(SetSequence.fromSet(myDeletedModules));
    }
  }
);
}
