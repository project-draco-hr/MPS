{
  if (!(SConceptOperations.isExactly(SNodeOperations.asSConcept(SNodeOperations.getConceptDeclaration(SLinkOperations.getTarget(node,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbdeb6fecfL,0xfbdeb7a11cL,"leftExpression")))),SNodeOperations.asSConcept(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Expression"))))) {
    SLinkOperations.setTarget(node,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbdeb6fecfL,0xfbdeb7a11cL,"leftExpression"),SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506fL,"jetbrains.mps.baseLanguage.structure.Expression"))));
    return;
  }
  SNode rightExpression=SLinkOperations.getTarget(node,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbdeb6fecfL,0xfbdeb7a11bL,"rightExpression"));
  SNodeOperations.replaceWithAnother(node,rightExpression);
  editorContext.flushEvents();
  EditorComponent editor=editorContext.getEditorComponent();
  EditorCell cell=editor.findNodeCell(rightExpression);
  if (cell != null) {
    EditorCell firstLeaf=((jetbrains.mps.nodeEditor.cells.EditorCell)cell).getFirstLeaf(CellConditions.SELECTABLE);
    editor.changeSelection(firstLeaf);
    if (firstLeaf instanceof EditorCell_Label) {
      ((EditorCell_Label)firstLeaf).home();
    }
  }
}
