{
  BaseGroup group=new BaseGroup("");
  List<Pair<Intention,SNode>> groupItems=new ArrayList<Pair<Intention,SNode>>();
  IntentionsManager.QueryDescriptor query=new IntentionsManager.QueryDescriptor();
  query.setIntentionClass(GenerateIntention.class);
  query.setInstantiate(true);
  groupItems.addAll(IntentionsManager.getInstance().getAvailableIntentions(query,GenerationIntentions_Action.this.selectedNode,GenerationIntentions_Action.this.editorContext));
  if (groupItems.isEmpty()) {
    return null;
  }
  Collections.sort(groupItems,new Comparator<Pair<Intention,SNode>>(){
    public int compare(    Pair<Intention,SNode> p0,    Pair<Intention,SNode> p1){
      Intention intention1=p0.getFirst();
      Intention intention2=p1.getFirst();
      SNode node1=p0.getSecond();
      SNode node2=p1.getSecond();
      return intention1.getDescription(node1,GenerationIntentions_Action.this.editorContext).compareTo(intention2.getDescription(node2,GenerationIntentions_Action.this.editorContext));
    }
  }
);
  for (  final Pair<Intention,SNode> pair : groupItems) {
    BaseAction action=new BaseAction(pair.getFirst().getDescription(pair.getSecond(),GenerationIntentions_Action.this.editorContext)){
      protected void doExecute(      AnActionEvent p0){
        final IntentionContext intentionContext=new IntentionContext();
        final GenerateIntention generateIntention=(GenerateIntention)pair.getFirst();
        if (generateIntention.executeUI(pair.getSecond(),GenerationIntentions_Action.this.editorContext,intentionContext)) {
          ModelAccess.instance().runCommandInEDT(new Runnable(){
            public void run(){
              generateIntention.execute(pair.getSecond(),GenerationIntentions_Action.this.editorContext,intentionContext);
            }
          }
);
        }
      }
    }
;
    action.setExecuteOutsideCommand(true);
    group.add(action);
  }
  return group;
}
