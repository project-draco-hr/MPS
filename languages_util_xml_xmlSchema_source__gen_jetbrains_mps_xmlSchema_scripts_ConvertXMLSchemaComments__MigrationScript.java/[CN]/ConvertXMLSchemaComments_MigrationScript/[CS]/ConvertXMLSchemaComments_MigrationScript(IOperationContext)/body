{
  super("Convert XML Schema Comments");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "convert SchemaCommentable";
    }
    public String getAdditionalInfo(){
      return "convert SchemaCommentable";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.xmlSchema.structure.SchemaCommentable";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return node.getChild("comment") != null;
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode comment=node.getChild("comment");
      List<SNode> baseText=comment.getChildren("text");
      Iterable<SNode> textParts=ListSequence.fromList(baseText).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return eq_zghlll_a0a0a0a0a0a5a4a0a0a1a0(it.getConceptFqName(),"jetbrains.mps.xml.structure.Text");
        }
      }
);
      SLinkOperations.setTarget(node,"sComment",SConceptOperations.createNewNode("jetbrains.mps.xmlSchema.structure.SchemaComment",null),true);
      ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(node,"sComment",true),"text",true)).addSequence(Sequence.fromIterable(textParts).select(new ISelector<SNode,SNode>(){
        public SNode select(        SNode it){
          return new ConvertXMLSchemaComments_MigrationScript.QuotationClass_zghlll_a0a0a0a0a0a0i0e0a0a0b0a().createNode(it.getPersistentProperty("text"));
        }
      }
));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
