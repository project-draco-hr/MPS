{
  Language sourceLanguage=myModule.getSourceLanguage();
  usedLanguages.remove(sourceLanguage.getModuleName());
  if (usedLanguages.isEmpty()) {
    return Collections.emptyList();
  }
  ArrayList<String> warnings=new ArrayList<String>();
  final HashSet<SModuleReference> compileTimeDeps=new HashSet<SModuleReference>();
  for (  SModule d : new GlobalModuleDependenciesManager(sourceLanguage).getModules(Deptype.COMPILE)) {
    compileTimeDeps.add(d.getModuleReference());
  }
  for (  String lang : usedLanguages) {
    Language language=ModuleRepositoryFacade.getInstance().getModule(lang,Language.class);
    if (language == null || language.getRuntimeModulesReferences().isEmpty()) {
      continue;
    }
    if (!compileTimeDeps.containsAll(language.getRuntimeModulesReferences())) {
      warnings.add(String.format("%s shall specify language %s as generation target",sourceLanguage,lang));
    }
  }
  return warnings;
}
