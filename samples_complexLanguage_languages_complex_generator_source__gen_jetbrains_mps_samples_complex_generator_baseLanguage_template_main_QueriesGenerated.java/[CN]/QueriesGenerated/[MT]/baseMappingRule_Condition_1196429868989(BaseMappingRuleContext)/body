{
  return TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(),"leftExpression",true)),_quotation_createNode_x583g4_b0a0a0m()) && SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(),"rightExpression",true)),"jetbrains.mps.samples.complex.structure.ComplexType");
}
