{
  SNode bt=TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(SNodeOperations.as(_context.getReferenceNode(),"jetbrains.mps.ui.structure.BeanPropertyView"),"bean",true));
  try {
    throw new NullPointerException();
  }
 catch (  NullPointerException e) {
  }
  return ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(SNodeOperations.as(bt,"jetbrains.mps.baseLanguage.structure.ClassifierType"),"classifier",false),"method",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode m){
      if (ListSequence.fromList(SLinkOperations.getTargets(m,"parameter",true)).isNotEmpty()) {
        return false;
      }
      if (!(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(m,"visibility",true),"jetbrains.mps.baseLanguage.structure.PublicVisibility"))) {
        return false;
      }
      String gn=SPropertyOperations.getString(m,"name");
      if (gn != null) {
        if (gn.startsWith("is")) {
          return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(m,"returnType",true),"jetbrains.mps.baseLanguage.structure.BooleanType");
        }
 else         if (gn.startsWith("get")) {
          return !(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(m,"returnType",true),"jetbrains.mps.baseLanguage.structure.VoidType"));
        }
      }
      return false;
    }
  }
);
}
