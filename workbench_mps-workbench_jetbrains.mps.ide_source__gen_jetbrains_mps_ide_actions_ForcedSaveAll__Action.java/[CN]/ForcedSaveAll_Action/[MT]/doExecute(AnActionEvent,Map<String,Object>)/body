{
  Iterable<SModule> modules=(Iterable<SModule>)((MPSProject)MapSequence.fromMap(_params).get("project")).getProjectModulesWithGenerators();
  List<EditableSModel> allModels=Sequence.fromIterable(modules).translate(new ITranslator2<SModule,SModel>(){
    public Iterable<SModel> translate(    SModule it){
      return it.getModels();
    }
  }
).ofType(EditableSModel.class).where(new IWhereFilter<EditableSModel>(){
    public boolean accept(    EditableSModel it){
      return SModelStereotype.isUserModel(it);
    }
  }
).toListSequence();
  for (  AbstractModule module : Sequence.fromIterable(modules).ofType(AbstractModule.class)) {
    module.updateExternalReferences();
    if (!(module instanceof Generator)) {
      module.save();
    }
  }
  for (  EditableSModel model : ListSequence.fromList(allModels)) {
    if (model.isReadOnly()) {
      continue;
    }
    try {
      model.load();
      model.setChanged(true);
      if (model.isChanged()) {
        model.save();
      }
    }
 catch (    Exception ex) {
      if (LOG.isEnabledFor(Level.ERROR)) {
        LOG.error("Error re-saving model " + model.getName(),ex);
      }
    }
  }
}
