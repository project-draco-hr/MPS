{
  return new Mapper<SNode,PolyLineConnection>(getSNode(),createConnection()){
    @Override protected void registerSynchronizers(    Mapper.SynchronizersConfiguration configuration){
      super.registerSynchronizers(configuration);
      configuration.add(Synchronizers.forProperty(getTarget().view().focused(),new Runnable(){
        public void run(){
          if (getTarget().view().focused().get()) {
            SelectionUtil.selectCell(getContext(),getSNode(),getCellId());
          }
        }
      }
));
      configuration.add(Synchronizers.forProperty(myInputPort,new WritableProperty<Tuples._1<SNode>>(){
        public void set(        Tuples._1<SNode> port){
          getTarget().toView().set(getTargetView(port));
        }
        private View getTargetView(        Tuples._1<SNode> port){
          Mapper<? super SNode,?> descendantMapper=getParent().getDescendantMapper(port._0());
          if (descendantMapper == null) {
            return null;
          }
          return (View)descendantMapper.getTarget();
        }
      }
));
      configuration.add(Synchronizers.forProperty(myOutputPort,new WritableProperty<Tuples._1<SNode>>(){
        public void set(        Tuples._1<SNode> port){
          getTarget().fromView().set(getTargetView(port));
          if (getTarget().fromView().get() == null || getTarget().toView().get() == null) {
            getTarget().fromView().set(null);
            getTarget().toView().set(null);
          }
        }
        private View getTargetView(        Tuples._1<SNode> port){
          Mapper<? super SNode,?> descendantMapper=getParent().getDescendantMapper(port._0());
          if (descendantMapper == null) {
            return null;
          }
          return (View)descendantMapper.getTarget();
        }
      }
));
    }
  }
;
}
