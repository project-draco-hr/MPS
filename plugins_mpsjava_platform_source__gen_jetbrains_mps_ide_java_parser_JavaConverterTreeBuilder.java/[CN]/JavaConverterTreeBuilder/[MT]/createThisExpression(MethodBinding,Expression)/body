{
  ReferenceBinding methodDeclaringClass=binding.declaringClass;
  SourceTypeBinding currentClass=myCurrentTypeDeclaration.binding;
  SNode thisExpression=SModelOperations.createNewNode(myCurrentModel,null,"jetbrains.mps.baseLanguage.structure.ThisExpression");
  if (currentClass == methodDeclaringClass) {
    return thisExpression;
  }
  if (isSubtype(currentClass,methodDeclaringClass)) {
    return thisExpression;
  }
  while (!(currentClass.isStatic()) && currentClass.isNestedType()) {
    currentClass=((NestedTypeBinding)currentClass).enclosingType;
    if (isSubtype(currentClass,methodDeclaringClass)) {
      break;
    }
  }
  thisExpression.setReference(myTypesProvider.createClassifierReference((ReferenceBinding)currentClass,"classConcept",thisExpression).getRole(),myTypesProvider.createClassifierReference((ReferenceBinding)currentClass,"classConcept",thisExpression));
  return thisExpression;
}
