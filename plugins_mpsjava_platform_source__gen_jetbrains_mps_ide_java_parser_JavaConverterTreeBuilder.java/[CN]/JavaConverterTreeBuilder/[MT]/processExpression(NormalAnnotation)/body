{
  SNode annotationInstance=prepareAnnotationInstance(x);
  MemberValuePair[] pairs=x.memberValuePairs();
  if (pairs != null) {
    for (    MemberValuePair pair : pairs) {
      SNode value=SModelOperations.createNewNode(myCurrentModel,"jetbrains.mps.baseLanguage.structure.AnnotationInstanceValue",null);
      SLinkOperations.setTarget(value,"value",processExpressionRefl(pair.value),true);
      SNode valueNode=value;
      if (pair.binding == null) {
        valueNode.setReference(myTypesProvider.createErrorReference("key",new String(pair.name),valueNode).getRole(),myTypesProvider.createErrorReference("key",new String(pair.name),valueNode));
      }
 else {
        valueNode.setReference(myTypesProvider.createMethodReference(pair.binding,"key",valueNode).getRole(),myTypesProvider.createMethodReference(pair.binding,"key",valueNode));
      }
      ListSequence.fromList(SLinkOperations.getTargets(annotationInstance,"value",true)).addElement(value);
    }
  }
  return annotationInstance;
}
