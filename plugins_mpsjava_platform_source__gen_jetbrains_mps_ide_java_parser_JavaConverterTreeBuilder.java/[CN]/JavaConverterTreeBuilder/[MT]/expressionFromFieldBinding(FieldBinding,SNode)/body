{
  String role;
  SNode sourceNode;
  SNode result;
  ReferenceBinding declaredClassBinding=getDeclaredClassBinding(fieldBinding);
  if (fieldBinding.isStatic()) {
    SNodePointer classifierPointer=myTypesProvider.createClassifierPointer(declaredClassBinding);
    if (fieldBinding.declaringClass.isEnum()) {
      SNode enumConstantReference=SModelOperations.createNewNode(myCurrentModel,null,"jetbrains.mps.baseLanguage.structure.EnumConstantReference");
      role="enumConstantDeclaration";
      sourceNode=enumConstantReference;
      enumConstantReference.setReference(SReference.create("enumClass",sourceNode,classifierPointer,new String(fieldBinding.name)).getRole(),SReference.create("enumClass",sourceNode,classifierPointer,new String(fieldBinding.name)));
      result=enumConstantReference;
    }
 else     if (myCurrentClass == myTypesProvider.getRaw(declaredClassBinding)) {
      role="variableDeclaration";
      SNode lsfr=SModelOperations.createNewNode(myCurrentModel,null,"jetbrains.mps.baseLanguage.structure.LocalStaticFieldReference");
      sourceNode=lsfr;
      result=lsfr;
    }
 else {
      SNode sfr=SModelOperations.createNewNode(myCurrentModel,null,"jetbrains.mps.baseLanguage.structure.StaticFieldReference");
      sourceNode=sfr;
      role="variableDeclaration";
      sfr.setReference(SReference.create("classifier",sourceNode,classifierPointer,new String(fieldBinding.name)).getRole(),SReference.create("classifier",sourceNode,classifierPointer,new String(fieldBinding.name)));
      result=sfr;
    }
  }
 else {
    if (instanceExpression == null) {
      role="variableDeclaration";
      SNode lifr=SModelOperations.createNewNode(myCurrentModel,null,"jetbrains.mps.baseLanguage.structure.LocalInstanceFieldReference");
      sourceNode=lifr;
      result=lifr;
    }
 else {
      role="fieldDeclaration";
      SNode instance;
      instance=instanceExpression;
      if (declaredClassBinding == null) {
        return createArrayLengthExpression(instance,fieldBinding);
      }
      SNode fieldRef=SModelOperations.createNewNode(myCurrentModel,null,"jetbrains.mps.baseLanguage.structure.FieldReferenceOperation");
      SNode dotExpression=SModelOperations.createNewNode(myCurrentModel,null,"jetbrains.mps.baseLanguage.structure.DotExpression");
      SLinkOperations.setTarget(dotExpression,"operation",fieldRef,true);
      SLinkOperations.setTarget(dotExpression,"operand",instance,true);
      sourceNode=fieldRef;
      result=dotExpression;
    }
  }
  SReference fieldReference=myTypesProvider.createFieldReference(fieldBinding,role,sourceNode);
  sourceNode.setReference(fieldReference.getRole(),fieldReference);
  return result;
}
