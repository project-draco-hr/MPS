{
{
    List<SNode> ops=SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputByLabel");
    for (    SNode op : ops) {
      SNode label=SLinkOperations.getTarget(op,"label",false);
      if (label == null) {
        _context.showErrorMessage(op,"reference on mapping label is broken");
        continue;
      }
      SPropertyOperations.set(op,"labelName_intern",SPropertyOperations.getString(label,"name"));
      SLinkOperations.setTarget(op,"label",null,false);
    }
  }
{
    List<SNode> ops=SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputByLabelAndInput");
    for (    SNode op : ops) {
      SNode label=SLinkOperations.getTarget(op,"label",false);
      if (label == null) {
        _context.showErrorMessage(op,"reference on mapping label is broken");
        continue;
      }
      SPropertyOperations.set(op,"labelName_intern",SPropertyOperations.getString(label,"name"));
      SLinkOperations.setTarget(op,"label",null,false);
    }
  }
{
    List<SNode> ops=SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputByLabelAndInputAndReferenceScope");
    for (    SNode op : ops) {
      SNode label=SLinkOperations.getTarget(op,"label",false);
      if (label == null) {
        _context.showErrorMessage(op,"reference on mapping label is broken");
        continue;
      }
      SPropertyOperations.set(op,"labelName_intern",SPropertyOperations.getString(label,"name"));
      SLinkOperations.setTarget(op,"label",null,false);
    }
  }
{
    List<SNode> ops=SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputListByLabelAndInput");
    for (    SNode op : ops) {
      SNode label=SLinkOperations.getTarget(op,"label",false);
      if (label == null) {
        _context.showErrorMessage(op,"reference on mapping label is broken");
        continue;
      }
      SPropertyOperations.set(op,"labelName_intern",SPropertyOperations.getString(label,"name"));
      SLinkOperations.setTarget(op,"label",null,false);
    }
  }
{
    List<SNode> ops=SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetPrevInputByLabel");
    for (    SNode op : ops) {
      SNode label=SLinkOperations.getTarget(op,"label",false);
      if (label == null) {
        _context.showErrorMessage(op,"reference on mapping label is broken");
        continue;
      }
      SPropertyOperations.set(op,"labelName_intern",SPropertyOperations.getString(label,"name"));
      SLinkOperations.setTarget(op,"label",null,false);
    }
  }
{
{
      List<SNode> ops=SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ParameterRef");
      for (      SNode op : ops) {
        SNode param=SLinkOperations.getTarget(op,"parameter",false);
        if (param == null) {
          _context.showErrorMessage(op,"reference on parameter is broken");
          continue;
        }
        SPropertyOperations.set(op,"name_intern",SPropertyOperations.getString(param,"name"));
        SLinkOperations.setTarget(op,"parameter",null,false);
      }
    }
    List<SNode> ops=SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_VarRef");
    for (    SNode op : ops) {
      SNode param=SLinkOperations.getTarget(op,"varmacro",false);
      if (param == null) {
        _context.showErrorMessage(op,"reference on variable is broken");
        continue;
      }
      SPropertyOperations.set(op,"name_intern",VarMacro_Behavior.call_getName_2721957369897649366(param));
      SLinkOperations.setTarget(op,"varmacro",null,false);
    }
  }
{
    List<SNode> ops=SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PatternRef");
    for (    SNode op : ops) {
      SNode patternVar=BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),op,"virtual_getTarget_1758784108620114792",new Object[]{});
      if (patternVar == null) {
        _context.showErrorMessage(op,"reference on pattern variable is broken");
        continue;
      }
      SPropertyOperations.set(op,"name_intern",PatternVarsUtil.getFieldName(patternVar));
      BehaviorReflection.invokeVirtual(Void.class,op,"virtual_setTarget_1758784108620254533",new Object[]{null});
    }
  }
{
    List<SNode> ops=SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GenParameterRef");
    for (    SNode op : ops) {
      SNode paramref=SLinkOperations.getTarget(op,"importClause",false);
      if (paramref == null || (SLinkOperations.getTarget(paramref,"declaration",false) == null)) {
        _context.showErrorMessage(op,"reference on generation parameter is broken");
        continue;
      }
      SNode paramDeclaration=SLinkOperations.getTarget(paramref,"declaration",false);
      if (SNodeOperations.getModel(paramDeclaration) == _context.getInputModel()) {
        paramDeclaration=SNodeOperations.cast(_context.getOriginalCopiedInputNode(paramDeclaration),"jetbrains.mps.lang.generator.structure.IGeneratorParameter");
      }
      SPropertyOperations.set(op,"name_intern",BehaviorReflection.invokeVirtual(String.class,paramDeclaration,"virtual_getUniqueId_650531548511609559",new Object[]{}));
      SLinkOperations.setTarget(op,"importClause",null,false);
    }
  }
  for (  SNode op : SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetExport")) {
    SNode label=SLinkOperations.getTarget(op,"label",false);
    if ((label == null)) {
      _context.showErrorMessage(op,"reference to export label is broken");
      continue;
    }
    SPropertyOperations.set(op,"name_intern",SPropertyOperations.getString(SLinkOperations.getTarget(op,"label",false),"name"));
  }
}
