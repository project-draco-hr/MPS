{
  return new VisibleClassifiersScope(((_context.getReferenceNode() == null) ? _context.getEnclosingNode() : _context.getReferenceNode()),IClassifiersSearchScope.CLASSIFFIER,operationContext.getScope()){
    @NotNull @Override public List<SNode> getClassifiers(){
      Set<SNode> enclosingClassifierAncestors=SetSequence.fromSet(new HashSet<SNode>());
      SetSequence.fromSet(enclosingClassifierAncestors).addSequence(ListSequence.fromList(SNodeOperations.getAncestors(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.Classifier",false)));
      List<SNode> result=new ArrayList<SNode>();
      for (      SNode classifier : ListSequence.fromList(super.getClassifiers())) {
        if (SPropertyOperations.getBoolean(classifier,"nonStatic")) {
          continue;
        }
        if (SNodeOperations.isInstanceOf(classifier,"jetbrains.mps.baseLanguage.structure.AnonymousClass")) {
          continue;
        }
        List<SNode> ancestors=SNodeOperations.getAncestors(classifier,null,true);
        if (ListSequence.fromList(ancestors).where(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return !(SNodeOperations.isInstanceOf(it,"jetbrains.mps.baseLanguage.structure.Classifier"));
          }
        }
).isNotEmpty() && ListSequence.fromList(ancestors).intersect(SetSequence.fromSet(enclosingClassifierAncestors)).isEmpty()) {
          continue;
        }
        result.add(classifier);
      }
      return result;
    }
  }
;
}
