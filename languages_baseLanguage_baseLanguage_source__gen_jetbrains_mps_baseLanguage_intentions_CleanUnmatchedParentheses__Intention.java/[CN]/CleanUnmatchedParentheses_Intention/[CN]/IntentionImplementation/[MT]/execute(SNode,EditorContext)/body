{
  ListSequence.fromList(SNodeOperations.getDescendants(node,"jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (AttributeOperations.getAttribute(it,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.structure.IncompleteLeftParen")) != null) || (AttributeOperations.getAttribute(it,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.structure.IncompleteRightParen")) != null);
    }
  }
).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode it){
      AttributeOperations.setAttribute(it,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.structure.IncompleteLeftParen"),null);
      AttributeOperations.setAttribute(it,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.structure.IncompleteRightParen"),null);
    }
  }
);
}
