{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0x,conceptFqName)) {
case 0:
    return myConceptExtendsFacetReference;
case 1:
  return myConceptFacetDeclaration;
case 2:
return myConceptFacetJavaClassExpression;
case 3:
return myConceptFacetReference;
case 4:
return myConceptFacetReferenceExpression;
case 5:
return myConceptForeignParametersComponentExpression;
case 6:
return myConceptForeignParametersExpression;
case 7:
return myConceptIFacet;
case 8:
return myConceptIPropertyExpression;
case 9:
return myConceptLocalParametersComponentExpression;
case 10:
return myConceptLocalParametersExpression;
case 11:
return myConceptNamedFacetReference;
case 12:
return myConceptParametersDeclaration;
case 13:
return myConceptRelatedFacetReference;
case 14:
return myConceptResourceClassifierType;
case 15:
return myConceptResourceSpecificPropertiesExpression;
case 16:
return myConceptResourceTypeDeclaration;
case 17:
return myConceptTargetDeclaration;
case 18:
return myConceptTargetDependency;
case 19:
return myConceptTargetReferenceExpression;
default :
throw new IllegalStateException("Wrong fqName of the concept " + conceptFqName);
}
}
