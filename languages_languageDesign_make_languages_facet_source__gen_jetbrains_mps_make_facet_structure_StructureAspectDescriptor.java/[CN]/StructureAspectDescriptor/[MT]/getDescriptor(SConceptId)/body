{
switch (myConceptIndex.index(id)) {
case LanguageConceptSwitch.ExtendsFacetReference:
    return myConceptExtendsFacetReference;
case LanguageConceptSwitch.FacetDeclaration:
  return myConceptFacetDeclaration;
case LanguageConceptSwitch.FacetJavaClassExpression:
return myConceptFacetJavaClassExpression;
case LanguageConceptSwitch.FacetReference:
return myConceptFacetReference;
case LanguageConceptSwitch.FacetReferenceExpression:
return myConceptFacetReferenceExpression;
case LanguageConceptSwitch.ForeignParametersComponentExpression:
return myConceptForeignParametersComponentExpression;
case LanguageConceptSwitch.ForeignParametersExpression:
return myConceptForeignParametersExpression;
case LanguageConceptSwitch.IFacet:
return myConceptIFacet;
case LanguageConceptSwitch.IPropertyExpression:
return myConceptIPropertyExpression;
case LanguageConceptSwitch.LocalParametersComponentExpression:
return myConceptLocalParametersComponentExpression;
case LanguageConceptSwitch.LocalParametersExpression:
return myConceptLocalParametersExpression;
case LanguageConceptSwitch.NamedFacetReference:
return myConceptNamedFacetReference;
case LanguageConceptSwitch.ParametersDeclaration:
return myConceptParametersDeclaration;
case LanguageConceptSwitch.RelatedFacetReference:
return myConceptRelatedFacetReference;
case LanguageConceptSwitch.ResourceClassifierType:
return myConceptResourceClassifierType;
case LanguageConceptSwitch.ResourceSpecificPropertiesExpression:
return myConceptResourceSpecificPropertiesExpression;
case LanguageConceptSwitch.ResourceTypeDeclaration:
return myConceptResourceTypeDeclaration;
case LanguageConceptSwitch.TargetDeclaration:
return myConceptTargetDeclaration;
case LanguageConceptSwitch.TargetDependency:
return myConceptTargetDependency;
case LanguageConceptSwitch.TargetReferenceExpression:
return myConceptTargetReferenceExpression;
default :
return null;
}
}
