{
  MigrationState msComponent=myProject.getComponent(MigrationState.class);
  final MPSProject mpsProject=myProject.getComponent(MPSProject.class);
  if (msComponent.getMigrationState() == MState.INITIAL) {
    ModelAccess.instance().runWriteActionInCommand(new Runnable(){
      public void run(){
        stageUpgradePersistence(mpsProject);
      }
    }
);
    msComponent.setMigrationState(MState.PERSISTENCE_UPGRADED);
    cleanRestart();
  }
  if (msComponent.getMigrationState() == MState.PERSISTENCE_UPGRADED) {
    ModelAccess.instance().runWriteActionInCommand(new Runnable(){
      public void run(){
        stageFixDependencies(mpsProject);
      }
    }
);
    msComponent.setMigrationState(MState.LANGUAGES_DEPS_CORRECTED);
    cleanRestart();
  }
  if (msComponent.getMigrationState() == MState.LANGUAGES_DEPS_CORRECTED) {
    ModelAccess.instance().runWriteActionInCommand(new Runnable(){
      public void run(){
        stageStubsMigration(mpsProject);
      }
    }
);
    msComponent.setMigrationState(MState.STUBS_CONVERTED);
    cleanRestart();
  }
  if (msComponent.getMigrationState() == MState.STUBS_CONVERTED) {
    ModelAccess.instance().runWriteActionInCommand(new Runnable(){
      public void run(){
        stageLanguageMigrations(mpsProject);
      }
    }
);
    msComponent.setMigrationState(MState.LANGUAGES_MIGRATION);
    cleanRestart();
  }
  if (msComponent.getMigrationState() == MState.LANGUAGES_MIGRATION) {
    ModelAccess.instance().runWriteActionInCommand(new Runnable(){
      public void run(){
        stageRegeneration(mpsProject);
      }
    }
);
    msComponent.setMigrationState(MState.REGENERATION);
  }
  if (msComponent.getMigrationState() == MState.REGENERATION) {
    msComponent.setMigrationState(MState.DONE);
  }
}
