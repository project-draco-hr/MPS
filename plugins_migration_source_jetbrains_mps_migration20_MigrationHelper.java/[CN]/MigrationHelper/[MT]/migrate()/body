{
  final MigrationState msComponent=myProject.getComponent(MigrationState.class);
  final MPSProject mpsProject=myProject.getComponent(MPSProject.class);
  for (  MState state : MState.values()) {
    if (msComponent.getMigrationState() == state) {
      final MState next=MState.values()[state.ordinal() + 1];
      final MigrationStage stage=next.getStage();
      if (stage == null) {
        msComponent.setMigrationState(next);
        continue;
      }
      if (showMessageBefore(stage))       return;
      ProgressManager.getInstance().run(new Modal(myProject,stage.title(),false){
        public void run(        @NotNull ProgressIndicator indicator){
          indicator.setIndeterminate(true);
          final Runnable stageRunnable=new StageExecutor(stage,mpsProject);
          if (stage.needsCommand()) {
            ThreadUtils.runInUIThreadAndWait(new Runnable(){
              public void run(){
                ModelAccess.instance().runWriteActionInCommand(stageRunnable);
              }
            }
);
          }
 else {
            stageRunnable.run();
          }
        }
      }
);
      msComponent.setMigrationState(next);
      if (showMessageAfter(stage))       return;
      checkRestart(stage);
    }
  }
}
