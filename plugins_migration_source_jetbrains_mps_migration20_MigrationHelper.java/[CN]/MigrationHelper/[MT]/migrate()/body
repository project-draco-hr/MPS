{
  final MigrationState msComponent=myProject.getComponent(MigrationState.class);
  final MPSProject mpsProject=myProject.getComponent(MPSProject.class);
  for (  MState state : MState.values()) {
    if (msComponent.getMigrationState() == state) {
      final MState next=MState.values()[state.ordinal() + 1];
      final MigrationStage stage=next.getStage();
      if (stage == null) {
        msComponent.setMigrationState(next);
        continue;
      }
      String mb=stage.messageBefore();
      if (mb != null) {
        Messages.showMessageDialog(mb,stage.title(),Messages.getInformationIcon());
      }
      Runnable stageRunnable=new Runnable(){
        public void run(){
          stage.execute(mpsProject);
          msComponent.setMigrationState(next);
        }
      }
;
      if (stage.needsCommand()) {
        ModelAccess.instance().runWriteActionInCommand(stageRunnable);
      }
 else {
        stageRunnable.run();
      }
      String ma=stage.messageAfter();
      if (ma != null) {
        Messages.showMessageDialog(ma,stage.title(),Messages.getInformationIcon());
      }
      if (stage.needsRestart()) {
        FSRecords.invalidateCaches();
        int res=Messages.showDialog("Refactoring " + stage.title() + " requested IDE restart.\n+"+ "Restart now?","Restart request",new String[]{"Restart","Later"},0,Messages.getQuestionIcon());
        if (res == 0) {
          ApplicationManager.getApplication().restart();
        }
      }
    }
  }
}
