{
  final Editor editor=TestBody.this.initEditor("2278461409091838099","2278461409091838103");
  final EditorComponent editorComponent=(EditorComponent)editor.getCurrentEditorComponent();
{
    int x_vw537p_a0=67;
    int y_vw537p_a0=32;
    Component eventTargetComponent_vw537p_a0=BaseEditorTestBody.processMouseEvent(editorComponent,x_vw537p_a0,y_vw537p_a0,MouseEvent.MOUSE_PRESSED);
    BaseEditorTestBody.processSecondaryMouseEvent(eventTargetComponent_vw537p_a0,x_vw537p_a0,y_vw537p_a0,MouseEvent.MOUSE_RELEASED);
    BaseEditorTestBody.processSecondaryMouseEvent(eventTargetComponent_vw537p_a0,x_vw537p_a0,y_vw537p_a0,MouseEvent.MOUSE_CLICKED);
  }
  final Wrappers._T<Mapper> descendantMapper=new Wrappers._T<Mapper>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      EditorCell selectedCell=editorComponent.getSelectedCell();
      Assert.assertTrue(selectedCell != null);
      DiagramCell diagramCell=CellFinderUtil.findChildByClass(editorComponent.getRootCell(),DiagramCell.class,true);
      descendantMapper.value=diagramCell.getRootMapper().getDescendantMapper(SPropertyOperations.getString(SNodeOperations.cast(TestBody.this.getNodeById("2278461409092334466"),"jetbrains.mps.lang.editor.diagram.testLanguage.structure.OutputPort"),"name"));
    }
  }
);
  Assert.assertTrue(descendantMapper.value != null && descendantMapper.value.getTarget() != null);
  Assert.assertTrue(((View)descendantMapper.value.getTarget()).focused().get());
}
