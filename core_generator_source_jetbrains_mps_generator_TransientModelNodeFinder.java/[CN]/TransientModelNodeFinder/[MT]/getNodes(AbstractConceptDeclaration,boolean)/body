{
  String conceptFqName=NameUtil.nodeFQName(concept);
synchronized (myLock) {
    if (!myInitialized) {
      initCache();
    }
  }
  if (includeInherited) {
    final FlattenIterable<SNode> result=new FlattenIterable<SNode>(new ArrayList<Iterable<SNode>>());
    for (    String d : LanguageHierarchyCache.getInstance().getAllDescendantsOfConcept(conceptFqName)) {
      if (myNodes.containsKey(d)) {
        result.add(myNodes.get(d));
      }
    }
    return result;
  }
 else {
    if (myNodes.containsKey(conceptFqName)) {
      return myNodes.get(conceptFqName);
    }
    return Collections.emptyList();
  }
}
