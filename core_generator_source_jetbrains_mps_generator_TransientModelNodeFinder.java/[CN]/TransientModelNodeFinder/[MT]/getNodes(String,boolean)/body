{
  myModel.getRootNodes().iterator();
  Map<String,List<SNode>> nodes=myNodes;
  if (nodes == null) {
synchronized (myLock) {
      if (myNodes == null) {
        myNodes=initCache();
      }
      nodes=myNodes;
    }
  }
  if (includeInherited) {
    Set<String> allDescendantsOfConcept=ConceptDescendantsCache.getInstance().getDescendants(conceptFqName);
    final List<SNode>[] nodesOfConcept=new List[allDescendantsOfConcept.size()];
    int i=0, cnt=0;
    for (    String d : allDescendantsOfConcept) {
      List<SNode> n=nodes.get(d);
      if (n == null) {
        n=Collections.<SNode>emptyList();
      }
      nodesOfConcept[i++]=n;
      cnt+=n.size();
    }
    final ArrayList<SNode> result=new ArrayList<SNode>(cnt);
    for (i=0; i < nodesOfConcept.length; i++) {
      result.addAll(nodesOfConcept[i]);
    }
    return result;
  }
 else {
    List<SNode> n=nodes.get(conceptFqName);
    if (n != null) {
      return n;
    }
    return Collections.emptyList();
  }
}
