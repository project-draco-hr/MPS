{
  if (myData[offset + len] != '=' || myData[offset] != 't' && myData[offset] != 'm') {
    return;
  }
  if (contains(offset,TARGET_NODE_ID_PREFIX)) {
    offset+=TARGET_NODE_ID_PREFIX.length();
    int end=indexOfClosingQuote(offset);
    if (end > offset) {
      int e=offset;
      while (e < end && myData[e] != '.') {
        e++;
      }
      if (e > offset && e + 1 < end && myData[e] == '.') {
        offset=e + 1;
      }
      String test=WriteHelper.decode(JDOMUtil.unescapeText(new String(myData,offset,end - offset)));
      myConsumer.consume(test);
    }
  }
 else   if (contains(offset,CONCEPT_ID_PREFIX)) {
    offset+=CONCEPT_ID_PREFIX.length();
    int end=indexOfClosingQuote(offset);
    int start=end;
    while (start >= offset && myData[start] != '.')     --start;
    offset=start + 1;
    if (end > offset) {
      String cid=JDOMUtil.unescapeText(new String(myData,offset,end - offset));
      String name=MPSModuleRepository.getInstance().getDebugRegistry().getConceptName(SConceptId.deserialize(cid));
      myConsumer.consume(name);
    }
  }
 else   if (contains(offset,MODEL_UID_PREFIX) && prevWordIs(ModelPersistence.MODEL)) {
    offset+=MODEL_UID_PREFIX.length();
    int end=indexOfClosingQuote(offset);
    if (end > offset) {
      String modelRef=JDOMUtil.unescapeText(new String(myData,offset,end - offset));
      myConsumer.consume(PersistenceFacade.getInstance().createModelReference(modelRef).getModelName());
    }
  }
}
