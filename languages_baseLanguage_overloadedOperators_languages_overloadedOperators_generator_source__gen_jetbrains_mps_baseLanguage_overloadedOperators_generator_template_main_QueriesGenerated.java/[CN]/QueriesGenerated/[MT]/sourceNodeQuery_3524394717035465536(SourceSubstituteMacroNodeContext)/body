{
  new BinaryOperationUtil(SNodeOperations.getModel(_context.getNode())).getNearestOverloaded(_context.getNode(),TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(),"leftExpression",true)),TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(),"rightExpression",true)));
  if ((Boolean)(_context.getNode().getUserObject("reversed"))) {
    return SLinkOperations.getTarget(_context.getNode(),"leftExpression",true);
  }
  return SLinkOperations.getTarget(_context.getNode(),"rightExpression",true);
}
