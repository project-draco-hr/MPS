{
  if (type == ASMPrimitiveType.BOOLEAN) {
    return _quotation_createNode_ol94f8_a0a0a33();
  }
  if (type == ASMPrimitiveType.BYTE) {
    return _quotation_createNode_ol94f8_a0a1a33();
  }
  if (type == ASMPrimitiveType.SHORT) {
    return _quotation_createNode_ol94f8_a0a2a33();
  }
  if (type == ASMPrimitiveType.INT) {
    return _quotation_createNode_ol94f8_a0a3a33();
  }
  if (type == ASMPrimitiveType.LONG) {
    return _quotation_createNode_ol94f8_a0a4a33();
  }
  if (type == ASMPrimitiveType.FLOAT) {
    return _quotation_createNode_ol94f8_a0a5a33();
  }
  if (type == ASMPrimitiveType.DOUBLE) {
    return _quotation_createNode_ol94f8_a0a6a33();
  }
  if (type == ASMPrimitiveType.VOID) {
    return _quotation_createNode_ol94f8_a0a7a33();
  }
  if (type == ASMPrimitiveType.CHAR) {
    return _quotation_createNode_ol94f8_a0a8a33();
  }
  if (type instanceof ASMArrayType) {
    return _quotation_createNode_ol94f8_a0a9a33(getTypeByASMType(((ASMArrayType)type).getElementType(),method,classifier));
  }
  if (type instanceof ASMVarArgType) {
    return _quotation_createNode_ol94f8_a0a01a33(getTypeByASMType(((ASMVarArgType)type).getElementType(),method,classifier));
  }
  if (type instanceof ASMTypeVariable) {
    ASMTypeVariable tv=(ASMTypeVariable)type;
    if (method != null && findTypeVariableDeclaration(method,tv.getName()) != null) {
      return createTypeVariableReference(method,tv.getName());
    }
 else     if (findTypeVariableDeclaration(classifier,tv.getName()) != null) {
      return createTypeVariableReference(classifier,tv.getName());
    }
 else {
      return getTypeByASMType(ASMClassType.OBJECT,method,classifier);
    }
  }
  if (type instanceof ASMClassType) {
    ASMClassType c=(ASMClassType)type;
    SNode classifierType=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType")));
    addClassifierReference(classifierType,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier"),c);
    return classifierType;
  }
  if (type instanceof ASMParameterizedType) {
    ASMParameterizedType pt=(ASMParameterizedType)type;
    SNode rawType=SNodeOperations.cast(getTypeByASMType(pt.getRawType(),method,classifier),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType"));
    addTypeParameters(pt.getActualTypeArguments(),method,classifier,rawType);
    return rawType;
  }
  if (type instanceof ASMExtendsType) {
    ASMExtendsType e=(ASMExtendsType)type;
    if (e.getBound() instanceof ASMClassType) {
      ASMClassType ct=(ASMClassType)e.getBound();
      if (ct.getName().equals("java.lang.Object")) {
        return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110dae5f4a3L,"jetbrains.mps.baseLanguage.structure.WildCardType")));
      }
    }
    return _quotation_createNode_ol94f8_a2a41a33(getTypeByASMType(e.getBound(),method,classifier));
  }
  if (type instanceof ASMSuperType) {
    ASMSuperType e=(ASMSuperType)type;
    return _quotation_createNode_ol94f8_a1a51a33(getTypeByASMType(e.getBound(),method,classifier));
  }
  if (type instanceof ASMUnboundedType) {
    return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110dae5f4a3L,"jetbrains.mps.baseLanguage.structure.WildCardType")));
  }
  if (LOG.isEnabledFor(Level.ERROR)) {
    LOG.error("Can't convert type " + type + " class : ");
  }
  return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506dL,"jetbrains.mps.baseLanguage.structure.Type")));
}
