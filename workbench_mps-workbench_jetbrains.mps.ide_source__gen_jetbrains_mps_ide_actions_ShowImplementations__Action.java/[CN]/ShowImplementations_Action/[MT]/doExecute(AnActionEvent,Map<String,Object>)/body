{
  final List<SNode> nodes=new ArrayList<SNode>();
  ListSequence.fromList(nodes).addElement(((SNode)MapSequence.fromMap(_params).get("node")));
  SearchResults<SNode> results;
  if (SNodeOperations.isInstanceOf(((SNode)MapSequence.fromMap(_params).get("node")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface"))) {
    results=FindUtils.getSearchResults(new EmptyProgressMonitor(),((SNode)MapSequence.fromMap(_params).get("node")),GlobalScope.getInstance(),"jetbrains.mps.baseLanguage.findUsages.ImplementingClasses_Finder");
  }
 else   if (SNodeOperations.isInstanceOf(((SNode)MapSequence.fromMap(_params).get("node")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")) && SPropertyOperations.getBoolean(SNodeOperations.cast(((SNode)MapSequence.fromMap(_params).get("node")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")),MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0xfa5cee6dfaL,"abstractClass"))) {
    results=FindUtils.getSearchResults(new EmptyProgressMonitor(),((SNode)MapSequence.fromMap(_params).get("node")),GlobalScope.getInstance(),"jetbrains.mps.baseLanguage.findUsages.DerivedClasses_Finder");
  }
 else   if (SNodeOperations.isInstanceOf(((SNode)MapSequence.fromMap(_params).get("node")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration")) && SNodeOperations.isInstanceOf(SNodeOperations.getParent(((SNode)MapSequence.fromMap(_params).get("node"))),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface"))) {
    results=FindUtils.getSearchResults(new EmptyProgressMonitor(),((SNode)MapSequence.fromMap(_params).get("node")),GlobalScope.getInstance(),"jetbrains.mps.baseLanguage.findUsages.InterfaceMethodImplementations_Finder");
  }
 else   if (SNodeOperations.isInstanceOf(((SNode)MapSequence.fromMap(_params).get("node")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration")) && SNodeOperations.isInstanceOf(SNodeOperations.getParent(((SNode)MapSequence.fromMap(_params).get("node"))),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"))) {
    results=FindUtils.getSearchResults(new EmptyProgressMonitor(),((SNode)MapSequence.fromMap(_params).get("node")),GlobalScope.getInstance(),"jetbrains.mps.baseLanguage.findUsages.DerivedMethods_Finder");
  }
 else {
    return;
  }
  for (  SearchResult<SNode> searchResult : results.getSearchResults()) {
    SNode foundNode=searchResult.getObject();
    if ((foundNode != null)) {
      ListSequence.fromList(nodes).addElement(foundNode);
    }
  }
  final ModelAccess modelAccess=((MPSProject)MapSequence.fromMap(_params).get("project")).getRepository().getModelAccess();
  modelAccess.executeCommandInEDT(new Runnable(){
    public void run(){
      String title="Definition of " + ((SNode)MapSequence.fromMap(_params).get("node")).getPresentation();
      final ShowImplementationComponent component=new ShowImplementationComponent(nodes,((MPSProject)MapSequence.fromMap(_params).get("project")));
      JBPopup popup=JBPopupFactory.getInstance().createComponentPopupBuilder(component,component.getPreferredFocusableComponent()).setRequestFocus(true).setProject(ProjectHelper.toIdeaProject(((MPSProject)MapSequence.fromMap(_params).get("project")))).setMovable(true).setResizable(true).setTitle(title).setCancelCallback(new Computable<Boolean>(){
        @Override public Boolean compute(){
          modelAccess.executeCommandInEDT(new Runnable(){
            public void run(){
              component.dispose();
            }
          }
);
          return Boolean.TRUE;
        }
      }
).createPopup();
      popup.show(new RelativePoint(((EditorComponent)MapSequence.fromMap(_params).get("editorComponent")),new Point(((EditorCell)MapSequence.fromMap(_params).get("cell")).getX(),((EditorCell)MapSequence.fromMap(_params).get("cell")).getY())));
      component.getPreferredFocusableComponent().setRequestFocusEnabled(true);
      component.setPopup(popup);
    }
  }
);
}
