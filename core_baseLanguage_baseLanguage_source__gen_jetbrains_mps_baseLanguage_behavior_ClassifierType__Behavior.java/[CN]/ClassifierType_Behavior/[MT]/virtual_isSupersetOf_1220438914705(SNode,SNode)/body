{
  if (SNodeOperations.isInstanceOf(t,"jetbrains.mps.baseLanguage.structure.WildCardType")) {
    do {
      SNode matchedNode_hz3823_a0a0h=thisNode;
{
        boolean matches_hz3823_a0a0a7=false;
        GeneratedMatchingPattern matchingPattern=new ClassifierType_Behavior.Pattern_hz3823_a0a1a1a0a0a8();
        matches_hz3823_a0a0a7=matchingPattern.match(matchedNode_hz3823_a0a0h);
        if (matches_hz3823_a0a0a7) {
          return true;
        }
      }
      return false;
    }
 while (false);
  }
{
    GeneratedMatchingPattern pattern_hz3823_b0h=new ClassifierType_Behavior.Pattern_hz3823_a0a0a1a8(SLinkOperations.getTarget(thisNode,"classifier",false));
    SNode coercedNode_hz3823_b0h=TypeChecker.getInstance().getRuntimeSupport().coerce_(t,pattern_hz3823_b0h);
    if (coercedNode_hz3823_b0h != null) {
{
        SNode typeParam;
        SNode myParam;
        Iterator<SNode> typeParam_iterator=ListSequence.fromList(((List<SNode>)pattern_hz3823_b0h.getFieldValue("PatternVar_l"))).iterator();
        Iterator<SNode> myParam_iterator=ListSequence.fromList(SLinkOperations.getTargets(thisNode,"parameter",true)).iterator();
        while (true) {
          if (!(typeParam_iterator.hasNext())) {
            break;
          }
          if (!(myParam_iterator.hasNext())) {
            break;
          }
          typeParam=typeParam_iterator.next();
          myParam=myParam_iterator.next();
          if (SNodeOperations.isInstanceOf(myParam,"jetbrains.mps.baseLanguage.structure.WildCardType") || SNodeOperations.isInstanceOf(myParam,"jetbrains.mps.baseLanguage.structure.UpperBoundType")) {
            if (!(Type_Behavior.call_isSupersetOf_1220438914705(myParam,typeParam))) {
              return false;
            }
          }
 else {
            if (!(MatchingUtil.matchNodes(myParam,typeParam))) {
              return false;
            }
          }
        }
      }
      return true;
    }
 else {
    }
  }
  return Type_Behavior.callSuper_isSupersetOf_1220438914705(thisNode,"jetbrains.mps.baseLanguage.structure.ClassifierType",t);
}
