{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_1htk8d_a0s.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return myConceptDebuggedType;
      }
    break;
case 1:
  if (true) {
    return myConceptDoNotTransformAnnotation;
  }
break;
case 2:
if (true) {
return myConceptDownCastToLowLevel;
}
break;
case 3:
if (true) {
return myConceptEvaluator;
}
break;
case 4:
if (true) {
return myConceptEvaluatorConcept;
}
break;
case 5:
if (true) {
return myConceptEvaluatorsSuperMethodCall;
}
break;
case 6:
if (true) {
return myConceptEvaluatorsThisExpression;
}
break;
case 7:
if (true) {
return myConceptGenerationHelperAnnotation;
}
break;
case 8:
if (true) {
return myConceptIEvaluatorConcept;
}
break;
case 9:
if (true) {
return myConceptLowLevelVariable;
}
break;
case 10:
if (true) {
return myConceptLowLevelVariableReference;
}
break;
case 11:
if (true) {
return myConceptToEvaluateAnnotation;
}
break;
case 12:
if (true) {
return myConceptUnitNode;
}
break;
case 13:
if (true) {
return myConceptUnprocessedAnnotation;
}
break;
default :
}
}
return null;
}
