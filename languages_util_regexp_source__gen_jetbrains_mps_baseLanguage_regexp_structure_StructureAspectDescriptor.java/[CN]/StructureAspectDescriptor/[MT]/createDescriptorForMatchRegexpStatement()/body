{
  ConceptDescriptorBuilder2 b=new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.regexp","MatchRegexpStatement",0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x11176652f14L);
  b.class_(false,false,false);
  b.super_("jetbrains.mps.baseLanguage.structure.Statement",0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b215L);
  b.parent(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1117ecbc07aL);
  b.origin("r:00000000-0000-4000-0000-011c89590518(jetbrains.mps.baseLanguage.regexp.structure)/1174512414484");
  b.aggregate("body",0x1117665624aL).target(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b200L).optional(false).ordered(true).multiple(false).origin("1174512427594").done();
  b.aggregate("expr",0x11176678c5eL).target(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1174512569438").done();
  b.kind(ConceptKind.NORMAL,StaticScope.NONE);
  b.alias("if (expr matches regexp) {");
  return b.create();
}
