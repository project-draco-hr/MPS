{
  return Arrays.asList(myConceptAtLeastNTimesRegexp,myConceptBinaryRegexp,myConceptCharacterSymbolClassPart,myConceptDotRegexp,myConceptFindMatchExpression,myConceptFindMatchStatement,myConceptForEachMatchStatement,myConceptFromNToMTimesRegexp,myConceptInlineRegexpExpression,myConceptIntersectionSymbolClassPart,myConceptIntervalSymbolClassPart,myConceptLazyPlusRegexp,myConceptLazyQuestionRegexp,myConceptLazyStarRegexp,myConceptLineEndRegexp,myConceptLineStartRegexp,myConceptLiteralReplacement,myConceptLookRegexp,myConceptMatchParensRegexp,myConceptMatchRegexpExpression,myConceptMatchRegexpOperation,myConceptMatchRegexpStatement,myConceptMatchVariableReference,myConceptMatchVariableReferenceRegexp,myConceptMatchVariableReferenceReplacement,myConceptNTimesRegexp,myConceptNegativeLookAheadRegexp,myConceptNegativeLookBehindRegexp,myConceptNegativeSymbolClassRegexp,myConceptOrRegexp,myConceptParensRegexp,myConceptPlusRegexp,myConceptPositiveLookAheadRegexp,myConceptPositiveLookBehindRegexp,myConceptPositiveSymbolClassRegexp,myConceptPredefinedSymbolClassDeclaration,myConceptPredefinedSymbolClassRegexp,myConceptPredefinedSymbolClassSymbolClassPart,myConceptPredefinedSymbolClasses,myConceptQuestionRegexp,myConceptRegexp,myConceptRegexpDeclaration,myConceptRegexpDeclarationReferenceRegexp,myConceptRegexpExpression,myConceptRegexpUsingConstruction,myConceptRegexps,myConceptReplaceBlock,myConceptReplaceRegexpOperation,myConceptReplaceWithRegexpExpression,myConceptReplaceWithRegexpOperation,myConceptReplacement,myConceptSeqRegexp,myConceptSplitExpression,myConceptSplitOperation,myConceptStarRegexp,myConceptStringLiteralRegexp,myConceptSymbolClassPart,myConceptSymbolClassRegexp,myConceptSymbolClassRegexpAndPart,myConceptUnaryRegexp,myConceptUnicodeCharacterRegexp);
}
