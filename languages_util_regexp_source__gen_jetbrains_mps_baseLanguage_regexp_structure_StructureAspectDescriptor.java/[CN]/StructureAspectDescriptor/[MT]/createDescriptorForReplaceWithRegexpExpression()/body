{
  ConceptDescriptorBuilder2 b=new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.regexp","ReplaceWithRegexpExpression",0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1117ef3f72dL);
  b.class_(false,false,false);
  b.super_("jetbrains.mps.baseLanguage.structure.Expression",0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506fL);
  b.parent(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1117ecbc07aL);
  b.parent(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x19796fa16a19888bL);
  b.origin("r:00000000-0000-4000-0000-011c89590518(jetbrains.mps.baseLanguage.regexp.structure)/1174655989549");
  b.aggregate("expr",0x1117ef5b26bL).target(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("1174656103019").done();
  b.aggregate("replaceBlock",0x1117ef94e0cL).target(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1117ef80054L).optional(false).ordered(true).multiple(false).origin("1174656339468").done();
  b.kind(ConceptKind.NORMAL,StaticScope.NONE);
  b.alias("replace with regexp");
  return b.create();
}
