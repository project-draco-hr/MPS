{
  ConceptDescriptorBuilder2 b=new ConceptDescriptorBuilder2("jetbrains.mps.baseLanguage.regexp","InlineRegexpExpression",0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1117648961dL);
  b.class_(false,false,false);
  b.super_("jetbrains.mps.baseLanguage.regexp.structure.RegexpExpression",0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x1118ea37105L);
  b.origin("r:00000000-0000-4000-0000-011c89590518(jetbrains.mps.baseLanguage.regexp.structure)/1174510540317");
  b.prop("dotAll",0x1119cedcf38L,"1175158902584");
  b.prop("multiLine",0x1119ceddfe3L,"1175158906851");
  b.prop("caseInsensitive",0x1119cf15020L,"1175159132192");
  b.aggregate("regexp",0x11176490e08L).target(0xdaafa647f1f74b0bL,0xb09669cd7c8408c0L,0x11174a06efdL).optional(false).ordered(true).multiple(false).origin("1174510571016").done();
  b.kind(ConceptKind.NORMAL,StaticScope.NONE);
  b.alias("/regexp/");
  return b.create();
}
