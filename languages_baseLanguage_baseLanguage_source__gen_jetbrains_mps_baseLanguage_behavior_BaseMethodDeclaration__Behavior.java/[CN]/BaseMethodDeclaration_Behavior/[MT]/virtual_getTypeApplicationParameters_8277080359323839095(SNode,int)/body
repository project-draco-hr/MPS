{
  List<SNode> result=new ArrayList<SNode>();
  ListSequence.fromList(result).addSequence(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"parameter",true)).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SLinkOperations.getTarget(it,"type",true);
    }
  }
));
  if (SNodeOperations.isInstanceOf(ListSequence.fromList(result).last(),"jetbrains.mps.baseLanguage.structure.VariableArityType")) {
    int formalParams=ListSequence.fromList(result).count();
    SNode last=ListSequence.fromList(result).removeLastElement();
    if (actualArgs > formalParams) {
      while (actualArgs > ListSequence.fromList(result).count()) {
        ListSequence.fromList(result).addElement(SNodeOperations.copyNode(SLinkOperations.getTarget(SNodeOperations.cast(last,"jetbrains.mps.baseLanguage.structure.VariableArityType"),"componentType",true)));
      }
    }
 else     if (actualArgs == formalParams) {
      ListSequence.fromList(result).addElement(new BaseMethodDeclaration_Behavior.QuotationClass_tq0gdw_a0a0b0a3a3a62().createNode(SNodeOperations.copyNode(SLinkOperations.getTarget(SNodeOperations.cast(last,"jetbrains.mps.baseLanguage.structure.VariableArityType"),"componentType",true)),SNodeOperations.copyNode(SLinkOperations.getTarget(SNodeOperations.cast(last,"jetbrains.mps.baseLanguage.structure.VariableArityType"),"componentType",true))));
    }
  }
  return result;
}
