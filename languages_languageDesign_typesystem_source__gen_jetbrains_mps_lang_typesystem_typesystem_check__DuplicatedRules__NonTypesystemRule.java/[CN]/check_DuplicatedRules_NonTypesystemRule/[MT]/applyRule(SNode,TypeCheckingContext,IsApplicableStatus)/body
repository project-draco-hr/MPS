{
  final String name=SPropertyOperations.getString(abstractRule,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
  if (ListSequence.fromList(SModelOperations.roots(SNodeOperations.getModel(abstractRule),MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x1117e7b5c73L,"jetbrains.mps.lang.typesystem.structure.AbstractRule"))).any(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return it != abstractRule && SPropertyOperations.hasValue(it,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),name);
    }
  }
)) {
{
      MessageTarget errorTarget=new NodeMessageTarget();
      errorTarget=new PropertyMessageTarget("name");
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(abstractRule,"Duplicated name of the typesystem rule","r:00000000-0000-4000-0000-011c895902b1(jetbrains.mps.lang.typesystem.typesystem)","8433157989202147284",null,errorTarget);
    }
  }
}
