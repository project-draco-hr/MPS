{
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0c,descriptor.getConceptFqName())) {
case 0:
    return Collections.<ConceptEditor>singletonList(new AbstractConceptReference_Editor());
case 1:
  return Collections.<ConceptEditor>singletonList(new BinaryOperationConcept_Editor());
case 2:
return Collections.<ConceptEditor>singletonList(new BlockBodyPart_Editor());
case 3:
return Collections.<ConceptEditor>singletonList(new BlockConcept_Editor());
case 4:
return Collections.<ConceptEditor>singletonList(new ConceptContainer_Editor());
case 5:
return Collections.<ConceptEditor>singletonList(new ConcreteChildPart_Editor());
case 6:
return Collections.<ConceptEditor>singletonList(new ConcretePropertyPart_Editor());
case 7:
return Collections.<ConceptEditor>singletonList(new ConcreteReferencePart_Editor());
case 8:
return Collections.<ConceptEditor>singletonList(new ConstantLinePart_Editor());
case 9:
return Collections.<ConceptEditor>singletonList(new ExpressionConcept_Editor());
case 10:
return Collections.<ConceptEditor>singletonList(new IndentLinePart_Editor());
case 11:
return Collections.<ConceptEditor>singletonList(new Line_Editor());
case 12:
return Collections.<ConceptEditor>singletonList(new LineList_Editor());
case 13:
return Collections.<ConceptEditor>singletonList(new MPSLiteConceptDeclaration_Editor());
case 14:
return Collections.<ConceptEditor>singletonList(new NamePropertyNamePart_Editor());
case 15:
return Collections.<ConceptEditor>singletonList(new OptionalPart_Editor());
case 16:
return Collections.<ConceptEditor>singletonList(new StatementConcept_Editor());
case 17:
return Collections.<ConceptEditor>singletonList(new TypePart_Editor());
case 18:
return Collections.<ConceptEditor>singletonList(new VariableConcept_Editor());
default :
}
return Collections.emptyList();
}
