{
  DeploymentDescriptor descriptor;
  try {
    Document document=JDOMUtil.loadDocument(file);
    final Element rootElement=((Element)document.getRootElement());
    descriptor=new _FunctionTypes._return_P0_E0<DeploymentDescriptor>(){
      public DeploymentDescriptor invoke(){
        final DeploymentDescriptor result_wu2j1h_a0a0d0c0a=new DeploymentDescriptor();
        final String result_wu2j1h_a0a0a0d0c0a=rootElement.getAttributeValue("namespace");
        result_wu2j1h_a0a0d0c0a.setNamespace(result_wu2j1h_a0a0a0d0c0a);
        final String result_wu2j1h_a1a0a0d0c0a=rootElement.getAttributeValue("uuid");
        result_wu2j1h_a0a0d0c0a.setUUID(result_wu2j1h_a1a0a0d0c0a);
        final String result_wu2j1h_a2a0a0d0c0a=rootElement.getAttributeValue("type");
        result_wu2j1h_a0a0d0c0a.setType(result_wu2j1h_a2a0a0d0c0a);
        for (        Element a : ListSequence.<Element>fromList(AttributeUtils.elementChildren(rootElement,"dependencies"))) {
          for (          final Element module : ListSequence.<Element>fromList(AttributeUtils.elementChildren(a,"module"))) {
            result_wu2j1h_a0a0d0c0a.getDependencies().add(new _FunctionTypes._return_P0_E0<Dependency>(){
              public Dependency invoke(){
                final Dependency result_wu2j1h_a0a0a0a0a4a0a0d0c0a=new Dependency();
                final ModuleReference result_wu2j1h_a0a0a0a0a0a4a0a0d0c0a=ModuleReference.fromString(module.getAttributeValue("ref"));
                result_wu2j1h_a0a0a0a0a4a0a0d0c0a.setModuleRef(result_wu2j1h_a0a0a0a0a0a4a0a0d0c0a);
                final boolean result_wu2j1h_a1a0a0a0a0a4a0a0d0c0a=false;
                result_wu2j1h_a0a0a0a0a4a0a0d0c0a.setReexport(result_wu2j1h_a1a0a0a0a0a4a0a0d0c0a);
                return result_wu2j1h_a0a0a0a0a4a0a0d0c0a;
              }
            }
.invoke());
          }
        }
        for (        Element b : ListSequence.<Element>fromList(AttributeUtils.elementChildren(rootElement,"runtime"))) {
          result_wu2j1h_a0a0d0c0a.getRuntimeJars().add(b.getAttributeValue("jar"));
        }
        for (        Element b : ListSequence.<Element>fromList(AttributeUtils.elementChildren(rootElement,"library"))) {
          result_wu2j1h_a0a0d0c0a.getLibraries().add(b.getAttributeValue("jar"));
        }
        if (ListSequence.<Element>fromList(AttributeUtils.elementChildren(rootElement,"sources")).isNotEmpty()) {
          Element t=ListSequence.<Element>fromList(AttributeUtils.elementChildren(rootElement,"sources")).first();
          final String result_wu2j1h_a2a9a0a0d0c0a=t.getAttributeValue("jar");
          result_wu2j1h_a0a0d0c0a.setSourcesJar(result_wu2j1h_a2a9a0a0d0c0a);
          final String result_wu2j1h_a3a9a0a0d0c0a=t.getAttributeValue("descriptor");
          result_wu2j1h_a0a0d0c0a.setDescriptorFile(result_wu2j1h_a3a9a0a0d0c0a);
        }
        return result_wu2j1h_a0a0d0c0a;
      }
    }
.invoke();
  }
 catch (  Exception e) {
    throw new ModuleReadException(e);
  }
  ModuleDescriptorPersistence.setTimestamp(descriptor,file);
  return descriptor;
}
