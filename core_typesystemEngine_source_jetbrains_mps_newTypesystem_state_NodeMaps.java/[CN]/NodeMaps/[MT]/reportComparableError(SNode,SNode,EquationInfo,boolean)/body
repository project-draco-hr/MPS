{
  IErrorReporter errorReporter;
  String errorString=equationInfo.getErrorString();
  String ruleModel=equationInfo.getRuleModel();
  String ruleId=equationInfo.getRuleId();
  SNode nodeWithError=equationInfo.getNodeWithError();
  if (errorString == null) {
    String strongString=isWeak ? "" : " strongly";
    errorReporter=new EquationErrorReporterNew(nodeWithError,myState,"type ",subType," is not" + strongString + " comparable with ",superType,"",ruleModel,ruleId);
  }
 else {
    errorReporter=new SimpleErrorReporter(nodeWithError,errorString,ruleModel,ruleId);
  }
  for (  QuickFixProvider provider : equationInfo.getIntentionProviders()) {
    errorReporter.addIntentionProvider(provider);
  }
  setAdditionalRulesIds(equationInfo,errorReporter);
  myState.getTypeCheckingContext().reportMessage(nodeWithError,errorReporter);
}
