{
  String namespace=NameUtil.nodeLanguageNamespace(node);
  if (namespace.equals("jetbrains.mps.bootstrap.structureLanguage") && propertyName.equals(BaseConcept.NAME)) {
    return null;
  }
  if (namespace.equals("jetbrains.mps.projectLanguage")) {
    return null;
  }
  if (node instanceof RuntimeTypeVariable) {
    return null;
  }
  if (!myAddedLanguageNamespaces.containsKey(namespace)) {
    return null;
  }
  ConceptDeclaration concept=SModelUtil.getConceptDeclaration(node,GlobalScope.getInstance());
  while (concept != null) {
    String conceptFqName=NameUtil.nodeFQName(concept);
    IModelConstraints result;
    if (isSetter) {
      result=myNodePropertySettersMap.get(conceptFqName + "#" + propertyName);
    }
 else {
      result=myNodePropertyGettersMap.get(conceptFqName + "#" + propertyName);
    }
    if (result != null)     return result;
    concept=concept.getExtends();
  }
  return null;
}
