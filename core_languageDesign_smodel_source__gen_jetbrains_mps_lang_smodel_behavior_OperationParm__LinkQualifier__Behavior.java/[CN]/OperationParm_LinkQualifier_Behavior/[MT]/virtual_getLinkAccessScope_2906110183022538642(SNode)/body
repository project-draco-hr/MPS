{
  final boolean acceptAggregations=SNodeOperations.isInstanceOf(OperationParm_LinkQualifier_Behavior.call_getOperation_5815925154349134240(thisNode),"jetbrains.mps.lang.smodel.structure.Node_GetChildrenOperation");
  return ListSequence.<SNode>fromList(AbstractConceptDeclaration_Behavior.call_getLinkDeclarations_1213877394480(SLinkOperations.getTarget(TypeChecker.getInstance().getRuntimeSupport().coerce_(TypeChecker.getInstance().getTypeOf(IOperation_Behavior.call_getOperand_1213877410070(OperationParm_LinkQualifier_Behavior.call_getOperation_5815925154349134240(thisNode))),HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.lang.smodel.structure.SNodeType"),true),"concept",false))).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (acceptAggregations ? SPropertyOperations.hasValue(it,"metaClass","aggregation","reference") : SPropertyOperations.hasValue(it,"metaClass","reference","reference"));
    }
  }
);
}
