{
  SNode result=null;
  Set<SNode> _parameterValues_129834374=new HashSet<SNode>();
  SNode quotedNode_1=null;
  SNode quotedNode_2=null;
  SNode quotedNode_3=null;
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  SNode quotedNode_7=null;
  SNode quotedNode_8=null;
  SNode quotedNode_9=null;
  SNode quotedNode_10=null;
  SNode quotedNode_11=null;
  SNode quotedNode_12=null;
  SNode quotedNode_13=null;
{
    quotedNode_1=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.CastExpression",null,GlobalScope.getInstance(),false);
    SNode quotedNode1_14=quotedNode_1;
{
      quotedNode_2=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",null,GlobalScope.getInstance(),false);
      SNode quotedNode1_15=quotedNode_2;
      quotedNode1_15.addReference(SReference.create("classifier",quotedNode1_15,SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"),SNodeId.fromString("~String")));
      quotedNode_1.addChild("type",quotedNode1_15);
    }
{
      quotedNode_3=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguageInternal.structure.InternalPartialInstanceMethodCall",null,GlobalScope.getInstance(),false);
      SNode quotedNode1_16=quotedNode_3;
      quotedNode1_16.setProperty("methodName","getJavaValue");
{
        quotedNode_4=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",null,GlobalScope.getInstance(),false);
        SNode quotedNode1_17=quotedNode_4;
        quotedNode1_17.addReference(SReference.create("classifier",quotedNode1_17,SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"),SNodeId.fromString("~Object")));
        quotedNode_3.addChild("returnType",quotedNode1_17);
      }
{
        quotedNode_5=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguageInternal.structure.InternalPartialInstanceMethodCall",null,GlobalScope.getInstance(),false);
        SNode quotedNode1_18=quotedNode_5;
        quotedNode1_18.setProperty("methodName","invokeMethod");
{
          quotedNode_6=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",null,GlobalScope.getInstance(),false);
          SNode quotedNode1_19=quotedNode_6;
          quotedNode1_19.addReference(SReference.create("classifier",quotedNode1_19,SModelReference.fromString("f:java_stub#jetbrains.mps.debug.evaluation.proxies(jetbrains.mps.debug.evaluation.proxies@java_stub)"),SNodeId.fromString("~IValueProxy")));
          quotedNode_5.addChild("returnType",quotedNode1_19);
        }
{
          quotedNode_7=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression",null,GlobalScope.getInstance(),false);
          SNode quotedNode1_20=quotedNode_7;
{
            quotedNode_10=(SNode)parameter_24;
            SNode quotedNode1_21;
            if (_parameterValues_129834374.contains(quotedNode_10)) {
              quotedNode1_21=CopyUtil.copy(quotedNode_10);
            }
 else {
              _parameterValues_129834374.add(quotedNode_10);
              quotedNode1_21=quotedNode_10;
            }
            if (quotedNode1_21 != null) {
              quotedNode_7.addChild("expression",HUtil.copyIfNecessary(quotedNode1_21));
            }
          }
          quotedNode_5.addChild("instance",quotedNode1_20);
        }
{
          quotedNode_8=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral",null,GlobalScope.getInstance(),false);
          SNode quotedNode1_22=quotedNode_8;
          quotedNode1_22.setProperty("value","toString");
          quotedNode_5.addChild("actualArgument",quotedNode1_22);
        }
{
          quotedNode_9=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral",null,GlobalScope.getInstance(),false);
          SNode quotedNode1_23=quotedNode_9;
          quotedNode1_23.setProperty("value","()Ljava/lang/String;");
          quotedNode_5.addChild("actualArgument",quotedNode1_23);
        }
        quotedNode_3.addChild("instance",quotedNode1_18);
      }
      quotedNode_1.addChild("expression",quotedNode1_16);
    }
    result=quotedNode1_14;
  }
  return result;
}
