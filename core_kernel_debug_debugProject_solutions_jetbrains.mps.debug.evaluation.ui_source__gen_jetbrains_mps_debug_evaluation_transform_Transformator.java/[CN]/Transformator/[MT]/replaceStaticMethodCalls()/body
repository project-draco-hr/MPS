{
  for (  SNode staticMethodCall : ListSequence.fromList(SNodeOperations.getDescendants(myWhatToEvaluate,"jetbrains.mps.baseLanguage.structure.StaticMethodCall",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return TransformationUtil.isUnprocessed(it);
    }
  }
)) {
    TransformationUtil.replaceStaticMethodCall(staticMethodCall,TransformationUtil.createClassFqNameNode(myModel,SLinkOperations.getTarget(staticMethodCall,"classConcept",false)),SPropertyOperations.getString(SLinkOperations.getTarget(staticMethodCall,"baseMethodDeclaration",false),"name"),TransformationUtil.getJniSignature(SLinkOperations.getTarget(staticMethodCall,"baseMethodDeclaration",false)),SLinkOperations.getTarget(SLinkOperations.getTarget(staticMethodCall,"baseMethodDeclaration",false),"returnType",true),SLinkOperations.getTargets(staticMethodCall,"actualArgument",true));
    return false;
  }
  return true;
}
