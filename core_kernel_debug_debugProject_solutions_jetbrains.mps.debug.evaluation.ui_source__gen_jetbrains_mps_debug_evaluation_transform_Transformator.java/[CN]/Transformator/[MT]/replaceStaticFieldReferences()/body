{
  for (  SNode staticFieldReference : ListSequence.fromList(SNodeOperations.getDescendants(myWhatToEvaluate,"jetbrains.mps.baseLanguage.structure.StaticFieldReference",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return TransformationUtil.isUnprocessed(it);
    }
  }
)) {
    TransformationUtil.replaceStaticFieldReference(staticFieldReference,SPropertyOperations.getString(SLinkOperations.getTarget(staticFieldReference,"variableDeclaration",false),"name"),SLinkOperations.getTarget(SLinkOperations.getTarget(staticFieldReference,"variableDeclaration",false),"type",true),TransformationUtil.createClassFqNameNode(myModel,SNodeOperations.cast(SLinkOperations.getTarget(staticFieldReference,"classifier",false),"jetbrains.mps.baseLanguage.structure.ClassConcept")));
    return false;
  }
  return true;
}
