{
  for (  SNode assignment : ListSequence.fromList(SNodeOperations.getDescendants(myWhatToEvaluate,"jetbrains.mps.baseLanguage.structure.AssignmentExpression",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return TransformationUtil.isUnprocessed(it);
    }
  }
)) {
    SNode variableDeclaration=RulesFunctions_BaseLanguage.getVariableDeclaration(SLinkOperations.getTarget(assignment,"lValue",true));
    if (!(TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(variableDeclaration),new Transformator.QuotationClass_rxfadt_a1a0a0b0c0m().createNode())) && TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(assignment,"rValue",true)),new Transformator.QuotationClass_rxfadt_a1a0a1a2a21().createNode())) {
      SLinkOperations.setTarget(variableDeclaration,"type",new Transformator.QuotationClass_rxfadt_a0a0a0b0c0m().createNode(TransformationUtil.getValueProxyTypeFromType(SLinkOperations.getTarget(variableDeclaration,"type",true))),true);
      return false;
    }
 else     if (TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(variableDeclaration),new Transformator.QuotationClass_rxfadt_a1a0a0b0c0m_0().createNode()) && !(TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(assignment,"rValue",true)),new Transformator.QuotationClass_rxfadt_a1a0a0a1a2a21().createNode()))) {
      SLinkOperations.setTarget(assignment,"rValue",new Transformator.QuotationClass_rxfadt_a0a0a0a1a2a21().createNode(SLinkOperations.getTarget(assignment,"rValue",true)),true);
      return false;
    }
 else     if (TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(variableDeclaration),new Transformator.QuotationClass_rxfadt_a1a0a1b0c0m().createNode()) && TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(assignment,"rValue",true)),new Transformator.QuotationClass_rxfadt_a1a0a1b0c0m_0().createNode())) {
      SLinkOperations.setTarget(assignment,"rValue",new Transformator.QuotationClass_rxfadt_a0a0a0b1a2a21().createNode(SLinkOperations.getTarget(assignment,"rValue",true)),true);
      return false;
    }
 else     if (TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(variableDeclaration),new Transformator.QuotationClass_rxfadt_a1a0a2b0c0m().createNode()) && TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(assignment,"rValue",true)),new Transformator.QuotationClass_rxfadt_a1a0a2b0c0m_0().createNode())) {
      SLinkOperations.setTarget(assignment,"rValue",new Transformator.QuotationClass_rxfadt_a0a0a0c1a2a21().createNode(SLinkOperations.getTarget(assignment,"rValue",true)),true);
      return false;
    }
  }
  return true;
}
