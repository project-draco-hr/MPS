{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case 0:
    return props_AbsractMake;
case 1:
  return props_ActionCallDeclaredParameter;
case 2:
return props_ActionCallGlobalParameter;
case 3:
return props_ActionCallParameter;
case 4:
return props_CallActionExpression;
case 5:
return props_Clean;
case 6:
return props_ClickableGenerator;
case 7:
return props_GlobalScope;
case 8:
return props_GlobalStatisticTarget;
case 9:
return props_INodeSetReference;
case 10:
return props_IStatisticsTarget;
case 11:
return props_Make;
case 12:
return props_ModelProperties;
case 13:
return props_ModelReference;
case 14:
return props_ModelStatisticsTarget;
case 15:
return props_ModuleProperties;
case 16:
return props_NodeReference;
case 17:
return props_OfAspectOperation;
case 18:
return props_ProjectStatisticsTarget;
case 19:
return props_RebuildProjectCommand;
case 20:
return props_RemoveGenSources;
case 21:
return props_ShowBrokenReferences;
case 22:
return props_ShowExpression;
case 23:
return props_ShowGenPlan;
case 24:
return props_StatCommand;
case 25:
return props_SubtreeStatisticsTarget;
case 26:
return props_UnloadModelsCommand;
case 27:
return props_WithDependencies;
}
throw new IllegalStateException("Unknown concept " + c);
}
