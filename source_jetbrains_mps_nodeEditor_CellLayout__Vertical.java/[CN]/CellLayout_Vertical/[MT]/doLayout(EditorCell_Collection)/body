{
  int width=0;
  int height=0;
  final int x=editorCells.getX();
  final int y=editorCells.getY();
  if (editorCells.isDrawBrackets()) {
    width+=EditorCell_Collection.BRACKET_WIDTH;
  }
  for (Iterator iterator=editorCells.iterator(); iterator.hasNext(); ) {
    EditorCell editorCell=(EditorCell)iterator.next();
    if (editorCells.isDrawBrackets()) {
      editorCell.setX(x + EditorCell_Collection.BRACKET_WIDTH);
    }
 else {
      editorCell.setX(x);
    }
    editorCell.setY(y + height);
    editorCell.relayout();
    int cellWidth=editorCell.getWidth();
    int cellHeight=editorCell.getHeight();
    width=Math.max(width,cellWidth);
    height+=cellHeight;
  }
  if (editorCells.isDrawBrackets()) {
    width+=EditorCell_Collection.BRACKET_WIDTH;
  }
  if (isGridLayout) {
    int x0=x;
    for (int i=0; ; i++) {
      int maxWidth=-1;
      for (Iterator iterator=editorCells.iterator(); iterator.hasNext(); ) {
        EditorCell editorCell=(EditorCell)iterator.next();
        if (editorCell instanceof EditorCell_Collection) {
          EditorCell_Collection editorCellCollection=(EditorCell_Collection)editorCell;
          CellLayout cellLayout=editorCellCollection.getCellLayout();
          if (cellLayout instanceof CellLayout_Horizontal && i < editorCellCollection.getChildCount()) {
            EditorCell cell=editorCellCollection.getChildAt(i);
            if (cell.getWidth() > maxWidth) {
              maxWidth=cell.getWidth();
            }
          }
        }
      }
      for (Iterator iterator=editorCells.iterator(); iterator.hasNext(); ) {
        EditorCell editorCell=(EditorCell)iterator.next();
        if (editorCell instanceof EditorCell_Collection) {
          EditorCell_Collection editorCellCollection=(EditorCell_Collection)editorCell;
          CellLayout cellLayout=editorCellCollection.getCellLayout();
          if (cellLayout instanceof CellLayout_Horizontal && i < editorCellCollection.getChildCount()) {
            EditorCell cell=editorCellCollection.getChildAt(i);
            cell.setX(x0);
            cell.relayout();
            cell.setWidth(maxWidth);
          }
        }
      }
      if (maxWidth == -1) {
        break;
      }
      x0+=maxWidth;
    }
    for (Iterator iterator=editorCells.iterator(); iterator.hasNext(); ) {
      EditorCell editorCell=(EditorCell)iterator.next();
      if (editorCell instanceof EditorCell_Collection) {
        EditorCell_Collection editorCellCollection=(EditorCell_Collection)editorCell;
        CellLayout cellLayout=editorCellCollection.getCellLayout();
        if (cellLayout instanceof CellLayout_Horizontal) {
          int width0=0;
          for (Iterator iterator0=editorCellCollection.iterator(); iterator0.hasNext(); ) {
            EditorCell cell=(EditorCell)iterator0.next();
            width0+=cell.getWidth();
          }
          editorCellCollection.setWidth(width0);
          width=Math.max(width,width0);
        }
      }
    }
  }
  editorCells.setWidth(width);
  editorCells.setHeight(height);
}
