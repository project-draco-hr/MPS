{
  int width=0;
  int height=0;
  EditorCell closingBrace=editorCells.getClosingBrace();
  EditorCell openingBrace=editorCells.getOpeningBrace();
  boolean usesBraces=editorCells.usesBraces();
  if (usesBraces) {
    closingBrace.relayout();
    openingBrace.relayout();
    openingBrace.setX(editorCells.getX());
    openingBrace.setY(editorCells.getY());
  }
  final int x=usesBraces ? editorCells.getX() + openingBrace.getWidth() : editorCells.getX();
  final int y=editorCells.getY();
  int lastCellWidth=0;
  if (editorCells.isDrawBrackets()) {
    width+=EditorCell_Collection.BRACKET_WIDTH * 2;
  }
  for (  EditorCell editorCell : editorCells.contentCells()) {
    if (editorCells.isDrawBrackets()) {
      editorCell.setX(x + EditorCell_Collection.BRACKET_WIDTH);
    }
 else {
      editorCell.setX(x);
    }
    editorCell.setY(y + height);
    editorCell.relayout();
    lastCellWidth=editorCell.getWidth();
    int cellHeight=editorCell.getHeight();
    width=Math.max(width,lastCellWidth);
    height+=cellHeight;
  }
  if (editorCells.isDrawBrackets()) {
    width+=EditorCell_Collection.BRACKET_WIDTH * 2;
  }
  if (isGridLayout) {
    int x0=x;
    for (int i=0; ; i++) {
      int maxWidth=-1;
      for (      EditorCell editorCell : editorCells.contentCells()) {
        if (editorCell instanceof EditorCell_Collection) {
          EditorCell_Collection editorCellCollection=(EditorCell_Collection)editorCell;
          CellLayout cellLayout=editorCellCollection.getCellLayout();
          if (cellLayout instanceof CellLayout_Horizontal && i < editorCellCollection.getChildCount()) {
            EditorCell cell=editorCellCollection.getChildAt(i);
            maxWidth=Math.max(maxWidth,cell.getWidth());
          }
        }
      }
      for (      EditorCell editorCell : editorCells.contentCells()) {
        if (editorCell instanceof EditorCell_Collection) {
          EditorCell_Collection editorCellCollection=(EditorCell_Collection)editorCell;
          CellLayout cellLayout=editorCellCollection.getCellLayout();
          if (cellLayout instanceof CellLayout_Horizontal && i < editorCellCollection.getChildCount()) {
            EditorCell cell=editorCellCollection.getChildAt(i);
            cell.setX(x0);
            cell.relayout();
            cell.setWidth(maxWidth);
          }
        }
      }
      if (maxWidth == -1) {
        break;
      }
      x0+=maxWidth;
    }
    for (    EditorCell editorCell : editorCells.contentCells()) {
      if (editorCell instanceof EditorCell_Collection) {
        EditorCell_Collection editorCellCollection=(EditorCell_Collection)editorCell;
        CellLayout cellLayout=editorCellCollection.getCellLayout();
        if (cellLayout instanceof CellLayout_Horizontal) {
          int width0=0;
          for (          Object aEditorCellCollection : editorCellCollection) {
            EditorCell cell=(EditorCell)aEditorCellCollection;
            width0+=cell.getWidth();
          }
          editorCellCollection.setWidth(width0);
          width=Math.max(width,width0);
        }
      }
    }
  }
  if (usesBraces) {
    closingBrace.setY(y + height - closingBrace.getHeight());
    if (isGridLayout) {
      width+=closingBrace.getWidth();
      closingBrace.setX(x + width);
    }
 else {
      EditorCell lastCell=editorCells.lastContentCell();
      while (lastCell instanceof EditorCell_Collection) {
        lastCell=((EditorCell_Collection)lastCell).lastCell();
      }
      closingBrace.setX(lastCell.getX() + lastCell.getWidth());
      width=Math.max(width,(closingBrace.getX() - x) + closingBrace.getWidth());
    }
    width+=openingBrace.getWidth();
  }
  editorCells.setWidth(width);
  editorCells.setHeight(height);
}
