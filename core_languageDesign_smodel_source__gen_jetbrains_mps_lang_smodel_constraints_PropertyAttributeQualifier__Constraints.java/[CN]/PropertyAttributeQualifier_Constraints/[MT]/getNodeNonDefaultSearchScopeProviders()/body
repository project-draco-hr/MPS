{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("attributeConcept",new BaseNodeReferenceSearchScopeProvider(){
    public boolean hasPresentation(){
      return true;
    }
    public String getPresentation(    final IOperationContext operationContext,    final PresentationReferentConstraintContext _context){
      return SConceptPropertyOperations.getString(((SNode)_context.getParameterNode()),"role");
    }
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      return AttributeQualifier_Behavior.getApplicableRoles_959482772563105834(_context.getEnclosingNode(),"jetbrains.mps.lang.core.structure.PropertyAttribute",_context.getModel(),operationContext.getScope());
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c895902fb(jetbrains.mps.lang.smodel.constraints)","2788452359611885034");
    }
  }
);
  return result;
}
