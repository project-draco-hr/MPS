{
  Iterable<SModelDescriptor> smds=models;
  smds=Sequence.fromIterable(smds).sort(new ISelector<SModelDescriptor,Comparable<?>>(){
    public Comparable<?> select(    SModelDescriptor desc){
      return desc.getModule().getModuleFqName();
    }
  }
,true);
  if (dirtyOnly) {
    smds=Sequence.fromIterable(smds).where(new IWhereFilter<SModelDescriptor>(){
      public boolean accept(      SModelDescriptor md){
        return ModelGenerationStatusManager.getInstance().generationRequired(md,ModelsToResources.this.context);
      }
    }
).toListSequence();
  }
  return arrangeByModule(smds);
}
