{
  String name=baseMethodDeclaration.getName();
  String conceptName=baseMethodDeclaration.getConceptName();
  ITypeChecker typeChecker=TypeCheckerAccess.getTypeChecker();
  TSStatus tSStatus=typeChecker.adaptNode(baseMethodDeclaration.getReturnType());
  ITypeObject typeObject=tSStatus.getTypeObject();
  String methodTypeName=typeObject.getTypeName();
  String methodTypeSignature=typeObject.getSignature();
  String methodType="(" + methodTypeName + "/"+ methodTypeSignature+ ")";
  String result="[" + conceptName + "]"+ name+ "(";
  Iterator<ParameterDeclaration> pIterator=baseMethodDeclaration.parameters();
  while (pIterator.hasNext()) {
    ParameterDeclaration parameterDeclaration=pIterator.next();
    tSStatus=typeChecker.adaptNode(parameterDeclaration.getType());
    typeObject=tSStatus.getTypeObject();
    String parameterType="(" + typeObject.getTypeName() + "/"+ typeObject.getSignature()+ ")";
    result+=parameterType;
    if (pIterator.hasNext())     result+=", ";
  }
  result+=") : ";
  result+=methodType;
  return result;
}
