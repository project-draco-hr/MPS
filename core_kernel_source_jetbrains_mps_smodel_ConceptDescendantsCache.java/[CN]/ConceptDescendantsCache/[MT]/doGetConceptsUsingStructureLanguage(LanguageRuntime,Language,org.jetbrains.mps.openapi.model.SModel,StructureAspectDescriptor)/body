{
  Set<ConceptDescriptor> result=new LinkedHashSet<ConceptDescriptor>();
  SAbstractConcept abstractConceptDeclaration=SConceptRepository.getInstance().getConcept(SNodeUtil.concept_AbstractConceptDeclaration);
  if (abstractConceptDeclaration == null) {
    LOG.error("Structure language is not loaded yet, cannot get all concepts from language " + languageRuntime,new Throwable());
    return result;
  }
  for (  SNode root : structureModel.getRootNodes()) {
    if (root.getConcept().isSubConceptOf(abstractConceptDeclaration)) {
      ConceptDescriptor descriptor=structureDescriptor.getDescriptor(NameUtil.nodeFQName(root));
      if (descriptor != null) {
        result.add(descriptor);
      }
 else {
        LOG.error("ConceptDescriptor is null for " + NameUtil.nodeFQName(root) + " in "+ language.getModuleName(),new Throwable());
      }
    }
  }
  return result;
}
