{
  List<SNode> result=new ArrayList<SNode>();
  for (  SReference reference : _context.getNode().getReferences()) {
    if (SLinkOperations.getTarget(_context.getNode(),AttributesRolesUtil.childRoleFromLinkAttributeRole("referenceAntiquotation",reference.getRole()),true) != null) {
      continue;
    }
    SNode targetNode=reference.getTargetNode();
    if (SNodeOperations.getAncestor(targetNode,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == SNodeOperations.getAncestor(_context.getNode(),"jetbrains.mps.lang.quotation.structure.Quotation",false,false)) {
      continue;
    }
    SNode referenceNode=SModelOperations.createNewNode(_context.getOutputModel(),"jetbrains.mps.lang.core.structure.BaseConcept",null);
    referenceNode.setProperty("targetModel",reference.getTargetSModelReference().toString());
    referenceNode.setProperty("role",reference.getRole());
    referenceNode.setProperty("targetNodeId",targetNode.getSNodeId().toString());
    ListSequence.fromList(result).addElement(referenceNode);
  }
  return result;
}
