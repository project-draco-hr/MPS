{
  List<SNode> result=new ArrayList<SNode>();
  List<String> propertyNames=ListSequence.fromListWithValues(new ArrayList<String>(),_context.getNode().getPropertyNames());
  ListSequence.fromList(propertyNames).sort(new ISelector<String,Comparable<?>>(){
    public Comparable<?> select(    String it){
      return it;
    }
  }
,true);
  for (  String property : propertyNames) {
    if (SLinkOperations.getTarget(_context.getNode(),AttributesRolesUtil.childRoleFromPropertyAttributeRole("propertyAntiquotation",property),true) != null) {
      continue;
    }
    SNode propertyNode=SModelOperations.createNewNode(_context.getOutputModel(),"jetbrains.mps.lang.core.structure.BaseConcept",null);
    propertyNode.setProperty("propertyName",property);
    propertyNode.setProperty("propertyValue",_context.getNode().getProperty(property));
    ListSequence.fromList(result).addElement(propertyNode);
  }
  return result;
}
