{
  List<SNode> result=new ArrayList<SNode>();
  List<String> propertyNames=ListSequence.fromListWithValues(new ArrayList<String>(),_context.getNode().getPropertyNames());
  Collections.sort(propertyNames);
  for (  String property : propertyNames) {
    if (AttributeOperations.getAttribute(_context.getNode(),new IAttributeDescriptor.PropertyAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.quotation.structure.PropertyAntiquotation"),property)) != null) {
      continue;
    }
    SNode propertyNode=SModelOperations.createNewNode(_context.getOutputModel(),"jetbrains.mps.lang.core.structure.BaseConcept",null);
    propertyNode.setProperty("propertyName",property);
    propertyNode.setProperty("propertyValue",_context.getNode().getProperty(property));
    ListSequence.fromList(result).addElement(propertyNode);
  }
  return result;
}
