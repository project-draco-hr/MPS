{
  if (initialState == null) {
    return ListSequence.fromList(new ArrayList<RefactoringParticipant.Change<Tuples._2<Language,I>,Tuples._2<Language,F>>>());
  }
  final Language sourceModule=initialState._0();
  final SearchResults results=new SearchResults();
  results.add(new SearchResult<SModule>(sourceModule,"migration script"));
  RefactoringParticipant.Change<Tuples._2<Language,I>,Tuples._2<Language,F>> change=new RefactoringParticipant.Change<Tuples._2<Language,I>,Tuples._2<Language,F>>(){
    public SearchResults getSearchResults(){
      return results;
    }
    public boolean needsToPreserveOldNode(){
      return true;
    }
    public void confirm(    Tuples._2<Language,F> finalState,    SRepository repository,    RefactoringSession refactoringSession){
      LanguageStructureMigrationParticipant.this.confirm(initialState,finalState,refactoringSession);
    }
  }
;
  return ListSequence.fromListAndArray(new ArrayList<RefactoringParticipant.Change<Tuples._2<Language,I>,Tuples._2<Language,F>>>(),change);
}
