{
  int[] numInLayer=new int[3];
  numInLayer[0]=4;
  numInLayer[1]=2;
  numInLayer[2]=3;
  int numEdges=10;
  Graph g=RandomGraphGenerator.generateFixedNumLayers(numInLayer,numEdges);
  testEdges(g,getLayers(g,numInLayer));
  numEdges=0;
  int minNumEdges=0;
  for (int i=0; i < numInLayer.length; i++) {
    if (i > 0) {
      minNumEdges+=numInLayer[i];
    }
    for (int j=i + 1; j < numInLayer.length; j++) {
      numEdges+=numInLayer[i] * numInLayer[j];
    }
  }
  try {
    RandomGraphGenerator.generateFixedNumLayers(numInLayer,numEdges + 1);
    Assert.fail();
  }
 catch (  IllegalArgumentException e) {
  }
  try {
    RandomGraphGenerator.generateFixedNumLayers(numInLayer,minNumEdges - 1);
    Assert.fail();
  }
 catch (  IllegalArgumentException e) {
  }
  RandomGraphGenerator.generateFixedNumLayers(numInLayer,numEdges);
  RandomGraphGenerator.generateFixedNumLayers(numInLayer,minNumEdges);
}
