{
  SNode method=SNodeOperations.cast(SLinkOperations.getTarget(node,"baseMethodDeclaration",false),"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration");
  SNode classConcept=SNodeOperations.cast(SNodeOperations.getParent(method),"jetbrains.mps.baseLanguage.structure.ClassConcept");
  SNode smc=SNodeOperations.replaceWithAnother(node,SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StaticMethodCall",null));
  SLinkOperations.setTarget(smc,"classConcept",classConcept,false);
  SLinkOperations.setTarget(smc,"baseMethodDeclaration",method,false);
  List<SNode> args=SLinkOperations.getTargets(node,"actualArgument",true);
  for (  SNode arg : args) {
    ListSequence.fromList(SLinkOperations.getTargets(smc,"actualArgument",true)).addElement(SNodeOperations.detachNode(arg));
  }
  editorContext.selectWRTFocusPolicy(smc);
}
