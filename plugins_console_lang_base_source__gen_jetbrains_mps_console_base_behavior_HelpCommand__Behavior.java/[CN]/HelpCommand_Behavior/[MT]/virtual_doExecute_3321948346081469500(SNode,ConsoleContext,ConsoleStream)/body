{
  if ((SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getContainmentLink(new UUID(-2442401883381282302l,-5546511894809623691l),473081947980701568l,6928665434433788203l,"target")) == null)) {
    Iterable<SNode> constructions=ListSequence.fromList(SConceptOperations.getAllSubConcepts(SConceptOperations.findConceptDeclaration("jetbrains.mps.console.base.structure.ConsoleHelpProvider"),context.getConsoleTab().getConsoleModel())).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SNodeOperations.isInstanceOf(it,"jetbrains.mps.lang.structure.structure.ConceptDeclaration") && AbstractConceptDeclaration_Behavior.call_isDefaultSubstitutable_7429110134803670673(it);
      }
    }
).sort(new ISelector<SNode,String>(){
      public String select(      SNode it){
        return BehaviorReflection.invokeVirtualStatic(String.class,SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(it)),"virtual_getGroup_6928665434441162387",new Object[]{});
      }
    }
,true).alsoSort(new ISelector<SNode,String>(){
      public String select(      SNode it){
        return BehaviorReflection.invokeVirtualStatic(String.class,SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(it)),"virtual_getKind_7006261637493126084",new Object[]{});
      }
    }
,true).alsoSort(new ISelector<SNode,String>(){
      public String select(      SNode it){
        return SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"));
      }
    }
,true);
    Deque<SNode> groupedConstructions=LinkedListSequence.fromLinkedList(new LinkedList<SNode>());
    for (    SNode e : Sequence.fromIterable(constructions)) {
      if (BehaviorReflection.invokeVirtualStatic(String.class,SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(e)),"virtual_getGroup_6928665434441162387",new Object[]{}) != check_x46ur7_a0a0c0a0a(LinkedListSequence.fromLinkedList(groupedConstructions).last())) {
        LinkedListSequence.fromLinkedList(groupedConstructions).addElement(null);
      }
      LinkedListSequence.fromLinkedList(groupedConstructions).addElement(e);
    }
    List<List<String>> resultList=ListSequence.fromListWithValues(new ArrayList<List<String>>(),LinkedListSequence.fromLinkedList(groupedConstructions).select(new ISelector<SNode,IListSequence<String>>(){
      public IListSequence<String> select(      SNode it){
        try {
          return ListSequence.fromListAndArray(new ArrayList<String>(),BehaviorReflection.invokeVirtualStatic(String.class,SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(it)),"virtual_getDisplayString_7006261637493126103",new Object[]{}),BehaviorReflection.invokeVirtualStatic(String.class,SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(it)),"virtual_getShortHelp_473081947982699339",new Object[]{}));
        }
 catch (        RuntimeException e) {
          if (LOG.isEnabledFor(Level.WARN)) {
            LOG.warn("Concept " + BehaviorReflection.invokeVirtual(String.class,it,"virtual_getFqName_1213877404258",new Object[]{}) + " implements ConsoleHelpProvider but does not implement getHelp() method",e);
          }
          try {
            return ListSequence.fromListAndArray(new ArrayList<String>(),BehaviorReflection.invokeVirtualStatic(String.class,SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(it)),"virtual_getDisplayString_7006261637493126103",new Object[]{}),"");
          }
 catch (          RuntimeException e1) {
            return ListSequence.fromListAndArray(new ArrayList<String>(),SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")),"");
          }
        }
      }
    }
));
    List<Integer> maxLens=ListSequence.fromList(new LinkedList<Integer>());
    for (int i=0; i < ListSequence.fromList(resultList).select(new ISelector<List<String>,Integer>(){
      public Integer select(      List<String> it){
        return ListSequence.fromList(it).count();
      }
    }
).foldRight(0,new IRightCombinator<Integer,Integer>(){
      public Integer combine(      Integer it,      Integer s){
        return Math.max(s,it);
      }
    }
); i++) {
      int maxLength=0;
      for (      List<String> row : ListSequence.fromList(resultList)) {
        int length=check_x46ur7_a0a0b0f0a0a(ListSequence.fromList(row).getElement(i));
        if (length > maxLength) {
          maxLength=length;
        }
      }
      ListSequence.fromList(maxLens).addElement(maxLength);
    }
    StringBuilder output=new StringBuilder();
    for (    List<String> row : ListSequence.fromList(resultList)) {
      for (int i=0; i < ListSequence.fromList(maxLens).count(); i++) {
        output.append((ListSequence.fromList(row).getElement(i) == null ? "" : ListSequence.fromList(row).getElement(i)));
        if (i < ListSequence.fromList(maxLens).count() - 1) {
          for (int j=check_x46ur7_a0a0b0a0i0a0a(ListSequence.fromList(row).getElement(i)); j < ListSequence.fromList(maxLens).getElement(i) + 2; j++) {
            output.append(" ");
          }
        }
      }
      output.append("\n");
    }
    console.addText("Constructions available in console:\n\n");
    console.addText(output.toString());
  }
 else   if (SConceptOperations.isSubConceptOf(SLinkOperations.getTarget(SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getContainmentLink(new UUID(-2442401883381282302l,-5546511894809623691l),473081947980701568l,6928665434433788203l,"target")),MetaAdapterFactory.getReferenceLink(new UUID(-2442401883381282302l,-5546511894809623691l),6928665434433761801l,6928665434433779926l,"command")),"jetbrains.mps.console.base.structure.ConsoleHelpProvider")) {
    String helpPage;
    try {
      SNode chp=(SNode)SLinkOperations.getTarget(SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getContainmentLink(new UUID(-2442401883381282302l,-5546511894809623691l),473081947980701568l,6928665434433788203l,"target")),MetaAdapterFactory.getReferenceLink(new UUID(-2442401883381282302l,-5546511894809623691l),6928665434433761801l,6928665434433779926l,"command"));
      helpPage=BehaviorReflection.invokeVirtualStatic(String.class,SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(chp)),"virtual_getHelpPage_7006261637493125297",new Object[]{});
      String helpHead=BehaviorReflection.invokeVirtualStatic(String.class,SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(chp)),"virtual_getDisplayString_7006261637493126103",new Object[]{}) + " : " + BehaviorReflection.invokeVirtualStatic(String.class,SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(chp)),"virtual_getKind_7006261637493126084",new Object[]{})+ "\n"+ BehaviorReflection.invokeVirtualStatic(String.class,SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(chp)),"virtual_getShortHelp_473081947982699339",new Object[]{});
      if ((helpPage != null && helpPage.length() > 0)) {
        console.addText(helpHead + "\n\n" + helpPage);
      }
 else {
        console.addText(helpHead);
      }
    }
 catch (    RuntimeException ignored) {
    }
  }
}
