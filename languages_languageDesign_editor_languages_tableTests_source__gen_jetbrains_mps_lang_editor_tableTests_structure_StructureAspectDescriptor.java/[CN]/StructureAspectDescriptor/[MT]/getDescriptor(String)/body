{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.ContentElement").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.DataCell").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("value").create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.Event").super_("jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement").parents("jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement","jetbrains.mps.lang.core.structure.INamedConcept").create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.EventReference").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("event").create();
case 5:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.HierarchycalTable").super_("jetbrains.mps.lang.editor.tableTests.structure.Table").parents("jetbrains.mps.lang.editor.tableTests.structure.Table").children(new String[]{"headers"},new boolean[]{true}).create();
case 6:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.LightWeightDecisionTable").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").children(new String[]{"column","row","body"},new boolean[]{true,true,true}).alias("decTable","").staticScope(StaticScope.NONE).create();
case 7:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.Matrix").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"xs","ys","contents"},new boolean[]{true,true,true}).create();
case 8:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.Row").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"cells"},new boolean[]{true}).create();
case 9:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.State").super_("jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement").parents("jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement","jetbrains.mps.lang.core.structure.INamedConcept").create();
case 10:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.StateMachine").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"events","transitions","states"},new boolean[]{true,true,true}).create();
case 11:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.StateReference").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("state").create();
case 12:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.Table").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").properties("initialRowCount","initialColumnCount").children(new String[]{"rows"},new boolean[]{true}).create();
case 13:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.Transition").super_("jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement").parents("jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement").properties("condition").children(new String[]{"fromState","toState","trigger"},new boolean[]{false,false,false}).create();
case 14:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.UltimateContainer").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"stateMachines","tables","matrixes"},new boolean[]{true,true,true}).create();
case 15:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.XElement").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").create();
case 16:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.editor.tableTests.structure.YElement").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
