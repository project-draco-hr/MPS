{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.tableTests.structure.ContentElement","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.tableTests.structure.DataCell","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"value"},new String[]{},new String[]{},new boolean[]{});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.tableTests.structure.Event","jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement",false,new String[]{"jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.tableTests.structure.EventReference","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"event"},new String[]{},new boolean[]{});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.tableTests.structure.HierarchycalTable","jetbrains.mps.lang.editor.tableTests.structure.Table",false,new String[]{"jetbrains.mps.lang.editor.tableTests.structure.Table"},new String[]{},new String[]{},new String[]{"headers"},new boolean[]{true});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.tableTests.structure.LightWeightDecisionTable","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{},new String[]{"column","row","body"},new boolean[]{true,true,true});
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.tableTests.structure.Matrix","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{"xs","ys","contents"},new boolean[]{true,true,true});
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.tableTests.structure.Row","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{"cells"},new boolean[]{true});
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.tableTests.structure.State","jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement",false,new String[]{"jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.tableTests.structure.StateMachine","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{"events","transitions","states"},new boolean[]{true,true,true});
case 11:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.tableTests.structure.StateReference","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"state"},new String[]{},new boolean[]{});
case 12:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.tableTests.structure.Table","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"initialRowCount","initialColumnCount"},new String[]{},new String[]{"rows"},new boolean[]{true});
case 13:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.tableTests.structure.Transition","jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement",false,new String[]{"jetbrains.mps.lang.editor.tableTests.structure.AbstractStateMachineElement"},new String[]{"condition"},new String[]{},new String[]{"fromState","toState","trigger"},new boolean[]{false,false,false});
case 14:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.tableTests.structure.UltimateContainer","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{"stateMachines","tables","matrixes"},new boolean[]{true,true,true});
case 15:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.tableTests.structure.XElement","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 16:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.tableTests.structure.YElement","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{},new boolean[]{});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
