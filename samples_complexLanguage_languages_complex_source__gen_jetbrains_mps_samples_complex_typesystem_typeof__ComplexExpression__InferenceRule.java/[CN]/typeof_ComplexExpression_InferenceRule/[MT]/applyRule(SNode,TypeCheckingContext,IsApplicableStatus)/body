{
{
    SNode _nodeToCheck_1029348928467=SLinkOperations.getTarget(nodeToCheck,"complexExpression",true);
    BaseQuickFixProvider intentionProvider=null;
    EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c89590424(jetbrains.mps.samples.complex.typesystem)","1196268989250",0,intentionProvider);
    typeCheckingContext.createLessThanInequationStrong((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467,"r:00000000-0000-4000-0000-011c89590424(jetbrains.mps.samples.complex.typesystem)","1196268989252",true),(SNode)new typeof_ComplexExpression_InferenceRule.QuotationClass_l75no8_a0a0a0().createNode(typeCheckingContext),false,_info_12389875345);
  }
{
    SNode _nodeToCheck_1029348928467=nodeToCheck;
    BaseQuickFixProvider intentionProvider=null;
    EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c89590424(jetbrains.mps.samples.complex.typesystem)","1196267675385",0,intentionProvider);
    typeCheckingContext.createEquation((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467,"r:00000000-0000-4000-0000-011c89590424(jetbrains.mps.samples.complex.typesystem)","1196267668258",true),(SNode)ListSequence.fromList(SLinkOperations.getConceptLinkTargets(nodeToCheck,"returnType")).first(),_info_12389875345);
  }
}
