{
synchronized (myPluginLoadersLock) {
    myPluginLoaders.add(loader);
    final List<PluginContributor> contributorsToLoad=new ArrayList<PluginContributor>(myContributorsToBeLoaded);
    if (contributorsToLoad.isEmpty()) {
      return;
    }
    LOG.debug("Scheduling the registering of the " + loader);
    Task loadingTask=new Task.Modal(null,"Loading MPS plugins",false){
      @Override public void run(      @NotNull ProgressIndicator indicator){
        final long beginTime=System.nanoTime();
        LOG.info(String.format("Registering %s : loading plugins from %d contributors",loader,contributorsToLoad.size()));
        try {
          ProgressMonitorAdapter monitor=new ProgressMonitorAdapter(indicator);
          loader.loadPlugins(contributorsToLoad,monitor);
        }
  finally {
          LOG.info(String.format("Loading of %d plugins took %.3f s",contributorsToLoad.size(),(System.nanoTime() - beginTime) / 1e9));
        }
      }
    }
;
    invokeLater(loadingTask);
  }
}
