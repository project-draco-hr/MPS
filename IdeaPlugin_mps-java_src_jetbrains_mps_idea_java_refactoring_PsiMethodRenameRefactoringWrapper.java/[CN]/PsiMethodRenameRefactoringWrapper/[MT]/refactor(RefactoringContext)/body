{
  baseRefactoring.refactor(refactoringContext);
  Project project=ProjectHelper.toIdeaProject(refactoringContext.getCurrentOperationContext().getProject());
  PsiMethod method=(PsiMethod)MPSPsiProvider.getInstance(project).getPsi(refactoringContext.getSelectedNode());
  String newName=(String)refactoringContext.getParameter("newName");
  SearchResults<SNode> usages=(SearchResults<SNode>)refactoringContext.getUsages();
  for (  SearchResult<SNode> result : usages.getSearchResults()) {
    if (!(result instanceof PsiSearchResult))     continue;
    PsiReference psiRef=((PsiSearchResult)result).getReference();
    if (psiRef.getElement() instanceof MPSPsiNode)     continue;
    psiRef.handleElementRename(newName);
  }
  if (myOverriding) {
    for (    PsiMethod m : OverridingMethodsSearch.search(method).findAll()) {
      if (m instanceof MPSPsiNode)       continue;
      m.setName(newName);
    }
  }
}
