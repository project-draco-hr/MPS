{
  Iterator<INodeSubstituteAction> actions=_context.getActions();
  while (actions.hasNext()) {
    INodeSubstituteAction current=actions.next();
    if (!(SNodeOperations.isInstanceOf(((SNode)current.getOutputConcept()),"jetbrains.mps.lang.structure.structure.ConceptDeclaration"))) {
      continue;
    }
    final SNode concept=current.getOutputConcept();
    Condition condition=new Condition(){
      public boolean met(      Object p0){
        return !(SConceptOperations.isSubConceptOf(concept,"jetbrains.mps.baseLanguage.collections.structure.SequenceOperation") || SConceptOperations.isSubConceptOf(concept,"jetbrains.mps.ypath.structure.TreePathOperationExpression"));
      }
    }
;
    if (condition.met(null)) {
      actions.remove();
    }
  }
}
