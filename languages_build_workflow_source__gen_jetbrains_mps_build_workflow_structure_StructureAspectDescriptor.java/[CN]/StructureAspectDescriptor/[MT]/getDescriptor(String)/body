{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfAntStatement","jetbrains.mps.build.workflow.structure.BwfStatement",false,new String[]{"jetbrains.mps.build.workflow.structure.BwfStatement"},new String[]{},new String[]{});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfJavaModule","jetbrains.mps.build.workflow.structure.BwfProjectPart",false,new String[]{"jetbrains.mps.build.workflow.structure.BwfProjectPart","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"outputFolder"},new String[]{});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfJavaModuleReference","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"target"});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfPath","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"path"},new String[]{});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfProject","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfProjectPart","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfStatement","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfSubTask","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{});
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfSubTaskDependency","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"target"});
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfTask","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.ScopeProvider"},new String[]{},new String[]{});
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.build.workflow.structure.BwfTaskDependency","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"target"});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
