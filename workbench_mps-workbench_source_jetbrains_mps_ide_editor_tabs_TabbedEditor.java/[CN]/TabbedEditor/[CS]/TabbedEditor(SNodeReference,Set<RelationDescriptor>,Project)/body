{
  super(mpsProject);
  myBaseNode=baseNode;
  myPossibleTabs=possibleTabs;
  myVirtualFile=MPSNodesVirtualFileSystem.getInstance().getFileFor(myBaseNode);
  myTabsPanel=new JPanel(new BorderLayout());
  getComponent().add(myTabsPanel,BorderLayout.SOUTH);
  installTabsComponent();
  showNode(myBaseNode.resolve(myProject.getRepository()),false);
  myNextTabAction=new ShadowAction(new BaseNavigationAction(new Runnable(){
    @Override public void run(){
      myTabsComponent.nextTab();
    }
  }
),ActionManager.getInstance().getAction(IdeActions.ACTION_NEXT_EDITOR_TAB),getComponent());
  myPrevTabAction=new ShadowAction(new BaseNavigationAction(new Runnable(){
    @Override public void run(){
      myTabsComponent.prevTab();
    }
  }
),ActionManager.getInstance().getAction(IdeActions.ACTION_PREVIOUS_EDITOR_TAB),getComponent());
  myAddAction=new AddAspectAction(mpsProject,myBaseNode,myPossibleTabs,new SetTabsComponentNode()){
    @Override protected RelationDescriptor getCurrentAspect(){
      return myTabsComponent.getCurrentTabAspect();
    }
  }
;
  ActionButton btn=new ActionButton(myAddAction,myAddAction.getTemplatePresentation(),ActionPlaces.UNKNOWN,new Dimension(23,23));
  myTabsPanel.add(btn,BorderLayout.WEST);
  EditorSettings.getInstance().addEditorSettingsListener(mySettingsListener);
  myRepoChangeListener.subscribeTo(myProject.getRepository());
  myFileStatusListener.attach(myProject);
}
