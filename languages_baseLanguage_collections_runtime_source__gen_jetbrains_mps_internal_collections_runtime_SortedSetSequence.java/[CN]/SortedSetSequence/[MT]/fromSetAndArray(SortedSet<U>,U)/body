{
  if (Sequence.NULL_ARRAY_IS_SINGLETON) {
    if (array == null) {
      array=(U[])Sequence.nullSingletonArray();
    }
  }
  if (Sequence.USE_NULL_SEQUENCE) {
    if (set == null && array == null) {
      return NullSortedSetSequence.instance();
    }
 else     if (set == null) {
      set=new TreeSet<U>();
    }
 else     if (array == null) {
      if (set instanceof ISortedSetSequence) {
        return (ISortedSetSequence<U>)set;
      }
      return new SortedSetSequence<U>(set);
    }
  }
  List<U> input=Arrays.asList(array);
  if (Sequence.IGNORE_NULL_VALUES) {
    for (    U u : input) {
      if (u != null) {
        set.add(u);
      }
    }
  }
 else {
    set.addAll(input);
  }
  if (set instanceof ISortedSetSequence) {
    return (ISortedSetSequence<U>)set;
  }
  return new SortedSetSequence<U>(set);
}
