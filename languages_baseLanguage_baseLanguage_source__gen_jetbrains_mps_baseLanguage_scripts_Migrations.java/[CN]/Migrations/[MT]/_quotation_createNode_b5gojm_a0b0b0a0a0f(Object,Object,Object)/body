{
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  SNode quotedNode_7=null;
  SNode quotedNode_8=null;
  SNode quotedNode_9=null;
  SNode quotedNode_10=null;
  SNode quotedNode_11=null;
  quotedNode_4=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_5=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AndExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_6=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_8=(SNode)parameter_1;
  if (quotedNode_8 != null) {
    quotedNode_6.addChild("expression",HUtil.copyIfNecessary(quotedNode_8));
  }
  quotedNode_5.addChild("rightExpression",quotedNode_6);
  quotedNode_7=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_9=(SNode)parameter_2;
  if (quotedNode_9 != null) {
    quotedNode_7.addChild("operand",HUtil.copyIfNecessary(quotedNode_9));
  }
  quotedNode_10=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.Node_IsInstanceOfOperation",null,null,GlobalScope.getInstance(),false);
  quotedNode_11=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.RefConcept_Reference",null,null,GlobalScope.getInstance(),false);
  SNodeAccessUtil.setReferenceTarget(quotedNode_11,"conceptDeclaration",(SNode)parameter_3);
  quotedNode_10.addChild("conceptArgument",quotedNode_11);
  quotedNode_7.addChild("operation",quotedNode_10);
  quotedNode_5.addChild("leftExpression",quotedNode_7);
  quotedNode_4.addChild("expression",quotedNode_5);
  return quotedNode_4;
}
