{
  List<AbstractMigrationRefactoring> migrations=ListSequence.fromList(new ArrayList<AbstractMigrationRefactoring>());
  ListSequence.fromList(migrations).addElement(migrateInstanceNodes(config));
  ListSequence.fromList(migrations).addElement(migrateIntentionCondition(config));
  ListSequence.fromList(migrations).addElement(migrateCheckingRulesCondition(config));
  ListSequence.fromList(migrations).addElement(migrateMigrationScriptPart(config));
  ListSequence.fromList(migrations).addElement(migrateSNodeType(config));
  ListSequence.fromList(migrations).addElement(migrateSNodeListType(config));
  ListSequence.fromList(migrations).addElement(migrateNodeAttributes(config));
  ListSequence.fromList(migrations).addElement(migrateInstanceOf(config));
  ListSequence.fromList(migrations).addElement(migrateGetDescendants(config));
  ListSequence.fromList(migrations).addElement(migrateReplaceWithNewOperation(config));
  ListSequence.fromList(migrations).addElement(migrateCreateNewNodeOperation(config));
  ListSequence.fromList(migrations).addElement(migrateAddNewChildOperation(config));
  ListSequence.fromList(migrations).addElement(migrateSNodeTypeCastExpression(config));
  return migrations;
}
