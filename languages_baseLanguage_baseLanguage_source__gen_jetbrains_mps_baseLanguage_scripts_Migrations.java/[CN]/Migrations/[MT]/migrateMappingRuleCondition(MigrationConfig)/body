{
  return new SimpleMigration(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.BaseMappingRule")){
    @Override public String getName(){
      return "Migrate mapping rules condition for " + config.getName();
    }
    @Override public boolean isApplicableInstanceNode(    SNode rule){
      return SLinkOperations.getTarget(rule,MetaAdapterFactory.getReferenceLink(0xb401a68083254110L,0x8fd384331ff25befL,0x10fc0b64647L,0x10fc0b6e730L,"applicableConcept")) == config.sourceConcept && !(SPropertyOperations.getBoolean(rule,MetaAdapterFactory.getProperty(0xb401a68083254110L,0x8fd384331ff25befL,0x10fc0b64647L,0x10fc6d8f674L,"applyToConceptInheritors")));
    }
    @Override public void doUpdateInstanceNode(    SNode rule){
      SLinkOperations.setTarget(rule,MetaAdapterFactory.getReferenceLink(0xb401a68083254110L,0x8fd384331ff25befL,0x10fc0b64647L,0x10fc0b6e730L,"applicableConcept"),config.targetConcept);
      SPropertyOperations.set(rule,MetaAdapterFactory.getProperty(0xb401a68083254110L,0x8fd384331ff25befL,0x10fc0b64647L,0x10fc6d8f674L,"applyToConceptInheritors"),"" + (true));
      SNode condition=config.createCondition(SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xb401a68083254110L,0x8fd384331ff25befL,0x10fc0b471fcL,"jetbrains.mps.lang.generator.structure.TemplateFunctionParameter_sourceNode"))));
      if ((SLinkOperations.getTarget(rule,MetaAdapterFactory.getContainmentLink(0xb401a68083254110L,0x8fd384331ff25befL,0x10fc0b64647L,0x10fc0b719bdL,"conditionFunction")) == null)) {
        SLinkOperations.setTarget(rule,MetaAdapterFactory.getContainmentLink(0xb401a68083254110L,0x8fd384331ff25befL,0x10fc0b64647L,0x10fc0b719bdL,"conditionFunction"),SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xb401a68083254110L,0x8fd384331ff25befL,0x10fc0b05beaL,"jetbrains.mps.lang.generator.structure.BaseMappingRule_Condition"))));
        SLinkOperations.setTarget(SLinkOperations.getTarget(rule,MetaAdapterFactory.getContainmentLink(0xb401a68083254110L,0x8fd384331ff25befL,0x10fc0b64647L,0x10fc0b719bdL,"conditionFunction")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x108bbca0f48L,0x108bbd29b4aL,"body"),_quotation_createNode_b5gojm_a0b0d0c0a0a0o(condition));
      }
 else {
        SNode checkingStatement=_quotation_createNode_b5gojm_a0a0a3a2a0a0a41(condition);
        ListSequence.fromList(SNodeOperations.getChildren(SLinkOperations.getTarget(SLinkOperations.getTarget(rule,MetaAdapterFactory.getContainmentLink(0xb401a68083254110L,0x8fd384331ff25befL,0x10fc0b64647L,0x10fc0b719bdL,"conditionFunction")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x108bbca0f48L,0x108bbd29b4aL,"body")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b200L,0xf8cc6bf961L,"statement"))).insertElement(0,checkingStatement);
      }
    }
  }
;
}
