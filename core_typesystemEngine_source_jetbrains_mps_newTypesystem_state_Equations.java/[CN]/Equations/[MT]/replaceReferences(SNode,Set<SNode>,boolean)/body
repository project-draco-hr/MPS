{
  List<? extends SReference> references=IterableUtil.copyToList(node.getReferences());
  for (  SReference reference : references) {
    SNode oldNode=reference.getTargetNode();
    if (TypesUtil.isVariable(oldNode)) {
      SNode newNode=expandNode(oldNode,variablesMet,finalExpansion,false);
      if (finalExpansion && TypesUtil.isVariable(newNode)) {
        newNode=convertReferentVariable(node,reference.getRole(),newNode);
      }
      if (newNode != oldNode) {
        String role=reference.getRole();
        node.setReference(role,null);
        SNodeAccessUtil.setReferenceTarget(node,role,newNode);
      }
    }
  }
}
