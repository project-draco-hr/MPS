{
  if (node == null) {
    return null;
  }
  SNode type=getRepresentative(node);
  if (type != node && TypesUtil.getVariables(type).contains(node)) {
    reportRecursiveType(type,null);
    return type;
  }
  if (TypesUtil.isVariable(type)) {
    if (variablesMet.contains(type)) {
      reportRecursiveType(type,null);
    }
    variablesMet.add(type);
    return type;
  }
  if (type != node) {
    SNode result=expandNode(type,variablesMet,finalExpansion,copy);
    variablesMet.remove(type);
    return result;
  }
 else {
    SNode result=copy ? CopyUtil.copy(node) : node;
    replaceChildren(result,variablesMet,finalExpansion,copy);
    replaceReferences(result,variablesMet,finalExpansion);
    return result;
  }
}
