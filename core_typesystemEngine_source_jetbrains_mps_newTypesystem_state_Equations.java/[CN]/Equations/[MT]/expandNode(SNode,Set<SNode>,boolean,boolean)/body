{
  if (node == null) {
    return null;
  }
  SNode type=getRepresentativeNoShortenPaths(node);
  while (finalExpansion && LatticeUtil.isMeet(type)) {
    type=LatticeUtil.getMeetArguments(type).get(0);
  }
  if (type != node) {
    SNode result=expandNode(type,variablesMet,finalExpansion,copy);
    variablesMet.remove(type);
    return result;
  }
 else {
    SNode result=copy ? CopyUtil.copy(node) : node;
    replaceChildren(result,variablesMet,finalExpansion,copy);
    replaceReferences(result,variablesMet,finalExpansion);
    return result;
  }
}
