{
  SNode ancestor=SNodeOperations.getAncestorWhereConceptInList(node,new String[]{"jetbrains.mps.lang.generator.structure.TemplateDeclaration","jetbrains.mps.lang.generator.structure.BaseMappingRule"},false,false);
  if (SNodeOperations.isInstanceOf(ancestor,"jetbrains.mps.lang.generator.structure.TemplateDeclaration")) {
    return SLinkOperations.getTarget(ancestor,"applicableConcept",false);
  }
  if (SNodeOperations.isInstanceOf(ancestor,"jetbrains.mps.lang.generator.structure.BaseMappingRule")) {
    return SLinkOperations.getTarget(ancestor,"applicableConcept",false);
  }
  SNode rootAnnotation=SNodeOperations.getContainingRoot(node).getAttribute(RootTemplateAnnotation_AnnotationLink.ROOT_TEMPLATE_ANNOTATION);
  return SLinkOperations.getTarget(rootAnnotation,"applicableConcept",false);
}
