{
  final Wrappers._T<List<ChangeEditorMessage>> messages=new Wrappers._T<List<ChangeEditorMessage>>(null);
  if (!(change instanceof AddRootChange)) {
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        SNode editedNode=myEditorComponent.getEditedNode();
        if (editedNode == null || !(SNodeUtil.isAccessible(editedNode,MPSModuleRepository.getInstance()))) {
          return;
        }
        messages.value=ChangeEditorMessageFactory.createMessages(editedNode.getModel(),change,EditorHighlighter.this,null,false);
      }
    }
);
  }
  if (messages.value == null) {
    messages.value=ListSequence.fromList(new ArrayList<ChangeEditorMessage>());
  }
synchronized (myChangesMessages) {
    if (MapSequence.fromMap(myChangesMessages).containsKey(change)) {
      return ListSequence.fromList(new ArrayList<ChangeEditorMessage>());
    }
    MapSequence.fromMap(myChangesMessages).put(change,messages.value);
  }
  return messages.value;
}
