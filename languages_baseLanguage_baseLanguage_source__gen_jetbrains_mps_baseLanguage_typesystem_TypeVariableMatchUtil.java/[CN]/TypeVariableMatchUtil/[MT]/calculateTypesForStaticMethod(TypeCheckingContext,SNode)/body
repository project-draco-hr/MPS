{
  final SNode mdecl=SLinkOperations.getTarget(staticMethodCall,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141037l,"baseMethodDeclaration"));
  if (mdecl == null) {
    return;
  }
  final List<SNode> argTypes=new ArrayList<SNode>();
  for (  SNode a : ListSequence.fromList(SLinkOperations.getChildren(staticMethodCall,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141038l,"actualArgument")))) {
    ListSequence.fromList(argTypes).addElement(typeCheckingContext.typeOf(a,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","5977092449933510612",true));
  }
  final Map<SNode,SNode> subs=MapSequence.fromMap(new HashMap<SNode,SNode>());
  if (!(BehaviorReflection.invokeVirtual(Boolean.TYPE,staticMethodCall,"virtual_isInTypeInferenceContext_4837286298388660615",new Object[]{}))) {
    for (    SNode tvd : ListSequence.fromList(BaseMethodDeclaration_Behavior.call_getInferrableTypeVars_6848250892784543828(mdecl))) {
      MapSequence.fromMap(subs).put(tvd,((SLinkOperations.getTarget(tvd,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1109279763828l,1214996921760l,"bound")) == null) ? _quotation_createNode_hh0s94_a0a1a0a9a2() : SNodeOperations.copyNode(SLinkOperations.getTarget(tvd,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1109279763828l,1214996921760l,"bound")))));
    }
  }
  if (ListSequence.fromList(SLinkOperations.getChildren(staticMethodCall,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,4972241301747169160l,"typeArgument"))).isEmpty() && ListSequence.fromList(SLinkOperations.getChildren(mdecl,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1109279851642l,1109279881614l,"typeVariableDeclaration"))).isNotEmpty()) {
    for (    SNode tvd : ListSequence.fromList(SLinkOperations.getChildren(mdecl,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1109279851642l,1109279881614l,"typeVariableDeclaration")))) {
      if (!(MapSequence.fromMap(subs).containsKey(tvd))) {
        final SNode T_typevar_5977092449933510682=typeCheckingContext.createNewRuntimeTypesVariable();
        MapSequence.fromMap(subs).put(tvd,typeCheckingContext.getRepresentative(T_typevar_5977092449933510682));
      }
    }
    for (    SNode tvd : ListSequence.fromList(SLinkOperations.getChildren(mdecl,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1109279851642l,1109279881614l,"typeVariableDeclaration")))) {
      if ((SLinkOperations.getTarget(tvd,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1109279763828l,1214996921760l,"bound")) != null) && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(tvd,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1109279763828l,1214996921760l,"bound")),MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),4107091686347010317l,"jetbrains.mps.baseLanguage.structure.IGenericType"))) {
        BehaviorReflection.invokeVirtual(Void.class,SNodeOperations.cast(SLinkOperations.getTarget(tvd,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1109279763828l,1214996921760l,"bound")),MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),4107091686347010317l,"jetbrains.mps.baseLanguage.structure.IGenericType")),"virtual_collectGenericSubstitutions_4107091686347010321",new Object[]{subs});
{
          SNode _nodeToCheck_1029348928467=staticMethodCall;
          EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","5996131566378004095",0,null);
          typeCheckingContext.createLessThanInequality((SNode)MapSequence.fromMap(subs).get(tvd),(SNode)BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),SNodeOperations.cast(SNodeOperations.copyNode(SLinkOperations.getTarget(tvd,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1109279763828l,1214996921760l,"bound"))),MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),4107091686347010317l,"jetbrains.mps.baseLanguage.structure.IGenericType")),"virtual_expandGenerics_4107091686347199582",new Object[]{subs}),false,false,_info_12389875345);
        }
      }
    }
  }
 else {
{
      Iterator<SNode> tvd_it=ListSequence.fromList(SLinkOperations.getChildren(mdecl,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1109279851642l,1109279881614l,"typeVariableDeclaration"))).iterator();
      Iterator<SNode> targ_it=ListSequence.fromList(SLinkOperations.getChildren(staticMethodCall,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,4972241301747169160l,"typeArgument"))).iterator();
      SNode tvd_var;
      SNode targ_var;
      while (tvd_it.hasNext() && targ_it.hasNext()) {
        tvd_var=tvd_it.next();
        targ_var=targ_it.next();
        MapSequence.fromMap(subs).put(tvd_var,targ_var);
        if (SNodeOperations.isInstanceOf(targ_var,MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),4107091686347010317l,"jetbrains.mps.baseLanguage.structure.IGenericType"))) {
          BehaviorReflection.invokeVirtual(Void.class,SNodeOperations.cast(targ_var,MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),4107091686347010317l,"jetbrains.mps.baseLanguage.structure.IGenericType")),"virtual_collectGenericSubstitutions_4107091686347010321",new Object[]{subs});
        }
      }
    }
  }
  List<SNode> typel=BehaviorReflection.invokeVirtual((Class<List<SNode>>)((Class)Object.class),mdecl,"virtual_getTypeApplicationParameters_8277080359323839095",new Object[]{ListSequence.fromList(SLinkOperations.getChildren(staticMethodCall,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141038l,"actualArgument"))).count()});
  for (  SNode type : ListSequence.fromList(typel)) {
    if (SNodeOperations.isInstanceOf(type,MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),4107091686347010317l,"jetbrains.mps.baseLanguage.structure.IGenericType"))) {
      BehaviorReflection.invokeVirtual(Void.class,SNodeOperations.cast(type,MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),4107091686347010317l,"jetbrains.mps.baseLanguage.structure.IGenericType")),"virtual_collectGenericSubstitutions_4107091686347010321",new Object[]{subs});
    }
  }
  SNode retType=SLinkOperations.getTarget(mdecl,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123133l,"returnType"));
  if (SNodeOperations.isInstanceOf(retType,MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),4107091686347010317l,"jetbrains.mps.baseLanguage.structure.IGenericType"))) {
    BehaviorReflection.invokeVirtual(Void.class,SNodeOperations.cast(retType,MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),4107091686347010317l,"jetbrains.mps.baseLanguage.structure.IGenericType")),"virtual_collectGenericSubstitutions_4107091686347010321",new Object[]{subs});
    retType=BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),SNodeOperations.cast(retType,MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),4107091686347010317l,"jetbrains.mps.baseLanguage.structure.IGenericType")),"virtual_expandGenerics_4107091686347199582",new Object[]{subs});
  }
{
    SNode _nodeToCheck_1029348928467=staticMethodCall;
    EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","5977092449933510781",0,null);
    typeCheckingContext.createLessThanInequality((SNode)retType,(SNode)typeCheckingContext.typeOf(staticMethodCall,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","5977092449933510783",true),false,true,_info_12389875345);
  }
  List<SNode> actualArguments=ListSequence.fromList(new ArrayList<SNode>());
  ListSequence.fromList(actualArguments).addSequence(ListSequence.fromList(SLinkOperations.getChildren(staticMethodCall,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141038l,"actualArgument"))));
{
    Iterator<SNode> type_it=ListSequence.fromList(typel).iterator();
    Iterator<SNode> argt_it=ListSequence.fromList(argTypes).iterator();
    SNode type_var;
    SNode argt_var;
    while (type_it.hasNext() && argt_it.hasNext()) {
      type_var=type_it.next();
      argt_var=argt_it.next();
      final SNode actualArgument=ListSequence.fromList(actualArguments).removeElementAt(0);
      final SNode _type=type_var;
      if (SNodeOperations.isInstanceOf(_type,MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),4107091686347010317l,"jetbrains.mps.baseLanguage.structure.IGenericType"))) {
{
          final SNode A=argt_var;
          typeCheckingContext.whenConcrete(A,new Runnable(){
            public void run(){
{
                SNode _nodeToCheck_1029348928467=staticMethodCall;
                EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","5977092449933510825",0,null);
{
                  BaseQuickFixProvider intentionProvider=null;
                  intentionProvider=new BaseQuickFixProvider("jetbrains.mps.baseLanguage.typesystem.AddCast_QuickFix",false);
                  intentionProvider.putArgument("desiredType",_type);
                  intentionProvider.putArgument("expression",actualArgument);
                  _info_12389875345.addIntentionProvider(intentionProvider);
                }
                typeCheckingContext.createGreaterThanInequality((SNode)BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),SNodeOperations.cast(_type,MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),4107091686347010317l,"jetbrains.mps.baseLanguage.structure.IGenericType")),"virtual_expandGenerics_4107091686347199582",new Object[]{subs}),(SNode)typeCheckingContext.getExpandedNode(A),false,true,_info_12389875345);
              }
            }
          }
,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","5977092449933510823",false,false);
        }
      }
 else {
        if (!(typeCheckingContext.isSingleTypeComputation())) {
{
            SNode _nodeToCheck_1029348928467=staticMethodCall;
            EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","5977092449933510848",0,null);
{
              BaseQuickFixProvider intentionProvider=null;
              intentionProvider=new BaseQuickFixProvider("jetbrains.mps.baseLanguage.typesystem.AddCast_QuickFix",false);
              intentionProvider.putArgument("desiredType",_type);
              intentionProvider.putArgument("expression",actualArgument);
              _info_12389875345.addIntentionProvider(intentionProvider);
            }
            typeCheckingContext.createGreaterThanInequality((SNode)_type,(SNode)argt_var,true,true,_info_12389875345);
          }
        }
      }
    }
  }
  TypeVariableMatchUtil.checkTypeParametersMatchingTypeArguments(typeCheckingContext,mdecl,staticMethodCall,subs);
}
