{
  List<SNode> declarations=ListSequence.fromList(new ArrayList<SNode>());
  ListSequence.fromList(declarations).addSequence(ListSequence.fromList(SLinkOperations.getChildren(mdecl,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102463b447aL,0x102463bb98eL,"typeVariableDeclaration"))));
  for (  SNode typeArg : ListSequence.fromList(SLinkOperations.getChildren(mcall,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0x4500f31eb02a7788L,"typeArgument")))) {
    SNode decl=ListSequence.fromList(declarations).removeElementAt(0);
    if ((SLinkOperations.getTarget(decl,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x1024639ed74L,0x11ae375bda0L,"bound")) != null)) {
      if (!(Type__BehaviorDescriptor.isSupersetOf_id7PgshREdQKp.invoke(SLinkOperations.getTarget(decl,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x1024639ed74L,0x11ae375bda0L,"bound")),typeArg,substitutions))) {
{
          MessageTarget errorTarget=new NodeMessageTarget();
          IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(typeArg,"The type " + typeArg + " is not a valid substitute for the bounded parameter "+ decl,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","5977092449931173580",null,errorTarget);
        }
      }
    }
  }
}
