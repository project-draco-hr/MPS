{
  final SNode td=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.make.facet.structure.TargetDeclaration",false,false);
  return ListSequence.fromList(SLinkOperations.getTargets(td,"dependency",true)).<SNode>select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode d){
      return SLinkOperations.getTarget(d,"dependsOn",false);
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode td){
      return (td != null);
    }
  }
);
}
