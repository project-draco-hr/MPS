{
  ListSequence.fromList(this.myConstraints).addElement(new AnonymousClass_name_PropertyConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new Classifier_nestedName_PropertyConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new Classifier_resolveInfo_PropertyConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new Classifier_shortDescription_PropertyConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new Property_alias_PropertyConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new Property_name_PropertyConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new LocalVariableDeclaration_shortDescription_PropertyConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new ConstructorDeclaration_name_PropertyConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new ConstructorDeclaration_nestedName_PropertyConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new ConstructorDeclaration_resolveInfo_PropertyConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new ClassifierMember_shortDescription_PropertyConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new IValidIdentifier_name_PropertyConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new EnumValueOfExpression_shortDescription_PropertyConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new EnumValuesExpression_shortDescription_PropertyConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new ClosureParameterReference_closureParameter_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new StaticMethodCall_staticMethodDeclaration_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new ClassCreator_constructorDeclaration_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new TypeVariableReference_typeVariableDeclaration_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new ThisExpression_classConcept_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new SuperConstructorInvocation_constructorDeclaration_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new StaticFieldReference_staticFieldDeclaration_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new SuperMethodCall_instanceMethodDeclaration_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new ThisConstructorInvocation_constructorDeclaration_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new EnumConstantReference_enumConstantDeclaration_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new ParameterReference_parameterDeclaration_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new InstanceMethodCallOperation_instanceMethodDeclaration_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new AnnotationInstanceValue_key_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new LocalStaticFieldReference_staticFieldDeclaration_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new LocalStaticMethodCall_staticMethodDeclaration_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new PropertyReference_property_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new FieldReferenceOperation_fieldDeclaration_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new LocalVariableReference_localVariableDeclaration_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new VarVariableReference_declaration_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new TupleMemberAccessOperation_member_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new LoopLabelReference_loopLabel_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new StaticFieldReference_classifier_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new ClassifierClassExpression_classifier_ReferentConstraint());
  ListSequence.fromList(this.myConstraints).addElement(new Annotation_DefaultSearchScope());
  ListSequence.fromList(this.myConstraints).addElement(new Classifier_DefaultSearchScope());
  ListSequence.fromList(this.myConstraints).addElement(new Interface_DefaultSearchScope());
  ListSequence.fromList(this.myConstraints).addElement(new ClassConcept_DefaultSearchScope());
}
