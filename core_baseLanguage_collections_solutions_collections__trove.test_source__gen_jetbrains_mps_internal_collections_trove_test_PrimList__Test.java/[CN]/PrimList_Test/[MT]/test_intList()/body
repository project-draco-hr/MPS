{
  List<Integer> liPrim=ListSequence.fromList(new TIntArrayListDecorator(new TIntArrayList()));
  List<Integer> liBox=ListSequence.fromList(new ArrayList<Integer>());
  long mem1=this.getUsedMem();
  for (int i=100000; i < 200000; i++) {
    ListSequence.fromList(liPrim).addElement(i);
  }
  long mem2=this.getUsedMem();
  Assert.assertEquals((int)100000,(int)ListSequence.fromList(liPrim).count());
  ListSequence.fromList(liPrim).clear();
  long mem3=this.getUsedMem();
  for (int i=200000; i < 300000; i++) {
    ListSequence.fromList(liBox).addElement(i);
  }
  long mem4=this.getUsedMem();
  Assert.assertTrue(3 * (mem2 - mem1) < (mem4 - mem3));
  Assert.assertEquals((int)100000,(int)ListSequence.fromList(liBox).count());
}
