{
  List<Integer> liPrim=ListSequence.<Integer>fromList(new TIntArrayListDecorator(new TIntArrayList()));
  List<Integer> liBox=ListSequence.<Integer>fromList(new ArrayList<Integer>());
  long mem1=this.getUsedMem();
  for (int i=100000; i < 200000; i++) {
    ListSequence.<Integer>fromList(liPrim).addElement(i);
  }
  long mem2=this.getUsedMem();
  Assert.assertEquals((int)100000,(int)ListSequence.<Integer>fromList(liPrim).count());
  ListSequence.<Integer>fromList(liPrim).clear();
  long mem3=this.getUsedMem();
  for (int i=200000; i < 300000; i++) {
    ListSequence.<Integer>fromList(liBox).addElement(i);
  }
  long mem4=this.getUsedMem();
  Assert.assertTrue(2.5 * (mem2 - mem1) < (mem4 - mem3));
  Assert.assertEquals((int)100000,(int)ListSequence.<Integer>fromList(liBox).count());
}
