{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(8817443762339858024l,-6091446231697526094l),1174650418652l,1174650432090l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(8817443762339858024l,-6091446231697526094l),1174650418652l,1174650432090l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          List<SNode> result=new ArrayList<SNode>();
          SNode rule=SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(new UUID(8817443762339858024l,-6091446231697526094l),1174648085619l,"jetbrains.mps.lang.typesystem.structure.AbstractRule"),false,false);
          if (rule != null) {
            SNode appNode=SLinkOperations.getTarget(rule,MetaAdapterFactory.getContainmentLink(new UUID(8817443762339858024l,-6091446231697526094l),1174648085619l,1174648101952l,"applicableNode"));
            if (appNode != null) {
              ListSequence.fromList(result).addElement(appNode);
            }
            if (SNodeOperations.isInstanceOf(rule,MetaAdapterFactory.getConcept(new UUID(8817443762339858024l,-6091446231697526094l),1188811367543l,"jetbrains.mps.lang.typesystem.structure.ComparisonRule"))) {
              SNode appNode2=SLinkOperations.getTarget(SNodeOperations.cast(rule,MetaAdapterFactory.getConcept(new UUID(8817443762339858024l,-6091446231697526094l),1188811367543l,"jetbrains.mps.lang.typesystem.structure.ComparisonRule")),MetaAdapterFactory.getContainmentLink(new UUID(8817443762339858024l,-6091446231697526094l),1188811367543l,1188820750135l,"anotherNode"));
              if (appNode2 != null) {
                ListSequence.fromList(result).addElement(appNode2);
              }
            }
            if (SNodeOperations.isInstanceOf(rule,MetaAdapterFactory.getConcept(new UUID(8817443762339858024l,-6091446231697526094l),1201607707634l,"jetbrains.mps.lang.typesystem.structure.InequationReplacementRule"))) {
              SNode appNode2=SLinkOperations.getTarget(SNodeOperations.cast(rule,MetaAdapterFactory.getConcept(new UUID(8817443762339858024l,-6091446231697526094l),1201607707634l,"jetbrains.mps.lang.typesystem.structure.InequationReplacementRule")),MetaAdapterFactory.getContainmentLink(new UUID(8817443762339858024l,-6091446231697526094l),1201607707634l,1201607798918l,"supertypeNode"));
              if (appNode2 != null) {
                ListSequence.fromList(result).addElement(appNode2);
              }
            }
          }
          SNode coerceStatement=SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(new UUID(8817443762339858024l,-6091446231697526094l),1176558773329l,"jetbrains.mps.lang.typesystem.structure.CoerceStatement"),false,false);
          while (coerceStatement != null) {
            if (SLinkOperations.getTarget(coerceStatement,MetaAdapterFactory.getContainmentLink(new UUID(8817443762339858024l,-6091446231697526094l),1176558773329l,1176558876970l,"pattern")) != null) {
              ListSequence.fromList(result).addElement(SLinkOperations.getTarget(coerceStatement,MetaAdapterFactory.getContainmentLink(new UUID(8817443762339858024l,-6091446231697526094l),1176558773329l,1176558876970l,"pattern")));
            }
            coerceStatement=SNodeOperations.getNodeAncestor(coerceStatement,MetaAdapterFactory.getConcept(new UUID(8817443762339858024l,-6091446231697526094l),1176558773329l,"jetbrains.mps.lang.typesystem.structure.CoerceStatement"),false,false);
          }
          SNode matchStatementItem=SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(new UUID(8817443762339858024l,-6091446231697526094l),1177514840044l,"jetbrains.mps.lang.typesystem.structure.MatchStatementItem"),false,false);
          while (matchStatementItem != null) {
            if (SLinkOperations.getTarget(matchStatementItem,MetaAdapterFactory.getContainmentLink(new UUID(8817443762339858024l,-6091446231697526094l),1177514840044l,1177514849858l,"condition")) != null) {
              ListSequence.fromList(result).addElement(SLinkOperations.getTarget(matchStatementItem,MetaAdapterFactory.getContainmentLink(new UUID(8817443762339858024l,-6091446231697526094l),1177514840044l,1177514849858l,"condition")));
            }
            matchStatementItem=SNodeOperations.getNodeAncestor(matchStatementItem,MetaAdapterFactory.getConcept(new UUID(8817443762339858024l,-6091446231697526094l),1177514840044l,"jetbrains.mps.lang.typesystem.structure.MatchStatementItem"),false,false);
          }
          return result;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_b5wqlc_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
