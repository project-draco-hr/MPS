{
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0bf,descriptor.getConceptFqName())) {
case 0:
    return getAbstractOperationParameterEditorAspect();
case 1:
  return getAllAttributeQualifierEditorAspect();
case 2:
return getAttributeAccessEditorAspect();
case 3:
return getCheckedModuleReferenceEditorAspect();
case 4:
return getChildNodeRefExpressionEditorAspect();
case 5:
return getConceptFqNameRefExpressionEditorAspect();
case 6:
return getConceptPropertyNameRefExpressionEditorAspect();
case 7:
return getConceptProperty_SetOperationEditorAspect();
case 8:
return getConceptRefExpressionEditorAspect();
case 9:
return getConceptReferenceEditorAspect();
case 10:
return getConceptSwitchStatementEditorAspect();
case 11:
return getConceptSwitchStatementCaseEditorAspect();
case 12:
return getConcept_FindInstancesEditorAspect();
case 13:
return getConcept_GetAllSubConceptsEditorAspect();
case 14:
return getConcept_GetAllSuperConceptsEditorAspect();
case 15:
return getConcept_GetDirectSuperConceptsEditorAspect();
case 16:
return getConcept_GetHierarchyEditorAspect();
case 17:
return getConcept_IsExactlyOperationEditorAspect();
case 18:
return getConcept_IsSubConceptOfOperationEditorAspect();
case 19:
return getConcept_IsSuperConceptOfOperationEditorAspect();
case 20:
return getConcept_NewInstanceEditorAspect();
case 21:
return getEnumMemberReferenceEditorAspect();
case 22:
return getEnumMemberValueRefExpressionEditorAspect();
case 23:
return getEnumMember_NameOperationEditorAspect();
case 24:
return getEnumMember_ValueOperationEditorAspect();
case 25:
return getEqualsStructurallyExpressionEditorAspect();
case 26:
return getIfInstanceOfStatementEditorAspect();
case 27:
return getIfInstanceOfVariableEditorAspect();
case 28:
return getLinkAttributeQualifierEditorAspect();
case 29:
return getLinkList_AddAllOperationEditorAspect();
case 30:
return getLinkList_AddChildOperationEditorAspect();
case 31:
return getLinkList_AddNewChildOperationEditorAspect();
case 32:
return getLinkList_InsertChildFirstOperationEditorAspect();
case 33:
return getLinkList_RemoveAllChildrenOperationEditorAspect();
case 34:
return getLinkNameRefExpressionEditorAspect();
case 35:
return getLinkQualifierEditorAspect();
case 36:
return getLinkRefExpressionEditorAspect();
case 37:
return getLinkRefQualifierEditorAspect();
case 38:
return getLink_DeleteChildOperationEditorAspect();
case 39:
return getLink_SetNewChildOperationEditorAspect();
case 40:
return getLink_SetTargetOperationEditorAspect();
case 41:
return getModelReferenceExpressionEditorAspect();
case 42:
return getModel_AddRootOperationEditorAspect();
case 43:
return getModel_CreateNewNodeOperationEditorAspect();
case 44:
return getModel_CreateNewRootNodeOperationEditorAspect();
case 45:
return getModel_GetModuleEditorAspect();
case 46:
return getModel_NodesIncludingImportedOperationEditorAspect();
case 47:
return getModel_NodesOperationEditorAspect();
case 48:
return getModel_RootsIncludingImportedOperationEditorAspect();
case 49:
return getModel_RootsOperationEditorAspect();
case 50:
return getModuleReferenceExpressionEditorAspect();
case 51:
return getNodeAttributeQualifierEditorAspect();
case 52:
return getNodePointerExpressionEditorAspect();
case 53:
return getNodeRefExpressionEditorAspect();
case 54:
return getNode_ConceptMethodCallEditorAspect();
case 55:
return getNode_CopyOperationEditorAspect();
case 56:
return getNode_DeleteOperationEditorAspect();
case 57:
return getNode_DetachOperationEditorAspect();
case 58:
return getNode_GetAllSiblingsOperationEditorAspect();
case 59:
return getNode_GetAncestorOperationEditorAspect();
case 60:
return getNode_GetAncestorsOperationEditorAspect();
case 61:
return getNode_GetChildrenOperationEditorAspect();
case 62:
return getNode_GetConceptOperationEditorAspect();
case 63:
return getNode_GetContainingLinkOperationEditorAspect();
case 64:
return getNode_GetContainingRoleOperationEditorAspect();
case 65:
return getNode_GetContainingRootOperationEditorAspect();
case 66:
return getNode_GetDescendantsOperationEditorAspect();
case 67:
return getNode_GetIndexInParentOperationEditorAspect();
case 68:
return getNode_GetModelOperationEditorAspect();
case 69:
return getNode_GetNextSiblingOperationEditorAspect();
case 70:
return getNode_GetNextSiblingsOperationEditorAspect();
case 71:
return getNode_GetParentOperationEditorAspect();
case 72:
return getNode_GetPrevSiblingOperationEditorAspect();
case 73:
return getNode_GetPrevSiblingsOperationEditorAspect();
case 74:
return getNode_GetReferenceOperationEditorAspect();
case 75:
return getNode_GetReferencesOperationEditorAspect();
case 76:
return getNode_GetReferentSearchScopeOperationEditorAspect();
case 77:
return getNode_InsertNewNextSiblingOperationEditorAspect();
case 78:
return getNode_InsertNewPrevSiblingOperationEditorAspect();
case 79:
return getNode_InsertNextSiblingOperationEditorAspect();
case 80:
return getNode_InsertPrevSiblingOperationEditorAspect();
case 81:
return getNode_IsAttributeOperationEditorAspect();
case 82:
return getNode_IsInstanceOfOperationEditorAspect();
case 83:
return getNode_IsNotNullOperationEditorAspect();
case 84:
return getNode_IsNullOperationEditorAspect();
case 85:
return getNode_IsRoleOperationEditorAspect();
case 86:
return getNode_ReplaceWithAnotherOperationEditorAspect();
case 87:
return getNode_ReplaceWithNewOperationEditorAspect();
case 88:
return getOperationParm_ConceptEditorAspect();
case 89:
return getOperationParm_ConceptListEditorAspect();
case 90:
return getOperationParm_LinkQualifierEditorAspect();
case 91:
return getOperationParm_StopConceptListEditorAspect();
case 92:
return getPoundExpressionEditorAspect();
case 93:
return getPropertyAttributeQualifierEditorAspect();
case 94:
return getPropertyNameRefExpressionEditorAspect();
case 95:
return getPropertyQualifierEditorAspect();
case 96:
return getProperty_HasValue_EnumEditorAspect();
case 97:
return getProperty_HasValue_SimpleEditorAspect();
case 98:
return getProperty_SetOperationEditorAspect();
case 99:
return getReadConceptReferenceExpressionEditorAspect();
case 100:
return getRefConcept_ReferenceEditorAspect();
case 101:
return getReference_GetLinkDeclarationOperationEditorAspect();
case 102:
return getReference_GetResolveInfoEditorAspect();
case 103:
return getReference_GetRoleOperationEditorAspect();
case 104:
return getReference_GetTargetOperationEditorAspect();
case 105:
return getSConceptLinkAccessEditorAspect();
case 106:
return getSConceptPropertyAccessEditorAspect();
case 107:
return getSConceptTypeEditorAspect();
case 108:
return getSEnumMemberTypeEditorAspect();
case 109:
return getSEnumOperationInvocationEditorAspect();
case 110:
return getSEnum_MemberForNameOperationEditorAspect();
case 111:
return getSEnum_MemberForValueOperationEditorAspect();
case 112:
return getSEnum_MemberOperationEditorAspect();
case 113:
return getSEnum_MembersOperationEditorAspect();
case 114:
return getSLinkAccessEditorAspect();
case 115:
return getSLinkImplicitSelectEditorAspect();
case 116:
return getSLinkListAccessEditorAspect();
case 117:
return getSModelTypeEditorAspect();
case 118:
return getSNodeCreatorEditorAspect();
case 119:
return getSNodeListCreatorEditorAspect();
case 120:
return getSNodeListTypeEditorAspect();
case 121:
return getSNodeOperationEditorAspect();
case 122:
return getSNodeTypeEditorAspect();
case 123:
return getSNodeTypeCastExpressionEditorAspect();
case 124:
return getSPropertyAccessEditorAspect();
case 125:
return getSReferenceTypeEditorAspect();
case 126:
return getSearchScopeTypeEditorAspect();
case 127:
return getSearchScope_ContainsOperationEditorAspect();
case 128:
return getSemanticDowncastExpressionEditorAspect();
case 129:
return getStaticConceptMethodCallEditorAspect();
case 130:
return get_LinkAccessTEditorAspect();
default :
}
return null;
}
