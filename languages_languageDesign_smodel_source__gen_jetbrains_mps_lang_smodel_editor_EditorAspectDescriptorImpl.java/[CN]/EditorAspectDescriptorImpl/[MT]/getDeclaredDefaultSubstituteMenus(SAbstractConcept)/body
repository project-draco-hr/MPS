{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_xbvbvu_a0f.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return Collections.<SubstituteMenu>singletonList(new AbstractOperationParameter_SubstituteMenu());
      }
    break;
case 1:
  if (true) {
    return Collections.<SubstituteMenu>singletonList(new ChildNodeRefExpression_SubstituteMenu());
  }
break;
case 2:
if (true) {
return Collections.<SubstituteMenu>singletonList(new Concept_GetHierarchy_SubstituteMenu());
}
break;
case 3:
if (true) {
return Collections.<SubstituteMenu>singletonList(new OfConceptOperation_SubstituteMenu());
}
break;
case 4:
if (true) {
return Collections.<SubstituteMenu>singletonList(new OperationParm_Concept_SubstituteMenu());
}
break;
case 5:
if (true) {
return Collections.<SubstituteMenu>singletonList(new OperationParm_ConceptList_SubstituteMenu());
}
break;
case 6:
if (true) {
return Collections.<SubstituteMenu>singletonList(new OperationParm_Inclusion_SubstituteMenu());
}
break;
case 7:
if (true) {
return Collections.<SubstituteMenu>singletonList(new OperationParm_LinkQualifier_SubstituteMenu());
}
break;
case 8:
if (true) {
return Collections.<SubstituteMenu>singletonList(new OperationParm_Root_SubstituteMenu());
}
break;
case 9:
if (true) {
return Collections.<SubstituteMenu>singletonList(new OperationParm_SameMetaLevel_SubstituteMenu());
}
break;
case 10:
if (true) {
return Collections.<SubstituteMenu>singletonList(new OperationParm_StopConceptList_SubstituteMenu());
}
break;
case 11:
if (true) {
return Collections.<SubstituteMenu>singletonList(new SConceptOperation_SubstituteMenu());
}
break;
case 12:
if (true) {
return Collections.<SubstituteMenu>singletonList(new SConceptTypeCastExpression_SubstituteMenu());
}
break;
case 13:
if (true) {
return Collections.<SubstituteMenu>singletonList(new SNodeOperation_SubstituteMenu());
}
break;
case 14:
if (true) {
return Collections.<SubstituteMenu>singletonList(new SNodeTypeCastExpression_SubstituteMenu());
}
break;
case 15:
if (true) {
return Collections.<SubstituteMenu>singletonList(new SemanticDowncastExpression_SubstituteMenu());
}
break;
default :
}
}
return Collections.<SubstituteMenu>emptyList();
}
