{
  SAbstractConcept cncpt=concept;
switch (index_xbvbvu_a0f.index(cncpt)) {
case 0:
    return Collections.<SubstituteMenu>singletonList(new AbstractOperationParameter_SubstituteMenu());
case 1:
  return Collections.<SubstituteMenu>singletonList(new ChildNodeRefExpression_SubstituteMenu());
case 2:
return Collections.<SubstituteMenu>singletonList(new Concept_GetHierarchy_SubstituteMenu());
case 3:
return Collections.<SubstituteMenu>singletonList(new OfConceptOperation_SubstituteMenu());
case 4:
return Collections.<SubstituteMenu>singletonList(new OperationParm_Concept_SubstituteMenu());
case 5:
return Collections.<SubstituteMenu>singletonList(new OperationParm_ConceptList_SubstituteMenu());
case 6:
return Collections.<SubstituteMenu>singletonList(new OperationParm_Inclusion_SubstituteMenu());
case 7:
return Collections.<SubstituteMenu>singletonList(new OperationParm_LinkQualifier_SubstituteMenu());
case 8:
return Collections.<SubstituteMenu>singletonList(new OperationParm_Root_SubstituteMenu());
case 9:
return Collections.<SubstituteMenu>singletonList(new OperationParm_SameMetaLevel_SubstituteMenu());
case 10:
return Collections.<SubstituteMenu>singletonList(new OperationParm_StopConceptList_SubstituteMenu());
case 11:
return Collections.<SubstituteMenu>singletonList(new SConceptOperation_SubstituteMenu());
case 12:
return Collections.<SubstituteMenu>singletonList(new SConceptTypeCastExpression_SubstituteMenu());
case 13:
return Collections.<SubstituteMenu>singletonList(new SConceptTypeLiteral_SubstituteMenu());
case 14:
return Collections.<SubstituteMenu>singletonList(new SNodeOperation_SubstituteMenu());
case 15:
return Collections.<SubstituteMenu>singletonList(new SNodeTypeCastExpression_SubstituteMenu());
case 16:
return Collections.<SubstituteMenu>singletonList(new SemanticDowncastExpression_SubstituteMenu());
default :
}
return Collections.<SubstituteMenu>emptyList();
}
