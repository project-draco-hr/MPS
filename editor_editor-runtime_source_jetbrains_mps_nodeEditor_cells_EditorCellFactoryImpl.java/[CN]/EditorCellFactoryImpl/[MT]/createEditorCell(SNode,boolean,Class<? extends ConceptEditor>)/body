{
  Set<Class<? extends ConceptEditor>> set;
  if (myUsedEditors.containsKey(node)) {
    set=myUsedEditors.get(node);
  }
 else {
    set=new HashSet<Class<? extends ConceptEditor>>();
    myUsedEditors.put(node,set);
  }
  set.add(excludedEditor);
  ConceptDescriptor conceptDescriptor=ConceptRegistry.getInstance().getConceptDescriptor(node.getConcept());
  ConceptEditor editor=myConceptEditorRegistry.getEditor(conceptDescriptor,Collections.<Class<? extends BaseConceptEditor>>unmodifiableSet(set));
  EditorCell editorCell=createEditorCell_internal(node,isInspector,conceptDescriptor,editor);
  set.remove(excludedEditor);
  if (set.isEmpty()) {
    myUsedEditors.remove(node);
  }
  return editorCell;
}
