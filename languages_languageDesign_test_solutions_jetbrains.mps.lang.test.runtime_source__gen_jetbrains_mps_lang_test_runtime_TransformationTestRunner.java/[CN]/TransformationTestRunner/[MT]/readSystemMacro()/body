{
  final Map<String,String> macros=MapSequence.fromMap(new HashMap<String,String>());
  for (  IMapping<Object,Object> property : MapSequence.fromMap(System.getProperties())) {
    if (property.key() instanceof String) {
      String key=(((String)property.key()));
      if (StringUtils.isNotEmpty(key) && key.startsWith(BaseTransformationTest.PATH_MACRO_PREFIX)) {
        if (property.value() instanceof String) {
          String canonicalPath=PathUtil.getCanonicalPath(((String)property.value()));
          File file=new File(canonicalPath);
          if (file.exists() && file.isDirectory()) {
            MapSequence.fromMap(macros).put(key.substring(BaseTransformationTest.PATH_MACRO_PREFIX.length()),canonicalPath);
          }
        }
      }
    }
  }
  PathMacros.getInstance().addMacrosProvider(new PathMacrosProvider(){
    public Set<String> getNames(){
      return Collections.unmodifiableSet(MapSequence.fromMap(macros).keySet());
    }
    public Set<String> getUserNames(){
      return Collections.unmodifiableSet(MapSequence.fromMap(macros).keySet());
    }
    public String getValue(    String p0){
      return MapSequence.fromMap(macros).get(p0);
    }
  }
);
}
