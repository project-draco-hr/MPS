{
  ListSequence.fromList(SNodeOperations.getDescendants(getAccessor,"jetbrains.mps.baseLanguage.structure.IMethodCall",false,new String[]{})).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode methodCall){
      SNode method=SLinkOperations.getTarget(methodCall,"baseMethodDeclaration",false);
      if ((method == null)) {
        return;
      }
      Set<SNode> throwables=SetSequence.fromSetWithValues(new HashSet<SNode>(),SLinkOperations.getTargets(method,"throwsItem",true));
      RulesFunctions_BaseLanguage.check(typeCheckingContext,throwables,methodCall);
    }
  }
);
}
