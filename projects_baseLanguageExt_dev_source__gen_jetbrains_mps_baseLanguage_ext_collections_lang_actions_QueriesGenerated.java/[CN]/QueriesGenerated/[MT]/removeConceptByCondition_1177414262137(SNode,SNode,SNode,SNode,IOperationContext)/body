{
  boolean applicableToSequence=false;
  boolean applicableToList=false;
  if (SNodeOperations.isInstanceOf(parentNode,"jetbrains.mps.baseLanguage.ext.collections.lang.structure.SequenceOperationExpression")) {
    SNode leftExpression=SLinkOperations.getTarget(parentNode,"leftExpression",true);
    SNode leftType=TypeChecker.getInstance().getTypeOf(leftExpression);
    if (TypeChecker.getInstance().getRuntimeSupport().coerce(leftType,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.ext.collections.lang.structure.SequenceType"),false) != null) {
      applicableToSequence=true;
    }
    if (TypeChecker.getInstance().getRuntimeSupport().coerce(leftType,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.ext.collections.lang.structure.ListType"),false) != null) {
      applicableToList=true;
    }
  }
  if (!(applicableToSequence)) {
    return true;
  }
  if (applicableToList) {
    return false;
  }
  return SConceptOperations.isSubConceptOf(concept,"jetbrains.mps.baseLanguage.ext.collections.lang.structure.AbstractListOperation");
}
