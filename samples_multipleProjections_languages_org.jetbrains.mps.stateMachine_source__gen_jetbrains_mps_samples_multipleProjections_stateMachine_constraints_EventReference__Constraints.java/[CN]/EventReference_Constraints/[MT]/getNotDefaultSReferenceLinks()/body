{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(5982244781479775262l,-5019580523904041561l),763922957008729158l,763922957008729159l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(5982244781479775262l,-5019580523904041561l),763922957008729158l,763922957008729159l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return SLinkOperations.getChildren(AbstractStateMachineElement_Behavior.call_getStateMachine_7943979732673457916(SNodeOperations.cast(_context.getEnclosingNode(),"jetbrains.mps.samples.multipleProjections.stateMachine.structure.Transition")),MetaAdapterFactory.getContainmentLink(new UUID(5982244781479775262l,-5019580523904041561l),763922957008726945l,763922957008726947l,"events"));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_fz49k4_a0a1a0a0a1a0b0a1a3;
        }
      }
;
    }
  }
);
  return references;
}
