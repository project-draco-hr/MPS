{
  if (thisEditor == otherEditor) {
    return;
  }
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      int viewY=thisEditor.getViewport().getViewPosition().y;
      SNode visibleNode=thisEditor.getEditedNode();
      if (viewY > thisEditor.getRootCell().getY()) {
        visibleNode=check_s6qw4f_a0a0c0a1a0(thisEditor.findCellWeak(1,viewY));
      }
      while (visibleNode != null) {
        SNodeId id=visibleNode.getSNodeId();
        int newRelativePos=viewY - thisEditor.findNodeCell(visibleNode).getY();
        SNode sNode=otherEditor.getEditedNode();
        if (sNode == null) {
          return;
        }
        SNode nodeById=sNode.getModel().getNodeById(id);
        EditorCell oldCell=otherEditor.findNodeCell(nodeById);
        Point position=thisEditor.getViewport().getViewPosition();
        if (oldCell != null) {
          otherEditor.getViewport().setViewPosition(new Point((int)position.getX(),newRelativePos + oldCell.getY()));
          Rectangle viewRect=otherEditor.getViewport().getViewRect();
          if (viewRect.y + viewRect.height > otherEditor.getHeight()) {
            otherEditor.getViewport().setViewPosition(new Point(viewRect.x,otherEditor.getHeight() - viewRect.height));
          }
          return;
        }
        SNode prevSibling=SNodeOperations.getPrevSibling(visibleNode);
        if (visibleNode.getRole_().equals(check_s6qw4f_a0a9a3a0b0a(prevSibling))) {
          visibleNode=prevSibling;
        }
 else {
          visibleNode=visibleNode.getParent();
        }
      }
    }
  }
);
}
