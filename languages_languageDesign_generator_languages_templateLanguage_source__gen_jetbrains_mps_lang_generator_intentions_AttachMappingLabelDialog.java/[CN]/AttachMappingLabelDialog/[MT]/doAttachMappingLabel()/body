{
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      SNode mappingLabel=MappingLabelUtil.findOrCreateMappingLabelForName(AttachMappingLabelDialog.this.myTemplateNode,AttachMappingLabelDialog.this.myResultLabelName);
      SNode existingMacro=ListSequence.<SNode>fromList(AttributeOperations.getAttributeList(AttachMappingLabelDialog.this.myTemplateNode,new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.NodeMacro")))).last();
      if (existingMacro != null) {
        SLinkOperations.setTarget(existingMacro,"mappingLabel",mappingLabel,false);
        return;
      }
      SNode templateFragment=AttributeOperations.getAttribute(AttachMappingLabelDialog.this.myTemplateNode,new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.TemplateFragment")));
      if (templateFragment != null) {
        SLinkOperations.setTarget(templateFragment,"labelDeclaration",mappingLabel,false);
        return;
      }
      SNode newMacro=SNodeFactoryOperations.addNewAttribute(AttachMappingLabelDialog.this.myTemplateNode,new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.NodeMacro")),"jetbrains.mps.lang.generator.structure.MapSrcNodeMacro");
      SLinkOperations.setTarget(newMacro,"mappingLabel",mappingLabel,false);
    }
  }
);
}
