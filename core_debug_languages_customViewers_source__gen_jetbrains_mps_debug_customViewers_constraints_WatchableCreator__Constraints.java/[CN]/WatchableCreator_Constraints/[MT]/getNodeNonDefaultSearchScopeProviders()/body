{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("watchable",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      List<SNode> result=new ArrayList<SNode>();
      for (      SNode container : SModelOperations.getRoots(_context.getModel(),"jetbrains.mps.debug.customViewers.structure.CustomWatchablesContainer")) {
        ListSequence.fromList(result).addSequence(ListSequence.fromList(SLinkOperations.getTargets(container,"watchable",true)));
      }
      return result;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:90c5d87d-81cd-4991-8860-6ac3ba3269c4(jetbrains.mps.debug.customViewers.constraints)","5264817233616806018");
    }
  }
);
  return result;
}
