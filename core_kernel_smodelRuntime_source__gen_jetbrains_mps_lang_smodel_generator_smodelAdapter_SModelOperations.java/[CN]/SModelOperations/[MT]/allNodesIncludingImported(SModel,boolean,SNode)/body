{
  List<SModel> modelsList=new ArrayList<SModel>();
  modelsList.add(sModel);
  List<SModel> modelDescriptors=jetbrains.mps.smodel.SModelOperations.allImportedModels(sModel);
  for (  SModel descriptor : modelDescriptors) {
    modelsList.add(descriptor);
  }
  List<SNode> resultNodes=new ArrayList<SNode>();
  for (  SModel aModel : modelsList) {
    Iterable<SNode> nodes=(roots ? aModel.getRootNodes() : SNodeUtil.getDescendants(aModel));
    if (concept == null) {
      resultNodes.addAll(IterableUtil.asList(nodes));
    }
 else     if (roots) {
      ListSequence.fromList(resultNodes).addSequence(Sequence.fromIterable(nodes).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.isInstanceOf(((SNode)it),jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.asSConcept(concept));
        }
      }
));
    }
 else {
      resultNodes.addAll(IterableUtil.asList(FastNodeFinderManager.get(aModel).getNodes(NameUtil.nodeFQName(concept),true)));
    }
  }
  return resultNodes;
}
