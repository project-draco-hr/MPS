{
  SemanticNodeEditor semanticNodeEditor=(SemanticNodeEditor)node.getUserObject(this.getClass());
  if (semanticNodeEditor != null) {
    return semanticNodeEditor;
  }
  SemanticLanguage[] languages=myEditorContext.getLanguages();
  SemanticLanguage supportingLanguage=null;
  for (int i=0; i < languages.length; i++) {
    SemanticLanguage language=languages[i];
    if (language.supports(node)) {
      supportingLanguage=language;
      break;
    }
  }
  if (supportingLanguage == null) {
    System.err.println("Couldn't find supporting language for node : " + node.getDebugText());
    return null;
  }
  semanticNodeEditor=loadEditor(node,supportingLanguage);
  if (semanticNodeEditor != null) {
    node.putUserObject(this.getClass(),semanticNodeEditor);
  }
  return semanticNodeEditor;
}
