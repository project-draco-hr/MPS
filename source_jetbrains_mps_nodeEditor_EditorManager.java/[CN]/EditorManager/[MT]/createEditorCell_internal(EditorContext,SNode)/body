{
  INodeEditor editor=getEditor(context,node);
  EditorCell nodeCell;
  try {
    CellBuildModelAccessListener modelAccessListener=new CellBuildModelAccessListener(context.getNodeEditorComponent());
    ModelAccessCaster.setModelReadAccessListener(modelAccessListener);
    nodeCell=editor.createEditorCell(context,node);
    modelAccessListener.recordFinished(nodeCell);
  }
 catch (  Exception e) {
    LOG.error("Failed to create cell for node " + node.getDebugText(),e);
    nodeCell=EditorCell_Error.create(context,node,"!exception!:" + node.getDebugText());
  }
 finally {
    ModelAccessCaster.removeModelAccessListener();
  }
  if (node.getChildCount(NODE_TO_PLACE_AFTER) == 0) {
    return nodeCell;
  }
  EditorCell_Collection rowWrapper=EditorCell_Collection.createHorizontal(context,node);
  rowWrapper.setSelectable(false);
  rowWrapper.addEditorCell(nodeCell);
  SNode afterNode=node.getChild(NODE_TO_PLACE_AFTER);
  rowWrapper.addEditorCell(getEditor(context,afterNode).createEditorCell(context,afterNode));
  return rowWrapper;
}
