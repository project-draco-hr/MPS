{
  SemanticNodeEditor editor=getEditor(node);
  EditorCell nodeCell=createEditorCell(editor,node);
  if (node.getReferenceCount(NODE_BEFORE) == 0 && node.getReferenceCount(NODE_AFTER) == 0) {
    installDefaultActions(nodeCell);
    return nodeCell;
  }
  EditorCell_Collection rowWrapper=EditorCell_Collection.createHorizontal(myEditorContext,node);
  rowWrapper.setSelectable(false);
  Iterator<SemanticNode> before=node.referents(NODE_BEFORE);
  while (before.hasNext()) {
    SemanticNode beforeNode=before.next();
    rowWrapper.addEditorCell(createEditorCell(getEditor(beforeNode),beforeNode));
  }
  rowWrapper.addEditorCell(nodeCell);
  Iterator<SemanticNode> after=node.referents(NODE_AFTER);
  while (after.hasNext()) {
    SemanticNode afterNode=after.next();
    rowWrapper.addEditorCell(createEditorCell(getEditor(afterNode),afterNode));
  }
  installDefaultActions(rowWrapper);
  return rowWrapper;
}
