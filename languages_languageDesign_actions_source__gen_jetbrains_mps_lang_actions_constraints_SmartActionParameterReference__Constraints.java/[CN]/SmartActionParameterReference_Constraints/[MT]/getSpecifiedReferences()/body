{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0xaee9cad2acd44608L,0xaef20004f6a1cdbdL,0x11f8ef01705L,0x11f8ef0b8d5L,"smartActionParameter"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xaee9cad2acd44608L,0xaef20004f6a1cdbdL,0x11f8ef01705L,0x11f8ef0b8d5L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          SNode ancestor=SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(0xaee9cad2acd44608L,0xaef20004f6a1cdbdL,0x11f8eca117bL,"jetbrains.mps.lang.actions.structure.GenerateCodeAction"),false,false);
          if ((ancestor == null)) {
            return Sequence.fromIterable(Collections.<SNode>emptyList());
          }
          return SLinkOperations.getChildren(ancestor,MetaAdapterFactory.getContainmentLink(0xaee9cad2acd44608L,0xaef20004f6a1cdbdL,0x11f8eca117bL,0x11f8ef1f9f5L,"smartActionParameter"));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_lw5vd8_a0a1a0a0a1a0b0a1a2;
        }
      }
;
    }
  }
);
  return references;
}
