{
  IScope scope=operationContext.getScope();
  LinkDeclaration smartRef=ReferenceConceptUtil.getCharacteristicReference(applicableConcept);
  if (smartRef != null) {
    List<INodeSubstituteAction> smartActions=createSmartReferenceActions(applicableConcept,smartRef,parentNode,currentChild,setter,scope);
    if (smartActions != null) {
      return smartActions;
    }
 else {
      return Collections.emptyList();
    }
  }
 else {
    String conceptFqName=NameUtil.nodeFQName(applicableConcept);
    if (BehaviorManager.getInstance().isApplicableInContext(conceptFqName,operationContext,parentNode)) {
      return CollectionUtil.asList((INodeSubstituteAction)new DefaultChildNodeSubstituteAction(BaseAdapter.fromAdapter(applicableConcept),parentNode,currentChild,setter,scope));
    }
 else {
      return new ArrayList<INodeSubstituteAction>();
    }
  }
}
