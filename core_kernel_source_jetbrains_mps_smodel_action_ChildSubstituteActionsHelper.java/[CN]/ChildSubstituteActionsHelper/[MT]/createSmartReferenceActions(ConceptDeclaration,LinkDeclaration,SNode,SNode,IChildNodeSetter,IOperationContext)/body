{
  SearchScopeStatus status=ModelConstraintsUtil.getSearchScope(parentNode,null,referenceNodeConcept,smartReference,context);
  if (status.isError())   return null;
  List<INodeSubstituteAction> actions=new ArrayList<INodeSubstituteAction>();
  final LinkDeclaration referenceLink_final=smartReference;
  ISearchScope searchScope=status.getSearchScope();
  IReferencePresentation presentation=status.getPresentation();
  final AbstractConceptDeclaration targetConcept=smartReference.getTarget();
  List<SNode> referentNodes=searchScope.getNodes(new IsInstanceCondition(targetConcept));
  for (  SNode referentNode : referentNodes) {
    actions.add(new SmartRefChildNodeSubstituteAction(referentNode,parentNode,currentChild,childSetter,context.getScope(),referenceNodeConcept,referenceLink_final,presentation));
  }
  return actions;
}
