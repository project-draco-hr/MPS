{
  schedule(modelNode,new Runnable(){
    @Override public void run(){
      if (isTimeToRelax()) {
        return;
      }
      SModel md=modelNode.getModel();
      if (!(md instanceof EditableSModel)) {
        return;
      }
      if (!(md instanceof GeneratableSModel)) {
        return;
      }
      if (md.getModule() == null)       return;
      boolean wasChanged=((EditableSModel)md).isChanged();
      if (!wasChanged && !((GeneratableSModel)md).isGeneratable()) {
        return;
      }
      final ProjectModuleTreeNode moduleNode=getContainingModuleNode(modelNode);
      if (moduleNode == null) {
        return;
      }
      if (moduleNode.getModule().isReadOnly()) {
        new StatusUpdate(modelNode).update(GenerationStatus.READONLY);
        new StatusUpdate(moduleNode).update(GenerationStatus.READONLY);
        return;
      }
      new StatusUpdate(modelNode).update();
      GenerationStatus s=new StatusUpdate(moduleNode).update();
      if (moduleNode.getModule() instanceof Generator) {
        final ProjectModuleTreeNode languageNode=getContainingModuleNode(moduleNode);
        if (languageNode != null) {
          new StatusUpdate(languageNode).update(s);
        }
      }
      propagateStatusToNamespaceNodes(moduleNode,s);
    }
  }
);
}
