{
  List<SNode> _results=new ArrayList<SNode>();
{
    SNode current=node;
{
      ICursor<SNode> _zCursor17=CursorFactory.createCursor(SLinkOperations.getTargets(current,"extendedInterface",true));
      try {
        while (_zCursor17.moveToNext()) {
          SNode ancestor=_zCursor17.getCurrent();
          ListOperations.addElement(_results,ancestor);
{
            ICursor<SNode> _zCursor18=CursorFactory.createCursor(this.executejetbrainsMpsBaseLanguageFindUsagesInterfaceAncestors_Finder(ancestor,scope));
            try {
              while (_zCursor18.moveToNext()) {
                SNode ancestorAncestor=_zCursor18.getCurrent();
                ListOperations.addElement(_results,ancestorAncestor);
              }
            }
  finally {
              _zCursor18.release();
            }
          }
        }
      }
  finally {
        _zCursor17.release();
      }
    }
  }
  return _results;
}
