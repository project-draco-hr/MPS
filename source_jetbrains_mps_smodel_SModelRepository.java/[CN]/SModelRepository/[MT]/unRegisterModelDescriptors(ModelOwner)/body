{
  ArrayList<SModelUID> modelsToRemove=new ArrayList<SModelUID>();
  for (  SModelUID fqName : myUIDToModelDescriptorMap.keySet()) {
    SModelDescriptor modelDescriptor=myUIDToModelDescriptorMap.get(fqName);
    HashSet<ModelOwner> locators=myModelToOwnerMap.get(modelDescriptor);
    if (locators != null) {
      locators.remove(owner);
      if (locators.size() == 0) {
        modelsToRemove.add(fqName);
      }
    }
  }
  for (  SModelUID modelUID : modelsToRemove) {
    SModelDescriptor modelDescriptor=myUIDToModelDescriptorMap.get(modelUID);
    removeModelDescriptor_internal(modelDescriptor);
  }
  repositoryChanged();
}
