{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x3ae0865e9a712712L,"jetbrains.mps.lang.editor.structure.ExplicitHintsSpecification").getDeclarationNode();
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          List<SNode> result=ListSequence.fromList(new ArrayList<SNode>());
          Set<SModel> allVisibleModels=SetSequence.fromSetWithValues(new HashSet<SModel>(),(List<SModel>)SModelOperations.allImportedModels(_context.getModel()));
          SetSequence.fromSet(allVisibleModels).addElement(_context.getModel());
          for (          SModel nextModel : SetSequence.fromSet(allVisibleModels)) {
            ListSequence.fromList(result).addSequence(ListSequence.fromList(jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations.nodes(nextModel,MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x527faacef50d095eL,"jetbrains.mps.lang.editor.structure.ConceptEditorHintDeclaration"))));
          }
          return result;
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SNode result=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x3ae0865e9a712712L,"jetbrains.mps.lang.editor.structure.ExplicitHintsSpecification")));
              SNode hintReference=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x5eadaecad41188dcL,"jetbrains.mps.lang.editor.structure.ConceptEditorHintDeclarationReference")));
              SLinkOperations.setTarget(hintReference,MetaAdapterFactory.getReferenceLink(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x5eadaecad41188dcL,0x527faacef66db74dL,"hint"),(item));
              ListSequence.fromList(SLinkOperations.getChildren(result,MetaAdapterFactory.getContainmentLink(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x3ae0865e9a712712L,0x3ae0865e9a71295bL,"hints"))).addElement(hintReference);
              return result;
            }
          }
);
        }
      }
    }
  }
  ListSequence.fromList(result).addSequence(ListSequence.fromList(ChildSubstituteActionsHelper.createDefaultSubstituteActions(MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x555cb285f801e1a1L,"jetbrains.mps.lang.editor.structure.QueryHintsSpecification").getDeclarationNode(),_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter())));
  return result;
}
