{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
      public Iterable<SNode> compute(){
        SNode section=SNodeOperations.getNodeAncestor(_context.getParentNode(),MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x6ec02d9918b4efbcL,"jetbrains.mps.lang.editor.structure.TransformationMenuSection"),true,false);
        final Iterable<SConcept> availableFeatures=ListSequence.fromList(SLinkOperations.getChildren(section,MetaAdapterFactory.getContainmentLink(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x6ec02d9918b4efbcL,0x6ec02d9918b4efbdL,"locations"))).translate(new ITranslator2<SNode,SConcept>(){
          public Iterable<SConcept> translate(          SNode it){
            return (Collection<SConcept>)TransformationLocation__BehaviorDescriptor.getAvailableFeatures_id1A4kJjlZ$rL.invoke(it);
          }
        }
);
        Iterable<SAbstractConcept> concepts=TransformationMenuActionsUtil.getSubconceptsWithCurrentChildConceptsExcluded(MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x7c45559defb64aa5L,"jetbrains.mps.lang.editor.structure.TransformationFeature"),_context.getParentNode(),_context.getCurrentTargetNode());
        if (section != null) {
          concepts=Sequence.fromIterable(concepts).where(new IWhereFilter<SAbstractConcept>(){
            public boolean accept(            SAbstractConcept it){
              return Sequence.fromIterable(availableFeatures).contains(((SConcept)it));
            }
          }
);
        }
        return (Iterable<SNode>)Sequence.fromIterable(concepts).select(new ISelector<SAbstractConcept,SNode>(){
          public SNode select(          SAbstractConcept it){
            return SNodeOperations.asNode(it);
          }
        }
);
      }
    }
.compute();
    if (queryResult != null) {
      for (      SNode item : queryResult) {
        ListSequence.fromList(result).addSequence(ListSequence.fromList(ChildSubstituteActionsHelper.createDefaultSubstituteActions(item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter())));
      }
    }
  }
  return result;
}
