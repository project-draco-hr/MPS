{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
      public Iterable<SNode> compute(){
        return ((Iterable<SNode>)Sequence.fromIterable(TransformationMenuActionsUtil.getSubconceptsWithCurrentChildConceptsExcluded(MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x7c45559defb64aa6L,"jetbrains.mps.lang.editor.structure.TransformationLocation"),_context.getParentNode(),_context.getCurrentTargetNode())).select(new ISelector<SAbstractConcept,SNode>(){
          public SNode select(          SAbstractConcept it){
            return SNodeOperations.asNode(it);
          }
        }
));
      }
    }
.compute();
    if (queryResult != null) {
      for (      SNode item : queryResult) {
        ListSequence.fromList(result).addSequence(ListSequence.fromList(ChildSubstituteActionsHelper.createDefaultSubstituteActions(item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter())));
      }
    }
  }
  return result;
}
