{
  Set<StringObject> subpacks=null;
  Set<String> classes=null;
  IFile dir=getModelDir(namespace);
  List<IFile> files=dir.list();
  if (files != null) {
    for (    IFile file : files) {
      String name=file.getName();
      if (name.endsWith(MPSExtentions.DOT_CLASSFILE)) {
        if (classes == null) {
          classes=new HashSet<String>(files.size());
        }
        @SuppressWarnings({"RedundantStringConstructorCall"}) String className=new String(name.substring(0,name.length() - MPSExtentions.DOT_CLASSFILE.length()));
        classes.add(className);
      }
 else {
        if (file.isDirectory()) {
          if (subpacks == null) {
            subpacks=new HashSet<StringObject>();
          }
          subpacks.add(toStringObject(namespace.length() > 0 ? namespace + "." + name : name));
        }
      }
    }
  }
  StringObject nsKey=toStringObject(namespace);
  mySubpackagesCache.put(nsKey,subpacks);
  myAvailableClassesCache.put(nsKey,classes);
}
