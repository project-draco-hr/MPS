{
  int behaviorIndex=Arrays.binarySearch(myConceptBehaviorIds,conceptId.getIdValue());
switch (behaviorIndex) {
case 0:
    return myBuildLayout_EchoProperties_BehaviorDescriptor;
case 1:
  return myBuildSource_JavaDependencyExternalJarInFolder_BehaviorDescriptor;
case 2:
return myBuildLayout_Import_BehaviorDescriptor;
case 3:
return myBuildExternalDependency_BehaviorDescriptor;
case 4:
return myBuildLayout_FileSet_BehaviorDescriptor;
case 5:
return myBuildLayout_JarManifest_BehaviorDescriptor;
case 6:
return myBuildLayout_JarManifest_Attribute_BehaviorDescriptor;
case 7:
return myBuildLayout_CopyProcessor_BehaviorDescriptor;
case 8:
return myBuildInputSingleFolder_BehaviorDescriptor;
case 9:
return myBuildSourceArchiveRelativePath_BehaviorDescriptor;
case 10:
return myBuildLayout_CompileOutputOf_BehaviorDescriptor;
case 11:
return myBuildLayout_Files_BehaviorDescriptor;
case 12:
return myBuildSource_JavaContentFolder_BehaviorDescriptor;
case 13:
return myBuildSource_JavaDependencyModule_BehaviorDescriptor;
case 14:
return myBuildVariableMacroInitValue_BehaviorDescriptor;
case 15:
return myBuildLayout_TransparentContainer_BehaviorDescriptor;
case 16:
return myBuildLayout_ExportAsJavaLibrary_BehaviorDescriptor;
case 17:
return myBuildNamedLayout_BehaviorDescriptor;
case 18:
return myBuildSource_JavaCP_BehaviorDescriptor;
case 19:
return myBuildVariableMacro_BehaviorDescriptor;
case 20:
return myBuildString_BehaviorDescriptor;
case 21:
return myBuildLayout_Container_BehaviorDescriptor;
case 22:
return myBuildStringPart_BehaviorDescriptor;
case 23:
return myBuildVarRefStringPart_BehaviorDescriptor;
case 24:
return myBuildTextStringPart_BehaviorDescriptor;
case 25:
return myBuildSource_JavaDependencyLibrary_BehaviorDescriptor;
case 26:
return myBuildProjectDependency_BehaviorDescriptor;
case 27:
return myBuildInputSingleFile_BehaviorDescriptor;
case 28:
return myBuildInputFiles_BehaviorDescriptor;
case 29:
return myBuildLayout_Copy_BehaviorDescriptor;
case 30:
return myBuildLayout_ContainerAcceptingFileSet_BehaviorDescriptor;
case 31:
return myBuildSourceProjectRelativePath_BehaviorDescriptor;
case 32:
return myBuildLayout_ImportContent_BehaviorDescriptor;
case 33:
return myBuildSource_SingleFile_BehaviorDescriptor;
case 34:
return myBuildSource_JavaExternalJarRef_BehaviorDescriptor;
case 35:
return myBuildSource_JavaLibraryExternalJar_BehaviorDescriptor;
case 36:
return myBuildSource_SingleFolder_BehaviorDescriptor;
case 37:
return myBuildSource_JavaExternalJarFolderRef_BehaviorDescriptor;
case 38:
return myBuildSource_JavaLibraryExternalJarFolder_BehaviorDescriptor;
case 39:
return myBuildProject_BehaviorDescriptor;
case 40:
return myBuildLayout_BehaviorDescriptor;
case 41:
return myBuildMacro_BehaviorDescriptor;
case 42:
return myBuildLayout_InJarNode_BehaviorDescriptor;
case 43:
return myBuildSource_JavaLibrary_BehaviorDescriptor;
case 44:
return myIWorkflowParticipant_BehaviorDescriptor;
case 45:
return myBuildPlugin_BehaviorDescriptor;
case 46:
return myBuildJavaPlugin_BehaviorDescriptor;
case 47:
return myBuildSource_JavaDependencyExternalJar_BehaviorDescriptor;
case 48:
return myBuildLayout_War_BehaviorDescriptor;
case 49:
return myBuildLayout_PathElement_BehaviorDescriptor;
case 50:
return myBuildExternalLayout_BehaviorDescriptor;
case 51:
return myBuildLayout_FileStub_BehaviorDescriptor;
case 52:
return myBuildExternalLayoutDependency_BehaviorDescriptor;
case 53:
return myBuildRelativePath_BehaviorDescriptor;
case 54:
return myBuildLayout_AbstractContainer_BehaviorDescriptor;
case 55:
return myBuildLayout_Folder_BehaviorDescriptor;
case 56:
return myBuildLayout_Node_BehaviorDescriptor;
case 57:
return myBuildLayout_NamedContainer_BehaviorDescriptor;
case 58:
return myBuildLayout_Zip_BehaviorDescriptor;
case 59:
return myBuildLayout_Jar_BehaviorDescriptor;
case 60:
return myBuildSource_JavaModule_BehaviorDescriptor;
case 61:
return myBuildSourcePath_BehaviorDescriptor;
case 62:
return myBuildFolderMacro_BehaviorDescriptor;
case 63:
return myBuildSourceMacroRelativePath_BehaviorDescriptor;
case 64:
return myBuildLayout_EchoXml_BehaviorDescriptor;
case 65:
return myBuildLayout_Filemode_BehaviorDescriptor;
case 66:
return myBuildLayout_Tar_BehaviorDescriptor;
case 67:
return myBuildCompositePath_BehaviorDescriptor;
case 68:
return myBuildLayout_File_BehaviorDescriptor;
case 69:
return myBuildLayout_CustomCopy_BehaviorDescriptor;
case 70:
return myBuildLayout_AbstractCopy_BehaviorDescriptor;
case 71:
return myBuildStringContainer_BehaviorDescriptor;
default :
return null;
}
}
