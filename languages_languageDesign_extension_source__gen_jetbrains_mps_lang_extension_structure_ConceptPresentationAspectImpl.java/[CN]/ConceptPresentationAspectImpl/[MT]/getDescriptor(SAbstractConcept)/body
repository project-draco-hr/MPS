{
{
    SAbstractConcept cncpt=c;
    Integer preIndex=indices_lpa09p_a0m.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return props_Extension;
      }
    break;
case 1:
  if (true) {
    return props_ExtensionDeclaration;
  }
break;
case 2:
if (true) {
return props_ExtensionFieldDeclaration;
}
break;
case 3:
if (true) {
return props_ExtensionFieldReference;
}
break;
case 4:
if (true) {
return props_ExtensionFunction;
}
break;
case 5:
if (true) {
return props_ExtensionObjectGetter;
}
break;
case 6:
if (true) {
return props_ExtensionPointDeclaration;
}
break;
case 7:
if (true) {
return props_ExtensionPointExpression;
}
break;
case 8:
if (true) {
return props_ExtensionPointType;
}
break;
case 9:
if (true) {
return props_GetExtensionObjectsOperation;
}
break;
case 10:
if (true) {
return props_IRootWithUniqueName;
}
break;
default :
}
}
throw new IllegalStateException();
}
