{
  if (state.ordinal() <= myState.get().ordinal())   return;
  while (!myLoading.compareAndSet(false,true)) {
synchronized (this) {
      if (state.ordinal() <= myState.get().ordinal())       return;
    }
  }
synchronized (this) {
    if (state.ordinal() <= myState.get().ordinal())     return;
    ModelLoadResult res=NodeReadAccessCasterInEditor.runReadTransparentAction(new Computable<ModelLoadResult>(){
      public ModelLoadResult compute(){
        return UndoHelper.getInstance().runNonUndoableAction(new Computable<ModelLoadResult>(){
          public ModelLoadResult compute(){
            return doLoad(state,myModel);
          }
        }
);
      }
    }
);
    if (myModel != null) {
      myModel.setModelDescriptor(null);
    }
    myModel=res.getModel();
    myModel.setModelDescriptor(myDescriptor);
    myState.set(res.getState());
    myLoading.set(false);
  }
}
