{
  this.addNodeById("9160497614872088317");
  this.addNodeById("9160497614872003746");
  new ConvertAnonymousRefactoring(SNodeOperations.cast(this.getNodeById("9160497614872088338"),"jetbrains.mps.baseLanguage.structure.AnonymousClass"),"MyIterable").doRefactor();
{
    List<SNode> nodesBefore=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("9160497614872088318"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    List<SNode> nodesAfter=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("9160497614872087740"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    Assert.assertNull("nodes '" + nodesBefore + "' and '"+ nodesAfter+ "' do not match!",NodesMatcher.matchNodes(nodesBefore,nodesAfter));
  }
}
