{
  IRefactoring refactoring=refactoringContext.getRefactoring();
  String name=refactoring.getUserFriendlyName();
  if (name == null) {
    return;
  }
  JComponent itemPanel=new JPanel(new GridLayout(1,2));
  JLabel refactoringName=new JLabel(name);
  SNode refactoringNode=null;
  for (  SNode node : this.myRefactorings) {
    String userFriendlyNodeName=null;
    if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.lang.refactoring.structure.Refactoring")) {
      userFriendlyNodeName=SPropertyOperations.getString(SNodeOperations.cast(node,"jetbrains.mps.lang.refactoring.structure.Refactoring"),"userFriendlyName");
    }
 else     if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.lang.refactoring.structure.OldRefactoring")) {
      userFriendlyNodeName=SPropertyOperations.getString(SNodeOperations.cast(node,"jetbrains.mps.lang.refactoring.structure.OldRefactoring"),"userFriendlyName");
    }
    if (EqualUtil.equals(userFriendlyNodeName,name)) {
      refactoringNode=node;
      break;
    }
  }
  itemPanel.add(refactoringName);
  if (refactoringNode != null) {
    JButton button=new JButton("Go To '" + SPropertyOperations.getString(SNodeOperations.cast(refactoringNode,"jetbrains.mps.lang.core.structure.INamedConcept"),"name") + "' action");
    final SNode nodeToSelect=refactoringNode;
    button.addActionListener(new ActionListener(){
      public void actionPerformed(      ActionEvent event){
        RefactoringPanel.this.myContext.getComponent(MPSEditorOpener.class).openNode(nodeToSelect,RefactoringPanel.this.myContext,true,true);
      }
    }
);
    button.setIcon(IconManager.getIconFor(refactoringNode));
    itemPanel.add(button);
  }
 else {
    JLabel infoLabel=new JLabel("<html><i>action not found</i></html>");
    itemPanel.add(infoLabel);
  }
  component.add(itemPanel,gridBagConstraints);
}
