{
  EditorComponent nodeEditor=context.getNodeEditorComponent();
  EditorCell selectedCell=nodeEditor.getSelectedCell();
  EditorCell deepestSelectedCell=nodeEditor.getDeepestSelectedCell();
  if (selectedCell != null && selectedCell.getSNode() != null && !selectedCell.getSNode().isDisposed()) {
    if (deepestSelectedCell != null) {
      myCaretX=deepestSelectedCell.getCaretX();
      if (deepestSelectedCell instanceof EditorCell_Label) {
        mySelectionStart=((EditorCell_Label)deepestSelectedCell).getSelectionStart();
        mySelectionEnd=((EditorCell_Label)deepestSelectedCell).getSelectionEnd();
      }
    }
    if (deepestSelectedCell instanceof EditorCell_Label && deepestSelectedCell.isErrorState()) {
    }
    mySelectedCellInfo=selectedCell.getCellInfo();
    mySelectedStack=nodeEditor.getSelectedStackForMemento();
    for (    EditorCell foldedCell : nodeEditor.getFoldedCells()) {
      myFolded.add(foldedCell.getCellInfo());
    }
    for (    EditorCell bracesEnabledCell : nodeEditor.getBracesEnabledCells()) {
      myCollectionsWithEnabledBraces.add(bracesEnabledCell.getCellInfo());
    }
  }
  if (nodeEditor.getNodeRangeSelection().isActive()) {
    myFirstRangeSelectionNode=nodeEditor.getNodeRangeSelection().getFirstNode();
    myLastRangeSelectionNode=nodeEditor.getNodeRangeSelection().getLastNode();
  }
  if (full) {
    collectErrors(nodeEditor);
  }
}
