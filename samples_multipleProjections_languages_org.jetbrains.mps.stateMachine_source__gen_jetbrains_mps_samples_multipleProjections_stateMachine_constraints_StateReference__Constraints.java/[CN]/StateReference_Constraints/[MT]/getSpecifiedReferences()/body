{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0x530533eef7894c1eL,0xba56de1bbf3afda7L,0xa99ffe1c8457444L,0xa99ffe1c8457445L,"state"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x530533eef7894c1eL,0xba56de1bbf3afda7L,0xa99ffe1c8457444L,0xa99ffe1c8457445L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return SLinkOperations.getChildren(AbstractStateMachineElement__BehaviorDescriptor.getStateMachine_id6SYFRDkTQVW.invoke(SNodeOperations.cast(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(0x530533eef7894c1eL,0xba56de1bbf3afda7L,0xa99ffe1c845743dL,"jetbrains.mps.samples.multipleProjections.stateMachine.structure.Transition"))),MetaAdapterFactory.getContainmentLink(0x530533eef7894c1eL,0xba56de1bbf3afda7L,0xa99ffe1c8456ba1L,0xa99ffe1c8456ba5L,"states"));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_fj6pw8_a0a1a0a0a1a0b0a1a3;
        }
      }
;
    }
  }
);
  return references;
}
