{
  final Wrappers._T<SNode> _contextClassifier=new Wrappers._T<SNode>(contextClassifier);
  if (SNodeOperations.isInstanceOf(thisNode,MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x427c475b3d6201deL,"jetbrains.mps.baseLanguage.structure.StaticKind"))) {
    _contextClassifier.value=Classifier_Behavior.call_getContextClassifier_6172562527426750080(SNodeOperations.asSConcept(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Classifier")),thisNode);
  }
  if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,0x112670d886aL,"visibility")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10af9581ff1L,"jetbrains.mps.baseLanguage.structure.PublicVisibility"))) {
    return true;
  }
  if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,0x112670d886aL,"visibility")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10af9586f0cL,"jetbrains.mps.baseLanguage.structure.PrivateVisibility"))) {
    return ListSequence.fromList(SNodeOperations.getNodeAncestors(contextNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"),true)).last() == ListSequence.fromList(SNodeOperations.getNodeAncestors(_contextClassifier.value,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"),true)).last();
  }
  String contextNodePackage=VisibilityUtil.packageName(contextNode);
  String contextClassifierPackage=VisibilityUtil.packageName(_contextClassifier.value);
  String declarationClassifierPackage=VisibilityUtil.packageName(Classifier_Behavior.call_getContextClassifier_6172562527426750080(SNodeOperations.asSConcept(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Classifier")),thisNode));
  if ((SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,0x112670d886aL,"visibility")) == null)) {
    return eq_i8o263_a0a0l0c(contextNodePackage,contextClassifierPackage);
  }
  if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,0x112670d886aL,"visibility")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10af958b686L,"jetbrains.mps.baseLanguage.structure.ProtectedVisibility"))) {
    if (eq_i8o263_a0a0n0c(contextNodePackage,declarationClassifierPackage)) {
      return true;
    }
    Iterable<SNode> possibleClassifiers=ListSequence.fromList(SNodeOperations.getNodeAncestors(contextNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"),true)).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SetSequence.fromSet(ClassifierScopeUtils.getExtendedClassifiers(it)).contains(_contextClassifier.value);
      }
    }
);
    if (!(SNodeOperations.isInstanceOf(contextNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,"jetbrains.mps.baseLanguage.structure.DotExpression")))) {
      return Sequence.fromIterable(possibleClassifiers).isNotEmpty();
    }
 else {
      SNode leftClassifier=DotExpression_Behavior.call_getClassifier_1213877410697(SNodeOperations.cast(contextNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,"jetbrains.mps.baseLanguage.structure.DotExpression")));
      final Set<SNode> extendedClassifiers=SetSequence.fromSetWithValues(new HashSet<SNode>(),ClassifierScopeUtils.getExtendedClassifiers(leftClassifier));
      return Sequence.fromIterable(possibleClassifiers).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SetSequence.fromSet(extendedClassifiers).contains(it);
        }
      }
);
    }
  }
  return false;
}
