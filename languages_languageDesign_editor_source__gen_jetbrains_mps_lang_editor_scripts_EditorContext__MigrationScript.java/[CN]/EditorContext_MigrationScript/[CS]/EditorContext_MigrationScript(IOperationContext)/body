{
  super("To Editor API usages");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.nodeEditor.EditorContext classifier type instances with jetbrains.mps.openapi.editor.EditorContext";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.nodeEditor.EditorContext classifier type instances with jetbrains.mps.openapi.editor.EditorContext";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"classifier",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.nodeEditor.EditorContext classifier type with jetbrains.mps.openapi.editor.EditorContext in static field references";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.nodeEditor.EditorContext classifier type with jetbrains.mps.openapi.editor.EditorContext in static field references";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"classifier",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.EditorContext classified with static fields from jetbrains.mps.openapi.editor.EditorContext";
    }
    public String getAdditionalInfo(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.EditorContext classified with static fields from jetbrains.mps.openapi.editor.EditorContext";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      if (!(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)"),oldReference.getTargetNodeId(),((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("staticFieldDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing ClassCreators using jetbrains.mps.nodeEditor.EditorContext as a parameter with jetbrains.mps.openapi.editor.EditorContext";
    }
    public String getAdditionalInfo(){
      return "Replacing ClassCreators using jetbrains.mps.nodeEditor.EditorContext as a parameter with jetbrains.mps.openapi.editor.EditorContext";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.nodeEditor.EditorContext");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.nodeEditor.EditorContext","jetbrains.mps.openapi.editor.EditorContext"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("constructorDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing IMethodCalls using jetbrains.mps.nodeEditor.EditorContext as a parameter with jetbrains.mps.openapi.editor.EditorContext";
    }
    public String getAdditionalInfo(){
      return "Replacing IMethodCalls using jetbrains.mps.nodeEditor.EditorContext as a parameter with jetbrains.mps.openapi.editor.EditorContext";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.nodeEditor.EditorContext");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.nodeEditor.EditorContext","jetbrains.mps.openapi.editor.EditorContext"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("baseMethodDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up methods from jetbrains.mps.nodeEditor.EditorContext to jetbrains.mps.openapi.editor.EditorContext";
    }
    public String getAdditionalInfo(){
      return "Pull up methods from jetbrains.mps.nodeEditor.EditorContext to jetbrains.mps.openapi.editor.EditorContext";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getSelectedNode():org.jetbrains.mps.openapi.model.SNode")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getSelectedNodes():java.util.List")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.selectWRTFocusPolicy(org.jetbrains.mps.openapi.model.SNode):void")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.selectWRTFocusPolicy(org.jetbrains.mps.openapi.model.SNode,boolean):void")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.select(org.jetbrains.mps.openapi.model.SNode):void")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.selectRange(org.jetbrains.mps.openapi.model.SNode,org.jetbrains.mps.openapi.model.SNode):void")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.select(org.jetbrains.mps.openapi.model.SNode,java.lang.String):void")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.selectBefore(org.jetbrains.mps.openapi.model.SNode):void")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.selectAfter(org.jetbrains.mps.openapi.model.SNode):void")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.selectAndSetCaret(org.jetbrains.mps.openapi.model.SNode,int):void")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getSelectedCell():jetbrains.mps.openapi.editor.cells.EditorCell")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getContextCell():jetbrains.mps.nodeEditor.cells.EditorCell")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getNodeEditorComponent():jetbrains.mps.nodeEditor.EditorComponent")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getEditorComponent():jetbrains.mps.openapi.editor.EditorComponent")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.executeCommand(java.lang.Runnable):void")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.executeCommand(jetbrains.mps.util.Computable):java.lang.Object")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.flushEvents():void")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getScope():jetbrains.mps.smodel.IScope")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.createNodeCell(org.jetbrains.mps.openapi.model.SNode):jetbrains.mps.nodeEditor.cells.EditorCell")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.createReferentCell(org.jetbrains.mps.openapi.model.SNode,org.jetbrains.mps.openapi.model.SNode,java.lang.String):jetbrains.mps.nodeEditor.cells.EditorCell")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.createRoleAttributeCell(java.lang.Class,jetbrains.mps.openapi.editor.cells.EditorCell,org.jetbrains.mps.openapi.model.SNode):jetbrains.mps.openapi.editor.cells.EditorCell")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getOperationContext():jetbrains.mps.smodel.IOperationContext")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getInspector():jetbrains.mps.openapi.editor.EditorInspector")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.isInspector():boolean")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.openInspector():void")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getModel():org.jetbrains.mps.openapi.model.SModel")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.createMemento(boolean):java.lang.Object")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.createMemento():java.lang.Object")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.setMemento(java.lang.Object):boolean")) {
        return true;
      }
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getSelectedNode():org.jetbrains.mps.openapi.model.SNode")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.getSelectedNode():org.jetbrains.mps.openapi.model.SNode"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getSelectedNodes():java.util.List")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.getSelectedNodes():java.util.List"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.selectWRTFocusPolicy(org.jetbrains.mps.openapi.model.SNode):void")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.selectWRTFocusPolicy(org.jetbrains.mps.openapi.model.SNode):void"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.selectWRTFocusPolicy(org.jetbrains.mps.openapi.model.SNode,boolean):void")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.selectWRTFocusPolicy(org.jetbrains.mps.openapi.model.SNode,boolean):void"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.select(org.jetbrains.mps.openapi.model.SNode):void")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.select(org.jetbrains.mps.openapi.model.SNode):void"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.selectRange(org.jetbrains.mps.openapi.model.SNode,org.jetbrains.mps.openapi.model.SNode):void")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.selectRange(org.jetbrains.mps.openapi.model.SNode,org.jetbrains.mps.openapi.model.SNode):void"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.select(org.jetbrains.mps.openapi.model.SNode,java.lang.String):void")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.select(org.jetbrains.mps.openapi.model.SNode,java.lang.String):void"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.selectBefore(org.jetbrains.mps.openapi.model.SNode):void")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.selectBefore(org.jetbrains.mps.openapi.model.SNode):void"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.selectAfter(org.jetbrains.mps.openapi.model.SNode):void")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.selectAfter(org.jetbrains.mps.openapi.model.SNode):void"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.selectAndSetCaret(org.jetbrains.mps.openapi.model.SNode,int):void")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.selectAndSetCaret(org.jetbrains.mps.openapi.model.SNode,int):void"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getSelectedCell():jetbrains.mps.openapi.editor.cells.EditorCell")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.getSelectedCell():jetbrains.mps.openapi.editor.cells.EditorCell"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getContextCell():jetbrains.mps.nodeEditor.cells.EditorCell")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.getContextCell():jetbrains.mps.openapi.editor.cells.EditorCell"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getNodeEditorComponent():jetbrains.mps.nodeEditor.EditorComponent")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.getEditorComponent():jetbrains.mps.openapi.editor.EditorComponent"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getEditorComponent():jetbrains.mps.openapi.editor.EditorComponent")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.getEditorComponent():jetbrains.mps.openapi.editor.EditorComponent"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.executeCommand(java.lang.Runnable):void")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.executeCommand(java.lang.Runnable):void"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.executeCommand(jetbrains.mps.util.Computable):java.lang.Object")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.executeCommand(java.lang.Runnable):void"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.flushEvents():void")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.flushEvents():void"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getScope():jetbrains.mps.smodel.IScope")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.getScope():jetbrains.mps.smodel.IScope"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.createNodeCell(org.jetbrains.mps.openapi.model.SNode):jetbrains.mps.nodeEditor.cells.EditorCell")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.createNodeCell(org.jetbrains.mps.openapi.model.SNode):jetbrains.mps.openapi.editor.cells.EditorCell"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.createReferentCell(org.jetbrains.mps.openapi.model.SNode,org.jetbrains.mps.openapi.model.SNode,java.lang.String):jetbrains.mps.nodeEditor.cells.EditorCell")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.createReferentCell(org.jetbrains.mps.openapi.model.SNode,org.jetbrains.mps.openapi.model.SNode,java.lang.String):jetbrains.mps.openapi.editor.cells.EditorCell"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.createRoleAttributeCell(java.lang.Class,jetbrains.mps.openapi.editor.cells.EditorCell,org.jetbrains.mps.openapi.model.SNode):jetbrains.mps.openapi.editor.cells.EditorCell")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.createRoleAttributeCell(java.lang.Class,jetbrains.mps.openapi.editor.cells.EditorCell,org.jetbrains.mps.openapi.model.SNode):jetbrains.mps.openapi.editor.cells.EditorCell"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getOperationContext():jetbrains.mps.smodel.IOperationContext")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.getOperationContext():jetbrains.mps.smodel.IOperationContext"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getInspector():jetbrains.mps.openapi.editor.EditorInspector")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.getInspector():jetbrains.mps.openapi.editor.EditorInspector"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.isInspector():boolean")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.isInspector():boolean"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.openInspector():void")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.openInspector():void"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getModel():org.jetbrains.mps.openapi.model.SModel")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.getModel():org.jetbrains.mps.openapi.model.SModel"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.createMemento(boolean):java.lang.Object")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.createMemento(boolean):java.lang.Object"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.createMemento():java.lang.Object")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.createMemento():java.lang.Object"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.setMemento(java.lang.Object):boolean")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.setMemento(java.lang.Object):boolean"),false);
        return;
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.EditorComponent classified with static fields from jetbrains.mps.openapi.editor.EditorComponent";
    }
    public String getAdditionalInfo(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.EditorComponent classified with static fields from jetbrains.mps.openapi.editor.EditorComponent";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      if (!(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)"),oldReference.getTargetNodeId(),((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("staticFieldDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.EditorComponent classified with static fields from jetbrains.mps.nodeEditor.EditorComponent";
    }
    public String getAdditionalInfo(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.EditorComponent classified with static fields from jetbrains.mps.nodeEditor.EditorComponent";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      if (!(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorComponent.LOG").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorComponent.TRACE_ENABLED").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorComponent.EDITOR_POPUP_MENU_ACTIONS").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorComponent.CARET_ROW_COLOR").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorComponent.SCROLL_GAP").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorComponent.decrButtonField").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorComponent.incrButtonField").equals(targetNodeId)) {
        return true;
      }
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)"),oldReference.getTargetNodeId(),((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("staticFieldDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up methods from jetbrains.mps.nodeEditor.EditorComponent to jetbrains.mps.nodeEditor.EditorComponent";
    }
    public String getAdditionalInfo(){
      return "Pull up methods from jetbrains.mps.nodeEditor.EditorComponent to jetbrains.mps.nodeEditor.EditorComponent";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorComponent.getSelectedCell():jetbrains.mps.nodeEditor.cells.EditorCell").equals(targetNodeId)) {
        return true;
      }
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorComponent.getSelectedCell():jetbrains.mps.nodeEditor.cells.EditorCell").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorComponent.getSelectedCell():jetbrains.mps.openapi.editor.cells.EditorCell"),false);
        return;
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.nodeEditor.cells.EditorCell classifier type instances with jetbrains.mps.openapi.editor.cells.EditorCell";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.nodeEditor.cells.EditorCell classifier type instances with jetbrains.mps.openapi.editor.cells.EditorCell";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"classifier",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.nodeEditor.cells.EditorCell classifier type with jetbrains.mps.openapi.editor.cells.EditorCell in static field references";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.nodeEditor.cells.EditorCell classifier type with jetbrains.mps.openapi.editor.cells.EditorCell in static field references";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"classifier",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.cells.EditorCell classified with static fields from jetbrains.mps.openapi.editor.cells.EditorCell";
    }
    public String getAdditionalInfo(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.cells.EditorCell classified with static fields from jetbrains.mps.openapi.editor.cells.EditorCell";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      if (!(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),oldReference.getTargetNodeId(),((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("staticFieldDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing ClassCreators using jetbrains.mps.nodeEditor.cells.EditorCell as a parameter with jetbrains.mps.openapi.editor.cells.EditorCell";
    }
    public String getAdditionalInfo(){
      return "Replacing ClassCreators using jetbrains.mps.nodeEditor.cells.EditorCell as a parameter with jetbrains.mps.openapi.editor.cells.EditorCell";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.nodeEditor.cells.EditorCell");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.nodeEditor.cells.EditorCell","jetbrains.mps.openapi.editor.cells.EditorCell"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("constructorDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing IMethodCalls using jetbrains.mps.nodeEditor.cells.EditorCell as a parameter with jetbrains.mps.openapi.editor.cells.EditorCell";
    }
    public String getAdditionalInfo(){
      return "Replacing IMethodCalls using jetbrains.mps.nodeEditor.cells.EditorCell as a parameter with jetbrains.mps.openapi.editor.cells.EditorCell";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.nodeEditor.cells.EditorCell");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.nodeEditor.cells.EditorCell","jetbrains.mps.openapi.editor.cells.EditorCell"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("baseMethodDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up methods from jetbrains.mps.nodeEditor.cells.EditorCell to jetbrains.mps.openapi.editor.cells.EditorCell";
    }
    public String getAdditionalInfo(){
      return "Pull up methods from jetbrains.mps.nodeEditor.cells.EditorCell to jetbrains.mps.openapi.editor.cells.EditorCell";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.isBigCell():boolean").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setX(int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setY(int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setWidth(int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setHeight(int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getBaseline():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setBaseline(int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getAscent():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getDescent():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getEffectiveWidth():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getLeftInset():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getRightInset():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getTopInset():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getBottomInset():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setLeftGap(int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setRightGap(int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.moveTo(int,int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setSelected(boolean):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.isSelected():boolean").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setSelectable(boolean):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.isSelectable():boolean").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setCellId(java.lang.String):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getCellId():java.lang.String").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setRole(java.lang.String):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getRole():java.lang.String").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.isErrorState():boolean").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setErrorState(boolean):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.relayout():void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setCaretX(int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getCaretX():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.home():void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.end():void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getRootParent():jetbrains.mps.openapi.editor.cells.EditorCell").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.findLeaf(int,int):jetbrains.mps.openapi.editor.cells.EditorCell").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.isSingleNodeCell():boolean").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getSNode():org.jetbrains.mps.openapi.model.SNode").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.putUserObject(java.lang.Object,java.lang.Object):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getUserObject(java.lang.Object):java.lang.Object").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getParent():jetbrains.mps.openapi.editor.cells.EditorCell_Collection").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.isReferenceCell():boolean").equals(targetNodeId)) {
        return true;
      }
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.isBigCell():boolean").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.isBig():boolean"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setX(int):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.setX(int):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setY(int):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.setY(int):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setWidth(int):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.setWidth(int):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setHeight(int):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.setHeight(int):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getBaseline():int").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.getBaseline():int"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setBaseline(int):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.setBaseline(int):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getAscent():int").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.getAscent():int"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getDescent():int").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.getDescent():int"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getEffectiveWidth():int").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.getEffectiveWidth():int"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getLeftInset():int").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.getLeftInset():int"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getRightInset():int").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.getRightInset():int"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getTopInset():int").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.getTopInset():int"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getBottomInset():int").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.getBottomInset():int"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setLeftGap(int):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.setLeftGap(int):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setRightGap(int):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.setRightGap(int):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.moveTo(int,int):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.moveTo(int,int):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setSelected(boolean):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.setSelected(boolean):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.isSelected():boolean").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.isSelected():boolean"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setSelectable(boolean):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.setSelectable(boolean):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.isSelectable():boolean").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.isSelectable():boolean"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setCellId(java.lang.String):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.setCellId(java.lang.String):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getCellId():java.lang.String").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.getCellId():java.lang.String"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setRole(java.lang.String):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.setRole(java.lang.String):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getRole():java.lang.String").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.getRole():java.lang.String"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.isErrorState():boolean").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.isErrorState():boolean"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setErrorState(boolean):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.setErrorState(boolean):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.relayout():void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.relayout():void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setCaretX(int):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.setCaretX(int):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getCaretX():int").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.getCaretX():int"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.home():void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.home():void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.end():void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.end():void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getRootParent():jetbrains.mps.openapi.editor.cells.EditorCell").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.getRootParent():jetbrains.mps.openapi.editor.cells.EditorCell"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.findLeaf(int,int):jetbrains.mps.openapi.editor.cells.EditorCell").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.findLeaf(int,int):jetbrains.mps.openapi.editor.cells.EditorCell"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.isSingleNodeCell():boolean").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.isSingleNodeCell():boolean"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getSNode():org.jetbrains.mps.openapi.model.SNode").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.getSNode():org.jetbrains.mps.openapi.model.SNode"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.putUserObject(java.lang.Object,java.lang.Object):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.putUserObject(java.lang.Object,java.lang.Object):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getUserObject(java.lang.Object):java.lang.Object").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.getUserObject(java.lang.Object):java.lang.Object"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getParent():jetbrains.mps.openapi.editor.cells.EditorCell_Collection").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.getParent():jetbrains.mps.openapi.editor.cells.EditorCell_Collection"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.isReferenceCell():boolean").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell.isReferenceCell():boolean"),false);
        return;
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.openapi.editor.EditorCell classifier type instances with jetbrains.mps.openapi.editor.cells.EditorCell";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.openapi.editor.EditorCell classifier type instances with jetbrains.mps.openapi.editor.cells.EditorCell";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType","classifier"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      return jetbrains.mps.smodel.SNodeId.fromString("~EditorCell").equals(reference.getTargetNodeId());
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.openapi.editor.EditorCell classifier type with jetbrains.mps.openapi.editor.cells.EditorCell in static field references";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.openapi.editor.EditorCell classifier type with jetbrains.mps.openapi.editor.cells.EditorCell in static field references";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","classifier"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      return jetbrains.mps.smodel.SNodeId.fromString("~EditorCell").equals(reference.getTargetNodeId());
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.openapi.editor.EditorCell classified with static fields from jetbrains.mps.openapi.editor.cells.EditorCell";
    }
    public String getAdditionalInfo(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.openapi.editor.EditorCell classified with static fields from jetbrains.mps.openapi.editor.cells.EditorCell";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      if (!(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),oldReference.getTargetNodeId(),((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("staticFieldDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing ClassCreators using jetbrains.mps.openapi.editor.EditorCell as a parameter with jetbrains.mps.openapi.editor.cells.EditorCell";
    }
    public String getAdditionalInfo(){
      return "Replacing ClassCreators using jetbrains.mps.openapi.editor.EditorCell as a parameter with jetbrains.mps.openapi.editor.cells.EditorCell";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.openapi.editor.EditorCell");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.openapi.editor.EditorCell","jetbrains.mps.openapi.editor.cells.EditorCell"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("constructorDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing IMethodCalls using jetbrains.mps.openapi.editor.EditorCell as a parameter with jetbrains.mps.openapi.editor.cells.EditorCell";
    }
    public String getAdditionalInfo(){
      return "Replacing IMethodCalls using jetbrains.mps.openapi.editor.EditorCell as a parameter with jetbrains.mps.openapi.editor.cells.EditorCell";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.openapi.editor.EditorCell");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.openapi.editor.EditorCell","jetbrains.mps.openapi.editor.cells.EditorCell"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("baseMethodDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up and remove all methods from jetbrains.mps.openapi.editor.EditorCell to jetbrains.mps.openapi.editor.cells.EditorCell";
    }
    public String getAdditionalInfo(){
      return "Pull up and remove all methods from jetbrains.mps.openapi.editor.EditorCell to jetbrains.mps.openapi.editor.cells.EditorCell";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      if (!(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getX():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setX(int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getY():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setY(int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getWidth():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setWidth(int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getHeight():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setHeight(int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getBottom():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getRight():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getBaseline():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setBaseline(int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getAscent():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getDescent():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getEffectiveWidth():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getLeftInset():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getRightInset():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getTopInset():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getBottomInset():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setLeftGap(int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setRightGap(int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.moveTo(int,int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setSelected(boolean):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.isSelected():boolean").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setSelectable(boolean):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.isSelectable():boolean").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setCellId(java.lang.String):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getCellId():java.lang.String").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setRole(java.lang.String):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getRole():java.lang.String").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.isErrorState():boolean").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setErrorState(boolean):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.relayout():void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setCaretX(int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getCaretX():int").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.home():void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.end():void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getContext():jetbrains.mps.openapi.editor.EditorContext").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getParent():jetbrains.mps.openapi.editor.cells.EditorCell_Collection").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getRootParent():jetbrains.mps.openapi.editor.cells.EditorCell").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.findLeaf(int,int):jetbrains.mps.openapi.editor.cells.EditorCell").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.isSingleNodeCell():boolean").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getSNode():org.jetbrains.mps.openapi.model.SNode").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.putUserObject(java.lang.Object,java.lang.Object):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getUserObject(java.lang.Object):java.lang.Object").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getEditorComponent():jetbrains.mps.openapi.editor.EditorComponent").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getStyle():jetbrains.mps.openapi.editor.style.Style").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getKeyMap():jetbrains.mps.openapi.editor.cells.KeyMap").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.addKeyMap(jetbrains.mps.openapi.editor.cells.KeyMap):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getAction(jetbrains.mps.openapi.editor.cells.CellActionType):jetbrains.mps.openapi.editor.cells.CellAction").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setAction(jetbrains.mps.openapi.editor.cells.CellActionType,jetbrains.mps.openapi.editor.cells.CellAction):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getAvailableActions():java.util.Collection").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getMessages():java.util.List").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setSubstituteInfo(jetbrains.mps.openapi.editor.cells.SubstituteInfo):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getSubstituteInfo():jetbrains.mps.openapi.editor.cells.SubstituteInfo").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.renderText():jetbrains.mps.openapi.editor.TextBuilder").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setBig(boolean):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.isBig():boolean").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setCellContext(jetbrains.mps.openapi.editor.cells.EditorCellContext):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.getCellContext():jetbrains.mps.openapi.editor.cells.EditorCellContext").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.setReferenceCell(boolean):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell.isReferenceCell():boolean").equals(targetNodeId)) {
        return true;
      }
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),oldReference.getTargetNodeId(),((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("baseMethodDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.nodeEditor.cells.EditorCell_Collection classifier type instances with jetbrains.mps.openapi.editor.cells.EditorCell_Collection";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.nodeEditor.cells.EditorCell_Collection classifier type instances with jetbrains.mps.openapi.editor.cells.EditorCell_Collection";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"classifier",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell_Collection"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.nodeEditor.cells.EditorCell_Collection classifier type with jetbrains.mps.openapi.editor.cells.EditorCell_Collection in static field references";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.nodeEditor.cells.EditorCell_Collection classifier type with jetbrains.mps.openapi.editor.cells.EditorCell_Collection in static field references";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"classifier",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell_Collection"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.cells.EditorCell_Collection classified with static fields from jetbrains.mps.openapi.editor.cells.EditorCell_Collection";
    }
    public String getAdditionalInfo(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.cells.EditorCell_Collection classified with static fields from jetbrains.mps.openapi.editor.cells.EditorCell_Collection";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      if (!(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),oldReference.getTargetNodeId(),((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("staticFieldDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing ClassCreators using jetbrains.mps.nodeEditor.cells.EditorCell_Collection as a parameter with jetbrains.mps.openapi.editor.cells.EditorCell_Collection";
    }
    public String getAdditionalInfo(){
      return "Replacing ClassCreators using jetbrains.mps.nodeEditor.cells.EditorCell_Collection as a parameter with jetbrains.mps.openapi.editor.cells.EditorCell_Collection";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.nodeEditor.cells.EditorCell_Collection");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.nodeEditor.cells.EditorCell_Collection","jetbrains.mps.openapi.editor.cells.EditorCell_Collection"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("constructorDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing IMethodCalls using jetbrains.mps.nodeEditor.cells.EditorCell_Collection as a parameter with jetbrains.mps.openapi.editor.cells.EditorCell_Collection";
    }
    public String getAdditionalInfo(){
      return "Replacing IMethodCalls using jetbrains.mps.nodeEditor.cells.EditorCell_Collection as a parameter with jetbrains.mps.openapi.editor.cells.EditorCell_Collection";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.nodeEditor.cells.EditorCell_Collection");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.nodeEditor.cells.EditorCell_Collection","jetbrains.mps.openapi.editor.cells.EditorCell_Collection"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("baseMethodDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up methods from jetbrains.mps.nodeEditor.cells.EditorCell_Collection to jetbrains.mps.openapi.editor.cells.EditorCell_Collection";
    }
    public String getAdditionalInfo(){
      return "Pull up methods from jetbrains.mps.nodeEditor.cells.EditorCell_Collection to jetbrains.mps.openapi.editor.cells.EditorCell_Collection";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.firstCell():jetbrains.mps.openapi.editor.cells.EditorCell")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.lastCell():jetbrains.mps.openapi.editor.cells.EditorCell")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.getCellAt(int):jetbrains.mps.openapi.editor.cells.EditorCell")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.getChildCount():int")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.usesBraces():boolean")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.getContentCells():java.lang.Iterable")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.firstContentCell():jetbrains.mps.openapi.editor.cells.EditorCell")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.lastContentCell():jetbrains.mps.openapi.editor.cells.EditorCell")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.getContentCellsCount():int")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.getCellLayout():jetbrains.mps.nodeEditor.cellLayout.CellLayout")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.setAscent(int):void")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.setDescent(int):void")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.getClosingBrace():jetbrains.mps.openapi.editor.cells.EditorCell")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.getOpeningBrace():jetbrains.mps.openapi.editor.cells.EditorCell")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.setArtificialBracesIndent(int):void")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.isFolded():boolean")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.getBracesIndent():int")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.isTransparentCollection():boolean")) {
        return true;
      }
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell_Collection.addEditorCell(jetbrains.mps.nodeEditor.cells.EditorCell):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell_Collection.addCellAt(int,jetbrains.mps.nodeEditor.cells.EditorCell,boolean):void").equals(targetNodeId)) {
        return true;
      }
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.firstCell():jetbrains.mps.openapi.editor.cells.EditorCell")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell_Collection.firstCell():jetbrains.mps.openapi.editor.cells.EditorCell"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.lastCell():jetbrains.mps.openapi.editor.cells.EditorCell")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell_Collection.lastCell():jetbrains.mps.openapi.editor.cells.EditorCell"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.getCellAt(int):jetbrains.mps.openapi.editor.cells.EditorCell")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell_Collection.getCellAt(int):jetbrains.mps.openapi.editor.cells.EditorCell"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.getChildCount():int")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell_Collection.getCellsCount():int"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.usesBraces():boolean")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell_Collection.usesBraces():boolean"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.getContentCells():java.lang.Iterable")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell_Collection.getContentCells():java.lang.Iterable"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.firstContentCell():jetbrains.mps.openapi.editor.cells.EditorCell")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell_Collection.firstContentCell():jetbrains.mps.openapi.editor.cells.EditorCell"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.lastContentCell():jetbrains.mps.openapi.editor.cells.EditorCell")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell_Collection.lastContentCell():jetbrains.mps.openapi.editor.cells.EditorCell"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.getContentCellsCount():int")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell_Collection.getContentCellsCount():int"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.getCellLayout():jetbrains.mps.nodeEditor.cellLayout.CellLayout")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell_Collection.getCellLayout():jetbrains.mps.openapi.editor.cells.CellLayout"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.setAscent(int):void")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell_Collection.setAscent(int):void"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.setDescent(int):void")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell_Collection.setDescent(int):void"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.getClosingBrace():jetbrains.mps.openapi.editor.cells.EditorCell")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell_Collection.getClosingBrace():jetbrains.mps.openapi.editor.cells.EditorCell"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.getOpeningBrace():jetbrains.mps.openapi.editor.cells.EditorCell")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell_Collection.getOpeningBrace():jetbrains.mps.openapi.editor.cells.EditorCell"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.setArtificialBracesIndent(int):void")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell_Collection.setArtificialBracesIndent(int):void"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.isFolded():boolean")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell_Collection.isFolded():boolean"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.getBracesIndent():int")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell_Collection.getBracesIndent():int"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)","~EditorCell_Collection.isTransparentCollection():boolean")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell_Collection.isTransparentCollection():boolean"),false);
        return;
      }
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell_Collection.addEditorCell(jetbrains.mps.nodeEditor.cells.EditorCell):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell_Collection.addEditorCell(jetbrains.mps.openapi.editor.cells.EditorCell):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCell_Collection.addCellAt(int,jetbrains.mps.nodeEditor.cells.EditorCell,boolean):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~EditorCell_Collection.addEditorCellAt(int,jetbrains.mps.openapi.editor.cells.EditorCell,boolean):void"),false);
        return;
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.style.Style classified with static fields from jetbrains.mps.editor.runtime.style.StyleImpl";
    }
    public String getAdditionalInfo(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.style.Style classified with static fields from jetbrains.mps.editor.runtime.style.StyleImpl";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      if (!(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.style(MPS.Editor/jetbrains.mps.nodeEditor.style@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~StyleImpl.LOG").equals(targetNodeId)) {
        return true;
      }
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.editor.runtime.style(MPS.Editor/jetbrains.mps.editor.runtime.style@java_stub)"),oldReference.getTargetNodeId(),((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("staticFieldDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.editor.runtime.style(MPS.Editor/jetbrains.mps.editor.runtime.style@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up methods from jetbrains.mps.nodeEditor.style.Style to jetbrains.mps.editor.runtime.style.StyleImpl";
    }
    public String getAdditionalInfo(){
      return "Pull up methods from jetbrains.mps.nodeEditor.style.Style to jetbrains.mps.editor.runtime.style.StyleImpl";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.style(MPS.Editor/jetbrains.mps.nodeEditor.style@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~Style.set(jetbrains.mps.nodeEditor.style.StyleAttribute,jetbrains.mps.nodeEditor.style.AttributeCalculator):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Style.get(jetbrains.mps.nodeEditor.style.StyleAttribute):java.lang.Object").equals(targetNodeId)) {
        return true;
      }
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.editor.runtime.style(MPS.Editor/jetbrains.mps.editor.runtime.style@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~Style.set(jetbrains.mps.nodeEditor.style.StyleAttribute,jetbrains.mps.nodeEditor.style.AttributeCalculator):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.editor.runtime.style(MPS.Editor/jetbrains.mps.editor.runtime.style@java_stub)","~StyleImpl.set(jetbrains.mps.openapi.editor.style.StyleAttribute,jetbrains.mps.openapi.editor.style.AttributeCalculator):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Style.get(jetbrains.mps.nodeEditor.style.StyleAttribute):java.lang.Object").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.editor.runtime.style(MPS.Editor/jetbrains.mps.editor.runtime.style@java_stub)","~StyleImpl.get(jetbrains.mps.openapi.editor.style.StyleAttribute):java.lang.Object"),false);
        return;
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.nodeEditor.EditorCellAction classifier type instances with jetbrains.mps.openapi.editor.cells.CellAction";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.nodeEditor.EditorCellAction classifier type instances with jetbrains.mps.openapi.editor.cells.CellAction";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"classifier",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorCellAction");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~CellAction"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.nodeEditor.EditorCellAction classifier type with jetbrains.mps.openapi.editor.cells.CellAction in static field references";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.nodeEditor.EditorCellAction classifier type with jetbrains.mps.openapi.editor.cells.CellAction in static field references";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"classifier",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorCellAction");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~CellAction"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.EditorCellAction classified with static fields from jetbrains.mps.openapi.editor.cells.CellAction";
    }
    public String getAdditionalInfo(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.EditorCellAction classified with static fields from jetbrains.mps.openapi.editor.cells.CellAction";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      if (!(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),oldReference.getTargetNodeId(),((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("staticFieldDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing ClassCreators using jetbrains.mps.nodeEditor.EditorCellAction as a parameter with jetbrains.mps.openapi.editor.cells.CellAction";
    }
    public String getAdditionalInfo(){
      return "Replacing ClassCreators using jetbrains.mps.nodeEditor.EditorCellAction as a parameter with jetbrains.mps.openapi.editor.cells.CellAction";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.nodeEditor.EditorCellAction");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.nodeEditor.EditorCellAction","jetbrains.mps.openapi.editor.cells.CellAction"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("constructorDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing IMethodCalls using jetbrains.mps.nodeEditor.EditorCellAction as a parameter with jetbrains.mps.openapi.editor.cells.CellAction";
    }
    public String getAdditionalInfo(){
      return "Replacing IMethodCalls using jetbrains.mps.nodeEditor.EditorCellAction as a parameter with jetbrains.mps.openapi.editor.cells.CellAction";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.nodeEditor.EditorCellAction");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.nodeEditor.EditorCellAction","jetbrains.mps.openapi.editor.cells.CellAction"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("baseMethodDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up methods from jetbrains.mps.nodeEditor.EditorCellAction to jetbrains.mps.openapi.editor.cells.CellAction";
    }
    public String getAdditionalInfo(){
      return "Pull up methods from jetbrains.mps.nodeEditor.EditorCellAction to jetbrains.mps.openapi.editor.cells.CellAction";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorCellAction.execute(jetbrains.mps.nodeEditor.EditorContext):void")) {
        return true;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorCellAction.execute(jetbrains.mps.openapi.editor.EditorContext):void")) {
        return true;
      }
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCellAction.canExecute(jetbrains.mps.nodeEditor.EditorContext):boolean").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCellAction.canExecute(jetbrains.mps.openapi.editor.EditorContext):boolean").equals(targetNodeId)) {
        return true;
      }
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorCellAction.execute(jetbrains.mps.nodeEditor.EditorContext):void")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~CellAction.execute(jetbrains.mps.openapi.editor.EditorContext):void"),false);
        return;
      }
      if (SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorCellAction.execute(jetbrains.mps.openapi.editor.EditorContext):void")) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~CellAction.execute(jetbrains.mps.openapi.editor.EditorContext):void"),false);
        return;
      }
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCellAction.canExecute(jetbrains.mps.nodeEditor.EditorContext):boolean").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~CellAction.canExecute(jetbrains.mps.openapi.editor.EditorContext):boolean"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~EditorCellAction.canExecute(jetbrains.mps.openapi.editor.EditorContext):boolean").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.cells(MPS.Editor/jetbrains.mps.openapi.editor.cells@java_stub)","~CellAction.canExecute(jetbrains.mps.openapi.editor.EditorContext):boolean"),false);
        return;
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.nodeEditor.style.Padding classifier type instances with jetbrains.mps.editor.runtime.style.Padding";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.nodeEditor.style.Padding classifier type instances with jetbrains.mps.editor.runtime.style.Padding";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"classifier",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.style(MPS.Editor/jetbrains.mps.nodeEditor.style@java_stub)","~Padding");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.editor.runtime.style(MPS.Editor/jetbrains.mps.editor.runtime.style@java_stub)","~Padding"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.editor.runtime.style(MPS.Editor/jetbrains.mps.editor.runtime.style@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.nodeEditor.style.Padding classifier type with jetbrains.mps.editor.runtime.style.Padding in static field references";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.nodeEditor.style.Padding classifier type with jetbrains.mps.editor.runtime.style.Padding in static field references";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"classifier",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.style(MPS.Editor/jetbrains.mps.nodeEditor.style@java_stub)","~Padding");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.editor.runtime.style(MPS.Editor/jetbrains.mps.editor.runtime.style@java_stub)","~Padding"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.editor.runtime.style(MPS.Editor/jetbrains.mps.editor.runtime.style@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.style.Padding classified with static fields from jetbrains.mps.editor.runtime.style.Padding";
    }
    public String getAdditionalInfo(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.style.Padding classified with static fields from jetbrains.mps.editor.runtime.style.Padding";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      if (!(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.style(MPS.Editor/jetbrains.mps.nodeEditor.style@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.editor.runtime.style(MPS.Editor/jetbrains.mps.editor.runtime.style@java_stub)"),oldReference.getTargetNodeId(),((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("staticFieldDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.editor.runtime.style(MPS.Editor/jetbrains.mps.editor.runtime.style@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing ClassCreators using jetbrains.mps.nodeEditor.style.Padding as a parameter with jetbrains.mps.editor.runtime.style.Padding";
    }
    public String getAdditionalInfo(){
      return "Replacing ClassCreators using jetbrains.mps.nodeEditor.style.Padding as a parameter with jetbrains.mps.editor.runtime.style.Padding";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.nodeEditor.style.Padding");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.nodeEditor.style.Padding","jetbrains.mps.editor.runtime.style.Padding"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("constructorDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.editor.runtime.style(MPS.Editor/jetbrains.mps.editor.runtime.style@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing IMethodCalls using jetbrains.mps.nodeEditor.style.Padding as a parameter with jetbrains.mps.editor.runtime.style.Padding";
    }
    public String getAdditionalInfo(){
      return "Replacing IMethodCalls using jetbrains.mps.nodeEditor.style.Padding as a parameter with jetbrains.mps.editor.runtime.style.Padding";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.nodeEditor.style.Padding");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.nodeEditor.style.Padding","jetbrains.mps.editor.runtime.style.Padding"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("baseMethodDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.editor.runtime.style(MPS.Editor/jetbrains.mps.editor.runtime.style@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing ClassCreators of jetbrains.mps.nodeEditor.style.Padding with corresponding ClassCreators from jetbrains.mps.editor.runtime.style.Padding";
    }
    public String getAdditionalInfo(){
      return "Replacing ClassCreators of jetbrains.mps.nodeEditor.style.Padding with corresponding ClassCreators from jetbrains.mps.editor.runtime.style.Padding";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SNode classifier=SNodeOperations.getAncestor(SLinkOperations.getTarget(node,"baseMethodDeclaration",false),"jetbrains.mps.baseLanguage.structure.Classifier",false,false);
      return classifier == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.style(MPS.Editor/jetbrains.mps.nodeEditor.style@java_stub)","~Padding");
    }
    public void doUpdateInstanceNode(    final SNode node){
      SNode newConstructor=Sequence.fromIterable(ClassConcept_Behavior.call_constructors_5292274854859503373(SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.editor.runtime.style(MPS.Editor/jetbrains.mps.editor.runtime.style@java_stub)","~Padding"))).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return ListSequence.fromList(SLinkOperations.getTargets(it,"parameter",true)).count() == ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(node,"baseMethodDeclaration",false),"parameter",true)).count();
        }
      }
);
      if (newConstructor != null) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",newConstructor,false);
      }
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.editor.runtime.style(MPS.Editor/jetbrains.mps.editor.runtime.style@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up and remove all methods from jetbrains.mps.nodeEditor.style.Padding to jetbrains.mps.editor.runtime.style.Padding";
    }
    public String getAdditionalInfo(){
      return "Pull up and remove all methods from jetbrains.mps.nodeEditor.style.Padding to jetbrains.mps.editor.runtime.style.Padding";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      if (!(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.style(MPS.Editor/jetbrains.mps.nodeEditor.style@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~Padding.getValue():double").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Padding.getType():jetbrains.mps.editor.runtime.style.Measure").equals(targetNodeId)) {
        return true;
      }
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.editor.runtime.style(MPS.Editor/jetbrains.mps.editor.runtime.style@java_stub)"),oldReference.getTargetNodeId(),((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("baseMethodDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.editor.runtime.style(MPS.Editor/jetbrains.mps.editor.runtime.style@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.nodeEditor.selection.SelectionManager classifier type instances with jetbrains.mps.openapi.editor.selection.SelectionManager";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.nodeEditor.selection.SelectionManager classifier type instances with jetbrains.mps.openapi.editor.selection.SelectionManager";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType","classifier"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      return jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager").equals(reference.getTargetNodeId());
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionManager"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.nodeEditor.selection.SelectionManager classifier type with jetbrains.mps.openapi.editor.selection.SelectionManager in static field references";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.nodeEditor.selection.SelectionManager classifier type with jetbrains.mps.openapi.editor.selection.SelectionManager in static field references";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","classifier"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      return jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager").equals(reference.getTargetNodeId());
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionManager"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.selection.SelectionManager classified with static fields from jetbrains.mps.openapi.editor.selection.SelectionManager";
    }
    public String getAdditionalInfo(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.selection.SelectionManager classified with static fields from jetbrains.mps.openapi.editor.selection.SelectionManager";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      if (!(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.FIRST_CELL").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.LAST_CELL").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.FIRST_EDITABLE_CELL").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.LAST_EDITABLE_CELL").equals(targetNodeId)) {
        return true;
      }
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),oldReference.getTargetNodeId(),((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("staticFieldDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing ClassCreators using jetbrains.mps.nodeEditor.selection.SelectionManager as a parameter with jetbrains.mps.openapi.editor.selection.SelectionManager";
    }
    public String getAdditionalInfo(){
      return "Replacing ClassCreators using jetbrains.mps.nodeEditor.selection.SelectionManager as a parameter with jetbrains.mps.openapi.editor.selection.SelectionManager";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.nodeEditor.selection.SelectionManager");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.nodeEditor.selection.SelectionManager","jetbrains.mps.openapi.editor.selection.SelectionManager"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("constructorDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing IMethodCalls using jetbrains.mps.nodeEditor.selection.SelectionManager as a parameter with jetbrains.mps.openapi.editor.selection.SelectionManager";
    }
    public String getAdditionalInfo(){
      return "Replacing IMethodCalls using jetbrains.mps.nodeEditor.selection.SelectionManager as a parameter with jetbrains.mps.openapi.editor.selection.SelectionManager";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.nodeEditor.selection.SelectionManager");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.nodeEditor.selection.SelectionManager","jetbrains.mps.openapi.editor.selection.SelectionManager"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("baseMethodDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up methods from jetbrains.mps.nodeEditor.selection.SelectionManager to jetbrains.mps.openapi.editor.selection.SelectionManager";
    }
    public String getAdditionalInfo(){
      return "Pull up methods from jetbrains.mps.nodeEditor.selection.SelectionManager to jetbrains.mps.openapi.editor.selection.SelectionManager";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.getSelection():jetbrains.mps.nodeEditor.selection.Selection").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.getDeepestSelection():jetbrains.mps.nodeEditor.selection.Selection").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.createSelection(jetbrains.mps.nodeEditor.cells.EditorCell):jetbrains.mps.nodeEditor.selection.Selection").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.createRangeSelection(org.jetbrains.mps.openapi.model.SNode,org.jetbrains.mps.openapi.model.SNode):jetbrains.mps.nodeEditor.selection.Selection").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.setSelection(jetbrains.mps.nodeEditor.cells.EditorCell):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.setSelection(jetbrains.mps.nodeEditor.cells.EditorCell_Label,int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.setSelection(jetbrains.mps.nodeEditor.cells.EditorCell_Label,int,int,int):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.setSelection(jetbrains.mps.nodeEditor.selection.Selection):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.pushSelection(jetbrains.mps.nodeEditor.selection.Selection):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.popSelection():jetbrains.mps.nodeEditor.selection.Selection").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.getSelectionInfoStack():java.util.Stack").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.setSelectionInfoStack(java.util.Stack):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.addSelectionListener(jetbrains.mps.nodeEditor.selection.SelectionListener):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.removeSelectionListener(jetbrains.mps.nodeEditor.selection.SelectionListener):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.clearSelection():void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.getSelectionStackIterable():java.lang.Iterable").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.getSelectionStackSize():int").equals(targetNodeId)) {
        return true;
      }
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.getSelection():jetbrains.mps.nodeEditor.selection.Selection").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionManager.getSelection():jetbrains.mps.openapi.editor.selection.Selection"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.getDeepestSelection():jetbrains.mps.nodeEditor.selection.Selection").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionManager.getDeepestSelection():jetbrains.mps.openapi.editor.selection.Selection"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.createSelection(jetbrains.mps.nodeEditor.cells.EditorCell):jetbrains.mps.nodeEditor.selection.Selection").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionManager.createSelection(jetbrains.mps.openapi.editor.cells.EditorCell):jetbrains.mps.openapi.editor.selection.Selection"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.createRangeSelection(org.jetbrains.mps.openapi.model.SNode,org.jetbrains.mps.openapi.model.SNode):jetbrains.mps.nodeEditor.selection.Selection").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionManager.createRangeSelection(org.jetbrains.mps.openapi.model.SNode,org.jetbrains.mps.openapi.model.SNode):jetbrains.mps.openapi.editor.selection.Selection"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.setSelection(jetbrains.mps.nodeEditor.cells.EditorCell):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionManager.setSelection(jetbrains.mps.openapi.editor.cells.EditorCell):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.setSelection(jetbrains.mps.nodeEditor.cells.EditorCell_Label,int):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionManager.setSelection(jetbrains.mps.openapi.editor.cells.EditorCell_Label,int):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.setSelection(jetbrains.mps.nodeEditor.cells.EditorCell_Label,int,int,int):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionManager.setSelection(jetbrains.mps.openapi.editor.cells.EditorCell_Label,int,int,int):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.setSelection(jetbrains.mps.nodeEditor.selection.Selection):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionManager.setSelection(jetbrains.mps.openapi.editor.selection.Selection):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.pushSelection(jetbrains.mps.nodeEditor.selection.Selection):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionManager.pushSelection(jetbrains.mps.openapi.editor.selection.Selection):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.popSelection():jetbrains.mps.nodeEditor.selection.Selection").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionManager.popSelection():jetbrains.mps.openapi.editor.selection.Selection"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.getSelectionInfoStack():java.util.Stack").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionManager.getSelectionInfoStack():java.util.List"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.setSelectionInfoStack(java.util.Stack):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionManager.setSelectionInfoStack(java.util.List):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.addSelectionListener(jetbrains.mps.nodeEditor.selection.SelectionListener):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionManager.addSelectionListener(jetbrains.mps.openapi.editor.selection.SelectionListener):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.removeSelectionListener(jetbrains.mps.nodeEditor.selection.SelectionListener):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionManager.removeSelectionListener(jetbrains.mps.openapi.editor.selection.SelectionListener):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.clearSelection():void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionManager.clearSelection():void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.getSelectionStackIterable():java.lang.Iterable").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionManager.getSelectionStackIterable():java.lang.Iterable"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionManager.getSelectionStackSize():int").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionManager.getSelectionStackSize():int"),false);
        return;
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.nodeEditor.selection.Selection classifier type instances with jetbrains.mps.openapi.editor.selection.Selection";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.nodeEditor.selection.Selection classifier type instances with jetbrains.mps.openapi.editor.selection.Selection";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType","classifier"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      return jetbrains.mps.smodel.SNodeId.fromString("~Selection").equals(reference.getTargetNodeId());
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~Selection"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.nodeEditor.selection.Selection classifier type with jetbrains.mps.openapi.editor.selection.Selection in static field references";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.nodeEditor.selection.Selection classifier type with jetbrains.mps.openapi.editor.selection.Selection in static field references";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","classifier"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      return jetbrains.mps.smodel.SNodeId.fromString("~Selection").equals(reference.getTargetNodeId());
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~Selection"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.selection.Selection classified with static fields from jetbrains.mps.openapi.editor.selection.Selection";
    }
    public String getAdditionalInfo(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.selection.Selection classified with static fields from jetbrains.mps.openapi.editor.selection.Selection";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      if (!(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),oldReference.getTargetNodeId(),((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("staticFieldDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing ClassCreators using jetbrains.mps.nodeEditor.selection.Selection as a parameter with jetbrains.mps.openapi.editor.selection.Selection";
    }
    public String getAdditionalInfo(){
      return "Replacing ClassCreators using jetbrains.mps.nodeEditor.selection.Selection as a parameter with jetbrains.mps.openapi.editor.selection.Selection";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.nodeEditor.selection.Selection");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.nodeEditor.selection.Selection","jetbrains.mps.openapi.editor.selection.Selection"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("constructorDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing IMethodCalls using jetbrains.mps.nodeEditor.selection.Selection as a parameter with jetbrains.mps.openapi.editor.selection.Selection";
    }
    public String getAdditionalInfo(){
      return "Replacing IMethodCalls using jetbrains.mps.nodeEditor.selection.Selection as a parameter with jetbrains.mps.openapi.editor.selection.Selection";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.nodeEditor.selection.Selection");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.nodeEditor.selection.Selection","jetbrains.mps.openapi.editor.selection.Selection"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("baseMethodDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up methods from jetbrains.mps.nodeEditor.selection.Selection to jetbrains.mps.openapi.editor.selection.Selection";
    }
    public String getAdditionalInfo(){
      return "Pull up methods from jetbrains.mps.nodeEditor.selection.Selection to jetbrains.mps.openapi.editor.selection.Selection";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.getEditorComponent():jetbrains.mps.nodeEditor.EditorComponent").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.getSelectionInfo():jetbrains.mps.nodeEditor.selection.SelectionInfo").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.isSame(jetbrains.mps.nodeEditor.selection.Selection):boolean").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.canExecuteAction(jetbrains.mps.nodeEditor.CellActionType):boolean").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.executeAction(jetbrains.mps.nodeEditor.CellActionType):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.activate():void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.deactivate():void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.canExecuteAction(jetbrains.mps.openapi.editor.cells.CellActionType):boolean").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.executeAction(jetbrains.mps.openapi.editor.cells.CellActionType):void").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.getSelectedCells():java.util.List").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.getSelectedNodes():java.util.List").equals(targetNodeId)) {
        return true;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.ensureVisible():void").equals(targetNodeId)) {
        return true;
      }
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.getEditorComponent():jetbrains.mps.nodeEditor.EditorComponent").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~Selection.getEditorComponent():jetbrains.mps.openapi.editor.EditorComponent"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.getSelectionInfo():jetbrains.mps.nodeEditor.selection.SelectionInfo").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~Selection.getSelectionInfo():jetbrains.mps.openapi.editor.selection.SelectionInfo"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.isSame(jetbrains.mps.nodeEditor.selection.Selection):boolean").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~Selection.isSame(jetbrains.mps.openapi.editor.selection.Selection):boolean"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.canExecuteAction(jetbrains.mps.nodeEditor.CellActionType):boolean").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~Selection.canExecuteAction(jetbrains.mps.openapi.editor.cells.CellActionType):boolean"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.executeAction(jetbrains.mps.nodeEditor.CellActionType):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~Selection.executeAction(jetbrains.mps.openapi.editor.cells.CellActionType):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.activate():void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~Selection.activate():void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.deactivate():void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~Selection.deactivate():void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.canExecuteAction(jetbrains.mps.openapi.editor.cells.CellActionType):boolean").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~Selection.canExecuteAction(jetbrains.mps.openapi.editor.cells.CellActionType):boolean"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.executeAction(jetbrains.mps.openapi.editor.cells.CellActionType):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~Selection.executeAction(jetbrains.mps.openapi.editor.cells.CellActionType):void"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.getSelectedCells():java.util.List").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~Selection.getSelectedCells():java.util.List"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.getSelectedNodes():java.util.List").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~Selection.getSelectedNodes():java.util.List"),false);
        return;
      }
      if (jetbrains.mps.smodel.SNodeId.fromString("~Selection.ensureVisible():void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~Selection.ensureVisible():void"),false);
        return;
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.nodeEditor.selection.MultipleSelection classifier type instances with jetbrains.mps.openapi.editor.selection.MultipleSelection";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.nodeEditor.selection.MultipleSelection classifier type instances with jetbrains.mps.openapi.editor.selection.MultipleSelection";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType","classifier"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      return jetbrains.mps.smodel.SNodeId.fromString("~MultipleSelection").equals(reference.getTargetNodeId());
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~MultipleSelection"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.nodeEditor.selection.MultipleSelection classifier type with jetbrains.mps.openapi.editor.selection.MultipleSelection in static field references";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.nodeEditor.selection.MultipleSelection classifier type with jetbrains.mps.openapi.editor.selection.MultipleSelection in static field references";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","classifier"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      return jetbrains.mps.smodel.SNodeId.fromString("~MultipleSelection").equals(reference.getTargetNodeId());
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~MultipleSelection"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.selection.MultipleSelection classified with static fields from jetbrains.mps.openapi.editor.selection.MultipleSelection";
    }
    public String getAdditionalInfo(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.selection.MultipleSelection classified with static fields from jetbrains.mps.openapi.editor.selection.MultipleSelection";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      if (!(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),oldReference.getTargetNodeId(),((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("staticFieldDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing ClassCreators using jetbrains.mps.nodeEditor.selection.MultipleSelection as a parameter with jetbrains.mps.openapi.editor.selection.MultipleSelection";
    }
    public String getAdditionalInfo(){
      return "Replacing ClassCreators using jetbrains.mps.nodeEditor.selection.MultipleSelection as a parameter with jetbrains.mps.openapi.editor.selection.MultipleSelection";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.nodeEditor.selection.MultipleSelection");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.nodeEditor.selection.MultipleSelection","jetbrains.mps.openapi.editor.selection.MultipleSelection"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("constructorDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing IMethodCalls using jetbrains.mps.nodeEditor.selection.MultipleSelection as a parameter with jetbrains.mps.openapi.editor.selection.MultipleSelection";
    }
    public String getAdditionalInfo(){
      return "Replacing IMethodCalls using jetbrains.mps.nodeEditor.selection.MultipleSelection as a parameter with jetbrains.mps.openapi.editor.selection.MultipleSelection";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.nodeEditor.selection.MultipleSelection");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.nodeEditor.selection.MultipleSelection","jetbrains.mps.openapi.editor.selection.MultipleSelection"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("baseMethodDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up and remove all methods from jetbrains.mps.nodeEditor.selection.MultipleSelection to jetbrains.mps.openapi.editor.selection.MultipleSelection";
    }
    public String getAdditionalInfo(){
      return "Pull up and remove all methods from jetbrains.mps.nodeEditor.selection.MultipleSelection to jetbrains.mps.openapi.editor.selection.MultipleSelection";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      if (!(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),oldReference.getTargetNodeId(),((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("baseMethodDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.nodeEditor.selection.SelectionInfo classifier type instances with jetbrains.mps.openapi.editor.selection.SelectionInfo";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.nodeEditor.selection.SelectionInfo classifier type instances with jetbrains.mps.openapi.editor.selection.SelectionInfo";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType","classifier"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      return jetbrains.mps.smodel.SNodeId.fromString("~SelectionInfo").equals(reference.getTargetNodeId());
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionInfo"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.nodeEditor.selection.SelectionInfo classifier type with jetbrains.mps.openapi.editor.selection.SelectionInfo in static field references";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.nodeEditor.selection.SelectionInfo classifier type with jetbrains.mps.openapi.editor.selection.SelectionInfo in static field references";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","classifier"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      return jetbrains.mps.smodel.SNodeId.fromString("~SelectionInfo").equals(reference.getTargetNodeId());
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionInfo"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.selection.SelectionInfo classified with static fields from jetbrains.mps.openapi.editor.selection.SelectionInfo";
    }
    public String getAdditionalInfo(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.selection.SelectionInfo classified with static fields from jetbrains.mps.openapi.editor.selection.SelectionInfo";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      if (!(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),oldReference.getTargetNodeId(),((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("staticFieldDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing ClassCreators using jetbrains.mps.nodeEditor.selection.SelectionInfo as a parameter with jetbrains.mps.openapi.editor.selection.SelectionInfo";
    }
    public String getAdditionalInfo(){
      return "Replacing ClassCreators using jetbrains.mps.nodeEditor.selection.SelectionInfo as a parameter with jetbrains.mps.openapi.editor.selection.SelectionInfo";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.nodeEditor.selection.SelectionInfo");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.nodeEditor.selection.SelectionInfo","jetbrains.mps.openapi.editor.selection.SelectionInfo"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("constructorDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing IMethodCalls using jetbrains.mps.nodeEditor.selection.SelectionInfo as a parameter with jetbrains.mps.openapi.editor.selection.SelectionInfo";
    }
    public String getAdditionalInfo(){
      return "Replacing IMethodCalls using jetbrains.mps.nodeEditor.selection.SelectionInfo as a parameter with jetbrains.mps.openapi.editor.selection.SelectionInfo";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.nodeEditor.selection.SelectionInfo");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.nodeEditor.selection.SelectionInfo","jetbrains.mps.openapi.editor.selection.SelectionInfo"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("baseMethodDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up methods from jetbrains.mps.nodeEditor.selection.SelectionInfo to jetbrains.mps.openapi.editor.selection.SelectionInfo";
    }
    public String getAdditionalInfo(){
      return "Pull up methods from jetbrains.mps.nodeEditor.selection.SelectionInfo to jetbrains.mps.openapi.editor.selection.SelectionInfo";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionInfo.createSelection(jetbrains.mps.nodeEditor.EditorComponent):jetbrains.mps.nodeEditor.selection.Selection").equals(targetNodeId)) {
        return true;
      }
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionInfo.createSelection(jetbrains.mps.nodeEditor.EditorComponent):jetbrains.mps.nodeEditor.selection.Selection").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionInfo.createSelection(jetbrains.mps.openapi.editor.EditorComponent):jetbrains.mps.openapi.editor.selection.Selection"),false);
        return;
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.nodeEditor.selection.SelectionListener classifier type instances with jetbrains.mps.openapi.editor.selection.SelectionListener";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.nodeEditor.selection.SelectionListener classifier type instances with jetbrains.mps.openapi.editor.selection.SelectionListener";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType","classifier"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      return jetbrains.mps.smodel.SNodeId.fromString("~SelectionListener").equals(reference.getTargetNodeId());
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionListener"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.nodeEditor.selection.SelectionListener classifier type with jetbrains.mps.openapi.editor.selection.SelectionListener in static field references";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.nodeEditor.selection.SelectionListener classifier type with jetbrains.mps.openapi.editor.selection.SelectionListener in static field references";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","classifier"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      return jetbrains.mps.smodel.SNodeId.fromString("~SelectionListener").equals(reference.getTargetNodeId());
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionListener"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.selection.SelectionListener classified with static fields from jetbrains.mps.openapi.editor.selection.SelectionListener";
    }
    public String getAdditionalInfo(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.nodeEditor.selection.SelectionListener classified with static fields from jetbrains.mps.openapi.editor.selection.SelectionListener";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      if (!(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),oldReference.getTargetNodeId(),((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("staticFieldDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing ClassCreators using jetbrains.mps.nodeEditor.selection.SelectionListener as a parameter with jetbrains.mps.openapi.editor.selection.SelectionListener";
    }
    public String getAdditionalInfo(){
      return "Replacing ClassCreators using jetbrains.mps.nodeEditor.selection.SelectionListener as a parameter with jetbrains.mps.openapi.editor.selection.SelectionListener";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.nodeEditor.selection.SelectionListener");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.nodeEditor.selection.SelectionListener","jetbrains.mps.openapi.editor.selection.SelectionListener"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("constructorDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing IMethodCalls using jetbrains.mps.nodeEditor.selection.SelectionListener as a parameter with jetbrains.mps.openapi.editor.selection.SelectionListener";
    }
    public String getAdditionalInfo(){
      return "Replacing IMethodCalls using jetbrains.mps.nodeEditor.selection.SelectionListener as a parameter with jetbrains.mps.openapi.editor.selection.SelectionListener";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.nodeEditor.selection.SelectionListener");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.nodeEditor.selection.SelectionListener","jetbrains.mps.openapi.editor.selection.SelectionListener"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("baseMethodDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up methods from jetbrains.mps.nodeEditor.selection.SelectionListener to jetbrains.mps.openapi.editor.selection.SelectionListener";
    }
    public String getAdditionalInfo(){
      return "Pull up methods from jetbrains.mps.nodeEditor.selection.SelectionListener to jetbrains.mps.openapi.editor.selection.SelectionListener";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionListener.selectionChanged(jetbrains.mps.nodeEditor.EditorComponent,jetbrains.mps.nodeEditor.selection.Selection,jetbrains.mps.nodeEditor.selection.Selection):void").equals(targetNodeId)) {
        return true;
      }
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~SelectionListener.selectionChanged(jetbrains.mps.nodeEditor.EditorComponent,jetbrains.mps.nodeEditor.selection.Selection,jetbrains.mps.nodeEditor.selection.Selection):void").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SelectionListener.selectionChanged(jetbrains.mps.openapi.editor.EditorComponent,jetbrains.mps.openapi.editor.selection.Selection,jetbrains.mps.openapi.editor.selection.Selection):void"),false);
        return;
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.openapi.editor.selection.SingularSelection classifier type instances with jetbrains.mps.openapi.editor.selection.SingularSelection";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.openapi.editor.selection.SingularSelection classifier type instances with jetbrains.mps.openapi.editor.selection.SingularSelection";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType","classifier"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      return jetbrains.mps.smodel.SNodeId.fromString("~SingularSelection").equals(reference.getTargetNodeId());
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SingularSelection"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing jetbrains.mps.openapi.editor.selection.SingularSelection classifier type with jetbrains.mps.openapi.editor.selection.SingularSelection in static field references";
    }
    public String getAdditionalInfo(){
      return "Replacing jetbrains.mps.openapi.editor.selection.SingularSelection classifier type with jetbrains.mps.openapi.editor.selection.SingularSelection in static field references";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","classifier"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      return jetbrains.mps.smodel.SNodeId.fromString("~SingularSelection").equals(reference.getTargetNodeId());
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"classifier",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SingularSelection"),false);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.openapi.editor.selection.SingularSelection classified with static fields from jetbrains.mps.openapi.editor.selection.SingularSelection";
    }
    public String getAdditionalInfo(){
      return "Replacing static field references referencing static fields declared in jetbrains.mps.openapi.editor.selection.SingularSelection classified with static fields from jetbrains.mps.openapi.editor.selection.SingularSelection";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      if (!(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),oldReference.getTargetNodeId(),((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("staticFieldDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing ClassCreators using jetbrains.mps.openapi.editor.selection.SingularSelection as a parameter with jetbrains.mps.openapi.editor.selection.SingularSelection";
    }
    public String getAdditionalInfo(){
      return "Replacing ClassCreators using jetbrains.mps.openapi.editor.selection.SingularSelection as a parameter with jetbrains.mps.openapi.editor.selection.SingularSelection";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.openapi.editor.selection.SingularSelection");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.openapi.editor.selection.SingularSelection","jetbrains.mps.openapi.editor.selection.SingularSelection"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("constructorDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replacing IMethodCalls using jetbrains.mps.openapi.editor.selection.SingularSelection as a parameter with jetbrains.mps.openapi.editor.selection.SingularSelection";
    }
    public String getAdditionalInfo(){
      return "Replacing IMethodCalls using jetbrains.mps.openapi.editor.selection.SingularSelection as a parameter with jetbrains.mps.openapi.editor.selection.SingularSelection";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (targetNodeId == null) {
        return false;
      }
      return targetNodeId.toString().contains("jetbrains.mps.openapi.editor.selection.SingularSelection");
    }
    public void doUpdateInstanceNode(    SNode node){
      SReference oldReference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SNodeId oldNodeId=oldReference.getTargetNodeId();
      SNodeId newNodeId=jetbrains.mps.smodel.SNodeId.fromString(oldNodeId.toString().replaceAll("jetbrains.mps.openapi.editor.selection.SingularSelection","jetbrains.mps.openapi.editor.selection.SingularSelection"));
      SReference newReference=new StaticReference(oldReference.getRole(),node,oldReference.getTargetSModelReference(),newNodeId,((jetbrains.mps.smodel.SReference)oldReference).getResolveInfo());
      node.setReference(oldReference.getRole(),null);
      node.setReference("baseMethodDeclaration",newReference);
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up methods from jetbrains.mps.openapi.editor.selection.SingularSelection to jetbrains.mps.openapi.editor.selection.SingularSelection";
    }
    public String getAdditionalInfo(){
      return "Pull up methods from jetbrains.mps.openapi.editor.selection.SingularSelection to jetbrains.mps.openapi.editor.selection.SingularSelection";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.IMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      if (reference == null || jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(reference) != null || !(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.selection(MPS.Editor/jetbrains.mps.nodeEditor.selection@java_stub)").equals(reference.getTargetSModelReference()))) {
        return false;
      }
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~SingularSelection.getEditorCell():jetbrains.mps.nodeEditor.cells.EditorCell").equals(targetNodeId)) {
        return true;
      }
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
      ((SModelInternal)node.getModel()).addModelImport(PersistenceFacade.getInstance().createModelReference("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)"),false);
      ((AbstractModule)node.getModel().getModule()).addDependency(PersistenceFacade.getInstance().createModuleReference("1ed103c3-3aa6-49b7-9c21-6765ee11f224(MPS.Editor)"),false);
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.IMethodCall","baseMethodDeclaration"));
      SNodeId targetNodeId=reference.getTargetNodeId();
      if (jetbrains.mps.smodel.SNodeId.fromString("~SingularSelection.getEditorCell():jetbrains.mps.nodeEditor.cells.EditorCell").equals(targetNodeId)) {
        SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor.selection(MPS.Editor/jetbrains.mps.openapi.editor.selection@java_stub)","~SingularSelection.getEditorCell():jetbrains.mps.openapi.editor.cells.EditorCell"),false);
        return;
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
