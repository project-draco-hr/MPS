{
  super("To Editor API usages");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.getSelectedNode to jetbrains.mps.openapi.editor.EditorContext.getSelectedNode";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.getSelectedNode to jetbrains.mps.openapi.editor.EditorContext.getSelectedNode";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getSelectedNode():jetbrains.mps.smodel.SNode");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.getSelectedNode():jetbrains.mps.smodel.SNode"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.selectWRTFocusPolicy to jetbrains.mps.openapi.editor.EditorContext.selectWRTFocusPolicy";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.selectWRTFocusPolicy to jetbrains.mps.openapi.editor.EditorContext.selectWRTFocusPolicy";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.selectWRTFocusPolicy(jetbrains.mps.smodel.SNode):void");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.selectWRTFocusPolicy(jetbrains.mps.smodel.SNode):void"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.selectWRTFocusPolicy to jetbrains.mps.openapi.editor.EditorContext.selectWRTFocusPolicy";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.selectWRTFocusPolicy to jetbrains.mps.openapi.editor.EditorContext.selectWRTFocusPolicy";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.selectWRTFocusPolicy(jetbrains.mps.smodel.SNode,boolean):void");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.selectWRTFocusPolicy(jetbrains.mps.smodel.SNode,boolean):void"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.select to jetbrains.mps.openapi.editor.EditorContext.select";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.select to jetbrains.mps.openapi.editor.EditorContext.select";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.select(jetbrains.mps.smodel.SNode):void");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.select(jetbrains.mps.smodel.SNode):void"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.selectBefore to jetbrains.mps.openapi.editor.EditorContext.selectBefore";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.selectBefore to jetbrains.mps.openapi.editor.EditorContext.selectBefore";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.selectBefore(jetbrains.mps.smodel.SNode):void");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.selectBefore(jetbrains.mps.smodel.SNode):void"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.selectAfter to jetbrains.mps.openapi.editor.EditorContext.selectAfter";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.selectAfter to jetbrains.mps.openapi.editor.EditorContext.selectAfter";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.selectAfter(jetbrains.mps.smodel.SNode):void");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.selectAfter(jetbrains.mps.smodel.SNode):void"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.selectAndSetCaret to jetbrains.mps.openapi.editor.EditorContext.selectAndSetCaret";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.selectAndSetCaret to jetbrains.mps.openapi.editor.EditorContext.selectAndSetCaret";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.selectAndSetCaret(jetbrains.mps.smodel.SNode,int):void");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.selectAndSetCaret(jetbrains.mps.smodel.SNode,int):void"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.getSelectedCell to jetbrains.mps.openapi.editor.EditorContext.getSelectedCell";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.getSelectedCell to jetbrains.mps.openapi.editor.EditorContext.getSelectedCell";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getSelectedCell():jetbrains.mps.nodeEditor.cells.EditorCell");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.getSelectedCell():jetbrains.mps.openapi.editor.EditorCell"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.getContextCell to jetbrains.mps.openapi.editor.EditorContext.getContextCell";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.getContextCell to jetbrains.mps.openapi.editor.EditorContext.getContextCell";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getContextCell():jetbrains.mps.nodeEditor.cells.EditorCell");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.getContextCell():jetbrains.mps.openapi.editor.EditorCell"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.getNodeEditorComponent to jetbrains.mps.openapi.editor.EditorContext.getEditorComponent";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.getNodeEditorComponent to jetbrains.mps.openapi.editor.EditorContext.getEditorComponent";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getNodeEditorComponent():jetbrains.mps.nodeEditor.EditorComponent");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.getEditorComponent():jetbrains.mps.openapi.editor.EditorComponent"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.executeCommand to jetbrains.mps.openapi.editor.EditorContext.executeCommand";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.executeCommand to jetbrains.mps.openapi.editor.EditorContext.executeCommand";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.executeCommand(java.lang.Runnable):void");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.executeCommand(java.lang.Runnable):void"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.executeCommand to jetbrains.mps.openapi.editor.EditorContext.executeCommand";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.executeCommand to jetbrains.mps.openapi.editor.EditorContext.executeCommand";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.executeCommand(jetbrains.mps.util.Computable):java.lang.Object");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.executeCommand(java.lang.Runnable):void"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.flushEvents to jetbrains.mps.openapi.editor.EditorContext.flushEvents";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.flushEvents to jetbrains.mps.openapi.editor.EditorContext.flushEvents";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.flushEvents():void");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.flushEvents():void"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.getScope to jetbrains.mps.openapi.editor.EditorContext.getScope";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.getScope to jetbrains.mps.openapi.editor.EditorContext.getScope";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getScope():jetbrains.mps.smodel.IScope");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.getScope():jetbrains.mps.smodel.IScope"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.createNodeCell to jetbrains.mps.openapi.editor.EditorContext.createNodeCell";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.createNodeCell to jetbrains.mps.openapi.editor.EditorContext.createNodeCell";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.createNodeCell(jetbrains.mps.smodel.SNode):jetbrains.mps.nodeEditor.cells.EditorCell");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.createNodeCell(jetbrains.mps.smodel.SNode):jetbrains.mps.openapi.editor.EditorCell"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.createReferentCell to jetbrains.mps.openapi.editor.EditorContext.createReferentCell";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.createReferentCell to jetbrains.mps.openapi.editor.EditorContext.createReferentCell";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.createReferentCell(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.SNode,java.lang.String):jetbrains.mps.nodeEditor.cells.EditorCell");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.createReferentCell(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.SNode,java.lang.String):jetbrains.mps.openapi.editor.EditorCell"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.createRoleAttributeCell to jetbrains.mps.openapi.editor.EditorContext.createRoleAttributeCell";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.createRoleAttributeCell to jetbrains.mps.openapi.editor.EditorContext.createRoleAttributeCell";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.createRoleAttributeCell(java.lang.Class,jetbrains.mps.openapi.editor.EditorCell,jetbrains.mps.smodel.SNode):jetbrains.mps.openapi.editor.EditorCell");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.createRoleAttributeCell(java.lang.Class,jetbrains.mps.openapi.editor.EditorCell,jetbrains.mps.smodel.SNode):jetbrains.mps.openapi.editor.EditorCell"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.getOperationContext to jetbrains.mps.openapi.editor.EditorContext.getOperationContext";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.getOperationContext to jetbrains.mps.openapi.editor.EditorContext.getOperationContext";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.getOperationContext():jetbrains.mps.smodel.IOperationContext");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.getOperationContext():jetbrains.mps.smodel.IOperationContext"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.isInspector to jetbrains.mps.openapi.editor.EditorContext.isInspector";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorContext.isInspector to jetbrains.mps.openapi.editor.EditorContext.isInspector";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorContext.isInspector():boolean");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorContext.isInspector():boolean"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorComponent.selectNode to jetbrains.mps.openapi.editor.EditorComponent.selectNode";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorComponent.selectNode to jetbrains.mps.openapi.editor.EditorComponent.selectNode";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorComponent.selectNode(jetbrains.mps.smodel.SNode):void");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorComponent.selectNode(jetbrains.mps.smodel.SNode):void"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorComponent.getDeepestSelectedCell to jetbrains.mps.openapi.editor.EditorComponent.getDeepestSelectedCell";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorComponent.getDeepestSelectedCell to jetbrains.mps.openapi.editor.EditorComponent.getDeepestSelectedCell";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorComponent.getDeepestSelectedCell():jetbrains.mps.nodeEditor.cells.EditorCell");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorComponent.getDeepestSelectedCell():jetbrains.mps.openapi.editor.EditorCell"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorComponent.getSelectedNodes to jetbrains.mps.openapi.editor.EditorComponent.getSelectedNodes";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorComponent.getSelectedNodes to jetbrains.mps.openapi.editor.EditorComponent.getSelectedNodes";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorComponent.getSelectedNodes():java.util.List");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorComponent.getSelectedNodes():java.util.List"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorComponent.findCellWithId to jetbrains.mps.openapi.editor.EditorComponent.findCellWithId";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorComponent.findCellWithId to jetbrains.mps.openapi.editor.EditorComponent.findCellWithId";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorComponent.findCellWithId(jetbrains.mps.smodel.SNode,java.lang.String):jetbrains.mps.nodeEditor.cells.EditorCell");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorComponent.findCellWithId(jetbrains.mps.smodel.SNode,java.lang.String):jetbrains.mps.openapi.editor.EditorCell"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorComponent.rebuildEditorContent to jetbrains.mps.openapi.editor.EditorComponent.rebuildEditorContent";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorComponent.rebuildEditorContent to jetbrains.mps.openapi.editor.EditorComponent.rebuildEditorContent";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorComponent.rebuildEditorContent():void");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorComponent.rebuildEditorContent():void"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorComponent.isReadOnly to jetbrains.mps.openapi.editor.EditorComponent.isReadOnly";
    }
    public String getAdditionalInfo(){
      return "Pull up method jetbrains.mps.nodeEditor.EditorComponent.isReadOnly to jetbrains.mps.openapi.editor.EditorComponent.isReadOnly";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"baseMethodDeclaration",false) == SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)","~EditorComponent.isReadOnly():boolean");
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"baseMethodDeclaration",SNodeOperations.getNode("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.openapi.editor(MPS.Editor/jetbrains.mps.openapi.editor@java_stub)","~EditorComponent.isReadOnly():boolean"),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
