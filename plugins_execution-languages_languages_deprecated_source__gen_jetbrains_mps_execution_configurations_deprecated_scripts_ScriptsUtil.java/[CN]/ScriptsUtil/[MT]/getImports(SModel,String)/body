{
  return Sequence.fromIterable(Sequence.fromClosure(new ISequenceClosure<jetbrains.mps.smodel.SModel.ImportElement>(){
    public Iterable<jetbrains.mps.smodel.SModel.ImportElement> iterable(){
      return ((jetbrains.mps.smodel.SModel)model).importedModels();
    }
  }
)).where(new IWhereFilter<jetbrains.mps.smodel.SModel.ImportElement>(){
    public boolean accept(    jetbrains.mps.smodel.SModel.ImportElement it){
      return it.getModelReference().getLongName().equals(longName);
    }
  }
);
}
