{
  return Sequence.fromIterable(Sequence.fromClosure(new ISequenceClosure<SModel.ImportElement>(){
    public Iterable<SModel.ImportElement> iterable(){
      return ((SModelInternal)model).importedModels();
    }
  }
)).where(new IWhereFilter<SModel.ImportElement>(){
    public boolean accept(    SModel.ImportElement it){
      return SModelStereotype.withoutStereotype(it.getModelReference().getModelName()).equals(longName);
    }
  }
);
}
