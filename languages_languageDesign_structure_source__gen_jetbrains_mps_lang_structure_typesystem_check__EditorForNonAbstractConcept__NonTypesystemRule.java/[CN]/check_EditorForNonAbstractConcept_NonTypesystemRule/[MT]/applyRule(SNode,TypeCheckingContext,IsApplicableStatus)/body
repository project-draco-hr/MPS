{
  if (SPropertyOperations.getBoolean(conceptDeclaration,"abstract")) {
    return;
  }
  Queue<SNode> toCheck=QueueSequence.fromQueue(new LinkedList<SNode>());
  QueueSequence.fromQueue(toCheck).addLastElement(conceptDeclaration);
  while (QueueSequence.fromQueue(toCheck).isNotEmpty()) {
    SNode acd=QueueSequence.fromQueue(toCheck).removeFirstElement();
    List<SNode> aspects=AbstractConceptDeclaration_Behavior.call_findConceptAspectCollection_1567570417158062208(acd,LanguageAspect.EDITOR);
    if (!(SConceptOperations.isExactly(acd,"jetbrains.mps.lang.core.structure.BaseConcept")) && ListSequence.fromList(aspects).any(new IWhereFilter<SNode>(){
      public boolean accept(      SNode a){
        return SNodeOperations.isInstanceOf(a,"jetbrains.mps.lang.editor.structure.ConceptEditorDeclaration");
      }
    }
)) {
      return;
    }
    QueueSequence.fromQueue(toCheck).addSequence(ListSequence.fromList(BehaviorReflection.invokeVirtual((Class<List<SNode>>)((Class)Object.class),acd,"virtual_getImmediateSuperconcepts_1222430305282",new Object[]{})));
  }
{
    MessageTarget errorTarget=new NodeMessageTarget();
    errorTarget=new PropertyMessageTarget("name");
    IErrorReporter _reporter_2309309498=typeCheckingContext.reportInfo(conceptDeclaration,"Editor for concept " + SPropertyOperations.getString(conceptDeclaration,"name") + " is not defined. Default editor will be used.","r:00000000-0000-4000-0000-011c8959028f(jetbrains.mps.lang.structure.typesystem)","2823239769520680200",null,errorTarget);
  }
}
