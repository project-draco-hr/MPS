{
  boolean selectedHighlighting=myHighlightingCheckBox.isSelected();
  boolean changedHighlighting=(myState.isUsesDebugHighlighting() != selectedHighlighting);
  if (changedHighlighting) {
    myState.setUsesDebugHighlighting(selectedHighlighting);
  }
  boolean selectedOptimization=myGeneratorOptimizationCheckBox.isSelected();
  boolean changedOptimization=(myState.isGenerationOptimizationEnabled() != selectedOptimization);
  if (changedOptimization) {
    myState.setGenerationOptimizationEnabled(selectedOptimization);
  }
  try {
    int timeout=Integer.parseInt(myHelginsTimeoutField.getText());
    if (timeout != myState.getHelginsTimeout()) {
      myState.setHelginsTimeout(timeout);
    }
  }
 catch (  NumberFormatException ex) {
  }
  myState.setSubtypingCached(myCacheSubtypingCheckBox.isSelected());
  myState.setCoersionSimpleCached(myCacheCoerceSimpleCheckBox.isSelected());
  myState.setCoersionPatternCached(myCacheCoercePatternsCheckBox.isSelected());
}
