{
  final SNode linkDecl=SLinkOperations.getTarget(op,MetaAdapterFactory.getReferenceLink(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x11c530706b2L,0x11c530d1574L,"referenceLink"));
  if (linkDecl != null) {
    if (!(SPropertyOperations.hasValue(linkDecl,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086aL,0xf980556927L,"metaClass"),"reference","reference"))) {
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(op,"reference link is expected","r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)","1226068687986",null,errorTarget);
    }
    final SNode Concept_typevar_1226068687995=typeCheckingContext.createNewRuntimeTypesVariable();
    SNode inputNodeConcept=RulesUtil.get_inputNodeConcept(op,false);
    List<SNode> declaredLinks=AbstractConceptDeclaration_Behavior.call_getLinkDeclarations_1213877394480(inputNodeConcept);
    if (!(ListSequence.fromList(declaredLinks).contains(linkDecl))) {
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(op,"access to link '" + SPropertyOperations.getString(linkDecl,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086aL,0xf98052f333L,"role")) + "' is not expected here","r:00000000-0000-4000-0000-011c895902fe(jetbrains.mps.lang.smodel.typesystem)","1226068688014",null,errorTarget);
    }
  }
}
