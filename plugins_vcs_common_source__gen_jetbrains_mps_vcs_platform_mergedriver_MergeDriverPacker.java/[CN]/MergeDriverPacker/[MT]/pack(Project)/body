{
  ThreadUtils.runInUIThreadAndWait(new Runnable(){
    public void run(){
      ProgressManager.getInstance().run(new Task.Modal(project,"Installing",false){
        public void run(        @NotNull ProgressIndicator indicator){
          ProgressMonitor monitor=new ProgressMonitorAdapter(indicator);
          monitor.start("Installing vcs add-ons",4);
          monitor.step("Deleting old files");
          File tmpDir=FileUtil.createTmpDir();
          FileUtil.delete(getFile());
          Iterable<String> classpathDirs=getClasspath(false);
          Iterable<String> classPathJars=Sequence.fromIterable(classpathDirs).where(new IWhereFilter<String>(){
            public boolean accept(            String cpd){
              return cpd.endsWith(".jar");
            }
          }
);
          monitor.step("Packing new merge driver");
          internalPack(classPathJars,tmpDir,false);
          if (isFromSources()) {
            Iterable<String> classpathInternal=Sequence.fromIterable(classpathDirs).where(new IWhereFilter<String>(){
              public boolean accept(              String cpd){
                return !(cpd.endsWith(".jar"));
              }
            }
);
            File tmpDirRT=FileUtil.createTmpDir();
            internalPack(classpathInternal,tmpDirRT,true);
            FileUtil.zip(tmpDirRT,new File(tmpDir + File.separator + MERGER_RT));
            FileUtil.delete(tmpDirRT);
          }
          monitor.step("Installing merge driver");
          FileUtil.copyDir(tmpDir,getFile());
          monitor.step("Deleting temporary files");
          FileUtil.delete(tmpDir);
        }
      }
);
    }
  }
);
}
