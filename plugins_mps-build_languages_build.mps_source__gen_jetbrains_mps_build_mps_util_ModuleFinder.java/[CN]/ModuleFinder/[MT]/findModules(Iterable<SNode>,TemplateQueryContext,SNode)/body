{
  final SNode project=SNodeOperations.cast(SNodeOperations.getContainingRoot(node),MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,"jetbrains.mps.build.structure.BuildProject"));
  if (project == null) {
    genContext.showErrorMessage(node,"no context project defined");
    return ListSequence.fromList(new ArrayList<SNode>());
  }
  final DependenciesHelper helper=new DependenciesHelper(genContext,project);
  return Sequence.fromIterable(modules).select(new ISelector<SNode,String>(){
    public String select(    SNode module){
      SNode mpsModule=SNodeOperations.as(DependenciesHelper.getOriginalNode(module,genContext),MetaAdapterFactory.getConcept(0xcf935df46994e9cL,0xa132fa109541cba3L,0x4780308f5d333ebL,"jetbrains.mps.build.mps.structure.BuildMps_AbstractModule"));
      SNode layoutNode=helper.artifacts().get(mpsModule);
      if (layoutNode == null && SNodeOperations.isInstanceOf(mpsModule,MetaAdapterFactory.getConcept(0xcf935df46994e9cL,0xa132fa109541cba3L,0x4780308f5d2060eL,"jetbrains.mps.build.mps.structure.BuildMps_DevKit"))) {
        layoutNode=helper.artifacts().get(SLinkOperations.getTarget(SNodeOperations.cast(mpsModule,MetaAdapterFactory.getConcept(0xcf935df46994e9cL,0xa132fa109541cba3L,0x4780308f5d2060eL,"jetbrains.mps.build.mps.structure.BuildMps_DevKit")),MetaAdapterFactory.getContainmentLink(0xcf935df46994e9cL,0xa132fa109541cba3L,0x4780308f5d333ebL,0x4780308f5d47f25L,"path")));
      }
      if (layoutNode == null) {
        genContext.showErrorMessage(node,"mps module " + SPropertyOperations.getString(module,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")) + " was not found in the layout of `"+ SPropertyOperations.getString(project,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"))+ "'");
        return null;
      }
      String val=BehaviorReflection.invokeVirtual(String.class,layoutNode,"virtual_location_7117056644539862594",new Object[]{helper,mpsModule});
      if (val == null) {
        genContext.showErrorMessage(node,"no location for module" + SPropertyOperations.getString(mpsModule,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")));
        return null;
      }
      return val;
    }
  }
).where(new IWhereFilter<String>(){
    public boolean accept(    String it){
      return it != null;
    }
  }
).sort(new ISelector<String,String>(){
    public String select(    String it){
      return it;
    }
  }
,true).distinct().select(new ISelector<String,SNode>(){
    public SNode select(    String it){
      return createGeneratorInternal_String_8pqt49_a0a0a0e0a(it);
    }
  }
);
}
