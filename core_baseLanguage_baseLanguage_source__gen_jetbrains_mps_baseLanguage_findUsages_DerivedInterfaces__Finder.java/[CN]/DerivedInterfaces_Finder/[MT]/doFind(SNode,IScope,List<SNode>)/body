{
  List<SNode> derived=new ArrayList<SNode>();
  ListOperations.addElement(derived,node);
  int passed=0;
  while (SequenceOperations.getSize(derived) != passed) {
    SNode passingNode=ListOperations.getElement(derived,passed);
    for (    SNode nodeUsage : this.executeFinder("jetbrains.mps.bootstrap.structureLanguage.findUsages.NodeUsages_Finder",passingNode,scope)) {
      if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(nodeUsage,null,false,false),"jetbrains.mps.baseLanguage.structure.Interface")) {
        if (SNodeOperations.hasRole(nodeUsage,"jetbrains.mps.baseLanguage.structure.Interface","extendedInterface")) {
          ListOperations.addElement(derived,SNodeOperations.getParent(nodeUsage,null,false,false));
        }
      }
    }
    if (passingNode != node) {
      ListOperations.addElement(_results,passingNode);
    }
    passed=passed + 1;
  }
}
