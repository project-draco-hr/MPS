{
  PsiElement parent=getParent();
  if (!(parent instanceof MPSPsiNode)) {
    return false;
  }
  MPSPsiNode mpsParent=(MPSPsiNode)parent;
  MPSPsiNode visibility=mpsParent.getChildOfType("visibility",MPSPsiNode.class);
  if (PsiModifier.PUBLIC.equals(name)) {
    return visibility != null && "jetbrains.mps.baseLanguage.structure.PublicVisibility".equals(visibility.getConcept());
  }
 else   if (PsiModifier.PROTECTED.equals(name)) {
    return visibility != null && "jetbrains.mps.baseLanguage.structure.ProtectedVisibility".equals(visibility.getConcept());
  }
 else   if (PsiModifier.PRIVATE.equals(name)) {
    return visibility != null && "jetbrains.mps.baseLanguage.structure.PrivateVisibility".equals(visibility.getConcept());
  }
 else   if (PsiModifier.ABSTRACT.equals(name)) {
    boolean isAbstractClass=mpsParent instanceof MPSPsiClassifier && "true".equals(mpsParent.getProperty("abstractClass"));
    boolean isAbstractMethod=mpsParent instanceof MPSPsiMethod && "true".equals(mpsParent.getProperty("isAbstract"));
    return isAbstractClass || isAbstractMethod;
  }
 else   if (PsiModifier.FINAL.equals(name)) {
    return "true".equals(mpsParent.getProperty("isFinal"));
  }
 else   if (PsiModifier.STATIC.equals(name)) {
    boolean isStaticField=mpsParent instanceof MPSPsiField && ((MPSPsiField)mpsParent).isStatic();
    boolean isStaticMethod=mpsParent instanceof MPSPsiMethod && ((MPSPsiMethod)mpsParent).isStatic();
    boolean isStaticClass=mpsParent instanceof MPSPsiClass && "false".equals(mpsParent.getProperty("nonStatic"));
    return isStaticClass || isStaticMethod || isStaticField;
  }
  return false;
}
