{
  Scope outer=CompositeScope.createComposite(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"imports",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (SLinkOperations.getTarget(it,"target",false) != null);
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SLinkOperations.getTarget(it,"target",false);
    }
  }
).select(new ISelector<SNode,Scope>(){
    public Scope select(    SNode it){
      return BehaviorReflection.invokeVirtual(Scope.class,it,"virtual_getExportedScope_5109194352282852190",new Object[]{});
    }
  }
).toGenericArray(Scope.class));
  if (kind == SConceptOperations.findConceptDeclaration("jetbrains.mps.core.query.structure.MqlQuery")) {
    return CompositeScope.createComposite(outer,SimpleRoleScope.forNamedElements(thisNode,SLinkOperations.findLinkDeclaration("jetbrains.mps.core.query.structure.MqlPackage","queries")));
  }
  return outer;
}
