{
  List<SNode> list=ListSequence.fromListAndArray(new ArrayList<SNode>(),SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.IfStatement"),SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.WhileStatement"),SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.DoWhileStatement"),SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ForStatement"),SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ForeachStatement"),SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.ForEachStatement"));
  ListSequence.fromList(list).removeElement(SNodeOperations.getConceptDeclaration(node));
  if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.structure.ForeachStatement") || SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.collections.structure.ForEachStatement")) {
    ListSequence.fromList(list).removeElement(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ForeachStatement"));
    ListSequence.fromList(list).removeElement(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.ForEachStatement"));
  }
  return list;
}
