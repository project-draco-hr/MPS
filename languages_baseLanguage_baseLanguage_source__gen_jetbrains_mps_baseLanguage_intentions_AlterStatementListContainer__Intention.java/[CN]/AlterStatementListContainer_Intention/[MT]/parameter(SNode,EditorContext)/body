{
  List<SNode> list=ListSequence.fromListAndArray(new ArrayList<SNode>(),SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.IfStatement"),SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.WhileStatement"),SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.DoWhileStatement"),SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ForStatement"),SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ForeachStatement"),SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.ForEachStatement"));
  ListSequence.fromList(list).removeElement(SNodeOperations.getConceptDeclaration(node));
  if (SNodeOperations.isInstanceOf(node,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1144226303539l,"jetbrains.mps.baseLanguage.structure.ForeachStatement")) || SNodeOperations.isInstanceOf(node,MetaAdapterFactory.getConcept(new UUID(-8968771020793164004l,-7182180101671965361l),1153943597977l,"jetbrains.mps.baseLanguage.collections.structure.ForEachStatement"))) {
    ListSequence.fromList(list).removeElement(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ForeachStatement"));
    ListSequence.fromList(list).removeElement(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.ForEachStatement"));
  }
  return list;
}
