{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("declaration",new BaseReferenceConstraintsDescriptor("declaration",this){
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public boolean hasPresentation(){
          return true;
        }
        @Override public String getPresentation(        final IOperationContext operationContext,        final ReferencePresentationContext _context){
          if (SNodeOperations.isInstanceOf(_context.getParameterNode(),"jetbrains.mps.lang.typesystem.structure.WarningStatement")) {
            return AttributeOperations.getAttribute(SNodeOperations.cast(_context.getParameterNode(),"jetbrains.mps.lang.typesystem.structure.WarningStatement"),new IAttributeDescriptor.NodeAttribute("jetbrains.mps.lang.typesystem.structure.MessageStatementAnnotation")) + "";
          }
          return null;
        }
      }
;
    }
  }
);
  return references;
}
