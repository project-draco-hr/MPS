{
  if (contextNode != null) {
    INamedConcept topmostNamed=null;
    INodeAdapter node_=contextNode.getAdapter();
    while (node_ != null) {
      if (node_ instanceof INamedConcept) {
        topmostNamed=(INamedConcept)node_;
      }
      node_=node_.getParent();
    }
    if (topmostNamed != null) {
      String name=topmostNamed.getName();
      if (name != null) {
        String contextSuffix=String.valueOf(name.hashCode());
        if (contextSuffix.length() > 4) {
          contextSuffix=contextSuffix.substring(contextSuffix.length() - 4);
        }
        roughName=roughName + contextSuffix + "_";
      }
    }
  }
  if (inputNode != null) {
    String s=inputNode.getId();
    try {
      long l=Long.parseLong(s);
      s=Long.toString(l,Character.MAX_RADIX);
    }
 catch (    NumberFormatException ex) {
    }
    roughName+=s;
  }
  String uniqueName;
  int count=0;
  while (true) {
    uniqueName=count > 0 ? roughName + count : roughName;
    if (!myUsedNames.contains(uniqueName))     break;
    count++;
  }
  myUsedNames.add(uniqueName);
  return uniqueName;
}
