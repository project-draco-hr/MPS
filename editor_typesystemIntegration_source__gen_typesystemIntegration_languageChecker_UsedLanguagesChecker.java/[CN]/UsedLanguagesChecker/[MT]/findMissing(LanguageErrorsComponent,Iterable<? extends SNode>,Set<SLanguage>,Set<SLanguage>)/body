{
  boolean parentReportedSetChanged=false;
  for (  SNode node : Sequence.fromIterable(level)) {
    HashSet<SLanguage> reported=new HashSet<SLanguage>(parentReported);
    SConcept concept=node.getConcept();
    if (concept.equals(C) && L.equals(node.getContainmentLink())) {
      continue;
    }
    SLanguage language=concept.getLanguage();
    boolean notYetReported=reported.add(language);
    parentReportedSetChanged|=notYetReported;
    if (!(imported.contains(language)) && notYetReported) {
      component.addError(node,language.getQualifiedName() + " is not imported",null,new NodeMessageTarget(),new UsedLanguagesChecker.LangImportQFixProvider());
    }
    findMissing(component,node.getChildren(),(parentReportedSetChanged ? reported : parentReported),imported);
  }
}
