{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.blTypes.structure.BLArrayType","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{"componentType"},new String[]{},new boolean[]{},false,false,"array","internal array type","");
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.blTypes.structure.BarConcept","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.blTypes.structure.FooConcept","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{"bar"},new String[]{},new boolean[]{},false,false,"","","");
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.blTypes.structure.FunctionType","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{"result","param"},new boolean[]{false,true},false,false,"FUNCTION","","");
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.blTypes.structure.PrimitiveTypeDescriptor","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{"extends"},new boolean[]{true},false,false,"","","");
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.blTypes.structure.PrimitiveTypeRef","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"descriptor"},new String[]{},new boolean[]{},false,false,"","","");
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
