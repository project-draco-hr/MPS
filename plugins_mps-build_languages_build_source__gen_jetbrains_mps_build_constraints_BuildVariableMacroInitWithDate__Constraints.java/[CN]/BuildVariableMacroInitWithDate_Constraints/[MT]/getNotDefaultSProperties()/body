{
  Map<SPropertyId,PropertyConstraintsDescriptor> properties=new HashMap<SPropertyId,PropertyConstraintsDescriptor>();
  properties.put(MetaIdFactory.propId(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x365f30e12d2c3e4L,0x365f30e12d2c3f0L),new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x365f30e12d2c3e4L,0x365f30e12d2c3f0L),this){
    @Override public boolean hasOwnValidator(){
      return true;
    }
    @Override public boolean validateValue(    SNode node,    String propertyValue){
      String propertyName="pattern";
      try {
        new SimpleDateFormat((SPropertyOperations.getString(propertyValue)));
        return true;
      }
 catch (      IllegalArgumentException ex) {
        return false;
      }
    }
  }
);
  return properties;
}
