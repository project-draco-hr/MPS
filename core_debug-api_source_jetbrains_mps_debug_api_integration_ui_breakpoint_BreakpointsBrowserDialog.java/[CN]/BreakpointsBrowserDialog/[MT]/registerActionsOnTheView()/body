{
  myBreakpointsView.getMainComponent().getInputMap().put(KeyStroke.getKeyStroke(KeyEvent.VK_ENTER,0),COMMAND_SHOW_NODE);
  myBreakpointsView.getMainComponent().getActionMap().put(COMMAND_SHOW_NODE,new AbstractAction(){
    @Override public void actionPerformed(    ActionEvent e){
      myShowNodeAction.actionPerformed(null);
    }
  }
);
  myBreakpointsView.getMainComponent().registerKeyboardAction(new AbstractAction(){
    @Override public void actionPerformed(    ActionEvent e){
      myGotoNodeAction.actionPerformed(null);
    }
  }
,KeyStroke.getKeyStroke("F4"),JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  myBreakpointsView.getMainComponent().registerKeyboardAction(new ActionListener(){
    @Override public void actionPerformed(    ActionEvent e){
      myDeleteBreakpointAction.actionPerformed(null);
    }
  }
,KeyStroke.getKeyStroke("DELETE"),JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  myBreakpointsView.getMainComponent().addMouseListener(new MouseAdapter(){
    @Override public void mouseClicked(    MouseEvent e){
      if (e.getClickCount() == 2) {
        AbstractMPSBreakpoint breakpoint=BreakpointsView.MPS_BREAKPOINT.getData(myBreakpointsView);
        if (breakpoint == null)         return;
        dispose();
        openNode(breakpoint,true,true);
      }
    }
  }
);
}
