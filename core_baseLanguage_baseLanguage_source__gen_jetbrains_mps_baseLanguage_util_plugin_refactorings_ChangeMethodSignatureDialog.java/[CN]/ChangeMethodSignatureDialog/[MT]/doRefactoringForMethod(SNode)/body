{
  final ChangeMethodSignatureRefactoring ref=new ChangeMethodSignatureRefactoring(this.myParameters,method);
  ProgressManager.getInstance().run(new Task.Modal(this.myOperationContext.getProject(),"Search for ussages",true){
    public void run(    @NotNull final ProgressIndicator indicator){
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          ChangeMethodSignatureDialog.this.myResults=MethodRefactoringUtils.findMethodUsages(ChangeMethodSignatureDialog.this.myDeclaration,indicator);
        }
      }
);
    }
  }
);
  List<SNode> ussages=new ArrayList<SNode>();
  for (  SearchResult<SNode> res : ListSequence.fromList(this.myResults.getSearchResults())) {
    SNode node=res.getObject();
    ListSequence.fromList(ussages).addElement(node);
  }
  ref.setUsages(ussages);
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      ref.doRefactoring();
    }
  }
);
}
