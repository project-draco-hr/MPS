{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
  ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(SConceptOperations.findConceptDeclaration("jetbrains.mps.samples.Kaja.structure.AbstractCommand"),_context.getSourceNode()){
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      SNodeFactoryOperations.addNewChild(SLinkOperations.getTarget(_context.getSourceNode(),MetaAdapterFactory.getContainmentLink(new UUID(331587165301851084l,-4784639992745830411l),3308300503039647678l,3308300503039647685l,"falseBranch")),MetaAdapterFactory.getContainmentLink(new UUID(331587165301851084l,-4784639992745830411l),3308300503039896127l,3308300503039896128l,"commands"),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(331587165301851084l,-4784639992745830411l),3308300503039740438l,"jetbrains.mps.samples.Kaja.structure.EmptyLine")));
      return ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(_context.getSourceNode(),MetaAdapterFactory.getContainmentLink(new UUID(331587165301851084l,-4784639992745830411l),3308300503039647678l,3308300503039647685l,"falseBranch")),MetaAdapterFactory.getContainmentLink(new UUID(331587165301851084l,-4784639992745830411l),3308300503039896127l,3308300503039896128l,"commands"))).first();
    }
    public String getMatchingText(    String pattern){
      return "else";
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
    @Override protected boolean isEnabled(){
      SNode sourceNode=getSourceNode();
      SNode parent=SNodeOperations.getParent(sourceNode);
      SNode containingLink=SNodeOperations.getContainingLinkDeclaration(sourceNode);
      return parent == null || containingLink == null || (ModelConstraints.canBeParent(parent,SConceptOperations.findConceptDeclaration("jetbrains.mps.samples.Kaja.structure.AbstractCommand"),containingLink,null,null) && ModelConstraints.canBeAncestor(parent,null,SConceptOperations.findConceptDeclaration("jetbrains.mps.samples.Kaja.structure.AbstractCommand"),null));
    }
  }
);
  return result;
}
