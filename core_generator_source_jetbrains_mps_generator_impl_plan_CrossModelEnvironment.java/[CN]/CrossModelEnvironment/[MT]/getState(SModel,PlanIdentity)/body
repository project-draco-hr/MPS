{
  ModelCheckpoints mcp=myTransientCheckpoints.get(model.getReference());
  if (mcp != null) {
    return mcp;
  }
  mcp=new ModelAccessHelper(myTransientModelProvider.getRepository()).runReadAction(new Computable<ModelCheckpoints>(){
    @Override public ModelCheckpoints compute(){
      SModel[] cpModels=getCheckpointModelsFor(model);
      ModelCheckpoints mcp=new ModelCheckpoints(planIdentity,cpModels);
      myTransientCheckpoints.put(model.getReference(),mcp);
      return mcp;
    }
  }
);
  if (mcp != null) {
    return mcp;
  }
  return getPersistedCheckpoints(model).getCheckpointsFor(planIdentity);
}
