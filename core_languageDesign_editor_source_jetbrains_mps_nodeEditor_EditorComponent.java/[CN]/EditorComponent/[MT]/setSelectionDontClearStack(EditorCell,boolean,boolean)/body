{
  if (resetLastCaretX) {
    resetLastCaretX();
  }
  if (newSelectedCell != mySelectedCell) {
    myNodeSubstituteChooser.setVisible(false);
    myNodeRangeSelection.deactivate();
    final EditorCell oldSelection=mySelectedCell;
    if (mySelectedCell != null) {
      mySelectedCell.setSelected(false);
    }
    mySelectedCell=newSelectedCell;
    if (mySelectedCell != null && isEditable()) {
      mySelectedCell.setSelected(true);
    }
    boolean eq=false;
    if (newSelectedCell != null && mySelectedCell != null) {
      String id1=newSelectedCell.getCellId();
      String id2=mySelectedCell.getCellId();
      if (id1 != null)       eq=id1.equals(id2);
    }
    fireCellSelectionChanged(oldSelection,newSelectedCell);
  }
  if (mySelectedCell != null) {
    if (scrollToCell) {
      if (getVisibleRect().isEmpty()) {
        final JViewport viewport=getViewport();
        viewport.addChangeListener(new ChangeListener(){
          @Override public void stateChanged(          ChangeEvent e){
            if (!getVisibleRect().isEmpty()) {
              if (mySelectedCell != null) {
                scrollToCell(mySelectedCell);
              }
              viewport.removeChangeListener(this);
            }
          }
        }
);
      }
 else {
        scrollToCell(newSelectedCell);
      }
    }
  }
  repaint();
}
