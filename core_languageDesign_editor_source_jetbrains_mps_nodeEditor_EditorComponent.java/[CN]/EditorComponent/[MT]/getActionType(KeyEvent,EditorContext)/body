{
  if (keyEvent.getKeyCode() == KeyEvent.VK_LEFT && noKeysDown(keyEvent)) {
    return CellActionType.LEFT;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_RIGHT && noKeysDown(keyEvent)) {
    return CellActionType.RIGHT;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_UP && noKeysDown(keyEvent)) {
    return CellActionType.UP;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_DOWN && noKeysDown(keyEvent)) {
    return CellActionType.DOWN;
  }
  if (!SystemInfo.isMac && keyEvent.getKeyCode() == KeyEvent.VK_INSERT && noKeysDown(keyEvent)) {
    return CellActionType.INSERT_BEFORE;
  }
  if (SystemInfo.isMac && keyEvent.getKeyCode() == KeyEvent.VK_ENTER && shiftDown(keyEvent)) {
    return CellActionType.INSERT_BEFORE;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_ENTER && noKeysDown(keyEvent)) {
    EditorCell contextCell=editorContext.getContextCell();
    if (contextCell != null && contextCell.isFirstCaretPosition()) {
      if (!contextCell.isLastCaretPosition() || (contextCell instanceof EditorCell_Label && !((EditorCell_Label)contextCell).isLastPositionAllowed())) {
        return CellActionType.INSERT_BEFORE;
      }
    }
    return CellActionType.INSERT;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_LEFT && shiftDown(keyEvent)) {
    return CellActionType.SELECT_LEFT;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_RIGHT && shiftDown(keyEvent)) {
    return CellActionType.SELECT_RIGHT;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_UP && ctrlDown(keyEvent)) {
    return CellActionType.SELECT_UP;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_W && ctrlDown(keyEvent)) {
    return CellActionType.SELECT_UP;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_DOWN && ctrlDown(keyEvent)) {
    return CellActionType.SELECT_DOWN;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_W && ctrlShiftDown(keyEvent)) {
    return CellActionType.SELECT_DOWN;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_HOME && shiftDown(keyEvent)) {
    return CellActionType.SELECT_HOME;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_END && shiftDown(keyEvent)) {
    return CellActionType.SELECT_END;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_PAGE_DOWN && noKeysDown(keyEvent)) {
    return CellActionType.PAGE_DOWN;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_PAGE_UP && noKeysDown(keyEvent)) {
    return CellActionType.PAGE_UP;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_TAB && noKeysDown(keyEvent)) {
    return CellActionType.NEXT;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_TAB && shiftDown(keyEvent)) {
    return CellActionType.PREV;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_SPACE && ctrlDown(keyEvent)) {
    return CellActionType.COMPLETE;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_SPACE && ctrlShiftDown(keyEvent)) {
    return CellActionType.COMPLETE_SMART;
  }
  if (keyEvent.getModifiers() == KeyEvent.CTRL_MASK && keyEvent.getKeyCode() == KeyEvent.VK_F1) {
    return CellActionType.SHOW_MESSAGE;
  }
  if (keyTyped(keyEvent) && keyEvent.getKeyChar() == ' ' && noKeysDown(keyEvent)) {
    EditorCell selectedCell=editorContext.getNodeEditorComponent().getSelectedCell();
    if (!(selectedCell instanceof EditorCell_STHint)) {
      if (!(selectedCell instanceof EditorCell_Label)) {
        return CellActionType.RIGHT_TRANSFORM;
      }
      EditorCell_Label labelCell=(EditorCell_Label)selectedCell;
      String text=labelCell.getText();
      int caretPosition=labelCell.getCaretPosition();
      if (caretPosition == text.length()) {
        return CellActionType.RIGHT_TRANSFORM;
      }
      if (caretPosition == 0) {
        return CellActionType.LEFT_TRANSFORM;
      }
    }
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_DELETE && ctrlDown(keyEvent)) {
    return CellActionType.DELETE;
  }
  if ((keyEvent.getKeyCode() == KeyEvent.VK_DELETE || keyEvent.getKeyCode() == KeyEvent.VK_BACK_SPACE) && noKeysDown(keyEvent)) {
    EditorCell selectedCell=editorContext.getNodeEditorComponent().getSelectedCell();
    if (selectedCell != null && selectedCell.isBigCell()) {
      return CellActionType.DELETE;
    }
    if (selectedCell instanceof EditorCell_Label) {
      EditorCell_Label label=(EditorCell_Label)selectedCell;
      if (label.getText().length() == 0 || ((label instanceof EditorCell_Constant || label instanceof EditorCell_Property) && !label.isEditable() && (label.getAction(CellActionType.DELETE) != null || label.getContainingBigCell().getLastLeaf(CellConditions.SELECTABLE) == label))) {
        return CellActionType.DELETE;
      }
    }
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_C && (SystemInfo.isMac ? metaDown(keyEvent) : ctrlDown(keyEvent))) {
    return CellActionType.COPY;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_X && (SystemInfo.isMac ? metaDown(keyEvent) : ctrlDown(keyEvent))) {
    return CellActionType.CUT;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_V) {
    if (ctrlDown(keyEvent)) {
      return CellActionType.PASTE;
    }
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_INSERT && ctrlDown(keyEvent)) {
    return CellActionType.COPY;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_INSERT && shiftDown(keyEvent)) {
    return CellActionType.PASTE;
  }
  return null;
}
