{
  super(context.getMainFrame(),"Breakpoints");
  final BreakpointManagerComponent bpManager=context.getComponent(BreakpointManagerComponent.class);
  Set<AbstractMPSBreakpoint> mpsBreakpoints=bpManager.getAllBreakpoints();
  final List<AbstractMPSBreakpoint> bpList=new ArrayList<AbstractMPSBreakpoint>(mpsBreakpoints);
  Collections.sort(bpList,new ToStringComparator(true));
  myBreakpointsList=new JList(new AbstractListModel(){
    @Override public int getSize(){
      return bpList.size();
    }
    @Override public Object getElementAt(    int index){
      return bpList.get(index);
    }
  }
);
  myBreakpointsList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myBreakpointsList.setCellRenderer(new DefaultListCellRenderer(){
    @Override public Component getListCellRendererComponent(    JList list,    Object value,    int index,    boolean isSelected,    boolean cellHasFocus){
      Component listCellRendererComponent=super.getListCellRendererComponent(list,value,index,isSelected,cellHasFocus);
      if (value != null) {
        AbstractMPSBreakpoint bp=(AbstractMPSBreakpoint)value;
        setText(bp.getPresentation());
      }
      return listCellRendererComponent;
    }
  }
);
  myMainPanel=new JScrollPane(myBreakpointsList);
}
