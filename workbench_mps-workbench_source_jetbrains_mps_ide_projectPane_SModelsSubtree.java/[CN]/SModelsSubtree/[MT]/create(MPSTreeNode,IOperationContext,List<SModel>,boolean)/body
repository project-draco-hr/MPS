{
  List<SModel> regularModels=new ArrayList<SModel>();
  List<SModel> tests=new ArrayList<SModel>();
  List<SModel> stubs=new ArrayList<SModel>();
  for (  SModel modelDescriptor : models) {
    if (TemporaryModels.isTemporary(modelDescriptor))     continue;
    String stereotype=SModelStereotype.getStereotype(modelDescriptor);
    if (stereotype == null || stereotype.length() == 0) {
      stereotype=".";
    }
    if (SModelStereotype.isStubModelStereotype(stereotype)) {
      stubs.add(modelDescriptor);
    }
 else     if (SModelStereotype.TESTS.equals(stereotype)) {
      tests.add(modelDescriptor);
    }
 else {
      regularModels.add(modelDescriptor);
    }
  }
  List<SModelTreeNode> regularModelNodes=getRootModelTreeNodes(regularModels,operationContext,isNeedBuildChildModels(rootTreeNode));
  if (!regularModelNodes.isEmpty()) {
    IModule contextModule=operationContext.getModule();
    if (contextModule instanceof Language) {
      for (      SModelTreeNode treeNode : regularModelNodes) {
        rootTreeNode.add(treeNode);
      }
      if (!rootTreeNode.equals(rootTreeNode)) {
        rootTreeNode.add(rootTreeNode);
      }
    }
 else {
      SModelNamespaceTreeBuilder builder=new SModelNamespaceTreeBuilder();
      for (      SModelTreeNode treeNode : regularModelNodes) {
        builder.addNode(treeNode);
      }
      builder.fillNode(rootTreeNode);
    }
  }
  if (!tests.isEmpty()) {
    SModelNamespaceTreeBuilder builder=new SModelNamespaceTreeBuilder();
    List<SModelTreeNode> testNodes=getRootModelTreeNodes(tests,operationContext,isNeedBuildChildModels(rootTreeNode));
    for (    SModelTreeNode testNode : testNodes) {
      builder.addNode(testNode);
    }
    TestsTreeNode testsNode=new TestsTreeNode(operationContext);
    builder.fillNode(testsNode);
    if (!dropMiddleNodes) {
      rootTreeNode.add(testsNode);
    }
 else {
      Enumeration children=testsNode.children();
      while (children.hasMoreElements()) {
        rootTreeNode.add((MutableTreeNode)children.nextElement());
      }
    }
  }
  if (!stubs.isEmpty()) {
    SModelNamespaceTreeBuilder builder=new SModelNamespaceTreeBuilder();
    List<SModelTreeNode> stubNodes=getRootModelTreeNodes(stubs,operationContext,isNeedBuildChildModels(rootTreeNode));
    for (    SModelTreeNode treeNode : stubNodes) {
      builder.addNode(treeNode);
    }
    StubsTreeNode stubsNode=new StubsTreeNode(operationContext);
    builder.fillNode(stubsNode);
    if (!dropMiddleNodes) {
      rootTreeNode.add(stubsNode);
    }
 else {
      Enumeration children=stubsNode.children();
      List<MutableTreeNode> tmpList=new ArrayList<MutableTreeNode>();
      while (children.hasMoreElements()) {
        tmpList.add((MutableTreeNode)children.nextElement());
      }
      for (      MutableTreeNode child : tmpList) {
        rootTreeNode.add(child);
      }
    }
  }
}
