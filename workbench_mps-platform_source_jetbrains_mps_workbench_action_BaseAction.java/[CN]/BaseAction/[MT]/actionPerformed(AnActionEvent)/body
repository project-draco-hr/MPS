{
  final Map<String,Object> params=new ModelAccessHelper(getModelAccess(event)).runReadAction(new CollectActionData(event));
  final Runnable r=new UndoRunnable.Base(getTemplatePresentation().getText(),null){
    @Override public void run(){
      try {
        doExecute(event,params);
      }
 catch (      Exception ex) {
        final Logger log=LogManager.getLogger(getClass());
        if (log.isEnabledFor(Level.ERROR)) {
          log.error(String.format("User's action execute method failed. Action: %s. Class: %s",getName(),BaseAction.this.getClass().getName()),ex);
        }
      }
    }
  }
;
  if (myExecuteOutsideCommand) {
    r.run();
  }
 else {
    Project project=getEventProject(event);
    if (project != null) {
      getModelAccess(event).executeCommand(r);
    }
 else {
      Logger.getLogger(BaseAction.class).error(String.format("Action %s needs a command but is executed without project.",getClass().getName()));
      getModelAccess(event).runWriteAction(r);
    }
  }
}
