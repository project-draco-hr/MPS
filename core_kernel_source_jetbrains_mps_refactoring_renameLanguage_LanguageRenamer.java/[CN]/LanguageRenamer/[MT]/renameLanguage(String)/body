{
  for (  SModelRoot root : myLanguage.getSModelRoots()) {
    root.setPrefix(myNewName);
  }
  EditableSModelDescriptor structure=myLanguage.getStructureModelDescriptor();
  for (  SNode concept : structure.getSModel().roots()) {
    if (!(concept.isInstanceOfConcept(AbstractConceptDeclaration.concept)))     continue;
    myContext.changeFeatureName(concept,myNewName + ".structure." + concept.getName(),concept.getName());
  }
  for (  SModelDescriptor sm : myLanguage.getOwnModelDescriptors()) {
    if (!SModelStereotype.isUserModel(sm))     continue;
    if (sm.getSModelReference().getSModelFqName().toString().startsWith(oldFqName + ".")) {
      String suffix=sm.getSModelReference().getSModelFqName().toString().substring(oldFqName.length());
      sm.rename(SModelFqName.fromString(myNewName + suffix),false);
    }
  }
  LanguageDescriptor descriptor=myLanguage.getModuleDescriptor();
  descriptor.setNamespace(myNewName);
  myLanguage.setLanguageDescriptor(descriptor,false);
  myLanguage.save();
  RefactoringFacade.writeIntoLog(structure,myContext);
  SModelRepository.getInstance().saveAll();
}
