{
  return new NodeSubstituteActionWrapper(action){
    @Override public SNode substitute(    @Nullable EditorContext context,    String string){
      SNode result=super.substitute(context,string);
      DiagramCell.ConnectionInfo connectionInfo=myDiagramCell.getConnectionInfo();
      mySetConnectorCallBack.invoke(result,connectionInfo.getFromNode(),connectionInfo.getFromId(),connectionInfo.getToNode(),connectionInfo.getToId());
      return result;
    }
    @Override public boolean canSubstitute(    String string){
      if (!(super.canSubstitute(string))) {
        return false;
      }
      DiagramCell.ConnectionInfo connectionInfo=myDiagramCell.getConnectionInfo();
      return connectionInfo.isValid() && myCanCreateConnectorCallback.invoke(connectionInfo.getFromNode(),connectionInfo.getFromId(),connectionInfo.getToNode(),connectionInfo.getToId());
    }
  }
;
}
