{
  BaseAction action=new BaseAction("Show Hierarchy For Concept"){
    protected void doExecute(    AnActionEvent e){
      List<SNode> nodes=new ArrayList<SNode>();
      for (      SModelDescriptor modelDescriptor : myContext.getScope().getModelDescriptors()) {
        if (SModelStereotype.isStubModelStereotype(modelDescriptor.getStereotype()))         continue;
        SNode decl=SModelUtil.findConceptDeclaration(aClass.getName(),GlobalScope.getInstance());
        String name=NameUtil.nodeFQName(decl);
        for (        SNode node : modelDescriptor.getSModel().roots()) {
          if (node.isInstanceOfConcept(name))           nodes.add(node);
        }
      }
      CommonChoosers.showSimpleNodeChooser(nodes,new ChooserCallback<SNode>(){
        public void execute(        SNode node){
          final IOperationContext operationContext=ProjectOperationContext.get(getProject());
          showItemInHierarchy((T)node.getAdapter(),operationContext);
        }
      }
);
    }
  }
;
  return ActionUtils.groupFromActions(action);
}
