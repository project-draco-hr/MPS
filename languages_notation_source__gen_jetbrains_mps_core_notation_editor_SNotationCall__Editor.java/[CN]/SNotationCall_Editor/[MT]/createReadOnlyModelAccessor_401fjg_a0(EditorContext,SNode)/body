{
  EditorCell_Property editorCell=EditorCell_Property.create(editorContext,new ModelAccessor(){
    public String getText(){
      NotationContext context=SNotationContextProvider_Behavior.call_getContext_8632884680339357870(node);
      SNode cnode=(context != null ? context.getNode() : null);
      String idSuffix=((node != null) && SPropertyOperations.getString(node,"id") != null ? "." + SPropertyOperations.getString(node,"id") : "");
      return ((SNodeOperations.isInstanceOf(cnode,"jetbrains.mps.lang.core.structure.INamedConcept") ? SPropertyOperations.getString(SNodeOperations.cast(cnode,"jetbrains.mps.lang.core.structure.INamedConcept"),"name") : "<unknown>")) + idSuffix;
    }
    public void setText(    String s){
    }
    public boolean isValidText(    String s){
      return EqualUtil.equals(s,this.getText());
    }
  }
,node);
  editorCell.setAction(CellActionType.DELETE,new CellAction_Empty());
  editorCell.setCellId("ReadOnlyModelAccessor_401fjg_a0");
{
    Style style=editorCell.getStyle();
    style.set(StyleAttributes.TEXT_COLOR,MPSColors.blue);
    style.set(StyleAttributes.NAVIGATABLE_NODE,new AttributeCalculator<SNode>(){
      public SNode calculate(      EditorCell cell){
        return SNotationCall_Editor._StyleParameter_QueryFunction_401fjg_a1a0((cell == null ? null : cell.getSNode()),(cell == null ? null : cell.getEditorContext()));
      }
    }
);
  }
  return editorCell;
}
