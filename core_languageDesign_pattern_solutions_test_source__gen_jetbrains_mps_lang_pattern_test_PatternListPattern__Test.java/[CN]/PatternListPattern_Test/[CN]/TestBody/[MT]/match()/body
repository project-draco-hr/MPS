{
  SNode nodeToMatch=new PatternListPattern_Test.TestBody.QuotationClass_i79cpz_a0a0a1a().createNode();
  GeneratedMatchingPattern pattern=new PatternListPattern_Test.TestBody.Pattern_i79cpz_a0a1a1a();
  boolean matchNeeded=true;
  boolean matches=pattern.match(nodeToMatch);
  if (matchNeeded != matches) {
    return false;
  }
  if (!(matchNeeded)) {
    return true;
  }
{
    List<SNode> list=(List<SNode>)pattern.getFieldValue("PatternVar_list");
    int i=0;
    Assert.assertEquals(null,NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(),list.get(i)),ListSequence.fromListAndArray(new ArrayList<SNode>(),new PatternListPattern_Test.TestBody.QuotationClass_i79cpz_a1b0a0c0g0b0().createNode())));
    i++;
    Assert.assertEquals(null,NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(),list.get(i)),ListSequence.fromListAndArray(new ArrayList<SNode>(),new PatternListPattern_Test.TestBody.QuotationClass_i79cpz_a1b0a0d0g0b0().createNode())));
    i++;
  }
  return true;
}
