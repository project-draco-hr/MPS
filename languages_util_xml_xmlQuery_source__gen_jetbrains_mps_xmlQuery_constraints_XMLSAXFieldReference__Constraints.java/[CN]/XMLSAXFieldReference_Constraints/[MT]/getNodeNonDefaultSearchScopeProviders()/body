{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("declaration",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      SNode n=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.xmlQuery.structure.XMLSAXParser",true,false);
      if ((n != null)) {
        return ListSequence.fromList(SLinkOperations.getTargets(n,"fields",true)).concat(ListSequence.fromList(SLinkOperations.getTargets(n,"parameters",true)));
      }
      return null;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:e79b58b4-ea58-4c9d-b43b-c3a260addf6a(jetbrains.mps.xmlQuery.constraints)","7707758858785994436");
    }
  }
);
  return result;
}
