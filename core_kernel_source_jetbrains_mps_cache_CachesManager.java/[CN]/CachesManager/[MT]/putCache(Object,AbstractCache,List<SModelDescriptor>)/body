{
  myDependsOnModels.put(key,dependsOnModels);
  ModelEventRouter eventRouter=new ModelEventRouter(cache);
  myModelEventRouters.put(cache,eventRouter);
  for (  SModelDescriptor dependsOnModel : dependsOnModels) {
    ((SModelInternal)dependsOnModel).addModelListener(eventRouter);
  }
  AbstractCache existing=myCaches.putIfAbsent(key,cache);
  if (existing != null) {
    myModelEventRouters.remove(cache);
    myDependsOnModels.remove(key);
    for (    SModelDescriptor dependsOnModel : dependsOnModels) {
      ((SModelInternal)dependsOnModel).removeModelListener(eventRouter);
    }
    cache.clearCache();
    return existing;
  }
  return cache;
}
