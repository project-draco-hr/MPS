{
  mySModelRepository.addModelRepositoryListener(new SModelRepositoryAdapter(){
    public void modelRemoved(    SModelDescriptor modelDescriptor){
      List<Object> keysToRemove=new ArrayList<Object>();
      SModelReference reference=modelDescriptor.getSModelReference();
      for (      Object key : myDependsOnModels.keySet()) {
        List<SModelDescriptor> dependsOnModels=myDependsOnModels.get(key);
        for (        SModelDescriptor dependsOnModel : dependsOnModels) {
          SModelReference ref=dependsOnModel == null ? null : dependsOnModel.getSModelReference();
          if (EqualUtil.equals(ref,reference)) {
            keysToRemove.add(key);
          }
        }
      }
      for (      Object key : keysToRemove) {
        removeCache(key);
      }
    }
  }
);
  myClassLoaderManager.addReloadHandler(new ReloadAdapter(){
    public void onReload(){
      removeAllCaches();
    }
  }
);
}
