{
  SNode relativePathNode=SNodeOperations.getAncestor(thisNode,"jetbrains.mps.buildScript.structure.BuildRelativePath",false,false);
  String relativePath=BuildRelativePath_Behavior.call_getBasePath_4959435991187140515(relativePathNode,context);
  if (relativePath == null) {
    return ListSequence.fromList(new ArrayList<String>());
  }
  SNode start=SLinkOperations.getTarget(relativePathNode,"compositePart",true);
  while (start != thisNode) {
    if (start == null) {
      return ListSequence.fromList(new ArrayList<String>());
    }
    relativePath+="/" + SPropertyOperations.getString(start,"head");
    start=SLinkOperations.getTarget(start,"tail",true);
  }
  File file=new File(relativePath);
  if (!(file.exists())) {
    return ListSequence.fromList(new ArrayList<String>());
  }
  return Sequence.fromIterable(Sequence.fromArray(file.listFiles())).select(new ISelector<File,String>(){
    public String select(    File it){
      return it.getName();
    }
  }
).union(Sequence.fromIterable(Sequence.<String>singleton(".."))).sort(new ISelector<String,Comparable<?>>(){
    public Comparable<?> select(    String it){
      return it;
    }
  }
,true).toListSequence();
}
