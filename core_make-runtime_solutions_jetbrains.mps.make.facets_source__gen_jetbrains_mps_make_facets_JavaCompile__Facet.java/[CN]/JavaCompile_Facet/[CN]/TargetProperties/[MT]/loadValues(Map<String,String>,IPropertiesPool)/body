{
  try {
{
      ITarget.Name name=new ITarget.Name("jetbrains.mps.make.facets.JavaCompile.compile");
      JavaCompile_Facet.Target_compile.Parameters props=properties.properties(name,JavaCompile_Facet.Target_compile.Parameters.class);
      if (MapSequence.fromMap(store).containsKey("jetbrains.mps.make.facets.JavaCompile.compile.compiledAnything")) {
        props.compiledAnything(Boolean.valueOf(MapSequence.fromMap(store).get("jetbrains.mps.make.facets.JavaCompile.compile.compiledAnything")));
      }
      if (MapSequence.fromMap(store).containsKey("jetbrains.mps.make.facets.JavaCompile.compile.skipCompilation")) {
        props.skipCompilation(Boolean.valueOf(MapSequence.fromMap(store).get("jetbrains.mps.make.facets.JavaCompile.compile.skipCompilation")));
      }
      if (MapSequence.fromMap(store).containsKey("jetbrains.mps.make.facets.JavaCompile.compile.options")) {
        props.options(null);
      }
    }
{
      ITarget.Name name=new ITarget.Name("jetbrains.mps.make.facets.JavaCompile.auxCompile");
      JavaCompile_Facet.Target_auxCompile.Parameters props=properties.properties(name,JavaCompile_Facet.Target_auxCompile.Parameters.class);
      if (MapSequence.fromMap(store).containsKey("jetbrains.mps.make.facets.JavaCompile.auxCompile.project")) {
        props.project(null);
      }
      if (MapSequence.fromMap(store).containsKey("jetbrains.mps.make.facets.JavaCompile.auxCompile.skipAuxCompile")) {
        props.skipAuxCompile(Boolean.valueOf(MapSequence.fromMap(store).get("jetbrains.mps.make.facets.JavaCompile.auxCompile.skipAuxCompile")));
      }
    }
  }
 catch (  RuntimeException re) {
  }
}
