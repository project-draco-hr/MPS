{
  final Wrappers._T<Iterable<SModelDescriptor>> models=new Wrappers._T<Iterable<SModelDescriptor>>(null);
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      Iterable<IModule> modules=pro.getModules();
      for (      IModule mod : withGenerators(modules)) {
        models.value=Sequence.fromIterable(models.value).concat(Sequence.fromIterable(((Iterable<SModelDescriptor>)mod.getOwnModelDescriptors())).where(new IWhereFilter<SModelDescriptor>(){
          public boolean accept(          SModelDescriptor it){
            return it.isGeneratable();
          }
        }
));
      }
    }
  }
);
  return new ModelsToResources(context,Sequence.fromIterable(models.value).where(new IWhereFilter<SModelDescriptor>(){
    public boolean accept(    SModelDescriptor smd){
      return !(GeneratorManager.isDoNotGenerate(smd));
    }
  }
)).resources(false);
}
