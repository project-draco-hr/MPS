{
  return Sequence.<IModule>fromIterable(modules).concat(Sequence.<IModule>fromIterable(modules).where(new IWhereFilter<IModule>(){
    public boolean accept(    IModule it){
      return it instanceof Language;
    }
  }
).<IModule>translate(new ITranslator2<IModule,IModule>(){
    public Iterable<IModule> translate(    IModule it){
      return Collections.<IModule>unmodifiableList(((Language)it).getGenerators());
    }
  }
));
}
