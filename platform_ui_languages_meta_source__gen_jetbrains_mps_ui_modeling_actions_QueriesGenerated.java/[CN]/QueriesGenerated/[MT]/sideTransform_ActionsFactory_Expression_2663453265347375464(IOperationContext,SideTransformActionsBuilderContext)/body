{
  List<INodeSubstituteAction> result=ListSequence.fromList(new ArrayList<INodeSubstituteAction>());
{
    SNode concept=SConceptOperations.findConceptDeclaration("jetbrains.mps.ui.modeling.structure.ExpressionWithUnit");
    ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(concept,_context.getSourceNode()){
      public SNode doSubstitute(      String pattern){
        return SNodeOperations.replaceWithAnother(_context.getSourceNode(),new QueriesGenerated.QuotationClass_x583g4_a1a0a0a0a0a1a0a1a4().createNode(_context.getSourceNode(),"PERCENT"));
      }
      public String getMatchingText(      String pattern){
        return "%";
      }
      public String getVisibleMatchingText(      String pattern){
        return this.getMatchingText(pattern);
      }
    }
);
  }
{
    SNode concept=SConceptOperations.findConceptDeclaration("jetbrains.mps.ui.modeling.structure.ExpressionWithUnit");
    ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(concept,_context.getSourceNode()){
      public SNode doSubstitute(      String pattern){
        return SNodeOperations.replaceWithAnother(_context.getSourceNode(),new QueriesGenerated.QuotationClass_x583g4_a1a0a0a0a0a1a0a2a4().createNode(_context.getSourceNode(),"PIXEL"));
      }
      public String getMatchingText(      String pattern){
        return "px";
      }
      public String getVisibleMatchingText(      String pattern){
        return this.getMatchingText(pattern);
      }
    }
);
  }
  return result;
}
