{
  SNode classifierType=SLinkOperations.getTarget(instanceOfExpression,"classType",true);
  SNode expressionType=TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(instanceOfExpression,"leftExpression",true));
  if (TypeChecker.getInstance().getSubtypingManager().isSubtype(expressionType,classifierType)) {
{
      BaseIntentionProvider intentionProvider=null;
      IErrorTarget errorTarget=new NodeErrorTarget();
      typeCheckingContext.reportWarning(instanceOfExpression,"unnecessary instanceof","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","3545977178604772302",intentionProvider,errorTarget);
    }
  }
}
