{
  Project project=myEnvironment.getProject();
  List<ITestNodeWrapper> testNodes=myRunConfiguration.getJUnitSettings().getTests(ProjectHelper.toMPSProject(project));
  TestRunState runState=new TestRunState(testNodes);
  TestEventsDispatcher eventsDispatcher=new TestEventsDispatcher(runState);
  jetbrains.mps.execution.configurations.implementation.plugin.plugin.Executor processExecutor;
  if (myRunConfiguration.getJUnitSettings().canLightExecute(testNodes)) {
    processExecutor=new JUnitLightExecutor(testNodes,eventsDispatcher);
  }
 else {
    processExecutor=new JUnitExecutor(myRunConfiguration.getJavaRunParameters(),testNodes);
  }
  ProcessHandler process=processExecutor.execute();
  final UnitTestViewComponent testViewComponent=myRunConfiguration.createTestViewComponent(runState,process);
  ProcessListener listener=new UnitTestProcessListener(eventsDispatcher);
  _FunctionTypes._void_P0_E0 disposeHandler=new _FunctionTypes._void_P0_E0(){
    public void invoke(){
      testViewComponent.dispose();
    }
  }
;
{
    ProcessHandler _processHandler=process;
    _processHandler.addProcessListener(listener);
    return new DefaultExecutionResult(_processHandler,new DefaultExecutionConsole(testViewComponent,disposeHandler));
  }
}
