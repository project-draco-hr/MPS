{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.ConstantValue").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").properties("className").references("constant").alias("constant value","").create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.ExtractStatementListExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression","jetbrains.mps.baseLanguage.structure.ILocalVariableElementList").children(new String[]{"stmts","innerExpr"},new boolean[]{false,false}).alias("extract statements","").create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.ExtractStatementListInnerExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression","jetbrains.mps.baseLanguage.structure.ILocalVariableElement").children(new String[]{"inner"},new boolean[]{false}).create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.ExtractStaticInnerClassConcept").super_("jetbrains.mps.baseLanguage.structure.ClassConcept").parents("jetbrains.mps.baseLanguage.structure.ClassConcept").create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.ExtractStaticInnerClassCreator").super_("jetbrains.mps.baseLanguage.structure.ClassCreator").parents("jetbrains.mps.baseLanguage.structure.ClassCreator").create();
case 5:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.ExtractStaticInnerClassExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").properties("makeUnique","nonStatic").children(new String[]{"innerClass","inner"},new boolean[]{false,false}).alias("extract static inner class","").create();
case 6:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.ExtractStaticMethodExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").properties("makeUnique").children(new String[]{"method","inner"},new boolean[]{false,false}).alias("extract static method","").create();
case 7:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.ExtractStaticMethod_CallExpression").super_("jetbrains.mps.baseLanguage.structure.BaseMethodCall").parents("jetbrains.mps.baseLanguage.structure.BaseMethodCall").references("staticMethodDeclaration").alias("","extract static method invocation").create();
case 8:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.ExtractToConstantExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").properties("fieldName","makeUnique").children(new String[]{"expression"},new boolean[]{false}).alias("extract to constant","").create();
case 9:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.ExtractToConstantRefExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").references("original").create();
case 10:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.InternalAnonymousClass").super_("jetbrains.mps.baseLanguage.structure.ClassConcept").parents("jetbrains.mps.baseLanguage.structure.ClassConcept","jetbrains.mps.baseLanguage.structure.IAnonymousClass","jetbrains.mps.baseLanguage.structure.IControlFlowInterrupter").properties("fqClassName").children(new String[]{"constructorArgument","type","typeParameter"},new boolean[]{true,false,true}).alias("","_anonymous class").create();
case 11:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.InternalAnonymousClassCreator").super_("jetbrains.mps.baseLanguage.structure.AbstractCreator").parents("jetbrains.mps.baseLanguage.structure.AbstractCreator").children(new String[]{"cls"},new boolean[]{false}).alias("_anonymous class","").create();
case 12:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.InternalClassCreator").super_("jetbrains.mps.baseLanguage.structure.AbstractCreator").parents("jetbrains.mps.baseLanguage.structure.AbstractCreator").properties("fqClassName").children(new String[]{"type","parameter","actualArgument"},new boolean[]{false,true,true}).alias("_class","internal class creator").create();
case 13:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.InternalClassExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").children(new String[]{"type"},new boolean[]{false}).alias("_<type>.class","internal class expression").create();
case 14:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.InternalClassifierType").super_("jetbrains.mps.baseLanguage.structure.ClassifierType").parents("jetbrains.mps.baseLanguage.structure.ClassifierType").properties("fqClassName").alias("_classifier type","").create();
case 15:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.InternalNewExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").properties("fqClassName").children(new String[]{"type","parameter","actualArgument"},new boolean[]{false,true,true}).alias("_new","internal new expression").create();
case 16:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.InternalPartialFieldReference").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression","jetbrains.mps.baseLanguage.structure.IOperation").properties("fieldName").children(new String[]{"fieldType","instanceType","instance"},new boolean[]{false,false,false}).alias("_field reference","").create();
case 17:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.InternalPartialInstanceMethodCall").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression","jetbrains.mps.baseLanguage.structure.IOperation").properties("methodName").children(new String[]{"returnType","instance","actualArgument"},new boolean[]{false,false,true}).alias("_method call","").create();
case 18:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.InternalStaticFieldReference").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").properties("fqClassName","fieldName").alias("_static field reference","internal static field reference").create();
case 19:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.InternalStaticMethodCall").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").properties("fqClassName","methodName").children(new String[]{"returnType","typeParameter","actualArgument"},new boolean[]{false,true,true}).alias("_static method call","internal static method call").create();
case 20:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.InternalSuperMethodCallOperation").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").properties("methodName").children(new String[]{"returnType","actualArgument"},new boolean[]{false,true}).alias("_super method call","").create();
case 21:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.InternalThisExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").alias("_this","").create();
case 22:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.InternalVariableReference").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").properties("name").children(new String[]{"type"},new boolean[]{false}).alias("_<variable reference>","internal variable/parameter reference").create();
case 23:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.TypeHintExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").children(new String[]{"expression","typeHint"},new boolean[]{false,false}).create();
case 24:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguageInternal.structure.WeakClassReference").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").references("classifier").alias("class name","weak reference to a class").create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
