{
switch (Arrays.binarySearch(stringSwitchCases_2qnle6_a0a0a,fqName)) {
case 43:
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.CommandList"));
case 110:
  return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.InputLines"));
case 172:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ShellScript"));
case 173:
return new DataHolderConstraintsDescriptor(new SimpleCommand_Constraints());
case 196:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.WordList"));
case 17:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.AsyncOperator"));
case 44:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.CommandTerminator"));
case 171:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.SemicolonTerminator"));
case 18:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.AsyncTerminator"));
case 2:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.AbstractLoopCommand"));
case 188:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.UntilLoopCommand"));
case 0:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.AbstractCommand"));
case 194:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.WhileLoopCommand"));
case 77:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ForeachCommand"));
case 192:
return new DataHolderConstraintsDescriptor(new VariableNameDeclaration_Constraints());
case 76:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ForCommand"));
case 15:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ArithmeticExpression"));
case 105:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.IfCommand"));
case 62:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ElifCommand"));
case 36:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.CaseClause"));
case 37:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.CaseCommand"));
case 56:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.DoubleSemicolon"));
case 38:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.CaseTerminator"));
case 169:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.SemicolonEt"));
case 57:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.DoubleSemicolonEt"));
case 168:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.SelectCommand"));
case 88:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.GroupingCommand"));
case 31:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.BraceGrouping"));
case 34:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.BracketGrouping"));
case 24:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.BinaryArithmeticExpression"));
case 128:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.MulExpression"));
case 54:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.DivExpression"));
case 127:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ModExpression"));
case 3:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.AddExpression"));
case 180:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.SubExpression"));
case 13:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ArithmeticCommand"));
case 184:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.UnaryArithmeticExpression"));
case 154:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.PostVariableExpression"));
case 157:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.PreVariableExpression"));
case 153:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.PostIncExpression"));
case 152:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.PostDecExpression"));
case 156:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.PreIncExpression"));
case 155:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.PreDecExpression"));
case 187:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.UnaryPlusExpression"));
case 186:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.UnaryMinusExpression"));
case 123:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.LogicalNegationExpression"));
case 27:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.BitwiseNegationExpression"));
case 69:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ExpExpression"));
case 115:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.LeftBitwiseShiftExpression"));
case 165:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.RightBitwiseShiftExpression"));
case 63:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.EqualityExpression"));
case 106:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.InequalityExpression"));
case 26:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.BitwiseAndExpression"));
case 28:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.BitwiseOrExpression"));
case 29:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.BitwiseXorExpression"));
case 122:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.LogicalAndExpression"));
case 124:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.LogicalOrExpression"));
case 41:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.CommaExpression"));
case 112:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.IntegerLiteral"));
case 51:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.DecimalConstant"));
case 93:
return new DataHolderConstraintsDescriptor(new HexIntegerLiteral_Constraints());
case 22:
return new DataHolderConstraintsDescriptor(new BasedIntegerLiteral_Constraints());
case 33:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.BracketExpression"));
case 82:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.GreaterThanExpression"));
case 117:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.LessThanExpression"));
case 85:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.GreaterThanOrEqualExpression"));
case 119:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.LessThanOrEqualExpression"));
case 50:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ConditionalOperation"));
case 19:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.BaseAssingmentExpression"));
case 16:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.AssingmentExpression"));
case 151:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.PlusAssingmentExpression"));
case 125:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.MinusAssingmentExpression"));
case 129:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.MusAssingmentExpression"));
case 53:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.DivAssingmentExpression"));
case 126:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ModAssingmentExpression"));
case 116:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.LeftShiftAssingmentExpression"));
case 166:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.RightShiftAssingmentExpression"));
case 4:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.AndAssingmentExpression"));
case 141:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.OrAssingmentExpression"));
case 198:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.XorAssingmentExpression"));
case 21:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.BaseVariableAssingment"));
case 191:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.VariableAssingment"));
case 23:
return new DataHolderConstraintsDescriptor(new BasicParameterExpansion_Constraints());
case 14:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ArithmeticExpansion"));
case 183:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.TildeExpansion"));
case 81:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.GeneralizedWord"));
case 100:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.IGeneralizedWordUnit"));
case 174:
return new DataHolderConstraintsDescriptor(new SimpleWord_Constraints());
case 20:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.BaseCommandSubstitution"));
case 159:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.QuotesCommandSubstitution"));
case 35:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.BuckCommandSubstitution"));
case 162:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.RedirectedCommand"));
case 163:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.Redirection"));
case 111:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.InputRedirection"));
case 147:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.OutputRedirection"));
case 101:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.IORedirection"));
case 8:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.AppendingOutputRedirection"));
case 146:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.OutputErrorRedirection"));
case 7:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.AppendingOutputErrorRedirection"));
case 104:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.IToWordRedirection"));
case 91:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.HereDocumentRedirection"));
case 92:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.HereStringRedirection"));
case 58:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.DuplicateInputFileDiscriptor"));
case 59:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.DuplicateOutputFileDiscriptor"));
case 161:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ReadingWritingRedirection"));
case 80:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.FunctionDeclaration"));
case 97:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ICompoundCommand"));
case 79:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.FunctionCallCommand"));
case 71:
return new DataHolderConstraintsDescriptor(new ExternalCommandDeclaration_Constraints());
case 70:
return new DataHolderConstraintsDescriptor(new ExternalCommandCall_Constraints());
case 73:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ExternalOptionReference"));
case 136:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.OptionSet"));
case 134:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.Option"));
case 138:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.OptionWithParam"));
case 103:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ISymbolConcept"));
case 99:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.IDescribedConcept"));
case 72:
return new DataHolderConstraintsDescriptor(new ExternalOptionDeclaration_Constraints());
case 137:
return new DataHolderConstraintsDescriptor(new OptionSetReference_Constraints());
case 135:
return new DataHolderConstraintsDescriptor(new OptionReference_Constraints());
case 139:
return new DataHolderConstraintsDescriptor(new OptionWithParamReference_Constraints());
case 95:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ICommandParameter"));
case 12:
return new DataHolderConstraintsDescriptor(new ArgumentReference_Constraints());
case 9:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.Argument"));
case 10:
return new DataHolderConstraintsDescriptor(new ArgumentList_Constraints());
case 11:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ArgumentListReference"));
case 48:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ConditionalCommand"));
case 158:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.QuotedWord"));
case 98:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.IConcreteWordUnit"));
case 175:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.SingleQuote"));
case 55:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.DoubleQuote"));
case 102:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.IPriorityExpression"));
case 195:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.WordExpression"));
case 109:
return new DataHolderConstraintsDescriptor(new InputLine_Constraints());
case 45:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.CommentedCommandList"));
case 89:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.HeadCommandList"));
case 74:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.FollowingCommandList"));
case 6:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.AndOperator"));
case 143:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.OrOperator"));
case 46:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.CommentedFollowingCommandList"));
case 1:
return new DataHolderConstraintsDescriptor(new AbstractFollowingCommandList_Constraints());
case 90:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.HeadPipeline"));
case 75:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.FollowingPipeline"));
case 149:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.PipelineOperatorConnection"));
case 150:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.PipelineOperatorErrorConnection"));
case 47:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.CommentedText"));
case 42:
return new DataHolderConstraintsDescriptor(new Command_Constraints());
case 96:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.IComment"));
case 94:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.IArithmeticHolder"));
case 113:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.LValue"));
case 193:
return new DataHolderConstraintsDescriptor(new VariableReference_Constraints());
case 49:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ConditionalExpression"));
case 185:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.UnaryConditionalExpression"));
case 68:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ExistConditionalExpression"));
case 30:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.BlockFileConditionalExpression"));
case 39:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.CharFileConditionalExpression"));
case 52:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.DirectoryConditionalExpression"));
case 144:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.OtherExistConditionalExpression"));
case 164:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.RegularFileConditionalExpression"));
case 87:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.GroupIdConditionalExpression"));
case 181:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.SymlinkConditionalExpression"));
case 178:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.StickyBitConditionalExpression"));
case 148:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.PipeConditionalExpression"));
case 160:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ReadTestConditionalExpression"));
case 176:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.SizeConditionalExpression"));
case 182:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.TerminalConditionalExpression"));
case 189:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.UserIdConditionalExpression"));
case 197:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.WriteTestConditionalExpression"));
case 67:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ExecTestConditionalExpression"));
case 61:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.EffectiveUserIdConditionalExpression"));
case 60:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.EffectiveGroupIdConditionalExpression"));
case 145:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.OtherSymlinkConditionalExpression"));
case 177:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.SocketConditionalExpression"));
case 114:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.LastReadConditionalExpression"));
case 140:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.OptnameStringConditionalExpression"));
case 199:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.ZeroStringConditionalExpression"));
case 131:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.NonZeroStringConditionalExpression"));
case 179:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.StringConditionalExpression"));
case 25:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.BinaryConditionalExpression"));
case 130:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.NewerThan"));
case 133:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.OlderThan"));
case 167:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.SameReference"));
case 65:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.EqualityStrings"));
case 108:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.InequalityStrings"));
case 121:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.LessThanString"));
case 86:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.GreaterThanString"));
case 78:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.FreeCommand"));
case 170:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.SemicolonOperator"));
case 190:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.VariableAddAssingment"));
case 132:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.NotCommand"));
case 107:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.InequalityNumber"));
case 64:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.EqualityNumber"));
case 118:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.LessThanNumber"));
case 120:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.LessThanOrEqualNumber"));
case 83:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.GreaterThanNumber"));
case 84:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.GreaterThanOrEqual"));
case 40:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.CombiningConditionalExpression"));
case 5:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.AndCombiningComditionalExpression"));
case 142:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.OrCombiningConditionalExpression"));
case 32:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.BracketConditionalExpression"));
case 66:
return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.bash.structure.EqualityStrings2"));
default :
return null;
}
}
