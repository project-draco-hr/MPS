{
  if (node.hasSkippedChildren()) {
    jetbrains.mps.smodel.SNode fullNode=myFullModel.getNode(node.getNodeId());
    if (fullNode == null) {
      LOG.error("model " + myModel.getReference().getModelName() + " ("+ myModel.getPersistenceVersion()+ ")"+ ": no peer node in full model for "+ node.getNodeId()+ " (in "+ ((StreamDataSource)myModel.getModelDescriptor().getSource()).getLocation()+ ")");
      return;
    }
    Iterator<jetbrains.mps.smodel.SNode> it=fullNode.getChildren().iterator();
    SNode curr=it.hasNext() ? it.next() : null;
    for (    SNode child : node.getChildren()) {
      SNodeId childId=child.getNodeId();
      while (curr != null && !childId.equals(curr.getNodeId())) {
        SNode next=it.hasNext() ? it.next() : null;
        String role=curr.getRoleInParent();
        curr.delete();
        node.insertChild((jetbrains.mps.smodel.SNode)child,role,(jetbrains.mps.smodel.SNode)curr,true);
        curr=next;
      }
      if (curr != null && childId.equals(curr.getNodeId())) {
        curr=it.hasNext() ? it.next() : null;
      }
      if (curr == null) {
        break;
      }
    }
    while (curr != null) {
      SNode next=it.hasNext() ? it.next() : null;
      String role=curr.getRoleInParent();
      curr.delete();
      node.addChild(role,curr);
      curr=next;
    }
    node.cleanSkippedRoles();
  }
  for (  SNode n : node.getChildren()) {
    if (n instanceof InterfaceSNode) {
      update((InterfaceSNode)n);
    }
  }
}
