{
  this.addNodeById("7093131866560585772");
  this.addNodeById("7093131866560585816");
  InlineVariableRefactoring ref=new InlineVariableReferenceRefactoring(SNodeOperations.cast(this.getNodeById("7093131866560585802"),"jetbrains.mps.baseLanguage.structure.VariableReference"));
  ref.doRefactoring();
  Assert.assertNull("nodes '" + SNodeOperations.cast(this.getNodeById("7093131866560585780"),"jetbrains.mps.baseLanguage.structure.ClassConcept") + "' and '"+ SNodeOperations.cast(this.getNodeById("7093131866560585820"),"jetbrains.mps.baseLanguage.structure.ClassConcept")+ "' do not match!",NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("7093131866560585780"),"jetbrains.mps.baseLanguage.structure.ClassConcept")),ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("7093131866560585820"),"jetbrains.mps.baseLanguage.structure.ClassConcept"))));
}
