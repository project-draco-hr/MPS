{
  Set<Instruction> unreachable=program.getUnreachableInstructions();
  Set<SNode> unreachableNodes=new HashSet<SNode>();
  for (  Instruction i : unreachable) {
    if (!(DataFlow.mayBeUnreachable(i)) && i.getSource() != null) {
      SNode unreachableNode=(SNode)i.getSource();
      if (SNodeOperations.isInstanceOf(unreachableNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b215L,"jetbrains.mps.baseLanguage.structure.Statement"))) {
        unreachableNodes.add((SNode)i.getSource());
      }
 else {
        if (SNodeOperations.isInstanceOf(unreachableNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b200L,"jetbrains.mps.baseLanguage.structure.StatementList"))) {
          if (!(SNodeOperations.isInstanceOf(SNodeOperations.getParent(unreachableNode),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b215L,"jetbrains.mps.baseLanguage.structure.Statement")))) {
            unreachableNodes.add((SNode)i.getSource());
          }
        }
 else {
          unreachableNodes.add(SNodeOperations.getNodeAncestor(unreachableNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b215L,"jetbrains.mps.baseLanguage.structure.Statement"),true,false));
        }
      }
    }
  }
  return unreachableNodes;
}
