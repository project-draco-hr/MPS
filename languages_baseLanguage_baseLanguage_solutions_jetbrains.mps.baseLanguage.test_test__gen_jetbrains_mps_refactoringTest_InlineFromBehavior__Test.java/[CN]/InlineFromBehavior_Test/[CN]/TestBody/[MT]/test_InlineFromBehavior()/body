{
  this.addNodeById("1230053040716");
  this.addNodeById("1230053040735");
  InlineMethodRefactoring ref=new InlineMethodRefactoring(SNodeOperations.cast(this.getNodeById("1230053040732"),"jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall"));
  ref.doRefactor();
  Assert.assertNull("nodes '" + SNodeOperations.cast(this.getNodeById("1230053040717"),"jetbrains.mps.baseLanguage.structure.ClassConcept") + "' and '"+ SNodeOperations.cast(this.getNodeById("1230053040736"),"jetbrains.mps.baseLanguage.structure.ClassConcept")+ "' do not match!",NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230053040717"),"jetbrains.mps.baseLanguage.structure.ClassConcept")),ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230053040736"),"jetbrains.mps.baseLanguage.structure.ClassConcept"))));
}
