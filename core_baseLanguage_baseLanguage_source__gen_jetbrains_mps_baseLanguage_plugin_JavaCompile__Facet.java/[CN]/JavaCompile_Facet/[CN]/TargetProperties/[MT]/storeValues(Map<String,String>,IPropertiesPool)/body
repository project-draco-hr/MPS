{
{
    ITarget.Name name=new ITarget.Name("jetbrains.mps.baseLanguage.JavaCompile.compile");
    if (properties.hasProperties(name)) {
      JavaCompile_Facet.Target_compile.Parameters props=properties.properties(name,JavaCompile_Facet.Target_compile.Parameters.class);
      MapSequence.<String,String>fromMap(store).put("jetbrains.mps.baseLanguage.JavaCompile.compile.compiledAnything",String.valueOf(props.compiledAnything()));
    }
  }
{
    ITarget.Name name=new ITarget.Name("jetbrains.mps.baseLanguage.JavaCompile.auxCompile");
    if (properties.hasProperties(name)) {
      JavaCompile_Facet.Target_auxCompile.Parameters props=properties.properties(name,JavaCompile_Facet.Target_auxCompile.Parameters.class);
      MapSequence.<String,String>fromMap(store).put("jetbrains.mps.baseLanguage.JavaCompile.auxCompile.skipAuxCompile",String.valueOf(props.skipAuxCompile()));
    }
  }
{
    ITarget.Name name=new ITarget.Name("jetbrains.mps.baseLanguage.JavaCompile.compileToMemory");
    if (properties.hasProperties(name)) {
      JavaCompile_Facet.Target_compileToMemory.Parameters props=properties.properties(name,JavaCompile_Facet.Target_compileToMemory.Parameters.class);
      MapSequence.<String,String>fromMap(store).put("jetbrains.mps.baseLanguage.JavaCompile.compileToMemory.classPath",null);
      MapSequence.<String,String>fromMap(store).put("jetbrains.mps.baseLanguage.JavaCompile.compileToMemory.errors",String.valueOf((boolean)props.errors()));
    }
  }
}
