{
  return new IJob.Stub(){
    public IResult execute(    final Iterable<IResource> input,    final IJobMonitor monitor,    final IPropertiesAccessor pa){
      Iterable<IResource> _output_wf1ya0_a0a=null;
switch (0) {
case 0:
        pa.global().properties(Target_compile.this.getName(),JavaCompile_Facet.Target_compile.Parameters.class).compiledAnything(false);
      int work=Sequence.fromIterable(input).foldLeft(0,new ILeftCombinator<IResource,Integer>(){
        public Integer combine(        Integer s,        IResource it){
          return s + ((((TResource)it).module().isCompileInMPS() ? 100 : 0));
        }
      }
);
    if (work == 0) {
      return new IResult.SUCCESS(_output_wf1ya0_a0a);
    }
  monitor.currentProgress().beginWork("Compiling",work,monitor.currentProgress().workLeft());
for (IResource resource : Sequence.fromIterable(input)) {
  final TResource tres=(TResource)resource;
  if (tres.module() == null) {
    return new IResult.FAILURE(_output_wf1ya0_a0a);
  }
  if (!(tres.module().isCompileInMPS())) {
    continue;
  }
  monitor.currentProgress().advanceWork("Compiling",50,tres.module().getModuleReference().getModuleFqName());
  final Wrappers._T<MPSCompilationResult> cr=new Wrappers._T<MPSCompilationResult>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      cr.value=new ModuleMaker().make(CollectionUtil.set(tres.module()),new EmptyProgressIndicator());
    }
  }
);
  if (cr.value != null) {
    pa.global().properties(Target_compile.this.getName(),JavaCompile_Facet.Target_compile.Parameters.class).compiledAnything(pa.global().properties(Target_compile.this.getName(),JavaCompile_Facet.Target_compile.Parameters.class).compiledAnything() || cr.value.isCompiledAnything());
    for (    IMessage msg : cr.value.getMessages()) {
      monitor.reportFeedback(new IFeedback.MESSAGE(msg));
    }
  }
  if (cr.value == null || !(cr.value.isOk())) {
    if (cr.value != null) {
      if (cr.value.getErrors() > 0) {
        monitor.reportFeedback(new IFeedback.ERROR(String.valueOf(cr.value)));
      }
 else       if (cr.value.getWarnings() > 0) {
        monitor.reportFeedback(new IFeedback.WARNING(String.valueOf(cr.value)));
      }
 else {
        monitor.reportFeedback(new IFeedback.INFORMATION(String.valueOf(cr.value)));
      }
    }
    return new IResult.FAILURE(_output_wf1ya0_a0a);
  }
  monitor.currentProgress().advanceWork("Compiling",50);
  _output_wf1ya0_a0a=Sequence.fromIterable(_output_wf1ya0_a0a).concat(Sequence.fromIterable(Sequence.<IResource>singleton(tres)));
}
monitor.currentProgress().finishWork("Compiling");
default :
return new IResult.SUCCESS(_output_wf1ya0_a0a);
}
}
}
;
}
