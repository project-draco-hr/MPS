{
  super("",ID);
  this.setIsInternal(false);
  this.setPopup(false);
  try {
    this.add(new GoByReferenceGroup());
    this.add(new GoByCurrentReferenceAction());
    this.add(new HighlightUsagesAction());
    this.add(new HighlightInstancesAction());
    this.addSeparator();
    this.add(ActionFactory.getInstance().getRegisteredAction(new ShowInProject_Action()));
    this.add(new SelectInActionAdapter());
    this.addSeparator();
    this.add(ActionFactory.getInstance().getRegisteredAction(new GoToConceptDeclaration_Action()));
    this.add(new GoToEditorDeclarationAction());
    this.add(new GoToRulesAction());
    this.add(ActionFactory.getInstance().getRegisteredAction(new ShowNodeInExplorer_Action()));
    this.add(ActionFactory.getInstance().getRegisteredAction(new ShowNodeInInspector_Action()));
    this.addSeparator();
    this.add(new GenerateFilesFromCurrentModelAction());
    this.add(new GenerateTextFromCurrentModelAction());
    this.addSeparator();
    this.add(new ShowGenerationTraceAction());
    this.add(ActionFactory.getInstance().getRegisteredAction(new ShowGenerationTraceback_Action()));
    this.addSeparator();
    this.add(new FindSpecificNodeUsagesAction());
    this.add(new FastFindUsagesNodeAction());
    this.addSeparator();
    this.add(ActionFactory.getInstance().getRegisteredAction(new ShowClassInHierarchy_Action()));
    this.add(ActionFactory.getInstance().getRegisteredAction(new ShowConceptInHierarchy_Action()));
    this.addAnchor(EditorPopup_ActionGroup.LABEL_ID_structure);
    this.addSeparator();
    this.add(ActionFactory.getInstance().getRegisteredAction(new CloneRoot_Action()));
    this.addSeparator();
    this.add(new ShowCellKeymapsAction());
    this.addSeparator();
    this.add(new ShowParametersAction());
    this.addSeparator();
    this.add(new ModelPropertiesActionWOShortcuts());
    this.addSeparator();
    this.addAnchor(EditorPopup_ActionGroup.LABEL_ID_vcs);
    this.addSeparator();
  }
 catch (  Throwable t) {
    LOG.error("User group error",t);
  }
}
