{
  super("",ID);
  this.setIsInternal(false);
  this.setPopup(false);
  try {
    this.add(new GoByReferenceGroup());
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(GoByCurrentReferenceAction.class,module.getModuleFqName()));
    }
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(HighlightUsagesAction.class,module.getModuleFqName()));
    }
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(HighlightInstancesAction.class,module.getModuleFqName()));
    }
    this.addSeparator();
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(module.getClass("jetbrains.mps.ide.actions.ShowInProject_Action"),module.getModuleFqName()));
    }
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(SelectInActionAdapter.class,module.getModuleFqName()));
    }
    this.addSeparator();
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(module.getClass("jetbrains.mps.ide.actions.GoToConceptDeclaration_Action"),module.getModuleFqName()));
    }
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(GoToEditorDeclarationAction.class,module.getModuleFqName()));
    }
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(GoToRulesAction.class,module.getModuleFqName()));
    }
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(module.getClass("jetbrains.mps.ide.actions.ShowNodeInExplorer_Action"),module.getModuleFqName()));
    }
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(module.getClass("jetbrains.mps.ide.actions.ShowNodeInInspector_Action"),module.getModuleFqName()));
    }
    this.addSeparator();
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(GenerateFilesFromCurrentModelAction.class,module.getModuleFqName()));
    }
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(GenerateTextFromCurrentModelAction.class,module.getModuleFqName()));
    }
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(GoToUsageInMappingConfigAction.class,module.getModuleFqName()));
    }
    this.addSeparator();
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(ShowGenerationTraceAction.class,module.getModuleFqName()));
    }
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(module.getClass("jetbrains.mps.ide.actions.ShowGenerationTraceback_Action"),module.getModuleFqName()));
    }
    this.addSeparator();
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(FindSpecificNodeUsagesAction.class,module.getModuleFqName()));
    }
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(FastFindUsagesNodeAction.class,module.getModuleFqName()));
    }
    this.addSeparator();
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(module.getClass("jetbrains.mps.ide.actions.ShowClassInHierarchy_Action"),module.getModuleFqName()));
    }
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(module.getClass("jetbrains.mps.ide.actions.ShowConceptInHierarchy_Action"),module.getModuleFqName()));
    }
    this.addAnchor(EditorPopup_ActionGroup.LABEL_ID_structure);
    this.addSeparator();
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(module.getClass("jetbrains.mps.ide.actions.CloneRoot_Action"),module.getModuleFqName()));
    }
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(ShowParametersAction.class,module.getModuleFqName()));
    }
    this.addSeparator();
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(ModelPropertiesActionWOShortcuts.class,module.getModuleFqName()));
    }
    this.addSeparator();
    this.addAnchor(EditorPopup_ActionGroup.LABEL_ID_vcs);
    this.addSeparator();
  }
 catch (  Throwable t) {
    LOG.error("User group error",t);
  }
}
