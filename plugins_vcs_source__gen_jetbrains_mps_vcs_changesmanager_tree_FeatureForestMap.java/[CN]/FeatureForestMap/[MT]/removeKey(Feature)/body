{
  if (!(MapSequence.fromMap(myFeatureToValue).containsKey(feature))) {
    throw new IllegalArgumentException("Trying to remove feature which is not added");
  }
  Feature[] ancestors=MapSequence.fromMap(myFeatureToAncestors).get(feature);
  fireEvent("featureRemoved",new _FunctionTypes._void_P1_E0<FeatureForestMapListener>(){
    public void invoke(    FeatureForestMapListener listener){
      listener.featureRemoved(feature);
    }
  }
);
  MapSequence.fromMap(myFeatureToValue).removeKey(feature);
  MapSequence.fromMap(myFeatureToAncestors).removeKey(feature);
  Sequence.fromIterable(Sequence.fromArray(ancestors)).visitAll(new IVisitor<Feature>(){
    public void visit(    Feature a){
      myFeaturesIsAncestorCounterMap.decrement(a);
    }
  }
);
}
