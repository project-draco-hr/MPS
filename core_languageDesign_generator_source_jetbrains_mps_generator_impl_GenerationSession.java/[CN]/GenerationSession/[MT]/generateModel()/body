{
  if (myMajorStep != 0) {
    throw new GenerationCanceledException();
  }
  myGenerationPlan=new GenerationPlan(myOriginalInputModel.getSModel());
  if (!checkGenerationPlan(myGenerationPlan)) {
  }
  GenerationFilter filter=new GenerationFilter(myOriginalInputModel,myInvocationContext.getProject(),myGenerationContext);
  myDependenciesBuilder=filter.createDependenciesBuilder();
  if (!filter.getUnchangedRoots().isEmpty() || !filter.areConditionalsDirty()) {
    int unchanged=filter.getUnchangedRoots().size();
    int total=filter.getRootsCount();
    myLogger.info((filter.areConditionalsDirty() ? "" : "descriptors and ") + unchanged + " of "+ total+ " roots are unchanged");
    if (total > 0 && unchanged == total && !filter.areConditionalsDirty()) {
      myLogger.info("generated files are up-to-date");
      return new GenerationStatus(myOriginalInputModel.getSModel(),null,myDependenciesBuilder.getResult(myInvocationContext.getProject()),false,false,false);
    }
  }
  try {
    SModel currInputModel=myOriginalInputModel.getSModel();
    SModel currOutput=null;
    ttrace.push("steps",false);
    for (myMajorStep=0; myMajorStep < myGenerationPlan.getStepCount(); myMajorStep++) {
      if (myLogger.needsInfo()) {
        myLogger.info("executing step " + (myMajorStep + 1));
      }
      currOutput=executeMajorStep(currInputModel);
      if (currOutput == null || myLogger.getErrorCount() > 0) {
        break;
      }
      if (myGenerationPlan.getMappingConfigurations(myMajorStep).isEmpty()) {
        break;
      }
      currInputModel=currOutput;
    }
    ttrace.pop();
    if (mySessionContext != null) {
      mySessionContext.clearTransientObjects();
    }
    return new GenerationStatus(myOriginalInputModel.getSModel(),currOutput,myDependenciesBuilder.getResult(myInvocationContext.getProject()),myLogger.getErrorCount() > 0,myLogger.getWarningCount() > 0,false);
  }
 catch (  GenerationCanceledException gce) {
    throw gce;
  }
catch (  GenerationFailureException gfe) {
    myLogger.error(gfe.getMessage());
    myLogger.error("model \"" + myOriginalInputModel.getSModelFqName() + "\" generation failed : "+ gfe);
    return new GenerationStatus.ERROR(myOriginalInputModel.getSModel());
  }
catch (  Throwable e) {
    myLogger.handleException(e);
    myLogger.error("model \"" + myOriginalInputModel.getSModelFqName() + "\" generation failed : "+ e);
    return new GenerationStatus.ERROR(myOriginalInputModel.getSModel());
  }
}
