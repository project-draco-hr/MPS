{
  List<MappingScript> postMappingScripts=ruleManager.getPostMappingScripts();
  if (!postMappingScripts.isEmpty() && !myDiscardTransients) {
    SModel currentOutputModel_clone=createTransientModel();
    if (myLogger.needsInfo()) {
      myLogger.info("clone model '" + currentOutputModel.getSModelFqName() + "' --> '"+ currentOutputModel_clone.getSModelFqName()+ "'");
    }
    CloneUtil.cloneModel(currentOutputModel,currentOutputModel_clone,false);
    mySessionContext.getGenerationTracer().registerPostMappingScripts(currentOutputModel,currentOutputModel_clone,postMappingScripts);
    currentOutputModel=currentOutputModel_clone;
  }
  for (  MappingScript postMappingScript : postMappingScripts) {
    if (postMappingScript.getScriptKind() != MappingScriptKind.post_process_output_model) {
      myLogger.warning(postMappingScript.getNode(),"skip script '" + postMappingScript + "' ("+ postMappingScript.getModel().getSModelFqName()+ ") - wrong script kind");
      continue;
    }
    if (myLogger.needsInfo()) {
      myLogger.info(postMappingScript.getNode(),"post-process '" + postMappingScript + "' ("+ postMappingScript.getModel().getLongName()+ ")");
    }
    ITemplateGenerator templateGenerator=new TemplateGenerator(mySessionContext,myProgressMonitor,myLogger,ruleManager,currentOutputModel,currentOutputModel,myIsStrict);
    QueryExecutor.executeMappingScript(postMappingScript,currentOutputModel,templateGenerator);
  }
  return currentOutputModel;
}
