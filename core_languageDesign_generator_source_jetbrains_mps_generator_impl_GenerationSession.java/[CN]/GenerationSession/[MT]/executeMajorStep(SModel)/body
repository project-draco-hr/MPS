{
  myTransientModelsCount=0;
  if (myGenerationPlan.getMappingConfigurations(myMajorStep).isEmpty()) {
    if (inputModel.getRoots().size() > 0) {
      warning("skip model \"" + inputModel.getSModelFqName() + "\" : no generator available");
    }
    return inputModel;
  }
  if (myGenerationTracer.isTracing()) {
    printGenerationStepData(inputModel);
  }
  mySessionContext=new GenerationSessionContext(myInvocationContext,myGenerationTracer,inputModel,myGenerationPlan,mySessionContext);
  myLogger.setOperationContext(mySessionContext);
  RuleManager ruleManager=new RuleManager(myGenerationPlan,myMajorStep);
  SModel outputModel=executeMajorStepInternal(inputModel,ruleManager);
  if (myLogger.getErrorCount() > 0) {
    warning("model \"" + inputModel.getSModelFqName() + "\" has been generated with errors");
  }
  myLogger.clearFailedRules();
  return outputModel;
}
