{
  myIndexMap.put(myConceptAbstractCheckingRule.getId(),0);
  myIndexMap.put(myConceptAbstractComparableStatement.getId(),1);
  myIndexMap.put(myConceptAbstractEquationStatement.getId(),2);
  myIndexMap.put(myConceptAbstractInequationStatement.getId(),3);
  myIndexMap.put(myConceptAbstractOverloadedOpsTypeRule.getId(),4);
  myIndexMap.put(myConceptAbstractRule.getId(),5);
  myIndexMap.put(myConceptAbstractSubtypingRule.getId(),6);
  myIndexMap.put(myConceptAddDependencyStatement.getId(),7);
  myIndexMap.put(myConceptApplicableNodeCondition.getId(),8);
  myIndexMap.put(myConceptApplicableNodeReference.getId(),9);
  myIndexMap.put(myConceptAssertStatement.getId(),10);
  myIndexMap.put(myConceptAttributedNodeExpression.getId(),11);
  myIndexMap.put(myConceptCaretPositionOperation.getId(),12);
  myIndexMap.put(myConceptCoerceExpression.getId(),13);
  myIndexMap.put(myConceptCoerceStatement.getId(),14);
  myIndexMap.put(myConceptCoerceStrongExpression.getId(),15);
  myIndexMap.put(myConceptComparisonRule.getId(),16);
  myIndexMap.put(myConceptConceptClauseLinkInfo.getId(),17);
  myIndexMap.put(myConceptConceptFunctionParameter_ContextNode.getId(),18);
  myIndexMap.put(myConceptConceptFunctionParameter_EditorContext.getId(),19);
  myIndexMap.put(myConceptConceptFunctionParameter_Role.getId(),20);
  myIndexMap.put(myConceptConceptFunctionParameter_Selection.getId(),21);
  myIndexMap.put(myConceptConceptFunctionParameter_isAggregation.getId(),22);
  myIndexMap.put(myConceptConceptFunctionParameter_node.getId(),23);
  myIndexMap.put(myConceptConceptFunctionParameter_var.getId(),24);
  myIndexMap.put(myConceptConceptReference.getId(),25);
  myIndexMap.put(myConceptCreateComparableEquationStatement.getId(),26);
  myIndexMap.put(myConceptCreateComparableEquationStatementStrong.getId(),27);
  myIndexMap.put(myConceptCreateEquationStatement.getId(),28);
  myIndexMap.put(myConceptCreateGreaterThanInequationStatement.getId(),29);
  myIndexMap.put(myConceptCreateLessThanInequationStatement.getId(),30);
  myIndexMap.put(myConceptCreateStrongGreaterThanInequationStatement.getId(),31);
  myIndexMap.put(myConceptCreateStrongLessThanInequationStatement.getId(),32);
  myIndexMap.put(myConceptDefaultGroupReference.getId(),33);
  myIndexMap.put(myConceptErrorInfoExpression.getId(),34);
  myIndexMap.put(myConceptGetOperationType.getId(),35);
  myIndexMap.put(myConceptIRuleWithOneNode.getId(),36);
  myIndexMap.put(myConceptIRuleWithTwoNodes.getId(),37);
  myIndexMap.put(myConceptImmediateSupertypesExpression.getId(),38);
  myIndexMap.put(myConceptInequationReference.getId(),39);
  myIndexMap.put(myConceptInequationReplacementRule.getId(),40);
  myIndexMap.put(myConceptInferenceRule.getId(),41);
  myIndexMap.put(myConceptInfoStatement.getId(),42);
  myIndexMap.put(myConceptInfoStatementAnnotation.getId(),43);
  myIndexMap.put(myConceptIsApplicableConceptFunction.getId(),44);
  myIndexMap.put(myConceptIsReplacementRuleApplicable_ConceptFunction.getId(),45);
  myIndexMap.put(myConceptIsStrongSubtypeExpression.getId(),46);
  myIndexMap.put(myConceptIsSubtypeExpression.getId(),47);
  myIndexMap.put(myConceptJoinContainer.getId(),48);
  myIndexMap.put(myConceptJoinType.getId(),49);
  myIndexMap.put(myConceptLeftOperandType_parameter.getId(),50);
  myIndexMap.put(myConceptLinkPatternVariableReference.getId(),51);
  myIndexMap.put(myConceptMatchStatement.getId(),52);
  myIndexMap.put(myConceptMatchStatementItem.getId(),53);
  myIndexMap.put(myConceptMeetContainer.getId(),54);
  myIndexMap.put(myConceptMeetType.getId(),55);
  myIndexMap.put(myConceptMessageStatement.getId(),56);
  myIndexMap.put(myConceptMessageStatementAnnotation.getId(),57);
  myIndexMap.put(myConceptMessageTarget.getId(),58);
  myIndexMap.put(myConceptMultipleForeachLoop.getId(),59);
  myIndexMap.put(myConceptMultipleForeachLoopVariable.getId(),60);
  myIndexMap.put(myConceptNodeInfo.getId(),61);
  myIndexMap.put(myConceptNode_InferTypeOperation.getId(),62);
  myIndexMap.put(myConceptNode_TypeOperation.getId(),63);
  myIndexMap.put(myConceptNonTypesystemRule.getId(),64);
  myIndexMap.put(myConceptNormalTypeClause.getId(),65);
  myIndexMap.put(myConceptOperation_parameter.getId(),66);
  myIndexMap.put(myConceptOrStatement.getId(),67);
  myIndexMap.put(myConceptOriginalNodeId.getId(),68);
  myIndexMap.put(myConceptOverloadedOpIsApplicableFunction.getId(),69);
  myIndexMap.put(myConceptOverloadedOpRulesContainer.getId(),70);
  myIndexMap.put(myConceptOverloadedOpTypeRule_OneTypeSpecified.getId(),71);
  myIndexMap.put(myConceptOverloadedOperatorTypeFunction.getId(),72);
  myIndexMap.put(myConceptOverloadedOperatorTypeRule.getId(),73);
  myIndexMap.put(myConceptOverridesConceptFunction.getId(),74);
  myIndexMap.put(myConceptPatternCondition.getId(),75);
  myIndexMap.put(myConceptPatternVariableReference.getId(),76);
  myIndexMap.put(myConceptPrintToTrace.getId(),77);
  myIndexMap.put(myConceptProcessed.getId(),78);
  myIndexMap.put(myConceptPropertyMessageTarget.getId(),79);
  myIndexMap.put(myConceptPropertyNameTarget.getId(),80);
  myIndexMap.put(myConceptPropertyPatternVariableReference.getId(),81);
  myIndexMap.put(myConceptQuickFixArgument.getId(),82);
  myIndexMap.put(myConceptQuickFixArgumentReference.getId(),83);
  myIndexMap.put(myConceptQuickFixDescriptionBlock.getId(),84);
  myIndexMap.put(myConceptQuickFixExecuteBlock.getId(),85);
  myIndexMap.put(myConceptQuickFixField.getId(),86);
  myIndexMap.put(myConceptQuickFixFieldReference.getId(),87);
  myIndexMap.put(myConceptQuickFixSetSelectionBlock.getId(),88);
  myIndexMap.put(myConceptReferenceMessageTarget.getId(),89);
  myIndexMap.put(myConceptReferenceRoleTarget.getId(),90);
  myIndexMap.put(myConceptReplacementRuleReference.getId(),91);
  myIndexMap.put(myConceptReportErrorStatement.getId(),92);
  myIndexMap.put(myConceptReportErrorStatementAnnotation.getId(),93);
  myIndexMap.put(myConceptRightOperandType_parameter.getId(),94);
  myIndexMap.put(myConceptRuntimeErrorType.getId(),95);
  myIndexMap.put(myConceptRuntimeHoleType.getId(),96);
  myIndexMap.put(myConceptRuntimeListVariable.getId(),97);
  myIndexMap.put(myConceptRuntimeTypeVariable.getId(),98);
  myIndexMap.put(myConceptSelectionType.getId(),99);
  myIndexMap.put(myConceptSubstituteTypeRule.getId(),100);
  myIndexMap.put(myConceptSubtypingRule.getId(),101);
  myIndexMap.put(myConceptSupersedeConceptFunction.getId(),102);
  myIndexMap.put(myConceptTypeCheckerAccessExpression.getId(),103);
  myIndexMap.put(myConceptTypeClause.getId(),104);
  myIndexMap.put(myConceptTypeOfExpression.getId(),105);
  myIndexMap.put(myConceptTypeVarDeclaration.getId(),106);
  myIndexMap.put(myConceptTypeVarReference.getId(),107);
  myIndexMap.put(myConceptTypesystemIntention.getId(),108);
  myIndexMap.put(myConceptTypesystemIntentionArgument.getId(),109);
  myIndexMap.put(myConceptTypesystemQuickFix.getId(),110);
  myIndexMap.put(myConceptVariableConverterItem.getId(),111);
  myIndexMap.put(myConceptVariableConverterItem_ApplicableBlock.getId(),112);
  myIndexMap.put(myConceptVariableConverterItem_ConvertBlock.getId(),113);
  myIndexMap.put(myConceptVariableConvertersContainer.getId(),114);
  myIndexMap.put(myConceptWarningStatement.getId(),115);
  myIndexMap.put(myConceptWarningStatementAnnotation.getId(),116);
  myIndexMap.put(myConceptWasSelectedNodeOperation.getId(),117);
  myIndexMap.put(myConceptWhenConcreteStatement.getId(),118);
  myIndexMap.put(myConceptWhenConcreteVariableDeclaration.getId(),119);
  myIndexMap.put(myConceptWhenConcreteVariableReference.getId(),120);
}
