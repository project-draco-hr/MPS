{
  if (file.isReadOnly()) {
    if (log.isErrorEnabled()) {
      log.error("Cant't save " + file.getPath());
    }
    return;
  }
  final Macros macros=Macros.languageDescriptor();
  Element languageElement=new _FunctionTypes._return_P0_E0<Element>(){
    public Element invoke(){
      Element result_5080_12=new Element("language");
      String result_5080_13=descriptor.getNamespace();
      result_5080_12.setAttribute("namespace","" + result_5080_13);
      if (descriptor.getUUID() != null) {
        String result_5080_14=descriptor.getUUID();
        result_5080_12.setAttribute("uuid","" + result_5080_14);
      }
      if (descriptor.getGenPath() != null) {
        String result_5080_15=macros.shrinkPath(descriptor.getGenPath(),file);
        result_5080_12.setAttribute("generatorOutputPath","" + result_5080_15);
      }
      boolean result_5080_16=descriptor.getEnableJavaStubs();
      result_5080_12.setAttribute("java-stubs-enabled","" + result_5080_16);
      Element result_5080_17=new Element("models");
      ModuleDescriptorPersistence.saveModelRoots(result_5080_17,descriptor.getModelRoots(),file,macros);
      result_5080_12.addContent(result_5080_17);
      Element result_5080_18=new Element("accessoryModels");
      for (      SModelReference model : ListSequence.fromList(descriptor.getAccessoryModels())) {
        Element result_5080_19=new Element("model");
        String result_5080_20=model.toString();
        result_5080_19.setAttribute("modelUID","" + result_5080_20);
        result_5080_18.addContent(result_5080_19);
      }
      result_5080_12.addContent(result_5080_18);
      Element result_5080_21=new Element("generators");
      for (      GeneratorDescriptor generatorDescriptor : ListSequence.fromList(descriptor.getGenerators())) {
        GeneratorDescriptorPersistence.saveGeneratorDescriptor(result_5080_21,generatorDescriptor,file,macros);
      }
      result_5080_12.addContent(result_5080_21);
      Element result_5080_22=new Element("classPath");
      for (      ClassPathEntry entry : ListSequence.fromList(descriptor.getClassPaths())) {
        Element result_5080_23=new Element("entry");
        String result_5080_24=macros.shrinkPath(entry.getPath(),file);
        result_5080_23.setAttribute("path","" + result_5080_24);
        boolean result_5080_25=entry.isIncludedInVCS();
        result_5080_23.setAttribute("include","" + result_5080_25);
        result_5080_22.addContent(result_5080_23);
      }
      result_5080_12.addContent(result_5080_22);
      if (!(descriptor.getStubModelEntries().isEmpty())) {
        Element result_5080_26=new Element("stubModelEntries");
        ModuleDescriptorPersistence.saveStubModelEntries(result_5080_26,descriptor.getStubModelEntries(),file,macros);
        result_5080_12.addContent(result_5080_26);
      }
      Element result_5080_27=new Element("languageRuntimeClassPath");
      for (      ClassPathEntry entry : ListSequence.fromList(descriptor.getRuntimeClassPaths())) {
        Element result_5080_28=new Element("entry");
        String result_5080_29=macros.shrinkPath(entry.getPath(),file);
        result_5080_28.setAttribute("path","" + result_5080_29);
        result_5080_27.addContent(result_5080_28);
      }
      result_5080_12.addContent(result_5080_27);
      Element result_5080_30=new Element("sourcePath");
      for (      String p : ListSequence.fromList(descriptor.getSourcePaths())) {
        Element result_5080_31=new Element("source");
        String result_5080_32=macros.shrinkPath(p,file);
        result_5080_31.setAttribute("path","" + result_5080_32);
        result_5080_30.addContent(result_5080_31);
      }
      result_5080_12.addContent(result_5080_30);
      boolean result_5080_33=descriptor.getCompileInMPS();
      result_5080_12.setAttribute("compileInMPS","" + result_5080_33);
      ModuleDescriptorPersistence.saveDependencies(result_5080_12,descriptor);
      Element result_5080_34=new Element("extendedLanguages");
      for (      ModuleReference ref : ListSequence.fromList(descriptor.getExtendedLanguages())) {
        Element result_5080_35=new Element("extendedLanguage");
        String result_5080_36=ref.toString();
        result_5080_35.setText(result_5080_36);
        result_5080_34.addContent(result_5080_35);
      }
      result_5080_12.addContent(result_5080_34);
      return result_5080_12;
    }
  }
.invoke();
  try {
    OutputStream os=file.openOutputStream();
    JDOMUtil.writeDocument(new Document(languageElement),os);
  }
 catch (  Exception e) {
    if (log.isErrorEnabled()) {
      log.error("",e);
    }
  }
  ModuleDescriptorPersistence.setTimestamp(descriptor,file,true);
}
