{
  final Macros macros=MacrosFactory.languageDescriptor();
  LanguageDescriptor descriptor;
  try {
    Document document=JDOMUtil.loadDocument(file);
    final Element languageElement=((Element)document.getRootElement());
    descriptor=new _FunctionTypes._return_P0_E0<LanguageDescriptor>(){
      public LanguageDescriptor invoke(){
        final LanguageDescriptor result_v3r4p8_a0a0d0d0a=new LanguageDescriptor();
        final String result_v3r4p8_a0a0a0d0d0a=languageElement.getAttributeValue("namespace");
        result_v3r4p8_a0a0d0d0a.setNamespace(result_v3r4p8_a0a0a0d0d0a);
        if (languageElement.getAttributeValue("uuid") != null) {
          final String result_v3r4p8_a0a1a0a0d0d0a=languageElement.getAttributeValue("uuid");
          result_v3r4p8_a0a0d0d0a.setUUID(result_v3r4p8_a0a1a0a0d0d0a);
        }
        if (languageElement.getAttributeValue("generatorOutputPath") != null) {
          final String result_v3r4p8_a0a3a0a0d0d0a=macros.expandPath(languageElement.getAttributeValue("generatorOutputPath"),file);
          result_v3r4p8_a0a0d0d0a.setGenPath(result_v3r4p8_a0a3a0a0d0d0a);
        }
        if (ListSequence.fromList(AttributeUtils.elementChildren(languageElement,"models")).isNotEmpty()) {
          result_v3r4p8_a0a0d0d0a.getModelRoots().addAll(ModuleDescriptorPersistence.loadModelRoots(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(languageElement,"models")).first(),"modelRoot"),file,macros));
        }
 else {
          result_v3r4p8_a0a0d0d0a.getModelRoots().addAll(ModuleDescriptorPersistence.loadModelRoots(AttributeUtils.elementChildren(languageElement,"modelRoot"),file,macros));
        }
        ModuleDescriptorPersistence.loadDependencies(result_v3r4p8_a0a0d0d0a,languageElement);
        for (        Element extendedLanguage : ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(languageElement,"extendedLanguages")).first(),"extendedLanguage"))) {
          result_v3r4p8_a0a0d0d0a.getExtendedLanguages().add(ModuleReference.fromString(extendedLanguage.getText()));
        }
        Element autoImports=ListSequence.fromList(AttributeUtils.elementChildren(languageElement,"accessoryModels")).first();
        if (autoImports == null) {
          autoImports=ListSequence.fromList(AttributeUtils.elementChildren(languageElement,"library")).first();
        }
        for (        Element modelElement : ListSequence.fromList(AttributeUtils.elementChildren(autoImports,"model"))) {
          result_v3r4p8_a0a0d0d0a.getAccessoryModels().add(SModelReference.fromString(modelElement.getAttributeValue("modelUID")));
        }
        for (        Element generatorElement : ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(languageElement,"generators")).first(),"generator"))) {
          result_v3r4p8_a0a0d0d0a.getGenerators().add(GeneratorDescriptorPersistence.loadGeneratorDescriptor(generatorElement,file,macros));
        }
        for (        Element entryElement : ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(languageElement,"classPath")).first(),"entry")).concat(ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(languageElement,"runtimeClassPath")).first(),"entry")))) {
          ModelRoot entry=new ModelRoot();
          entry.setPath(macros.expandPath(entryElement.getAttributeValue("path"),file));
          entry.setManager(LanguageID.JAVA_MANAGER);
          result_v3r4p8_a0a0d0d0a.getStubModelEntries().add(entry);
        }
        if (ListSequence.fromList(AttributeUtils.elementChildren(languageElement,"stubModelEntries")).isNotEmpty()) {
          result_v3r4p8_a0a0d0d0a.getModelRoots().addAll(ModuleDescriptorPersistence.loadStubModelEntries(AttributeUtils.elementChildren(languageElement,"stubModelEntries"),file,macros));
          result_v3r4p8_a0a0d0d0a.getStubModelEntries().addAll(ModuleDescriptorPersistence.loadStubModelEntries(AttributeUtils.elementChildren(languageElement,"stubModelEntries"),file,macros));
        }
        for (        Element entryElement : ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(languageElement,"languageRuntimeClassPath")).first(),"entry"))) {
          ModelRoot entry=new ModelRoot();
          entry.setPath(macros.expandPath(entryElement.getAttributeValue("path"),file));
          entry.setManager(LanguageID.JAVA_MANAGER);
          result_v3r4p8_a0a0d0d0a.getRuntimeStubModels().add(entry);
        }
        if (ListSequence.fromList(AttributeUtils.elementChildren(languageElement,"runtimeStubModels")).isNotEmpty()) {
          for (          Element entryElement : ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(languageElement,"runtimeStubModels")).first(),"stubModelEntry"))) {
            final ModelRoot result_v3r4p8_a0a0a32a0a0d0d0a=new ModelRoot();
            final String result_v3r4p8_a0a0a0a32a0a0d0d0a=macros.expandPath(entryElement.getAttributeValue("path"),file);
            result_v3r4p8_a0a0a32a0a0d0d0a.setPath(result_v3r4p8_a0a0a0a32a0a0d0d0a);
            final ModelRootManager result_v3r4p8_a1a0a0a32a0a0d0d0a=new ModelRootManager();
            final String result_v3r4p8_a0a1a0a0a32a0a0d0d0a=AttributeUtils.stringWithDefault(ListSequence.fromList(AttributeUtils.elementChildren(entryElement,"manager")).first().getAttributeValue("moduleId"),"");
            result_v3r4p8_a1a0a0a32a0a0d0d0a.setModuleId(result_v3r4p8_a0a1a0a0a32a0a0d0d0a);
            final String result_v3r4p8_a1a1a0a0a32a0a0d0d0a=AttributeUtils.stringWithDefault(ListSequence.fromList(AttributeUtils.elementChildren(entryElement,"manager")).first().getAttributeValue("className"),"");
            result_v3r4p8_a1a0a0a32a0a0d0d0a.setClassName(result_v3r4p8_a1a1a0a0a32a0a0d0d0a);
            result_v3r4p8_a0a0a32a0a0d0d0a.setManager(result_v3r4p8_a1a0a0a32a0a0d0d0a);
            result_v3r4p8_a0a0d0d0a.getRuntimeStubModels().add(result_v3r4p8_a0a0a32a0a0d0d0a);
          }
        }
        if (ListSequence.fromList(AttributeUtils.elementChildren(languageElement,"stubSolutions")).isNotEmpty()) {
          for (          Element solutionElement : ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(languageElement,"stubSolutions")).first(),"stubSolution"))) {
            final StubSolution result_v3r4p8_a0a0a52a0a0d0d0a=new StubSolution();
            final String result_v3r4p8_a0a0a0a52a0a0d0d0a=AttributeUtils.stringWithDefault(solutionElement.getAttributeValue("moduleName"),"");
            result_v3r4p8_a0a0a52a0a0d0d0a.setName(result_v3r4p8_a0a0a0a52a0a0d0d0a);
            final ModuleId result_v3r4p8_a1a0a0a52a0a0d0d0a=ModuleId.fromString(AttributeUtils.stringWithDefault(solutionElement.getAttributeValue("moduleId"),""));
            result_v3r4p8_a0a0a52a0a0d0d0a.setId(result_v3r4p8_a1a0a0a52a0a0d0d0a);
            result_v3r4p8_a0a0d0d0a.getStubSolutions().add(result_v3r4p8_a0a0a52a0a0d0d0a);
          }
        }
        for (        Element entryElement : ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(languageElement,"sourcePath")).first(),"source"))) {
          result_v3r4p8_a0a0d0d0a.getSourcePaths().add(macros.expandPath(entryElement.getAttributeValue("path"),file));
        }
        final boolean result_v3r4p8_a92a0a0d0d0a=AttributeUtils.booleanWithDefault(languageElement.getAttributeValue("compileInMPS"),false);
        result_v3r4p8_a0a0d0d0a.setCompileInMPS(result_v3r4p8_a92a0a0d0d0a);
        final boolean result_v3r4p8_a03a0a0d0d0a=AttributeUtils.booleanWithDefault(languageElement.getAttributeValue("doNotGenerateAdapters"),false);
        result_v3r4p8_a0a0d0d0a.setDoNotGenerateAdapters(result_v3r4p8_a03a0a0d0d0a);
        return result_v3r4p8_a0a0d0d0a;
      }
    }
.invoke();
  }
 catch (  Exception e) {
    throw new ModuleReadException(e);
  }
  ModuleDescriptorPersistence.setTimestamp(descriptor,file);
  return descriptor;
}
