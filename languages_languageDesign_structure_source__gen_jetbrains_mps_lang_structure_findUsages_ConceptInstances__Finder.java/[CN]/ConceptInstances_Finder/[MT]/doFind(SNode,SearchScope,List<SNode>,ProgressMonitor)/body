{
  try {
    SAbstractConcept concept=SNodeOperations.asSConcept(node);
    if (concept == null) {
      StringBuilder sb=new StringBuilder();
      sb.append("Concept is not found for concept declaration ");
      sb.append(NameUtil.nodeFQName(node));
      sb.append(" finder will return empty results. ");
      SModule module=check_mbibnv_a0g0b0a(check_mbibnv_a0a6a1a0(node));
      if (module != null) {
        LanguageRuntime runtime=LanguageRegistry.getInstance().getLanguage(((Language)module));
        if (runtime != null) {
          sb.append("Language runtime class is " + runtime.getClass().getName());
        }
      }
      if (LOG_1127887887.isEnabledFor(Level.ERROR)) {
        LOG_1127887887.error(sb.toString());
      }
      return;
    }
    List<SNode> resNodes=ListSequence.fromListWithValues(new ArrayList<SNode>(),FindUsagesFacade.getInstance().findInstances(scope,Collections.singleton(concept),false,monitor));
    for (    SNode resNode : resNodes) {
      ListSequence.fromList(_results).addElement(((SNode)resNode));
    }
  }
  finally {
    monitor.done();
  }
}
