{
  Project project=myOperationContext.getProject();
  FileEditorManagerImpl manager=(FileEditorManagerImpl)FileEditorManager.getInstance(project);
  VirtualFile virtualFile=manager.getCurrentFile();
  if (virtualFile == null)   return;
  for (  FileEditor openedEditor : manager.getAllEditors()) {
    if (!(openedEditor instanceof MPSFileNodeEditor))     continue;
    MPSFileNodeEditor openedMPSEditor=(MPSFileNodeEditor)openedEditor;
    if (ObjectUtils.equals(this,openedMPSEditor.getNodeEditor()))     continue;
    IEditor mpsNodeEditor=openedMPSEditor.getNodeEditor();
    List<SNode> openedNodes=mpsNodeEditor.getEditedNodes();
    if (mpsNodeEditor instanceof TabbedEditor || !getEditedNodes().contains(openedNodes.get(0)))     continue;
    boolean needToSelect=virtualFile == openedMPSEditor.getFile();
    manager.closeFile(openedMPSEditor.getFile());
    if (needToSelect) {
      SNode node=myNodePointer.getNode();
      new MPSEditorOpener(project).editNode(node,myOperationContext);
      selectLinkedEditor(mpsNodeEditor.getEditedNode());
    }
  }
  FileStatusManager.getInstance(project).fileStatusChanged(virtualFile);
  manager.updateFilePresentation(virtualFile);
}
