{
  return new ProviderGeneratedSearchScope(this,operationContext,_context){
    public boolean isInScope(    SNode checkedNode){
      SNode call=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.bash.structure.ExternalCommandCall",false,false);
      Iterable<SNode> optionSetReferences=ListSequence.fromList(SLinkOperations.getTargets(call,"refToOptions",true)).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SNodeOperations.isInstanceOf(it,"jetbrains.mps.bash.structure.OptionSetReference");
        }
      }
);
      return Sequence.fromIterable(optionSetReferences).<Iterable<SNode>>select(new ISelector<SNode,ISequence<SNode>>(){
        public ISequence<SNode> select(        SNode it){
          return ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(it,"jetbrains.mps.bash.structure.OptionSetReference"),"refToOptions",true)).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return (SLinkOperations.getTarget(it,"option",false) != null);
            }
          }
).<SNode>select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SLinkOperations.getTarget(it,"option",false);
            }
          }
);
        }
      }
).distinct().count() == Sequence.fromIterable(optionSetReferences).count();
    }
  }
;
}
