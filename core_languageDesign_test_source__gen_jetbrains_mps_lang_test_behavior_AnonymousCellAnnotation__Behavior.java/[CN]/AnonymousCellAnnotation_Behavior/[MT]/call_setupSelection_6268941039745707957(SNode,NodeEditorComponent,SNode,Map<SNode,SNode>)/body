{
  final Wrappers._T<EditorComponent> editorComponent=new Wrappers._T<EditorComponent>(nodeEditorComponent);
  final Wrappers._T<EditorCell> cellWithId=new Wrappers._T<EditorCell>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      if (SPropertyOperations.getBoolean(thisNode,"isInInspector")) {
        nodeEditorComponent.selectNode(node);
        editorComponent.value=nodeEditorComponent.getInspector();
      }
      cellWithId.value=editorComponent.value.findCellWithId(node,SPropertyOperations.getString(thisNode,"cellId"));
      if (cellWithId.value == null) {
        throw new RuntimeException("No cell " + thisNode);
      }
      AnonymousCellAnnotation_Behavior.call_setupCaretAndSelection_9114978211826243747(thisNode,cellWithId.value);
    }
  }
);
  editorComponent.value.changeSelection(cellWithId.value);
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      if (SLinkOperations.getTarget(thisNode,"nodeRangeSelectionStart",false) != null) {
        SNode selectionStart=MapSequence.fromMap(map).get(SLinkOperations.getTarget(thisNode,"nodeRangeSelectionStart",false));
        SNode selectionEnd=MapSequence.fromMap(map).get(SLinkOperations.getTarget(thisNode,"nodeRangeSelectionEnd",false));
        editorComponent.value.getNodeRangeSelection().setRange(selectionStart,selectionEnd);
      }
    }
  }
);
}
