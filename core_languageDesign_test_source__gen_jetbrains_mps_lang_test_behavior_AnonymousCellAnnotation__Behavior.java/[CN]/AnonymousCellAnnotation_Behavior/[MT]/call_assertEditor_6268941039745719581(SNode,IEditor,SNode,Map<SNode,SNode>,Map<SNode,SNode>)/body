{
  EditorComponent component=editor.getCurrentEditorComponent();
  if (SPropertyOperations.getBoolean(thisNode,"isInInspector")) {
    component=((NodeEditorComponent)component).getInspector();
  }
  Assert.assertSame(node,MapSequence.fromMap(map).get(component.getSelectedCell().getSNode()));
  EditorCell selectedCell=component.getSelectedCell();
  Assert.assertEquals(selectedCell.getCellId(),SPropertyOperations.getString(thisNode,"cellId"));
  if (selectedCell instanceof EditorCell_Label) {
    EditorCell_Label label=(EditorCell_Label)selectedCell;
    Assert.assertEquals(SPropertyOperations.getInteger(thisNode,"selectionStart"),label.getSelectionStart());
    Assert.assertEquals(SPropertyOperations.getInteger(thisNode,"selectionEnd"),label.getSelectionEnd());
  }
  if (SLinkOperations.getTarget(thisNode,"nodeRangeSelectionStart",false) != null) {
    NodeRangeSelection rangeSelection=component.getNodeRangeSelection();
    Assert.assertEquals(MapSequence.fromMap(nodeToCopy).get(SLinkOperations.getTarget(thisNode,"nodeRangeSelectionStart",false)),MapSequence.fromMap(map).get(rangeSelection.getFirstNode()));
    Assert.assertEquals(MapSequence.fromMap(nodeToCopy).get(SLinkOperations.getTarget(thisNode,"nodeRangeSelectionEnd",false)),MapSequence.fromMap(map).get(rangeSelection.getLastNode()));
  }
}
