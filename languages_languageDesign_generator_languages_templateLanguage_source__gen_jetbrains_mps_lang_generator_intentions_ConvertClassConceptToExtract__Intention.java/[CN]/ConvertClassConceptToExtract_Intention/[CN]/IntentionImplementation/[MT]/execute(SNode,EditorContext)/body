{
  SNode newNode=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xdf345b11b8c74213L,0xac6648d2a9b75d88L,0xd01bb6e8b1cd97aL,"jetbrains.mps.baseLanguageInternal.structure.ExtractStaticInnerClassConcept")),null);
  for (  SNode child : jetbrains.mps.util.SNodeOperations.getChildren(newNode)) {
    newNode.removeChild(child);
  }
  HashMap<SNode,SNode> mapping=new HashMap<SNode,SNode>();
  mapping.put(node,newNode);
  List<SNode> children=jetbrains.mps.util.SNodeOperations.getChildren(node);
  CopyUtil.copy(children,mapping);
  for (  SNode child : children) {
    newNode.addChild(child.getRoleInParent(),mapping.get(child));
  }
  for (  SReference reference : node.getReferences()) {
    SNodeAccessUtil.setReferenceTarget(newNode,reference.getRole(),reference.getTargetNode());
  }
  for (  String propertyName : jetbrains.mps.util.SNodeOperations.getProperties(node).keySet()) {
    SNodeAccessUtil.setProperty(newNode,propertyName,SNodeAccessUtil.getProperty(node,propertyName));
  }
  SNodeOperations.replaceWithAnother(node,newNode);
}
