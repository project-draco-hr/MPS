{
  SNode newNode=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguageInternal.structure.ExtractStaticInnerClassConcept",null);
  for (  SNode child : jetbrains.mps.util.SNodeOperations.getChildren(newNode)) {
    newNode.removeChild(child);
  }
  HashMap<SNode,SNode> mapping=new HashMap<SNode,SNode>();
  mapping.put(node,newNode);
  List<SNode> children=jetbrains.mps.util.SNodeOperations.getChildren(node);
  CopyUtil.copy(children,mapping);
  for (  SNode child : children) {
    newNode.addChild(child.getRole(),mapping.get(child));
  }
  for (  SReference reference : node.getReferences()) {
    newNode.setReferenceTarget(reference.getRole(),reference.getTargetNode());
  }
  for (  String propertyName : jetbrains.mps.util.SNodeOperations.getProperties(node).keySet()) {
    newNode.setProperty(propertyName,node.getProperty(propertyName));
  }
  SNodeOperations.replaceWithAnother(node,newNode);
}
