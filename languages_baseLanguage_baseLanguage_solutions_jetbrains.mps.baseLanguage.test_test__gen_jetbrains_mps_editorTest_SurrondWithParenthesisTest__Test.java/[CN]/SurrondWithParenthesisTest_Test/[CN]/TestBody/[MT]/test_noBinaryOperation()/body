{
  this.addNodeById("3852894662483077200");
  this.addNodeById("3852894662483077206");
  this.addNodeById("3852894662483228699");
  this.addNodeById("3852894662483230132");
  ParenthesisUtil.createParenthesisNewLeft(SNodeOperations.cast(this.getNodeById("2329139814027568804"),"jetbrains.mps.baseLanguage.structure.IntegerConstant"));
  ParenthesisUtil.createParenthesisNewRight(SNodeOperations.cast(this.getNodeById("2329139814027568804"),"jetbrains.mps.baseLanguage.structure.IntegerConstant"));
{
    List<SNode> nodesBefore=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("2329139814027569571"),"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration"));
    List<SNode> nodesAfter=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("2329139814027568774"),"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration"));
    Assert.assertNull("nodes '" + nodesBefore + "' and '"+ nodesAfter+ "' do not match!",NodesMatcher.matchNodes(nodesBefore,nodesAfter));
  }
}
