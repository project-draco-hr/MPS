{
  final SNode target=SNodeOperations.cast(ListSequence.fromList(nodes).first(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbbebabf0aL,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration"));
  MoveStaticMethodExecutable executable=new MoveStaticMethodExecutable();
  final SNode whereToMove=executable.askDestination(project,target);
  if (whereToMove == null) {
    return;
  }
  project.getRepository().getModelAccess().executeCommand(new Runnable(){
    public void run(){
      if (!(SNodeUtil.isAccessible(target,project.getRepository()))) {
        return;
      }
      if (!(SNodeUtil.isAccessible(whereToMove,project.getRepository()))) {
        return;
      }
      MoveStaticMethodRefactoring refactoring=new MoveStaticMethodRefactoring(project.getRepository(),project.getScope(),target,whereToMove);
      refactoring.doRefactoring();
    }
  }
);
}
