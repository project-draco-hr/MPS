{
  SModel model=SModelRepository.getInstance().getModelDescriptor(SPropertyOperations.getString(SLinkOperations.getTarget(thisNode,"target",true),"fqName"));
  int references=0;
  int properties=0;
  for (  SNode node : SNodeUtil.getDescendants(model)) {
    references+=IterableUtil.asCollection(node.getReferences()).size();
    properties+=SNodeOperations.getProperties(node).keySet().size();
  }
  List<Tuples._2<String,Integer>> result=ListSequence.fromList(new ArrayList<Tuples._2<String,Integer>>());
  ListSequence.fromList(result).addElement(MultiTuple.<String,Integer>from("Roots",IterableUtil.asCollection(model.getRootNodes()).size()));
  ListSequence.fromList(result).addElement(MultiTuple.<String,Integer>from("Nodes",SNodeOperations.nodesCount(model)));
  ListSequence.fromList(result).addElement(MultiTuple.<String,Integer>from("References",references));
  ListSequence.fromList(result).addElement(MultiTuple.<String,Integer>from("Properties",properties));
  return result;
}
