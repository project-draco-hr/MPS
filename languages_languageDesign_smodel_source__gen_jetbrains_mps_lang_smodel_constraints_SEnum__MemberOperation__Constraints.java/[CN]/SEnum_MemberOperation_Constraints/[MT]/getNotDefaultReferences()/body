{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("member",new BaseReferenceConstraintsDescriptor("member",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          SNode enumNode=SLinkOperations.getTarget(SNodeOperations.cast(_context.getEnclosingNode(),"jetbrains.mps.lang.smodel.structure.SEnumOperationInvocation"),"enumDeclaration",false);
          if (enumNode != null) {
            return SLinkOperations.getTargets(enumNode,"member",true);
          }
          return new ArrayList<SNode>();
        }
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_h040h8_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
