{
  Set<String> roles=new HashSet<String>(expectedNode.getChildRoles());
  roles.addAll(actualNode.getChildRoles());
  for (  String role : roles) {
    List<SNode> expectedChildren=expectedNode.getChildren(role);
    List<SNode> actualChildren=actualNode.getChildren(role);
    assertEquals(getErrorString("child count for role " + role,expectedNode,actualNode),expectedChildren.size(),actualChildren.size());
    for (    SNode expectedChild : expectedChildren) {
      boolean wasFound=false;
      for (      SNode actualChild : actualChildren) {
        if (actualChild.getSNodeId().equals(expectedChild.getSNodeId())) {
          wasFound=true;
          assertDeepNodeEquals(expectedChild,actualChild);
          break;
        }
      }
      if (!wasFound) {
        fail(getErrorString("children",expectedNode,actualNode) + " Expected  child " + expectedChild+ " was not found."+ "Expected children are "+ expectedChildren+ "\n"+ "Actual children are "+ actualChildren+ "\n");
      }
    }
  }
}
