{
  ITypeContextOwner owner=new DefaultTypecheckingContextOwner();
  SNode root=SNodeOperations.getContainingRoot(node);
  TypeContextManager.getInstance().runTypeCheckingAction(owner,root,new ITypechecking.Action(){
    public void run(    TypeCheckingContext p0){
      SNode nodeToCheck=SNodeOperations.getParent(SNodeOperations.getParent(node));
      p0.checkIfNotChecked(nodeToCheck,true);
      IErrorReporter reporter=p0.getTypeMessageDontCheck(nodeToCheck);
      SNodePointer ref=new SNodePointer(reporter.getRuleModel(),reporter.getRuleId());
      SNode msgStatementAnnotation=AttributeOperations.getAttribute(SNodeOperations.cast(ref.resolve(MPSModuleRepository.getInstance()),"jetbrains.mps.lang.typesystem.structure.ReportErrorStatement"),new IAttributeDescriptor.NodeAttribute("jetbrains.mps.lang.typesystem.structure.MessageStatementAnnotation"));
      SLinkOperations.setTarget(node,"ruleRef",SConceptOperations.createNewNode("jetbrains.mps.lang.typesystem.structure.MessageStatementReference",null),true);
      SLinkOperations.setTarget(SLinkOperations.getTarget(node,"ruleRef",true),"declaration",msgStatementAnnotation,false);
      ((SModelBase)SNodeOperations.getModel(node)).addModelImport(SNodeOperations.getModel(msgStatementAnnotation).getReference(),false);
      MissingDependenciesFixer.fixDependencies(SNodeOperations.getModel(node),true);
    }
  }
);
}
