{
  if ("jetbrains.mps.xmlQuery.structure.AccessChildrenOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AccessChildrenOperation_Constraints());
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLElementType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new XMLElementType_Constraints());
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLElementOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new XMLElementOperation_Constraints());
  }
  if ("jetbrains.mps.xmlQuery.structure.AccessAttributeOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AccessAttributeOperation_Constraints());
  }
  if ("jetbrains.mps.xmlQuery.structure.AccessArbitraryChildrenOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlQuery.structure.AccessArbitraryChildrenOperation"));
  }
  if ("jetbrains.mps.xmlQuery.structure.AccessArbitraryAttributeOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlQuery.structure.AccessArbitraryAttributeOperation"));
  }
  if ("jetbrains.mps.xmlQuery.structure.AccessTextOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlQuery.structure.AccessTextOperation"));
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLElementCreator".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlQuery.structure.XMLElementCreator"));
  }
  if ("jetbrains.mps.xmlQuery.structure.AttributeBuilder".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AttributeBuilder_Constraints());
  }
  if ("jetbrains.mps.xmlQuery.structure.TextBuilder".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new TextBuilder_Constraints());
  }
  if ("jetbrains.mps.xmlQuery.structure.ElementBuilder".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ElementBuilder_Constraints());
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLSAXParser".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlQuery.structure.XMLSAXParser"));
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLSAXNodeRule".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlQuery.structure.XMLSAXNodeRule"));
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLSAXAttributeRule".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlQuery.structure.XMLSAXAttributeRule"));
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLSAXAttributeHandler".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlQuery.structure.XMLSAXAttributeHandler"));
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLSAXAttributeHandler_value".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlQuery.structure.XMLSAXAttributeHandler_value"));
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLSAXTextRule".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlQuery.structure.XMLSAXTextRule"));
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLSAXTextHandler".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlQuery.structure.XMLSAXTextHandler"));
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLSAXTextHandler_value".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlQuery.structure.XMLSAXTextHandler_value"));
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLSAXHandlerFunction".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlQuery.structure.XMLSAXHandlerFunction"));
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLSAXHandler_resultObject".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlQuery.structure.XMLSAXHandler_resultObject"));
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLSAXChildRule".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new XMLSAXChildRule_Constraints());
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLSAXChildHandler".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlQuery.structure.XMLSAXChildHandler"));
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLSAXChildHandler_childObject".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlQuery.structure.XMLSAXChildHandler_childObject"));
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLSAXNodeCreator".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlQuery.structure.XMLSAXNodeCreator"));
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLSAXNodeValidator".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlQuery.structure.XMLSAXNodeValidator"));
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLSAXAttributeReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new XMLSAXAttributeReference_Constraints());
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLSAXFieldDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.xmlQuery.structure.XMLSAXFieldDeclaration"));
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLSAXFieldReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new XMLSAXFieldReference_Constraints());
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLSAXLocatorExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new XMLSAXLocatorExpression_Constraints());
  }
  if ("jetbrains.mps.xmlQuery.structure.XMLSAXBreakStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new XMLSAXBreakStatement_Constraints());
  }
  return null;
}
