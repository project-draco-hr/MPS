{
  FindUsagesManager manager=FindUsagesManager.getInstance();
  SConcept concept=SConceptRepository.getInstance().getConcept("jetbrains.mps.lang.traceable.structure.UnitConcept");
  Set<SNode> instances=manager.findUsages(Collections.singleton(concept),SearchType.INSTANCES,myScope,new EmptyProgressMonitor());
  return SNodeOperations.cast(SetSequence.fromSet(instances).findFirst(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(((SNode)it),"jetbrains.mps.baseLanguage.structure.Classifier") && BehaviorReflection.invokeVirtual(String.class,SNodeOperations.cast(it,"jetbrains.mps.lang.traceable.structure.UnitConcept"),"virtual_getUnitName_5067982036267369911",new Object[]{}).equals(unitName);
    }
  }
),"jetbrains.mps.lang.traceable.structure.UnitConcept");
}
