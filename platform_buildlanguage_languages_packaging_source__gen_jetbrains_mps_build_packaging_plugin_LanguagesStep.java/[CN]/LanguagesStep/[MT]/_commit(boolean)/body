{
  Set<NodeData> selectedItems=this.myCheckTree.getSelectedItems();
  Set<NodeData> modules=SetSequence.<NodeData>fromSetAndArray(new LinkedHashSet());
  for (  NodeData item : SetSequence.fromSet(selectedItems)) {
    this.fillWithParents(item,modules);
  }
  List<NodeData> toSort=ListSequence.fromList(new LinkedList<NodeData>());
  ListSequence.fromList(toSort).sort(new Comparator<NodeData>(){
    public int compare(    NodeData a,    NodeData b){
      if ((a instanceof NamespaceData) && (b instanceof ModuleData)) {
        return -1;
      }
 else       if ((a instanceof ModuleData) && (b instanceof NamespaceData)) {
        return 1;
      }
      return a.getText().compareToIgnoreCase(b.getText());
    }
  }
,true);
  this.myGenerator.setModules(toSort);
}
