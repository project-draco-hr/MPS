{
  SNode classifier=(SNode)SNodeOperations.getParent(node);
  final SNode instanceMethod=node;
  for (  SNode derivedClassifier : ListSequence.<SNode>fromList(ClassifierSuccessorsFinder.getDerivedClassifiers(classifier,scope))) {
    ListSequence.<SNode>fromList(SLinkOperations.getTargets(derivedClassifier,"method",true)).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return BaseMethodDeclaration_Behavior.call_hasSameSignature_1213877350435(instanceMethod,it);
      }
    }
).visitAll(new IVisitor<SNode>(){
      public void visit(      SNode it){
        ListSequence.<SNode>fromList(_results).addElement(it);
      }
    }
);
    if (SNodeOperations.isInstanceOf(derivedClassifier,"jetbrains.mps.baseLanguage.structure.EnumClass")) {
      for (      SNode enumConstant : ListSequence.<SNode>fromList(SLinkOperations.getTargets(SNodeOperations.cast(derivedClassifier,"jetbrains.mps.baseLanguage.structure.EnumClass"),"enumConstant",true))) {
        ListSequence.<SNode>fromList(SLinkOperations.getTargets(enumConstant,"method",true)).where(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return BaseMethodDeclaration_Behavior.call_hasSameSignature_1213877350435(instanceMethod,it);
          }
        }
).visitAll(new IVisitor<SNode>(){
          public void visit(          SNode it){
            ListSequence.<SNode>fromList(_results).addElement(it);
          }
        }
);
      }
    }
  }
}
