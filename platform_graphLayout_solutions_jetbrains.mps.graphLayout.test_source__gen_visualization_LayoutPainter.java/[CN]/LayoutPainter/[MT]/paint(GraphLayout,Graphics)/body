{
  Map<Edge,List<Point>> edgeLayout=layout.getEdgeLayout();
  for (  Edge edge : SetSequence.fromSet(MapSequence.fromMap(edgeLayout).keySet())) {
    List<Point> path=MapSequence.fromMap(edgeLayout).get(edge);
    Iterator<Point> itr=ListSequence.fromList(path).iterator();
    Point cur=itr.next();
    while (itr.hasNext()) {
      Point next=itr.next();
      g.drawLine(cur.x,cur.y,next.x,next.y);
      cur=next;
    }
    Point first=ListSequence.fromList(path).first();
    g.fillOval(first.x - 2,first.y - 2,4,4);
    Point last=ListSequence.fromList(path).last();
    g.fillOval(last.x - 2,last.y - 2,4,4);
  }
  Map<Node,Rectangle> nodeLayout=layout.getNodeLayout();
  for (  Node node : SetSequence.fromSet(MapSequence.fromMap(nodeLayout).keySet())) {
    Rectangle rect=MapSequence.fromMap(nodeLayout).get(node);
    g.drawRect(rect.x,rect.y,rect.width,rect.height);
    g.drawString(node.toString(),rect.x + 5,rect.y + 15);
  }
  Map<Edge,Rectangle> labelLayout=layout.getLabelLayout();
  for (  Edge edge : SetSequence.fromSet(MapSequence.fromMap(labelLayout).keySet())) {
    Rectangle rect=MapSequence.fromMap(labelLayout).get(edge);
    g.drawRect(rect.x,rect.y,rect.width,rect.height);
    g.drawString(edge.toString(),rect.x + 5,rect.y + 12);
  }
}
