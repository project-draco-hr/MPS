{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("whenConcreteVar",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      List<SNode> whenConcreteStatements=SNodeOperations.getAncestors(_context.getEnclosingNode(),"jetbrains.mps.lang.typesystem.structure.WhenConcreteStatement",false);
      List<SNode> declarations=new ArrayList<SNode>();
      for (      SNode whenConcreteStatement : whenConcreteStatements) {
        SNode variableDeclaration=SLinkOperations.getTarget(whenConcreteStatement,"argumentRepresentator",true);
        if (variableDeclaration != null) {
          ListSequence.fromList(declarations).addElement(variableDeclaration);
        }
      }
      return declarations;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c895902ae(jetbrains.mps.lang.typesystem.constraints)","1213104837477");
    }
  }
);
  return result;
}
