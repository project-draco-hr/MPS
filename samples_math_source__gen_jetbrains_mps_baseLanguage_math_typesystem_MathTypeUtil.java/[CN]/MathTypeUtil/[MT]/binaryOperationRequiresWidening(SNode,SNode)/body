{
  boolean left=SNodeOperations.hasRole(expr,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbdeb6fecfL,0xfbdeb7a11cL,"leftExpression"));
  boolean right=SNodeOperations.hasRole(expr,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbdeb6fecfL,0xfbdeb7a11bL,"rightExpression"));
  if (!(SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(binOp),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506dL,"jetbrains.mps.baseLanguage.structure.Type"))) || !(SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(expr),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506dL,"jetbrains.mps.baseLanguage.structure.Type")))) {
    return 0;
  }
  SNode opType=SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(binOp),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506dL,"jetbrains.mps.baseLanguage.structure.Type"));
  SNode exprType=SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(expr),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506dL,"jetbrains.mps.baseLanguage.structure.Type"));
  SNode oppositeOp=null;
  if (left) {
    oppositeOp=SLinkOperations.getTarget(binOp,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbdeb6fecfL,0xfbdeb7a11bL,"rightExpression"));
  }
  if (right) {
    oppositeOp=SLinkOperations.getTarget(binOp,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbdeb6fecfL,0xfbdeb7a11cL,"leftExpression"));
  }
  SNode oppExprType=SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(oppositeOp),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506dL,"jetbrains.mps.baseLanguage.structure.Type"));
  if (SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(binOp),MetaAdapterFactory.getConcept(0x3304fc6e7c6b401eL,0xa016b944934bb21fL,0x42d5783a6267f776L,"jetbrains.mps.baseLanguage.math.structure.MatrixType")) && (SNodeOperations.isInstanceOf(binOp,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfe476b758fL,"jetbrains.mps.baseLanguage.structure.MulExpression")) || SNodeOperations.isInstanceOf(binOp,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc67c7fbL,"jetbrains.mps.baseLanguage.structure.PlusExpression")) || SNodeOperations.isInstanceOf(binOp,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc67c7f5L,"jetbrains.mps.baseLanguage.structure.MinusExpression")))) {
    return 0;
  }
 else {
    if (SNodeOperations.isInstanceOf(oppExprType,MetaAdapterFactory.getConcept(0x3304fc6e7c6b401eL,0xa016b944934bb21fL,0x1200ff11214L,"jetbrains.mps.baseLanguage.math.structure.MathPrimitiveType")) || SNodeOperations.isInstanceOf(exprType,MetaAdapterFactory.getConcept(0x3304fc6e7c6b401eL,0xa016b944934bb21fL,0x1200ff11214L,"jetbrains.mps.baseLanguage.math.structure.MathPrimitiveType"))) {
      if (SNodeOperations.isInstanceOf(binOp,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc67c7fbL,"jetbrains.mps.baseLanguage.structure.PlusExpression")) || SNodeOperations.isInstanceOf(binOp,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc67c7f5L,"jetbrains.mps.baseLanguage.structure.MinusExpression")) || SNodeOperations.isInstanceOf(binOp,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xff2bbc13daL,"jetbrains.mps.baseLanguage.structure.DivExpression"))|| SNodeOperations.isInstanceOf(binOp,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfe476b758fL,"jetbrains.mps.baseLanguage.structure.MulExpression"))|| SNodeOperations.isInstanceOf(binOp,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11d19eede01L,"jetbrains.mps.baseLanguage.structure.BitwiseAndExpression"))|| SNodeOperations.isInstanceOf(binOp,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11d19ef69abL,"jetbrains.mps.baseLanguage.structure.BitwiseXorExpression"))|| SNodeOperations.isInstanceOf(binOp,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11d19ef4652L,"jetbrains.mps.baseLanguage.structure.BitwiseOrExpression"))|| SNodeOperations.isInstanceOf(binOp,MetaAdapterFactory.getConcept(0x3304fc6e7c6b401eL,0xa016b944934bb21fL,0x120568d9c5bL,"jetbrains.mps.baseLanguage.math.structure.DecimalBinaryOperation"))) {
        return pickExplicitWidening(exprType,opType);
      }
 else       if (SNodeOperations.isInstanceOf(binOp,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b210L,"jetbrains.mps.baseLanguage.structure.EqualsExpression")) || SNodeOperations.isInstanceOf(binOp,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf9e20e303fL,"jetbrains.mps.baseLanguage.structure.NotEqualsExpression")) || SNodeOperations.isInstanceOf(binOp,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbced3b82aL,"jetbrains.mps.baseLanguage.structure.LessThanExpression"))|| SNodeOperations.isInstanceOf(binOp,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbced38fcfL,"jetbrains.mps.baseLanguage.structure.GreaterThanExpression"))|| SNodeOperations.isInstanceOf(binOp,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10c8d0fac2cL,"jetbrains.mps.baseLanguage.structure.GreaterThanOrEqualsExpression"))|| SNodeOperations.isInstanceOf(binOp,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10c8d53a915L,"jetbrains.mps.baseLanguage.structure.LessThanOrEqualsExpression"))) {
        if (SNodeOperations.isInstanceOf(oppositeOp,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf940cd6167L,"jetbrains.mps.baseLanguage.structure.NullLiteral")) || SNodeOperations.isInstanceOf(expr,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf940cd6167L,"jetbrains.mps.baseLanguage.structure.NullLiteral"))) {
          return 0;
        }
        return pickExplicitWidening(exprType,join(exprType,oppExprType));
      }
 else {
        return 0;
      }
    }
 else {
      return 0;
    }
  }
}
