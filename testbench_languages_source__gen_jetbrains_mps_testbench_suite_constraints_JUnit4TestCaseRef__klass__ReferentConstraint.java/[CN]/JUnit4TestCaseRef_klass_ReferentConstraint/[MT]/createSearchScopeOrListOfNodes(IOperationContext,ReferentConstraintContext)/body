{
  IScope ms=ModuleSuite_Behavior.call_scope_1280144168199518341(SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.testbench.suite.structure.ModuleSuite",true,false));
  return new VisibleClassifiersScope(_context.getEnclosingNode(),IClassifiersSearchScope.CLASS,(ms != null ? ms : operationContext.getScope())){
    @NotNull @Override public List<SNode> getClassifiers(){
      final SNode testAnn=SLinkOperations.getTarget(new JUnit4TestCaseRef_klass_ReferentConstraint.QuotationClass_bsxj4t_a0a0a0a0a0b0c().createNode(),"annotation",false);
      List<SNode> res=super.getClassifiers();
      for (Iterator<SNode> it=ListSequence.fromList(res).iterator(); it.hasNext(); ) {
        if (!(ListSequence.fromList(SLinkOperations.getTargets(it.next(),"method",true)).<SNode>translate(new ITranslator2<SNode,SNode>(){
          public Iterable<SNode> translate(          SNode m){
            return SLinkOperations.getTargets(m,"annotation",true);
          }
        }
).any(new IWhereFilter<SNode>(){
          public boolean accept(          SNode ann){
            return SLinkOperations.getTarget(ann,"annotation",false) == testAnn;
          }
        }
))) {
          it.remove();
        }
      }
      return res;
    }
  }
;
}
