{
  if (!EditorColorsManager.getInstance().getGlobalScheme().getName().contains("Darcula") || color == null || bg == null)   return color;
  final Color original=color;
  Pair<Color,Color> colorPair=new Pair<Color,Color>(original,bg);
  if (colorsMapping.containsKey(colorPair))   return colorsMapping.get(colorPair);
  int counter=0;
  while (!isGoodContrastWithBG(color,bg) && counter < 10) {
    int deltaR=Math.abs(bg.getRed() - color.getRed());
    int deltaG=Math.abs(bg.getGreen() - color.getGreen());
    int deltaB=Math.abs(bg.getBlue() - color.getBlue());
    int deltaMin=Math.min((Math.min(deltaR,deltaG)),deltaB);
    if (deltaMin == deltaR) {
      color=new Color((color.getRed() + 50) % 256,color.getGreen(),color.getBlue());
    }
 else     if (deltaMin == deltaG) {
      color=new Color(color.getRed(),(color.getGreen() + 50) % 256,color.getBlue());
    }
 else     if (deltaMin == deltaB) {
      color=new Color(color.getRed(),color.getGreen(),(color.getBlue() + 50) % 256);
    }
    counter++;
  }
  colorsMapping.put(colorPair,color);
  return color;
}
