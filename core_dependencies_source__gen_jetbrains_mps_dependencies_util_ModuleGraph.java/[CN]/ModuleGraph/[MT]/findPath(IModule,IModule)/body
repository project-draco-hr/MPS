{
  ModuleGraph.ModuleVertex start=MapSequence.fromMap(myMap).get(startModule);
  ModuleGraph.ModuleVertex finish=MapSequence.fromMap(myMap).get(finishModule);
  if (start == null || finish == null) {
    return ListSequence.fromList(new ArrayList<IModule>());
  }
  List<ModuleGraph.ModuleVertex> path=ListSequence.fromList(new LinkedList());
  ListSequence.fromList(path).addElement(start);
  Set<ModuleGraph.ModuleVertex> visited=SetSequence.fromSet(new HashSet<ModuleGraph.ModuleVertex>());
  SetSequence.fromSet(visited).addElement(start);
  findPath(path,finish,visited);
  return ListSequence.fromList(path).select(new ISelector<ModuleGraph.ModuleVertex,IModule>(){
    public IModule select(    ModuleGraph.ModuleVertex it){
      return it.myModule;
    }
  }
).toListSequence();
}
