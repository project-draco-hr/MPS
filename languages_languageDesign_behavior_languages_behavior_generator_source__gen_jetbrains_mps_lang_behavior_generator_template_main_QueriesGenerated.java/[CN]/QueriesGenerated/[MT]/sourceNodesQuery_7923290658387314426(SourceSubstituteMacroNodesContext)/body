{
  Map<String,SNode> generatedNameToConceptMethodDeclaration=MapSequence.fromMap(new HashMap<String,SNode>());
  List<SNode> methods=ConceptDeclaration__BehaviorDescriptor.getAllMethodsInPriorityOrder_id7TwdR6lloFy.invoke(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(),MetaAdapterFactory.getReferenceLink(0xaf65afd8f0dd4942L,0x87d963a55f2a9db1L,0x8fa3b96a509fe09L,0x8fa3b96a509fe0aL,"concept")),MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979ba0450L,"jetbrains.mps.lang.structure.structure.ConceptDeclaration")));
  SNode extendsNode=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(),MetaAdapterFactory.getReferenceLink(0xaf65afd8f0dd4942L,0x87d963a55f2a9db1L,0x8fa3b96a509fe09L,0x8fa3b96a509fe0aL,"concept")),MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979ba0450L,"jetbrains.mps.lang.structure.structure.ConceptDeclaration")),MetaAdapterFactory.getReferenceLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979ba0450L,0xf979be93cfL,"extends"));
  extendsNode=((extendsNode != null) ? extendsNode : SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)","1133920641626"));
  if (extendsNode != SLinkOperations.getTarget(_context.getNode(),MetaAdapterFactory.getReferenceLink(0xaf65afd8f0dd4942L,0x87d963a55f2a9db1L,0x8fa3b96a509fe09L,0x8fa3b96a509fe0aL,"concept"))) {
    ListSequence.fromList(methods).removeSequence(ListSequence.fromList(ConceptDeclaration__BehaviorDescriptor.getAllMethodsInPriorityOrder_id7TwdR6lloFy.invoke(extendsNode)));
  }
  for (  SNode method : methods) {
    if (!(MapSequence.fromMap(generatedNameToConceptMethodDeclaration).containsKey(BehaviorMethodNames.getDeclarationName(method)))) {
      MapSequence.fromMap(generatedNameToConceptMethodDeclaration).put(BehaviorMethodNames.getDeclarationName(method),method);
    }
  }
  for (  SNode behavior : SModelOperations.nodes(_context.getInputModel(),MetaAdapterFactory.getConcept(0xaf65afd8f0dd4942L,0x87d963a55f2a9db1L,0x11d43447b1aL,"jetbrains.mps.lang.behavior.structure.ConceptBehavior"))) {
    if (SLinkOperations.getTarget(behavior,MetaAdapterFactory.getReferenceLink(0xaf65afd8f0dd4942L,0x87d963a55f2a9db1L,0x11d43447b1aL,0x11d43447b1fL,"concept")) == SLinkOperations.getTarget(_context.getNode(),MetaAdapterFactory.getReferenceLink(0xaf65afd8f0dd4942L,0x87d963a55f2a9db1L,0x8fa3b96a509fe09L,0x8fa3b96a509fe0aL,"concept"))) {
      for (      SNode method : SLinkOperations.getChildren(behavior,MetaAdapterFactory.getContainmentLink(0xaf65afd8f0dd4942L,0x87d963a55f2a9db1L,0x11d43447b1aL,0x11d43447b25L,"method"))) {
        if (MapSequence.fromMap(generatedNameToConceptMethodDeclaration).containsKey(BehaviorMethodNames.getDeclarationName(method))) {
          MapSequence.fromMap(generatedNameToConceptMethodDeclaration).put(BehaviorMethodNames.getDeclarationName(method),method);
        }
      }
    }
  }
  return Sequence.fromIterable(MapSequence.fromMap(generatedNameToConceptMethodDeclaration).values()).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return !(SPropertyOperations.getBoolean(it,MetaAdapterFactory.getProperty(0xaf65afd8f0dd4942L,0x87d963a55f2a9db1L,0x11d4348057eL,0x11d43480582L,"isAbstract"))) && BehaviorMethodNames.getDeclarationName(it).startsWith("virtual");
    }
  }
).sort(new ISelector<SNode,String>(){
    public String select(    SNode it){
      return BehaviorMethodNames.getDeclarationName(it);
    }
  }
,true);
}
