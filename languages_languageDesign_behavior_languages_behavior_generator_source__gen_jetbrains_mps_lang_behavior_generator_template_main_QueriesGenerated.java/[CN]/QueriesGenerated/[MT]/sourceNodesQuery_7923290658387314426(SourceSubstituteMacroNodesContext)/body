{
  Map<String,SNode> generatedNameToConceptMethodDeclaration=MapSequence.fromMap(new HashMap<String,SNode>());
  List<SNode> methods=ConceptDeclaration_Behavior.call_getAllMethodsInPriorityOrder_9106339407519386338(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(),MetaAdapterFactory.getReferenceLink(new UUID(-5808042798135555774l,-8657779246725685839l),646895014681116169l,646895014681116170l,"concept")),MetaAdapterFactory.getConcept(new UUID(-4094437568663370681l,-8968368868337559369l),1071489090640l,"jetbrains.mps.lang.structure.structure.ConceptDeclaration")));
  SNode extendsNode=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(),MetaAdapterFactory.getReferenceLink(new UUID(-5808042798135555774l,-8657779246725685839l),646895014681116169l,646895014681116170l,"concept")),MetaAdapterFactory.getConcept(new UUID(-4094437568663370681l,-8968368868337559369l),1071489090640l,"jetbrains.mps.lang.structure.structure.ConceptDeclaration")),MetaAdapterFactory.getReferenceLink(new UUID(-4094437568663370681l,-8968368868337559369l),1071489090640l,1071489389519l,"extends"));
  extendsNode=((extendsNode != null) ? extendsNode : SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)","1133920641626"));
  if (extendsNode != SLinkOperations.getTarget(_context.getNode(),MetaAdapterFactory.getReferenceLink(new UUID(-5808042798135555774l,-8657779246725685839l),646895014681116169l,646895014681116170l,"concept"))) {
    ListSequence.fromList(methods).removeSequence(ListSequence.fromList(ConceptDeclaration_Behavior.call_getAllMethodsInPriorityOrder_9106339407519386338(extendsNode)));
  }
  for (  SNode method : methods) {
    if (!(MapSequence.fromMap(generatedNameToConceptMethodDeclaration).containsKey(BehaviorMethodNames.getDeclarationName(method)))) {
      MapSequence.fromMap(generatedNameToConceptMethodDeclaration).put(BehaviorMethodNames.getDeclarationName(method),method);
    }
  }
  for (  SNode behavior : SModelOperations.nodes(_context.getInputModel(),MetaAdapterFactory.getConcept(new UUID(-5808042798135555774l,-8657779246725685839l),1225194240794l,"jetbrains.mps.lang.behavior.structure.ConceptBehavior"))) {
    if (SLinkOperations.getTarget(behavior,MetaAdapterFactory.getReferenceLink(new UUID(-5808042798135555774l,-8657779246725685839l),1225194240794l,1225194240799l,"concept")) == SLinkOperations.getTarget(_context.getNode(),MetaAdapterFactory.getReferenceLink(new UUID(-5808042798135555774l,-8657779246725685839l),646895014681116169l,646895014681116170l,"concept"))) {
      for (      SNode method : SLinkOperations.getChildren(behavior,MetaAdapterFactory.getContainmentLink(new UUID(-5808042798135555774l,-8657779246725685839l),1225194240794l,1225194240805l,"method"))) {
        if (MapSequence.fromMap(generatedNameToConceptMethodDeclaration).containsKey(BehaviorMethodNames.getDeclarationName(method))) {
          MapSequence.fromMap(generatedNameToConceptMethodDeclaration).put(BehaviorMethodNames.getDeclarationName(method),method);
        }
      }
    }
  }
  return Sequence.fromIterable(MapSequence.fromMap(generatedNameToConceptMethodDeclaration).values()).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return !(SPropertyOperations.getBoolean(it,MetaAdapterFactory.getProperty(new UUID(-5808042798135555774l,-8657779246725685839l),1225194472830l,1225194472834l,"isAbstract"))) && BehaviorMethodNames.getDeclarationName(it).startsWith("virtual");
    }
  }
).sort(new ISelector<SNode,String>(){
    public String select(    SNode it){
      return BehaviorMethodNames.getDeclarationName(it);
    }
  }
,true);
}
