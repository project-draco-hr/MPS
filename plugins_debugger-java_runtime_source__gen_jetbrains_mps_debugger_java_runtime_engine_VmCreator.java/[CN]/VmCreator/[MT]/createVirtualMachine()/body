{
  final Semaphore semaphore=new Semaphore();
  semaphore.down();
  final DebugProcessMulticaster processMulticaster=myEventsProcessor.getMulticaster();
  processMulticaster.addListener(new DebugProcessAdapter(){
    public void connectorIsReady(){
      VmCreator.LOG.debug("Connector is ready.");
      semaphore.up();
      processMulticaster.removeListener(this);
    }
  }
);
  myEventsProcessor.schedule(new _FunctionTypes._void_P0_E0(){
    public void invoke(){
      final Wrappers._T<VirtualMachine> vm=new Wrappers._T<VirtualMachine>(null);
      try {
        final long time=System.currentTimeMillis();
        while (System.currentTimeMillis() - time < LOCAL_START_TIMEOUT) {
          try {
            vm.value=doCreateVirtualMachine();
            LOG.debug("Created VM " + vm.value);
            break;
          }
 catch (          Throwable t) {
            createVmFailed(t);
            break;
          }
        }
      }
  finally {
        semaphore.up();
      }
      if (vm.value != null) {
        executeAfterProcessStarted(new Runnable(){
          public void run(){
            VmCreator.LOG.debug("Schedule commit command.");
            myEventsProcessor.schedule(new _FunctionTypes._void_P0_E0(){
              public void invoke(){
                myEventsProcessor.commitVm(vm.value);
              }
            }
);
          }
        }
);
      }
 else {
        LOG.debug("VM is null.");
      }
    }
  }
,new _FunctionTypes._void_P0_E0(){
    public void invoke(){
      semaphore.up();
    }
  }
);
  semaphore.waitFor();
}
