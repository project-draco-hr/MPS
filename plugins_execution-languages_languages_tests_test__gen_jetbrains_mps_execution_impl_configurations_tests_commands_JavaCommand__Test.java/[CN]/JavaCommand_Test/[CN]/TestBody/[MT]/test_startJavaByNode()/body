{
  final Wrappers._T<SNodeReference> pointer=new Wrappers._T<SNodeReference>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      SModel model=SModelRepository.getInstance().getModelDescriptor("jetbrains.mps.execution.impl.configurations.tests.commands.sandbox@tests");
      SNode mainNode=ListSequence.fromList(SModelOperations.roots(model,MetaAdapterFactory.getInterfaceConcept(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,"jetbrains.mps.lang.core.structure.INamedConcept"))).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return eq_849b2c_a0a0a0a0a0a1a0a0a0a1a0b(SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")),Main.class.getSimpleName());
        }
      }
);
      pointer.value=new SNodePointer(mainNode);
    }
  }
);
  this.checkProcess(new Java_Command().createProcess(pointer.value),Main.MESSAGE + "\n");
}
