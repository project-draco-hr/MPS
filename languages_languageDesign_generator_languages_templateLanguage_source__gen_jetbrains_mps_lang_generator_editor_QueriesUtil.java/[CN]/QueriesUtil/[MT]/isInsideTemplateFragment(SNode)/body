{
  Iterable<SNode> ancestorTFs=ListSequence.fromList(SNodeOperations.getAncestors(node,null,true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return AttributeOperations.getAttribute(it,new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.TemplateFragment"))) != null;
    }
  }
);
  return Sequence.fromIterable(ancestorTFs).count() > 0;
}
