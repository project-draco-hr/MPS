{
  super("Create runtime classes in the closures runtime");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "_FunctionTypes";
    }
    public String getAdditionalInfo(){
      return "_FunctionTypes";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassConcept";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return "jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes".equals(NameUtil.nodeFQName(node)) && !(ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SPropertyOperations.getString(it,"name").startsWith("_void");
        }
      }
));
    }
    public void doUpdateInstanceNode(    SNode node){
      List<SNode> paramTypeVars=new ArrayList<SNode>();
      for (int params=0; params <= Constants.MAX_CLOSURE_PARAMETERS; params++) {
        List<SNode> excepTypeVars=new ArrayList<SNode>();
        for (int exceps=0; exceps <= Constants.MAX_CLOSURE_EXCEPTIONS; exceps++) {
          List<SNode> tvds=new ArrayList<SNode>();
          ListSequence.fromList(tvds).addSequence(ListSequence.fromList(paramTypeVars).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SNodeOperations.copyNode(it);
            }
          }
));
          List<SNode> pdecls=new ArrayList<SNode>();
          ListSequence.fromList(pdecls).addSequence(ListSequence.fromList(tvds).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              SNode tr=_quotation_createNode_awiph7_a0a0a0a0a4a1a1a0a(it);
              return _quotation_createNode_awiph7_a1a0a0a0e0b0b0a0(tr,SPropertyOperations.getString(it,"name").toLowerCase());
            }
          }
));
          ListSequence.fromList(tvds).addSequence(ListSequence.fromList(excepTypeVars).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SNodeOperations.copyNode(it);
            }
          }
));
          List<SNode> exdecls=new ArrayList<SNode>();
          ListSequence.fromList(exdecls).addSequence(ListSequence.fromList(tvds).skip(ListSequence.fromList(paramTypeVars).count()).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return _quotation_createNode_awiph7_a0a0a0a0i0b0b0a0(it);
            }
          }
));
          String name="_void" + "_P" + params + "_E"+ exceps;
          ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).addElement(_quotation_createNode_awiph7_a0a11a1a1a0a(pdecls,exdecls,tvds,name));
          ListSequence.fromList(excepTypeVars).addElement(_quotation_createNode_awiph7_a0a31a1a1a0a("E" + (exceps + 1)));
        }
        ListSequence.fromList(paramTypeVars).addElement(_quotation_createNode_awiph7_a0a2a1a0a("P" + (params + 1)));
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "_FunctionTypes";
    }
    public String getAdditionalInfo(){
      return "_FunctionTypes";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassConcept";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return "jetbrains.mps.baseLanguage.closures.runtime._FunctionTypes".equals(NameUtil.nodeFQName(node)) && !(ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SPropertyOperations.getString(it,"name").startsWith("_return");
        }
      }
));
    }
    public void doUpdateInstanceNode(    SNode node){
      List<SNode> paramTypeVars=new ArrayList<SNode>();
      for (int params=0; params <= Constants.MAX_CLOSURE_PARAMETERS; params++) {
        List<SNode> excepTypeVars=new ArrayList<SNode>();
        for (int exceps=0; exceps <= Constants.MAX_CLOSURE_EXCEPTIONS; exceps++) {
          List<SNode> tvds=new ArrayList<SNode>();
          ListSequence.fromList(tvds).addElement(_quotation_createNode_awiph7_a0a1a1a1a0b());
          SNode retVal=_quotation_createNode_awiph7_a0c0b0b0a1(ListSequence.fromList(tvds).first());
          ListSequence.fromList(tvds).addSequence(ListSequence.fromList(paramTypeVars).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SNodeOperations.copyNode(it);
            }
          }
));
          List<SNode> pdecls=new ArrayList<SNode>();
          ListSequence.fromList(pdecls).addSequence(ListSequence.fromList(tvds).skip(1).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              SNode tr=_quotation_createNode_awiph7_a0a0a0a0a7a1a1a0b(it);
              return _quotation_createNode_awiph7_a1a0a0a0h0b0b0a1(tr,SPropertyOperations.getString(it,"name").toLowerCase());
            }
          }
));
          ListSequence.fromList(tvds).addSequence(ListSequence.fromList(excepTypeVars).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SNodeOperations.copyNode(it);
            }
          }
));
          List<SNode> exdecls=new ArrayList<SNode>();
          ListSequence.fromList(exdecls).addSequence(ListSequence.fromList(tvds).skip(ListSequence.fromList(paramTypeVars).count() + 1).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return _quotation_createNode_awiph7_a0a0a0a0l0b0b0a1(it);
            }
          }
));
          String name="_return" + "_P" + params + "_E"+ exceps;
          ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).addElement(_quotation_createNode_awiph7_a0a41a1a1a0b(pdecls,retVal,exdecls,tvds,name));
          ListSequence.fromList(excepTypeVars).addElement(_quotation_createNode_awiph7_a0a61a1a1a0b("E" + (exceps + 1)));
        }
        ListSequence.fromList(paramTypeVars).addElement(_quotation_createNode_awiph7_a0a2a1a0b("P" + (params + 1)));
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "_UnrestrictedFunctionTypes";
    }
    public String getAdditionalInfo(){
      return "_UnrestrictedFunctionTypes";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassConcept";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return "jetbrains.mps.baseLanguage.closures.runtime._UnrestrictedFunctionTypes".equals(NameUtil.nodeFQName(node)) && !(ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SPropertyOperations.getString(it,"name").startsWith("_return_terminate");
        }
      }
));
    }
    public void doUpdateInstanceNode(    SNode node){
      List<SNode> paramTypeVars=new ArrayList<SNode>();
      for (int params=0; params <= Constants.MAX_CLOSURE_PARAMETERS; params++) {
        List<SNode> excepTypeVars=new ArrayList<SNode>();
        for (int exceps=0; exceps <= Constants.MAX_CLOSURE_EXCEPTIONS; exceps++) {
          List<SNode> tvds=new ArrayList<SNode>();
          ListSequence.fromList(tvds).addElement(_quotation_createNode_awiph7_a0a1a1a1a0c());
          SNode t=_quotation_createNode_awiph7_a0c0b0b0a2(ListSequence.fromList(tvds).first());
          ListSequence.fromList(tvds).addElement(_quotation_createNode_awiph7_a0a3a1a1a0c());
          SNode r=_quotation_createNode_awiph7_a0e0b0b0a2(ListSequence.fromList(tvds).last());
          SNode retVal=_quotation_createNode_awiph7_a0f0b0b0a2(t,r);
          ListSequence.fromList(tvds).addSequence(ListSequence.fromList(paramTypeVars).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SNodeOperations.copyNode(it);
            }
          }
));
          List<SNode> pdecls=new ArrayList<SNode>();
          ListSequence.fromList(pdecls).addSequence(ListSequence.fromList(tvds).skip(2).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              SNode tr=_quotation_createNode_awiph7_a0a0a0a0a9a1a1a0c(it);
              return _quotation_createNode_awiph7_a1a0a0a0j0b0b0a2(tr,SPropertyOperations.getString(it,"name").toLowerCase());
            }
          }
));
          ListSequence.fromList(tvds).addSequence(ListSequence.fromList(excepTypeVars).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SNodeOperations.copyNode(it);
            }
          }
));
          List<SNode> exdecls=new ArrayList<SNode>();
          ListSequence.fromList(exdecls).addSequence(ListSequence.fromList(tvds).skip(ListSequence.fromList(paramTypeVars).count() + 2).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return _quotation_createNode_awiph7_a0a0a0a0n0b0b0a2(it);
            }
          }
));
          String name="_return_terminate" + "_P" + params + "_E"+ exceps;
          ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).addElement(_quotation_createNode_awiph7_a0a61a1a1a0c(pdecls,retVal,exdecls,tvds,name));
          ListSequence.fromList(excepTypeVars).addElement(_quotation_createNode_awiph7_a0a81a1a1a0c("E" + (exceps + 1)));
        }
        ListSequence.fromList(paramTypeVars).addElement(_quotation_createNode_awiph7_a0a2a1a0c("P" + (params + 1)));
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "_UnrestrictedFunctionTypes";
    }
    public String getAdditionalInfo(){
      return "_UnrestrictedFunctionTypes";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassConcept";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return "jetbrains.mps.baseLanguage.closures.runtime._UnrestrictedFunctionTypes".equals(NameUtil.nodeFQName(node)) && !(ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SPropertyOperations.getString(it,"name").startsWith("_void_terminate");
        }
      }
));
    }
    public void doUpdateInstanceNode(    SNode node){
      List<SNode> paramTypeVars=new ArrayList<SNode>();
      for (int params=0; params <= Constants.MAX_CLOSURE_PARAMETERS; params++) {
        List<SNode> excepTypeVars=new ArrayList<SNode>();
        for (int exceps=0; exceps <= Constants.MAX_CLOSURE_EXCEPTIONS; exceps++) {
          List<SNode> tvds=new ArrayList<SNode>();
          ListSequence.fromList(tvds).addElement(_quotation_createNode_awiph7_a0a1a1a1a0d());
          SNode t=_quotation_createNode_awiph7_a0c0b0b0a3(ListSequence.fromList(tvds).first());
          SNode retVal=_quotation_createNode_awiph7_a0d0b0b0a3(t);
          ListSequence.fromList(tvds).addSequence(ListSequence.fromList(paramTypeVars).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SNodeOperations.copyNode(it);
            }
          }
));
          List<SNode> pdecls=new ArrayList<SNode>();
          ListSequence.fromList(pdecls).addSequence(ListSequence.fromList(tvds).skip(1).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              SNode tr=_quotation_createNode_awiph7_a0a0a0a0a7a1a1a0d(it);
              return _quotation_createNode_awiph7_a1a0a0a0h0b0b0a3(tr,SPropertyOperations.getString(it,"name").toLowerCase());
            }
          }
));
          ListSequence.fromList(tvds).addSequence(ListSequence.fromList(excepTypeVars).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SNodeOperations.copyNode(it);
            }
          }
));
          List<SNode> exdecls=new ArrayList<SNode>();
          ListSequence.fromList(exdecls).addSequence(ListSequence.fromList(tvds).skip(ListSequence.fromList(paramTypeVars).count() + 1).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return _quotation_createNode_awiph7_a0a0a0a0l0b0b0a3(it);
            }
          }
));
          final String ename="_return_terminate" + "_P" + params + "_E"+ exceps;
          SNode eifc=SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).findFirst(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return ename.equals(SPropertyOperations.getString(it,"name"));
            }
          }
),"jetbrains.mps.baseLanguage.structure.Interface");
          List<SNode> eifcParams=new ArrayList<SNode>();
          ListSequence.fromList(eifcParams).addSequence(ListSequence.fromList(tvds).skip(1).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return _quotation_createNode_awiph7_a0a0a0a0q0b0b0a3(it);
            }
          }
));
          String name="_void_terminate" + "_P" + params + "_E"+ exceps;
          ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).addElement(_quotation_createNode_awiph7_a0a91a1a1a0d(t,eifcParams,eifc,pdecls,retVal,exdecls,tvds,name));
          ListSequence.fromList(excepTypeVars).addElement(_quotation_createNode_awiph7_a0a12a1a1a0d("E" + (exceps + 1)));
        }
        ListSequence.fromList(paramTypeVars).addElement(_quotation_createNode_awiph7_a0a2a1a0d("P" + (params + 1)));
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "_UnrestrictedFunctionTypes";
    }
    public String getAdditionalInfo(){
      return "_UnrestrictedFunctionTypes";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassConcept";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return "jetbrains.mps.baseLanguage.closures.runtime._UnrestrictedFunctionTypes".equals(NameUtil.nodeFQName(node)) && !(ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SPropertyOperations.getString(it,"name").startsWith("_return_void");
        }
      }
));
    }
    public void doUpdateInstanceNode(    SNode node){
      List<SNode> paramTypeVars=new ArrayList<SNode>();
      for (int params=0; params <= Constants.MAX_CLOSURE_PARAMETERS; params++) {
        List<SNode> excepTypeVars=new ArrayList<SNode>();
        for (int exceps=0; exceps <= Constants.MAX_CLOSURE_EXCEPTIONS; exceps++) {
          List<SNode> tvds=new ArrayList<SNode>();
          ListSequence.fromList(tvds).addElement(_quotation_createNode_awiph7_a0a1a1a1a0e());
          SNode r=_quotation_createNode_awiph7_a0c0b0b0a4(ListSequence.fromList(tvds).first());
          SNode retVal=_quotation_createNode_awiph7_a0d0b0b0a4(r);
          ListSequence.fromList(tvds).addSequence(ListSequence.fromList(paramTypeVars).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SNodeOperations.copyNode(it);
            }
          }
));
          List<SNode> pdecls=new ArrayList<SNode>();
          ListSequence.fromList(pdecls).addSequence(ListSequence.fromList(tvds).skip(1).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              SNode tr=_quotation_createNode_awiph7_a0a0a0a0a7a1a1a0e(it);
              return _quotation_createNode_awiph7_a1a0a0a0h0b0b0a4(tr,SPropertyOperations.getString(it,"name").toLowerCase());
            }
          }
));
          ListSequence.fromList(tvds).addSequence(ListSequence.fromList(excepTypeVars).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SNodeOperations.copyNode(it);
            }
          }
));
          List<SNode> exdecls=new ArrayList<SNode>();
          ListSequence.fromList(exdecls).addSequence(ListSequence.fromList(tvds).skip(ListSequence.fromList(paramTypeVars).count() + 1).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return _quotation_createNode_awiph7_a0a0a0a0l0b0b0a4(it);
            }
          }
));
          final String ename="_return_terminate" + "_P" + params + "_E"+ exceps;
          SNode eifc=SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).findFirst(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return ename.equals(SPropertyOperations.getString(it,"name"));
            }
          }
),"jetbrains.mps.baseLanguage.structure.Interface");
          List<SNode> eifcParams=new ArrayList<SNode>();
          ListSequence.fromList(eifcParams).addSequence(ListSequence.fromList(tvds).skip(1).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return _quotation_createNode_awiph7_a0a0a0a0q0b0b0a4(it);
            }
          }
));
          String name="_return_void" + "_P" + params + "_E"+ exceps;
          ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).addElement(_quotation_createNode_awiph7_a0a91a1a1a0e(r,eifcParams,eifc,pdecls,retVal,exdecls,tvds,name));
          ListSequence.fromList(excepTypeVars).addElement(_quotation_createNode_awiph7_a0a12a1a1a0e("E" + (exceps + 1)));
        }
        ListSequence.fromList(paramTypeVars).addElement(_quotation_createNode_awiph7_a0a2a1a0e("P" + (params + 1)));
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "_UnrestrictedFunctionTypes";
    }
    public String getAdditionalInfo(){
      return "_UnrestrictedFunctionTypes";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassConcept";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return "jetbrains.mps.baseLanguage.closures.runtime._UnrestrictedFunctionTypes".equals(NameUtil.nodeFQName(node)) && !(ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SPropertyOperations.getString(it,"name").startsWith("_void_void");
        }
      }
));
    }
    public void doUpdateInstanceNode(    SNode node){
      List<SNode> paramTypeVars=new ArrayList<SNode>();
      for (int params=0; params <= Constants.MAX_CLOSURE_PARAMETERS; params++) {
        List<SNode> excepTypeVars=new ArrayList<SNode>();
        for (int exceps=0; exceps <= Constants.MAX_CLOSURE_EXCEPTIONS; exceps++) {
          List<SNode> tvds=new ArrayList<SNode>();
          SNode retVal=_quotation_createNode_awiph7_a0b0b0b0a5();
          ListSequence.fromList(tvds).addSequence(ListSequence.fromList(paramTypeVars).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SNodeOperations.copyNode(it);
            }
          }
));
          List<SNode> pdecls=new ArrayList<SNode>();
          ListSequence.fromList(pdecls).addSequence(ListSequence.fromList(tvds).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              SNode tr=_quotation_createNode_awiph7_a0a0a0a0a5a1a1a0f(it);
              return _quotation_createNode_awiph7_a1a0a0a0f0b0b0a5(tr,SPropertyOperations.getString(it,"name").toLowerCase());
            }
          }
));
          ListSequence.fromList(tvds).addSequence(ListSequence.fromList(excepTypeVars).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SNodeOperations.copyNode(it);
            }
          }
));
          List<SNode> exdecls=new ArrayList<SNode>();
          ListSequence.fromList(exdecls).addSequence(ListSequence.fromList(tvds).skip(ListSequence.fromList(paramTypeVars).count()).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return _quotation_createNode_awiph7_a0a0a0a0j0b0b0a5(it);
            }
          }
));
          final String ename="_return_terminate" + "_P" + params + "_E"+ exceps;
          SNode eifc=SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).findFirst(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return ename.equals(SPropertyOperations.getString(it,"name"));
            }
          }
),"jetbrains.mps.baseLanguage.structure.Interface");
          List<SNode> eifcParams=new ArrayList<SNode>();
          ListSequence.fromList(eifcParams).addSequence(ListSequence.fromList(tvds).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return _quotation_createNode_awiph7_a0a0a0a0o0b0b0a5(it);
            }
          }
));
          String name="_void_void" + "_P" + params + "_E"+ exceps;
          ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).addElement(_quotation_createNode_awiph7_a0a71a1a1a0f(eifcParams,eifc,pdecls,retVal,exdecls,tvds,name));
          ListSequence.fromList(excepTypeVars).addElement(_quotation_createNode_awiph7_a0a91a1a1a0f("E" + (exceps + 1)));
        }
        ListSequence.fromList(paramTypeVars).addElement(_quotation_createNode_awiph7_a0a2a1a0f("P" + (params + 1)));
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "_UnrestrictedClosures";
    }
    public String getAdditionalInfo(){
      return "_UnrestrictedClosures";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassConcept";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return "jetbrains.mps.baseLanguage.closures.runtime._UnrestrictedClosures".equals(NameUtil.nodeFQName(node)) && !(ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SPropertyOperations.getString(it,"name").startsWith("_return_terminate");
        }
      }
));
    }
    public void doUpdateInstanceNode(    SNode node){
      List<SNode> paramTypeVars=new ArrayList<SNode>();
      for (int params=0; params <= Constants.MAX_CLOSURE_PARAMETERS; params++) {
        List<SNode> excepTypeVars=new ArrayList<SNode>();
        for (int exceps=0; exceps <= Constants.MAX_CLOSURE_EXCEPTIONS; exceps++) {
          List<SNode> tvds=new ArrayList<SNode>();
          ListSequence.fromList(tvds).addElement(_quotation_createNode_awiph7_a0a1a1a1a0g());
          SNode t=_quotation_createNode_awiph7_a0c0b0b0a6(ListSequence.fromList(tvds).first());
          ListSequence.fromList(tvds).addElement(_quotation_createNode_awiph7_a0a3a1a1a0g());
          SNode r=_quotation_createNode_awiph7_a0e0b0b0a6(ListSequence.fromList(tvds).last());
          SNode retVal=_quotation_createNode_awiph7_a0f0b0b0a6(t,r);
          ListSequence.fromList(tvds).addSequence(ListSequence.fromList(paramTypeVars).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SNodeOperations.copyNode(it);
            }
          }
));
          List<SNode> pdecls=new ArrayList<SNode>();
          ListSequence.fromList(pdecls).addSequence(ListSequence.fromList(tvds).skip(2).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              SNode tr=_quotation_createNode_awiph7_a0a0a0a0a9a1a1a0g(it);
              return _quotation_createNode_awiph7_a1a0a0a0j0b0b0a6(tr,SPropertyOperations.getString(it,"name").toLowerCase());
            }
          }
));
          List<SNode> prefs=new ArrayList<SNode>();
          ListSequence.fromList(prefs).addSequence(ListSequence.fromList(pdecls).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return _quotation_createNode_awiph7_a0a0a0a0l0b0b0a6(it);
            }
          }
));
          ListSequence.fromList(tvds).addSequence(ListSequence.fromList(excepTypeVars).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SNodeOperations.copyNode(it);
            }
          }
));
          List<SNode> exdecls=new ArrayList<SNode>();
          ListSequence.fromList(exdecls).addSequence(ListSequence.fromList(tvds).skip(ListSequence.fromList(paramTypeVars).count() + 2).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return _quotation_createNode_awiph7_a0a0a0a0p0b0b0a6(it);
            }
          }
));
          String name="_return_terminate" + "_P" + params + "_E"+ exceps;
          final String basename="_base";
          SNode basecls=SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).findFirst(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return basename.equals(SPropertyOperations.getString(it,"name"));
            }
          }
),"jetbrains.mps.baseLanguage.structure.ClassConcept");
          final String iname="_return_terminate" + "_P" + params + "_E"+ exceps;
          SNode iifc=SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(ListSequence.fromList(SModelOperations.getRoots(SNodeOperations.getModel(node),"jetbrains.mps.baseLanguage.structure.ClassConcept")).findFirst(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return "_UnrestrictedFunctionTypes".equals(SPropertyOperations.getString(it,"name"));
            }
          }
),"staticInnerClassifiers",true)).findFirst(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return iname.equals(SPropertyOperations.getString(it,"name"));
            }
          }
),"jetbrains.mps.baseLanguage.structure.Interface");
          List<SNode> iifcParams=new ArrayList<SNode>();
          ListSequence.fromList(iifcParams).addSequence(ListSequence.fromList(tvds).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return _quotation_createNode_awiph7_a0a0a0a0y0b0b0a6(it);
            }
          }
));
          SNode cls=ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).addElement(_quotation_createNode_awiph7_a0a0ab0b0b0a6(iifcParams,iifc,pdecls,prefs,retVal,retVal,retVal,exdecls,iifcParams,iifc,iifcParams,iifc,t,r,basecls,tvds,name));
          SPropertyOperations.set(cls,"nonStatic","" + (false));
          ListSequence.fromList(excepTypeVars).addElement(_quotation_createNode_awiph7_a0a92a1a1a0g("E" + (exceps + 1)));
        }
        ListSequence.fromList(paramTypeVars).addElement(_quotation_createNode_awiph7_a0a2a1a0g("P" + (params + 1)));
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "_UnrestrictedClosures";
    }
    public String getAdditionalInfo(){
      return "_UnrestrictedClosures";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassConcept";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return "jetbrains.mps.baseLanguage.closures.runtime._UnrestrictedClosures".equals(NameUtil.nodeFQName(node)) && !(ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SPropertyOperations.getString(it,"name").startsWith("_void_terminate");
        }
      }
));
    }
    public void doUpdateInstanceNode(    SNode node){
      List<SNode> paramTypeVars=new ArrayList<SNode>();
      for (int params=0; params <= Constants.MAX_CLOSURE_PARAMETERS; params++) {
        List<SNode> excepTypeVars=new ArrayList<SNode>();
        for (int exceps=0; exceps <= Constants.MAX_CLOSURE_EXCEPTIONS; exceps++) {
          List<SNode> tvds=new ArrayList<SNode>();
          ListSequence.fromList(tvds).addElement(_quotation_createNode_awiph7_a0a1a1a1a0h());
          SNode t=_quotation_createNode_awiph7_a0c0b0b0a7(ListSequence.fromList(tvds).first());
          SNode retVal=_quotation_createNode_awiph7_a0d0b0b0a7(t);
          ListSequence.fromList(tvds).addSequence(ListSequence.fromList(paramTypeVars).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SNodeOperations.copyNode(it);
            }
          }
));
          List<SNode> pdecls=new ArrayList<SNode>();
          ListSequence.fromList(pdecls).addSequence(ListSequence.fromList(tvds).skip(1).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              SNode tr=_quotation_createNode_awiph7_a0a0a0a0a7a1a1a0h(it);
              return _quotation_createNode_awiph7_a1a0a0a0h0b0b0a7(tr,SPropertyOperations.getString(it,"name").toLowerCase());
            }
          }
));
          List<SNode> prefs=new ArrayList<SNode>();
          ListSequence.fromList(prefs).addSequence(ListSequence.fromList(pdecls).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return _quotation_createNode_awiph7_a0a0a0a0j0b0b0a7(it);
            }
          }
));
          ListSequence.fromList(tvds).addSequence(ListSequence.fromList(excepTypeVars).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SNodeOperations.copyNode(it);
            }
          }
));
          List<SNode> exdecls=new ArrayList<SNode>();
          ListSequence.fromList(exdecls).addSequence(ListSequence.fromList(tvds).skip(ListSequence.fromList(paramTypeVars).count() + 1).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return _quotation_createNode_awiph7_a0a0a0a0n0b0b0a7(it);
            }
          }
));
          String name="_void_terminate" + "_P" + params + "_E"+ exceps;
          final String basename="_base";
          SNode basecls=SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).findFirst(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return basename.equals(SPropertyOperations.getString(it,"name"));
            }
          }
),"jetbrains.mps.baseLanguage.structure.ClassConcept");
          final String iname="_void_terminate" + "_P" + params + "_E"+ exceps;
          SNode iifc=SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(ListSequence.fromList(SModelOperations.getRoots(SNodeOperations.getModel(node),"jetbrains.mps.baseLanguage.structure.ClassConcept")).findFirst(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return "_UnrestrictedFunctionTypes".equals(SPropertyOperations.getString(it,"name"));
            }
          }
),"staticInnerClassifiers",true)).findFirst(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return iname.equals(SPropertyOperations.getString(it,"name"));
            }
          }
),"jetbrains.mps.baseLanguage.structure.Interface");
          List<SNode> iifcParams=new ArrayList<SNode>();
          ListSequence.fromList(iifcParams).addSequence(ListSequence.fromList(tvds).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return _quotation_createNode_awiph7_a0a0a0a0w0b0b0a7(it);
            }
          }
));
          SNode cls=ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).addElement(_quotation_createNode_awiph7_a0a0y0b0b0a7(iifcParams,iifc,pdecls,prefs,retVal,retVal,retVal,exdecls,iifcParams,iifc,iifcParams,iifc,t,basecls,tvds,name));
          SPropertyOperations.set(cls,"nonStatic","" + (false));
          ListSequence.fromList(excepTypeVars).addElement(_quotation_createNode_awiph7_a0a72a1a1a0h("E" + (exceps + 1)));
        }
        ListSequence.fromList(paramTypeVars).addElement(_quotation_createNode_awiph7_a0a2a1a0h("P" + (params + 1)));
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "_UnrestrictedClosures";
    }
    public String getAdditionalInfo(){
      return "_UnrestrictedClosures";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassConcept";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return "jetbrains.mps.baseLanguage.closures.runtime._UnrestrictedClosures".equals(NameUtil.nodeFQName(node)) && !(ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SPropertyOperations.getString(it,"name").startsWith("_return_void");
        }
      }
));
    }
    public void doUpdateInstanceNode(    SNode node){
      List<SNode> paramTypeVars=new ArrayList<SNode>();
      for (int params=0; params <= Constants.MAX_CLOSURE_PARAMETERS; params++) {
        List<SNode> excepTypeVars=new ArrayList<SNode>();
        for (int exceps=0; exceps <= Constants.MAX_CLOSURE_EXCEPTIONS; exceps++) {
          List<SNode> tvds=new ArrayList<SNode>();
          ListSequence.fromList(tvds).addElement(_quotation_createNode_awiph7_a0a1a1a1a0i());
          SNode r=_quotation_createNode_awiph7_a0c0b0b0a8(ListSequence.fromList(tvds).last());
          SNode retVal=_quotation_createNode_awiph7_a0d0b0b0a8(r);
          ListSequence.fromList(tvds).addSequence(ListSequence.fromList(paramTypeVars).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SNodeOperations.copyNode(it);
            }
          }
));
          List<SNode> pdecls=new ArrayList<SNode>();
          ListSequence.fromList(pdecls).addSequence(ListSequence.fromList(tvds).skip(1).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              SNode tr=_quotation_createNode_awiph7_a0a0a0a0a7a1a1a0i(it);
              return _quotation_createNode_awiph7_a1a0a0a0h0b0b0a8(tr,SPropertyOperations.getString(it,"name").toLowerCase());
            }
          }
));
          List<SNode> prefs=new ArrayList<SNode>();
          ListSequence.fromList(prefs).addSequence(ListSequence.fromList(pdecls).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return _quotation_createNode_awiph7_a0a0a0a0j0b0b0a8(it);
            }
          }
));
          ListSequence.fromList(tvds).addSequence(ListSequence.fromList(excepTypeVars).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SNodeOperations.copyNode(it);
            }
          }
));
          List<SNode> exdecls=new ArrayList<SNode>();
          ListSequence.fromList(exdecls).addSequence(ListSequence.fromList(tvds).skip(ListSequence.fromList(paramTypeVars).count() + 1).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return _quotation_createNode_awiph7_a0a0a0a0n0b0b0a8(it);
            }
          }
));
          String name="_return_void" + "_P" + params + "_E"+ exceps;
          final String basename="_base";
          SNode basecls=SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).findFirst(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return basename.equals(SPropertyOperations.getString(it,"name"));
            }
          }
),"jetbrains.mps.baseLanguage.structure.ClassConcept");
          final String iname="_return_void" + "_P" + params + "_E"+ exceps;
          SNode iifc=SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(ListSequence.fromList(SModelOperations.getRoots(SNodeOperations.getModel(node),"jetbrains.mps.baseLanguage.structure.ClassConcept")).findFirst(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return "_UnrestrictedFunctionTypes".equals(SPropertyOperations.getString(it,"name"));
            }
          }
),"staticInnerClassifiers",true)).findFirst(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return iname.equals(SPropertyOperations.getString(it,"name"));
            }
          }
),"jetbrains.mps.baseLanguage.structure.Interface");
          List<SNode> iifcParams=new ArrayList<SNode>();
          ListSequence.fromList(iifcParams).addSequence(ListSequence.fromList(tvds).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return _quotation_createNode_awiph7_a0a0a0a0w0b0b0a8(it);
            }
          }
));
          SNode cls=ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).addElement(_quotation_createNode_awiph7_a0a0y0b0b0a8(iifcParams,iifc,pdecls,prefs,retVal,retVal,retVal,exdecls,iifcParams,iifc,iifcParams,iifc,r,basecls,tvds,name));
          SPropertyOperations.set(cls,"nonStatic","" + (false));
          ListSequence.fromList(excepTypeVars).addElement(_quotation_createNode_awiph7_a0a72a1a1a0i("E" + (exceps + 1)));
        }
        ListSequence.fromList(paramTypeVars).addElement(_quotation_createNode_awiph7_a0a2a1a0i("P" + (params + 1)));
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "_UnrestrictedClosures";
    }
    public String getAdditionalInfo(){
      return "_UnrestrictedClosures";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassConcept";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return "jetbrains.mps.baseLanguage.closures.runtime._UnrestrictedClosures".equals(NameUtil.nodeFQName(node)) && !(ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SPropertyOperations.getString(it,"name").startsWith("_void_void");
        }
      }
));
    }
    public void doUpdateInstanceNode(    SNode node){
      List<SNode> paramTypeVars=new ArrayList<SNode>();
      for (int params=0; params <= Constants.MAX_CLOSURE_PARAMETERS; params++) {
        List<SNode> excepTypeVars=new ArrayList<SNode>();
        for (int exceps=0; exceps <= Constants.MAX_CLOSURE_EXCEPTIONS; exceps++) {
          List<SNode> tvds=new ArrayList<SNode>();
          SNode retVal=_quotation_createNode_awiph7_a0b0b0b0a9();
          ListSequence.fromList(tvds).addSequence(ListSequence.fromList(paramTypeVars).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SNodeOperations.copyNode(it);
            }
          }
));
          List<SNode> pdecls=new ArrayList<SNode>();
          ListSequence.fromList(pdecls).addSequence(ListSequence.fromList(tvds).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              SNode tr=_quotation_createNode_awiph7_a0a0a0a0a5a1a1a0j(it);
              return _quotation_createNode_awiph7_a1a0a0a0f0b0b0a9(tr,SPropertyOperations.getString(it,"name").toLowerCase());
            }
          }
));
          List<SNode> prefs=new ArrayList<SNode>();
          ListSequence.fromList(prefs).addSequence(ListSequence.fromList(pdecls).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return _quotation_createNode_awiph7_a0a0a0a0h0b0b0a9(it);
            }
          }
));
          ListSequence.fromList(tvds).addSequence(ListSequence.fromList(excepTypeVars).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SNodeOperations.copyNode(it);
            }
          }
));
          List<SNode> exdecls=new ArrayList<SNode>();
          ListSequence.fromList(exdecls).addSequence(ListSequence.fromList(tvds).skip(ListSequence.fromList(paramTypeVars).count()).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return _quotation_createNode_awiph7_a0a0a0a0l0b0b0a9(it);
            }
          }
));
          String name="_void_void" + "_P" + params + "_E"+ exceps;
          final String basename="_base";
          SNode basecls=SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).findFirst(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return basename.equals(SPropertyOperations.getString(it,"name"));
            }
          }
),"jetbrains.mps.baseLanguage.structure.ClassConcept");
          final String iname="_void_void" + "_P" + params + "_E"+ exceps;
          SNode iifc=SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(ListSequence.fromList(SModelOperations.getRoots(SNodeOperations.getModel(node),"jetbrains.mps.baseLanguage.structure.ClassConcept")).findFirst(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return "_UnrestrictedFunctionTypes".equals(SPropertyOperations.getString(it,"name"));
            }
          }
),"staticInnerClassifiers",true)).findFirst(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return iname.equals(SPropertyOperations.getString(it,"name"));
            }
          }
),"jetbrains.mps.baseLanguage.structure.Interface");
          List<SNode> iifcParams=new ArrayList<SNode>();
          ListSequence.fromList(iifcParams).addSequence(ListSequence.fromList(tvds).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return _quotation_createNode_awiph7_a0a0a0a0u0b0b0a9(it);
            }
          }
));
          SNode cls=ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).addElement(_quotation_createNode_awiph7_a0a0w0b0b0a9(iifcParams,iifc,pdecls,prefs,retVal,retVal,retVal,exdecls,iifcParams,iifc,iifcParams,iifc,basecls,tvds,name));
          SPropertyOperations.set(cls,"nonStatic","" + (false));
          ListSequence.fromList(excepTypeVars).addElement(_quotation_createNode_awiph7_a0a52a1a1a0j("E" + (exceps + 1)));
        }
        ListSequence.fromList(paramTypeVars).addElement(_quotation_createNode_awiph7_a0a2a1a0j("P" + (params + 1)));
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
