{
  SNode quotedNode_8=null;
  SNode quotedNode_9=null;
  SNode quotedNode_10=null;
  SNode quotedNode_11=null;
  SNode quotedNode_12=null;
  SNode quotedNode_13=null;
  SNode quotedNode_14=null;
  SNode quotedNode_15=null;
  SNode quotedNode_16=null;
  SNode quotedNode_17=null;
  SNode quotedNode_18=null;
  SNode quotedNode_19=null;
  SNode quotedNode_20=null;
  SNode quotedNode_21=null;
  quotedNode_8=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.Interface",null,null,GlobalScope.getInstance(),false);
  quotedNode_8.setProperty("nonStatic","true");
  quotedNode_8.setProperty("name",(String)parameter_7);
  quotedNode_9=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",null,null,GlobalScope.getInstance(),false);
  quotedNode_9.setReferenceTarget("classifier",(SNode)parameter_2);
  quotedNode_13=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",null,null,GlobalScope.getInstance(),false);
  quotedNode_13.setReference("classifier",SReference.create("classifier",quotedNode_13,SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"),SNodeId.fromString("~Object")));
  quotedNode_9.addChild("parameter",quotedNode_13);
  quotedNode_14=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",null,null,GlobalScope.getInstance(),false);
  quotedNode_14.setReference("classifier",SReference.create("classifier",quotedNode_14,SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"),SNodeId.fromString("~Object")));
  quotedNode_9.addChild("parameter",quotedNode_14);
{
    List<SNode> nodes=(List<SNode>)parameter_1;
    for (    SNode child : nodes) {
      quotedNode_9.addChild("parameter",HUtil.copyIfNecessary(child));
    }
  }
  quotedNode_8.addChild("extendedInterface",quotedNode_9);
  quotedNode_10=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration",null,null,GlobalScope.getInstance(),false);
  quotedNode_10.setProperty("isAbstract","true");
  quotedNode_10.setProperty("name","invokeUnrestricted");
{
    List<SNode> nodes=(List<SNode>)parameter_3;
    for (    SNode child : nodes) {
      quotedNode_10.addChild("parameter",HUtil.copyIfNecessary(child));
    }
  }
  quotedNode_17=(SNode)parameter_4;
  if (quotedNode_17 != null) {
    quotedNode_10.addChild("returnType",HUtil.copyIfNecessary(quotedNode_17));
  }
  quotedNode_18=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PublicVisibility",null,null,GlobalScope.getInstance(),false);
  quotedNode_10.addChild("visibility",quotedNode_18);
  quotedNode_19=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList",null,null,GlobalScope.getInstance(),false);
  quotedNode_10.addChild("body",quotedNode_19);
{
    List<SNode> nodes=(List<SNode>)parameter_5;
    for (    SNode child : nodes) {
      quotedNode_10.addChild("throwsItem",HUtil.copyIfNecessary(child));
    }
  }
  quotedNode_8.addChild("method",quotedNode_10);
  quotedNode_11=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PublicVisibility",null,null,GlobalScope.getInstance(),false);
  quotedNode_8.addChild("visibility",quotedNode_11);
{
    List<SNode> nodes=(List<SNode>)parameter_6;
    for (    SNode child : nodes) {
      quotedNode_8.addChild("typeVariableDeclaration",HUtil.copyIfNecessary(child));
    }
  }
  return quotedNode_8;
}
