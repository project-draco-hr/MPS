{
  try {
{
      ITarget.Name name=new ITarget.Name("jetbrains.mps.lang.core.TextGen.configure");
      TextGen_Facet.Target_configure.Parameters props=properties.properties(name,TextGen_Facet.Target_configure.Parameters.class);
      if (MapSequence.fromMap(store).containsKey("jetbrains.mps.lang.core.TextGen.configure.makeSession")) {
        props.makeSession(null);
      }
    }
{
      ITarget.Name name=new ITarget.Name("jetbrains.mps.lang.core.TextGen.textGen");
      TextGen_Facet.Target_textGen.Parameters props=properties.properties(name,TextGen_Facet.Target_textGen.Parameters.class);
      if (MapSequence.fromMap(store).containsKey("jetbrains.mps.lang.core.TextGen.textGen.failIfNoTextgen")) {
        props.failIfNoTextgen(Boolean.valueOf(MapSequence.fromMap(store).get("jetbrains.mps.lang.core.TextGen.textGen.failIfNoTextgen")));
      }
      if (MapSequence.fromMap(store).containsKey("jetbrains.mps.lang.core.TextGen.textGen.generateDebugInfo")) {
        props.generateDebugInfo(Boolean.valueOf(MapSequence.fromMap(store).get("jetbrains.mps.lang.core.TextGen.textGen.generateDebugInfo")));
      }
    }
  }
 catch (  RuntimeException re) {
  }
}
