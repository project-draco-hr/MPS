{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(-3186960361546692645l,-5977911984495255467l),4504141816188599479l,4504141816188599488l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(-3186960361546692645l,-5977911984495255467l),4504141816188599479l,4504141816188599488l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return new ModelAndImportedModelsScope(_context.getModel(),true);
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_d3a0zo_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
