{
  super(context,state,debugSession);
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      SLinkOperations.setNewChild(myEvaluator,"evaluatedStatement","jetbrains.mps.baseLanguage.structure.BlockStatement");
      SLinkOperations.setNewChild(SLinkOperations.getTarget(myEvaluator,"evaluatedStatement",true),AttributesRolesUtil.childRoleFromAttributeRole("toEvaluateAnnotation"),"jetbrains.mps.debug.evaluation.structure.ToEvaluateAnnotation");
    }
  }
);
  ModelAccess.instance().runWriteAction(new Runnable(){
    public void run(){
      IClassPathItem cpItem=getLocationModel().getModelDescriptor().getModule().getClassPathItem();
      cpItem.accept(new EachClassPathItemVisitor(){
        @Override public void visit(        JarFileClassPathItem item){
          getModule().addStubPath(item.getFile().getAbsolutePath());
        }
        @Override public void visit(        FileClassPathItem item){
          getModule().addStubPath(item.getClassPath());
        }
      }
);
      StubReloadManager.getInstance().reload();
    }
  }
);
}
