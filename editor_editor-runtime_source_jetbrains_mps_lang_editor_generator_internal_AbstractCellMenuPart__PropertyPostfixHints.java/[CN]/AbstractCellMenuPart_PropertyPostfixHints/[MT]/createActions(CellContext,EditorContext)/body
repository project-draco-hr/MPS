{
  SNode node=(SNode)cellContext.get(PropertyCellContext.EDITED_NODE);
  final SNode property=(SNode)cellContext.get(PropertyCellContext.PROPERTY_DECLARATION);
  if (property == null) {
    return Collections.emptyList();
  }
  final IOperationContext context=editorContext.getOperationContext();
  List<INodeSubstituteAction> actions=new LinkedList<INodeSubstituteAction>();
  List<String> postfixes=getPostfixes(node,context.getScope(),context);
  if (postfixes == null) {
    postfixes=new ArrayList<String>();
  }
  for (int i=0; i < postfixes.size(); ) {
    if (postfixes.get(i) == null) {
      LOG.error("Invalid postfix value (null) was returned from: " + this.getClass() + "; getPostfixes() method");
      postfixes.remove(i);
    }
 else {
      i++;
    }
  }
  final PostfixGroup postfixGroup=new PostfixGroup(postfixes);
  final PropertySupport propertySupport=PropertySupport.getPropertySupport(property);
  for (  final String postfix : postfixes) {
    actions.add(new PostfixSubstituteAction(postfix,node,postfixGroup,propertySupport,property.getName(),context.getScope(),editorContext));
  }
  return (List)actions;
}
