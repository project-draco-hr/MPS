{
  XmlFastScanner scanner=new XmlFastScanner(content);
  int deep=0, token, rootStart=-1;
  String rootId=null;
  boolean firstNode=true;
  while ((token=scanner.next()) != XmlFastScanner.EOI) {
switch (token) {
case XmlFastScanner.OPEN_TAG:
      deep++;
    if (deep == 2 && ModelPersistence.NODE.equals(scanner.getName())) {
      rootStart=scanner.getTokenOffset();
      rootId=extractId(scanner.token());
      if (rootId != null && firstNode) {
        rootHashes.put(HEADER,hash(scanner.getText(0,rootStart)));
        firstNode=false;
      }
    }
  break;
case XmlFastScanner.SIMPLE_TAG:
if (deep == 1 && ModelPersistence.NODE.equals(scanner.getName())) {
  rootId=extractId(scanner.token());
  if (rootId != null) {
    String s=scanner.getText(scanner.getTokenOffset(),scanner.getOffset());
    rootHashes.put(rootId,hash(s));
  }
}
break;
case XmlFastScanner.CLOSE_TAG:
if (deep == 2) {
if (rootId != null && ModelPersistence.NODE.equals(scanner.getName())) {
String s=scanner.getText(rootStart,scanner.getOffset());
rootHashes.put(rootId,hash(s));
}
rootStart=-1;
rootId=null;
}
deep--;
break;
}
}
if (deep != 0) {
LOG.error("xml: bad data");
}
if (firstNode) {
rootHashes.put(HEADER,ModelDigestIndex.hash(content));
}
}
