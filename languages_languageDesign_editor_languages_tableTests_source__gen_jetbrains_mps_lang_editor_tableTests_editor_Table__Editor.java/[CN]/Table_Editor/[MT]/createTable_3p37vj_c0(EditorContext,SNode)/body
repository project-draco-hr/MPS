{
  TableModelFactory creator=new TableModelFactory(){
    public TableModel createTableModel(    final SNode node,    final EditorContext editorContext){
      return new AbstractTableModel(){
        @Override public SNode getValueAt(        int row,        int column){
          return ListSequence.fromList(SLinkOperations.getTargets(ListSequence.fromList(SLinkOperations.getTargets(node,"rows",true)).getElement(row),"cells",true)).getElement(column);
        }
        @Override public int getRowCount(){
          return ListSequence.fromList(SLinkOperations.getTargets(node,"rows",true)).count();
        }
        @Override public int getColumnCount(){
          return ListSequence.fromList(SLinkOperations.getTargets(ListSequence.fromList(SLinkOperations.getTargets(node,"rows",true)).first(),"cells",true)).count();
        }
        @Override public void deleteRow(        int rowNumber){
          ListSequence.fromList(SLinkOperations.getTargets(node,"rows",true)).removeElementAt(rowNumber);
        }
        @Override public void insertRow(        int rowNumber){
          SNode rowNode=SNodeFactoryOperations.createNewNode("jetbrains.mps.lang.editor.tableTests.structure.Row",null);
          for (int i=0; i < ListSequence.fromList(SLinkOperations.getTargets(ListSequence.fromList(SLinkOperations.getTargets(node,"rows",true)).first(),"cells",true)).count(); i++) {
            ListSequence.fromList(SLinkOperations.getTargets(rowNode,"cells",true)).addElement(SNodeFactoryOperations.createNewNode("jetbrains.mps.lang.editor.tableTests.structure.DataCell",null));
          }
          ListSequence.fromList(SLinkOperations.getTargets(node,"rows",true)).insertElement(rowNumber,rowNode);
        }
        @Override public void deleteColumn(        int columnNumber){
          for (          SNode row : ListSequence.fromList(SLinkOperations.getTargets(node,"rows",true))) {
            ListSequence.fromList(SLinkOperations.getTargets(row,"cells",true)).removeElementAt(columnNumber);
          }
        }
        @Override public void insertColumn(        int columnNumber){
          for (          SNode row : ListSequence.fromList(SLinkOperations.getTargets(node,"rows",true))) {
            ListSequence.fromList(SLinkOperations.getTargets(row,"cells",true)).insertElement(columnNumber,SNodeFactoryOperations.createNewNode("jetbrains.mps.lang.editor.tableTests.structure.DataCell",null));
          }
        }
      }
;
    }
  }
;
  jetbrains.mps.openapi.editor.cells.EditorCell_Collection editorCell=EditorCell_Table.createTable(editorContext,node,creator.createTableModel(node,editorContext),"Table_3p37vj_c0");
  editorCell.setCellId("Table_3p37vj_c0_0");
  Style style=new StyleImpl();
  style.set(StyleAttributes.INDENT_LAYOUT_INDENT,true);
  editorCell.getStyle().putAll(style);
  return editorCell;
}
