{
  if (myTrait == null) {
    myTrait=new ViewTraitBuilder().on(ViewEvents.MOUSE_PRESSED,new ViewEventHandler<MouseEvent>(){
      public void handle(      View view,      MouseEvent event){
        if (view.viewAt(event.location()) != view) {
          return;
        }
        if (!(view.focused().get())) {
          view.container().focusedView().set(view);
        }
        myX=event.x();
        myY=event.y();
        final boolean[] result=new boolean[]{false};
        myEditorContext.getRepository().getModelAccess().runReadAction(new Runnable(){
          public void run(){
            result[0]=mySubstituteAction.canSubstitute("");
          }
        }
);
        if (!(result[0])) {
          return;
        }
        ProjectModelAccess.instance().executeCommand(new Runnable(){
          public void run(){
            mySubstituteAction.substitute(myEditorContext,"");
          }
        }
,myEditorContext.getOperationContext().getProject());
        event.consume();
      }
    }
).build();
  }
  return myTrait;
}
