{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("org.jetbrains.mps.samples.Constants.structure.Constant","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{"initializer"},new boolean[]{false},false,false,"","","");
case 1:
  return new CompiledConceptDescriptor("org.jetbrains.mps.samples.Constants.structure.ConstantReference","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"original"},new String[]{},new boolean[]{},false,false,"","","");
case 2:
return new CompiledConceptDescriptor("org.jetbrains.mps.samples.Constants.structure.Constants","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.ScopeProvider"},new String[]{},new String[]{},new String[]{"constants"},new boolean[]{true},false,false,"","","");
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
