{
  Color backgroundColor;
  Color textColor;
  Color textBackgroundColor;
  backgroundColor=getBackgroundColor();
  if (forcedTextColor != null) {
    textColor=forcedTextColor;
    textBackgroundColor=null;
  }
 else {
    if (mySelected) {
      textColor=getEffectiveSelectedTextColor();
      textBackgroundColor=getSelectedTextBackgroundColor();
    }
 else {
      textColor=getEffectiveTextColor();
      textBackgroundColor=getTextBackgroundColor();
    }
  }
  if (backgroundColor != null && !g.getColor().equals(backgroundColor) && !mySelected) {
    g.setColor(backgroundColor);
    g.fillRect(shiftX + getPaddingLeft(),shiftY + getPaddingTop(),myWidth,myTextHeight);
  }
  if (textBackgroundColor != null) {
    g.setColor(textBackgroundColor);
    g.fillRect(shiftX + getPaddingLeft(),shiftY + getPaddingTop(),myWidth,myTextHeight);
  }
  g.setFont(getFont());
  if (!g.getColor().equals(textColor)) {
    g.setColor(textColor);
  }
  int selectionStartX=shiftX + getPaddingLeft() + getSelectionStartX();
  int selectionEndX=shiftX + getPaddingLeft() + getSelectionEndX();
  int endLineX=shiftX + getPaddingLeft() + getTextEndX();
  int baselineY=shiftY + myHeight - myDescent - getPaddingBottom() - getPaddingTop();
  int centerLineY=shiftY + (myHeight - getPaddingBottom() + getPaddingTop()) / 2;
  if (getStartTextSelectionPosition() > 0) {
    g.drawString(myText.substring(0,getStartTextSelectionPosition()),shiftX + getPaddingLeft(),baselineY);
    if (isUnderlined()) {
      g.drawLine(shiftX + getPaddingLeft(),baselineY + 1,selectionStartX,baselineY + 1);
    }
    if (isStrikeOut()) {
      drawStrikeOutLine(g,shiftX + getPaddingLeft(),selectionStartX,centerLineY);
    }
  }
  if (getEndTextSelectionPosition() <= myText.length()) {
    g.drawString(myText.substring(getEndTextSelectionPosition()),selectionEndX,baselineY);
    if (isUnderlined()) {
      g.drawLine(selectionEndX,baselineY + 1,endLineX,baselineY + 1);
    }
    if (isStrikeOut()) {
      drawStrikeOutLine(g,selectionEndX,endLineX,centerLineY);
    }
  }
  if (getStartTextSelectionPosition() < getEndTextSelectionPosition()) {
    String selectedText=getTextuallySelectedText();
    g.setColor(myTextSelectedBackgroundColor);
    if (selectionEndX - selectionStartX - 2 > 0) {
      g.fillRect(selectionStartX + 1,shiftY + getPaddingTop() + 1,selectionEndX - selectionStartX - 2,myTextHeight - 2);
    }
    g.setColor(myTextSelectedTextColor != null ? myTextSelectedTextColor : getTextColor());
    g.drawString(selectedText,selectionStartX,baselineY);
    if (isUnderlined()) {
      g.drawLine(selectionStartX,baselineY + 1,selectionEndX,baselineY + 1);
    }
    if (isStrikeOut()) {
      drawStrikeOutLine(g,selectionStartX,selectionEndX,centerLineY);
    }
    g.setColor(textColor);
  }
  if (myShowCaret) {
    drawCaret(g,shiftX,shiftY);
  }
}
