{
  return new IJob.Stub(){
    public IResult execute(    final Iterable<IResource> input,    final IJobMonitor monitor,    final IPropertiesAccessor pa){
      Iterable<IResource> _output_kf1bs5_a0a=null;
switch (0) {
case 0:
        for (        IResource resource : input) {
          MResource mres=(MResource)resource;
          String paramVal=pa.forResource(mres).properties(Target_readParams.this.getName(),Sample_Facet.Target_readParams.Parameters.class).SomeParam();
          Integer countVal=pa.forResource(mres).properties(Target_readParams.this.getName(),Sample_Facet.Target_readParams.Parameters.class).Count();
          for (          SModelDescriptor smd : mres.models()) {
            if (paramVal != null) {
              pa.global().properties(new ITarget.Name("jetbrains.mps.lang.core.Generate.configure"),Variables.class).parametersProvider().addParameter(smd,"sample.parameter",paramVal);
            }
            if (countVal != null) {
              pa.global().properties(new ITarget.Name("jetbrains.mps.lang.core.Generate.configure"),Variables.class).parametersProvider().addParameter(smd,"count",countVal);
            }
          }
        }
      pa.global().properties(new ITarget.Name("jetbrains.mps.lang.core.Generate.configure"),Variables.class).parametersProvider().addParameter("count",100500);
default :
    return new IResult.SUCCESS(_output_kf1bs5_a0a);
}
}
}
;
}
