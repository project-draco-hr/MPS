{
  myBaseNode=baseNode;
  myPossibleTabs=possibleTabs;
  myEditor=editor;
  myCallback=callback;
  myShowGrayed=showGrayed;
  myAddAction=new AddAspectAction(myBaseNode,myPossibleTabs,myCallback){
    protected SNode getCurrentAspect(){
      return getLastNode().getNode();
    }
  }
;
  myComponent=new JPanel(new BorderLayout());
  myComponent.registerKeyboardAction(new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          prevTab();
        }
      }
);
    }
  }
,KeyStroke.getKeyStroke("ctrl alt shift LEFT"),JComponent.WHEN_IN_FOCUSED_WINDOW);
  myComponent.registerKeyboardAction(new AbstractAction(){
    public void actionPerformed(    ActionEvent e){
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          nextTab();
        }
      }
);
    }
  }
,KeyStroke.getKeyStroke("ctrl alt shift RIGHT"),JComponent.WHEN_IN_FOCUSED_WINDOW);
  addListeners();
}
