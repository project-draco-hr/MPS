{
  this.myOperations=oper;
  if (m1 == null || m2 == null) {
    if (m1 == null && m2 == null) {
      throw new IllegalArgumentException();
    }
    Matrix r=(m1 == null ? m2 : m1);
    myRows=r.myRows;
    myColumns=r.myColumns;
    myCarrier=new Object[myRows][myColumns];
    for (int i=0; i < myRows; i++) {
      System.arraycopy(r.myCarrier[i],0,myCarrier[i],0,myColumns);
    }
    return;
  }
  if (action == MatrixOperation.MatrixAdd) {
    myRows=m1.myRows;
    myColumns=m1.myColumns;
    if (m1.myColumns != m2.myColumns || m1.myRows != m2.myRows) {
      throw new IllegalArgumentException();
    }
    this.myCarrier=new Object[myRows][myColumns];
    for (int i=0; i < myRows; i++) {
      for (int j=0; j < myColumns; j++) {
        myCarrier[i][j]=oper.add(m1.get(i,j),m2.get(i,j));
      }
    }
  }
 else   if (action == MatrixOperation.MatrixSub) {
    myRows=m1.myRows;
    myColumns=m1.myColumns;
    if (m1.myColumns != m2.myColumns || m1.myRows != m2.myRows) {
      throw new IllegalArgumentException();
    }
    this.myCarrier=new Object[myRows][myColumns];
    for (int i=0; i < myRows; i++) {
      for (int j=0; j < myColumns; j++) {
        myCarrier[i][j]=oper.add(m1.get(i,j),oper.neg(m2.get(i,j)));
      }
    }
  }
 else   if (action == MatrixOperation.MatrixMul) {
    if (m1.columnsCount() != m2.rowsCount()) {
      throw new IndexOutOfBoundsException();
    }
    myRows=m1.rowsCount();
    myColumns=m2.columnsCount();
    this.myCarrier=new Object[myRows][myColumns];
    Object zero=oper.cast((short)0);
    for (int i=0; i < myRows; i++) {
      for (int j=0; j < myColumns; j++) {
        Object result=zero;
        for (int k=0; k < m1.columnsCount(); k++) {
          result=oper.add(result,oper.mul(oper.cast(m1.get(i,k)),oper.cast(m2.get(k,j))));
        }
        myCarrier[i][j]=result;
      }
    }
  }
}
