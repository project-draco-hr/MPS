{
  if (aux != null && aux.myRows != this.myRows) {
    throw new IndexOutOfBoundsException();
  }
  Object zero=oper.cast(0);
  Object unit=oper.cast(1);
  Matrix result=new Matrix<Object>(myCarrier,oper);
  for (int i=0; i < myColumns; i++) {
    if ((result.get(i,i).equals(zero))) {
      boolean flag=false;
      for (int j=i + 1; j < myRows; j++) {
        if (!((result.get(j,i).equals(zero)))) {
          if (aux != null) {
            aux.addRow(j,i,unit);
          }
          result.addRow(j,i,unit);
          flag=true;
          break;
        }
      }
      if (!(flag)) {
        throw new ArithmeticException();
      }
    }
    Object o=oper.inv(result.get(i,i));
    for (int j=i + 1; j < myRows; j++) {
      Object c=oper.neg(oper.mul(result.get(j,i),o));
      if (aux != null) {
        aux.addRow(i,j,c);
      }
      result.addRow(i,j,c);
    }
  }
  return result;
}
