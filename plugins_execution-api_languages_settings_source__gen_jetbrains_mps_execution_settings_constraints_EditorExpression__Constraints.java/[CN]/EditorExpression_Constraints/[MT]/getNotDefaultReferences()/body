{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("persistentPropertyDeclaration",new BaseReferenceConstraintsDescriptor("persistentPropertyDeclaration",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return ListSequence.fromList(PersistentConfiguration_Behavior.getContextPersistentProperties_946964771156066434(_context.getEnclosingNode())).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return TypeChecker.getInstance().getSubtypingManager().isSubtype(SLinkOperations.getTarget(it,"type",true),_quotation_createNode_lq9qwe_b0a0a0a0a0a0());
            }
          }
);
        }
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_lq9qwe_a0a1a0a0a1a0b0a1a2;
        }
      }
;
    }
  }
);
  return references;
}
