{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(8461860300379867720l,-4758718422494514628l),946964771156066588l,946964771156066589l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(8461860300379867720l,-4758718422494514628l),946964771156066588l,946964771156066589l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return ListSequence.fromList(PersistentConfiguration_Behavior.call_getContextPersistentProperties_946964771156066434(SNodeOperations.asSConcept(SConceptOperations.findConceptDeclaration("jetbrains.mps.execution.settings.structure.PersistentConfiguration")),_context.getEnclosingNode())).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return TypeChecker.getInstance().getSubtypingManager().isSubtype(SLinkOperations.getTarget(it,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type")),_quotation_createNode_lq9qwe_b0a0a0a0a0a0());
            }
          }
);
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_lq9qwe_a0a1a0a0a1a0b0a1a3;
        }
      }
;
    }
  }
);
  return references;
}
