{
  SNode container=SNodeOperations.getAncestorWhereConceptInList(enclosingNode,new String[]{"jetbrains.mps.uiLanguage.structure.ComponentController","jetbrains.mps.uiLanguage.structure.ComponentDeclaration"},true,false);
  SNode componentDeclaration=null;
  if (SNodeOperations.isInstanceOf(container,"jetbrains.mps.uiLanguage.structure.ComponentController")) {
    componentDeclaration=SLinkOperations.getTarget(container,"component",false);
  }
  if (SNodeOperations.isInstanceOf(container,"jetbrains.mps.uiLanguage.structure.ComponentDeclaration")) {
    componentDeclaration=container;
  }
  List<SNode> result=new ArrayList<SNode>();
  if (componentDeclaration != null) {
    ListOperations.addAllElements(result,SequenceOperations.where(SNodeOperations.getDescendants(componentDeclaration,"jetbrains.mps.uiLanguage.structure.ComponentInstance",false),new zPredicate2(null,null)));
  }
  return new SimpleSearchScope(result);
}
