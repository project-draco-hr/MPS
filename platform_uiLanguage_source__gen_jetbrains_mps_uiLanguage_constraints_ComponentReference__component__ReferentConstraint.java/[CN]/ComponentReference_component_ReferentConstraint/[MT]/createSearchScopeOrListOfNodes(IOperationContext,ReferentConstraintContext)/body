{
  SNode container=SNodeOperations.getAncestorWhereConceptInList(_context.getEnclosingNode(),new String[]{"jetbrains.mps.uiLanguage.structure.ComponentController","jetbrains.mps.uiLanguage.structure.ComponentDeclaration"},true,false);
  SNode componentDeclaration=null;
  if (SNodeOperations.isInstanceOf(container,"jetbrains.mps.uiLanguage.structure.ComponentController")) {
    componentDeclaration=SLinkOperations.getTarget(container,"component",false);
  }
  if (SNodeOperations.isInstanceOf(container,"jetbrains.mps.uiLanguage.structure.ComponentDeclaration")) {
    componentDeclaration=container;
  }
  List<SNode> result=ListOperations.<SNode>createList();
  if (componentDeclaration != null) {
    ListSequence.fromList(result).addSequence(ListSequence.fromList(SNodeOperations.getDescendants(componentDeclaration,"jetbrains.mps.uiLanguage.structure.ComponentInstance",false)).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SPropertyOperations.getString(it,"name") != null;
      }
    }
));
  }
  return result;
}
