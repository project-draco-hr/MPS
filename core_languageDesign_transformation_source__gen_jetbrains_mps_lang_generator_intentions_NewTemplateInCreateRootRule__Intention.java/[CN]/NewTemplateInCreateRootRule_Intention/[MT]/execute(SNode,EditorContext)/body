{
  final Wrappers._T<String> name=new Wrappers._T<String>(CreateFromUsageUtil.getText(editorContext));
  if (name.value == null || name.value.length() == 0) {
    name.value="_name_";
  }
  final SNode rule=node;
  CreateFromUsageUtil.showCreateNewRootMenu(editorContext,new Condition<SNode>(){
    public boolean met(    SNode c){
      if (SConceptOperations.isExactly(c,"jetbrains.mps.lang.generator.structure.TemplateSwitch")) {
        return false;
      }
      if (SConceptOperations.isExactly(c,"jetbrains.mps.lang.generator.structure.MappingConfiguration")) {
        return false;
      }
      if (SConceptOperations.isExactly(c,"jetbrains.mps.lang.generator.structure.TemplateDeclaration")) {
        return false;
      }
      if (SConceptOperations.isExactly(c,"jetbrains.mps.lang.generator.structure.MappingScript")) {
        return false;
      }
      return true;
    }
  }
,new Setter<SNode>(){
    public void set(    SNode root){
      if (!(SNodeOperations.isInstanceOf(root,"jetbrains.mps.lang.core.structure.INamedConcept"))) {
        return;
      }
      SPropertyOperations.set(root,"name",name.value);
      SLinkOperations.setTarget(rule,"templateNode",root,false);
    }
  }
);
}
