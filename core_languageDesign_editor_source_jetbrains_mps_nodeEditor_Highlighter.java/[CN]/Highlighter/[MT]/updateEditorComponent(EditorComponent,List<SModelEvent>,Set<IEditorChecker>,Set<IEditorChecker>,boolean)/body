{
  return runUpdateMessagesAction(new Computable<Boolean>(){
    public Boolean compute(){
      final SNode editedNode=component.getEditedNode();
      if (editedNode != null) {
        final Set<IEditorChecker> checkersToRecheck=new LinkedHashSet<IEditorChecker>();
        boolean wasCheckedOnce=wasCheckedOnce(component);
        if (!wasCheckedOnce) {
          checkersToRecheck.addAll(checkers);
        }
 else {
          ModelAccess.instance().runReadAction(new Runnable(){
            public void run(){
              for (              IEditorChecker checker : checkers) {
                if (checker.hasDramaticalEvent(events)) {
                  checkersToRecheck.add(checker);
                }
              }
            }
          }
);
        }
        if (checkersToRecheck.isEmpty()) {
          return false;
        }
        List<IEditorChecker> checkersToRecheckList=new ArrayList<IEditorChecker>(checkersToRecheck);
        Collections.sort(checkersToRecheckList,new PriorityComparator());
        boolean hackCheckedOnce=wasCheckedOnce;
        if (component instanceof InspectorEditorComponent) {
          hackCheckedOnce=true;
          myCheckedOnceInspectors.add(((InspectorEditorComponent)component).getInspectionSessionId());
        }
 else {
          myCheckedOnceEditors.add(component);
        }
        if (updateEditor(component,events,hackCheckedOnce,checkersToRecheckList,checkersToRemove,currentEditorMessagesChanged)) {
          return true;
        }
      }
      return false;
    }
  }
);
}
