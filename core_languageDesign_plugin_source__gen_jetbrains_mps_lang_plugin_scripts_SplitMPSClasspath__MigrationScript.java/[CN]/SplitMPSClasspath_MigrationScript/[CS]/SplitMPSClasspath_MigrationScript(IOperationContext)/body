{
  super("Split MPS.Classpath Stubs");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPS.Classpath -> MPS.Core / .Editor / .Workbench";
    }
    public String getAdditionalInfo(){
      return "MPS.Classpath -> MPS.Core / .Editor / .Workbench";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.core.structure.BaseConcept";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return ListSequence.fromList(SNodeOperations.getReferences(node)).where(new IWhereFilter<SReference>(){
        public boolean accept(        SReference it){
          return check_ylpn3n_a0a0a0a0a0a0a(check_ylpn3n_a0a0a0a0a0a0a0(SNodeOperations.getModel(SLinkOperations.getTargetNode(it)))) == MPSModuleRepository.getInstance().getModuleById(ModuleId.fromString("37a3367b-1fb2-44d8-aa6b-18075e74e003")) || it.getTargetSModelReference().getSModelFqName().toString().startsWith("jetbrains.mps.baseLanguage/");
        }
      }
).isNotEmpty();
    }
    public void doUpdateInstanceNode(    SNode node){
      IModule[] modules={MPSModuleRepository.getInstance().getModuleById(ModuleId.fromString("6ed54515-acc8-4d1e-a16c-9fd6cfe951ea")),MPSModuleRepository.getInstance().getModuleById(ModuleId.fromString("1ed103c3-3aa6-49b7-9c21-6765ee11f224")),MPSModuleRepository.getInstance().getModuleById(ModuleId.fromString("86441d7a-e194-42da-81a5-2161ec62a379"))};
      SModel model=SNodeOperations.getModel(node);
      IModule module=check_ylpn3n_a0d0a0(model.getModelDescriptor());
      for (      SReference ref : ListSequence.fromList(SNodeOperations.getReferences(node))) {
        SModelReference oldModelRef=ref.getTargetSModelReference();
        final String fqname=check_ylpn3n_a0b0f0a0(oldModelRef);
        for (        IModule newModule : modules) {
          List<SModelDescriptor> models=newModule.getOwnModelDescriptors();
          SModelReference modelRef=check_ylpn3n_a0b0c0f0a0(ListSequence.fromList(models).findFirst(new IWhereFilter<SModelDescriptor>(){
            public boolean accept(            SModelDescriptor it){
              return eq_e5sso0_a0a0a0a0a0a0b0c0f0e0a0a0b0a(it.getLongName(),fqname);
            }
          }
));
          if (modelRef == null) {
            continue;
          }
          ref.setTargetSModelReference(modelRef);
          if ((SLinkOperations.getTargetNode(ref) == null)) {
            ref.setTargetSModelReference(oldModelRef);
            continue;
          }
          model.addModelImport(modelRef,false);
          model.deleteModelImport(oldModelRef);
          SModelRepository.getInstance().markChanged(model);
          if (module != null && module.getModuleDescriptor() != null) {
            List<Dependency> dependencies=module.getModuleDescriptor().getDependencies();
            Dependency dep=ListSequence.fromList(dependencies).findFirst(new IWhereFilter<Dependency>(){
              public boolean accept(              Dependency it){
                return it.getModuleRef().equals(MPSModuleRepository.getInstance().getModuleById(ModuleId.fromString("37a3367b-1fb2-44d8-aa6b-18075e74e003")).getModuleReference());
              }
            }
);
            module.addDependency(newModule.getModuleReference(),dep != null && dep.isReexport());
            ListSequence.fromList(dependencies).removeElement(dep);
          }
          break;
        }
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
