{
  new Mapper<AbstractDecoratorView,AbstractDecoratorView>(this,this){
    @Override protected void registerSynchronizers(    Mapper.SynchronizersConfiguration configuration){
      super.registerSynchronizers(configuration);
      configuration.add(Synchronizers.forObservableRole(this,new ObservableSingleItemList<Boolean>(),Transformers.<Boolean,Boolean,Boolean>addFirstWithCondition(Boolean.TRUE,hasError),new SubList<View>(){
        protected ObservableList<View> getBaseList(){
          return children();
        }
      }
,new MapperFactory<Boolean,View>(){
        public Mapper<? extends Boolean,? extends View> createMapper(        Boolean error){
          return new Mapper<Boolean,ErrorView>(error,createErrorView()){
            @Override protected void registerSynchronizers(            Mapper.SynchronizersConfiguration configuration){
              super.registerSynchronizers(configuration);
              registerErrorViewSynchronizers(this,configuration,getTarget());
            }
          }
;
        }
      }
));
      configuration.add(Synchronizers.forObservableRole(this,new ObservableSingleItemList<Boolean>(),Transformers.<Boolean,Boolean,Boolean>addFirstWithCondition(Boolean.TRUE,isSelected),new SubList<View>(){
        protected ObservableList<View> getBaseList(){
          return children();
        }
      }
,new MapperFactory<Boolean,View>(){
        public Mapper<? extends Boolean,? extends View> createMapper(        Boolean selected){
          return new Mapper<Boolean,SelectionView>(selected,createSelectionView()){
            @Override protected void registerSynchronizers(            Mapper.SynchronizersConfiguration configuration){
              super.registerSynchronizers(configuration);
              registerSelectionViewSynchronizers(this,configuration,getTarget());
            }
          }
;
        }
      }
));
    }
  }
.attachRoot();
}
