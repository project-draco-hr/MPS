{
  new Mapper<AbstractDecoratorView,AbstractDecoratorView>(this,this){
    @Override protected void registerSynchronizers(    Mapper.SynchronizersConfiguration configuration){
      super.registerSynchronizers(configuration);
      configuration.add(Synchronizers.forObservableRole(this,new ObservableSingleItemList<ErrorView>(),Transformers.addFirstWithCondition(new Supplier<ErrorView>(){
        public ErrorView get(){
          return getErrorView();
        }
      }
,hasError),new SubList<View>(){
        protected ObservableList<View> getBaseList(){
          return children();
        }
      }
,new MapperFactory<ErrorView,View>(){
        public Mapper<? extends ErrorView,? extends View> createMapper(        ErrorView errorView){
          return new Mapper<ErrorView,View>(errorView,errorView){
            @Override protected void registerSynchronizers(            Mapper.SynchronizersConfiguration configuration){
              super.registerSynchronizers(configuration);
              registerErrorViewSynchronizers(configuration);
            }
          }
;
        }
      }
));
      configuration.add(Synchronizers.forObservableRole(this,new ObservableSingleItemList<SelectionView>(),Transformers.addFirstWithCondition(new Supplier<SelectionView>(){
        public SelectionView get(){
          return getSelectionView();
        }
      }
,isSelected),new SubList<View>(){
        protected ObservableList<View> getBaseList(){
          return children();
        }
      }
,new MapperFactory<SelectionView,View>(){
        public Mapper<? extends SelectionView,? extends View> createMapper(        SelectionView selectionView){
          return new Mapper<SelectionView,View>(selectionView,selectionView){
            @Override protected void registerSynchronizers(            Mapper.SynchronizersConfiguration configuration){
              super.registerSynchronizers(configuration);
              registerSelectionViewSynchronizers(configuration);
            }
          }
;
        }
      }
));
    }
  }
.attachRoot();
}
