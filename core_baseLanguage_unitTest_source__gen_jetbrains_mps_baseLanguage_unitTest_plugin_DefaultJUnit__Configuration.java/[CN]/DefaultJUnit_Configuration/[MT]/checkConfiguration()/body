{
  final StringBuilder error=new StringBuilder();
{
    if (DefaultJUnit_Configuration.this.getStateObject().type != null) {
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          if (DefaultJUnit_Configuration.this.getStateObject().type == JUnitRunTypes.METHOD) {
            if (DefaultJUnit_Configuration.this.getStateObject().method == null) {
              error.append("method is not selected or does not exist").append("\n");
            }
          }
 else           if (DefaultJUnit_Configuration.this.getStateObject().type == JUnitRunTypes.NODE) {
            if (DefaultJUnit_Configuration.this.getStateObject().node == null) {
              error.append("node is not selected or does not exist").append("\n");
            }
          }
 else           if (DefaultJUnit_Configuration.this.getStateObject().type == JUnitRunTypes.MODEL) {
            if (DefaultJUnit_Configuration.this.getStateObject().model == null) {
              error.append("model is not selected or does not exist").append("\n");
            }
          }
 else           if (DefaultJUnit_Configuration.this.getStateObject().type == JUnitRunTypes.MODULE) {
            if (DefaultJUnit_Configuration.this.getStateObject().module == null) {
              error.append("module is not selected or does not exist").append("\n");
            }
          }
        }
      }
);
      if (!(DefaultJUnit_Configuration.this.getStateObject().compileInMPS) && DefaultJUnit_Configuration.this.getStateObject().myParams != null && DefaultJUnit_Configuration.this.getStateObject().myParams.getMake()) {
        error.append("can't make").append("\n");
      }
    }
    if (DefaultJUnit_Configuration.this.getStateObject().myParams == null) {
      DefaultJUnit_Configuration.this.getStateObject().myParams=new ConfigRunParameters();
    }
    String paramsReport=DefaultJUnit_Configuration.this.getStateObject().myParams.getErrorReport();
    if (paramsReport != null) {
      error.append(paramsReport).append("\n");
    }
  }
  if (error.length() != 0) {
    throw new RuntimeConfigurationException(error.toString());
  }
}
