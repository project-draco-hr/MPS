{
  final List<ITestNodeWrapper> stuffToTest=ListSequence.fromList(new ArrayList<ITestNodeWrapper>());
  Runnable collect=new Runnable(){
    public void run(){
      if (DefaultJUnit_Configuration.this.getStateObject().type != null) {
        ModelAccess.instance().runReadAction(new Runnable(){
          public void run(){
            ListSequence.fromList(stuffToTest).addSequence(Sequence.fromIterable(DefaultJUnit_Configuration.this.getStateObject().type.collect(DefaultJUnit_Configuration.this,mpsProject)));
          }
        }
);
      }
    }
  }
;
  if (eq_yzqu2q_a0a2a11_0(DefaultJUnit_Configuration.this.getStateObject().type,JUnitRunTypes.PROJECT) || eq_yzqu2q_a0a2a11(DefaultJUnit_Configuration.this.getStateObject().type,JUnitRunTypes.MODULE)) {
    ProgressManager.getInstance().runProcessWithProgressSynchronously(collect,"Collecting Tests To Run",false,mpsProject.getProject());
  }
 else {
    collect.run();
  }
  return stuffToTest;
}
