{
  Set<Integer> existingIds=SetSequence.fromSetWithValues(new HashSet<Integer>(),ListSequence.fromList(SModelOperations.roots(SNodeOperations.getModel(((SNode)GenerateConceptId_QuickFix.this.getField("c")[0])),MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"))).select(new ISelector<SNode,Integer>(){
    public Integer select(    SNode it){
      return SPropertyOperations.getInteger(it,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0x16096a174f259419L,"conceptId"));
    }
  }
));
  int generated=0;
  do {
    generated=Math.round(((float)(Math.random() * (Integer.MAX_VALUE - 10))));
    if (SetSequence.fromSet(existingIds).contains(generated)) {
      generated=0;
    }
  }
 while (generated == 0);
  SPropertyOperations.set(((SNode)GenerateConceptId_QuickFix.this.getField("c")[0]),MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0x16096a174f259419L,"conceptId"),"" + (generated));
}
