{
  LOG.debug("Process after event for " + event.getPath());
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      for (      FileProcessor p : reloadSession.getProcessors()) {
        if (event.getFile() == null) {
          LOG.warning("event.getFile() is null. Event: " + event.getClass().getName() + "; path="+ event.getPath());
          continue;
        }
        FileProcessor processor;
        if (p instanceof FileProcessor) {
          processor=((FileProcessor)p);
        }
 else {
          LOG.warning("file processors of different types: " + p.getClass().getName() + " and "+ FileProcessor.class.getName());
          continue;
        }
        if (!(processor.accepts(event.getFile()))) {
          continue;
        }
        if (event instanceof VFileContentChangeEvent) {
          processor.processContentChanged(event.getFile());
        }
 else         if (event instanceof VFileCreateEvent) {
          processor.processCreate(event.getFile());
        }
 else         if (event instanceof VFileDeleteEvent) {
          processor.processDelete(event.getFile());
        }
 else         if (event instanceof VFileCopyEvent) {
          processor.processCreate(event.getFile());
        }
 else         if (event instanceof VFileMoveEvent) {
          VFileMoveEvent re=(VFileMoveEvent)event;
          String name=re.getFile().getName();
          processor.processDelete(event.getFile());
          processor.processCreate(re.getNewParent().findChild(name));
        }
      }
    }
  }
);
}
