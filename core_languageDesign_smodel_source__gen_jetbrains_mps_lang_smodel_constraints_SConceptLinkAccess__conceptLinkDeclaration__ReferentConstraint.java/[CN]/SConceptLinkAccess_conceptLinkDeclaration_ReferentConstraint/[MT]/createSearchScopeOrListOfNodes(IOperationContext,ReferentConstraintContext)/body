{
  SNode operandConcept=SModelLanguageUtil.getConcept(SLinkOperations.getTarget(SNodeOperations.cast(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true));
  if ((operandConcept == null)) {
    SNode leftType=TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(SNodeOperations.cast(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true));
    if (SNodeOperations.isInstanceOf(leftType,"jetbrains.mps.lang.smodel.structure.SConceptType")) {
      operandConcept=SLinkOperations.getTarget(SNodeOperations.cast(leftType,"jetbrains.mps.lang.smodel.structure.SConceptType"),"conceptDeclaraton",false);
    }
 else {
      operandConcept=SNodeOperation_Behavior.getLeftNodeConcept_1213877508847(SNodeOperations.cast(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.DotExpression"));
    }
  }
  return AbstractConceptDeclaration_Behavior.call_getConceptLinkDeclarations_1213877394578(operandConcept);
}
