{
  if (SNodeOperations.isInstanceOf(expression,"jetbrains.mps.baseLanguage.structure.DotExpression")) {
    SNode operation=SLinkOperations.getTarget(SNodeOperations.cast(expression,"jetbrains.mps.baseLanguage.structure.DotExpression"),"operation",true);
    if (SNodeOperations.isInstanceOf(operation,"jetbrains.mps.lang.smodel.structure.SLinkAccess")) {
      return SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.cast(operation,"jetbrains.mps.lang.smodel.structure.SLinkAccess"),"link",false),"target",false);
    }
    if (SNodeOperations.isInstanceOf(operation,"jetbrains.mps.lang.smodel.structure.SLinkListAccess")) {
      return SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.cast(operation,"jetbrains.mps.lang.smodel.structure.SLinkListAccess"),"link",false),"target",false);
    }
  }
  if (SNodeOperations.isInstanceOf(expression,"jetbrains.mps.baseLanguage.structure.VariableReference")) {
    SNode type=SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.cast(expression,"jetbrains.mps.baseLanguage.structure.VariableReference"),"variableDeclaration",false),"type",true);
    if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.lang.smodel.structure.SNodeType")) {
      return SLinkOperations.getTarget(SNodeOperations.cast(type,"jetbrains.mps.lang.smodel.structure.SNodeType"),"concept",false);
    }
  }
  return null;
}
