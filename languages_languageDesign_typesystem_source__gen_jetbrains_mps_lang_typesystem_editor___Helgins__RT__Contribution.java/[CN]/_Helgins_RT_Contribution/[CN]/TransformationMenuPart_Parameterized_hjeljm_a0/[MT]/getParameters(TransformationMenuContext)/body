{
  List<SConcept> subconcepts=SConceptOperations.getAllSubConcepts2(MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x1117f3c1ffaL,"jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement"),_context.getModel());
  return ListSequence.fromList(subconcepts).where(new IWhereFilter<SConcept>(){
    public boolean accept(    SConcept it){
      return SNodeUtil.isDefaultSubstitutable(it);
    }
  }
).toListSequence();
}
