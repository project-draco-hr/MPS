{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("variableDeclaration",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      List<SNode> nodes=SNodeOperations.getAncestors(_context.getEnclosingNode(),null,false);
      List<SNode> vars=new ArrayList<SNode>();
      for (      SNode node : nodes) {
        if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.samples.matrixLanguage.structure.ForEachMatrixElement")) {
          ListSequence.fromList(vars).addElement(SLinkOperations.getTarget(SNodeOperations.cast(node,"jetbrains.mps.samples.matrixLanguage.structure.ForEachMatrixElement"),"element",true));
        }
      }
      SimpleSearchScope result=new SimpleSearchScope(vars);
      return result;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c8959044f(jetbrains.mps.samples.matrixLanguage.constraints)","1213107435732");
    }
  }
);
  return result;
}
