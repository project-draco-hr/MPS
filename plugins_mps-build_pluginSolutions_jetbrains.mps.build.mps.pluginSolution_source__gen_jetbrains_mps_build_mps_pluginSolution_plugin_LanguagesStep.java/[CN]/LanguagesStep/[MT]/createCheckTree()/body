{
  List<SModule> allModules=this.myMpsProject.getModules();
  ModulesListData data=new ModulesListData(allModules);
  List<ModuleData> children=data.getModules();
  ListSequence.fromList(children).sort(new Comparator<ModuleData>(){
    public int compare(    ModuleData data1,    ModuleData data2){
      SModule module1=data1.getModule();
      SModule module2=data2.getModule();
      if (module1.getClass().getName().equals(module2.getClass().getName())) {
        return data1.getText().compareToIgnoreCase(data2.getText());
      }
 else       if (module1 instanceof Solution) {
        return -1;
      }
 else       if (module2 instanceof Solution) {
        return 1;
      }
 else       if (module1 instanceof Language) {
        return -1;
      }
      return 1;
    }
  }
,true);
  NamespaceTreeBuilder builder=new LanguagesStep.MyTreeBuilder(this.myMpsProject);
  for (  ModuleData moduleData : ListSequence.fromList(children)) {
    builder.addNode(new CheckBoxNode(moduleData,false));
  }
  CheckBoxNode allModulesNode=new CheckBoxNode(data,false);
  builder.fillNode(allModulesNode);
  this.fillChildren(allModulesNode);
  CheckBoxTree tree=new CheckBoxTree(allModulesNode);
  tree.checkNodeRecursively(allModulesNode,true);
  return tree;
}
