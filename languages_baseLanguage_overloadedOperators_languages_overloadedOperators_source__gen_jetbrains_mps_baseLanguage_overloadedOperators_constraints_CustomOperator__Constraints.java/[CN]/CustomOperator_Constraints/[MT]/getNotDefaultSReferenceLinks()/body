{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(-248448403205894696l,-5239469005774541060l),2838654975957402167l,2838654975957402169l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(-248448403205894696l,-5239469005774541060l),2838654975957402167l,2838654975957402169l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return CustomOperatorUsage_Behavior.call_getVisibleCustomOperators_1141736782992984505(SNodeOperations.asSConcept(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.overloadedOperators.structure.CustomOperatorUsage")),_context.getModel());
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_jioqvq_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
