{
  this.addNodeById("4038232163187008744");
  this.addNodeById("4038232163187008759");
  IntroduceFieldRefactoring refactoring=new IntroduceFieldRefactoring();
  refactoring.init(SNodeOperations.cast(this.getNodeById("4038232163187008754"),"jetbrains.mps.baseLanguage.structure.PlusExpression"),null);
  refactoring.setName("i");
  refactoring.setIsFinal(true);
  refactoring.setFieldInitializationPlace(FieldInitializationPlace.FIELD);
  refactoring.setVisibilityLevel(VisibilityLevel.PRIVATE);
  refactoring.doRefactoring();
  Assert.assertNull("nodes '" + SNodeOperations.cast(this.getNodeById("4038232163187008745"),"jetbrains.mps.baseLanguage.structure.ClassConcept") + "' and '"+ SNodeOperations.cast(this.getNodeById("4038232163187008770"),"jetbrains.mps.baseLanguage.structure.ClassConcept")+ "' do not match!",NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("4038232163187008745"),"jetbrains.mps.baseLanguage.structure.ClassConcept")),ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("4038232163187008770"),"jetbrains.mps.baseLanguage.structure.ClassConcept"))));
}
