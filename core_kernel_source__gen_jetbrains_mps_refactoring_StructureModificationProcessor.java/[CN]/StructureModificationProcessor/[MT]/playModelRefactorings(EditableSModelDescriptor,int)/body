{
  int modelVersion=model.getVersion();
  if (modelVersion > usedVersion) {
    boolean played=false;
    StructureModificationLog modificationLog=model.getStructureModificationLog();
    for (    StructureModification data : modificationLog.getHistory()) {
      if (MapSequence.fromMap(data.getDependencies()).get(model.getSModelReference()) < usedVersion) {
        continue;
      }
      played|=playRefactoring(data);
    }
    return played;
  }
 else   if (modelVersion < usedVersion) {
    if (log.isErrorEnabled()) {
      log.error("Model version mismatch for import " + model.getSModelReference().getSModelFqName() + " in model "+ myModel.getSModelFqName());
    }
    if (log.isErrorEnabled()) {
      log.error("Used version = " + usedVersion + ", current version = "+ modelVersion);
    }
    return false;
  }
 else {
    return false;
  }
}
