{
  Map<String,PropertyConstraintsDescriptor> properties=new HashMap();
  properties.put("encoding",new BasePropertyConstraintsDescriptor("encoding",this){
    @Override public boolean hasOwnValidator(){
      return true;
    }
    @Override public boolean validateValue(    SNode node,    String propertyValue,    IScope scope){
      String propertyName="encoding";
      if (((((SPropertyOperations.getString(propertyValue)) == null ? null : (SPropertyOperations.getString(propertyValue)).trim())) == null || (((SPropertyOperations.getString(propertyValue)) == null ? null : (SPropertyOperations.getString(propertyValue)).trim())).length() == 0)) {
        return false;
      }
      if ((SPropertyOperations.getString(propertyValue)).equals("binary")) {
        return true;
      }
      try {
        Charset.forName((SPropertyOperations.getString(propertyValue)));
        return true;
      }
 catch (      IllegalArgumentException uc) {
        return false;
      }
    }
  }
);
  return properties;
}
