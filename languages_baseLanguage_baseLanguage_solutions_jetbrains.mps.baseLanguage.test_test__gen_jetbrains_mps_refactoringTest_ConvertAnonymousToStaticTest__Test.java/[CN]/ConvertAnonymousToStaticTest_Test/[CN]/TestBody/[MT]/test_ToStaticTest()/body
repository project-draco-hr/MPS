{
  this.addNodeById("2230400082818031589");
  this.addNodeById("2230400082818031597");
  this.addNodeById("2230400082818059858");
  new ConvertAnonymousRefactoring(SNodeOperations.cast(this.getNodeById("2230400082818031604"),"jetbrains.mps.baseLanguage.structure.AnonymousClass"),"MyIStatic").doRefactor();
{
    List<SNode> nodesBefore=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("2230400082818031598"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    List<SNode> nodesAfter=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("2230400082818059859"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    Assert.assertNull("nodes '" + nodesBefore + "' and '"+ nodesAfter+ "' do not match!",NodesMatcher.matchNodes(nodesBefore,nodesAfter));
  }
}
