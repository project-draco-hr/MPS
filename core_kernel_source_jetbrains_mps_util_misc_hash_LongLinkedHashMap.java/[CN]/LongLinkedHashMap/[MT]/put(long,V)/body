{
  final Entry<V>[] table=this.table;
  final int index=HashUtil.indexFor(key,table.length,shift,mask);
  for (Entry<V> e=table[index]; e != null; e=e.hashNext) {
    if (e.key == key) {
      moveToTop(e);
      return e.setValue(value);
    }
  }
  final Entry<V> e=new Entry<V>(key,value);
  e.hashNext=table[index];
  table[index]=e;
  final Entry<V> top=this.top;
  e.next=top;
  if (top != null) {
    top.previous=e;
  }
 else {
    back=e;
  }
  this.top=e;
  size=size + 1;
  if (removeEldestEntry(back)) {
    remove(back.key);
  }
 else   if (size > capacity) {
    rehash(HashUtil.nextCapacity(capacity));
  }
  return null;
}
