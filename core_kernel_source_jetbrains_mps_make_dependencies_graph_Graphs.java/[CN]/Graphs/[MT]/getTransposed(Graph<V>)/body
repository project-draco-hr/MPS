{
  Graph<VertexDecorator<V>> transposed=new Graph<VertexDecorator<V>>();
  Map<V,VertexDecorator> vertexToDecoratorMap=new LinkedHashMap<V,VertexDecorator>();
  for (  V vertex : graph.getData()) {
    VertexDecorator<V> vertexDecorator=new VertexDecorator<V>(vertex);
    transposed.add(vertexDecorator);
    vertexToDecoratorMap.put(vertex,vertexDecorator);
  }
  for (  V from : graph.getData()) {
    VertexDecorator fromDecorator=vertexToDecoratorMap.get(from);
    for (    IVertex to : from.getNexts()) {
      LOG.assertLog(graph.getData().contains(to),"Graph does not contain vertex " + to + " while there is an edge from "+ from+ " to it.");
      vertexToDecoratorMap.get(to).addNext(fromDecorator);
    }
  }
  return transposed;
}
