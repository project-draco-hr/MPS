{
  IdeMain.setTestMode(TestMode.CORE_TEST);
  long start=System.currentTimeMillis();
  configureMPS();
  System.out.println("loading project...");
  if (!projectFile.exists()) {
    throw new RuntimeException("Can't find a project in file " + projectFile.getAbsolutePath());
  }
  final MPSProject project=loadProject(projectFile);
  TestResult result=new ProjectTester(project).testProject(configurations);
  ThreadUtils.runInUIThreadAndWait(new Runnable(){
    public void run(){
      project.dispose();
      IdeEventQueue.getInstance().flushQueue();
      gc();
    }
  }
);
  result.dump(System.out);
  String message=null;
  if (result.isOk()) {
    if (treatThisWarningAsError != null) {
      int i=result.warningsStartsWith(treatThisWarningAsError);
      if (i > 0) {
        message="No generation errors.\nNo compilation problems.\nThere're [" + i + "]  warnings start with ["+ treatThisWarningAsError+ "]";
      }
    }
 else {
      message=null;
    }
  }
 else {
    message="";
    if (result.hasGenerationErrors()) {
      message="[" + result.myGenerationErrors.size() + "] generation errors.\n";
      for (      String error : result.myGenerationErrors) {
        message=message + error + "\n";
      }
    }
    if (result.hasGenerationWarnings()) {
      message+="[" + result.myGenerationWarnings.size() + "] generation warnings.\n";
      for (      String error : result.myGenerationWarnings) {
        message=message + error + "\n";
      }
    }
    if (result.hasCompilationProblems()) {
      message+="[" + result.myCompilationProblems.size() + "] compilation problems.\n";
      for (      String error : result.myCompilationProblems) {
        message=message + error + "\n";
      }
    }
  }
  if (message != null)   System.out.println(message);
  System.out.println("testing took " + (System.currentTimeMillis() - start) + " ms");
  return message;
}
