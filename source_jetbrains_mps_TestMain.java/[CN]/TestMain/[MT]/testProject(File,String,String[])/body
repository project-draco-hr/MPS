{
  IdeMain.setTestMode(TestMode.CORE_TEST);
  long start=System.currentTimeMillis();
  configureMPS();
  System.out.println("loading project " + projectFile + "...");
  if (!projectFile.exists()) {
    throw new RuntimeException("Can't find a project in file " + projectFile.getAbsolutePath());
  }
  final MPSProject project=loadProject(projectFile);
  TestResult result=new ProjectTester(project).testProject(configurations);
  ThreadUtils.runInUIThreadAndWait(new Runnable(){
    public void run(){
      project.dispose();
      IdeEventQueue.getInstance().flushQueue();
      gc();
    }
  }
);
  result.dump(System.out);
  StringBuilder message=new StringBuilder();
  if (result.isOk()) {
    if (treatThisWarningAsError != null) {
      int i=result.warningsStartsWith(treatThisWarningAsError);
      if (i > 0) {
        message.append("No generation errors.\nNo compilation problems.\nThere're [").append(i).append("]  warnings start with [").append(treatThisWarningAsError).append("]");
      }
    }
 else {
      message=null;
    }
  }
 else {
    if (result.hasGenerationErrors()) {
      message.append("[").append(result.myGenerationErrors.size()).append("] generation errors.\n");
      for (      String error : result.myGenerationErrors) {
        message.append(error).append("\n");
      }
    }
    if (result.hasGenerationWarnings()) {
      message.append("[").append(result.myGenerationWarnings.size()).append("] generation warnings.\n");
      for (      String error : result.myGenerationWarnings) {
        message.append(error).append("\n");
      }
    }
    if (result.hasCompilationProblems()) {
      message.append("[").append(result.myCompilationProblems.size()).append("] compilation problems.\n");
      for (      String error : result.myCompilationProblems) {
        message.append(message).append(error).append("\n");
      }
    }
  }
  System.out.println(message);
  System.out.println("testing took " + (System.currentTimeMillis() - start) + " ms");
  if (message == null) {
    return null;
  }
  return message.toString();
}
