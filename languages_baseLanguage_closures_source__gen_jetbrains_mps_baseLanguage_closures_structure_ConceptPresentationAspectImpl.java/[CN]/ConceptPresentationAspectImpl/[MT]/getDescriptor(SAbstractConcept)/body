{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case LanguageConceptSwitch.AbstractFunctionType:
    return props_AbstractFunctionType;
case LanguageConceptSwitch.ClosureArgReference:
  return props_ClosureArgReference;
case LanguageConceptSwitch.ClosureControlStatement:
return props_ClosureControlStatement;
case LanguageConceptSwitch.ClosureLiteral:
return props_ClosureLiteral;
case LanguageConceptSwitch.ClosureLiteralType:
return props_ClosureLiteralType;
case LanguageConceptSwitch.CompactInvokeFunctionExpression:
return props_CompactInvokeFunctionExpression;
case LanguageConceptSwitch.ControlAbstractionContainer:
return props_ControlAbstractionContainer;
case LanguageConceptSwitch.ControlAbstractionDeclaration:
return props_ControlAbstractionDeclaration;
case LanguageConceptSwitch.ControlClosureLiteral:
return props_ControlClosureLiteral;
case LanguageConceptSwitch.FunctionMethodDeclaration:
return props_FunctionMethodDeclaration;
case LanguageConceptSwitch.FunctionType:
return props_FunctionType;
case LanguageConceptSwitch.InvokeExpression:
return props_InvokeExpression;
case LanguageConceptSwitch.InvokeFunctionExpression:
return props_InvokeFunctionExpression;
case LanguageConceptSwitch.InvokeFunctionOperation:
return props_InvokeFunctionOperation;
case LanguageConceptSwitch.PairOfInts:
return props_PairOfInts;
case LanguageConceptSwitch.StringPropertyHolder:
return props_StringPropertyHolder;
case LanguageConceptSwitch.UnboundClosureParameterDeclaration:
return props_UnboundClosureParameterDeclaration;
case LanguageConceptSwitch.UnrestrictedClosureLiteral:
return props_UnrestrictedClosureLiteral;
case LanguageConceptSwitch.UnrestrictedFunctionType:
return props_UnrestrictedFunctionType;
case LanguageConceptSwitch.YieldAllStatement:
return props_YieldAllStatement;
case LanguageConceptSwitch.YieldStatement:
return props_YieldStatement;
}
return null;
}
