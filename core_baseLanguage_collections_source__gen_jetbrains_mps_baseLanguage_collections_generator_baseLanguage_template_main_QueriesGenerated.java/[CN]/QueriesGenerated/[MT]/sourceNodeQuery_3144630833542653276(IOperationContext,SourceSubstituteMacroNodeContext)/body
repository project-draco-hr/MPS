{
  SLinkOperations.getTarget(SNodeOperations.as(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(),"closure",true)),"jetbrains.mps.baseLanguage.closures.structure.FunctionType"),"resultType",true);
  SNode st=TypeChecker.getInstance().getRuntimeSupport().coerce_(SLinkOperations.getTarget(SNodeOperations.as(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(),"closure",true)),"jetbrains.mps.baseLanguage.closures.structure.FunctionType"),"resultType",true),HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.collections.structure.SequenceType"),true);
  if (st != null) {
    SNode ct=ClassifierTypeUtil.getTypeCoercedToClassifierType(SLinkOperations.getTarget(st,"elementType",true));
    if (SNodeOperations.isInstanceOf(ct,"jetbrains.mps.baseLanguage.structure.UpperBoundType")) {
      return SLinkOperations.getTarget(SNodeOperations.cast(ct,"jetbrains.mps.baseLanguage.structure.UpperBoundType"),"bound",true);
    }
    return ct;
  }
  return null;
}
