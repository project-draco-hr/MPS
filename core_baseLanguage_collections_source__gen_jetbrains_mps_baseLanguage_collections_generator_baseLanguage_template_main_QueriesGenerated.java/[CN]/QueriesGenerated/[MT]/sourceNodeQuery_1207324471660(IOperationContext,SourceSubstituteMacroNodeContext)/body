{
  TypeChecker.getInstance().getTypeOf(SNodeOperations.getAncestor(_context.getNode(),"jetbrains.mps.baseLanguage.structure.GenericNewExpression",false,false));
{
    IMatchingPattern pattern_3=HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.collections.structure.SequenceType");
    SNode coercedNode_3=TypeChecker.getInstance().getRuntimeSupport().coerce_(TypeChecker.getInstance().getTypeOf(SNodeOperations.getAncestor(_context.getNode(),"jetbrains.mps.baseLanguage.structure.GenericNewExpression",false,false)),pattern_3);
    if (coercedNode_3 != null) {
      return SLinkOperations.getTarget(coercedNode_3,"elementType",true);
    }
  }
  return new _Quotations.QuotationClass_2().createNode();
}
