{
  if (!isEnabled)   return;
  ArrayList<Entry<String,Pair<Long,Long>>> list=new ArrayList<Entry<String,Pair<Long,Long>>>();
  list.addAll(map.entrySet());
  Collections.sort(list,new Comparator<Entry<String,Pair<Long,Long>>>(){
    @Override public int compare(    Entry<String,Pair<Long,Long>> o1,    Entry<String,Pair<Long,Long>> o2){
      return o2.getValue().o1 > o1.getValue().o1 ? 1 : -1;
    }
  }
);
  long sum=0;
  int i=0;
  for (  Entry<String,Pair<Long,Long>> entry : list) {
    if (i++ >= numTop)     break;
    sum+=entry.getValue().o1;
    StringBuilder sb=new StringBuilder();
    boolean isFirst=true;
    for (    String name : entry.getKey().split("   ")) {
      if (!isFirst) {
        sb.append(" :< ");
      }
      isFirst=false;
      int beginIndex=name.lastIndexOf('.') + 1;
      sb.append(name.substring(beginIndex));
    }
    tracer.addText(String.format(sb.toString() + " %.3f s,  %d times",entry.getValue().o1 * 1.0e-9,entry.getValue().o2));
  }
  tracer.addText("Total: " + sum * 1.0e-9);
}
