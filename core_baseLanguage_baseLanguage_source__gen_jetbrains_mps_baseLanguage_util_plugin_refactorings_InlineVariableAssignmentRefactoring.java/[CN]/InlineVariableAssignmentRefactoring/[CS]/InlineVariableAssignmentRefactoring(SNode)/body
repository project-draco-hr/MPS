{
  this.myVariable=node;
  SNode body=SNodeOperations.getAncestor(node,"jetbrains.mps.baseLanguage.structure.StatementList",false,false);
  while (SNodeOperations.getAncestor(body,"jetbrains.mps.baseLanguage.structure.StatementList",false,false) != null) {
    body=SNodeOperations.getAncestor(body,"jetbrains.mps.baseLanguage.structure.StatementList",false,false);
  }
  this.myProgram=DataFlowManager.getInstance().buildProgramFor(body);
  AnalysisResult<Set<ReadInstruction>> reachingReads=this.myProgram.analyze(new ReachingReadsAnalyzer());
  this.myReadInstructions=SetSequence.fromSet(new HashSet<ReadInstruction>());
  for (  Instruction instruction : ListSequence.fromList(this.myProgram.getInstructionsFor(node))) {
    for (    Instruction next : SetSequence.fromSet(instruction.succ())) {
      for (      ReadInstruction read : reachingReads.get(next)) {
        if (read.getVariable() == node) {
          SetSequence.fromSet(this.myReadInstructions).addElement(read);
        }
      }
    }
  }
}
