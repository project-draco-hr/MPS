{
  final Wrappers._boolean isLocalVariable=new Wrappers._boolean();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      isLocalVariable.value=SNodeOperations.isInstanceOf(InlineVariableAssignmentRefactoring.this.myVariable,"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration");
    }
  }
);
  if (isLocalVariable.value) {
    final Wrappers._T<String> variableName=new Wrappers._T<String>();
    final Wrappers._boolean notInitialized=new Wrappers._boolean();
    final Wrappers._int nodesCount=new Wrappers._int();
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        variableName.value=myVariable + "";
        notInitialized.value=(SLinkOperations.getTarget(SNodeOperations.cast(InlineVariableAssignmentRefactoring.this.myVariable,"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration"),"initializer",true) == null);
        nodesCount.value=ListSequence.<SNode>fromList(getNodesToRefactor()).count();
      }
    }
);
    if (notInitialized.value) {
      return false;
    }
    if (nodesCount.value == 0) {
      Messages.showInfoMessage(frame,"Variable " + variableName.value + " is never used","Inline Variable");
      return false;
    }
 else {
      int code=Messages.showYesNoDialog(frame,"Inline local variable '" + variableName.value + "'? ("+ NameUtil.formatNumericalString(nodesCount.value,"occurence")+ ")","Inline Variable",null);
      if (code != 0) {
        return false;
      }
    }
  }
  return true;
}
