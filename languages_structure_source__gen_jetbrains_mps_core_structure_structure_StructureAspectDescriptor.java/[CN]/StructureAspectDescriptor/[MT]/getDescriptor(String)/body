{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.core.structure.structure.SAbstractConcept","jetbrains.mps.core.structure.structure.SStructureElement",false,new String[]{"jetbrains.mps.core.structure.structure.SStructureElement","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.core.structure.structure.SConcept","jetbrains.mps.core.structure.structure.SAbstractConcept",false,new String[]{"jetbrains.mps.core.structure.structure.SAbstractConcept"},new String[]{"isAbstract","isFinal"},new String[]{"extends"});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.core.structure.structure.SConceptMember","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.core.structure.structure.SInterfaceConcept","jetbrains.mps.core.structure.structure.SAbstractConcept",false,new String[]{"jetbrains.mps.core.structure.structure.SAbstractConcept"},new String[]{},new String[]{});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.core.structure.structure.SInterfaceReference","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"target"});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.core.structure.structure.SProperty","jetbrains.mps.core.structure.structure.SConceptMember",false,new String[]{"jetbrains.mps.core.structure.structure.SConceptMember","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.core.structure.structure.SReference","jetbrains.mps.core.structure.structure.SConceptMember",false,new String[]{"jetbrains.mps.core.structure.structure.SConceptMember","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{});
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.core.structure.structure.SStructure","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{});
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.core.structure.structure.SStructureComment","jetbrains.mps.core.structure.structure.SStructureElement",false,new String[]{"jetbrains.mps.core.structure.structure.SStructureElement"},new String[]{"comment"},new String[]{});
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.core.structure.structure.SStructureElement","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.core.structure.structure.SStructureEmptyLine","jetbrains.mps.core.structure.structure.SStructureElement",false,new String[]{"jetbrains.mps.core.structure.structure.SStructureElement"},new String[]{},new String[]{});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
