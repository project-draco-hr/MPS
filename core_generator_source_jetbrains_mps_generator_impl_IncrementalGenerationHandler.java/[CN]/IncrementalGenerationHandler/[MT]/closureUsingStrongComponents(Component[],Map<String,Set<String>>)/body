{
  boolean result=false;
  for (int i=0; i < components.length; i++) {
    Component component=components[i];
    boolean hasUnchanged=false;
    boolean hasChanged=false;
    for (    SNode n : component.getRoots()) {
      if (myUnchangedRoots.contains(n)) {
        hasUnchanged=true;
      }
 else {
        hasChanged=true;
      }
    }
    for (    Component c : component.getDependsOn()) {
      if (c.isDirty()) {
        hasChanged=true;
      }
    }
    if (hasUnchanged && hasChanged) {
      for (      SNode n : component.getRoots()) {
        if (myUnchangedRoots.remove(n)) {
          dep.remove(n.getNodeId().toString());
          result=true;
        }
      }
    }
    component.setDirty(hasChanged);
  }
  return result;
}
