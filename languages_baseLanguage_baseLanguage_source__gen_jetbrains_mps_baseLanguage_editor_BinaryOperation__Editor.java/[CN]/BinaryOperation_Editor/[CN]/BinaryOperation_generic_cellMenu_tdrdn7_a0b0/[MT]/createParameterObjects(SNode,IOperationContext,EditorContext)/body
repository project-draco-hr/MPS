{
  List<SubstituteAction> actions=ModelActions.createChildNodeSubstituteActions(SNodeOperations.getParent(node),node,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.BinaryOperation"),new AbstractChildNodeSetter(){
    @Override protected SNode doExecute(    SNode parentNode,    SNode oldChild,    SNode newChild,    @Nullable EditorContext editorContext){
      SNode sourceNode=(SNode)oldChild;
      SNode result=(SNode)newChild;
      SNodeOperations.replaceWithAnother(sourceNode,result);
      SLinkOperations.setTarget(result,"leftExpression",SLinkOperations.getTarget(sourceNode,"leftExpression",true),true);
      SLinkOperations.setTarget(result,"rightExpression",SLinkOperations.getTarget(sourceNode,"rightExpression",true),true);
      return result;
    }
  }
,operationContext);
  return actions;
}
