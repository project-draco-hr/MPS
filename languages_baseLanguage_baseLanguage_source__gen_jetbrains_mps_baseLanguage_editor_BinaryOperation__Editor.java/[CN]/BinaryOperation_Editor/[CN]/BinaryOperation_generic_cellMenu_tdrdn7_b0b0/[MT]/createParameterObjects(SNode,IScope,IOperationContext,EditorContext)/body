{
  List<SubstituteAction> actions=ModelActions.createChildNodeSubstituteActions(SNodeOperations.getParent(node),node,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.BaseAssignmentExpression"),new AbstractChildNodeSetter(){
    @Override protected SNode doExecute(    SNode parentNode,    SNode oldChild,    SNode newChild,    IScope scope,    @Nullable EditorContext editorContext){
      SNode sourceNode=(SNode)(oldChild);
      SNode result=(SNode)(newChild);
      SNodeOperations.replaceWithAnother(sourceNode,result);
      SLinkOperations.setTarget(result,"lValue",SLinkOperations.getTarget(sourceNode,"leftExpression",true),true);
      SLinkOperations.setTarget(result,"rValue",SLinkOperations.getTarget(sourceNode,"rightExpression",true),true);
      return result;
    }
  }
,operationContext);
  return actions;
}
