{
  super.replaceSingleUsage(usage);
  if (SNodeOperations.isInstanceOf(usage,"jetbrains.mps.baseLanguage.structure.IMethodCall")) {
    SNode newCall;
    if (SNodeOperations.getAncestor(usage,"jetbrains.mps.baseLanguage.structure.Classifier",false,false) == this.myDestination) {
      newCall=new MoveStaticMethodRefactoring.QuotationClass_f5lqsg_a0a0a1a1a3().createNode(this.myReplacing);
    }
 else {
      newCall=new MoveStaticMethodRefactoring.QuotationClass_f5lqsg_a0a0a0b0b0d().createNode(this.myDestination,this.myReplacing);
    }
    ListSequence.fromList(SLinkOperations.getTargets(newCall,"actualArgument",true)).addSequence(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.IMethodCall"),"actualArgument",true)));
    ListSequence.fromList(SLinkOperations.getTargets(newCall,"typeArgument",true)).addSequence(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.IMethodCall"),"typeArgument",true)));
    SNodeOperations.replaceWithAnother(usage,newCall);
  }
}
