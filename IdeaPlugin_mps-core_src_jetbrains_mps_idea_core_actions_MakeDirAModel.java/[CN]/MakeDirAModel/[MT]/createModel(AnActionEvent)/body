{
  return new ModelAccessHelper(ProjectHelper.getModelAccess(myProject)).executeCommand(new Computable<EditableSModel>(){
    @Override public EditableSModel compute(){
      Module module=e.getData(LangDataKeys.MODULE);
      final PsiElement psiElement=e.getData(LangDataKeys.PSI_ELEMENT);
      final VirtualFile targetDir=((PsiDirectory)psiElement).getVirtualFile();
      final String modelName=myModelPrefix;
      EditableSModel model=null;
      try {
        String relPath=null;
        ModuleRootManager rootManager=ModuleRootManager.getInstance(module);
        ArrayList<VirtualFile> roots=new ArrayList<VirtualFile>();
        roots.addAll(Arrays.asList(rootManager.getSourceRoots()));
        roots.addAll(Arrays.asList(rootManager.getContentRoots()));
        for (        VirtualFile sr : roots) {
          relPath=VfsUtilCore.getRelativePath(targetDir,sr);
          if (relPath != null) {
            break;
          }
        }
        Map<String,String> options=new HashMap<String,String>();
        if (relPath != null) {
          options.put(ModelFactory.OPTION_RELPATH,relPath);
        }
        model=(EditableSModel)myModelRoot.createModel(modelName,myRootForModel,options,PersistenceRegistry.getInstance().getFolderModelFactory("file-per-root"));
      }
 catch (      IOException ioException) {
        LOG.error("Can't create per-root model " + modelName + " under "+ myRootForModel,ioException);
      }
      model.setChanged(true);
      model.load();
      return model;
    }
  }
);
}
