{
  if (getBuffer().hasPositionsSupport()) {
    TraceInfoGenerationUtil.createPositionInfo(this,node);
  }
  this.appendNewLine();
  if ((SLinkOperations.getTarget(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1082113931046l,9056323058805226429l,"loopLabelReference")) != null)) {
    this.appendWithIndent("continue ");
    this.append(SPropertyOperations.getString(SLinkOperations.getTarget(SLinkOperations.getTarget(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1082113931046l,9056323058805226429l,"loopLabelReference")),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),363746191845183785l,363746191845183786l,"loopLabel")),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")));
    this.append(";");
  }
 else   if (SPropertyOperations.getString(node,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1082113931046l,1199470060942l,"label")) != null) {
    this.appendWithIndent("continue ");
    this.append(SPropertyOperations.getString(node,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1082113931046l,1199470060942l,"label")));
    this.append(";");
  }
 else {
    this.appendWithIndent("continue;");
  }
  if (getBuffer().hasPositionsSupport()) {
{
      String traceableProperty="";
      try {
        traceableProperty=BehaviorReflection.invokeVirtual(String.class,SNodeOperations.cast(node,"jetbrains.mps.lang.traceable.structure.TraceableConcept"),"virtual_getTraceableProperty_5067982036267369901",new Object[]{});
      }
 catch (      Throwable t) {
        if (LOG.isEnabledFor(Level.ERROR)) {
          LOG.error("Can't calculate traceable prorerty for a node " + node + ".",t);
        }
      }
      TraceInfoGenerationUtil.fillPositionInfo(this,node,traceableProperty);
    }
  }
}
