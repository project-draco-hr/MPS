{
  List<Language> languages=extractUsedLanguages(inputModel,excludeTLBase,scope);
  for (  Language language : languages) {
    if (processedLanguages.contains(language))     continue;
    processedLanguages.add(language);
    List<Generator> generators=language.getGenerators();
    if (generators.size() == 0)     continue;
    Generator generator=generators.get(0);
    if (generators.size() > 1) {
      LOG.error("LANG '" + language.getNamespace() + "' has "+ generators.size()+ ". use 1st: '"+ generator.getName()+ "'");
    }
    collectGenerators(generator,collectedGenerators,processedLanguages);
  }
  return collectedGenerators;
}
