{
  List<String> strings=new ArrayList<String>();
  Map<SModel,Integer> numOfMappingsByModel=new HashMap<SModel,Integer>();
  for (  MappingConfiguration mappingConfig : step) {
    SModel model=mappingConfig.getModel();
    if (!numOfMappingsByModel.containsKey(model)) {
      numOfMappingsByModel.put(model,0);
    }
    numOfMappingsByModel.put(model,numOfMappingsByModel.get(model) + 1);
  }
  Iterator<SModel> models=numOfMappingsByModel.keySet().iterator();
  while (models.hasNext()) {
    SModel model=models.next();
    int totalMappings=model.allAdapters(MappingConfiguration.class).size();
    if (totalMappings <= 1 || numOfMappingsByModel.get(model) < totalMappings) {
      models.remove();
    }
 else {
      numOfMappingsByModel.put(model,0);
    }
  }
  for (  MappingConfiguration mappingConfig : step) {
    SModel model=mappingConfig.getModel();
    if (numOfMappingsByModel.containsKey(model)) {
      if (numOfMappingsByModel.get(model) == 0) {
        strings.add(model.getLongName() + ".*");
        numOfMappingsByModel.put(model,1);
      }
    }
 else {
      strings.add(model.getLongName() + "." + mappingConfig.getName());
    }
  }
  Collections.sort(strings);
  return strings;
}
