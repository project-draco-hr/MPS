{
  List<Language> languages;
  if (excludeTLBase) {
    languages=extractLanguagesExcludingTLBase(inputModel,scope);
  }
 else {
    languages=inputModel.getSModel().getLanguages(scope);
  }
  for (  Language language : languages) {
    if (processedLanguages.contains(language))     continue;
    processedLanguages.add(language);
    List<Generator> generators=language.getGenerators();
    if (generators.size() == 0)     continue;
    Generator generator=generators.get(0);
    if (generators.size() > 1) {
      System.err.println("LANG '" + language.getNamespace() + "' has "+ generators.size()+ ". use 1st: '"+ generator.getName()+ "'");
    }
    usedGenerators.add(generator);
    List<SModelDescriptor> templateModels=generator.getOwnTemplateModels();
    for (    SModelDescriptor templateModel : templateModels) {
      collectUsedGenerators(templateModel,generator.getScope(),true,usedGenerators,processedLanguages);
    }
  }
  return usedGenerators;
}
