{
  final List<Change> changes=builder.getChanges();
  SModel newModel=newRoot.getModel();
  myNewRoot=newRoot;
  for (  AddRootChange ar : CollectionUtil.filter(AddRootChange.class,changes)) {
    myAddedNodes.add(ar.getNodeId());
  }
  for (  AddNodeChange an : CollectionUtil.filter(AddNodeChange.class,changes)) {
    myAddedNodes.add(an.getNodeId());
  }
  for (  SetNodeChange c : CollectionUtil.filter(SetNodeChange.class,changes)) {
    SNode sNode=newModel.getNodeById(c.getNodeId());
    if (sNode != null && sNode.getContainingRoot() == newRoot) {
      myAddedNodes.add(c.getNodeId());
    }
  }
  for (  SetPropertyChange p : CollectionUtil.filter(SetPropertyChange.class,changes)) {
    SNode sNode=newModel.getNodeById(p.getNodeId());
    if (sNode != null && sNode.getContainingRoot() == newRoot) {
      myChangedNodes.add(p.getNodeId());
    }
  }
  for (  SetReferenceChange r : CollectionUtil.filter(SetReferenceChange.class,changes)) {
    SNode sNode=newModel.getNodeById(r.getNodeId());
    if (sNode != null && sNode.getContainingRoot() == newRoot) {
      myChangedNodes.add(r.getNodeId());
    }
  }
  updateView();
}
