{
{
    SNode arg;
    SNode param;
    Iterator<SNode> arg_iterator=SLinkOperations.getTargets(mc,"actualArgument",true).iterator();
    Iterator<SNode> param_iterator=SLinkOperations.getTargets(SLinkOperations.getTarget(mc,"baseMethodDeclaration",false),"parameter",true).iterator();
    while (true) {
      if (!(arg_iterator.hasNext())) {
        break;
      }
      if (!(param_iterator.hasNext())) {
        break;
      }
      arg=arg_iterator.next();
      param=param_iterator.next();
{
        SNode matchedType=inference_matchTypeWithTypeVariables(SLinkOperations.getTarget(param,"type",true),mmap);
        if (TRACE_METHOD_TYPES) {
          System.out.println("-1- TYPEOF(" + BaseConcept_Behavior.call_getPresentation_1213877396640(arg) + ") :<=: "+ BaseConcept_Behavior.call_getPresentation_1213877396640(matchedType));
        }
{
          SNode _nodeToCheck_1029348928467=mc;
          BaseIntentionProvider intentionProvider=null;
          intentionProvider=new BaseIntentionProvider("jetbrains.mps.baseLanguage.helgins@6_0.ChooseAppropriateMethodDeclaration_QuickFix",true);
          intentionProvider.putArgument("methodCall",mc);
          intentionProvider.putArgument("classifier",SNodeOperations.getAncestor(SLinkOperations.getTarget(mc,"baseMethodDeclaration",false),"jetbrains.mps.baseLanguage.structure.Classifier",false,false));
          TypeChecker.getInstance().getRuntimeSupport().createLessThanInequation(TypeChecker.getInstance().getRuntimeSupport().typeOf(arg,"jetbrains.mps.baseLanguage.helgins","1203441371331",true),matchedType,_nodeToCheck_1029348928467,null,"jetbrains.mps.baseLanguage.helgins","1203441371327",false,1,intentionProvider);
        }
      }
    }
  }
  if (returnType != null) {
    SNode matchedType=inference_matchTypeWithTypeVariables(returnType,mmap);
    if (TRACE_METHOD_TYPES) {
      System.out.println("-1- TYPEOF(" + BaseConcept_Behavior.call_getPresentation_1213877396640(mc) + ") :==: "+ BaseConcept_Behavior.call_getPresentation_1213877396640(matchedType));
    }
{
      SNode _nodeToCheck_1029348928467=mc;
      BaseIntentionProvider intentionProvider=null;
      TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(mc,"jetbrains.mps.baseLanguage.helgins","1203441371361",true),matchedType,_nodeToCheck_1029348928467,null,"jetbrains.mps.baseLanguage.helgins","1203441371359",intentionProvider);
    }
  }
}
