{
  if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.TypeVariableReference")) {
    final SNode tvar_typevar_1203431658168=TypeChecker.getInstance().getRuntimeSupport().createNewRuntimeTypesVariable(false);
    SNode tvd=SLinkOperations.getTarget(type,"typeVariableDeclaration",false);
    RulesFunctions_BaseLanguage.inference_mapTypeVariable(tvd,TypeChecker.getInstance().getEquationManager().getRepresentator(tvar_typevar_1203431658168),(mmap=RulesFunctions_BaseLanguage.getMMap(mmap)));
    SNodeOperations.replaceWithAnother(type,TypeChecker.getInstance().getEquationManager().getRepresentator(tvar_typevar_1203431658168));
  }
 else {
    List<SNode> children=new ArrayList<SNode>(SNodeOperations.getChildren(type));
    for (    SNode chld : children) {
      mmap=RulesFunctions_BaseLanguage.inference_mapTypeVariables(chld,mmap);
    }
  }
  return mmap;
}
