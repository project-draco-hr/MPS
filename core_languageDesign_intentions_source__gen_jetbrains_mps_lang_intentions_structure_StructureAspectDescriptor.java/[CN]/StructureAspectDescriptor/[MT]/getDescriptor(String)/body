{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a,conceptFqName)) {
case 0:
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.intentions.structure.BaseIntentionDeclaration",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.plugin.structure.ICheckedNamePolicy","jetbrains.mps.lang.structure.structure.IConceptAspect"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.plugin.structure.ICheckedNamePolicy","jetbrains.mps.lang.structure.structure.IConceptAspect"});
case 1:
  return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.intentions.structure.ChildFilterBlock",new String[]{},new String[]{},new String[]{});
case 2:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.intentions.structure.ChildFilterFunction",new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction","jetbrains.mps.lang.intentions.structure.ChildFilterBlock"},new String[]{"jetbrains.mps.lang.intentions.structure.ChildFilterBlock"},new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"});
case 3:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.intentions.structure.ConceptFunctionParameter_childNode",new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"});
case 4:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.intentions.structure.ConceptFunctionParameter_node",new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"});
case 5:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.intentions.structure.DescriptionBlock",new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"});
case 6:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.intentions.structure.ExecuteBlock",new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"});
case 7:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.intentions.structure.ExecuteUIBlock",new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"});
case 8:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.intentions.structure.GenerateIntentionDeclaration",new String[]{"jetbrains.mps.lang.intentions.structure.BaseIntentionDeclaration"},new String[]{"jetbrains.mps.lang.intentions.structure.BaseIntentionDeclaration"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.plugin.structure.ICheckedNamePolicy","jetbrains.mps.lang.structure.structure.IConceptAspect"});
case 9:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.intentions.structure.IntentionContextParamReference",new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Expression"});
case 10:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.intentions.structure.IntentionContextParameterDeclaration",new String[]{"jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.INamedConcept"});
case 11:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.intentions.structure.IntentionDeclaration",new String[]{"jetbrains.mps.lang.intentions.structure.BaseIntentionDeclaration"},new String[]{"jetbrains.mps.lang.intentions.structure.BaseIntentionDeclaration"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.plugin.structure.ICheckedNamePolicy","jetbrains.mps.lang.structure.structure.IConceptAspect"});
case 12:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.intentions.structure.IntentionParameter",new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.Expression"});
case 13:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.intentions.structure.IsApplicableBlock",new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"});
case 14:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.intentions.structure.ParameterizedIntentionDeclaration",new String[]{"jetbrains.mps.lang.intentions.structure.IntentionDeclaration"},new String[]{"jetbrains.mps.lang.intentions.structure.BaseIntentionDeclaration","jetbrains.mps.lang.intentions.structure.IntentionDeclaration"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.plugin.structure.ICheckedNamePolicy","jetbrains.mps.lang.structure.structure.IConceptAspect"});
case 15:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.intentions.structure.QueryBlock",new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"});
case 16:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.lang.intentions.structure.SurroundWithIntentionDeclaration",new String[]{"jetbrains.mps.lang.intentions.structure.BaseIntentionDeclaration"},new String[]{"jetbrains.mps.lang.intentions.structure.BaseIntentionDeclaration"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.plugin.structure.ICheckedNamePolicy","jetbrains.mps.lang.structure.structure.IConceptAspect"});
default :
return null;
}
}
