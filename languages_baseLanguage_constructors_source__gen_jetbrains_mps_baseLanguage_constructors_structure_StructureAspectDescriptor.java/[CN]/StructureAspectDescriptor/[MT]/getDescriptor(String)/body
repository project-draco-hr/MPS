{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.constructors.structure.ArgumentClause").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.constructors.structure.CustomArgumentClause").super_("jetbrains.mps.baseLanguage.constructors.structure.ArgumentClause").parents("jetbrains.mps.baseLanguage.constructors.structure.ArgumentClause").children(new String[]{"parameter"},new boolean[]{true}).create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.constructors.structure.CustomConstructor").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction","jetbrains.mps.lang.core.structure.INamedConcept").properties("description","separator","leftParenthesis","rightParenthesis").children(new String[]{"returnType","arguments"},new boolean[]{false,false}).create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.constructors.structure.CustomConstructorContainer").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"constructors"},new boolean[]{true}).create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.constructors.structure.CustomConstructorParameter").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"type"},new boolean[]{false}).create();
case 5:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.constructors.structure.CustomConstructorParameterReference").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").references("parameter").staticScope(StaticScope.NONE).create();
case 6:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.constructors.structure.CustomConstructorUsage").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").references("customConstructor").children(new String[]{"element"},new boolean[]{true}).staticScope(StaticScope.NONE).create();
case 7:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.constructors.structure.ListArgumentsClause").super_("jetbrains.mps.baseLanguage.constructors.structure.ArgumentClause").parents("jetbrains.mps.baseLanguage.constructors.structure.ArgumentClause").children(new String[]{"list"},new boolean[]{false}).create();
case 8:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.constructors.structure.ListCustomParameter").super_("jetbrains.mps.baseLanguage.constructors.structure.CustomConstructorParameter").parents("jetbrains.mps.baseLanguage.constructors.structure.CustomConstructorParameter").create();
case 9:
return new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.constructors.structure.ListParameterReference").super_("jetbrains.mps.baseLanguage.constructors.structure.CustomConstructorParameterReference").parents("jetbrains.mps.baseLanguage.constructors.structure.CustomConstructorParameterReference").staticScope(StaticScope.NONE).create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
