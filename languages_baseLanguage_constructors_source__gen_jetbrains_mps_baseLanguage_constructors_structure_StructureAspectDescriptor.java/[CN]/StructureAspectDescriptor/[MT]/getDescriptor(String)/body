{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.constructors.structure.ArgumentClause","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.constructors.structure.CustomArgumentClause","jetbrains.mps.baseLanguage.constructors.structure.ArgumentClause",false,new String[]{"jetbrains.mps.baseLanguage.constructors.structure.ArgumentClause"},new String[]{},new String[]{},new String[]{"parameter"},new boolean[]{true});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.constructors.structure.CustomConstructor","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"description","separator","leftParenthesis","rightParenthesis"},new String[]{},new String[]{"returnType","arguments"},new boolean[]{false,false});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.constructors.structure.CustomConstructorContainer","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{"constructors"},new boolean[]{true});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.constructors.structure.CustomConstructorParameter","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{"type"},new boolean[]{false});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.constructors.structure.CustomConstructorParameterReference","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"parameter"},new String[]{},new boolean[]{});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.constructors.structure.CustomConstructorUsage","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{},new String[]{"customConstructor"},new String[]{"element"},new boolean[]{true});
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.constructors.structure.ListArgumentsClause","jetbrains.mps.baseLanguage.constructors.structure.ArgumentClause",false,new String[]{"jetbrains.mps.baseLanguage.constructors.structure.ArgumentClause"},new String[]{},new String[]{},new String[]{"list"},new boolean[]{false});
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.constructors.structure.ListCustomParameter","jetbrains.mps.baseLanguage.constructors.structure.CustomConstructorParameter",false,new String[]{"jetbrains.mps.baseLanguage.constructors.structure.CustomConstructorParameter"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.baseLanguage.constructors.structure.ListParameterReference","jetbrains.mps.baseLanguage.constructors.structure.CustomConstructorParameterReference",false,new String[]{"jetbrains.mps.baseLanguage.constructors.structure.CustomConstructorParameterReference"},new String[]{},new String[]{},new String[]{},new boolean[]{});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
