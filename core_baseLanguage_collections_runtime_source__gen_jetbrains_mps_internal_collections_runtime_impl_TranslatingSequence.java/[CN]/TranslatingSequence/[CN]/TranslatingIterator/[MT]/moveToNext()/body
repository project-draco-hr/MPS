{
  hasNext=HasNextState.AT_END;
  next=null;
  do {
    try {
      if (transIt != null && transIt.hasNext()) {
        V tmp=transIt.next();
        if (Sequence.IGNORE_NULL_VALUES) {
          if (tmp == null) {
            continue;
          }
        }
        next=tmp;
        hasNext=HasNextState.HAS_NEXT;
        break;
      }
    }
 catch (    StopIteratingException stop) {
      break;
    }
    if (inputIt.hasNext()) {
      try {
        Iterable<V> transSeq=translator.invoke(inputIt.next());
        if (Sequence.USE_NULL_SEQUENCE) {
          if (transSeq == null) {
            transSeq=NullSequence.instance();
          }
        }
        transIt=transSeq.iterator();
      }
 catch (      StopIteratingException illegal) {
        throw new IllegalStateException(illegal);
      }
    }
 else {
      break;
    }
  }
 while (true);
}
