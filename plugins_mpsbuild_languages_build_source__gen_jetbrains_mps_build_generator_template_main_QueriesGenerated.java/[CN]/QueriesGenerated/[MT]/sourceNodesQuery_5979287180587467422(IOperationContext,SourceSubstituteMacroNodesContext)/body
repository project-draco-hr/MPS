{
  SNode project=SNodeOperations.getAncestor(_context.getNode(),"jetbrains.mps.build.structure.BuildProject",false,false);
  if (project == null) {
    _context.showErrorMessage(_context.getNode(),"no context project defined");
    return Collections.emptyList();
  }
  DependenciesHelper helper=new DependenciesHelper(_context,project);
  SNode layoutNode=helper.artifacts().get(DependenciesHelper.getOriginalNode(((SNode)_context.getVariable("library")),_context));
  if (layoutNode == null) {
    _context.showErrorMessage(_context.getNode(),"java library " + SPropertyOperations.getString(((SNode)_context.getVariable("library")),"name") + " was not found in the layout");
    return Collections.emptyList();
  }
  Iterable<SNode> input;
  if (SNodeOperations.isInstanceOf(layoutNode,"jetbrains.mps.build.structure.BuildLayout_ExportAsJavaLibrary")) {
    input=SLinkOperations.getTargets(SNodeOperations.cast(layoutNode,"jetbrains.mps.build.structure.BuildLayout_ExportAsJavaLibrary"),"children",true);
  }
 else {
    input=Sequence.<SNode>singleton(layoutNode);
  }
  List<SNode> result=new ArrayList<SNode>();
  for (  SNode pe : input) {
    String val=helper.locations().get(pe);
    if (val == null) {
      _context.showErrorMessage(pe,"no location for " + BaseConcept_Behavior.call_getPresentation_1213877396640(pe) + " (unsupported layout element)");
      continue;
    }
    SNode propertyNode=SModelOperations.createNewNode(_context.getOutputModel(),"jetbrains.mps.lang.core.structure.BaseConcept",null);
    propertyNode.setProperty("pathValue",val);
    ListSequence.fromList(result).addElement(propertyNode);
  }
  return result;
}
