{
  ControlMethodUtil.Info cmuInfo=ControlMethodUtil.analyze(SLinkOperations.getTarget(ccs,"controlMethod",false));
  if (!(cmuInfo != null)) {
    BaseQuickFixProvider intentionProvider=null;
    MessageTarget errorTarget=new NodeMessageTarget();
    IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(ccs,"Not referring to a control method","r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)","1232453890820",intentionProvider,errorTarget);
  }
  if (cmuInfo != null) {
    List<SNode> ccts=cmuInfo.getControlClosureTypes();
    if (!(ListSequence.fromList(ccts).count() > 0)) {
      BaseQuickFixProvider intentionProvider=null;
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(ccs,"Control method should accept at least one unrestricted closure","r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)","1232454232193",intentionProvider,errorTarget);
    }
    if (!((SLinkOperations.getTarget(ccs,"controlClosure",true) != null))) {
      BaseQuickFixProvider intentionProvider=null;
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(ccs,"Must define a control closure","r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)","1232454314258",intentionProvider,errorTarget);
    }
    if (ListSequence.fromList(ccts).count() > 0) {
{
        SNode _nodeToCheck_1029348928467=SLinkOperations.getTarget(ccs,"controlClosure",true);
        BaseQuickFixProvider intentionProvider=null;
        EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)","1236533962056",0,intentionProvider);
        _info_12389875345.setInequationGroup("default");
        typeCheckingContext.createLessThanInequationStrong((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467,"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)","1236533965287",true),(SNode)ListSequence.fromList(ccts).getElement(ListSequence.fromList(ccts).count() - 1),false,_info_12389875345);
      }
    }
    List<SNode> params=SLinkOperations.getTargets(ccs,"actualParameter",true);
    List<SNode> fpts=cmuInfo.getFunctionParamTypes();
    if (!(ListSequence.fromList(params).count() == ListSequence.fromList(fpts).count())) {
      BaseQuickFixProvider intentionProvider=null;
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(ccs,"Incorrect parameters number","r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)","1232455288552",intentionProvider,errorTarget);
    }
{
      SNode pt;
      SNode param;
      Iterator<SNode> pt_iterator=ListSequence.fromList(fpts).iterator();
      Iterator<SNode> param_iterator=ListSequence.fromList(params).iterator();
      while (true) {
        if (!(pt_iterator.hasNext())) {
          break;
        }
        if (!(param_iterator.hasNext())) {
          break;
        }
        pt=pt_iterator.next();
        param=param_iterator.next();
{
          SNode _nodeToCheck_1029348928467=param;
          BaseQuickFixProvider intentionProvider=null;
          EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)","1236534225483",0,intentionProvider);
          _info_12389875345.setInequationGroup("default");
          typeCheckingContext.createLessThanInequation((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467,"r:00000000-0000-4000-0000-011c89590337(jetbrains.mps.baseLanguage.closures.typesystem)","1236534227246",true),(SNode)pt,false,_info_12389875345);
        }
      }
    }
  }
}
