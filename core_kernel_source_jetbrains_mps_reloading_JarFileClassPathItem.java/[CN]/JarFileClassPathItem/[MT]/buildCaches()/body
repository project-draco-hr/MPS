{
  ZipFile zf=null;
  try {
    zf=new ZipFile(myFile);
    Enumeration<? extends ZipEntry> entries=zf.entries();
    while (entries.hasMoreElements()) {
      ZipEntry entry=entries.nextElement();
      if (entry.isDirectory()) {
        String name=entry.getName();
        if (name.endsWith("/")) {
          name=name.substring(0,name.length() - 1);
        }
        if (name.contains("."))         continue;
        String pack=name.replace('/','.');
        buildPackageCaches(pack);
      }
 else {
        String name=entry.getName();
        if (!name.endsWith(MPSExtentions.DOT_CLASSFILE))         continue;
        int packEnd=name.lastIndexOf('/');
        String pack;
        String className;
        if (packEnd == -1) {
          pack="";
          className=name.substring(0,name.length() - MPSExtentions.DOT_CLASSFILE.length());
        }
 else {
          pack=packEnd > 0 ? name.substring(0,packEnd).replace('/','.') : name;
          className=name.substring(packEnd + 1,name.length() - ".class".length());
        }
        buildPackageCaches(pack);
        myCache.addClass(InternUtil.intern(pack),InternUtil.intern(className));
      }
    }
  }
 catch (  IOException e) {
    LOG.error("Path " + myFile.getPath() + " ("+ myFile.getAbsolutePath()+ ") \n"+ "File exists: "+ myFile.exists(),e);
  }
 finally {
    if (zf != null) {
      try {
        zf.close();
      }
 catch (      IOException e) {
        LOG.error(null,e);
      }
    }
  }
}
