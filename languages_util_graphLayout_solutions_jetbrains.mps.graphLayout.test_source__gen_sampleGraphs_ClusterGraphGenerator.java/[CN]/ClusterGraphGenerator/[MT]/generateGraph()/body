{
  Graph graph=myGraphGenerator.generate();
  ClusteredGraph clusteredGraph=new ClusteredGraph();
  for (int i=0; i < graph.getNumNodes(); i++) {
    clusteredGraph.createNode();
  }
  for (  Edge edge : ListSequence.<Edge>fromList(graph.getEdges())) {
    clusteredGraph.addEdgeByIndex(edge.getSource().getIndex(),edge.getTarget().getIndex());
  }
  Graph tree=clusteredGraph.getInclusionTree();
  Node root=tree.createNode();
  clusteredGraph.setRoot(root);
  int numClusters=myNumClusters;
  int numNodesInCluster=clusteredGraph.getNumNodes() / numClusters;
  Iterator<Node> nodeItr=ListSequence.<Node>fromList(clusteredGraph.getNodes()).iterator();
  for (int i=0; i < numClusters; i++) {
    Node cluster=tree.createNode();
    tree.connect(root,cluster);
    for (int j=0; j < numNodesInCluster; j++) {
      this.addLeafCluster(cluster,nodeItr,clusteredGraph);
    }
    if (i == numClusters - 1) {
      while (nodeItr.hasNext()) {
        this.addLeafCluster(cluster,nodeItr,clusteredGraph);
      }
    }
  }
  return clusteredGraph;
}
