{
  if (Sequence.fromIterable(Sequence.fromArray(dir.getFiles())).ofType(PsiJavaFile.class).isNotEmpty()) {
    PsiJavaStubDataSource ds=new PsiJavaStubDataSource(myModule,dir);
    String relativeDirName=dir.toString().substring(skipPrefix);
    String packageName=relativeDirName.replace('/','.');
    if (packageName.length() > 0 && packageName.charAt(0) == '.') {
      packageName=packageName.substring(1);
    }
    if (packageName.length() == 0) {
      packageName="<default package>";
    }
    SModelFqName fqName=new SModelFqName(packageName,"java_stub_zzz");
    jetbrains.mps.smodel.SModelId modelId=jetbrains.mps.smodel.SModelId.foreign(fqName.getStereotype(),getModule().getModuleId().toString(),fqName.getLongName());
    SModelReference modelRef=new SModelReference(fqName,modelId);
    PsiJavaStubModelDescriptor model=new PsiJavaStubModelDescriptor(modelRef,ds);
    MapSequence.fromMap(myDataSources).put(dir,ds);
    ListSequence.fromList(myModels).addElement(model);
  }
  for (  PsiDirectory subDir : dir.getSubdirectories()) {
    addModelsForDir(skipPrefix,subDir);
  }
}
