{
  if (ModelAccess.instance().canRead() && !ModelAccess.instance().canWrite()) {
    return c.compute();
  }
  try {
    return ModelAccess.instance().runReadInWriteAction(new Computable<T>(){
      @Override public T compute(){
        try {
          return c.compute();
        }
 catch (        GenerationFailureException e) {
          throw new RuntimeException(e);
        }
catch (        GenerationCanceledException e) {
          throw new RuntimeException(e);
        }
      }
    }
);
  }
 catch (  RuntimeException th) {
    Throwable inner=th.getCause();
    if (inner instanceof GenerationFailureException) {
      throw (GenerationFailureException)inner;
    }
 else     if (inner instanceof GenerationCanceledException) {
      throw (GenerationCanceledException)inner;
    }
    throw th;
  }
}
