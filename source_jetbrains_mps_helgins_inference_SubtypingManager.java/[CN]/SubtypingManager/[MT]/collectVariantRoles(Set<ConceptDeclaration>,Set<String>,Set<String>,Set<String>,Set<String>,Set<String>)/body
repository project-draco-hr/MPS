{
  for (  ConceptDeclaration superConcept : superConcepts) {
    if (myVarianceRules.containsKey(superConcept)) {
      SubtypingVarianceRule rule=myVarianceRules.get(superConcept);
      for (      LinkVariance linkVariance : CollectionUtil.iteratorAsIterable(rule.linkVariances())) {
        String role=linkVariance.getLinkDeclaration().getRole();
        if (linkVariance.getAllowsNull()) {
          allowsNull.add(role);
        }
        if (linkVariance.getVariance() == _Variance_Enum.covariant) {
          covariantRoles.add(role);
        }
        if (linkVariance.getVariance() == _Variance_Enum.contravariant) {
          contraVariantRoles.add(role);
        }
        if (linkVariance.getVariance() == _Variance_Enum.invariant) {
          invariantRoles.add(role);
        }
      }
      roles.addAll(CollectionUtil.map(CollectionUtil.iteratorAsList(superConcept.linkDeclarations()),new Mapper<LinkDeclaration,String>(){
        public String map(        LinkDeclaration p){
          return p.getRole();
        }
      }
));
    }
  }
}
