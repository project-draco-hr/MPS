{
  for (  SubtypingRule rule : typesModel.getRoots(SubtypingRule.class)) {
    VariableCondition condition=rule.getApplicableNode().getCondition();
    ConceptDeclaration ruleConcept=ConditionMatcher.getConcept(condition);
    myConceptsToSubtypingRulesCache.putRule(ruleConcept,rule);
  }
  for (  SupertypingRule rule : typesModel.getRoots(SupertypingRule.class)) {
    VariableCondition condition=rule.getApplicableNode().getCondition();
    ConceptDeclaration ruleConcept=ConditionMatcher.getConcept(condition);
    myConceptsToSupertypingRulesCache.putRule(ruleConcept,rule);
  }
  for (  SubtypingVarianceRule rule : typesModel.getRoots(SubtypingVarianceRule.class)) {
    myVarianceRules.put(rule.getConceptDeclaration(),rule);
  }
  myConceptsToSubtypingRulesCache.makeConsistent();
  myConceptsToSupertypingRulesCache.makeConsistent();
}
