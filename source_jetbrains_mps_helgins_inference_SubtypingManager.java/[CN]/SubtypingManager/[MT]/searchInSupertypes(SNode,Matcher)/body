{
  Set<SNode> frontier=new HashSet<SNode>();
  Set<SNode> newFrontier=new HashSet<SNode>();
  Set<SNode> yetPassed=new HashSet<SNode>();
  frontier.add(subRepresentator);
  while (!frontier.isEmpty()) {
    for (    SNode node : frontier) {
      Set<SNode> ancestors=collectImmediateSupertypes(node);
      if (ancestors == null)       continue;
      for (      SNode passedNode : yetPassed) {
        removeStructurally(ancestors,passedNode);
      }
      removeStructurally(ancestors,node);
      for (      SNode ancestor : ancestors) {
        if (m.matches(ancestor)) {
          return true;
        }
      }
      addAllStructurally(newFrontier,ancestors);
      addAllStructurally(yetPassed,ancestors);
    }
    frontier=newFrontier;
    newFrontier=new HashSet<SNode>();
  }
  return false;
}
