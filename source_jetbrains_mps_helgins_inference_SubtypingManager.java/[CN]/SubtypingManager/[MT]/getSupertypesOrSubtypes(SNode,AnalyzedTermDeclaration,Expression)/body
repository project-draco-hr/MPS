{
  ExpressionContext expressionContext=new ExpressionContext();
  VariableCondition termCondition=analyzedTermDeclaration.getCondition();
  if (termCondition instanceof QueryPattern) {
    ConditionMatcher conditionMatcher;
    try {
      conditionMatcher=new ConditionMatcher(termCondition);
    }
 catch (    InvalidConditionException ex) {
      error("invalid condition",ex);
      return null;
    }
    if (!(conditionMatcher.matchesCondition(term,expressionContext)))     return null;
  }
  expressionContext.putNode(analyzedTermDeclaration,term);
  Object supertypeO=ExpressionEvaluatorManager.evaluate(expressionContext,targetExpression);
  List<SNode> result=new ArrayList<SNode>();
  if (supertypeO instanceof SNode) {
    SNode supernode=(SNode)supertypeO;
    if (!MatchingUtil.matchNodes(supernode,term)) {
      result.add(supernode);
    }
    return result;
  }
  if (supertypeO instanceof List) {
    boolean isCorrect=true;
    for (    Object o : (List)supertypeO) {
      if (!(o instanceof SNode)) {
        isCorrect=false;
        break;
      }
 else {
        if (!MatchingUtil.matchNodes((SNode)o,term)) {
          result.add((SNode)o);
        }
      }
    }
    if (isCorrect)     return result;
  }
  return null;
}
