{
  for (  CoherentSetData coherentSetData : coherentMappings) {
    Set<MappingConfiguration> coherentMappingSet=coherentSetData.myMappings;
    for (    MappingConfiguration mapping : priorityMap.keySet()) {
      if (coherentMappingSet.contains(mapping))       continue;
      Map<MappingConfiguration,PriorityData> locks=priorityMap.get(mapping);
      if (locks.isEmpty())       continue;
      List<MappingConfiguration> lockingCoherentMappings=CollectionUtil.intersection(coherentMappingSet,locks.keySet());
      if (lockingCoherentMappings.isEmpty())       continue;
      boolean isStrict=false;
      for (      MappingConfiguration mapping1 : lockingCoherentMappings) {
        if (locks.get(mapping1).isStrict()) {
          isStrict=true;
          break;
        }
      }
      for (      MappingConfiguration coherentMapping : coherentMappingSet) {
        PriorityData priorityData=locks.get(coherentMapping);
        if (priorityData != null) {
          priorityData.myCauseRules.addAll(coherentSetData.myCauseRules);
        }
 else {
          locks.put(coherentMapping,new PriorityData(isStrict,coherentSetData.myCauseRules));
        }
      }
    }
  }
}
