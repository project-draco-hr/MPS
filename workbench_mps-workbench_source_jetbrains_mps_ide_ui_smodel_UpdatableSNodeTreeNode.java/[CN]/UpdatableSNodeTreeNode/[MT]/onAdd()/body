{
  super.onAdd();
  if (myEventsListener != null)   return;
  myEventsListener=new MyEventsListener(getModelDescriptor());
  final PresentationUpdater<SNodeTreeNode> updater=new PresentationUpdater<SNodeTreeNode>(this){
    @Override protected boolean isValid(    SNodeTreeNode treeNode){
      return super.isValid(treeNode) && !SNodeOperations.isDisposed(treeNode.getSNode());
    }
  }
;
  mySNodeModelListener=new SimpleModelListener(updater);
  myModelRepositoryListener=new SModelRepositoryAdapter(){
    @Override public void modelsReplaced(    Set<SModel> replacedModels){
      if (replacedModels.contains(getModelDescriptor())) {
        updater.update(true,true);
      }
    }
  }
;
  if (getModelDescriptor() instanceof EditableSModel) {
    myTreeUpdater=new MySNodeTreeUpdater(myProject,this);
  }
  addListeners();
}
