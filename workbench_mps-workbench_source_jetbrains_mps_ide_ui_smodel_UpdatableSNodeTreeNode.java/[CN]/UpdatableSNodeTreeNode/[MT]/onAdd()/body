{
  super.onAdd();
  if (myEventsListener != null)   return;
  myEventsListener=new MyEventsListener(getModelDescriptor());
  mySNodeModelListener=new SimpleModelListener(this){
    public boolean isValid(){
      return super.isValid() && !jetbrains.mps.util.SNodeOperations.isDisposed(getSNode());
    }
  }
;
  myModelRepositoryListener=new SModelRepositoryAdapter(){
    @Override public void modelsReplaced(    Set<SModelDescriptor> replacedModels){
      if (replacedModels.contains(getModelDescriptor())) {
        ModelAccess.instance().runReadInEDT(new Runnable(){
          public void run(){
            if (mySNodeModelListener.isValid()) {
              UpdatableSNodeTreeNode.this.updatePresentation(true,true);
            }
          }
        }
);
      }
    }
  }
;
  if (getModelDescriptor() instanceof EditableSModel) {
    myTreeUpdater=new MySNodeTreeUpdater(getOperationContext().getProject(),this);
  }
  addListeners();
}
