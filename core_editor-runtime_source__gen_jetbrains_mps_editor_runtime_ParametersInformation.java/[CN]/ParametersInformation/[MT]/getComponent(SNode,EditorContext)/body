{
  Iterable<T> methods=this.getMethods(node,editorContext);
  int lineNumber=0;
  JPanel panel=new JPanel(new GridBagLayout());
  panel.setBackground(ToolTip.BACKGROUND_COLOR);
  panel.setBorder(new EmptyBorder(0,4,0,4));
  for (  T method : Sequence.<T>fromIterable(methods)) {
    StyledTextPrinter printer=new StyledTextPrinter();
    this.getStyledMethodPresentation(node,editorContext,method,printer);
    JTextPane textPane=new JTextPane(printer.getDocument());
    textPane.setBorder(null);
    textPane.setFont(EditorSettings.getInstance().getDefaultEditorFont());
    textPane.setOpaque(true);
    if (Sequence.<T>fromIterable(methods).count() > 1 && this.isMethodCurrent(node,editorContext,method)) {
      textPane.setBackground(new Color(0xe7,0xfe,0xea));
    }
 else {
      textPane.setBackground(ToolTip.BACKGROUND_COLOR);
    }
    GridBagConstraints constraints=new GridBagConstraints();
    constraints.fill=GridBagConstraints.BOTH;
    constraints.gridy=lineNumber++;
    panel.add(textPane,constraints);
    if (Sequence.<T>fromIterable(methods).last() != method) {
      constraints=new GridBagConstraints();
      constraints.fill=GridBagConstraints.HORIZONTAL;
      constraints.gridy=lineNumber++;
      panel.add(new ParametersInformation.Line(),constraints);
    }
  }
  return panel;
}
