{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a,conceptFqName)) {
case 0:
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.AbstractProjectComponent",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 1:
  return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.Antcall",new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent","jetbrains.mps.build.packaging.structure.ICompositeComponent"},new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent","jetbrains.mps.build.packaging.structure.IAbstractCompositeComponent","jetbrains.mps.build.packaging.structure.ICompositeComponent"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 2:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.BaseDirPath",new String[]{"jetbrains.mps.build.packaging.structure.Path"},new String[]{"jetbrains.mps.build.packaging.structure.IPath","jetbrains.mps.build.packaging.structure.Path"},new String[]{"jetbrains.mps.buildlanguage.structure.PropertyValueExpression"});
case 3:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.Block",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.build.packaging.structure.IMacroHolder","jetbrains.mps.build.packaging.structure.IVariableHolder"},new String[]{"jetbrains.mps.build.packaging.structure.IMacroHolder","jetbrains.mps.build.packaging.structure.IVariableHolder"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 4:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.BlockReference",new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent"},new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 5:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.BuildLanguageTargetReference",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 6:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.ComponentsList",new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent","jetbrains.mps.build.packaging.structure.IAbstractCompositeComponent","jetbrains.mps.build.packaging.structure.ITransparentProjectComponent"},new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent","jetbrains.mps.build.packaging.structure.IAbstractCompositeComponent","jetbrains.mps.build.packaging.structure.ITransparentProjectComponent"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 7:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.CompositePathComponent",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 8:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.CompositeString",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.build.packaging.structure.IStringExpression"},new String[]{"jetbrains.mps.build.packaging.structure.IStringExpression"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 9:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.Configuration",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 10:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.ConfigurationReference",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 11:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.Copy",new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent"},new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 12:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.Delete",new String[]{"jetbrains.mps.build.packaging.structure.PostProcessingTask"},new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent","jetbrains.mps.build.packaging.structure.PostProcessingTask"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 13:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.Echo",new String[]{"jetbrains.mps.build.packaging.structure.File"},new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent","jetbrains.mps.build.packaging.structure.File"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 14:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.File",new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent"},new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 15:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.FileExistsCondition",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.build.packaging.structure.ICondition"},new String[]{"jetbrains.mps.build.packaging.structure.ICondition"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 16:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.Folder",new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent","jetbrains.mps.build.packaging.structure.ICompositeComponent"},new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent","jetbrains.mps.build.packaging.structure.IAbstractCompositeComponent","jetbrains.mps.build.packaging.structure.ICompositeComponent"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 17:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.IAbstractCompositeComponent",new String[]{"jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.INamedConcept"});
case 18:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.ICompositeComponent",new String[]{"jetbrains.mps.build.packaging.structure.IAbstractCompositeComponent"},new String[]{"jetbrains.mps.build.packaging.structure.IAbstractCompositeComponent"},new String[]{"jetbrains.mps.lang.core.structure.INamedConcept"});
case 19:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.ICondition",new String[]{},new String[]{},new String[]{});
case 20:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.ILayoutComponent",new String[]{},new String[]{},new String[]{});
case 21:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.IMacroHolder",new String[]{},new String[]{},new String[]{});
case 22:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.INotBuildableComponent",new String[]{},new String[]{},new String[]{});
case 23:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.IPath",new String[]{},new String[]{},new String[]{});
case 24:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.IStringExpression",new String[]{},new String[]{},new String[]{});
case 25:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.ITransparentProjectComponent",new String[]{},new String[]{},new String[]{});
case 26:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.IVariableHolder",new String[]{},new String[]{},new String[]{});
case 27:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.Jar",new String[]{"jetbrains.mps.build.packaging.structure.Zip"},new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent","jetbrains.mps.build.packaging.structure.IAbstractCompositeComponent","jetbrains.mps.build.packaging.structure.ICompositeComponent","jetbrains.mps.build.packaging.structure.Zip"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 28:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.Layout",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.build.packaging.structure.ILayoutComponent","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.build.packaging.structure.IVariableHolder","jetbrains.mps.build.packaging.structure.IMacroHolder","jetbrains.mps.buildlanguage.structure.IAntScript"},new String[]{"jetbrains.mps.build.packaging.structure.ILayoutComponent","jetbrains.mps.build.packaging.structure.IMacroHolder","jetbrains.mps.build.packaging.structure.IVariableHolder"},new String[]{"jetbrains.mps.buildlanguage.structure.IAntScript","jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 29:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.MPSLayoutConfigurationReferencePropertyValueExpression",new String[]{"jetbrains.mps.buildlanguage.structure.PropertyValueExpression"},new String[]{},new String[]{"jetbrains.mps.buildlanguage.structure.PropertyValueExpression"});
case 30:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.Macro",new String[]{"jetbrains.mps.buildlanguage.structure.PropertyDeclaration","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{"jetbrains.mps.buildlanguage.structure.PropertyDeclaration","jetbrains.mps.lang.core.structure.INamedConcept"});
case 31:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.MacroReference",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 32:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.Manifest",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 33:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.ManifestAttribute",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 34:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.Module",new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent"},new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 35:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.ModuleCycle",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 36:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.ModuleCycleReference",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 37:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.NewModuleReference",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 38:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.NonExistingPath",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.build.packaging.structure.IPath"},new String[]{"jetbrains.mps.build.packaging.structure.IPath"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 39:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.NotCondition",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.build.packaging.structure.ICondition"},new String[]{"jetbrains.mps.build.packaging.structure.ICondition"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 40:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.Pair",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 41:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.Path",new String[]{"jetbrains.mps.buildlanguage.structure.PropertyValueExpression","jetbrains.mps.build.packaging.structure.IPath"},new String[]{"jetbrains.mps.build.packaging.structure.IPath"},new String[]{"jetbrains.mps.buildlanguage.structure.PropertyValueExpression"});
case 42:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.PathComponent",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 43:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.PathHolder",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 44:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.Plugin",new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent"},new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 45:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.PostProcessingTask",new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent"},new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 46:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.PropertiesImport",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 47:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.PropertyFileImport",new String[]{"jetbrains.mps.build.packaging.structure.PropertiesImport"},new String[]{"jetbrains.mps.build.packaging.structure.PropertiesImport"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 48:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.PropertyNodeImport",new String[]{"jetbrains.mps.build.packaging.structure.PropertiesImport"},new String[]{"jetbrains.mps.build.packaging.structure.PropertiesImport"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 49:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.Replace",new String[]{"jetbrains.mps.build.packaging.structure.File"},new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent","jetbrains.mps.build.packaging.structure.File"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 50:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.SimpleString",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.build.packaging.structure.IStringExpression"},new String[]{"jetbrains.mps.build.packaging.structure.IStringExpression"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 51:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.Space",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.build.packaging.structure.IStringExpression"},new String[]{"jetbrains.mps.build.packaging.structure.IStringExpression"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 52:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.Variable",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 53:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.VariableReference",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.build.packaging.structure.IStringExpression"},new String[]{"jetbrains.mps.build.packaging.structure.IStringExpression"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 54:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.build.packaging.structure.Zip",new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent","jetbrains.mps.build.packaging.structure.ICompositeComponent"},new String[]{"jetbrains.mps.build.packaging.structure.AbstractProjectComponent","jetbrains.mps.build.packaging.structure.IAbstractCompositeComponent","jetbrains.mps.build.packaging.structure.ICompositeComponent"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
default :
return null;
}
}
