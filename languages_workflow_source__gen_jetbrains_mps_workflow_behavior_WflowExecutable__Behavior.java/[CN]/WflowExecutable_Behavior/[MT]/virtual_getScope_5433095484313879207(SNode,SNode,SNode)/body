{
  if (kind == SConceptOperations.findConceptDeclaration("jetbrains.mps.query.structure.MqlVariable")) {
    if (child == null) {
      child=ListSequence.<SNode>fromList(SLinkOperations.getTargets(thisNode,"statements",true)).last();
      if (child == null) {
        return null;
      }
    }
    SNode statement=SNodeOperations.getPrevSibling(child);
    List<SNode> res=new ArrayList<SNode>();
    while (statement != null) {
      if (SNodeOperations.isInstanceOf(statement,"jetbrains.mps.workflow.structure.WflowExpressionStatement")) {
        ListSequence.<SNode>fromList(res).addElement(SLinkOperations.getTarget(SNodeOperations.cast(statement,"jetbrains.mps.workflow.structure.WflowExpressionStatement"),"var",true));
      }
      statement=SNodeOperations.getPrevSibling(statement);
    }
    return new MultipleElementsScope(res,new _FunctionTypes._return_P1_E0<String,SNode>(){
      public String invoke(      SNode n){
        return SPropertyOperations.getString(SNodeOperations.cast(n,"jetbrains.mps.lang.core.structure.INamedConcept"),"name");
      }
    }
);
  }
  return null;
}
