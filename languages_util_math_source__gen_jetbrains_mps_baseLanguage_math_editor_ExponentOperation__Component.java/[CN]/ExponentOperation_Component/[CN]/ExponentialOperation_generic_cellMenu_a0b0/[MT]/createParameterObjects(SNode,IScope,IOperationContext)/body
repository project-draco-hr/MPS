{
  List<SNode> result=ListSequence.<SNode>fromList(new ArrayList<SNode>());
  for (  SNode a : ListSequence.<SNode>fromList(SConceptOperations.getAllSubConcepts(ListSequence.<SNode>fromList(SLinkOperations.getConceptLinkTargets(node,"allowedSubstituends")).first(),SNodeOperations.getModel(node),scope))) {
    if (!(SConceptPropertyOperations.getBoolean(a,"abstract")) && SConceptOperations.isSubConceptOf(a,"jetbrains.mps.baseLanguage.math.structure.ExponentialOperation")) {
      ListSequence.<SNode>fromList(result).addElement(SNodeOperations.castConcept(a,"jetbrains.mps.baseLanguage.math.structure.ExponentialOperation"));
    }
  }
  return result;
}
