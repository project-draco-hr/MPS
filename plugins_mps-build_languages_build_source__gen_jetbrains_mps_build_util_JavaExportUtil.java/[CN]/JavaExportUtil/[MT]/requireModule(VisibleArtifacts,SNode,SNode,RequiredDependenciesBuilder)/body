{
  SNode target=SNodeOperations.as(artifacts.toOriginalNode(module),"jetbrains.mps.build.structure.BuildSource_JavaModule");
  JavaModulesClosure closure=new JavaModulesClosure(artifacts.getGenContext(),target).closure(true);
  Iterable<SNode> required=Sequence.fromIterable(((Iterable<SNode>)closure.getModules())).concat(Sequence.fromIterable(((Iterable<SNode>)closure.getJars())).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SLinkOperations.getTarget(it,"path",true);
    }
  }
)).concat(Sequence.fromIterable(Sequence.<SNode>singleton(target)));
  boolean hasDependencies=false;
  for (  SNode n : Sequence.fromIterable(required)) {
    if (SNodeOperations.getContainingRoot(n) == SNodeOperations.getContainingRoot(contextNode)) {
      continue;
    }
    SNode artifact=SNodeOperations.as(artifacts.findArtifact(n),"jetbrains.mps.build.structure.BuildLayout_Node");
    if (artifact != null) {
      builder.add(artifact,n);
      hasDependencies=true;
    }
  }
  for (  SNode lib : Sequence.fromIterable((Iterable<SNode>)closure.getLibraries())) {
    if (SNodeOperations.getContainingRoot(lib) == SNodeOperations.getContainingRoot(contextNode)) {
      continue;
    }
    requireLibrary(artifacts,lib,contextNode,builder);
  }
  for (  SNode extJar : CollectionSequence.fromCollection(closure.getExternalJars())) {
    if (SNodeOperations.getContainingRoot(extJar) == SNodeOperations.getContainingRoot(contextNode)) {
      continue;
    }
    Tuples._2<SNode,Boolean> jarImport=requireJar(artifacts,extJar,contextNode);
    if (jarImport != null) {
      if ((boolean)(jarImport._1())) {
        builder.addWithContent(jarImport._0());
      }
 else {
        builder.add(jarImport._0());
      }
      hasDependencies=true;
    }
  }
  for (  Tuples._2<SNode,String> extJarInFolder : CollectionSequence.fromCollection(closure.getExternalJarsInFolder())) {
    if (SNodeOperations.getContainingRoot(extJarInFolder._0()) == SNodeOperations.getContainingRoot(contextNode)) {
      continue;
    }
    SNode folderNode=requireJarFolder(artifacts,extJarInFolder._0(),contextNode);
    if (folderNode != null) {
      builder.addWithContent(folderNode);
      hasDependencies=true;
    }
  }
  if (hasDependencies) {
    artifacts.needsFetch(contextNode);
  }
}
