{
  if (SNodeOperations.getContainingRoot(jar) == SNodeOperations.getContainingRoot(contextNode)) {
    return null;
  }
  SNode target=SNodeOperations.as(artifacts.toOriginalNode(jar),"jetbrains.mps.build.structure.BuildSource_SingleFile");
  if (target == null) {
    return null;
  }
  SNode artifact=null;
  boolean withContent=false;
  if (SNodeOperations.isInstanceOf(target,"jetbrains.mps.build.structure.BuildLayout_Node")) {
    artifact=SNodeOperations.as(artifacts.findArtifact(target),"jetbrains.mps.build.structure.BuildLayout_Node");
  }
 else   if (SNodeOperations.isInstanceOf(target,"jetbrains.mps.build.structure.BuildInputSingleFile")) {
    Tuples._2<SNode,String> resource=artifacts.getResource(SLinkOperations.getTarget(SNodeOperations.cast(target,"jetbrains.mps.build.structure.BuildInputSingleFile"),"path",true));
    artifact=SNodeOperations.as(resource._0(),"jetbrains.mps.build.structure.BuildLayout_Node");
    withContent=isNotEmptyString(resource._1());
  }
  if (artifact == null) {
    return null;
  }
  return MultiTuple.<SNode,Boolean>from(artifact,withContent);
}
