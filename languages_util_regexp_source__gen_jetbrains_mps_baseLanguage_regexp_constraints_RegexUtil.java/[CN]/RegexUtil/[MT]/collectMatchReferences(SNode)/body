{
  List<SNode> matches=new ArrayList<SNode>();
  for (  SNode ruc : SNodeOperations.getAncestors(enclosingNode,"jetbrains.mps.baseLanguage.regexp.structure.RegexpUsingConstruction",true)) {
    ListSequence.fromList(matches).addSequence(ListSequence.fromList(collectNamedParentheses(ruc)));
  }
  for (  SNode ifst : SNodeOperations.getAncestors(enclosingNode,"jetbrains.mps.baseLanguage.structure.IfStatement",true)) {
    SNode toCollect=null;
    if (ListSequence.fromList(SNodeOperations.getAncestors(enclosingNode,null,true)).contains(SLinkOperations.getTarget(ifst,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123159l,1068580123161l,"ifTrue")))) {
      toCollect=SLinkOperations.getTarget(ifst,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123159l,1068580123160l,"condition"));
    }
 else {
      for (      SNode elseif : SLinkOperations.getChildren(ifst,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123159l,1206060520071l,"elsifClauses"))) {
        if (ListSequence.fromList(SNodeOperations.getAncestors(enclosingNode,null,true)).contains(SLinkOperations.getTarget(elseif,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1206060495898l,1206060644605l,"statementList")))) {
          toCollect=SLinkOperations.getTarget(elseif,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1206060495898l,1206060619838l,"condition"));
          break;
        }
      }
    }
    if (toCollect != null) {
      for (      SNode expr : SNodeOperations.getDescendants(toCollect,"jetbrains.mps.baseLanguage.regexp.structure.FindMatchExpression",true,new String[]{})) {
        ListSequence.fromList(matches).addSequence(ListSequence.fromList(collectNamedParentheses(expr)));
      }
    }
  }
  return matches;
}
