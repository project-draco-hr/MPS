{
  final List<String> result=ListSequence.fromList(new ArrayList<String>());
  ClassLoader classLoader=UrlClassLoader.class.getClassLoader();
  Class cls=classLoader.getClass();
  try {
    List<URL> urls=((List<URL>)cls.getMethod("getUrls",new Class[0]).invoke(classLoader,new Object[0]));
    for (    URL url : urls) {
      ListSequence.fromList(result).addElement(new URI(url.toString()).getPath());
    }
  }
 catch (  Throwable e) {
  }
  Language testsLanguage=(Language)SNodeOperations.getModel(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.test.structure.NodesTestCase")).getModule();
  for (  SModuleReference dep : CollectionSequence.fromCollection(testsLanguage.getRuntimeModulesReferences())) {
    SModule module=dep.resolve(MPSModuleRepository.getInstance());
    JavaModuleFacet facet=module.getFacet(JavaModuleFacet.class);
    if (facet != null) {
      ListSequence.fromList(result).addSequence(SetSequence.fromSet(facet.getClassPath()));
    }
  }
  ListSequence.fromList(result).addSequence(ListSequence.fromList(getPluginClasspath()));
  return result;
}
