{
  final Iterable<? extends IResource> inputRes=params.collectInput(!(this.cleanMake));
  ScriptBuilder scb=new ScriptBuilder();
  scb=scb.withFacets(new IFacet.Name("Generate"),new IFacet.Name("TextGen"),new IFacet.Name("JavaCompile"),new IFacet.Name("Make")).withTarget(new ITarget.Name("make"));
  final IScript scr=this.completeScript(scb.toScript());
  if (!(scr.isValid())) {
    context.getProject().getComponent(MessagesViewTool.class).add(new Message(MessageKind.ERROR,(cleanMake ? "Rebuild" : "Make") + " failed. Invalid script."));
    return;
  }
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      SModelRepository.getInstance().saveAll();
    }
  }
);
  final Wrappers._T<IResult> res=new Wrappers._T<IResult>();
  new IMakeService.ScriptExecutor(){
    public void doExecute(    Runnable runnable){
      dodoExecute(inputRes,runnable);
    }
  }
.doExecute(new Runnable(){
    public void run(){
      res.value=scr.execute(inputRes);
    }
  }
);
  if (!(res.value.isSucessful())) {
    context.getProject().getComponent(MessagesViewTool.class).add(new Message(MessageKind.ERROR,(cleanMake ? "Rebuild" : "Make") + " failed. See previous messages for details."));
  }
}
