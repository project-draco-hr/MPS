{
  try {
    FeatureUsageTracker.getInstance().triggerFeatureUsed("refactoring.rename");
    ModelAccess modelAccess=((MPSProject)MapSequence.fromMap(_params).get("project")).getRepository().getModelAccess();
    final Wrappers._T<List<SNode>> overridingList=new Wrappers._T<List<SNode>>();
    modelAccess.runReadAction(new Runnable(){
      public void run(){
        overridingList.value=MethodRefactoringUtils.findOverridingMethods(RenameUtil.getMethodDeclaration(((SNode)MapSequence.fromMap(_params).get("target"))),new EmptyProgressMonitor());
      }
    }
);
    final Wrappers._T<String> oldName=new Wrappers._T<String>();
    modelAccess.runReadAction(new Runnable(){
      public void run(){
        if (SNodeOperations.isInstanceOf(((SNode)MapSequence.fromMap(_params).get("target")),"jetbrains.mps.baseLanguage.structure.IMethodCall")) {
          oldName.value=SPropertyOperations.getString(SLinkOperations.getTarget(SNodeOperations.cast(((SNode)MapSequence.fromMap(_params).get("target")),"jetbrains.mps.baseLanguage.structure.IMethodCall"),"baseMethodDeclaration",false),"name");
        }
 else         if (SNodeOperations.isInstanceOf(((SNode)MapSequence.fromMap(_params).get("target")),"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration")) {
          oldName.value=SPropertyOperations.getString(SNodeOperations.cast(((SNode)MapSequence.fromMap(_params).get("target")),"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"),"name");
        }
      }
    }
);
    final RenameMethodDialog d=new RenameMethodDialog(((MPSProject)MapSequence.fromMap(_params).get("project")).getProject(),oldName.value,ListSequence.fromList(overridingList.value).isNotEmpty());
    d.show();
    final String newName=d.getName();
    if (newName == null) {
      return;
    }
    modelAccess.runReadInEDT(new Runnable(){
      @Override public void run(){
        SNode node=((SNode)((SNode)MapSequence.fromMap(_params).get("target")));
        if (!(SNodeUtil.isAccessible(node,MPSModuleRepository.getInstance()))) {
          return;
        }
        RefactoringAccess.getInstance().getRefactoringFacade().execute(RefactoringContext.createRefactoringContextByName("jetbrains.mps.baseLanguage.refactorings.RenameMethod",Arrays.asList("newName","refactorOverriding"),Arrays.asList(newName,d.getOverriding()),((SNode)MapSequence.fromMap(_params).get("target")),((MPSProject)MapSequence.fromMap(_params).get("project"))));
      }
    }
);
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "RenameMethod",t);
    }
  }
}
