{
  try {
    if (!isIncrementalMode() || refreshTypes) {
      clear();
    }
 else {
      doInvalidateTypesystem();
      myPartlyCheckedNodes.addAll(myFullyCheckedNodes);
      myFullyCheckedNodes.clear();
    }
    if (!loadTypesystemRules(nodeToCheck)) {
      return;
    }
    clearEquationManager();
    if (inferenceMode) {
      getEquationManager().setInferenceMode();
    }
    if (myIsSmartCompletion) {
      myHoleTypeWrapper=HoleWrapper.createHoleWrapper(myEquationManager,myHoleTypeWrapper);
      if (!myHoleIsAType) {
        myNodesToTypesMap.put(myHole,myHoleTypeWrapper.getNode());
      }
    }
    computeTypesForNode(nodeToCheck,forceChildrenCheck,additionalNodes);
    solveInequationsAndExpandTypes();
    performActionsAfterChecking();
  }
  finally {
    clearEquationManager();
    myInvalidationWasPerformed=false;
  }
}
