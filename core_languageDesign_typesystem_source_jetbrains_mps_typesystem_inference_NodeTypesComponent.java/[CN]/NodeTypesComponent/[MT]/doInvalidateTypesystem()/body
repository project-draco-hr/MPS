{
  Set<SNode> invalidatedNodes=new HashSet<SNode>();
  Set<SNode> newNodesToInvalidate=new HashSet<SNode>();
  Set<SNode> currentNodesToInvalidate=myCurrentNodesToInvalidate;
  if (myCacheWasCurrentlyRebuiltTypesystem) {
    currentNodesToInvalidate.addAll(myNodesDependentOnCaches);
  }
  while (!currentNodesToInvalidate.isEmpty()) {
    for (    SNode nodeToInvalidate : currentNodesToInvalidate) {
      if (invalidatedNodes.contains(nodeToInvalidate))       continue;
      invalidateNodeTypesystem(nodeToInvalidate);
      invalidatedNodes.add(nodeToInvalidate);
      WeakSet<SNode> nodes=myNodesToDependentNodes.get(nodeToInvalidate);
      if (nodes != null) {
        newNodesToInvalidate.addAll(nodes);
      }
    }
    currentNodesToInvalidate=newNodesToInvalidate;
    newNodesToInvalidate=new HashSet<SNode>();
  }
  myCurrentNodesToInvalidate.clear();
  myCacheWasCurrentlyRebuiltTypesystem=false;
}
