{
  boolean result=false;
  Set<AbstractDependentComputation_Runtime> dependentComputations=myTypeChecker.getRulesManager().getDependentComputations(node);
  for (  AbstractDependentComputation_Runtime dependentComputation : dependentComputations) {
    SNode blockingNode=dependentComputation.getBlockingNode(node);
    if (blockingNode != null) {
      if (!myComputedBlockingTerms.contains(blockingNode)) {
        result=true;
        Set<SNode> nodes=myBlockedOnSlaveComputation.get(blockingNode);
        if (nodes == null) {
          nodes=new HashSet<SNode>();
          myBlockedOnSlaveComputation.put(blockingNode,nodes);
        }
        nodes.add(node);
      }
    }
  }
  return result;
}
