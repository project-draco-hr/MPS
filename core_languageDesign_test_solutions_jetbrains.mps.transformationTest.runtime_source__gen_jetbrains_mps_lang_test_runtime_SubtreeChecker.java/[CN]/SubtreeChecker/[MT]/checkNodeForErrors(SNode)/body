{
  TypeChecker checker=TypeChecker.getInstance();
  checker.checkIfNotChecked(node);
  for (  SNode child : SNodeOperations.getDescendants(node,"jetbrains.mps.lang.core.structure.BaseConcept",false)) {
    boolean isError=false;
    if (SLinkOperations.getTarget(child,AttributesRolesUtil.childRoleFromAttributeRole("nodePropertiesMarker"),true) != null) {
      SNode container=SLinkOperations.getTarget(child,AttributesRolesUtil.childRoleFromAttributeRole("nodePropertiesMarker"),true);
      for (      SNode property : SLinkOperations.getTargets(container,"properties",true)) {
        if (SNodeOperations.isInstanceOf(property,"jetbrains.mps.lang.test.structure.NodeTypeProperty")) {
          SNode type1=checker.getTypeOf(child);
          SNode type2=SLinkOperations.getTarget(SNodeOperations.cast(property,"jetbrains.mps.lang.test.structure.NodeTypeProperty"),"type",true);
          Assert.assertEquals(null,NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(),type1),ListSequence.fromListAndArray(new ArrayList<SNode>(),type2)));
        }
        if (SNodeOperations.isInstanceOf(property,"jetbrains.mps.lang.test.structure.NodeErrorPropety")) {
          Assert.assertTrue(checker.getTypeMessageDontCheck(child) != null);
          Assert.assertFalse(checker.getTypeMessageDontCheck(child).getMessageStatus() == MessageStatus.WARNING);
          isError=true;
        }
        if (SNodeOperations.isInstanceOf(property,"jetbrains.mps.lang.test.structure.NodeWarningProperty")) {
          Assert.assertTrue(checker.getTypeMessageDontCheck(child) != null);
          Assert.assertTrue(checker.getTypeMessageDontCheck(child).getMessageStatus() == MessageStatus.WARNING);
          isError=true;
        }
      }
    }
    if (!(isError)) {
      IErrorReporter reporter=checker.getTypeMessageDontCheck(child);
      Assert.assertTrue(reporter == null || reporter.getMessageStatus() == MessageStatus.OK);
    }
  }
}
