{
  Program program=DataFlowManager.getInstance().buildProgramFor(node);
  Set<Instruction> unreachable=program.getUnreachableInstructions();
  AnalysisResult<Set<Object>> initialyzed=program.analyze(new InitializedVariablesAnalyzer());
  AnalysisResult<Set<Object>> live=program.analyze(new LivenessAnalyzer());
  for (  SNode child : SNodeOperations.getDescendants(node,"jetbrains.mps.lang.core.structure.BaseConcept",false)) {
    if (SLinkOperations.getTarget(child,AttributesRolesUtil.childRoleFromAttributeRole("nodePropertiesMarker"),true) != null) {
      SNode container=SLinkOperations.getTarget(child,AttributesRolesUtil.childRoleFromAttributeRole("nodePropertiesMarker"),true);
      for (      SNode property : SLinkOperations.getTargets(container,"properties",true)) {
        Instruction instruction;
        List<Instruction> instructions=program.getInstructionsFor(child);
        if (ListSequence.fromList(instructions).count() > 0) {
          instruction=program.getInstructionsFor(child).get(0);
        }
 else {
          continue;
        }
        if (SNodeOperations.isInstanceOf(property,"jetbrains.mps.lang.test.structure.NodeReachable")) {
          Assert.assertFalse(SetSequence.fromSet(unreachable).contains(instruction));
        }
        if (SNodeOperations.isInstanceOf(property,"jetbrains.mps.lang.test.structure.NodeUnreachable")) {
          Assert.assertTrue(SetSequence.fromSet(unreachable).contains(instruction));
        }
        if (SNodeOperations.isInstanceOf(property,"jetbrains.mps.lang.test.structure.NodeUnreachable")) {
          Assert.assertTrue(SetSequence.fromSet(unreachable).contains(instruction));
        }
        if (SNodeOperations.isInstanceOf(property,"jetbrains.mps.lang.test.structure.VariableInialized")) {
          Set<Object> vars=initialyzed.get(instruction);
          SNode var=SLinkOperations.getTarget(((SNode)property),"var",true);
          Assert.assertTrue(SetSequence.fromSet(vars).contains(SLinkOperations.getTarget(var,"variableDeclaration",false)));
        }
        if (SNodeOperations.isInstanceOf(property,"jetbrains.mps.lang.test.structure.VariableLive")) {
          Set<Object> vars=live.get(instruction);
          SNode var=SLinkOperations.getTarget(((SNode)property),"var",true);
          Assert.assertTrue(SetSequence.fromSet(vars).contains(SLinkOperations.getTarget(var,"variableDeclaration",false)));
        }
      }
    }
  }
}
