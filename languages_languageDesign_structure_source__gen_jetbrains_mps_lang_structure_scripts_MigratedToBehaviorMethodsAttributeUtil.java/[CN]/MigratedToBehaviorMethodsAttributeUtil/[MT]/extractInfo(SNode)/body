{
  SNode info=SConceptOperations.createNewNode("jetbrains.mps.lang.structure.structure.AttributeInfo",null);
  SPropertyOperations.set(info,"role","");
  SNode behavior=SNodeOperations.as(AbstractConceptDeclaration_Behavior.call_findConceptAspect_8360039740498068384(attributeDeclaration,LanguageAspect.BEHAVIOR),"jetbrains.mps.lang.behavior.structure.ConceptBehavior");
  if ((behavior == null)) {
    return info;
  }
  SNode multipleImpl=findImplementation(behavior,SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590282(jetbrains.mps.lang.core.behavior)","1262430001741497972"));
  if (ListSequence.fromList(SNodeOperations.getDescendants(multipleImpl,"jetbrains.mps.baseLanguage.structure.BooleanConstant",false,new String[]{})).isNotEmpty()) {
    SLinkOperations.setTarget(info,"multiple",SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.BooleanConstant",null),true);
    SPropertyOperations.set(SLinkOperations.getTarget(info,"multiple",true),"value","" + (SPropertyOperations.getBoolean(ListSequence.fromList(SNodeOperations.getDescendants(multipleImpl,"jetbrains.mps.baseLanguage.structure.BooleanConstant",false,new String[]{})).first(),"value")));
  }
  SNode roleImpl=findImplementation(behavior,SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590282(jetbrains.mps.lang.core.behavior)","1262430001741497900"));
  if (ListSequence.fromList(SNodeOperations.getDescendants(roleImpl,"jetbrains.mps.baseLanguage.structure.StringLiteral",false,new String[]{})).isNotEmpty()) {
    SPropertyOperations.set(info,"role",SPropertyOperations.getString(ListSequence.fromList(SNodeOperations.getDescendants(roleImpl,"jetbrains.mps.baseLanguage.structure.StringLiteral",false,new String[]{})).first(),"value"));
  }
  SNode attributedImpl=findImplementation(behavior,SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590282(jetbrains.mps.lang.core.behavior)","3044950653914717013"));
  for (  SNode conceptDecl : ListSequence.fromList(SNodeOperations.getDescendants(attributedImpl,"jetbrains.mps.lang.smodel.structure.NodeRefExpression",false,new String[]{})).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(SLinkOperations.getTarget(it,"referentNode",false),"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration");
    }
  }
)) {
    ListSequence.fromList(SLinkOperations.getTargets(info,"attributed",true)).addElement(createConceptReference_1yrhux_a0a0a31a0(conceptDecl));
  }
  return info;
}
