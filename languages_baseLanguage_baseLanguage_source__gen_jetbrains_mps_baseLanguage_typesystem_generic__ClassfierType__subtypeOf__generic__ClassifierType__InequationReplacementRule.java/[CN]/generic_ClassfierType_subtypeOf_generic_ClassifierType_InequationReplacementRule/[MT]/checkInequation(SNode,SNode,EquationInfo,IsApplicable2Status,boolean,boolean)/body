{
  boolean result_14532009=true;
{
    GeneratedMatchingPattern pattern_e5spwb_a0=new generic_ClassfierType_subtypeOf_generic_ClassifierType_InequationReplacementRule.Pattern_nn7be_a0a0a0a1a3(SLinkOperations.getTarget(supertype,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")));
    SNode coercedNode_e5spwb_a0=TypeChecker.getInstance().getRuntimeSupport().coerce_(subtype,pattern_e5spwb_a0);
    if (coercedNode_e5spwb_a0 != null) {
      Map<SNode,SNode> subsLeft=MapSequence.fromMap(new HashMap<SNode,SNode>());
      Map<SNode,SNode> subsRight=MapSequence.fromMap(new HashMap<SNode,SNode>());
      IGenericType__BehaviorDescriptor.collectGenericSubstitutions_id3zZky3wF74h.invoke(coercedNode_e5spwb_a0,subsLeft);
      IGenericType__BehaviorDescriptor.collectGenericSubstitutions_id3zZky3wF74h.invoke(supertype,subsRight);
      MapSequence.fromMap(subsLeft).putAll(subsRight);
      SNode ctLeftExp=SNodeOperations.cast(IGenericType__BehaviorDescriptor.expandGenerics_id3zZky3wFPhu.invoke(coercedNode_e5spwb_a0,subsLeft),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType"));
      SNode ctRightExp=SNodeOperations.cast(IGenericType__BehaviorDescriptor.expandGenerics_id3zZky3wFPhu.invoke(supertype,subsRight),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType"));
      Iterator<SNode> leftParamIt=ListSequence.fromList(SLinkOperations.getChildren(ctLeftExp,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x102419671abL,"parameter"))).iterator();
      Iterator<SNode> rightParamIt=ListSequence.fromList(SLinkOperations.getChildren(ctRightExp,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x102419671abL,"parameter"))).iterator();
      while (leftParamIt.hasNext() && rightParamIt.hasNext()) {
        final SNode leftParam=leftParamIt.next();
        final SNode rightParam=rightParamIt.next();
        if (SNodeOperations.isInstanceOf(rightParam,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110daeaa84aL,"jetbrains.mps.baseLanguage.structure.UpperBoundType"))) {
          if (SNodeOperations.isInstanceOf(leftParam,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110daeaa84aL,"jetbrains.mps.baseLanguage.structure.UpperBoundType"))) {
            result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)SLinkOperations.getTarget(SNodeOperations.cast(leftParam,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110daeaa84aL,"jetbrains.mps.baseLanguage.structure.UpperBoundType")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110daeaa84aL,0x110daeaa84bL,"bound")),(SNode)SLinkOperations.getTarget(SNodeOperations.cast(rightParam,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110daeaa84aL,"jetbrains.mps.baseLanguage.structure.UpperBoundType")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110daeaa84aL,0x110daeaa84bL,"bound")),true);
          }
 else {
            result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)leftParam,(SNode)SLinkOperations.getTarget(SNodeOperations.cast(rightParam,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110daeaa84aL,"jetbrains.mps.baseLanguage.structure.UpperBoundType")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110daeaa84aL,0x110daeaa84bL,"bound")),true);
          }
        }
 else         if (SNodeOperations.isInstanceOf(rightParam,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110dae9d53dL,"jetbrains.mps.baseLanguage.structure.LowerBoundType"))) {
          if (SNodeOperations.isInstanceOf(leftParam,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110dae9d53dL,"jetbrains.mps.baseLanguage.structure.LowerBoundType"))) {
            result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)SLinkOperations.getTarget(SNodeOperations.cast(rightParam,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110dae9d53dL,"jetbrains.mps.baseLanguage.structure.LowerBoundType")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110dae9d53dL,0x110dae9f25bL,"bound")),(SNode)SLinkOperations.getTarget(SNodeOperations.cast(leftParam,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110dae9d53dL,"jetbrains.mps.baseLanguage.structure.LowerBoundType")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110dae9d53dL,0x110dae9f25bL,"bound")),true);
          }
 else {
            result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)SLinkOperations.getTarget(SNodeOperations.cast(rightParam,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110dae9d53dL,"jetbrains.mps.baseLanguage.structure.LowerBoundType")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110dae9d53dL,0x110dae9f25bL,"bound")),(SNode)leftParam,true);
          }
        }
 else         if (SNodeOperations.isInstanceOf(leftParam,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110dae9d53dL,"jetbrains.mps.baseLanguage.structure.LowerBoundType"))) {
          result_14532009=result_14532009 && MatchingUtil.matchNodes((SNode)rightParam,(SNode)leftParam);
        }
 else         if (SNodeOperations.isInstanceOf(rightParam,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110dae5f4a3L,"jetbrains.mps.baseLanguage.structure.WildCardType"))) {
        }
 else         if (SNodeOperations.isInstanceOf(leftParam,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType")) && SNodeOperations.isInstanceOf(rightParam,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType"))) {
          result_14532009=result_14532009 && MatchingUtil.matchNodes((SNode)leftParam,(SNode)rightParam);
        }
 else         if (SNodeOperations.isInstanceOf(leftParam,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType")) && SNodeOperations.isInstanceOf(rightParam,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType"))) {
          result_14532009=result_14532009 && MatchingUtil.matchNodes((SNode)leftParam,(SNode)rightParam);
        }
 else {
          result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)leftParam,(SNode)rightParam,true);
          result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)rightParam,(SNode)leftParam,true);
        }
      }
      if (leftParamIt.hasNext() || rightParamIt.hasNext()) {
        result_14532009=false;
      }
    }
 else {
    }
  }
  return result_14532009;
}
