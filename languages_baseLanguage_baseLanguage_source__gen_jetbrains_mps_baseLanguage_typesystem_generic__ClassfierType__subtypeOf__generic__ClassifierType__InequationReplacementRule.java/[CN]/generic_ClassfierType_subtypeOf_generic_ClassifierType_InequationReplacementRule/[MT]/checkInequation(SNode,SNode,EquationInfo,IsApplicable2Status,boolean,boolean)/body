{
  boolean result_14532009=true;
{
    GeneratedMatchingPattern pattern_e5spwb_a0=new generic_ClassfierType_subtypeOf_generic_ClassifierType_InequationReplacementRule.Pattern_nn7be_a0a0a0a1a3(SLinkOperations.getTarget(supertype,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1107535924139l,"classifier")));
    SNode coercedNode_e5spwb_a0=TypeChecker.getInstance().getRuntimeSupport().coerce_(subtype,pattern_e5spwb_a0);
    if (coercedNode_e5spwb_a0 != null) {
      Map<SNode,SNode> subsLeft=MapSequence.fromMap(new HashMap<SNode,SNode>());
      Map<SNode,SNode> subsRight=MapSequence.fromMap(new HashMap<SNode,SNode>());
      BehaviorReflection.invokeVirtual(Void.class,coercedNode_e5spwb_a0,"virtual_collectGenericSubstitutions_4107091686347010321",new Object[]{subsLeft});
      BehaviorReflection.invokeVirtual(Void.class,supertype,"virtual_collectGenericSubstitutions_4107091686347010321",new Object[]{subsRight});
      MapSequence.fromMap(subsLeft).putAll(subsRight);
      SNode ctLeftExp=SNodeOperations.cast(BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),coercedNode_e5spwb_a0,"virtual_expandGenerics_4107091686347199582",new Object[]{subsLeft}),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType"));
      SNode ctRightExp=SNodeOperations.cast(BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),supertype,"virtual_expandGenerics_4107091686347199582",new Object[]{subsRight}),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType"));
      Iterator<SNode> leftParamIt=ListSequence.fromList(SLinkOperations.getChildren(ctLeftExp,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1109201940907l,"parameter"))).iterator();
      Iterator<SNode> rightParamIt=ListSequence.fromList(SLinkOperations.getChildren(ctRightExp,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1109201940907l,"parameter"))).iterator();
      while (leftParamIt.hasNext() && rightParamIt.hasNext()) {
        final SNode leftParam=leftParamIt.next();
        final SNode rightParam=rightParamIt.next();
        if (SNodeOperations.isInstanceOf(rightParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1171903916106l,"jetbrains.mps.baseLanguage.structure.UpperBoundType"))) {
          if (SNodeOperations.isInstanceOf(leftParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1171903916106l,"jetbrains.mps.baseLanguage.structure.UpperBoundType"))) {
            result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)SLinkOperations.getTarget(SNodeOperations.cast(leftParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1171903916106l,"jetbrains.mps.baseLanguage.structure.UpperBoundType")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1171903916106l,1171903916107l,"bound")),(SNode)SLinkOperations.getTarget(SNodeOperations.cast(rightParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1171903916106l,"jetbrains.mps.baseLanguage.structure.UpperBoundType")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1171903916106l,1171903916107l,"bound")),true);
          }
 else {
            result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)leftParam,(SNode)SLinkOperations.getTarget(SNodeOperations.cast(rightParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1171903916106l,"jetbrains.mps.baseLanguage.structure.UpperBoundType")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1171903916106l,1171903916107l,"bound")),true);
          }
        }
 else         if (SNodeOperations.isInstanceOf(rightParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1171903862077l,"jetbrains.mps.baseLanguage.structure.LowerBoundType"))) {
          if (SNodeOperations.isInstanceOf(leftParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1171903862077l,"jetbrains.mps.baseLanguage.structure.LowerBoundType"))) {
            result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)SLinkOperations.getTarget(SNodeOperations.cast(rightParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1171903862077l,"jetbrains.mps.baseLanguage.structure.LowerBoundType")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1171903862077l,1171903869531l,"bound")),(SNode)SLinkOperations.getTarget(SNodeOperations.cast(leftParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1171903862077l,"jetbrains.mps.baseLanguage.structure.LowerBoundType")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1171903862077l,1171903869531l,"bound")),true);
          }
 else {
            result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)SLinkOperations.getTarget(SNodeOperations.cast(rightParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1171903862077l,"jetbrains.mps.baseLanguage.structure.LowerBoundType")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1171903862077l,1171903869531l,"bound")),(SNode)leftParam,true);
          }
        }
 else         if (SNodeOperations.isInstanceOf(leftParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1171903862077l,"jetbrains.mps.baseLanguage.structure.LowerBoundType"))) {
          result_14532009=result_14532009 && MatchingUtil.matchNodes((SNode)rightParam,(SNode)leftParam);
        }
 else         if (SNodeOperations.isInstanceOf(rightParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1171903607971l,"jetbrains.mps.baseLanguage.structure.WildCardType"))) {
        }
 else         if (SNodeOperations.isInstanceOf(leftParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType")) && SNodeOperations.isInstanceOf(rightParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType"))) {
          result_14532009=result_14532009 && MatchingUtil.matchNodes((SNode)leftParam,(SNode)rightParam);
        }
 else         if (SNodeOperations.isInstanceOf(leftParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType")) && SNodeOperations.isInstanceOf(rightParam,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType"))) {
          result_14532009=result_14532009 && MatchingUtil.matchNodes((SNode)leftParam,(SNode)rightParam);
        }
 else {
          result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)leftParam,(SNode)rightParam,true);
          result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)rightParam,(SNode)leftParam,true);
        }
      }
      if (leftParamIt.hasNext() || rightParamIt.hasNext()) {
        result_14532009=false;
      }
    }
 else {
    }
  }
  return result_14532009;
}
