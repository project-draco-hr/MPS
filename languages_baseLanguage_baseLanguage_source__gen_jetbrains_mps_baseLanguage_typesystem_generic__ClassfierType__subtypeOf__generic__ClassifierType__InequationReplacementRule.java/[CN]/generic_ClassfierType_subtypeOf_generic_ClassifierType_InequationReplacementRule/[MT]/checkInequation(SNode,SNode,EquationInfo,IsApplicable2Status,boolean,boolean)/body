{
  boolean result_14532009=true;
{
    Iterator<SNode> leftParamIt=ListSequence.fromList(SLinkOperations.getTargets(subtype,"parameter",true)).iterator();
    Iterator<SNode> rightParamIt=ListSequence.fromList(SLinkOperations.getTargets(supertype,"parameter",true)).iterator();
    while (leftParamIt.hasNext() && rightParamIt.hasNext()) {
      SNode leftParam=leftParamIt.next();
      SNode rightParam=rightParamIt.next();
      if (SNodeOperations.isInstanceOf(rightParam,"jetbrains.mps.baseLanguage.structure.UpperBoundType")) {
        result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)leftParam,(SNode)SLinkOperations.getTarget(SNodeOperations.cast(rightParam,"jetbrains.mps.baseLanguage.structure.UpperBoundType"),"bound",true),true);
      }
 else       if (SNodeOperations.isInstanceOf(rightParam,"jetbrains.mps.baseLanguage.structure.LowerBoundType")) {
        result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)SLinkOperations.getTarget(SNodeOperations.cast(rightParam,"jetbrains.mps.baseLanguage.structure.LowerBoundType"),"bound",true),(SNode)leftParam,true);
      }
 else       if (SNodeOperations.isInstanceOf(rightParam,"jetbrains.mps.baseLanguage.structure.WildCardType")) {
        result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)leftParam,(SNode)rightParam,true);
      }
 else {
        result_14532009=result_14532009 && MatchingUtil.matchNodes((SNode)leftParam,(SNode)rightParam);
      }
    }
    if (leftParamIt.hasNext() || rightParamIt.hasNext()) {
      result_14532009=false;
    }
  }
  return result_14532009;
}
