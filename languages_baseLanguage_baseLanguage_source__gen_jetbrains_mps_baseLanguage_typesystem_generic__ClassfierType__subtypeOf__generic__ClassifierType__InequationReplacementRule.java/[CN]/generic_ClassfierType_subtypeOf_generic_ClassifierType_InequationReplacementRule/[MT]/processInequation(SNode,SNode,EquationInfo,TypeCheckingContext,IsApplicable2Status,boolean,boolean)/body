{
  Iterator<SNode> leftParamIt=ListSequence.fromList(SLinkOperations.getTargets(subtype,"parameter",true)).iterator();
  Iterator<SNode> rightParamIt=ListSequence.fromList(SLinkOperations.getTargets(supertype,"parameter",true)).iterator();
  while (leftParamIt.hasNext() && rightParamIt.hasNext()) {
    SNode leftParam=leftParamIt.next();
    SNode rightParam=rightParamIt.next();
    if (SNodeOperations.isInstanceOf(rightParam,"jetbrains.mps.baseLanguage.structure.UpperBoundType")) {
{
        SNode _nodeToCheck_1029348928467=equationInfo.getNodeWithError();
        EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","2731213890635159241",0,null);
        _info_12389875345.getOuterRulesIdFromInfo(equationInfo);
        typeCheckingContext.createLessThanInequality((SNode)leftParam,(SNode)SLinkOperations.getTarget(SNodeOperations.cast(rightParam,"jetbrains.mps.baseLanguage.structure.UpperBoundType"),"bound",true),false,true,_info_12389875345);
      }
    }
 else     if (SNodeOperations.isInstanceOf(rightParam,"jetbrains.mps.baseLanguage.structure.LowerBoundType")) {
{
        SNode _nodeToCheck_1029348928467=equationInfo.getNodeWithError();
        EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","2731213890635159351",0,null);
        _info_12389875345.getOuterRulesIdFromInfo(equationInfo);
        typeCheckingContext.createGreaterThanInequality((SNode)leftParam,(SNode)SLinkOperations.getTarget(SNodeOperations.cast(rightParam,"jetbrains.mps.baseLanguage.structure.LowerBoundType"),"bound",true),false,true,_info_12389875345);
      }
    }
 else     if (SNodeOperations.isInstanceOf(rightParam,"jetbrains.mps.baseLanguage.structure.WildCardType")) {
{
        SNode _nodeToCheck_1029348928467=equationInfo.getNodeWithError();
        EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","2731213890635159482",0,null);
        _info_12389875345.getOuterRulesIdFromInfo(equationInfo);
        typeCheckingContext.createLessThanInequality((SNode)leftParam,(SNode)rightParam,false,true,_info_12389875345);
      }
    }
 else {
{
        SNode _nodeToCheck_1029348928467=equationInfo.getNodeWithError();
        EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","2731213890635159546",0,null);
        _info_12389875345.getOuterRulesIdFromInfo(equationInfo);
        typeCheckingContext.createEquation((SNode)leftParam,(SNode)rightParam,_info_12389875345);
      }
    }
  }
  if (leftParamIt.hasNext() || rightParamIt.hasNext()) {
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(subtype,"Parameters counts don't match","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","2731213890635126223",null,errorTarget);
      HUtil.addAdditionalRuleIdsFromInfo(_reporter_2309309498,equationInfo);
    }
  }
}
