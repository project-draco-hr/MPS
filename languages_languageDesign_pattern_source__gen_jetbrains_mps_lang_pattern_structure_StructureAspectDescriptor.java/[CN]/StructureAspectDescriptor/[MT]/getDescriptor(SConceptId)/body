{
switch (myConceptIndex.index(id)) {
case LanguageConceptSwitch.ActionAsPattern:
    return myConceptActionAsPattern;
case LanguageConceptSwitch.ActionStatement:
  return myConceptActionStatement;
case LanguageConceptSwitch.AsPattern:
return myConceptAsPattern;
case LanguageConceptSwitch.GeneratorInternal_ChildDescriptor:
return myConceptGeneratorInternal_ChildDescriptor;
case LanguageConceptSwitch.GeneratorInternal_PropertyDescriptor:
return myConceptGeneratorInternal_PropertyDescriptor;
case LanguageConceptSwitch.GeneratorInternal_ReferenceDescriptor:
return myConceptGeneratorInternal_ReferenceDescriptor;
case LanguageConceptSwitch.InsertAfterPosition:
return myConceptInsertAfterPosition;
case LanguageConceptSwitch.InsertBeforePosition:
return myConceptInsertBeforePosition;
case LanguageConceptSwitch.InsertPosition:
return myConceptInsertPosition;
case LanguageConceptSwitch.LinkPatternVariableDeclaration:
return myConceptLinkPatternVariableDeclaration;
case LanguageConceptSwitch.ListPattern:
return myConceptListPattern;
case LanguageConceptSwitch.OrPattern:
return myConceptOrPattern;
case LanguageConceptSwitch.OrPatternClause:
return myConceptOrPatternClause;
case LanguageConceptSwitch.OrPatternVariableReference:
return myConceptOrPatternVariableReference;
case LanguageConceptSwitch.Pattern:
return myConceptPattern;
case LanguageConceptSwitch.PatternExpression:
return myConceptPatternExpression;
case LanguageConceptSwitch.PatternVariableDeclaration:
return myConceptPatternVariableDeclaration;
case LanguageConceptSwitch.PatternVariableReference:
return myConceptPatternVariableReference;
case LanguageConceptSwitch.PropertyPatternVariableDeclaration:
return myConceptPropertyPatternVariableDeclaration;
case LanguageConceptSwitch.WildcardPattern:
return myConceptWildcardPattern;
default :
return null;
}
}
