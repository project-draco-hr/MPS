{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0x,conceptFqName)) {
case 0:
    return myConceptActionAsPattern;
case 1:
  return myConceptActionStatement;
case 2:
return myConceptAsPattern;
case 3:
return myConceptGeneratorInternal_ChildDescriptor;
case 4:
return myConceptGeneratorInternal_PropertyDescriptor;
case 5:
return myConceptGeneratorInternal_ReferenceDescriptor;
case 6:
return myConceptInsertAfterPosition;
case 7:
return myConceptInsertBeforePosition;
case 8:
return myConceptInsertPosition;
case 9:
return myConceptLinkPatternVariableDeclaration;
case 10:
return myConceptListPattern;
case 11:
return myConceptOrPattern;
case 12:
return myConceptOrPatternClause;
case 13:
return myConceptOrPatternVariableReference;
case 14:
return myConceptPattern;
case 15:
return myConceptPatternExpression;
case 16:
return myConceptPatternVariableDeclaration;
case 17:
return myConceptPatternVariableReference;
case 18:
return myConceptPropertyPatternVariableDeclaration;
case 19:
return myConceptWildcardPattern;
default :
throw new IllegalStateException("Wrong fqName of the concept " + conceptFqName);
}
}
