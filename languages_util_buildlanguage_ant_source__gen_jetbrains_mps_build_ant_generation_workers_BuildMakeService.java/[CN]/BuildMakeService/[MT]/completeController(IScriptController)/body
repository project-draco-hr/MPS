{
  final IConfigMonitor cmon=new IConfigMonitor.Stub(){
    public <T extends IOption>T relayQuery(    IQuery<T> query){
      return query.defaultOption();
    }
  }
;
  final IJobMonitor jmon=new IJobMonitor.Stub(){
    @Override public void reportFeedback(    IFeedback fdbk){
      new BuildMakeService.MessageFeedbackStrategy(messageHandler).reportFeedback(fdbk);
    }
  }
;
  final ProgressIndicator pind=new EmptyProgressIndicator();
  return new IScriptController.Stub(){
    public void runConfigWithMonitor(    _FunctionTypes._void_P1_E0<? super IConfigMonitor> code){
      code.invoke(cmon);
    }
    public void runJobWithMonitor(    _FunctionTypes._void_P1_E0<? super IJobMonitor> code){
      final boolean oldFlag=ApplicationImpl.setExceptionalThreadWithReadAccessFlag(true);
      try {
        code.invoke(jmon);
      }
 catch (      Throwable e) {
        BuildMakeService.LOG.error("error running job",e);
      }
 finally {
        ApplicationImpl.setExceptionalThreadWithReadAccessFlag(oldFlag);
      }
    }
    public void setup(    IParametersPool pool){
      Tuples._4<Project,IOperationContext,Boolean,_FunctionTypes._return_P0_E0<? extends ProgressIndicator>> vars=(Tuples._4<Project,IOperationContext,Boolean,_FunctionTypes._return_P0_E0<? extends ProgressIndicator>>)pool.parameters(new ITarget.Name("jetbrains.mps.lang.core.Generate.checkParameters"),Object.class);
      if (vars != null) {
        vars._0(BuildMakeService.this.context.getProject());
        vars._1(BuildMakeService.this.context);
        vars._2(true);
        vars._3(new _FunctionTypes._return_P0_E0<ProgressIndicator>(){
          public ProgressIndicator invoke(){
            return pind;
          }
        }
);
      }
      if (ctl != null) {
        ctl.setup(pool);
      }
    }
  }
;
}
