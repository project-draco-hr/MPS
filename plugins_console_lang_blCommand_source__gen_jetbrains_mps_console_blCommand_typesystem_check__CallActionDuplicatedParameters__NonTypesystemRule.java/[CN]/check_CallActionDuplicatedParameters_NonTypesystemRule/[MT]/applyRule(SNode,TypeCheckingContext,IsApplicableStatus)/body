{
  final Iterable<SNode> parameters=SLinkOperations.getTargets(callAction,"parameter",true);
  Iterable<SNode> parameterFields=Sequence.fromIterable(parameters).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),it,"virtual_getParameterDeclaration_119903734736614698",new Object[]{});
    }
  }
).distinct();
  Iterable<? extends Iterable<SNode>> grouped=Sequence.fromIterable(parameterFields).select(new ISelector<SNode,ISequence<SNode>>(){
    public ISequence<SNode> select(    final SNode c){
      return Sequence.fromIterable(parameters).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode p){
          return eq_7ie7o0_a0a0a0a0a0a0a0a0a0a2a1(BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),p,"virtual_getParameterDeclaration_119903734736614698",new Object[]{}),c);
        }
      }
);
    }
  }
);
  for (  Iterable<SNode> group : Sequence.fromIterable(grouped)) {
    if (Sequence.fromIterable(group).count() > 1) {
      for (      SNode other : Sequence.fromIterable(group).tail(Sequence.fromIterable(group).count() - 1)) {
{
          MessageTarget errorTarget=new NodeMessageTarget();
          IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(other,"Duplicated parameter: " + BehaviorReflection.invokeVirtual(String.class,BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),Sequence.fromIterable(group).first(),"virtual_getParameterDeclaration_119903734736614698",new Object[]{}),"virtual_getFqName_1213877404258",new Object[]{}),"r:7e8cfa8a-da13-467d-9878-63b90b943128(jetbrains.mps.console.blCommand.typesystem)","2284201910213127662",null,errorTarget);
        }
      }
    }
  }
}
