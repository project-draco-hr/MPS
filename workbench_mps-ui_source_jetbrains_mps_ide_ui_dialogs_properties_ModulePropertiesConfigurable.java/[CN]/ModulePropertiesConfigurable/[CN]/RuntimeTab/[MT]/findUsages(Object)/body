{
  final SearchQuery[] query=new SearchQuery[1];
  final IResultProvider[] provider=new IResultProvider[1];
  ModelAccess.instance().runReadAction(new Runnable(){
    @Override public void run(){
      if (value instanceof SModelReference) {
        query[0]=new SearchQuery(SModelRepository.getInstance().getModelDescriptor(((jetbrains.mps.smodel.SModelReference)value).getModelId()),new ModulesScope(Arrays.asList(myModule)));
        provider[0]=FindUtils.makeProvider(new ModelUsagesFinder());
      }
 else       if (value instanceof SModuleReference) {
        query[0]=new SearchQuery(MPSModuleRepository.getInstance().getModuleByFqName(((SModuleReference)value).getModuleName()),GlobalScope.getInstance());
        provider[0]=FindUtils.makeProvider(new ModuleUsagesFinder());
      }
    }
  }
);
  UsagesViewTool usagesViewTool=ProjectHelper.toIdeaProject(myProject).getComponent(UsagesViewTool.class);
  usagesViewTool.findUsages(provider[0],query[0],true,true,true,"No usages found");
  forceCancelCloseDialog();
}
