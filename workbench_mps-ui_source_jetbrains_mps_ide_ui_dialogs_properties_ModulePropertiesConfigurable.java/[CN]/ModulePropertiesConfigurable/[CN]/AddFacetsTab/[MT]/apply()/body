{
  final HashMap<String,ModuleFacetBase> moduleFacets=new HashMap<String,ModuleFacetBase>();
  for (  final SModuleFacet moduleFacet : myModule.getFacets()) {
    if (!(moduleFacet instanceof ModuleFacetBase))     continue;
    moduleFacets.put(((ModuleFacetBase)moduleFacet).getFacetType(),(ModuleFacetBase)moduleFacet);
  }
  for (  JCheckBox checkBox : myCheckBoxes) {
    if (!(checkBox.getClientProperty(CHECKBOX_PROPERTY_KEY) instanceof ModuleFacetBase))     continue;
    ModuleFacetBase facet=(ModuleFacetBase)checkBox.getClientProperty(CHECKBOX_PROPERTY_KEY);
    if (checkBox.isSelected() && !moduleFacets.keySet().contains(facet.getFacetType())) {
      facet.setModule(myModule);
      Memento memento=new MementoImpl();
      facet.save(memento);
      myModuleDescriptor.getModuleFacetDescriptors().add(new ModuleFacetDescriptor(facet.getFacetType(),memento));
    }
 else     if (!checkBox.isSelected() && moduleFacets.keySet().contains(facet.getFacetType())) {
      Iterator<ModuleFacetDescriptor> it=myModuleDescriptor.getModuleFacetDescriptors().iterator();
      while (it.hasNext()) {
        ModuleFacetDescriptor facetDescriptor=it.next();
        if (facetDescriptor.getType().equals(facet.getFacetType())) {
          myModuleDescriptor.getModuleFacetDescriptors().remove(facetDescriptor);
          break;
        }
      }
    }
  }
}
