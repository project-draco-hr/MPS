{
  if (myModule instanceof Language || myModule instanceof Solution) {
    JPanel panel=new JPanel();
    panel.setLayout(new GridLayoutManager(1,2,new JBInsets(0,0,0,0),-1,-1));
    JBLabel label=new JBLabel(PropertiesBundle.message("mps.properties.configurable.module.javatab.genoutlabel"));
    panel.add(label,new GridConstraints(0,0,1,1,GridConstraints.ANCHOR_WEST,GridConstraints.FILL_NONE,GridConstraints.SIZEPOLICY_FIXED,GridConstraints.SIZEPOLICY_FIXED,null,null,null,0,false));
    myGenOut=new JTextField();
    final FileChooserDescriptor outputPathsChooserDescriptor=FileChooserDescriptorFactory.createSingleFolderDescriptor();
    InsertPathAction.addTo(myGenOut,outputPathsChooserDescriptor);
    outputPathsChooserDescriptor.setHideIgnored(false);
    BrowseFilesListener listener=new BrowseFilesListener(myGenOut,"","",outputPathsChooserDescriptor);
    FieldPanel genOutPath=new FieldPanel(myGenOut,null,null,listener,EmptyRunnable.getInstance());
    FileChooserFactory.getInstance().installFileCompletion(genOutPath.getTextField(),outputPathsChooserDescriptor,true,null);
    genOutPath.setText(getGenOutPath());
    genOutPath.setPreferredSize(new Dimension(300,20));
    panel.add(genOutPath,new GridConstraints(0,1,1,1,GridConstraints.ANCHOR_WEST,GridConstraints.FILL_HORIZONTAL,GridConstraints.SIZEPOLICY_CAN_GROW,GridConstraints.SIZEPOLICY_FIXED,null,null,null,0,false));
    return panel;
  }
  return null;
}
