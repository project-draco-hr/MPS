{
  final SearchQuery[] query=new SearchQuery[1];
  final IResultProvider[] provider=new IResultProvider[1];
  final IScope scope=(IScope)myModule.getModuleScope();
  ModelAccess.instance().runReadAction(new Runnable(){
    @Override public void run(){
      if (value instanceof ModuleReference) {
        query[0]=new SearchQuery(MPSModuleRepository.getInstance().getModuleByFqName(((ModuleReference)value).getModuleFqName()),scope);
        provider[0]=FindUtils.makeProvider(new ModuleUsagesFinder());
      }
    }
  }
);
  IUsagesViewTool usagesViewTool=(IUsagesViewTool)ProjectHelper.toIdeaProject(myProject).getComponent("jetbrains.mps.ide.findusages.view.UsagesViewTool");
  usagesViewTool.findUsages(provider[0],query[0],true,true,true,"No usages found");
  forceCancelCloseDialog();
}
