{
  return new AnActionButtonRunnable(){
    @Override public void run(    AnActionButton anActionButton){
      final boolean isDevkit=myModule instanceof DevKit;
      Iterable<SModule> selectionSet=getProjectModules();
      if (isDevkit) {
        selectionSet=new ConditionalIterable<SModule>(selectionSet,new VisibleModuleCondition());
      }
      ComputeRunnable<List<SModuleReference>> c=new ComputeRunnable<List<SModuleReference>>(new ModuleCollector(selectionSet));
      myProject.getModelAccess().runReadAction(c);
      final String dialogTitle=isDevkit ? "Choose DevKit contents" : "Choose modules";
      final List<SModuleReference> list=CommonChoosers.showModuleSetChooser(myProject,dialogTitle,c.getResult());
      if (list.isEmpty()) {
        return;
      }
      myProject.getModelAccess().runReadAction(new Runnable(){
        @Override public void run(){
          for (          SModuleReference moduleReference : list) {
            final SModule module=moduleReference.resolve(MPSModuleRepository.getInstance());
            final Dependency dep;
            if (isDevkit) {
              dep=new Dependency(moduleReference,SDependencyScope.EXTENDS);
            }
 else {
              dep=new Dependency(moduleReference,SDependencyScope.DEFAULT,false);
            }
            if (module instanceof Language) {
              myDependTableModel.addLanguageItem(dep);
            }
 else             if (module instanceof Generator) {
              myDependTableModel.addGeneratorItem(dep);
            }
 else             if (module instanceof Solution) {
              myDependTableModel.addSolutionItem(dep);
            }
 else {
              myDependTableModel.addUnspecifiedItem(dep);
            }
          }
        }
      }
);
    }
  }
;
}
