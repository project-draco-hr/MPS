{
  List<MPSPropertiesAnActionButton> list=new ArrayList<MPSPropertiesAnActionButton>();
  list.add(new MPSPropertiesAnActionButton(PropertiesBundle.message("mps.properties.configurable.module.dependenciestab.actions.module"),null){
    @Override public void actionPerformed(    AnActionEvent e){
      List<Dependency> list=(new DependencyChooser()).compute();
      for (      Dependency dependency : list)       myDependTableModel.addItem(new ModuleDepTableItem(dependency.getModuleRef(),DependenciesTableItemRole.DEPEND,dependency.isReexport()));
    }
  }
);
  if (myModule instanceof Language) {
    list.add(new MPSPropertiesAnActionButton(PropertiesBundle.message("mps.properties.configurable.module.dependenciestab.actions.extend"),IdeIcons.PROJECT_LANGUAGE_ICON){
      @Override public void actionPerformed(      AnActionEvent e){
        List<ModuleReference> list=(new LanguageChooser()).compute();
        for (        ModuleReference reference : list)         myDependTableModel.addItem(new ModuleDepTableItem(reference,DependenciesTableItemRole.EXTEND));
      }
    }
);
  }
 else   if (myModule instanceof Solution) {
  }
 else   if (myModule instanceof Generator) {
    list.add(new MPSPropertiesAnActionButton(PropertiesBundle.message("mps.properties.configurable.module.dependenciestab.actions.dependongen"),IdeIcons.GENERATOR_ICON){
      @Override public void actionPerformed(      AnActionEvent e){
        List<ModuleReference> list=(new GeneratorChooser()).compute();
        for (        ModuleReference reference : list)         myDependTableModel.addItem(new ModuleDepTableItem(reference,DependenciesTableItemRole.EXTEND));
      }
    }
);
  }
 else   if (myModule instanceof DevKit) {
    list.clear();
    list.add(new MPSPropertiesAnActionButton(DevKit.class,IdeIcons.DEVKIT_ICON){
      @Override public void actionPerformed(      AnActionEvent e){
        List<ModuleReference> list=(new DevKitChooser()).compute();
        for (        ModuleReference reference : list)         myDependTableModel.addItem(new ModuleDepTableItem(reference,DependenciesTableItemRole.EXTEND));
      }
    }
);
    list.add(new MPSPropertiesAnActionButton(Language.class,IdeIcons.PROJECT_LANGUAGE_ICON){
      @Override public void actionPerformed(      AnActionEvent e){
        List<ModuleReference> list=(new LanguageChooser()).compute();
        for (        ModuleReference reference : list)         myDependTableModel.addItem(new ModuleDepTableItem(reference,DependenciesTableItemRole.EXPORT));
      }
    }
);
    list.add(new MPSPropertiesAnActionButton(Solution.class,IdeIcons.SOLUTION_ICON){
      @Override public void actionPerformed(      AnActionEvent e){
        List<ModuleReference> list=(new SolutionChooser()).compute();
        for (        ModuleReference reference : list)         myDependTableModel.addItem(new ModuleDepTableItem(reference,DependenciesTableItemRole.EXPORT));
      }
    }
);
  }
  return list;
}
