{
  return new FindAnActionButton(table){
    @Override public void actionPerformed(    AnActionEvent e){
      final SearchQuery[] query=new SearchQuery[1];
      final SearchScope scope=myModule.getScope();
      ModelAccess.instance().runReadAction(new Runnable(){
        @Override public void run(){
          List<SModule> modules=new LinkedList<SModule>();
          for (          int i : myTable.getSelectedRows()) {
            Object value=myDependTableModel.getValueAt(i,myDependTableModel.getItemColumnIndex());
            if (value instanceof SModuleReference) {
              modules.add(MPSModuleRepository.getInstance().getModuleByFqName(((SModuleReference)value).getModuleName()));
            }
          }
          query[0]=new SearchQuery(new MyModulesHolder(modules),scope);
        }
      }
);
      final IResultProvider provider=FindUtils.makeProvider(new CompositeFinder(new ModuleUsagesFinder()));
      UsagesViewTool usagesViewTool=ProjectHelper.toIdeaProject(myProject).getComponent(UsagesViewTool.class);
      if (usagesViewTool != null) {
        usagesViewTool.findUsages(provider,query[0],true,true,true,"No usages found");
      }
      forceCancelCloseDialog();
    }
  }
;
}
