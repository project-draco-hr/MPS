{
  return new FindAnActionButton(table){
    @Override public void actionPerformed(    AnActionEvent e){
      final SearchScope scope=new ModelAccessHelper(myProject.getModelAccess()).runReadAction(new Computable<SearchScope>(){
        @Override public SearchScope compute(){
          return myModule.getScope();
        }
      }
);
      List<SModuleReference> modules=new ArrayList<SModuleReference>();
      for (      int i : myTable.getSelectedRows()) {
        final DependenciesTableItem valueAt=myDependTableModel.getValueAt(i);
        modules.add(valueAt.getItem().getModuleRef());
      }
      final SearchQuery query=new SearchQuery(new GenericHolder<Collection<SModuleReference>>(modules),scope);
      final IResultProvider provider=FindUtils.makeProvider(new CompositeFinder(new ModuleUsagesFinder()));
      showUsageImpl(query,provider);
      forceCancelCloseDialog();
    }
  }
;
}
