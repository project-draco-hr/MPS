{
  GeneratorDescriptor descriptor=(GeneratorDescriptor)myModuleDescriptor;
  for (  MappingPriorityRule rule : myMappingPriorityRules) {
    Queue<Pair<MappingConfig_AbstractRef,MappingConfig_AbstractRef>> queue=new LinkedList<Pair<MappingConfig_AbstractRef,MappingConfig_AbstractRef>>();
    queue.add(new Pair<MappingConfig_AbstractRef,MappingConfig_AbstractRef>(rule.getRight(),null));
    while (!queue.isEmpty()) {
      Pair<MappingConfig_AbstractRef,MappingConfig_AbstractRef> ref=queue.poll();
      if (ref.o1 instanceof MappingConfig_RefSet) {
        for (        MappingConfig_AbstractRef ref1 : ((MappingConfig_RefSet)ref.o1).getMappingConfigs())         queue.add(new Pair<MappingConfig_AbstractRef,MappingConfig_AbstractRef>(ref1,ref.o1));
      }
 else       if (ref.o1 instanceof MappingConfig_ExternalRef) {
        if (!descriptor.getDepGenerators().contains(((MappingConfig_ExternalRef)ref.o1).getGenerator()) && !descriptor.getModuleReference().equals(((MappingConfig_ExternalRef)ref.o1).getGenerator()))         if (ref.o2 != null && ref.o2 instanceof MappingConfig_RefSet)         ((MappingConfig_RefSet)ref.o2).getMappingConfigs().remove(ref.o1);
      }
    }
  }
  descriptor.getPriorityRules().clear();
  descriptor.getPriorityRules().addAll(myMappingPriorityRules);
}
