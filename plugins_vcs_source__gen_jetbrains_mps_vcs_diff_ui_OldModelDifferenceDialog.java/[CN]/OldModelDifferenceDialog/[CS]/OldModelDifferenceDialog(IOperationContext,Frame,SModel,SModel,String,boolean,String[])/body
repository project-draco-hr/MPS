{
  super(parent,windowTitle);
  setModal(modal);
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      myDifferenceComponent=new OldModelDifferenceComponent(context){
        @Override protected void doubleClickOnNode(        final SNode node){
          final SNode rootNode=ModelAccess.instance().runReadAction(new Computable<SNode>(){
            public SNode compute(){
              return node.getContainingRoot();
            }
          }
);
          final OldRootDifferenceDialog dialog=new OldRootDifferenceDialog(ProjectHelper.toMainFrame(context.getProject()),newModel,oldModel,false,modal);
          ModelAccess.instance().runReadAction(new Runnable(){
            public void run(){
              dialog.init(context,rootNode,contentTitles[1],contentTitles[0]);
            }
          }
);
          dialog.showDialog();
          updateDiff(oldModel,newModel);
        }
      }
;
      myDifferenceComponent.showDifference(oldModel,newModel);
    }
  }
);
  myFocusTrackback=new FocusTrackback(this,parent,false);
  WindowAdapter focusListener=new WindowAdapter(){
    public void windowOpened(    WindowEvent e){
      if (myDifferenceComponent != null) {
        myDifferenceComponent.requestFocusInWindow();
        myFocusTrackback.registerFocusComponent(myDifferenceComponent);
      }
    }
  }
;
  addWindowListener(focusListener);
  myFocusWatcher=new FocusWatcher(){
    protected void focusLostImpl(    final FocusEvent e){
      myFocusTrackback.consume();
    }
  }
;
  myFocusWatcher.install(myDifferenceComponent);
}
