{
  if (SNodeOperations.isInstanceOf(contextNode,MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x2f89e470eed6258eL,"jetbrains.mps.baseLanguage.structure.IAnonymousClass"))) {
    contextNode=SNodeOperations.getParent(contextNode);
  }
  if (SNodeOperations.isInstanceOf(contextNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"))) {
    if (LOG.isEnabledFor(Level.WARN)) {
      LOG.warn("contextNode is classifier in getContextClassifiers: " + contextNode);
    }
    return Collections.emptyMap();
  }
  String sourceChildRole=null;
  while ((contextNode != null) && !(SNodeOperations.isInstanceOf(contextNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier")))) {
    sourceChildRole=contextNode.getRoleInParent();
    contextNode=SNodeOperations.getParent(contextNode);
  }
  if ((contextNode == null)) {
    return Collections.emptyMap();
  }
  return contextClassifiersCache.get(MultiTuple.<SNode,String>from(SNodeOperations.cast(contextNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier")),sourceChildRole));
}
