{
  SLinkOperations.addNewChild(statementList1,"statement","jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement");
  SLinkOperations.addNewChild(statementList1,"statement","jetbrains.mps.baseLanguage.structure.IfStatement");
  SLinkOperations.addNewChild(statementList1,"statement","jetbrains.mps.baseLanguage.structure.ReturnStatement");
  for (  SNode statement : SLinkOperations.getTargets(statementList1,"statement",true)) {
    SLinkOperations.addChild(statementList2,"statement",SNodeOperations.copyNode(statement));
  }
  for (  SNode statement : SLinkOperations.getTargets(statementList1,"statement",true)) {
    SLinkOperations.addChild(statementList2,"statement",SNodeOperations.copyNode(statement));
  }
  for (  SNode statement : SLinkOperations.getTargets(statementList1,"statement",true)) {
    SLinkOperations.addChild(statementList2,"statement",SNodeOperations.copyNode(statement));
  }
{
    ICursor<SNode> _zCursor=CursorFactory.createCursor(SLinkOperations.getTargets(statementList2,"statement",true));
    try {
      while (_zCursor.moveToNext()) {
        SNode statement=_zCursor.getCurrent();
        SLinkOperations.addChild(statementList2,"statement",SequenceOperations.getFirst(SLinkOperations.getTargets(statementList2,"statement",true)));
      }
    }
  finally {
      _zCursor.release();
    }
  }
}
