{
  List<SNode> result=ConceptEditorHelper.getAvailableConceptAspects(SNodeOperations.getModel(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.TemplateSwitch")),node);
  ListSequence.fromList(result).addElement(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.InlineTemplate_RuleConsequence"));
  ListSequence.fromList(result).addElement(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.InlineTemplateWithContext_RuleConsequence"));
  boolean rootable=SNodeOperations.isInstanceOf(node,"jetbrains.mps.lang.structure.structure.ConceptDeclaration") && SPropertyOperations.getBoolean((SNodeOperations.cast(node,"jetbrains.mps.lang.structure.structure.ConceptDeclaration")),"rootable");
  boolean isInterface=SNodeOperations.isInstanceOf(node,"jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration");
  if (rootable || isInterface) {
    boolean isNeedRootTemplate=true;
    for (    SNode genFragment : AbstractConceptDeclaration_Behavior.call_findGeneratorFragments_6409339300305625383(node)) {
      if ((AttributeOperations.getAttribute(genFragment,new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.RootTemplateAnnotation"))) != null)) {
        isNeedRootTemplate=false;
        break;
      }
    }
    if (isNeedRootTemplate) {
      for (      ModuleReference moduleRef : SNodeOperations.getModel(node).importedLanguages()) {
        Language language=MPSModuleRepository.getInstance().getLanguage(moduleRef);
        if (language == null) {
          continue;
        }
        SModel structureModel=language.getStructureModelDescriptor().getSModel();
        for (        SNode nodeToAdd : SModelOperations.getRoots(structureModel,"jetbrains.mps.lang.structure.structure.ConceptDeclaration")) {
          SNode conceptToAdd=(SNode)nodeToAdd;
          if (SPropertyOperations.getBoolean(nodeToAdd,"rootable")) {
            ListSequence.fromList(result).addElement(conceptToAdd);
          }
        }
      }
    }
  }
  return result;
}
