{
switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0a,fqName)) {
case 68:
    return new ListType_BehaviorDescriptor();
case 100:
  return new SequenceType_BehaviorDescriptor();
case 123:
return new ToListOperation_BehaviorDescriptor();
case 35:
return new ForEachStatement_BehaviorDescriptor();
case 37:
return new ForEachVariableReference_BehaviorDescriptor();
case 66:
return new ListCreatorWithInit_BehaviorDescriptor();
case 2:
return new AddElementOperation_BehaviorDescriptor();
case 0:
return new AddAllElementsOperation_BehaviorDescriptor();
case 39:
return new GetElementOperation_BehaviorDescriptor();
case 47:
return new GetSizeOperation_BehaviorDescriptor();
case 41:
return new GetFirstOperation_BehaviorDescriptor();
case 57:
return new IsEmptyOperation_BehaviorDescriptor();
case 45:
return new GetLastOperation_BehaviorDescriptor();
case 91:
return new RemoveElementOperation_BehaviorDescriptor();
case 42:
return new GetIndexOfOperation_BehaviorDescriptor();
case 18:
return new ContainsOperation_BehaviorDescriptor();
case 104:
return new SkipOperation_BehaviorDescriptor();
case 120:
return new TakeOperation_BehaviorDescriptor();
case 79:
return new PageOperation_BehaviorDescriptor();
case 88:
return new RemoveAllElementsOperation_BehaviorDescriptor();
case 97:
return new ReverseOperation_BehaviorDescriptor();
case 58:
return new IsNotEmptyOperation_BehaviorDescriptor();
case 127:
return new UnionOperation_BehaviorDescriptor();
case 56:
return new IntersectOperation_BehaviorDescriptor();
case 30:
return new ExcludeOperation_BehaviorDescriptor();
case 107:
return new SortDirection_BehaviorDescriptor();
case 27:
return new DistinctOperation_BehaviorDescriptor();
case 14:
return new ConcatOperation_BehaviorDescriptor();
case 121:
return new ToArrayOperation_BehaviorDescriptor();
case 75:
return new MapType_BehaviorDescriptor();
case 50:
return new HashMapCreator_BehaviorDescriptor();
case 70:
return new MapElement_BehaviorDescriptor();
case 73:
return new MapOperationExpression_BehaviorDescriptor();
case 17:
return new ContainsKeyOperation_BehaviorDescriptor();
case 44:
return new GetKeysOperation_BehaviorDescriptor();
case 72:
return new MapInitializer_BehaviorDescriptor();
case 71:
return new MapEntry_BehaviorDescriptor();
case 74:
return new MapRemoveOperation_BehaviorDescriptor();
case 122:
return new ToIteratorOperation_BehaviorDescriptor();
case 69:
return new MapClearOperation_BehaviorDescriptor();
case 124:
return new TranslateOperation_BehaviorDescriptor();
case 130:
return new WhereOperation_BehaviorDescriptor();
case 98:
return new SelectOperation_BehaviorDescriptor();
case 106:
return new SmartClosureParameterDeclaration_BehaviorDescriptor();
case 129:
return new VisitAllOperation_BehaviorDescriptor();
case 26:
return new DisjunctOperation_BehaviorDescriptor();
case 108:
return new SortOperation_BehaviorDescriptor();
case 24:
return new CutOperation_BehaviorDescriptor();
case 118:
return new TailOperation_BehaviorDescriptor();
case 13:
return new ComparatorSortOperation_BehaviorDescriptor();
case 99:
return new SequenceCreator_BehaviorDescriptor();
case 105:
return new SkipStatement_BehaviorDescriptor();
case 112:
return new StopStatement_BehaviorDescriptor();
case 55:
return new InsertElementOperation_BehaviorDescriptor();
case 101:
return new SetElementOperation_BehaviorDescriptor();
case 67:
return new ListElementAccessExpression_BehaviorDescriptor();
case 31:
return new FindFirstOperation_BehaviorDescriptor();
case 32:
return new FindLastOperation_BehaviorDescriptor();
case 102:
return new SetType_BehaviorDescriptor();
case 51:
return new HashSetCreator_BehaviorDescriptor();
case 5:
return new AddSetElementOperation_BehaviorDescriptor();
case 95:
return new RemoveSetElementOperation_BehaviorDescriptor();
case 1:
return new AddAllSetElementsOperation_BehaviorDescriptor();
case 89:
return new RemoveAllSetElementsOperation_BehaviorDescriptor();
case 12:
return new ClearSetOperation_BehaviorDescriptor();
case 64:
return new LinkedListCreator_BehaviorDescriptor();
case 3:
return new AddFirstElementOperation_BehaviorDescriptor();
case 4:
return new AddLastElementOperation_BehaviorDescriptor();
case 90:
return new RemoveAtElementOperation_BehaviorDescriptor();
case 11:
return new ClearAllElementsOperation_BehaviorDescriptor();
case 92:
return new RemoveFirstElementOperation_BehaviorDescriptor();
case 93:
return new RemoveLastElementOperation_BehaviorDescriptor();
case 28:
return new DowncastExpression_BehaviorDescriptor();
case 9:
return new AnyOperation_BehaviorDescriptor();
case 7:
return new AllOperation_BehaviorDescriptor();
case 103:
return new SingletonSequenceCreator_BehaviorDescriptor();
case 43:
return new GetIteratorOperation_BehaviorDescriptor();
case 59:
return new IteratorType_BehaviorDescriptor();
case 49:
return new HasNextOperation_BehaviorDescriptor();
case 46:
return new GetNextOperation_BehaviorDescriptor();
case 38:
return new GetCurrentOperation_BehaviorDescriptor();
case 78:
return new MoveNextOperation_BehaviorDescriptor();
case 29:
return new EnumeratorType_BehaviorDescriptor();
case 40:
return new GetEnumeratorOperation_BehaviorDescriptor();
case 6:
return new AllConstant_BehaviorDescriptor();
case 19:
return new ContainsValueOperation_BehaviorDescriptor();
case 48:
return new GetValuesOperation_BehaviorDescriptor();
case 15:
return new ContainerIteratorType_BehaviorDescriptor();
case 94:
return new RemoveOperation_BehaviorDescriptor();
case 62:
return new LinkedHashMapCreator_BehaviorDescriptor();
case 63:
return new LinkedHashSetCreator_BehaviorDescriptor();
case 109:
return new SortedMapType_BehaviorDescriptor();
case 125:
return new TreeMapCreator_BehaviorDescriptor();
case 53:
return new HeadMapOperation_BehaviorDescriptor();
case 117:
return new TailMapOperation_BehaviorDescriptor();
case 114:
return new SubMapOperation_BehaviorDescriptor();
case 110:
return new SortedSetType_BehaviorDescriptor();
case 126:
return new TreeSetCreator_BehaviorDescriptor();
case 54:
return new HeadSetOperation_BehaviorDescriptor();
case 119:
return new TailSetOperation_BehaviorDescriptor();
case 115:
return new SubSetOperation_BehaviorDescriptor();
case 10:
return new AsSequenceOperation_BehaviorDescriptor();
case 76:
return new MappingType_BehaviorDescriptor();
case 60:
return new JoinOperation_BehaviorDescriptor();
case 128:
return new ValueAccessOperation_BehaviorDescriptor();
case 61:
return new KeyAccessOperation_BehaviorDescriptor();
case 77:
return new MappingsSetOperation_BehaviorDescriptor();
case 84:
return new PutAllOperation_BehaviorDescriptor();
case 85:
return new QueueType_BehaviorDescriptor();
case 25:
return new DequeType_BehaviorDescriptor();
case 111:
return new StackType_BehaviorDescriptor();
case 81:
return new PopOperation_BehaviorDescriptor();
case 83:
return new PushOperation_BehaviorDescriptor();
case 82:
return new PriorityQueueCreator_BehaviorDescriptor();
case 65:
return new LinkedListType_BehaviorDescriptor();
case 96:
return new RemoveWhereOperation_BehaviorDescriptor();
case 8:
return new AlsoSortOperation_BehaviorDescriptor();
case 16:
return new ContainsAllOperation_BehaviorDescriptor();
case 113:
return new SubListOperation_BehaviorDescriptor();
case 80:
return new PeekOperation_BehaviorDescriptor();
case 52:
return new HeadListOperation_BehaviorDescriptor();
case 116:
return new TailListOperation_BehaviorDescriptor();
case 21:
return new CustomContainerDeclaration_BehaviorDescriptor();
case 22:
return new CustomContainers_BehaviorDescriptor();
case 20:
return new CustomContainerCreator_BehaviorDescriptor();
case 23:
return new CustomMapCreator_BehaviorDescriptor();
case 36:
return new ForEachVariable_BehaviorDescriptor();
case 86:
return new ReduceLeftOperation_BehaviorDescriptor();
case 87:
return new ReduceRightOperation_BehaviorDescriptor();
case 33:
return new FoldLeftOperation_BehaviorDescriptor();
case 34:
return new FoldRightOperation_BehaviorDescriptor();
default :
return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
}
}
