{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.samples.KajaAndOr.structure.LogicalOperator");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          return ListSequence.fromList(SConceptOperations.getAllSubConcepts(SConceptOperations.findConceptDeclaration("jetbrains.mps.samples.KajaAndOr.structure.LogicalOperator"),_context.getModel())).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return !(SPropertyOperations.getBoolean(it,MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1169125787135l,4628067390765956802l,"abstract")));
            }
          }
);
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SNode newInitializedInstance=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept((item)),null);
              SLinkOperations.setTarget(newInitializedInstance,MetaAdapterFactory.getContainmentLink(new UUID(4913550145214499670l,-7492061600269650213l),1904811872814253785l,1904811872814253580l,"left"),SLinkOperations.getTarget(_context.getCurrentTargetNode(),MetaAdapterFactory.getContainmentLink(new UUID(4913550145214499670l,-7492061600269650213l),1904811872814253785l,1904811872814253580l,"left")));
              SLinkOperations.setTarget(newInitializedInstance,MetaAdapterFactory.getContainmentLink(new UUID(4913550145214499670l,-7492061600269650213l),1904811872814253785l,1904811872814253581l,"right"),SLinkOperations.getTarget(_context.getCurrentTargetNode(),MetaAdapterFactory.getContainmentLink(new UUID(4913550145214499670l,-7492061600269650213l),1904811872814253785l,1904811872814253581l,"right")));
              return newInitializedInstance;
            }
            public String getMatchingText(            String pattern){
              return SPropertyOperations.getString((item),MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1169125787135l,5092175715804935370l,"conceptAlias"));
            }
            public String getVisibleMatchingText(            String pattern){
              return getMatchingText(pattern);
            }
            public String getDescriptionText(            String pattern){
              return SPropertyOperations.getString((item),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"));
            }
          }
);
        }
      }
    }
  }
  return result;
}
