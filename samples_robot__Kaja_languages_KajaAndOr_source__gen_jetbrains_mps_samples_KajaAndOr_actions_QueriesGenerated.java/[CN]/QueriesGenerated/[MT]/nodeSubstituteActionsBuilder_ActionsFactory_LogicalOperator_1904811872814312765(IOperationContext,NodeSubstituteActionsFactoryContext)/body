{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.samples.KajaAndOr.structure.LogicalOperator");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          return ListSequence.fromList(SConceptOperations.getAllSubConcepts(SConceptOperations.findConceptDeclaration("jetbrains.mps.samples.KajaAndOr.structure.LogicalOperator"),_context.getModel())).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return !(SPropertyOperations.getBoolean(it,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0x403a32c5772c7ec2L,"abstract")));
            }
          }
);
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SNode newInitializedInstance=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept((item)),null);
              SLinkOperations.setTarget(newInitializedInstance,MetaAdapterFactory.getContainmentLink(0x44306fd2ef944b56L,0x9806d9ab509536dbL,0x1a6f404e630a46d9L,0x1a6f404e630a460cL,"left"),SLinkOperations.getTarget(_context.getCurrentTargetNode(),MetaAdapterFactory.getContainmentLink(0x44306fd2ef944b56L,0x9806d9ab509536dbL,0x1a6f404e630a46d9L,0x1a6f404e630a460cL,"left")));
              SLinkOperations.setTarget(newInitializedInstance,MetaAdapterFactory.getContainmentLink(0x44306fd2ef944b56L,0x9806d9ab509536dbL,0x1a6f404e630a46d9L,0x1a6f404e630a460dL,"right"),SLinkOperations.getTarget(_context.getCurrentTargetNode(),MetaAdapterFactory.getContainmentLink(0x44306fd2ef944b56L,0x9806d9ab509536dbL,0x1a6f404e630a46d9L,0x1a6f404e630a460dL,"right")));
              return newInitializedInstance;
            }
            public String getMatchingText(            String pattern){
              return SPropertyOperations.getString((item),MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0x46ab0ad5826c74caL,"conceptAlias"));
            }
            public String getVisibleMatchingText(            String pattern){
              return getMatchingText(pattern);
            }
            public String getDescriptionText(            String pattern){
              return SPropertyOperations.getString((item),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
            }
          }
);
        }
      }
    }
  }
  return result;
}
