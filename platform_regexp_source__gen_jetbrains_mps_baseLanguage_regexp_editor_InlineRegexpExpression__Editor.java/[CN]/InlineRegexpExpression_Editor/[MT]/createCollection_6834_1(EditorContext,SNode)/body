{
  EditorCell_Collection editorCell=EditorCell_Collection.createIndent2(context,node);
  editorCell.setCellId("Collection_6834_1");
  editorCell.addEditorCell(this.createConstant_6834_0(context,node,"Options:"));
  editorCell.addEditorCell(this.createConstant_6834_11(context,node,"Case insensitive :"));
  editorCell.addEditorCell(this.createProperty_6834_2(context,node));
  editorCell.addEditorCell(this.createConstant_6834_10(context,node,""));
  editorCell.addEditorCell(this.createConstant_6834_1(context,node,"Dot all : "));
  editorCell.addEditorCell(this.createProperty_6834_0(context,node));
  editorCell.addEditorCell(this.createConstant_6834_2(context,node,"  "));
  editorCell.addEditorCell(this.createConstant_6834_3(context,node,"If dot all mode is enabled, the . symbol class will include new line characters"));
  editorCell.addEditorCell(this.createConstant_6834_4(context,node,""));
  editorCell.addEditorCell(this.createConstant_6834_5(context,node,"Multiline mode : "));
  editorCell.addEditorCell(this.createProperty_6834_1(context,node));
  editorCell.addEditorCell(this.createConstant_6834_6(context,node,"  "));
  editorCell.addEditorCell(this.createConstant_6834_7(context,node,"If multiline mode is enabled, the $ and ^ will work not only in the start and"));
  editorCell.addEditorCell(this.createConstant_6834_8(context,node,"  "));
  editorCell.addEditorCell(this.createConstant_6834_9(context,node,"the end of the text but on starts and ends of lines separated by new line characters"));
  return editorCell;
}
