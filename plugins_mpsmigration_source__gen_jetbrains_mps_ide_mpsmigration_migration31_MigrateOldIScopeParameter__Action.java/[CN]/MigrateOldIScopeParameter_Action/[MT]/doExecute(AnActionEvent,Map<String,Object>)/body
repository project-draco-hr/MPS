{
  try {
    SAbstractConcept concept1=SConceptRepository.getInstance().getConcept("jetbrains.mps.lang.smodel.structure.Model_RootsIncludingImportedOperation");
    Set<SNode> instances1=FindUsagesManager.getInstance().findInstances(new ProjectScope(((MPSProject)MapSequence.fromMap(_params).get("project"))),Collections.singleton(concept1),false,new EmptyProgressMonitor());
    Sequence.fromIterable(SNodeOperations.ofConcept(instances1,MetaAdapterFactory.getConcept(new UUID(8675788371017092295l,-9098312342032910879l),1176109685393l,"jetbrains.mps.lang.smodel.structure.Model_RootsIncludingImportedOperation"))).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return !(SNodeOperations.getModel(it).isReadOnly());
      }
    }
).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return (SLinkOperations.getTarget(it,MetaAdapterFactory.getContainmentLink(new UUID(8675788371017092295l,-9098312342032910879l),1176109685393l,1176109762787l,"scope")) != null);
      }
    }
).visitAll(new IVisitor<SNode>(){
      public void visit(      SNode it){
        SNodeOperations.deleteNode(SLinkOperations.getTarget(it,MetaAdapterFactory.getContainmentLink(new UUID(8675788371017092295l,-9098312342032910879l),1176109685393l,1176109762787l,"scope")));
      }
    }
);
    SAbstractConcept concept2=SConceptRepository.getInstance().getConcept("jetbrains.mps.lang.smodel.structure.Model_NodesIncludingImportedOperation");
    Set<SNode> instances2=FindUsagesManager.getInstance().findInstances(new ProjectScope(((MPSProject)MapSequence.fromMap(_params).get("project"))),Collections.singleton(concept2),false,new EmptyProgressMonitor());
    Sequence.fromIterable(SNodeOperations.ofConcept(instances2,MetaAdapterFactory.getConcept(new UUID(8675788371017092295l,-9098312342032910879l),1182511038748l,"jetbrains.mps.lang.smodel.structure.Model_NodesIncludingImportedOperation"))).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return !(SNodeOperations.getModel(it).isReadOnly());
      }
    }
).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return (SLinkOperations.getTarget(it,MetaAdapterFactory.getContainmentLink(new UUID(8675788371017092295l,-9098312342032910879l),1182511038748l,1182511038749l,"scope")) != null);
      }
    }
).visitAll(new IVisitor<SNode>(){
      public void visit(      SNode it){
        SNodeOperations.deleteNode(SLinkOperations.getTarget(it,MetaAdapterFactory.getContainmentLink(new UUID(8675788371017092295l,-9098312342032910879l),1182511038748l,1182511038749l,"scope")));
      }
    }
);
    SAbstractConcept concept3=SConceptRepository.getInstance().getConcept("jetbrains.mps.lang.smodel.structure.Concept_GetAllSubConcepts");
    Set<SNode> instances3=FindUsagesManager.getInstance().findInstances(new ProjectScope(((MPSProject)MapSequence.fromMap(_params).get("project"))),Collections.singleton(concept3),false,new EmptyProgressMonitor());
    Sequence.fromIterable(SNodeOperations.ofConcept(instances3,MetaAdapterFactory.getConcept(new UUID(8675788371017092295l,-9098312342032910879l),1181952871644l,"jetbrains.mps.lang.smodel.structure.Concept_GetAllSubConcepts"))).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return !(SNodeOperations.getModel(it).isReadOnly());
      }
    }
).visitAll(new IVisitor<SNode>(){
      public void visit(      SNode it){
        SNodeOperations.deleteNode(SLinkOperations.getTarget(it,MetaAdapterFactory.getContainmentLink(new UUID(8675788371017092295l,-9098312342032910879l),1181952871644l,1182506966389l,"scope")));
      }
    }
);
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "MigrateOldIScopeParameter",t);
    }
  }
}
