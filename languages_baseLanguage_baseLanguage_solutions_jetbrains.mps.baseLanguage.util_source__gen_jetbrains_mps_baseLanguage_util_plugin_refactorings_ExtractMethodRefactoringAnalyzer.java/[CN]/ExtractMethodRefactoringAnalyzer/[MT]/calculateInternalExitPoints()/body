{
  List<SNode> result=new ArrayList<SNode>();
  for (  SNode node : ListSequence.fromList(this.myPartToExtract)) {
    List<SNode> returns=SNodeOperations.getNodeDescendants(node,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068581242878l,"jetbrains.mps.baseLanguage.structure.ReturnStatement"),true,new SAbstractConcept[]{});
    for (    SNode ret : ListSequence.fromList(returns)) {
      SNode a1=SNodeOperations.getNodeAncestor(ret,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"),false,false);
      SNode a2=SNodeOperations.getNodeAncestor(node,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"),false,false);
      if (a1 == a2) {
        ListSequence.fromList(result).addElement(ret);
      }
    }
    List<SNode> statements=new ArrayList<SNode>();
    ListSequence.fromList(statements).addSequence(ListSequence.fromList(SNodeOperations.getNodeDescendants(node,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1081855346303l,"jetbrains.mps.baseLanguage.structure.BreakStatement"),false,new SAbstractConcept[]{})));
    ListSequence.fromList(statements).addSequence(ListSequence.fromList(SNodeOperations.getNodeDescendants(node,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1082113931046l,"jetbrains.mps.baseLanguage.structure.ContinueStatement"),false,new SAbstractConcept[]{})));
    for (    SNode st : ListSequence.fromList(statements)) {
      SNode a1=SNodeOperations.getNodeAncestor(st,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1154032098014l,"jetbrains.mps.baseLanguage.structure.AbstractLoopStatement"),false,false);
      SNode a2=SNodeOperations.getNodeAncestor(node,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1154032098014l,"jetbrains.mps.baseLanguage.structure.AbstractLoopStatement"),false,false);
      if (a1 == a2) {
        ListSequence.fromList(result).addElement(st);
      }
    }
  }
  return result;
}
