{
  for (  Instruction instruction : SetSequence.fromSet(this.getInstructions())) {
    if ((instruction instanceof ReadInstruction)) {
      ReadInstruction read=(ReadInstruction)instruction;
      Set<WriteInstruction> writes=this.myReachingDefinitions.get(read);
      for (      WriteInstruction write : SetSequence.fromSet(writes)) {
        if (write.getVariable() == read.getVariable()) {
          if (!(this.isInside(((SNode)write.getSource())))) {
            SNode declaration=((SNode)read.getVariable());
            if (!(MapSequence.fromMap(result).containsKey(declaration))) {
              SNode type=TypeChecker.getInstance().getRuntimeSupport().coerce_(TypeChecker.getInstance().getTypeOf(declaration),HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.structure.Type"),true);
              SNode reference;
              if (SNodeOperations.isInstanceOf(declaration,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37a7f6eL,"jetbrains.mps.baseLanguage.structure.VariableDeclaration"))) {
                reference=BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),SNodeOperations.cast(declaration,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37a7f6eL,"jetbrains.mps.baseLanguage.structure.VariableDeclaration")),"virtual_createReference_1213877517482",new Object[]{});
              }
 else {
                reference=((SNode)read.getSource());
              }
              if (SNodeOperations.isInstanceOf(reference,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506fL,"jetbrains.mps.baseLanguage.structure.Expression"))) {
                MapSequence.fromMap(result).put(declaration,new MethodParameter(declaration,type,SPropertyOperations.getString(declaration,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")),reference));
              }
            }
          }
        }
      }
    }
  }
}
