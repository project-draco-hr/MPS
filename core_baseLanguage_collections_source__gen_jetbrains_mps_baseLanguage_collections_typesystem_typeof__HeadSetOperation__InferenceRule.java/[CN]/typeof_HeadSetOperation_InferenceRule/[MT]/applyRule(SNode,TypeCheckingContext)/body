{
  final SNode ELEMENT_TYPE_typevar_1240251421675=typeCheckingContext.createNewRuntimeTypesVariable();
{
    SNode _nodeToCheck_1029348928467=operation;
    BaseIntentionProvider intentionProvider=null;
    typeCheckingContext.createLessThanInequation((SNode)typeCheckingContext.typeOf(IOperation_Behavior.call_getOperand_1213877410070(operation),"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)","1240251426560",true),(SNode)new _Quotations.QuotationClass_149().createNode(typeCheckingContext.getEquationManager().getRepresentator(ELEMENT_TYPE_typevar_1240251421675),typeCheckingContext),_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)","1240251434080",false,0,intentionProvider);
  }
{
    SNode _nodeToCheck_1029348928467=operation;
    BaseIntentionProvider intentionProvider=null;
    typeCheckingContext.createLessThanInequation((SNode)typeCheckingContext.typeOf(SLinkOperations.getTarget(operation,"toElement",true),"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)","1240251453798",true),(SNode)typeCheckingContext.getEquationManager().getRepresentator(ELEMENT_TYPE_typevar_1240251421675),_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)","1240251465113",false,0,intentionProvider);
  }
{
    SNode _nodeToCheck_1029348928467=operation;
    BaseIntentionProvider intentionProvider=null;
    typeCheckingContext.createEquation((SNode)typeCheckingContext.typeOf(operation,"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)","1240251470578",true),(SNode)new _Quotations.QuotationClass_150().createNode(typeCheckingContext.getEquationManager().getRepresentator(ELEMENT_TYPE_typevar_1240251421675),typeCheckingContext),_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c8959032b(jetbrains.mps.baseLanguage.collections.typesystem)","1240251476016",intentionProvider);
  }
}
