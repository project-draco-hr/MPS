{
  final String name=baseMethodDeclaration.getName();
  final String conceptName=baseMethodDeclaration.getShortConceptName();
  List<String> list=CollectionUtil.map(baseMethodDeclaration.getParameters(),new Mapper<ParameterDeclaration,String>(){
    public String map(    ParameterDeclaration parameterDeclaration){
      Pair<String,String> pair=adaptNode(parameterDeclaration.getType());
      if (pair == null)       return ExternalResolver.NO_MEMBER_TYPE;
      StringBuilder stringBuilder=StringBuilderSpinAllocator.alloc();
      try {
        stringBuilder.append('(');
        stringBuilder.append(pair.o1);
        stringBuilder.append('/');
        stringBuilder.append(pair.o2);
        stringBuilder.append(')');
        return stringBuilder.toString();
      }
  finally {
        StringBuilderSpinAllocator.dispose(stringBuilder);
      }
    }
  }
);
  return getMethodExternalResolveInfo(name,conceptName,list);
}
