{
  final zClosureContext _zClosureContext3=new zClosureContext();
  _zClosureContext3.foo=null;
  SequenceOperations.map(SequenceOperations.map((SLinkOperations.getTargets(_zClosureContext3.foo,"implements",true)),new zMapper(null,_zClosureContext3)),new zMapper1(null,_zClosureContext3));
  SequenceOperations.map(SequenceOperations.map(new SequenceWithSupplier<SNode>(new zValueSupplier1(null,_zClosureContext3)),new zMapper5(null,_zClosureContext3)),new zMapper4(null,_zClosureContext3));
  SequenceOperations.map(ListOperations.<SNode>createList(SLinkOperations.getTarget(_zClosureContext3.foo,"extends",false)),new zMapper2(null,_zClosureContext3));
  SequenceOperations.map(ListOperations.<SNode>createList(SLinkOperations.getTarget(_zClosureContext3.foo,"extends",false)),new zMapper6(null,_zClosureContext3));
  SequenceOperations.map(ListOperations.<SNode>createList(_zClosureContext3.foo),new zMapper3(null,_zClosureContext3));
  new SequenceWithSupplier<SNode>(new zValueSupplier2(null,_zClosureContext3));
  SequenceOperations.map(new SequenceWithSupplier<SNode>(new zValueSupplier3(null,_zClosureContext3)),new zMapper7(null,_zClosureContext3));
  TreeTraversalFactory.Traverse(new SNODE().startTraversal(_zClosureContext3.foo),TreeTraversalFactory.Axis("ANCESTORS"));
}
