{
  boolean result_14532009=true;
{
    SNode classifier=SLinkOperations.getTarget(supertype,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier"));
    String errorMsg=null;
    Iterable<SNode> methods=Classifier_BehaviorDescriptor.methods_id4_LVZ3pBKCn.invoke(classifier);
    Iterable<SNode> cands=Sequence.fromIterable(methods).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode m){
        return !("equals".equals(SPropertyOperations.getString(m,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")))) && SPropertyOperations.getBoolean(m,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,0x1126a8d157dL,"isAbstract"));
      }
    }
);
    Iterator<SNode> it=Sequence.fromIterable(cands).iterator();
    SNode mtd=(it.hasNext() ? it.next() : null);
    if (it.hasNext()) {
      errorMsg=": more than one abstract method";
    }
 else     if (mtd != null) {
      if (ListSequence.fromList(SLinkOperations.getChildren(subtype,MetaAdapterFactory.getContainmentLink(0xfd3920347849419dL,0x907112563d152375L,0x1174a4d19ffL,0x1174a4e013cL,"parameterType"))).count() == ListSequence.fromList(SLinkOperations.getChildren(mtd,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1feL,"parameter"))).count()) {
        SNode retType=ClassifierTypeUtil.resolveType(SLinkOperations.getTarget(mtd,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1fdL,"returnType")),supertype);
        if (!(SNodeOperations.isInstanceOf(retType,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc6bf96dL,"jetbrains.mps.baseLanguage.structure.VoidType")))) {
          if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(subtype,MetaAdapterFactory.getContainmentLink(0xfd3920347849419dL,0x907112563d152375L,0x1174a4d19ffL,0x1174a4d5371L,"resultType")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc6bf96dL,"jetbrains.mps.baseLanguage.structure.VoidType"))) {
            errorMsg=": no result type in function type";
          }
          if (!(SNodeOperations.isInstanceOf(retType,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x110dae5f4a3L,"jetbrains.mps.baseLanguage.structure.WildCardType")))) {
            result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)SLinkOperations.getTarget(subtype,MetaAdapterFactory.getContainmentLink(0xfd3920347849419dL,0x907112563d152375L,0x1174a4d19ffL,0x1174a4d5371L,"resultType")),(SNode)retType,true);
          }
        }
{
          Iterator<SNode> fpt_it=ListSequence.fromList(SLinkOperations.getChildren(subtype,MetaAdapterFactory.getContainmentLink(0xfd3920347849419dL,0x907112563d152375L,0x1174a4d19ffL,0x1174a4e013cL,"parameterType"))).iterator();
          Iterator<SNode> mpt_it=ListSequence.fromList(SLinkOperations.getChildren(mtd,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1feL,"parameter"))).iterator();
          SNode fpt_var;
          SNode mpt_var;
          while (fpt_it.hasNext() && mpt_it.hasNext()) {
            fpt_var=fpt_it.next();
            mpt_var=mpt_it.next();
            result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)ClassifierTypeUtil.resolveType(SLinkOperations.getTarget(mpt_var,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x450368d90ce15bc3L,0x4ed4d318133c80ceL,"type")),supertype),(SNode)fpt_var,true);
          }
        }
        if (errorMsg == null) {
          return result_14532009;
        }
      }
 else {
        errorMsg=": wrong parameter number";
      }
    }
 else {
      errorMsg=": no abstract method";
    }
    result_14532009=false;
  }
  return result_14532009;
}
