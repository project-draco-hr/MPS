{
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      for (      VirtualFile virtualFile : myNewModelVFiles) {
        File file=VFileSystem.toFile(virtualFile);
        if (!file.exists())         continue;
        IModule module=MPSModuleRepository.getInstance().getModuleForModelFile(FileUtil.getCanonicalPath(file));
        if (module != null) {
          myChangedModules.add(module);
        }
      }
      for (      String path : myDeletedModels) {
        IModule module=MPSModuleRepository.getInstance().getModuleForModelFile(path);
        if (module != null) {
          myChangedModules.add(module);
        }
      }
      Set<SModelDescriptor> skip=new HashSet<SModelDescriptor>();
      for (      SModelDescriptor modelDescriptor : myChangedModels) {
        Set<IModule> modules=modelDescriptor.getModules();
        for (        IModule module : modules) {
          if (myChangedModules.contains(module)) {
            LOG.debug("Skip model " + modelDescriptor + " since we want to reload "+ module);
            skip.add(modelDescriptor);
            break;
          }
        }
      }
      Set<Generator> generators=CollectionUtil.filter(Generator.class,myChangedModules);
      myChangedModules.removeAll(generators);
      for (      Generator gen : generators) {
        LOG.debug("Skip generator " + gen + " since we want to reload "+ gen.getSourceLanguage());
        myChangedModules.add(gen.getSourceLanguage());
      }
      myChangedModules.removeAll(myDeletedModules);
      myChangedModels.removeAll(skip);
    }
  }
);
}
