{
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.AfterPosition",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.BaseEmitJumpStatement",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.BaseEmitVariableStatement",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.BaseInstructionOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.BeforePosition",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.BooleanInstructionOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.BuilderBlock",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.DataFlowBuilderDeclaration",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.EmitCodeForStatement",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.EmitIfJumpStatement",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.EmitJumpStatement",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.EmitLabelStatement",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.EmitMayBeUnreachable",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.EmitNopStatement",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.EmitReadStatement",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.EmitRetStatement",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.EmitStatement",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.EmitTryFinallyStatement",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.EmitWriteStatement",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.GetCodeForExpression",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.InsertAfter",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.InsertBefore",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.InsertPosition",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.InstructionGetSourceOperation",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.InstructionIsJump",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.InstructionIsNop",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.InstructionIsRet",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.InstructionType",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.LabelPosition",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.NodeParameter",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.Position",null);
  myFqNameToConcept.put("jetbrains.mps.lang.dataFlow.structure.RelativePosition",null);
}
