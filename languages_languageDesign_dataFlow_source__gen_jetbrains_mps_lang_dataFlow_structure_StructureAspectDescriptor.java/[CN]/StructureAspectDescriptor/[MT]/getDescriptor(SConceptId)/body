{
switch (myConceptIndex.index(id)) {
case LanguageConceptSwitch.AfterPosition:
    return myConceptAfterPosition;
case LanguageConceptSwitch.BaseEmitJumpStatement:
  return myConceptBaseEmitJumpStatement;
case LanguageConceptSwitch.BaseEmitVariableStatement:
return myConceptBaseEmitVariableStatement;
case LanguageConceptSwitch.BaseInstructionOperation:
return myConceptBaseInstructionOperation;
case LanguageConceptSwitch.BeforePosition:
return myConceptBeforePosition;
case LanguageConceptSwitch.BooleanInstructionOperation:
return myConceptBooleanInstructionOperation;
case LanguageConceptSwitch.BuilderBlock:
return myConceptBuilderBlock;
case LanguageConceptSwitch.DataFlowBuilderDeclaration:
return myConceptDataFlowBuilderDeclaration;
case LanguageConceptSwitch.EmitCodeForStatement:
return myConceptEmitCodeForStatement;
case LanguageConceptSwitch.EmitIfJumpStatement:
return myConceptEmitIfJumpStatement;
case LanguageConceptSwitch.EmitJumpStatement:
return myConceptEmitJumpStatement;
case LanguageConceptSwitch.EmitLabelStatement:
return myConceptEmitLabelStatement;
case LanguageConceptSwitch.EmitMayBeUnreachable:
return myConceptEmitMayBeUnreachable;
case LanguageConceptSwitch.EmitNopStatement:
return myConceptEmitNopStatement;
case LanguageConceptSwitch.EmitReadStatement:
return myConceptEmitReadStatement;
case LanguageConceptSwitch.EmitRetStatement:
return myConceptEmitRetStatement;
case LanguageConceptSwitch.EmitStatement:
return myConceptEmitStatement;
case LanguageConceptSwitch.EmitTryFinallyStatement:
return myConceptEmitTryFinallyStatement;
case LanguageConceptSwitch.EmitWriteStatement:
return myConceptEmitWriteStatement;
case LanguageConceptSwitch.GetCodeForExpression:
return myConceptGetCodeForExpression;
case LanguageConceptSwitch.IBuilderMode:
return myConceptIBuilderMode;
case LanguageConceptSwitch.InsertAfter:
return myConceptInsertAfter;
case LanguageConceptSwitch.InsertBefore:
return myConceptInsertBefore;
case LanguageConceptSwitch.InsertPosition:
return myConceptInsertPosition;
case LanguageConceptSwitch.InstructionGetSourceOperation:
return myConceptInstructionGetSourceOperation;
case LanguageConceptSwitch.InstructionIsJump:
return myConceptInstructionIsJump;
case LanguageConceptSwitch.InstructionIsNop:
return myConceptInstructionIsNop;
case LanguageConceptSwitch.InstructionIsRet:
return myConceptInstructionIsRet;
case LanguageConceptSwitch.InstructionType:
return myConceptInstructionType;
case LanguageConceptSwitch.IntraProcedural_BuilderMode:
return myConceptIntraProcedural_BuilderMode;
case LanguageConceptSwitch.LabelPosition:
return myConceptLabelPosition;
case LanguageConceptSwitch.NodeParameter:
return myConceptNodeParameter;
case LanguageConceptSwitch.Position:
return myConceptPosition;
case LanguageConceptSwitch.RelativePosition:
return myConceptRelativePosition;
default :
return null;
}
}
