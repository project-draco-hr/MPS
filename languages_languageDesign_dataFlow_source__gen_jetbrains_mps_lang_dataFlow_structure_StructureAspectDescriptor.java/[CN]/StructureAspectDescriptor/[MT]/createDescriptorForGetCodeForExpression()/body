{
  ConceptDescriptorBuilder2 b=new ConceptDescriptorBuilder2("jetbrains.mps.lang.dataFlow","GetCodeForExpression",0x7fa12e9cb9494976L,0xb4fa19accbc320b4L,0x2912c3e08c4f3324L);
  b.class_(false,false,false);
  b.super_("jetbrains.mps.baseLanguage.structure.Expression",0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506fL);
  b.origin("r:00000000-0000-4000-0000-011c8959037d(jetbrains.mps.lang.dataFlow.structure)/2959643274329928484");
  b.aggregate("expression",0x2912c3e08c4f3325L).target(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506fL).optional(false).ordered(true).multiple(false).origin("2959643274329928485").done();
  b.kind(ConceptKind.NORMAL,StaticScope.NONE);
  b.alias("get code for");
  return b.create();
}
