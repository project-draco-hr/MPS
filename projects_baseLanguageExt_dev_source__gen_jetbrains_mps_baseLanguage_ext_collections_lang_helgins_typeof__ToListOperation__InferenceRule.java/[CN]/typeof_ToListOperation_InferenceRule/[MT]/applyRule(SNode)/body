{
  SNode input=RulesFunctions_Collections.getInput(argument);
  final SNode elementType_typevar_1184850887615=TypeChecker.getInstance().getRuntimeSupport().createNewRuntimeTypesVariable(false);
  TypeChecker.getInstance().getRuntimeSupport().createLessThanInequation(TypeChecker.getInstance().getRuntimeSupport().typeOf(input),new QuotationClass_12().createNode(TypeChecker.getInstance().getEquationManager().getRepresentator(elementType_typevar_1184850887615)),input,null,"jetbrains.mps.baseLanguage.ext.collections.lang.helgins","1184850943303");
  TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(argument),new QuotationClass_13().createNode(TypeChecker.getInstance().getEquationManager().getRepresentator(elementType_typevar_1184850887615)),argument,null,"jetbrains.mps.baseLanguage.ext.collections.lang.helgins","1184850973959");
}
