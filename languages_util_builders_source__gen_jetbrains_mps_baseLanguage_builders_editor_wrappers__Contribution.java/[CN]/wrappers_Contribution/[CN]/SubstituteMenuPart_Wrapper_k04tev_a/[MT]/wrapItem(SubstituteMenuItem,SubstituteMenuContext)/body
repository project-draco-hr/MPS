{
  return new SubstituteMenuItemWrapper(item){
    private SNode myCreatedNode;
    @Nullable @Override public SAbstractConcept getOutputConcept(){
      return item.getOutputConcept();
    }
    @Nullable @Override public SNode createNode(    @NotNull String pattern){
      SNode nodeToWrap=super.createNode(pattern);
      myCreatedNode=nodeToWrap;
      SNode result=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x132aa4d8a3f7441cL,0xa7eb3fce23492c6aL,0x61f1de4171d2bf23L,"jetbrains.mps.baseLanguage.builders.structure.BuilderStatement")),null);
      SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(0x132aa4d8a3f7441cL,0xa7eb3fce23492c6aL,0x6c473c8a081aa9e4L,0x429426276e2ee2f8L,"builder"),nodeToWrap);
      return result;
    }
    @Override public void select(    @NotNull SNode createdNode,    @NotNull String pattern){
      super.select(myCreatedNode,pattern);
    }
  }
;
}
