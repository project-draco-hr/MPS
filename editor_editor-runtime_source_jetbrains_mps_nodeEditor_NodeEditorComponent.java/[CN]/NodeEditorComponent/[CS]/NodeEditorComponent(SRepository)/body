{
  super(repository,true,false);
  getSelectionManager().addSelectionListener(new SingularSelectionListenerAdapter(){
    @Override protected void selectionChangedTo(    jetbrains.mps.openapi.editor.EditorComponent editorComponent,    SingularSelection newSelection){
      final SNode[] toSelect=new SNode[]{newSelection.getEditorCell().getSNode()};
      ModelAccess.instance().runReadAction(new Runnable(){
        @Override public void run(){
          if (!isShowing() || RuntimeFlags.getTestMode() != TestMode.NONE)           inspect(toSelect[0]);
        }
      }
);
    }
  }
);
  addHierarchyListener(new HierarchyListener(){
    @Override public void hierarchyChanged(    HierarchyEvent hierarchyEvent){
      if (HierarchyEvent.SHOWING_CHANGED != (hierarchyEvent.getChangeFlags() & HierarchyEvent.SHOWING_CHANGED)) {
        return;
      }
      if (!isShowing())       return;
      adjustInspector();
    }
  }
);
}
