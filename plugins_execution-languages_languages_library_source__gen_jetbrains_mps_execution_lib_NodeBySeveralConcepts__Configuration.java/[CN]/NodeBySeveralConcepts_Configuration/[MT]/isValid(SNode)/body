{
  return ListSequence.fromList(myTargets).findFirst(new IWhereFilter<NodesDescriptor>(){
    public boolean accept(    NodesDescriptor it){
      SAbstractConcept concept=it.concept();
      _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> function=it.filter();
      if (SNodeOperations.isInstanceOf(node,SNodeOperations.asSConcept(concept))) {
        if (function != null) {
          return function.invoke(node);
        }
 else {
          return true;
        }
      }
      return false;
    }
  }
) != null;
}
