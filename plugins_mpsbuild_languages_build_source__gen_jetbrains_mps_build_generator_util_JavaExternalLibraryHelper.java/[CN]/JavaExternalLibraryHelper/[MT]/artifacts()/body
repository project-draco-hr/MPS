{
  List<SNode> artifacts=new ArrayList<SNode>();
  List<SNode> jarContainers=new ArrayList<SNode>();
  if (BuildSource_JavaLibrary_Behavior.call_canExportByParts_5610619299014309362(library)) {
    for (    SNode element : ListSequence.fromList(SLinkOperations.getTargets(library,"elements",true))) {
      SNode jcp=SNodeOperations.as(element,"jetbrains.mps.build.structure.BuildSource_JavaLibraryCP");
      if ((jcp == null)) {
        return null;
      }
      SNode classpath=SLinkOperations.getTarget(jcp,"classpath",true);
      if (SNodeOperations.isInstanceOf(classpath,"jetbrains.mps.build.structure.BuildSource_JavaJar")) {
        SNode jarArtifact=helper.artifacts().get(SLinkOperations.getTarget(SNodeOperations.cast(classpath,"jetbrains.mps.build.structure.BuildSource_JavaJar"),"path",true));
        if (jarArtifact != null) {
          ListSequence.fromList(artifacts).addElement(jarArtifact);
        }
 else {
          genContext.showErrorMessage(library,"jar `" + BuildSourcePath_Behavior.call_getLastSegment_1368030936106771141(SLinkOperations.getTarget(SNodeOperations.cast(classpath,"jetbrains.mps.build.structure.BuildSource_JavaJar"),"path",true),null) + "' was not found in the layout");
          return Collections.emptyList();
        }
      }
 else       if (SNodeOperations.isInstanceOf(classpath,"jetbrains.mps.build.structure.BuildSource_JavaLibraryExternalJar")) {
        SNode file=SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.cast(classpath,"jetbrains.mps.build.structure.BuildSource_JavaLibraryExternalJar"),"extJar",true),"jar",false);
        SNode artifact=SNodeOperations.as(file,"jetbrains.mps.build.structure.BuildLayout_Node");
        if (artifact == null && SNodeOperations.isInstanceOf(file,"jetbrains.mps.build.structure.BuildInputSingleFile")) {
          artifact=SNodeOperations.as(helper.artifacts().get(SLinkOperations.getTarget(SNodeOperations.cast(file,"jetbrains.mps.build.structure.BuildInputSingleFile"),"path",true)),"jetbrains.mps.build.structure.BuildLayout_Node");
        }
        if (artifact != null) {
          ListSequence.fromList(artifacts).addElement(artifact);
        }
 else {
          genContext.showErrorMessage(library,"jar file `" + BuildSource_SingleFile_Behavior.call_getApproximateName_5610619299013425878(file) + "' was not found in the layout");
          return Collections.emptyList();
        }
      }
 else       if (SNodeOperations.isInstanceOf(classpath,"jetbrains.mps.build.structure.BuildSource_JavaLibraryExternalJarFolder")) {
        SNode folder=SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.cast(classpath,"jetbrains.mps.build.structure.BuildSource_JavaLibraryExternalJarFolder"),"extFolder",true),"folder",false);
        SNode artifact=SNodeOperations.as(folder,"jetbrains.mps.build.structure.BuildLayout_AbstractContainer");
        if (artifact == null && SNodeOperations.isInstanceOf(folder,"jetbrains.mps.build.structure.BuildInputSingleFolder")) {
          artifact=SNodeOperations.as(helper.artifacts().get(SLinkOperations.getTarget(SNodeOperations.cast(folder,"jetbrains.mps.build.structure.BuildInputSingleFolder"),"path",true)),"jetbrains.mps.build.structure.BuildLayout_AbstractContainer");
        }
        if (artifact != null) {
          ListSequence.fromList(jarContainers).addElement(artifact);
        }
 else {
          genContext.showErrorMessage(library,"jar folder `" + BuildSource_SingleFolder_Behavior.call_getApproximateName_5610619299014531547(folder) + "' was not found in the layout");
          return Collections.emptyList();
        }
      }
 else {
        ListSequence.fromList(artifacts).clear();
        ListSequence.fromList(jarContainers).clear();
        break;
      }
    }
  }
  if (ListSequence.fromList(artifacts).isEmpty() && ListSequence.fromList(jarContainers).isEmpty()) {
    SNode layoutNode=helper.artifacts().get(library);
    if (layoutNode == null) {
      genContext.showErrorMessage(library,"java library " + SPropertyOperations.getString(library,"name") + " was not found in the layout");
      return Collections.emptyList();
    }
 else {
      if (SNodeOperations.isInstanceOf(layoutNode,"jetbrains.mps.build.structure.BuildLayout_ExportAsJavaLibrary")) {
        ListSequence.fromList(artifacts).addSequence(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(layoutNode,"jetbrains.mps.build.structure.BuildLayout_ExportAsJavaLibrary"),"children",true)));
      }
 else {
        ListSequence.fromList(artifacts).addElement(layoutNode);
      }
    }
  }
  List<SNode> result=new ArrayList<SNode>();
  for (  SNode pe : artifacts) {
    String val=helper.locations().get(pe);
    if (val == null) {
      genContext.showErrorMessage(pe,"no location for " + BaseConcept_Behavior.call_getPresentation_1213877396640(pe) + " (unsupported layout element)");
      continue;
    }
    SNode propertyNode=SModelOperations.createNewNode(genContext.getOutputModel(),"jetbrains.mps.lang.core.structure.BaseConcept",null);
    propertyNode.addChild("attrs",new JavaExternalLibraryHelper.QuotationClass_g6ffke_a1a0d0j0a().createNode(val));
    ListSequence.fromList(result).addElement(propertyNode);
  }
  for (  SNode pe : jarContainers) {
    String val=helper.contentLocations().get(pe);
    if (val == null) {
      genContext.showErrorMessage(pe,"no content location for " + BaseConcept_Behavior.call_getPresentation_1213877396640(pe) + " (unsupported layout element)");
      continue;
    }
    SNode propertyNode=SModelOperations.createNewNode(genContext.getOutputModel(),"jetbrains.mps.lang.core.structure.BaseConcept",null);
    propertyNode.addChild("attrs",new JavaExternalLibraryHelper.QuotationClass_g6ffke_a1a0d0k0a().createNode(val));
    propertyNode.addChild("attrs",new JavaExternalLibraryHelper.QuotationClass_g6ffke_a1a0e0k0a().createNode());
    ListSequence.fromList(result).addElement(propertyNode);
  }
  return result;
}
