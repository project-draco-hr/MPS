{
  environment.getTracer().pushRuleConsequence(conseq_417xrn_a0a0a4e);
  final SNode tnode1=new SNode(environment.getOutputModel(),"jetbrains.mps.baseLanguage.structure.StaticMethodCall",false);
  try {
    environment.getTracer().pushTemplateNode(templateNode_417xrn_a0a0a2a4e);
    environment.nodeCopied(context,tnode1,"tpl/r:1dfaf07d-c77a-451e-91d3-b6f80f0f8508/1820665478710840042");
    tnode1.addReference(SReference.create("baseMethodDeclaration",tnode1,SModelReference.fromString("f:java_stub#37a3367b-1fb2-44d8-aa6b-18075e74e003#jetbrains.mps.generator.runtime(MPS.Classpath/jetbrains.mps.generator.runtime@java_stub)"),SNodeId.fromString("~TemplateUtil.createRefLocal():jetbrains.mps.generator.runtime.TemplateMappingConfigRef")));
    tnode1.addReference(SReference.create("classConcept",tnode1,SModelReference.fromString("f:java_stub#37a3367b-1fb2-44d8-aa6b-18075e74e003#jetbrains.mps.generator.runtime(MPS.Classpath/jetbrains.mps.generator.runtime@java_stub)"),SNodeId.fromString("~TemplateUtil")));
  }
  finally {
    environment.getTracer().pushOutputNode(tnode1);
    environment.getTracer().closeTemplateNode(templateNode_417xrn_a0a0a2a4e);
  }
  return TemplateUtil.singletonList(tnode1);
}
