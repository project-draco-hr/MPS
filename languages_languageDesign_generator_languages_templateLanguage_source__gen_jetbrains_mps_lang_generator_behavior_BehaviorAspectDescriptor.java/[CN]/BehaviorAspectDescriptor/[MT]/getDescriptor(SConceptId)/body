{
  int behaviorIndex=Arrays.binarySearch(myConceptBehaviorIds,conceptId.getIdValue());
switch (behaviorIndex) {
case 0:
    return myPropertyMacro_BehaviorDescriptor;
case 1:
  return myNodeMacro_BehaviorDescriptor;
case 2:
return myReferenceMacro_BehaviorDescriptor;
case 3:
return myTemplateDeclaration_BehaviorDescriptor;
case 4:
return myMappingConfiguration_BehaviorDescriptor;
case 5:
return myTemplateFragment_BehaviorDescriptor;
case 6:
return myTemplateSwitch_BehaviorDescriptor;
case 7:
return mySwitchMacro_BehaviorDescriptor;
case 8:
return myCopySrcNodeMacro_BehaviorDescriptor;
case 9:
return myCopySrcListMacro_BehaviorDescriptor;
case 10:
return myIfMacro_BehaviorDescriptor;
case 11:
return myLoopMacro_BehaviorDescriptor;
case 12:
return myMapSrcNodeMacro_BehaviorDescriptor;
case 13:
return myMapSrcListMacro_BehaviorDescriptor;
case 14:
return myCreateRootRule_BehaviorDescriptor;
case 15:
return myCreateRootRule_Condition_BehaviorDescriptor;
case 16:
return myBaseMappingRule_Condition_BehaviorDescriptor;
case 17:
return myTemplateFunctionParameter_sourceNode_BehaviorDescriptor;
case 18:
return myBaseMappingRule_BehaviorDescriptor;
case 19:
return myReduction_MappingRule_BehaviorDescriptor;
case 20:
return myRoot_MappingRule_BehaviorDescriptor;
case 21:
return myPropertyMacro_GetPropertyValue_BehaviorDescriptor;
case 22:
return myTemplateFunctionParameter_templatePropertyValue_BehaviorDescriptor;
case 23:
return myReferenceMacro_GetReferent_BehaviorDescriptor;
case 24:
return myTemplateFunctionParameter_templateReferent_BehaviorDescriptor;
case 25:
return myIfMacro_Condition_BehaviorDescriptor;
case 26:
return mySourceSubstituteMacro_BehaviorDescriptor;
case 27:
return mySourceSubstituteMacro_SourceNodesQuery_BehaviorDescriptor;
case 28:
return mySourceSubstituteMacro_SourceNodeQuery_BehaviorDescriptor;
case 29:
return myRuleConsequence_BehaviorDescriptor;
case 30:
return myTemplateDeclarationReference_BehaviorDescriptor;
case 31:
return myRootTemplateAnnotation_BehaviorDescriptor;
case 32:
return myMapSrcMacro_MapperFunction_BehaviorDescriptor;
case 33:
return myInlineTemplate_RuleConsequence_BehaviorDescriptor;
case 34:
return myTemplateFragment_ContextNodeQuery_BehaviorDescriptor;
case 35:
return myTemplateFunctionParameter_mainContextNode_BehaviorDescriptor;
case 36:
return myWeaving_MappingRule_ContextNodeQuery_BehaviorDescriptor;
case 37:
return myTemplateFunctionParameter_parentOutputNode_BehaviorDescriptor;
case 38:
return myIncludeMacro_BehaviorDescriptor;
case 39:
return myMappingScript_CodeBlock_BehaviorDescriptor;
case 40:
return myTemplateQueryBase_BehaviorDescriptor;
case 41:
return myDropRootRule_Condition_BehaviorDescriptor;
case 42:
return myMapSrcMacro_PostMapperFunction_BehaviorDescriptor;
case 43:
return myIGeneratorParameter_BehaviorDescriptor;
case 44:
return myTemplateSwitchMacro_BehaviorDescriptor;
case 45:
return myWeavingAnchorQuery_BehaviorDescriptor;
case 46:
return myInsertMacro_BehaviorDescriptor;
case 47:
return myInsertMacro_CreateNodeQuery_BehaviorDescriptor;
case 48:
return myTemplateCallMacro_BehaviorDescriptor;
case 49:
return myITemplateCall_BehaviorDescriptor;
case 50:
return myPatternReduction_MappingRule_BehaviorDescriptor;
case 51:
return myWeaveMacro_BehaviorDescriptor;
case 52:
return myTemplateArgumentQuery_BehaviorDescriptor;
case 53:
return myTemplateArgumentPatternVarRefExpression_BehaviorDescriptor;
case 54:
return myTemplateArgumentPatternRef_BehaviorDescriptor;
case 55:
return myTemplateArgumentPropertyPatternRefExpression_BehaviorDescriptor;
case 56:
return myTemplateArgumentLinkPatternRefExpression_BehaviorDescriptor;
case 57:
return myVarMacro_BehaviorDescriptor;
case 58:
return myVarMacro_ValueQuery_BehaviorDescriptor;
case 59:
return myLabelMacro_BehaviorDescriptor;
case 60:
return myMarshalFunction_BehaviorDescriptor;
case 61:
return myUnmarshalFunction_BehaviorDescriptor;
case 62:
return myContextVariableProvider_BehaviorDescriptor;
case 63:
return myMappingConfiguration_Condition_BehaviorDescriptor;
case 64:
return myInlineTemplateWithContext_RuleConsequence_BehaviorDescriptor;
case 65:
return myNodeIdentity_BehaviorDescriptor;
case 66:
return myTrivialNodeId_BehaviorDescriptor;
case 67:
return myModelIdentity_BehaviorDescriptor;
case 68:
return myTrivialModelId_BehaviorDescriptor;
default :
return null;
}
}
