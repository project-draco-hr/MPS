{
  int behaviorIndex=Arrays.binarySearch(myConceptBehaviorIds,conceptId.getIdValue());
switch (behaviorIndex) {
case 0:
    return myPropertyMacro__BehaviorDescriptor;
case 1:
  return myNodeMacro__BehaviorDescriptor;
case 2:
return myReferenceMacro__BehaviorDescriptor;
case 3:
return myTemplateDeclaration__BehaviorDescriptor;
case 4:
return myMappingConfiguration__BehaviorDescriptor;
case 5:
return myTemplateFragment__BehaviorDescriptor;
case 6:
return myTemplateSwitch__BehaviorDescriptor;
case 7:
return mySwitchMacro__BehaviorDescriptor;
case 8:
return myCopySrcNodeMacro__BehaviorDescriptor;
case 9:
return myCopySrcListMacro__BehaviorDescriptor;
case 10:
return myIfMacro__BehaviorDescriptor;
case 11:
return myLoopMacro__BehaviorDescriptor;
case 12:
return myMapSrcNodeMacro__BehaviorDescriptor;
case 13:
return myMapSrcListMacro__BehaviorDescriptor;
case 14:
return myCreateRootRule__BehaviorDescriptor;
case 15:
return myCreateRootRule_Condition__BehaviorDescriptor;
case 16:
return myBaseMappingRule_Condition__BehaviorDescriptor;
case 17:
return myTemplateFunctionParameter_sourceNode__BehaviorDescriptor;
case 18:
return myBaseMappingRule__BehaviorDescriptor;
case 19:
return myReduction_MappingRule__BehaviorDescriptor;
case 20:
return myRoot_MappingRule__BehaviorDescriptor;
case 21:
return myPropertyMacro_GetPropertyValue__BehaviorDescriptor;
case 22:
return myTemplateFunctionParameter_templatePropertyValue__BehaviorDescriptor;
case 23:
return myReferenceMacro_GetReferent__BehaviorDescriptor;
case 24:
return myTemplateFunctionParameter_templateReferent__BehaviorDescriptor;
case 25:
return myIfMacro_Condition__BehaviorDescriptor;
case 26:
return mySourceSubstituteMacro__BehaviorDescriptor;
case 27:
return mySourceSubstituteMacro_SourceNodesQuery__BehaviorDescriptor;
case 28:
return mySourceSubstituteMacro_SourceNodeQuery__BehaviorDescriptor;
case 29:
return myRuleConsequence__BehaviorDescriptor;
case 30:
return myTemplateDeclarationReference__BehaviorDescriptor;
case 31:
return myRootTemplateAnnotation__BehaviorDescriptor;
case 32:
return myMapSrcMacro_MapperFunction__BehaviorDescriptor;
case 33:
return myInlineTemplate_RuleConsequence__BehaviorDescriptor;
case 34:
return myTemplateFragment_ContextNodeQuery__BehaviorDescriptor;
case 35:
return myTemplateFunctionParameter_mainContextNode__BehaviorDescriptor;
case 36:
return myWeaving_MappingRule_ContextNodeQuery__BehaviorDescriptor;
case 37:
return myTemplateFunctionParameter_parentOutputNode__BehaviorDescriptor;
case 38:
return myIncludeMacro__BehaviorDescriptor;
case 39:
return myMappingScript_CodeBlock__BehaviorDescriptor;
case 40:
return myTemplateQueryBase__BehaviorDescriptor;
case 41:
return myDropRootRule_Condition__BehaviorDescriptor;
case 42:
return myMapSrcMacro_PostMapperFunction__BehaviorDescriptor;
case 43:
return myIGeneratorParameter__BehaviorDescriptor;
case 44:
return myTemplateSwitchMacro__BehaviorDescriptor;
case 45:
return myWeavingAnchorQuery__BehaviorDescriptor;
case 46:
return myInsertMacro__BehaviorDescriptor;
case 47:
return myInsertMacro_CreateNodeQuery__BehaviorDescriptor;
case 48:
return myTemplateCallMacro__BehaviorDescriptor;
case 49:
return myITemplateCall__BehaviorDescriptor;
case 50:
return myPatternReduction_MappingRule__BehaviorDescriptor;
case 51:
return myWeaveMacro__BehaviorDescriptor;
case 52:
return myTemplateArgumentQuery__BehaviorDescriptor;
case 53:
return myTemplateArgumentPatternVarRefExpression__BehaviorDescriptor;
case 54:
return myTemplateArgumentPatternRef__BehaviorDescriptor;
case 55:
return myTemplateArgumentPropertyPatternRefExpression__BehaviorDescriptor;
case 56:
return myTemplateArgumentLinkPatternRefExpression__BehaviorDescriptor;
case 57:
return myVarMacro__BehaviorDescriptor;
case 58:
return myVarMacro_ValueQuery__BehaviorDescriptor;
case 59:
return myLabelMacro__BehaviorDescriptor;
case 60:
return myMarshalFunction__BehaviorDescriptor;
case 61:
return myUnmarshalFunction__BehaviorDescriptor;
case 62:
return myContextVariableProvider__BehaviorDescriptor;
case 63:
return myMappingConfiguration_Condition__BehaviorDescriptor;
case 64:
return myInlineTemplateWithContext_RuleConsequence__BehaviorDescriptor;
case 65:
return myNodeIdentity__BehaviorDescriptor;
case 66:
return myTrivialNodeId__BehaviorDescriptor;
case 67:
return myModelIdentity__BehaviorDescriptor;
case 68:
return myTrivialModelId__BehaviorDescriptor;
default :
return null;
}
}
