{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_846f5o_a0vc.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return myBaseMappingRule__BehaviorDescriptor;
      }
    break;
case 1:
  if (true) {
    return myBaseMappingRule_Condition__BehaviorDescriptor;
  }
break;
case 2:
if (true) {
return myContextVariableProvider__BehaviorDescriptor;
}
break;
case 3:
if (true) {
return myCopySrcListMacro__BehaviorDescriptor;
}
break;
case 4:
if (true) {
return myCopySrcNodeMacro__BehaviorDescriptor;
}
break;
case 5:
if (true) {
return myCreateRootRule__BehaviorDescriptor;
}
break;
case 6:
if (true) {
return myCreateRootRule_Condition__BehaviorDescriptor;
}
break;
case 7:
if (true) {
return myDropAttributeRule_Condition__BehaviorDescriptor;
}
break;
case 8:
if (true) {
return myDropRootRule_Condition__BehaviorDescriptor;
}
break;
case 9:
if (true) {
return myGeneratorDebug_LabelEntry__BehaviorDescriptor;
}
break;
case 10:
if (true) {
return myGeneratorDebug_NodeMapEntry__BehaviorDescriptor;
}
break;
case 11:
if (true) {
return myIGeneratorParameter__BehaviorDescriptor;
}
break;
case 12:
if (true) {
return myITemplateCall__BehaviorDescriptor;
}
break;
case 13:
if (true) {
return myIfMacro__BehaviorDescriptor;
}
break;
case 14:
if (true) {
return myIfMacro_Condition__BehaviorDescriptor;
}
break;
case 15:
if (true) {
return myIncludeMacro__BehaviorDescriptor;
}
break;
case 16:
if (true) {
return myInlineTemplateWithContext_RuleConsequence__BehaviorDescriptor;
}
break;
case 17:
if (true) {
return myInlineTemplate_RuleConsequence__BehaviorDescriptor;
}
break;
case 18:
if (true) {
return myInsertMacro__BehaviorDescriptor;
}
break;
case 19:
if (true) {
return myInsertMacro_CreateNodeQuery__BehaviorDescriptor;
}
break;
case 20:
if (true) {
return myLabelMacro__BehaviorDescriptor;
}
break;
case 21:
if (true) {
return myLoopMacro__BehaviorDescriptor;
}
break;
case 22:
if (true) {
return myMapSrcListMacro__BehaviorDescriptor;
}
break;
case 23:
if (true) {
return myMapSrcMacro_MapperFunction__BehaviorDescriptor;
}
break;
case 24:
if (true) {
return myMapSrcMacro_PostMapperFunction__BehaviorDescriptor;
}
break;
case 25:
if (true) {
return myMapSrcNodeMacro__BehaviorDescriptor;
}
break;
case 26:
if (true) {
return myMappingConfiguration__BehaviorDescriptor;
}
break;
case 27:
if (true) {
return myMappingConfiguration_Condition__BehaviorDescriptor;
}
break;
case 28:
if (true) {
return myMappingScript_CodeBlock__BehaviorDescriptor;
}
break;
case 29:
if (true) {
return myMarshalFunction__BehaviorDescriptor;
}
break;
case 30:
if (true) {
return myModelIdentity__BehaviorDescriptor;
}
break;
case 31:
if (true) {
return myNodeIdentity__BehaviorDescriptor;
}
break;
case 32:
if (true) {
return myNodeMacro__BehaviorDescriptor;
}
break;
case 33:
if (true) {
return myPatternReduction_MappingRule__BehaviorDescriptor;
}
break;
case 34:
if (true) {
return myPropertyMacro__BehaviorDescriptor;
}
break;
case 35:
if (true) {
return myPropertyMacro_GetPropertyValue__BehaviorDescriptor;
}
break;
case 36:
if (true) {
return myReduction_MappingRule__BehaviorDescriptor;
}
break;
case 37:
if (true) {
return myReferenceMacro__BehaviorDescriptor;
}
break;
case 38:
if (true) {
return myReferenceMacro_GetReferent__BehaviorDescriptor;
}
break;
case 39:
if (true) {
return myRootTemplateAnnotation__BehaviorDescriptor;
}
break;
case 40:
if (true) {
return myRoot_MappingRule__BehaviorDescriptor;
}
break;
case 41:
if (true) {
return myRuleConsequence__BehaviorDescriptor;
}
break;
case 42:
if (true) {
return mySourceSubstituteMacro__BehaviorDescriptor;
}
break;
case 43:
if (true) {
return mySourceSubstituteMacro_SourceNodeQuery__BehaviorDescriptor;
}
break;
case 44:
if (true) {
return mySourceSubstituteMacro_SourceNodesQuery__BehaviorDescriptor;
}
break;
case 45:
if (true) {
return myTemplateArgumentLinkPatternRefExpression__BehaviorDescriptor;
}
break;
case 46:
if (true) {
return myTemplateArgumentPatternRef__BehaviorDescriptor;
}
break;
case 47:
if (true) {
return myTemplateArgumentPatternVarRefExpression__BehaviorDescriptor;
}
break;
case 48:
if (true) {
return myTemplateArgumentPropertyPatternRefExpression__BehaviorDescriptor;
}
break;
case 49:
if (true) {
return myTemplateArgumentQuery__BehaviorDescriptor;
}
break;
case 50:
if (true) {
return myTemplateCallMacro__BehaviorDescriptor;
}
break;
case 51:
if (true) {
return myTemplateDeclaration__BehaviorDescriptor;
}
break;
case 52:
if (true) {
return myTemplateDeclarationReference__BehaviorDescriptor;
}
break;
case 53:
if (true) {
return myTemplateFragment__BehaviorDescriptor;
}
break;
case 54:
if (true) {
return myTemplateFunctionParameter_mainContextNode__BehaviorDescriptor;
}
break;
case 55:
if (true) {
return myTemplateFunctionParameter_parentOutputNode__BehaviorDescriptor;
}
break;
case 56:
if (true) {
return myTemplateFunctionParameter_sourceNode__BehaviorDescriptor;
}
break;
case 57:
if (true) {
return myTemplateFunctionParameter_templatePropertyValue__BehaviorDescriptor;
}
break;
case 58:
if (true) {
return myTemplateFunctionParameter_templateReferent__BehaviorDescriptor;
}
break;
case 59:
if (true) {
return myTemplateQueryBase__BehaviorDescriptor;
}
break;
case 60:
if (true) {
return myTemplateSwitch__BehaviorDescriptor;
}
break;
case 61:
if (true) {
return myTemplateSwitchMacro__BehaviorDescriptor;
}
break;
case 62:
if (true) {
return myTrivialModelId__BehaviorDescriptor;
}
break;
case 63:
if (true) {
return myTrivialNodeId__BehaviorDescriptor;
}
break;
case 64:
if (true) {
return myUnmarshalFunction__BehaviorDescriptor;
}
break;
case 65:
if (true) {
return myVarMacro__BehaviorDescriptor;
}
break;
case 66:
if (true) {
return myVarMacro_ValueQuery__BehaviorDescriptor;
}
break;
case 67:
if (true) {
return myWeaveMacro__BehaviorDescriptor;
}
break;
case 68:
if (true) {
return myWeavingAnchorQuery__BehaviorDescriptor;
}
break;
case 69:
if (true) {
return myWeaving_MappingRule_ContextNodeQuery__BehaviorDescriptor;
}
break;
default :
}
}
return null;
}
