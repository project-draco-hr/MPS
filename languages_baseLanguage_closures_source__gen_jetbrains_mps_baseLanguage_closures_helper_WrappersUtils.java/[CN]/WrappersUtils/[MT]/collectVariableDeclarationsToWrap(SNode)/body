{
  List<SNode> vdecls=ListSequence.fromList(new ArrayList<SNode>());
  for (  SNode desc : SNodeOperations.getDescendants(closure,null,false,new String[]{})) {
    if (!(SNodeOperations.isInstanceOf(desc,"jetbrains.mps.baseLanguage.structure.VariableReference"))) {
      continue;
    }
    SNode varRef=SNodeOperations.cast(desc,"jetbrains.mps.baseLanguage.structure.VariableReference");
    if ((SNodeOperations.isInstanceOf(SLinkOperations.getTarget(varRef,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,1068581517664l,"variableDeclaration")),"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration") || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(varRef,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,1068581517664l,"variableDeclaration")),"jetbrains.mps.baseLanguage.structure.ParameterDeclaration")) && closure == SNodeOperations.getAncestor(desc,"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral",false,false)) {
      SNode vd=SLinkOperations.getTarget(varRef,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,1068581517664l,"variableDeclaration"));
      if (closure != SNodeOperations.getAncestor(vd,"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral",false,false)) {
        if (!(ListSequence.fromList(vdecls).contains(vd)) && !(SPropertyOperations.getBoolean(vd,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1068431474542l,1176718929932l,"isFinal")))) {
          ListSequence.fromList(vdecls).addElement(vd);
        }
      }
    }
  }
  with_decls:   for (Iterator<SNode> it=ListSequence.fromList(vdecls).iterator(); it.hasNext(); ) {
    SNode vd=it.next();
    SNode sl=SNodeOperations.getAncestorWhereConceptInList(vd,new String[]{"jetbrains.mps.baseLanguage.structure.StatementList","jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"},false,false);
    for (    SNode desc : SNodeOperations.getDescendants(sl,null,false,new String[]{})) {
      if (!(SNodeOperations.isInstanceOf(desc,"jetbrains.mps.baseLanguage.structure.VariableReference"))) {
        continue;
      }
      SNode varRef=SNodeOperations.cast(desc,"jetbrains.mps.baseLanguage.structure.VariableReference");
      if ((SNodeOperations.isInstanceOf(SLinkOperations.getTarget(varRef,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,1068581517664l,"variableDeclaration")),"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration") || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(varRef,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,1068581517664l,"variableDeclaration")),"jetbrains.mps.baseLanguage.structure.ParameterDeclaration")) && SLinkOperations.getTarget(varRef,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,1068581517664l,"variableDeclaration")) == vd) {
        if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(desc),"jetbrains.mps.baseLanguage.structure.BaseAssignmentExpression") && SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(desc),"jetbrains.mps.baseLanguage.structure.BaseAssignmentExpression"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1215693861676l,1068498886295l,"lValue")) == desc) {
          continue with_decls;
        }
 else         if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(desc),"jetbrains.mps.baseLanguage.structure.PostfixIncrementExpression") && SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(desc),"jetbrains.mps.baseLanguage.structure.PostfixIncrementExpression"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1239714755177l,1239714902950l,"expression")) == desc) {
          continue with_decls;
        }
 else         if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(desc),"jetbrains.mps.baseLanguage.structure.PrefixIncrementExpression") && SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(desc),"jetbrains.mps.baseLanguage.structure.PrefixIncrementExpression"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1239714755177l,1239714902950l,"expression")) == desc) {
          continue with_decls;
        }
 else         if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(desc),"jetbrains.mps.baseLanguage.structure.PostfixDecrementExpression") && SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(desc),"jetbrains.mps.baseLanguage.structure.PostfixDecrementExpression"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1239714755177l,1239714902950l,"expression")) == desc) {
          continue with_decls;
        }
 else         if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(desc),"jetbrains.mps.baseLanguage.structure.PrefixDecrementExpression") && SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(desc),"jetbrains.mps.baseLanguage.structure.PrefixDecrementExpression"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1239714755177l,1239714902950l,"expression")) == desc) {
          continue with_decls;
        }
      }
    }
    it.remove();
  }
  return vdecls;
}
