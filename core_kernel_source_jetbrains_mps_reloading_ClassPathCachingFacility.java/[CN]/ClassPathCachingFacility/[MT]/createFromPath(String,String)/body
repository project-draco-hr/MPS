{
synchronized (LOCK) {
    if (!myCache.containsKey(path)) {
      IFile file=ourFileSystem.getFile(path);
      UniPath uniPath=file.toPath().toNormal();
      boolean isDirectory=file.isDirectory();
      RealClassPathItem item;
      if (!file.exists()) {
        String moduleString=requestor == null ? "" : " in " + requestor;
        LOG.warn(String.format("Can't load class path item %s%s.%s",uniPath,moduleString,isDirectory ? " Execute make in IDEA." : ""));
        item=new NonExistingClassPathItem(uniPath.toString());
      }
 else       if (file.isInArchive()) {
        item=new JarFileClassPathItem(ourFileSystem,uniPath.toString());
      }
 else       if (file.isDirectory()) {
        item=new FileClassPathItem(path);
      }
 else {
        throw new IllegalArgumentException("Path variable " + uniPath + " does not point to a directory or to a jar/zip location");
      }
      myCache.put(path,item);
      return item;
    }
    return myCache.get(path);
  }
}
