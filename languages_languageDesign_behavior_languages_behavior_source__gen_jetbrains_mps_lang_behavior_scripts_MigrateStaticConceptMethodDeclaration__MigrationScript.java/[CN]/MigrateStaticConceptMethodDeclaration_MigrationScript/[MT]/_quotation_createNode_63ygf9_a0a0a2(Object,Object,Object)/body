{
  PersistenceFacade facade=PersistenceFacade.getInstance();
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  SNode quotedNode_7=null;
  quotedNode_4=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_5=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall",null,null,GlobalScope.getInstance(),false);
  SNodeAccessUtil.setReferenceTarget(quotedNode_5,"baseMethodDeclaration",(SNode)parameter_2);
{
    List<SNode> nodes=(List<SNode>)parameter_1;
    for (    SNode child : nodes) {
      quotedNode_5.addChild("actualArgument",HUtil.copyIfNecessary(child));
    }
  }
  quotedNode_4.addChild("operation",quotedNode_5);
  quotedNode_6=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.ConceptRefExpression",null,null,GlobalScope.getInstance(),false);
  SNodeAccessUtil.setReferenceTarget(quotedNode_6,"conceptDeclaration",(SNode)parameter_3);
  quotedNode_4.addChild("operand",quotedNode_6);
  return quotedNode_4;
}
