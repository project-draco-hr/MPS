{
  if ("jetbrains.mps.platform.conf.structure.Component".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.Component"));
  }
  if ("jetbrains.mps.platform.conf.structure.Extension".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Extension_Constraints());
  }
  if ("jetbrains.mps.platform.conf.structure.IConfigurationElement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.IConfigurationElement"));
  }
  if ("jetbrains.mps.platform.conf.structure.ExtensionPoint".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ExtensionPoint_Constraints());
  }
  if ("jetbrains.mps.platform.conf.structure.IConfigurationFragment".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.IConfigurationFragment"));
  }
  if ("jetbrains.mps.platform.conf.structure.IConfiguration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.IConfiguration"));
  }
  if ("jetbrains.mps.platform.conf.structure.ConfigurationXmlDocument".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ConfigurationXmlDocument_Constraints());
  }
  if ("jetbrains.mps.platform.conf.structure.IExternalConfigurationFragment".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.IExternalConfigurationFragment"));
  }
  if ("jetbrains.mps.platform.conf.structure.XInclude".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.XInclude"));
  }
  if ("jetbrains.mps.platform.conf.structure.ConfigurationXmlNode".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.ConfigurationXmlNode"));
  }
  if ("jetbrains.mps.platform.conf.structure.ExtensionPoints".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ExtensionPoints_Constraints());
  }
  if ("jetbrains.mps.platform.conf.structure.Components".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Components_Constraints());
  }
  if ("jetbrains.mps.platform.conf.structure.BeanExtensionPoint".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new BeanExtensionPoint_Constraints());
  }
  if ("jetbrains.mps.platform.conf.structure.IntefaceExtensionPoint".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.IntefaceExtensionPoint"));
  }
  if ("jetbrains.mps.platform.conf.structure.Service".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.Service"));
  }
  if ("jetbrains.mps.platform.conf.structure.HasLevel".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.HasLevel"));
  }
  if ("jetbrains.mps.platform.conf.structure.Extensions".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Extensions_Constraints());
  }
  if ("jetbrains.mps.platform.conf.structure.IdeaPluginRoot".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.IdeaPluginRoot"));
  }
  if ("jetbrains.mps.platform.conf.structure.BeanExtension".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new BeanExtension_Constraints());
  }
  if ("jetbrains.mps.platform.conf.structure.InterfaceExtension".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new InterfaceExtension_Constraints());
  }
  if ("jetbrains.mps.platform.conf.structure.BeanExtensionAttribute".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.BeanExtensionAttribute"));
  }
  if ("jetbrains.mps.platform.conf.structure.IConfigurationElementFragment".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.IConfigurationElementFragment"));
  }
  if ("jetbrains.mps.platform.conf.structure.ComponentsRoot".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ComponentsRoot_Constraints());
  }
  if ("jetbrains.mps.platform.conf.structure.ComponentRoot".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ComponentRoot_Constraints());
  }
  if ("jetbrains.mps.platform.conf.structure.RootRoot".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new RootRoot_Constraints());
  }
  if ("jetbrains.mps.platform.conf.structure.IPluginConfigurationFragment".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.IPluginConfigurationFragment"));
  }
  if ("jetbrains.mps.platform.conf.structure.Plugin".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Plugin_Constraints());
  }
  if ("jetbrains.mps.platform.conf.structure.PluginDependency".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new PluginDependency_Constraints());
  }
  if ("jetbrains.mps.platform.conf.structure.PluginVendor".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.PluginVendor"));
  }
  if ("jetbrains.mps.platform.conf.structure.PluginDetails".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.PluginDetails"));
  }
  if ("jetbrains.mps.platform.conf.structure.IdeaVersion".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.IdeaVersion"));
  }
  if ("jetbrains.mps.platform.conf.structure.PluginHelpset".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.PluginHelpset"));
  }
  if ("jetbrains.mps.platform.conf.structure.Actions".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Actions_Constraints());
  }
  if ("jetbrains.mps.platform.conf.structure.AbstractAction".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AbstractAction_Constraints());
  }
  if ("jetbrains.mps.platform.conf.structure.Shortcut".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.Shortcut"));
  }
  if ("jetbrains.mps.platform.conf.structure.MouseShortcut".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.MouseShortcut"));
  }
  if ("jetbrains.mps.platform.conf.structure.KeyboardShortcut".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.KeyboardShortcut"));
  }
  if ("jetbrains.mps.platform.conf.structure.Group".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.Group"));
  }
  if ("jetbrains.mps.platform.conf.structure.GroupReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new GroupReference_Constraints());
  }
  if ("jetbrains.mps.platform.conf.structure.ActionReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ActionReference_Constraints());
  }
  if ("jetbrains.mps.platform.conf.structure.Action".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.Action"));
  }
  if ("jetbrains.mps.platform.conf.structure.IActionItem".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.IActionItem"));
  }
  if ("jetbrains.mps.platform.conf.structure.Separator".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.platform.conf.structure.Separator"));
  }
  if ("jetbrains.mps.platform.conf.structure.ConfigurationXmlRootNode".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ConfigurationXmlRootNode_Constraints());
  }
  return null;
}
