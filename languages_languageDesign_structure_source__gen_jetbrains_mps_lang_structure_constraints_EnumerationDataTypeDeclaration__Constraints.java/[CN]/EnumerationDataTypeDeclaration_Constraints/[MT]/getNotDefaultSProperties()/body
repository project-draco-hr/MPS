{
  Map<SPropertyId,PropertyConstraintsDescriptor> properties=new HashMap<SPropertyId,PropertyConstraintsDescriptor>();
  properties.put(MetaIdFactory.propId(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xfc26875dfbL,0x11a35a5efdaL),new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xfc26875dfbL,0x11a35a5efdaL),this){
    @Override public boolean hasOwnSetter(){
      return true;
    }
    @Override public void setValue(    SNode node,    String propertyValue){
      String propertyName="hasNoDefaultMember";
      SPropertyOperations.set(node,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xfc26875dfbL,0x11a35a5efdaL,"hasNoDefaultMember"),"" + ((SPropertyOperations.getBoolean(propertyValue))));
      if ((SPropertyOperations.getBoolean(propertyValue)) == true) {
        SLinkOperations.setTarget(node,MetaAdapterFactory.getReferenceLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xfc26875dfbL,0xfc3640a77dL,"defaultMember"),null);
      }
    }
  }
);
  return properties;
}
