{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xfc26875dfbL,0xfc3640a77dL,"defaultMember"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xfc26875dfbL,0xfc3640a77dL),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return new SubnodesSearchScope(_context.getReferenceNode());
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_8h501v_a0a1a0a0a1a0b0a1a5;
        }
      }
;
    }
  }
);
  return references;
}
