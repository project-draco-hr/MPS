{
  if ("jetbrains.mps.lang.pattern.structure.AsPattern".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.pattern.structure.AsPattern"));
  }
  if ("jetbrains.mps.lang.pattern.structure.Pattern".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.pattern.structure.Pattern"));
  }
  if ("jetbrains.mps.lang.pattern.structure.PatternExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.pattern.structure.PatternExpression"));
  }
  if ("jetbrains.mps.lang.pattern.structure.PatternVariableDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new PatternVariableDeclaration_Constraints());
  }
  if ("jetbrains.mps.lang.pattern.structure.PropertyPatternVariableDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new PropertyPatternVariableDeclaration_Constraints());
  }
  if ("jetbrains.mps.lang.pattern.structure.WildcardPattern".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.pattern.structure.WildcardPattern"));
  }
  if ("jetbrains.mps.lang.pattern.structure.ListPattern".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.pattern.structure.ListPattern"));
  }
  if ("jetbrains.mps.lang.pattern.structure.LinkPatternVariableDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new LinkPatternVariableDeclaration_Constraints());
  }
  if ("jetbrains.mps.lang.pattern.structure.ActionAsPattern".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ActionAsPattern_Constraints());
  }
  if ("jetbrains.mps.lang.pattern.structure.ActionStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ActionStatement_Constraints());
  }
  if ("jetbrains.mps.lang.pattern.structure.PatternVariableReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new PatternVariableReference_Constraints());
  }
  if ("jetbrains.mps.lang.pattern.structure.OrPattern".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.pattern.structure.OrPattern"));
  }
  if ("jetbrains.mps.lang.pattern.structure.OrPatternClause".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.pattern.structure.OrPatternClause"));
  }
  if ("jetbrains.mps.lang.pattern.structure.OrPatternVariableReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new OrPatternVariableReference_Constraints());
  }
  if ("jetbrains.mps.lang.pattern.structure.InsertAfterPosition".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.pattern.structure.InsertAfterPosition"));
  }
  if ("jetbrains.mps.lang.pattern.structure.InsertBeforePosition".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.pattern.structure.InsertBeforePosition"));
  }
  if ("jetbrains.mps.lang.pattern.structure.InsertPosition".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.pattern.structure.InsertPosition"));
  }
  return null;
}
