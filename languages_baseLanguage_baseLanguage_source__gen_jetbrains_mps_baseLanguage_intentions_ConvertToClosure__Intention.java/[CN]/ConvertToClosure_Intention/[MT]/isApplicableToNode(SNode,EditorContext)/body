{
  SNode newExpression=SNodeOperations.getAncestor(node,"jetbrains.mps.baseLanguage.structure.GenericNewExpression",false,false);
  if ((newExpression == null)) {
    return false;
  }
  if (!(SNodeOperations.isInstanceOf(SNodeOperations.getParent(newExpression),"jetbrains.mps.baseLanguage.structure.BaseMethodCall"))) {
    return false;
  }
  if (!(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SNodeOperations.getParent(newExpression),"jetbrains.mps.baseLanguage.structure.BaseMethodCall"),"actualArgument",true)).contains(newExpression))) {
    return false;
  }
  if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node,"classifier",false),"jetbrains.mps.baseLanguage.structure.Interface")) {
    SNode parentInterface=SNodeOperations.cast(SLinkOperations.getTarget(node,"classifier",false),"jetbrains.mps.baseLanguage.structure.Interface");
    return (int)Sequence.fromIterable(Classifier_Behavior.call_methods_5292274854859311639(parentInterface)).count() == 1;
  }
  return false;
}
