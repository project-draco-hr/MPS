{
{
    SAbstractConcept cncpt=((SAbstractConcept)concept);
    Integer preIndex=indices_xbvbvu_a0a.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return Collections.<ConceptEditor>singletonList(new AbstractDiagramCreation_Editor());
      }
    break;
case 1:
  if (true) {
    return Collections.<ConceptEditor>singletonList(new ActionGroup_Editor());
  }
break;
case 2:
if (true) {
return Collections.<ConceptEditor>singletonList(new AttributedFigureReference_Editor());
}
break;
case 3:
if (true) {
return Collections.<ConceptEditor>singletonList(new BLQueryArgument_Editor());
}
break;
case 4:
if (true) {
return Collections.<ConceptEditor>singletonList(new CellModel_Diagram_Editor());
}
break;
case 5:
if (true) {
return Collections.<ConceptEditor>singletonList(new CellModel_DiagramConnector_Editor());
}
break;
case 6:
if (true) {
return Collections.<ConceptEditor>singletonList(new CellModel_DiagramNode_Editor());
}
break;
case 7:
if (true) {
return Collections.<ConceptEditor>singletonList(new CellModel_DiagramPort_Editor());
}
break;
case 8:
if (true) {
return Collections.<ConceptEditor>singletonList(new ConnectionEndBLQuery_Editor());
}
break;
case 9:
if (true) {
return Collections.<ConceptEditor>singletonList(new CreationActionReference_Editor());
}
break;
case 10:
if (true) {
return Collections.<ConceptEditor>singletonList(new CustomElementReference_Editor());
}
break;
case 11:
if (true) {
return Collections.<ConceptEditor>singletonList(new DiagramElementBLQuery_Editor());
}
break;
case 12:
if (true) {
return Collections.<ConceptEditor>singletonList(new ExternalFigureReference_Editor());
}
break;
case 13:
if (true) {
return Collections.<ConceptEditor>singletonList(new FigureParameterMapping_Editor());
}
break;
case 14:
if (true) {
return Collections.<ConceptEditor>singletonList(new LinkArgument_Editor());
}
break;
case 15:
if (true) {
return Collections.<ConceptEditor>singletonList(new Palette_Editor());
}
break;
case 16:
if (true) {
return Collections.<ConceptEditor>singletonList(new PropertyArgument_Editor());
}
break;
case 17:
if (true) {
return Collections.<ConceptEditor>singletonList(new Separator_Editor());
}
break;
case 18:
if (true) {
return Collections.<ConceptEditor>singletonList(new ThisEditorNodeExpression_Editor());
}
break;
default :
}
}
return Collections.<ConceptEditor>emptyList();
}
