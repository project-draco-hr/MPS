{
  SNode dType=BehaviorReflection.invokeVirtual((Class<SNode>)((Class)(Object.class)),SNodeOperations.as(SNodeOperations.getParent(((SNode)_context.getVariable("newExpr"))),"jetbrains.mps.baseLanguage.structure.TypeDerivable"),"virtual_deriveType_1213877435747",new Object[]{((SNode)_context.getVariable("newExpr"))});
  if ((dType == null)) {
    dType=TypeChecker.getInstance().getTypeOf(((SNode)_context.getVariable("newExpr")));
  }
  if ((dType != null)) {
    if ((SLinkOperations.getTarget(_context.getNode(),"copyFrom",true) != null)) {
      if ((TypeChecker.getInstance().getRuntimeSupport().coerce_(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(),"copyFrom",true)),HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.collections.structure.SequenceType"),true) != null)) {
        Values.CREATOR.set(dType,_context.getNode());
        Values.CREATOR_COPY_SEQUENCE.set(dType,Boolean.TRUE);
      }
 else       if ((TypeChecker.getInstance().getRuntimeSupport().coerce_(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(),"copyFrom",true)),HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.structure.ArrayType"),true) != null)) {
        Values.CREATOR.set(dType,_context.getNode());
        Values.CREATOR_COPY_ARRAY.set(dType,Boolean.TRUE);
      }
 else {
        _context.showWarningMessage(null,"copyFrom for creator in GenericNewExpression is not either Array or Sequence");
      }
    }
 else {
      Values.CREATOR.set(dType,_context.getNode());
      if (ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(),"initValue",true)).isNotEmpty()) {
        Values.CREATOR_INIT_VALUES.set(dType,Boolean.TRUE);
      }
    }
  }
  return dType;
}
