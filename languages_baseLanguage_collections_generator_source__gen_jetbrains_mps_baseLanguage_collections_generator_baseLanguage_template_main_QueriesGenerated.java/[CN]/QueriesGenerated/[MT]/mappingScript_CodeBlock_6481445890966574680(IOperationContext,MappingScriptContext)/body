{
  for (  SNode varDecl : SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.baseLanguage.structure.VariableDeclaration")) {
    if (!(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(varDecl,"type",true),"jetbrains.mps.baseLanguage.collections.structure.MapType"))) {
      continue;
    }
    SNode varDeclScope=SNodeOperations.getAncestor(varDecl,"jetbrains.mps.lang.core.structure.IContainer",false,false);
    for (    SNode varRef : SNodeOperations.getDescendants(varDeclScope,"jetbrains.mps.baseLanguage.structure.VariableReference",false,new String[]{})) {
      if (SLinkOperations.getTarget(varRef,"variableDeclaration",false) != varDecl) {
        continue;
      }
      try {
        SNode nt=BehaviorReflection.invokeVirtual((Class<SNode>)((Class)(Object.class)),SNodeOperations.as(SNodeOperations.getParent(varRef),"jetbrains.mps.baseLanguage.structure.TypeDerivable"),"virtual_deriveType_1213877435747",new Object[]{varRef});
        if ((TypeChecker.getInstance().getRuntimeSupport().coerce_(nt,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.collections.structure.SequenceType"),true) != null) && (TypeChecker.getInstance().getRuntimeSupport().coerce_(nt,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.collections.structure.MapType"),true) == null)) {
          SNode nr=SNodeOperations.replaceWithNewChild(varRef,"jetbrains.mps.baseLanguage.collections.structure.MapAsSequenceVarRef");
          SLinkOperations.setTarget(nr,"original",varRef,true);
        }
      }
 catch (      RuntimeException ex) {
        _context.showErrorMessage(varRef,"Error while processing node");
        throw ex;
      }
    }
  }
}
