{
  SNode res=(SNode)CopyUtil.copy(SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getNode(),"containerDeclaration",false),"factory",true));
  final List<SNode> tvDecls=ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getNode(),"containerDeclaration",false),"typeVariableDeclaration",true)).toListSequence();
  if (ListSequence.fromList(tvDecls).isNotEmpty()) {
    final SNode[] types=new SNode[2];
    if ((SLinkOperations.getTarget(_context.getNode(),"keyType",true) != null)) {
      types[0]=SLinkOperations.getTarget(_context.getNode(),"keyType",true);
    }
    if ((SLinkOperations.getTarget(_context.getNode(),"valueType",true) != null)) {
      types[1]=SLinkOperations.getTarget(_context.getNode(),"valueType",true);
    }
    ListSequence.fromList(SNodeOperations.getDescendants(res,"jetbrains.mps.baseLanguage.structure.TypeVariableReference",false,new String[]{})).toListSequence().visitAll(new IVisitor<SNode>(){
      public void visit(      SNode tvr){
        SNodeOperations.replaceWithAnother(tvr,SNodeOperations.copyNode(ClassifierTypeUtil.getTypeCoercedToClassifierType(types[ListSequence.fromList(tvDecls).indexOf(SLinkOperations.getTarget(tvr,"typeVariableDeclaration",false))])));
      }
    }
);
  }
  return res;
}
