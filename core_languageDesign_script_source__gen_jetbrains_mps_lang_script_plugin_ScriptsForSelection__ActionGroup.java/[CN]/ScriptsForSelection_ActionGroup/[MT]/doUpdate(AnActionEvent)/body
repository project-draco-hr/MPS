{
  try {
    ScriptsForSelection_ActionGroup.this.removeAll();
    event.getPresentation().setVisible(true);
    IOperationContext context=event.getData(MPSDataKeys.OPERATION_CONTEXT);
    if (context == null || context.getProject() == null) {
      event.getPresentation().setEnabled(false);
      return;
    }
    event.getPresentation().setEnabled(true);
    ScriptsMenuBuilder menuBuilder=new ScriptsMenuBuilder(true);
    ScriptsForSelection_ActionGroup.this.add(menuBuilder.create_ByCategoryPopup());
    ScriptsForSelection_ActionGroup.this.add(menuBuilder.create_ByBuildPopup());
    ScriptsForSelection_ActionGroup.this.add(menuBuilder.create_ByLanguagePopup());
{
      GeneratedAction newAction=new RunMigrationScripts_Action(menuBuilder.getAllScripts(),true);
      ActionManagerEx manager=ActionManagerEx.getInstanceEx();
      AnAction oldAction=manager.getAction(newAction.getActionId());
      if (oldAction == null) {
        manager.registerAction(newAction.getActionId(),newAction,PluginId.getId("jetbrains.mps.lang.script@transient35"));
        oldAction=newAction;
      }
      ScriptsForSelection_ActionGroup.this.addAction(oldAction);
    }
  }
 catch (  Throwable t) {
    LOG.error("User group error",t);
  }
  for (  Pair<ActionPlace,Condition<BaseAction>> p : this.myPlaces) {
    this.addPlace(p.first,p.second);
  }
}
