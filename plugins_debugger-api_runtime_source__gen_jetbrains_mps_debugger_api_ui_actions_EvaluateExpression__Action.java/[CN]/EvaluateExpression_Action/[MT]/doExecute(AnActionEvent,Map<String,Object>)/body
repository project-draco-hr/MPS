{
  try {
    IEvaluationProvider evaluationProvider=DebugActionsUtil.getEvaluationProvider(event);
    if (evaluationProvider != null) {
      final List<SNodeReference> nodePointers=ListSequence.fromList(new ArrayList<SNodeReference>());
      if (((EditorComponent)MapSequence.fromMap(_params).get("component")) != null) {
        final Selection selection=((EditorComponent)MapSequence.fromMap(_params).get("component")).getSelectionManager().getSelection();
        if ((selection instanceof EditorCellLabelSelection && ((EditorCellLabelSelection)selection).hasNonTrivialSelection()) || (selection instanceof EditorCellSelection && !((selection instanceof EditorCellLabelSelection))) || (selection instanceof MultipleSelection)) {
          ModelAccess.instance().runReadAction(new Runnable(){
            public void run(){
              ListSequence.fromList(nodePointers).addSequence(Sequence.fromIterable(Sequence.fromClosure(new ISequenceClosure<SNode>(){
                public Iterable<SNode> iterable(){
                  return selection.getSelectedNodes();
                }
              }
)).select(new ISelector<SNode,SNodePointer>(){
                public SNodePointer select(                SNode it){
                  return new SNodePointer(it);
                }
              }
));
            }
          }
);
        }
      }
      evaluationProvider.showEvaluationDialog(((IOperationContext)MapSequence.fromMap(_params).get("operationContext")),nodePointers);
    }
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "EvaluateExpression",t);
    }
  }
}
