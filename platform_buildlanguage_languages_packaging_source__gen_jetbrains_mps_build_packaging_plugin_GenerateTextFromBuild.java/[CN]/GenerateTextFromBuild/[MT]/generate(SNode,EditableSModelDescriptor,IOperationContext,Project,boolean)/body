{
  final String basedir=ModelAccess.instance().runReadAction(new Computable<String>(){
    public String compute(){
      return MPSLayout_Behavior.call_getFolderToGenerate_1229522949966(Configuration_Behavior.call_getLayout_1213877261819(configuration));
    }
  }
);
  final GeneratorManager generatorManager=project.getComponent(GeneratorManager.class);
  final File[] fileToRun=new File[]{null};
  TextGenerationHandler generationHandler=new TextGenerationHandler(){
    @Override protected void fileGenerated(    String targetDir,    String fileName,    TextGenerationUtil.TextGenerationResult result){
      File target=new File(basedir + File.separator + fileName);
      new File(basedir + File.separator).mkdirs();
      FileUtil.write(target,result.getText());
      if (target.getName().equals(Configuration_Behavior.call_getBuildFileName_1230217425313(configuration) + ".xml")) {
        fileToRun[0]=target;
      }
    }
  }
;
  if (showWindow) {
    generatorManager.generateModelsWithProgressWindow(ListSequence.fromListAndArray(new ArrayList<EditableSModelDescriptor>(),descriptor),context,generationHandler,true);
  }
 else {
    generatorManager.generateModels(ListSequence.fromListAndArray(new ArrayList<EditableSModelDescriptor>(),descriptor),context,generationHandler,new EmptyProgressIndicator(),new DefaultMessageHandler(project));
  }
  return fileToRun[0];
}
