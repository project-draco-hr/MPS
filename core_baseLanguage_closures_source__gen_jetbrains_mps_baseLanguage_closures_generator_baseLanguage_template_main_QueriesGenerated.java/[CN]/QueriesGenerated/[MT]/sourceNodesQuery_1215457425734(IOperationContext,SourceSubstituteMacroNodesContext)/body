{
  List<SNode> paramDecls=SLinkOperations.getTargets(_context.getNode(),"parameter",true);
  SNode ct=ClosureLiteralUtil.getAdaptableClosureLiteralTarget(_context.getNode(),((TemplateQueryContext)_context).getGenerator());
  if (ct != null) {
    List<SNode> imds=SLinkOperations.getTargets(SLinkOperations.getTarget(ct,"classifier",false),"method",true);
    if (ListSequence.fromList(imds).count() > 0) {
      SNode imd=ListSequence.fromList(imds).getElement(0);
      List<SNode> res=ListSequence.<SNode>fromArray();
      int idx=0;
      for (      SNode pd : SLinkOperations.getTargets(imd,"parameter",true)) {
        SNode newpd=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ParameterDeclaration",null);
        SLinkOperations.setTarget(newpd,"type",ClassifierTypeUtil.resolveType(SLinkOperations.getTarget(pd,"type",true),ct),true);
        SPropertyOperations.set(newpd,"name",SPropertyOperations.getString(ListSequence.fromList(paramDecls).getElement(idx),"name"));
        SPropertyOperations.set(newpd,"isFinal","" + (SPropertyOperations.getBoolean(ListSequence.fromList(paramDecls).getElement(idx),"isFinal")));
        idx=idx + 1;
        ListSequence.fromList(res).addElement(newpd);
      }
      return res;
    }
  }
  return Collections.emptyList();
}
