{
  List<SNode> paramDecls=SLinkOperations.getTargets(_context.getNode(),"parameter",true);
  SNode ct=ClosureLiteralUtil.getAdaptableClosureLiteralTarget(_context.getNode(),_context.getGenerator());
  if (ct != null) {
    List<SNode> imds=SLinkOperations.getTargets(SLinkOperations.getTarget(ct,"classifier",false),"method",true);
    if (imds.size() > 0) {
      SNode imd=imds.get(0);
      List<SNode> res=new ArrayList<SNode>();
      int idx=0;
      for (      SNode pd : SLinkOperations.getTargets(imd,"parameter",true)) {
        SNode newpd=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ParameterDeclaration",null);
        SLinkOperations.setTarget(newpd,"type",ClassifierTypeUtil.resolveType(SLinkOperations.getTarget(pd,"type",true),ct),true);
        SPropertyOperations.set(newpd,"name",SPropertyOperations.getString(paramDecls.get(idx),"name"));
        idx=idx + 1;
        res.add(newpd);
      }
      return res;
    }
  }
  return Collections.emptyList();
}
