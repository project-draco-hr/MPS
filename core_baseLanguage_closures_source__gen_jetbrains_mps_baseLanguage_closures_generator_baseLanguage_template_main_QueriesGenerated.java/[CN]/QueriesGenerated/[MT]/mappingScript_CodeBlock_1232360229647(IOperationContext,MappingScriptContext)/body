{
  for (  SNode stmt : SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.baseLanguage.structure.Statement")) {
    for (    SNode desc : SNodeOperations.getDescendants(stmt,null,false)) {
      if (SNodeOperations.isInstanceOf(desc,"jetbrains.mps.baseLanguage.closures.structure.InvokeFunctionOperation") && SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(SNodeOperations.getParent(desc),"operand",true)),"jetbrains.mps.baseLanguage.closures.structure.UnrestrictedFunctionType")) {
        if (SNodeOperations.getAncestor(desc,"jetbrains.mps.baseLanguage.structure.Statement",false,false) == stmt && !(SNodeOperations.isInstanceOf(SNodeOperations.getParent(SNodeOperations.getParent(desc)),"jetbrains.mps.baseLanguage.structure.ExpressionStatement"))) {
          SNode de=SNodeOperations.getParent(desc);
          SNode lvd=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration",null);
          SLinkOperations.setTarget(lvd,"type",FunctionTypeUtil.unmeet(SNodeOperations.copyNode(SLinkOperations.getTarget(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(de,"operand",true)),"terminateType",true))),true);
          SPropertyOperations.set(lvd,"name","_tmp_" + de.getId());
          lvd.putUserObject("__needs_initializer__",Boolean.TRUE);
          SNode lvds=SNodeOperations.insertPrevSiblingChild(stmt,SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement",null));
          SLinkOperations.setTarget(lvds,"localVariableDeclaration",lvd,true);
          SNode lvr=SNodeOperations.replaceWithAnother(de,SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalVariableReference",null));
          SLinkOperations.setTarget(lvr,"variableDeclaration",lvd,false);
          SNode es=SNodeOperations.insertPrevSiblingChild(stmt,SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ExpressionStatement",null));
          SLinkOperations.setTarget(es,"expression",de,true);
          de.putUserObject("__produces_value__",Boolean.TRUE);
        }
      }
    }
  }
}
