{
  List<SNode> args=SLinkOperations.getTargets(SLinkOperations.getTarget(_context.getNode(),"expression",true),"actualArgument",true);
  for (int idx=ListSequence.fromList(args).count() - 1; idx >= 0; idx--) {
    if (SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(args.get(idx)),"jetbrains.mps.baseLanguage.closures.structure.UnrestrictedFunctionType")) {
      return args.get(idx);
    }
  }
  return null;
}
