{
  SNode bmc;
  if (SNodeOperations.getAncestor(_context.getNode(),"jetbrains.mps.baseLanguage.structure.Classifier",false,false) == SNodeOperations.getAncestor(SLinkOperations.getTarget(_context.getNode(),"controlMethod",false),"jetbrains.mps.baseLanguage.structure.Classifier",false,false)) {
    bmc=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalStaticMethodCall",null);
    SLinkOperations.setTarget(bmc,"baseMethodDeclaration",SLinkOperations.getTarget(_context.getNode(),"controlMethod",false),false);
  }
 else {
    bmc=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StaticMethodCall",null);
    SLinkOperations.setTarget(bmc,"classConcept",SNodeOperations.getAncestor(SLinkOperations.getTarget(_context.getNode(),"controlMethod",false),"jetbrains.mps.baseLanguage.structure.ClassConcept",false,false),false);
    SLinkOperations.setTarget(bmc,"baseMethodDeclaration",SLinkOperations.getTarget(_context.getNode(),"controlMethod",false),false);
  }
  for (  SNode p : SLinkOperations.getTargets(_context.getNode(),"actualParameter",true)) {
    SNode copy=CopyUtil.copyAndPreserveId(p);
    SLinkOperations.addChild(bmc,"actualArgument",copy);
  }
  SNode lvr=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalVariableReference",null);
  SLinkOperations.setTarget(lvr,"variableDeclaration",SLinkOperations.getTarget(SNodeOperations.getAncestor(_context.getParentOutputNode(),"jetbrains.mps.baseLanguage.structure.ForStatement",false,false),"variable",true),false);
  SLinkOperations.addChild(bmc,"actualArgument",lvr);
  return bmc;
}
