{
  SNode copy=CopyUtil.copyAndPreserveId(_context.getNode());
  List<SNode> args=SLinkOperations.getTargets(_context.getNode(),"actualArgument",true);
  List<SNode> copyArgs=SLinkOperations.getTargets(copy,"actualArgument",true);
  for (int idx=ListSequence.fromList(args).count() - 1; idx >= 0; idx--) {
    if (SNodeOperations.isInstanceOf(TypeChecker.getInstance().getTypeOf(args.get(idx)),"jetbrains.mps.baseLanguage.closures.structure.UnrestrictedFunctionType")) {
      SNode lvr=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalVariableReference",null);
      SLinkOperations.setTarget(lvr,"variableDeclaration",SLinkOperations.getTarget(SNodeOperations.getAncestor(_context.getParentOutputNode(),"jetbrains.mps.baseLanguage.structure.ForStatement",false,false),"variable",true),false);
      SNodeOperations.replaceWithAnother(copyArgs.get(idx),lvr);
      break;
    }
  }
  return copy;
}
