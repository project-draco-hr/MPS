{
  List<SNode> paramDecls=SLinkOperations.getTargets(_context.getNode(),"parameter",true);
  int idx=0;
  List<SNode> res=ListSequence.<SNode>fromList(new ArrayList<SNode>());
  for (  SNode ft : FunctionType_Behavior.call_getNormalizedParameterTypes_1213877405276(SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(_context.getNode()),"jetbrains.mps.baseLanguage.closures.structure.FunctionType"))) {
    SNode pd=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ParameterDeclaration",null);
    SLinkOperations.setTarget(pd,"type",SNodeOperations.copyNode(FunctionTypeUtil.unmeet(ft)),true);
    SPropertyOperations.set(pd,"name",SPropertyOperations.getString(SNodeOperations.cast(ListSequence.<SNode>fromList(paramDecls).getElement(idx),"jetbrains.mps.baseLanguage.structure.ParameterDeclaration"),"name"));
    SPropertyOperations.set(pd,"isFinal","" + (SPropertyOperations.getBoolean(SNodeOperations.cast(ListSequence.<SNode>fromList(paramDecls).getElement(idx),"jetbrains.mps.baseLanguage.structure.ParameterDeclaration"),"isFinal")));
    idx++;
    ListSequence.<SNode>fromList(res).addElement(pd);
  }
  return res;
}
