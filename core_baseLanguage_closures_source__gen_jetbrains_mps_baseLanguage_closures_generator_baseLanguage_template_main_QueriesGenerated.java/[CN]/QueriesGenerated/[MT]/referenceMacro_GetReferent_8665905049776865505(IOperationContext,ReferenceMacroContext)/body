{
  List<SNode> siblings=SLinkOperations.getTargets(SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()),"jetbrains.mps.baseLanguage.structure.BaseMethodCall"),"actualArgument",true);
  List<SNode> parameters=SLinkOperations.getTargets(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()),"jetbrains.mps.baseLanguage.structure.BaseMethodCall"),"baseMethodDeclaration",false),"parameter",true);
  SNode type=SLinkOperations.getTarget(ListSequence.<SNode>fromList(parameters).getElement(ListSequence.<SNode>fromList(siblings).indexOf(_context.getNode())),"type",true);
  return MapSequence.<String,SNode>fromMap(RuntimeUtils.getRuntimeClassifiersMap()).get(UnrestrictedFunctionType_Behavior.call_getRuntimeAdapterClassName_1231423631922(type) + "." + FunctionType_Behavior.call_getRuntimeSignature_1213877404927(type));
}
