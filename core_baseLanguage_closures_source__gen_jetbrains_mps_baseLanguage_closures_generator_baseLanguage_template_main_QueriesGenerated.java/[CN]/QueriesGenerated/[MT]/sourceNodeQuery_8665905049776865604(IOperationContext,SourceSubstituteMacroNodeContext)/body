{
  FunctionType_Behavior.call_getNormalizedTerminateType_1232036646585(SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(_context.getNode()),"jetbrains.mps.baseLanguage.closures.structure.UnrestrictedFunctionType"));
  List<SNode> siblings=SLinkOperations.getTargets(SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()),"jetbrains.mps.baseLanguage.structure.BaseMethodCall"),"actualArgument",true);
  List<SNode> parameters=SLinkOperations.getTargets(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()),"jetbrains.mps.baseLanguage.structure.BaseMethodCall"),"baseMethodDeclaration",false),"parameter",true);
  SNode type=SLinkOperations.getTarget(ListSequence.fromList(parameters).getElement(ListSequence.fromList(siblings).indexOf(_context.getNode())),"type",true);
  return FunctionType_Behavior.call_getNormalizedTerminateType_1232036646585(type);
}
