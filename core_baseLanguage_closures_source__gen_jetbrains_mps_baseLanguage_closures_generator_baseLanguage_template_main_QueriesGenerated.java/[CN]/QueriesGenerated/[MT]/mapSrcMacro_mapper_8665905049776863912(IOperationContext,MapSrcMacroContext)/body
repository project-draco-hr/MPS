{
  SNode bmc;
  if (SNodeOperations.getAncestor(_context.getNode(),"jetbrains.mps.baseLanguage.structure.Classifier",false,false) == SNodeOperations.getAncestor(SLinkOperations.getTarget(_context.getNode(),"controlMethod",false),"jetbrains.mps.baseLanguage.structure.Classifier",false,false)) {
    bmc=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalStaticMethodCall",null);
    SLinkOperations.setTarget(SNodeOperations.cast(bmc,"jetbrains.mps.baseLanguage.structure.LocalStaticMethodCall"),"baseMethodDeclaration",SLinkOperations.getTarget(_context.getNode(),"controlMethod",false),false);
  }
 else {
    bmc=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StaticMethodCall",null);
    SLinkOperations.setTarget(SNodeOperations.cast(bmc,"jetbrains.mps.baseLanguage.structure.StaticMethodCall"),"classConcept",SNodeOperations.getAncestor(SLinkOperations.getTarget(_context.getNode(),"controlMethod",false),"jetbrains.mps.baseLanguage.structure.ClassConcept",false,false),false);
    SLinkOperations.setTarget(SNodeOperations.cast(bmc,"jetbrains.mps.baseLanguage.structure.StaticMethodCall"),"baseMethodDeclaration",SLinkOperations.getTarget(_context.getNode(),"controlMethod",false),false);
  }
  for (  SNode p : SLinkOperations.getTargets(_context.getNode(),"actualParameter",true)) {
    SNode copy=CopyUtil.copyAndPreserveId(p);
    ListSequence.fromList(SLinkOperations.getTargets(bmc,"actualArgument",true)).addElement(copy);
  }
  SNode lvr=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalVariableReference",null);
  SLinkOperations.setTarget(lvr,"variableDeclaration",SLinkOperations.getTarget(SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(SNodeOperations.getAncestor(_context.getParentOutputNode(),"jetbrains.mps.baseLanguage.structure.BlockStatement",false,false),"statements",true),"statement",true)).first(),"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement"),"localVariableDeclaration",true),false);
  ListSequence.fromList(SLinkOperations.getTargets(bmc,"actualArgument",true)).addElement(lvr);
  return bmc;
}
