{
  final StringBuffer sb=new StringBuffer();
  for (  File f : myModels) {
    sb.append(MODEL_FILE);
    sb.append("=");
    sb.append(f.getAbsolutePath());
    sb.append(" ");
  }
  for (  File f : myModules) {
    sb.append(MODULE_FILE);
    sb.append("=");
    sb.append(f.getAbsolutePath());
    sb.append(" ");
  }
  for (  File f : myMPSProjects.keySet()) {
    sb.append(MPS_PROJECT);
    sb.append("=");
    sb.append(f.getAbsolutePath());
    sb.append("[");
    for (    String s : myMPSProjects.get(f)) {
      sb.append(s);
      sb.append(",");
    }
    sb.append("]");
    sb.append(" ");
  }
  for (  String libraryName : myLibraries.keySet()) {
    sb.append(MPS_LIBRARY);
    sb.append("=");
    sb.append("[");
    sb.append(libraryName);
    if (myCompiledLibraries.contains(libraryName)) {
      sb.append("," + LIBRARY_COMPILE);
    }
    sb.append("]");
    sb.append(myLibraries.get(libraryName).getAbsolutePath());
    sb.append(" ");
  }
  for (  String macroName : myMacro.keySet()) {
    sb.append(MPS_MACRO);
    sb.append("=");
    sb.append("[");
    sb.append(macroName);
    sb.append("]");
    sb.append(myMacro.get(macroName));
    sb.append(" ");
  }
  for (  String name : myProperties.keySet()) {
    sb.append(name);
    sb.append("=");
    sb.append(myProperties.get(name));
    sb.append(" ");
  }
  sb.append(FAIL_ON_ERROR);
  sb.append("=");
  sb.append(myFailOnError);
  sb.append(" ");
  sb.append(LOG_LEVEL);
  sb.append("=");
  sb.append(myLogLevel);
  sb.append(" ");
  return sb.toString();
}
