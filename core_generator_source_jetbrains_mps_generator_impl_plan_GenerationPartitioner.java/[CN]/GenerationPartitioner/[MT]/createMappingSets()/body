{
  boolean topPriorityGroup=false;
  List<List<SNode>> mappingSets=new ArrayList<List<SNode>>();
  while (!myPriorityMap.isEmpty()) {
    List<SNode> mappingSet=createMappingSet(topPriorityGroup);
    if (mappingSet.isEmpty()) {
      if (!topPriorityGroup) {
        topPriorityGroup=true;
        continue;
      }
      break;
    }
    mappingSets.add(mappingSet);
  }
  Collections.reverse(mappingSets);
  for (  List<SNode> mappingSet : mappingSets) {
    Collections.sort(mappingSet,new Comparator<SNode>(){
      public int compare(      SNode o1,      SNode o2){
        return o1.getId().compareTo(o2.getId());
      }
    }
);
  }
  return mappingSets;
}
