{
  final String name=SPropertyOperations.getString(fieldDecl,"name");
  if ((name == null || name.length() == 0)) {
    return false;
  }
  SNode classifier=SNodeOperations.getAncestor(fieldDecl,"jetbrains.mps.baseLanguage.structure.Classifier",false,false);
  List<SNode> allFields=new ArrayList<SNode>();
  ListSequence.fromList(allFields).addSequence(Sequence.fromIterable(Classifier_Behavior.call_staticFields_5292274854859223538(classifier))).addSequence(Sequence.fromIterable(ClassConcept_Behavior.call_fields_5292274854859383272(SNodeOperations.as(classifier,"jetbrains.mps.baseLanguage.structure.ClassConcept"))));
  return ListSequence.fromList(allFields).any(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return it != fieldDecl && SPropertyOperations.hasValue(it,"name",name);
    }
  }
);
}
