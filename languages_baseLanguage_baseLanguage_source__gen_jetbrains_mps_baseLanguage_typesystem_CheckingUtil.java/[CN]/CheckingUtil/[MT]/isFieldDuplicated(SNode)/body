{
  final String name=SPropertyOperations.getString(fieldDecl,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
  if ((name == null || name.length() == 0)) {
    return false;
  }
  SNode classifier=SNodeOperations.getNodeAncestor(fieldDecl,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"),false,false);
  List<SNode> allFields=new ArrayList<SNode>();
  ListSequence.fromList(allFields).addSequence(Sequence.fromIterable(BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),classifier,"jetbrains.mps.baseLanguage.structure.Classifier","call_staticFields_5292274854859223538",new Object[]{}))).addSequence(Sequence.fromIterable(BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),SNodeOperations.as(classifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")),"jetbrains.mps.baseLanguage.structure.ClassConcept","call_fields_5292274854859383272",new Object[]{})));
  return ListSequence.fromList(allFields).any(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return it != fieldDecl && SPropertyOperations.hasValue(it,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),name);
    }
  }
);
}
