{
  final String name=SPropertyOperations.getString(fieldDecl,"name");
  if ((name == null || name.length() == 0)) {
    return false;
  }
  SNode classifier=SNodeOperations.getAncestor(fieldDecl,"jetbrains.mps.baseLanguage.structure.Classifier",false,false);
  List<SNode> allFields=new ArrayList<SNode>();
  ListSequence.fromList(allFields).addSequence(ListSequence.fromList(SLinkOperations.getTargets(classifier,"staticField",true))).addSequence(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.as(classifier,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"field",true)));
  return ListSequence.fromList(allFields).any(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return it != fieldDecl && SPropertyOperations.hasValue(it,"name",name);
    }
  }
);
}
