{
  if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node),"jetbrains.mps.baseLanguage.structure.AbstractUnaryNumberOperation") && !(SNodeOperations.isInstanceOf(SNodeOperations.getParent(node),"jetbrains.mps.baseLanguage.structure.UnaryMinus")) && SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(node),"jetbrains.mps.baseLanguage.structure.AbstractUnaryNumberOperation"),"expression",true) == node) {
    return true;
  }
  SNode assignment=SNodeOperations.getAncestor(node,"jetbrains.mps.baseLanguage.structure.BaseAssignmentExpression",false,false);
  if (assignment == null) {
    return false;
  }
  SNode lValue=SLinkOperations.getTarget(assignment,"lValue",true);
  if (node == lValue) {
    return true;
  }
  SNode parent=SNodeOperations.getParent(node);
  if (parent == lValue && SNodeOperations.isInstanceOf(parent,"jetbrains.mps.baseLanguage.structure.DotExpression") && SLinkOperations.getTarget(SNodeOperations.cast(parent,"jetbrains.mps.baseLanguage.structure.DotExpression"),"operation",true) == node) {
    return true;
  }
  return false;
}
