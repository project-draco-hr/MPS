{
  prepare();
  ListSequence.fromList(myPreparedIdsToDelete).visitAll(new IVisitor<SNodeId>(){
    public void visit(    SNodeId id){
      model.getNode(id).delete();
    }
  }
);
  myPreparedIdsToDelete=null;
  List<SNode> nodesToAdd=ListSequence.fromList(new ArrayList<SNode>());
  List<? extends SNode> newChildren=IterableUtil.asList(getChangeSet().getNewModel().getNode(myParentNodeId).getChildren(myRole));
  for (int i=myResultBegin; i < myResultEnd; i++) {
    ListSequence.fromList(nodesToAdd).addElement(nodeCopier.copyNode(newChildren.get(i)));
  }
  SNode anchor=(myPreparedAnchorId == null ? null : model.getNode(myPreparedAnchorId));
  SNode parent=model.getNode(myParentNodeId);
  for (  SNode newNode : ListSequence.fromList(nodesToAdd).reversedList()) {
    SNodeOperations.insertChild(parent,myRole,newNode,anchor);
  }
}
