{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.outputLang.structure.CustomRoot").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"statement"},new boolean[]{false}).alias("custom root","root for tests").create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.outputLang.structure.CustomStatement").super_("jetbrains.mps.baseLanguage.structure.Statement").parents("jetbrains.mps.baseLanguage.structure.Statement","jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"inner"},new boolean[]{false}).alias("work: ","").create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.outputLang.structure.CustomStatementRef").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").properties("ii").references("myStatement").create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.outputLang.structure.OutputNode").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("text").children(new String[]{"outputChild"},new boolean[]{true}).create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.outputLang.structure.OutputNode_forDontApplyReductionTwice_test").super_("jetbrains.mps.transformation.test.outputLang.structure.OutputNode").parents("jetbrains.mps.transformation.test.outputLang.structure.OutputNode").create();
case 5:
return new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.outputLang.structure.OutputRoot").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").properties("text").children(new String[]{"outputChild","specialChild"},new boolean[]{true,false}).alias("output root concept","").create();
case 6:
return new ConceptDescriptorBuilder("jetbrains.mps.transformation.test.outputLang.structure.TwoVarStatement").super_("jetbrains.mps.baseLanguage.structure.Statement").parents("jetbrains.mps.baseLanguage.structure.Statement").properties("name1","name2").create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
