{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.transformation.test.outputLang.structure.CustomRoot","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{"statement"},new boolean[]{false});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.transformation.test.outputLang.structure.CustomStatement","jetbrains.mps.baseLanguage.structure.Statement",false,new String[]{"jetbrains.mps.baseLanguage.structure.Statement","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{"inner"},new boolean[]{false});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.transformation.test.outputLang.structure.CustomStatementRef","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression"},new String[]{"ii"},new String[]{"myStatement"},new String[]{},new boolean[]{});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.transformation.test.outputLang.structure.OutputNode","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"text"},new String[]{},new String[]{"outputChild"},new boolean[]{true});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.transformation.test.outputLang.structure.OutputNode_forDontApplyReductionTwice_test","jetbrains.mps.transformation.test.outputLang.structure.OutputNode",false,new String[]{"jetbrains.mps.transformation.test.outputLang.structure.OutputNode"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.transformation.test.outputLang.structure.OutputRoot","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"text"},new String[]{},new String[]{"outputChild","specialChild"},new boolean[]{true,false});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.transformation.test.outputLang.structure.TwoVarStatement","jetbrains.mps.baseLanguage.structure.Statement",false,new String[]{"jetbrains.mps.baseLanguage.structure.Statement"},new String[]{"name1","name2"},new String[]{},new String[]{},new boolean[]{});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
