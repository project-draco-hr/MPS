{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(0x5206c8887c5d4275L,0xbc0a7c4da12f46e8L,0x15b423b3f8cfebb8L,0x15b423b3f8cfebbeL),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x5206c8887c5d4275L,0xbc0a7c4da12f46e8L,0x15b423b3f8cfebb8L,0x15b423b3f8cfebbeL),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return SNodeOperations.getNodeDescendants(SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(0x5206c8887c5d4275L,0xbc0a7c4da12f46e8L,0x78d6da5e3799eb08L,"jetbrains.mps.lang.pattern.testLang.structure.PatternTest"),false,false),MetaAdapterFactory.getConcept(0xd4615e3bd6714ba9L,0xaf012b78369b0ba7L,0x108a9cb4795L,"jetbrains.mps.lang.pattern.structure.PropertyPatternVariableDeclaration"),false,new SAbstractConcept[]{});
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_c2snrj_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
