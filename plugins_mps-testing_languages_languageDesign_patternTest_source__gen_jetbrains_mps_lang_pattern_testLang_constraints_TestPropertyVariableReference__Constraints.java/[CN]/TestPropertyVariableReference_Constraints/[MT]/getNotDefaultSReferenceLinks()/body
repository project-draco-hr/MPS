{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(5910632049497948789l,-4896964971953436952l),1563914226484898744l,1563914226484898750l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(5910632049497948789l,-4896964971953436952l),1563914226484898744l,1563914226484898750l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return SNodeOperations.getDescendants(SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.lang.pattern.testLang.structure.PatternTest",false,false),"jetbrains.mps.lang.pattern.structure.PropertyPatternVariableDeclaration",false,new String[]{});
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_c2snrj_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
