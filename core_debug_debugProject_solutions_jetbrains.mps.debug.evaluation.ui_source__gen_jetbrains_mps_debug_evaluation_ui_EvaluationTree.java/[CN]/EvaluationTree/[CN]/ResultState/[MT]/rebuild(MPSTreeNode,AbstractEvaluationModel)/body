{
  final boolean canEvalaute=model.getDebugSession().getEvaluationProvider().canEvaluate();
  if (canEvalaute) {
    myCachedWatchable=new CalculatedWatchable(myPresentation,myValueProxy.getJDIValue(),myClassFqName,myThreadReference);
  }
  if (myCachedWatchable != null) {
    WatchableNode watchableNode=new EvaluationTree.ResultState.MyWatchableNode(model,myCachedWatchable){
      @Override public boolean isLeaf(){
        if (canEvalaute) {
          return super.isLeaf();
        }
        return true;
      }
    }
;
    rootTreeNode.add(watchableNode);
  }
 else {
    rootTreeNode.add(new EvaluationTree.InitialTreeNode(model));
  }
}
