{
  if (RulesUtil.checkAppliedTo_LinkListAccess_aggregation(argument)) {
    SNode parameter=SLinkOperations.getTarget(argument,"parameter",true);
    if ((parameter != null)) {
      SNode parmType=TypeChecker.getInstance().getRuntimeSupport().checkedTypeOf(parameter);
      if (!((parmType != null))) {
        TypeChecker.getInstance().reportTypeError(parameter,"no type");
      }
      SNode expectedType=RulesUtil.get_inputNodeType(argument);
      if (!(TypeChecker.getInstance().getSubtypingManager().isSubtype(parmType,expectedType))) {
        TypeChecker.getInstance().reportTypeError(parameter,"incompatible type\nexpected: " + expectedType + "\nwas: "+ parmType);
      }
    }
  }
}
