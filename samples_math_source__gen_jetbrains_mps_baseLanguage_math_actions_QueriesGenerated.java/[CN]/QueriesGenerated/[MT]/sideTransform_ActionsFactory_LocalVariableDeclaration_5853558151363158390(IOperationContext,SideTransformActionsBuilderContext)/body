{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
  ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.math.structure.LinearSolveOperation"),_context.getSourceNode()){
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      SNode lso=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(3676340747305173022l,-6911132873973321185l),1418611629042457277l,"jetbrains.mps.baseLanguage.math.structure.LinearSolveOperation")),null);
{
        SNode matchedNode_fo7if3_b0a0a0=SLinkOperations.getTarget(_context.getSourceNode(),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type"));
{
          boolean matches_fo7if3_a1a0a0a=false;
{
            SNode matchingNode_fo7if3_a1a0a0a=SLinkOperations.getTarget(_context.getSourceNode(),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type"));
            if (matchingNode_fo7if3_a1a0a0a != null) {
              matches_fo7if3_a1a0a0a=SModelUtil_new.isAssignableConcept(matchingNode_fo7if3_a1a0a0a.getConcept().getQualifiedName(),"jetbrains.mps.baseLanguage.math.structure.MatrixType");
            }
          }
          if (matches_fo7if3_a1a0a0a) {
            SLinkOperations.setTarget(lso,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type"),SNodeOperations.cast(SLinkOperations.getTarget(_context.getSourceNode(),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type")),MetaAdapterFactory.getConcept(new UUID(3676340747305173022l,-6911132873973321185l),4815887568697030518l,"jetbrains.mps.baseLanguage.math.structure.MatrixType")));
          }
 else {
            boolean matches_fo7if3_b1a0a0a=false;
{
              SNode matchingNode_fo7if3_b1a0a0a=SLinkOperations.getTarget(_context.getSourceNode(),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type"));
              if (matchingNode_fo7if3_b1a0a0a != null) {
                matches_fo7if3_b1a0a0a=SModelUtil_new.isAssignableConcept(matchingNode_fo7if3_b1a0a0a.getConcept().getQualifiedName(),"jetbrains.mps.baseLanguage.math.structure.VectorType");
              }
            }
            if (matches_fo7if3_b1a0a0a) {
              SLinkOperations.setTarget(lso,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type"),SNodeOperations.cast(SLinkOperations.getTarget(_context.getSourceNode(),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type")),MetaAdapterFactory.getConcept(new UUID(3676340747305173022l,-6911132873973321185l),4815887568697030517l,"jetbrains.mps.baseLanguage.math.structure.VectorType")));
            }
          }
        }
      }
      SPropertyOperations.set(lso,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"),SPropertyOperations.getString(_context.getSourceNode(),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")));
      SNodeOperations.replaceWithAnother(_context.getSourceNode(),lso);
      return SLinkOperations.getTarget(lso,MetaAdapterFactory.getContainmentLink(new UUID(3676340747305173022l,-6911132873973321185l),1418611629042457277l,1418611629042470806l,"matrix"));
    }
    public String getMatchingText(    String pattern){
      return ":";
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
    public String getDescriptionText(    String pattern){
      return "Initialize as a vector satisfying linear equation";
    }
    @Override protected boolean isEnabled(){
      SNode sourceNode=getSourceNode();
      SNode parent=SNodeOperations.getParent(sourceNode);
      SNode containingLink=SNodeOperations.getContainingLinkDeclaration(sourceNode);
      return parent == null || containingLink == null || (ModelConstraints.canBeParent(parent,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.math.structure.LinearSolveOperation"),containingLink,null,null) && ModelConstraints.canBeAncestor(parent,null,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.math.structure.LinearSolveOperation"),null));
    }
  }
);
  return result;
}
