{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=MetaAdapterFactory.getConcept(0x3304fc6e7c6b401eL,0xa016b944934bb21fL,0x42d5783a626b0a85L,"jetbrains.mps.baseLanguage.math.structure.MatrixConstructor").getDeclarationNode();
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode n=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x3304fc6e7c6b401eL,0xa016b944934bb21fL,0x42d5783a626b0a85L,"jetbrains.mps.baseLanguage.math.structure.MatrixConstructor")),null);
          SPropertyOperations.set(n,MetaAdapterFactory.getProperty(0x3304fc6e7c6b401eL,0xa016b944934bb21fL,0x42d5783a626b0a85L,0x308cb55abc73bd40L,"column"),"" + (true));
          return n;
        }
        public String getDescriptionText(        String pattern){
          return "Matrix column constructor";
        }
        public String getMatchingText(        String pattern){
          return "<";
        }
        public String getVisibleMatchingText(        String pattern){
          return getMatchingText(pattern);
        }
      }
);
    }
  }
  return result;
}
