{
  ListSequence.fromList(SLinkOperations.getChildren(interfaceDeclaration,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,5375687026011219971l,"member"))).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration");
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return !(SPropertyOperations.getBoolean(SNodeOperations.cast(it,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration"),MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1068580123165l,1178608670077l,"isAbstract")));
    }
  }
).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode it){
{
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(it,"Interface methods should be abstract","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","8715200951321507642",null,errorTarget);
{
          BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.baseLanguage.typesystem.MakeInterfaceMethodAbstract_QuickFix",true);
          intentionProvider.putArgument("method",SNodeOperations.cast(it,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration"));
          _reporter_2309309498.addIntentionProvider(intentionProvider);
        }
      }
    }
  }
);
}
