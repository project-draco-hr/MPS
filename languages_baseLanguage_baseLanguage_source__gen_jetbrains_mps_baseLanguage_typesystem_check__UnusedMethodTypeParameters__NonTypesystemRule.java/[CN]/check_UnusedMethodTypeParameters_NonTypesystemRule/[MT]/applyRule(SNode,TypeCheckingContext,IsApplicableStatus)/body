{
  ListSequence.fromList(SLinkOperations.getTargets(baseMethodDeclaration,"typeVariableDeclaration",true)).visitAll(new IVisitor<SNode>(){
    public void visit(    final SNode typeVarDeclaration){
      boolean unused=ListSequence.fromList(SNodeOperations.getDescendants(baseMethodDeclaration,"jetbrains.mps.baseLanguage.structure.TypeVariableReference",false,new String[]{})).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return ListSequence.fromList(SNodeOperations.getAncestors(it,"jetbrains.mps.baseLanguage.structure.SingleLineComment",false)).isEmpty();
        }
      }
).all(new IWhereFilter<SNode>(){
        public boolean accept(        SNode ref){
          return neq_bz72ua_a0a0a0a0a0a0a0a0a0a0a1(SLinkOperations.getTarget(ref,"typeVariableDeclaration",false),typeVarDeclaration);
        }
      }
);
      if (unused) {
{
          MessageTarget errorTarget=new NodeMessageTarget();
          IErrorReporter _reporter_2309309498=typeCheckingContext.reportWarning(typeVarDeclaration,"Type variable is not being used","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","7430872850866111925",null,errorTarget);
{
            BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.baseLanguage.typesystem.RemoveUnusedMethodTypeVariableDeclaration_QuickFix",false);
            _reporter_2309309498.addIntentionProvider(intentionProvider);
          }
        }
      }
    }
  }
);
}
