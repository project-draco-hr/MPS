{
  return new ColoredItemPresentation(){
    @Override public String getPresentableText(){
      return PsiFormatUtil.formatMethod(MPSPsiMethod.this,PsiSubstitutor.EMPTY,PsiFormatUtil.SHOW_NAME | PsiFormatUtil.SHOW_PARAMETERS,PsiFormatUtil.SHOW_TYPE);
    }
    @Override public TextAttributesKey getTextAttributesKey(){
      if (isDeprecated()) {
        return CodeInsightColors.DEPRECATED_ATTRIBUTES;
      }
      return null;
    }
    @Override public String getLocationString(){
      PsiClass psiClass=getContainingClass();
      if (psiClass != null) {
        String container=psiClass.getQualifiedName();
        if (container != null) {
          return PsiBundle.message("aux.context.display",container);
        }
      }
      return null;
    }
    @Override public Icon getIcon(    boolean open){
      return MPSPsiMethod.this.getIcon(Iconable.ICON_FLAG_VISIBILITY);
    }
  }
;
}
