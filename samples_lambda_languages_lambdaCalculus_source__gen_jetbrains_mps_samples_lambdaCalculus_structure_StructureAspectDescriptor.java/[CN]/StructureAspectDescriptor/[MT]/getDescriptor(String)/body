{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a,conceptFqName)) {
case 0:
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.AbstractionVarRef",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.VariableReference"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression","jetbrains.mps.samples.lambdaCalculus.structure.VariableReference"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 1:
  return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.AbstractionVariable",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.Variable","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression","jetbrains.mps.samples.lambdaCalculus.structure.Variable"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 2:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.AddOperation",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.BinaryNumericOperation"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.BinaryNumericOperation","jetbrains.mps.samples.lambdaCalculus.structure.BinaryOperation","jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 3:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.BinaryNumericOperation",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.BinaryOperation"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.BinaryOperation","jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 4:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.BinaryOperation",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 5:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.BinaryStringOperation",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.BinaryOperation"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.BinaryOperation","jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 6:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.ConcatenateOperation",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.BinaryStringOperation"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.BinaryOperation","jetbrains.mps.samples.lambdaCalculus.structure.BinaryStringOperation","jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 7:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.DivideOperation",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.BinaryNumericOperation"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.BinaryNumericOperation","jetbrains.mps.samples.lambdaCalculus.structure.BinaryOperation","jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 8:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.FunctionType",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 9:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.LambdaAbstraction",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression","jetbrains.mps.samples.lambdaCalculus.structure.VariableOwner"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression","jetbrains.mps.samples.lambdaCalculus.structure.VariableOwner"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 10:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.LambdaApplication",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 11:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 12:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.LambdaType",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 13:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.LetExpression",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression","jetbrains.mps.samples.lambdaCalculus.structure.VariableOwner"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression","jetbrains.mps.samples.lambdaCalculus.structure.VariableOwner"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 14:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.LetRef",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.VariableReference"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression","jetbrains.mps.samples.lambdaCalculus.structure.VariableReference"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 15:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.LetVariable",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.Variable","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression","jetbrains.mps.samples.lambdaCalculus.structure.Variable"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 16:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.MultipleExpression",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 17:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.MultiplyOperation",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.BinaryNumericOperation"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.BinaryNumericOperation","jetbrains.mps.samples.lambdaCalculus.structure.BinaryOperation","jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 18:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.NumberType",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaType"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaType"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 19:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.NumericConstant",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 20:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.ParenthesisExpression",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 21:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.Program",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 22:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.StringConstant",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 23:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.StringType",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaType"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaType"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 24:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.SubtractOperation",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.BinaryNumericOperation"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.BinaryNumericOperation","jetbrains.mps.samples.lambdaCalculus.structure.BinaryOperation","jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 25:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.Variable",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 26:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.VariableOwner",new String[]{},new String[]{},new String[]{});
case 27:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.samples.lambdaCalculus.structure.VariableReference",new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"},new String[]{"jetbrains.mps.samples.lambdaCalculus.structure.LambdaExpression"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
default :
return null;
}
}
