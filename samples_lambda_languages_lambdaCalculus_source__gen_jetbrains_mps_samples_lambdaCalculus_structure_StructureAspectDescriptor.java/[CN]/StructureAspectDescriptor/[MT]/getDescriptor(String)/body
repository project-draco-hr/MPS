{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0gb,conceptFqName)) {
case 0:
    return myConceptAbstractionVarRef;
case 1:
  return myConceptAbstractionVariable;
case 2:
return myConceptAddOperation;
case 3:
return myConceptBinaryNumericOperation;
case 4:
return myConceptBinaryOperation;
case 5:
return myConceptBinaryStringOperation;
case 6:
return myConceptConcatenateOperation;
case 7:
return myConceptDivideOperation;
case 8:
return myConceptFunctionType;
case 9:
return myConceptLambdaAbstraction;
case 10:
return myConceptLambdaApplication;
case 11:
return myConceptLambdaExpression;
case 12:
return myConceptLambdaType;
case 13:
return myConceptLetExpression;
case 14:
return myConceptLetRef;
case 15:
return myConceptLetVariable;
case 16:
return myConceptMultipleExpression;
case 17:
return myConceptMultiplyOperation;
case 18:
return myConceptNumberType;
case 19:
return myConceptNumericConstant;
case 20:
return myConceptParenthesisExpression;
case 21:
return myConceptProgram;
case 22:
return myConceptStringConstant;
case 23:
return myConceptStringType;
case 24:
return myConceptSubtractOperation;
case 25:
return myConceptVariable;
case 26:
return myConceptVariableOwner;
case 27:
return myConceptVariableReference;
default :
return null;
}
}
