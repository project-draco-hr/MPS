{
  myIndexMap.put(myConceptAbstractionVarRef.getId(),0);
  myIndexMap.put(myConceptAbstractionVariable.getId(),1);
  myIndexMap.put(myConceptAddOperation.getId(),2);
  myIndexMap.put(myConceptBinaryNumericOperation.getId(),3);
  myIndexMap.put(myConceptBinaryOperation.getId(),4);
  myIndexMap.put(myConceptBinaryStringOperation.getId(),5);
  myIndexMap.put(myConceptConcatenateOperation.getId(),6);
  myIndexMap.put(myConceptDivideOperation.getId(),7);
  myIndexMap.put(myConceptFunctionType.getId(),8);
  myIndexMap.put(myConceptLambdaAbstraction.getId(),9);
  myIndexMap.put(myConceptLambdaApplication.getId(),10);
  myIndexMap.put(myConceptLambdaExpression.getId(),11);
  myIndexMap.put(myConceptLambdaType.getId(),12);
  myIndexMap.put(myConceptLetExpression.getId(),13);
  myIndexMap.put(myConceptLetRef.getId(),14);
  myIndexMap.put(myConceptLetVariable.getId(),15);
  myIndexMap.put(myConceptMultipleExpression.getId(),16);
  myIndexMap.put(myConceptMultiplyOperation.getId(),17);
  myIndexMap.put(myConceptNumberType.getId(),18);
  myIndexMap.put(myConceptNumericConstant.getId(),19);
  myIndexMap.put(myConceptParenthesisExpression.getId(),20);
  myIndexMap.put(myConceptProgram.getId(),21);
  myIndexMap.put(myConceptStringConstant.getId(),22);
  myIndexMap.put(myConceptStringType.getId(),23);
  myIndexMap.put(myConceptSubtractOperation.getId(),24);
  myIndexMap.put(myConceptVariable.getId(),25);
  myIndexMap.put(myConceptVariableOwner.getId(),26);
  myIndexMap.put(myConceptVariableReference.getId(),27);
}
