{
  Map<CacheNodeHandler,ConcurrentHashMap<String,SNode>> cache=isWeak ? myCoerceToConceptsCacheWeak : myCoerceToConceptsCache;
  Map<String,SNode> map=cache.get(new CacheNodeHandler(subtype));
  if (map != null && map.containsKey(conceptFQName)) {
    SNode result=postprocessGetNode(map.get(conceptFQName));
    if (result != null && result.shouldHaveBeenDisposed()) {
      map.remove(conceptFQName);
      return null;
    }
 else {
      return new Pair<Boolean,SNode>(true,result);
    }
  }
  return null;
}
