{
  Map<CacheNodeHandler,ConcurrentMap<Class,Pair<SNode,GeneratedMatchingPattern>>> cache=isWeak ? myCoerceToPatternsCacheWeak : myCoerceToPatternsCache;
  Map<Class,Pair<SNode,GeneratedMatchingPattern>> map=cache.get(new CacheNodeHandler(subtype));
  if (map != null && map.containsKey(c)) {
    Pair<SNode,GeneratedMatchingPattern> patternPair=map.get(c);
    SNode resultNode=patternPair.o1;
    if (resultNode != null && !org.jetbrains.mps.openapi.model.SNodeUtil.isAccessible(resultNode,MPSModuleRepository.getInstance())) {
      map.remove(c);
      return null;
    }
 else {
      pattern.fillFieldValuesFrom(patternPair.o2);
      return new Pair<Boolean,SNode>(true,resultNode);
    }
  }
  return null;
}
