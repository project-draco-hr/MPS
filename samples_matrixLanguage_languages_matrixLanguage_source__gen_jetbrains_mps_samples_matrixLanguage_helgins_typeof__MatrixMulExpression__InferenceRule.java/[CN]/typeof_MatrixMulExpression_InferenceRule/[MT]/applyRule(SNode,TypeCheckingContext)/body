{
{
    final SNode left=TypeChecker.getInstance().getRuntimeSupport().typeOf(SLinkOperations.getTarget(nodeToCheck,"leftExpression",true),"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.helgins)","1210005562793",true);
    TypeChecker.getInstance().getRuntimeSupport().whenConcrete(left,new Runnable(){
      public void run(){
{
          final SNode right=TypeChecker.getInstance().getRuntimeSupport().typeOf(SLinkOperations.getTarget(nodeToCheck,"rightExpression",true),"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.helgins)","1210005567145",true);
          TypeChecker.getInstance().getRuntimeSupport().whenConcrete(right,new Runnable(){
            public void run(){
              boolean done=false;
              if (TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getEquationManager().getRepresentator(left),new QuotationClass_6().createNode())) {
{
                  IMatchingPattern pattern_0=HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.samples.matrixLanguage.structure.MatrixType");
                  SNode coercedNode_0=TypeChecker.getInstance().getRuntimeSupport().coerce(TypeChecker.getInstance().getEquationManager().getRepresentator(right),pattern_0);
                  if (coercedNode_0 != null) {
{
                      SNode _nodeToCheck_1029348928467=nodeToCheck;
                      BaseIntentionProvider intentionProvider=null;
                      TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(nodeToCheck,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.helgins)","1210171765363",true),new QuotationClass_7().createNode(SLinkOperations.getTarget(coercedNode_0,"scalarType",true)),_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.helgins)","1210171765353",intentionProvider);
                    }
                    done=true;
                  }
                }
                if (!(done)) {
{
                    BaseIntentionProvider intentionProvider=null;
                    TypeChecker.getInstance().reportTypeError(SLinkOperations.getTarget(nodeToCheck,"rightExpression",true),"Type must be Matrix but " + SNodeOperations.getConceptDeclaration(TypeChecker.getInstance().getEquationManager().getRepresentator(right)),"r:fa2583c4-881b-48c1-ac69-00d684ad49dd(jetbrains.mps.samples.matrixLanguage.helgins@12_0)","1222950472601",intentionProvider);
                  }
                }
              }
 else               if (TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getEquationManager().getRepresentator(right),new QuotationClass_9().createNode())) {
{
                  IMatchingPattern pattern_1=HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.samples.matrixLanguage.structure.MatrixType");
                  SNode coercedNode_1=TypeChecker.getInstance().getRuntimeSupport().coerce(TypeChecker.getInstance().getEquationManager().getRepresentator(left),pattern_1);
                  if (coercedNode_1 != null) {
{
                      SNode _nodeToCheck_1029348928467=nodeToCheck;
                      BaseIntentionProvider intentionProvider=null;
                      TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(nodeToCheck,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.helgins)","1210174269273",true),new QuotationClass_8().createNode(SLinkOperations.getTarget(coercedNode_1,"scalarType",true)),_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.helgins)","1210174269263",intentionProvider);
                    }
                    done=true;
                  }
                }
                if (!(done)) {
{
                    BaseIntentionProvider intentionProvider=null;
                    TypeChecker.getInstance().reportTypeError(SLinkOperations.getTarget(nodeToCheck,"leftExpression",true),"Type must be Matrix but " + SNodeOperations.getConceptDeclaration(TypeChecker.getInstance().getEquationManager().getRepresentator(left)),"r:fa2583c4-881b-48c1-ac69-00d684ad49dd(jetbrains.mps.samples.matrixLanguage.helgins@12_0)","1222950472621",intentionProvider);
                  }
                }
              }
 else {
                final SNode v_typevar_1210174591724=TypeChecker.getInstance().getRuntimeSupport().createNewRuntimeTypesVariable();
{
                  SNode _nodeToCheck_1029348928467=nodeToCheck;
                  BaseIntentionProvider intentionProvider=null;
                  TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(nodeToCheck,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.helgins)","1210174591729",true),TypeChecker.getInstance().getEquationManager().getRepresentator(v_typevar_1210174591724),_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.helgins)","1210174591725",intentionProvider);
                }
{
                  SNode _nodeToCheck_1029348928467=nodeToCheck;
                  BaseIntentionProvider intentionProvider=null;
                  TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(SLinkOperations.getTarget(nodeToCheck,"leftExpression",true),"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.helgins)","1210174591735",true),TypeChecker.getInstance().getEquationManager().getRepresentator(v_typevar_1210174591724),_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.helgins)","1210174591731",intentionProvider);
                }
{
                  SNode _nodeToCheck_1029348928467=nodeToCheck;
                  BaseIntentionProvider intentionProvider=null;
                  TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(SLinkOperations.getTarget(nodeToCheck,"rightExpression",true),"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.helgins)","1210174591743",true),TypeChecker.getInstance().getEquationManager().getRepresentator(v_typevar_1210174591724),_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.helgins)","1210174591739",intentionProvider);
                }
                done=true;
              }
            }
          }
,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.helgins)","1210004912543");
        }
      }
    }
,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.helgins)","1210004689795");
  }
}
