{
  if (cell == null || !(cell instanceof EditorCell_Label))   return;
  EditorCell_Label editorCell=(EditorCell_Label)cell;
  for (  Pair position : myPositions) {
    int startPosition=(Integer)position.first;
    int endPosition=(Integer)position.second;
    if (editorCell.getRenderedText().length() >= endPosition) {
      FontMetrics metrics=g.getFontMetrics();
      String text=editorCell.getRenderedText().substring(startPosition,endPosition);
      int prevStringWidth=metrics.stringWidth(editorCell.getRenderedText().substring(0,startPosition));
      int x=editorCell.getX() + editorCell.getLeftInset() + prevStringWidth;
      int y=editorCell.getY();
      int height=editorCell.getHeight();
      int width=metrics.stringWidth(text);
      Color color=getColor();
      color=new Color(color.getRed(),color.getGreen(),color.getBlue());
      g.setColor(color);
      g.fillRect(x + 1,y + 1,width - 2,height - 2);
    }
  }
}
