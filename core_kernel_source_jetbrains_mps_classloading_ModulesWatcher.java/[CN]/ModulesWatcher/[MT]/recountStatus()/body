{
  if (!isChanged())   return;
  myRepository.getModelAccess().runReadAction(new Runnable(){
    @Override public void run(){
synchronized (LOCK) {
        if (!isChanged())         return;
        LOG.debug("Recount status map for modules");
        myChanged=false;
        final Collection<? extends SModuleReference>[] invalidModules=new Collection[1];
        updateGraph();
        invalidModules[0]=findInvalidModules();
        LOG.debug(invalidModules[0].size() + " modules marked invalid for class loading out of " + getAllModules().size()+ " modules totally");
        myStatusMap.clear();
        for (        SModuleReference mRef : getAllModules())         myStatusMap.put(mRef,VALID);
        for (        SModuleReference mRef : getBackDependencies(invalidModules[0]))         myStatusMap.put(mRef,INVALID);
        checkStatusMapCorrectness();
      }
    }
  }
);
}
