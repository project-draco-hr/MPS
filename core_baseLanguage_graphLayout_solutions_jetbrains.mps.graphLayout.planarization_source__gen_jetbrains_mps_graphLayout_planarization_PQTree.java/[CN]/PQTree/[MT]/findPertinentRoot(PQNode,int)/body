{
  if (node instanceof Leaf) {
    if (node.getState() == PQNode.State.FULL) {
      MapSequence.fromMap(myNumFullLeaves).put(node,1);
    }
 else {
      MapSequence.fromMap(myNumFullLeaves).put(node,0);
    }
  }
 else {
    int numFullLeaves=0;
    boolean hasPartial=false;
    int numEmptyChildren=0;
    for (    PQNode child : ListSequence.fromList(node.getChildren())) {
      PQNode pertinentRoot=findPertinentRoot(child,numAllFullLeaves);
      if (pertinentRoot != null) {
        return pertinentRoot;
      }
      numFullLeaves+=MapSequence.fromMap(myNumFullLeaves).get(child);
      if (child.getState() == PQNode.State.PARTIAL) {
        hasPartial=true;
      }
      if (child.getState() == PQNode.State.EMPTY) {
        numEmptyChildren++;
      }
    }
    if (hasPartial) {
      node.setState(PQNode.State.PARTIAL);
    }
 else {
      if (numEmptyChildren == 0) {
        node.setState(PQNode.State.FULL);
      }
 else       if (numEmptyChildren == ListSequence.fromList(node.getChildren()).count()) {
        node.setState(PQNode.State.EMPTY);
      }
 else {
        node.setState(PQNode.State.PARTIAL);
      }
    }
    MapSequence.fromMap(myNumFullLeaves).put(node,numFullLeaves);
  }
  node.setNumFullLeaves(MapSequence.fromMap(myNumFullLeaves).get(node));
  if (MapSequence.fromMap(myNumFullLeaves).get(node) == numAllFullLeaves) {
    return node;
  }
 else {
    return null;
  }
}
