{
  this.fqName=fqName;
  canBeAChildMethod=getMethodUsingInheritanceWithModelAccess(fqName,BehaviorConstants.CAN_BE_A_CHILD_METHOD_NAME,IOperationContext.class,CanBeAChildContext.class);
  canBeAnAncestorMethod=getMethodUsingInheritanceWithModelAccess(fqName,BehaviorConstants.CAN_BE_AN_ANCESTOR_METHOD_NAME,IOperationContext.class,CanBeAnAncestorContext.class);
  canBeAParentMethod=getMethodUsingInheritanceWithModelAccess(fqName,BehaviorConstants.CAN_BE_A_PARENT_METHOD_NAME,IOperationContext.class,CanBeAParentContext.class);
  canBeARootMethod=getMethodUsingInheritanceWithModelAccess(fqName,BehaviorConstants.CAN_BE_A_ROOT_METHOD_NAME,IOperationContext.class,CanBeARootContext.class);
  alternativeIconMethod=getMethodUsingInheritanceWithModelAccess(fqName,BehaviorConstants.GET_ALTERNATIVE_ICON_METHOD_NAME,SNode.class);
  defaultConcreteConceptFqNameMethod=getMethodUsingInheritanceWithModelAccess(fqName,BehaviorConstants.GET_DEFAULT_CONCRETE_CONCEPT_FQ_NAME);
}
