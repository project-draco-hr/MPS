{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141037l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141037l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_8qp2eq_a0a0a0a0a1a0b0a1a1;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          if (!(SNodeOperations.isInstanceOf(_context.getContextNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1081236700937l,"jetbrains.mps.baseLanguage.structure.StaticMethodCall")))) {
            return new EmptyScope();
          }
          if ((SLinkOperations.getTarget(SNodeOperations.cast(_context.getContextNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1081236700937l,"jetbrains.mps.baseLanguage.structure.StaticMethodCall")),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1081236700937l,1144433194310l,"classConcept")) == null)) {
            return new EmptyScope();
          }
          return new MethodsScope(Members.visibleStaticMethods(SLinkOperations.getTarget(SNodeOperations.cast(_context.getContextNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1081236700937l,"jetbrains.mps.baseLanguage.structure.StaticMethodCall")),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1081236700937l,1144433194310l,"classConcept")),_context.getContextNode()));
        }
      }
;
    }
  }
);
  return references;
}
