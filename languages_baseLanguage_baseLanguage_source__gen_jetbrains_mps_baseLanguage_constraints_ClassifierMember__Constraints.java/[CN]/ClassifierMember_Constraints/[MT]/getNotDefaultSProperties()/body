{
  Map<SPropertyId,PropertyConstraintsDescriptor> properties=new HashMap<SPropertyId,PropertyConstraintsDescriptor>();
  properties.put(MetaIdFactory.propId(new UUID(-3554657779850784990l,-7236703803128771572l),1133920641626l,1156234966388l),new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(new UUID(-3554657779850784990l,-7236703803128771572l),1133920641626l,1156234966388l),this){
    @Override public boolean hasOwnGetter(){
      return true;
    }
    @Override public Object getValue(    SNode node){
      String propertyName="shortDescription";
{
        SNode classifier=SNodeOperations.getNodeAncestor(node,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,"jetbrains.mps.baseLanguage.structure.Classifier"),false,false);
        if (classifier != null) {
          return NodePresentationUtil.getRoleInParentOrConceptName(node) + " (" + NameUtil.compactNodeFQName(classifier)+ ")";
        }
        return NodePresentationUtil.getRoleInParentOrConceptName(node) + " (?declaring classifier?)";
      }
    }
  }
);
  return properties;
}
