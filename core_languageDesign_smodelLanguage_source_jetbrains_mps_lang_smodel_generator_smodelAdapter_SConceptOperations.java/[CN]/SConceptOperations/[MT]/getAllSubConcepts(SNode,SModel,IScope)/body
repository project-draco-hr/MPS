{
  if (conceptDeclarationNode == null)   return new ArrayList<SNode>();
  AbstractConceptDeclaration concept=(AbstractConceptDeclaration)conceptDeclarationNode.getAdapter();
  ISearchScope ss=SModelSearchUtil.createConceptsFromModelLanguagesScope(model,scope);
  List<AbstractConceptDeclaration> concepts=ss.getAdapters(AbstractConceptDeclaration.class);
  Set<AbstractConceptDeclaration> subConcepts=new HashSet<AbstractConceptDeclaration>();
  for (  AbstractConceptDeclaration acd : concepts) {
    if (SModelUtil_new.isAssignableConcept(acd,concept)) {
      subConcepts.add(acd);
    }
  }
  subConcepts.remove(concept);
  List<SNode> result=new ArrayList<SNode>(subConcepts.size());
  for (  AbstractConceptDeclaration subConcept : subConcepts) {
    result.add(subConcept.getNode());
  }
  return result;
}
