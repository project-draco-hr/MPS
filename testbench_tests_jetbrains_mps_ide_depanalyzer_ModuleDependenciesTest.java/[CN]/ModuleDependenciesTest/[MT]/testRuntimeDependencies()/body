{
  final Solution[] solutions=new Solution[4];
  final Language[] languages=new Language[4];
  for (int i=0; i < 4; i++) {
    solutions[i]=createSolution();
    languages[i]=createLanguage();
  }
  solutions[0].addUsedLanguage(languages[0].getModuleReference());
  languages[0].getModuleDescriptor().getRuntimeModules().add(solutions[1].getModuleReference());
  languages[0].addExtendedLanguage(languages[1].getModuleReference());
  languages[1].getModuleDescriptor().getRuntimeModules().add(solutions[2].getModuleReference());
  languages[0].addUsedLanguage(languages[2].getModuleReference());
  languages[2].getModuleDescriptor().getRuntimeModules().add(solutions[3].getModuleReference());
  testDependency(solutions[0],solutions[1],false,0);
  testDependency(solutions[0],solutions[1],true,1);
  testDependency(solutions[0],solutions[2],true,1);
  testDependency(solutions[0],solutions[3],true,0);
}
