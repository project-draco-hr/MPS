{
  final Solution[] solutions=new Solution[5];
  for (int i=0; i < 5; i++) {
    solutions[i]=createSolution();
  }
  final Language[] languages=new Language[]{createLanguage(),createLanguage()};
  solutions[0].addDependency(solutions[1].getModuleReference(),false);
  solutions[1].addDependency(solutions[2].getModuleReference(),true);
  solutions[2].addDependency(solutions[3].getModuleReference(),true);
  solutions[1].addDependency(solutions[3].getModuleReference(),true);
  solutions[2].addDependency(solutions[4].getModuleReference(),false);
  solutions[4].addDependency(languages[0].getModuleReference(),false);
  languages[0].addExtendedLanguage(languages[1].getModuleReference());
  testDependency(solutions[0],solutions[1],false,1);
  testDependency(solutions[0],solutions[2],false,1);
  testDependency(solutions[0],solutions[3],false,2);
  testDependency(solutions[4],languages[0],false,1);
  testDependency(languages[0],languages[1],false,1);
  testDependency(solutions[4],languages[1],false,1);
  testDependency(solutions[0],solutions[4],false,0);
  testDependency(solutions[0],solutions[4],true,1);
}
