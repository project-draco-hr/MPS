{
  SNode bottomMostTernary=TernaryOperatorExpression_Behavior.call_findBottomMostTernary_4985347495062938743(thisNode,thisNode);
  if (rightTurn != null) {
    SNodeOperations.replaceWithAnother(thisNode,SLinkOperations.getTarget(bottomMostTernary,"ifFalse",true));
    if (leftTurn != null) {
      BehaviorReflection.invokeVirtual(Void.class,rightTurn,"virtual_setLeftSideExpression_7583777362102629706",new Object[]{SLinkOperations.getTarget(thisNode,"condition",true)});
      BehaviorReflection.invokeVirtual(Void.class,leftTurn,"virtual_setRightSideExpression_7583777362102706555",new Object[]{parens});
    }
 else {
      BehaviorReflection.invokeVirtual(Void.class,rightTurn,"virtual_setLeftSideExpression_7583777362102629706",new Object[]{parens});
    }
  }
 else {
    if (leftTurn != null) {
      SNodeOperations.replaceWithAnother(thisNode,SLinkOperations.getTarget(thisNode,"condition",true));
      BehaviorReflection.invokeVirtual(Void.class,leftTurn,"virtual_setRightSideExpression_7583777362102706555",new Object[]{parens});
    }
 else {
      SNodeOperations.replaceWithAnother(thisNode,parens);
    }
  }
  SLinkOperations.setTarget(bottomMostTernary,"ifFalse",rightAccumulator,true);
  SLinkOperations.setTarget(thisNode,"condition",leftAccumulator,true);
}
