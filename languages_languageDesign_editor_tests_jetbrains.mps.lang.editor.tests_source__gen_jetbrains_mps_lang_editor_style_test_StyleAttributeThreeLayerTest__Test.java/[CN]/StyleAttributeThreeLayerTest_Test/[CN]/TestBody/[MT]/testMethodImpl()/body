{
  initEditor("23293207023291705","");
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      SNode root=SNodeOperations.cast(TestBody.this.getEditorComponent().getEditedNode(),"jetbrains.mps.lang.editor.styleTests.structure.NodeContainer");
      SNode huge=ListSequence.fromList(SLinkOperations.getTargets(root,"node",true)).getElement(0);
      SNode priority=ListSequence.fromList(SLinkOperations.getTargets(huge,"node",true)).getElement(0);
      SNode unapplyPriority=ListSequence.fromList(SLinkOperations.getTargets(priority,"node",true)).getElement(0);
      SNode leaf=ListSequence.fromList(SLinkOperations.getTargets(unapplyPriority,"node",true)).getElement(0);
      Assert.assertEquals(TestBody.this.getEditorComponent().findNodeCell(root).getStyle().get(StyleAttributes.getInstance().<String>getAttribute("jetbrains.mps.lang.editor.styleTests","test-inherited-attribute")),"top");
      Assert.assertEquals(TestBody.this.getEditorComponent().findNodeCell(huge).getStyle().get(StyleAttributes.getInstance().<String>getAttribute("jetbrains.mps.lang.editor.styleTests","test-inherited-attribute")),"Huge");
      Assert.assertEquals(TestBody.this.getEditorComponent().findNodeCell(priority).getStyle().get(StyleAttributes.getInstance().<String>getAttribute("jetbrains.mps.lang.editor.styleTests","test-inherited-attribute")),"Huge");
      Assert.assertEquals(TestBody.this.getEditorComponent().findNodeCell(unapplyPriority).getStyle().get(StyleAttributes.getInstance().<String>getAttribute("jetbrains.mps.lang.editor.styleTests","test-inherited-attribute")),"Huge");
      Assert.assertEquals(TestBody.this.getEditorComponent().findNodeCell(leaf).getStyle().get(StyleAttributes.getInstance().<String>getAttribute("jetbrains.mps.lang.editor.styleTests","test-inherited-attribute")),"Huge");
    }
  }
);
}
