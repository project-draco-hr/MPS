{
  SModel model=modelDescriptor.getSModel();
  boolean wasLoading=model.isLoading();
  try {
    model.setLoading(true);
    boolean modified=false;
    for (    SNode es : model.getFastNodeFinder().getNodes(AbstractEquationStatement.concept,true)) {
      INodeAdapter left=es.getChild(AbstractEquationStatement.LEFT_EXPRESSION).getAdapter();
      INodeAdapter right=es.getChild(AbstractEquationStatement.RIGHT_EXPRESSION).getAdapter();
      if (left instanceof Expression) {
        NormalTypeClause normalTypeClause=NormalTypeClause.newInstance(model);
        es.replaceChild(left.getNode(),normalTypeClause.getNode());
        normalTypeClause.setNormalType((Expression)left);
        modified=true;
      }
      if (right instanceof Expression) {
        NormalTypeClause normalTypeClause=NormalTypeClause.newInstance(model);
        es.replaceChild(right.getNode(),normalTypeClause.getNode());
        normalTypeClause.setNormalType((Expression)right);
        modified=true;
      }
    }
    if (modified) {
      ((EditableSModelDescriptor)modelDescriptor).save();
    }
  }
  finally {
    model.setLoading(wasLoading);
  }
}
