{
  super("API Migration");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "jetbrains.mps.baseLanguage.search -> MPS.Core";
    }
    public String getAdditionalInfo(){
      return "jetbrains.mps.baseLanguage.search -> MPS.Core";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.core.structure.BaseConcept";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return Sequence.fromIterable(SNodeOperations.getReferences(node)).where(new IWhereFilter<SReference>(){
        public boolean accept(        SReference it){
          String longName=check_d0rs9v_a0a0a0a0a0a0(it.getTargetSModelReference());
          if (longName == null) {
            return false;
          }
          return it.getTargetSModelReference().getSModelId().toString().contains("#f3061a53-9226-4cc5-a443-f952ceaf5816#") && (longName.endsWith(".search") || longName.endsWith(".index") || longName.endsWith(".javastub"));
        }
      }
).isNotEmpty();
    }
    public void doUpdateInstanceNode(    SNode node){
      MpsClasspathRefUtil.updateReferencesToMpsClasspath(node);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MacrosUtil.expandPath()";
    }
    public String getAdditionalInfo(){
      return "MacrosUtil.expandPath()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isStaticMethodCall(node,"jetbrains.mps.plugins.MacrosUtil.expandPath(java.lang.String,java.lang.String):java.lang.String");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a2a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "IOperationContext.getProject()";
    }
    public String getAdditionalInfo(){
      return "IOperationContext.getProject()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.DotExpression";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"jetbrains.mps.smodel.IOperationContext.getProject():com.intellij.openapi.project.Project");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceNode(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a3a0().createNode(SLinkOperations.getTarget(node,"operand",true)));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "IOperationContext.getMainFrame()";
    }
    public String getAdditionalInfo(){
      return "IOperationContext.getMainFrame()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.DotExpression";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"jetbrains.mps.smodel.IOperationContext.getMainFrame():java.awt.Frame");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceNode(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a4a0().createNode(SLinkOperations.getTarget(node,"operand",true)));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ModuleDependenciesManager.getAllRequiredModules()";
    }
    public String getAdditionalInfo(){
      return "ModuleDependenciesManager.getAllRequiredModules()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.DotExpression";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"jetbrains.mps.project.dependency.DependenciesManager.getAllRequiredModules():java.util.Set");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceNode(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a5a0().createNode(SLinkOperations.getTarget(node,"operand",true)));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ModuleDependenciesManager.getAllUsedLanguages()";
    }
    public String getAdditionalInfo(){
      return "ModuleDependenciesManager.getAllUsedLanguages()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.DotExpression";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && StubRefUtil.isInstanceMethodCall(SNodeOperations.cast(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"jetbrains.mps.project.dependency.DependenciesManager.getAllUsedLanguages():java.util.Set");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceNode(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a6a0().createNode(SLinkOperations.getTarget(node,"operand",true)));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ProjectOperationContext.get()";
    }
    public String getAdditionalInfo(){
      return "ProjectOperationContext.get()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isStaticMethodCall(node,"jetbrains.mps.project.ProjectOperationContext.get(com.intellij.openapi.project.Project):jetbrains.mps.project.ProjectOperationContext");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceNode(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a7a0().createNode(ListSequence.fromList(SLinkOperations.getTargets(node,"actualArgument",true)).getElement(0)));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSProject.getModules()";
    }
    public String getAdditionalInfo(){
      return "MPSProject.getModules()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.project.MPSProject.getModules():java.util.List");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0i0a().createNode(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSProject.getModulesWithGenerators()";
    }
    public String getAdditionalInfo(){
      return "MPSProject.getModulesWithGenerators()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.project.MPSProject.getModulesWithGenerators():java.util.List");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0j0a().createNode(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Language.getStructureModelDescriptor()";
    }
    public String getAdditionalInfo(){
      return "Language.getStructureModelDescriptor()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.smodel.Language.getStructureModelDescriptor():jetbrains.mps.smodel.descriptor.EditableSModelDescriptor");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0k0a().createNode(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ModelCommandExecutor.runWriteActionWithProgressSynchronously()";
    }
    public String getAdditionalInfo(){
      return "ModelCommandExecutor.runWriteActionWithProgressSynchronously()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.smodel.ModelCommandExecutor.runWriteActionWithProgressSynchronously(com.intellij.openapi.progress.Progressive,java.lang.String,boolean,com.intellij.openapi.project.Project):void");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceNode(node,SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0l0a().createNode(ListSequence.fromList(SLinkOperations.getTargets(node,"actualArgument",true)).getElement(0),ListSequence.fromList(SLinkOperations.getTargets(node,"actualArgument",true)).getElement(1),ListSequence.fromList(SLinkOperations.getTargets(node,"actualArgument",true)).getElement(1),ListSequence.fromList(SLinkOperations.getTargets(node,"actualArgument",true)).getElement(1),ListSequence.fromList(SLinkOperations.getTargets(node,"actualArgument",true)).getElement(2),ListSequence.fromList(SLinkOperations.getTargets(node,"actualArgument",true)).getElement(3)),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "FindUsagesManager.findUsages()";
    }
    public String getAdditionalInfo(){
      return "FindUsagesManager.findUsages()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.findUsages.FindUsagesManager.findUsages(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IScope,jetbrains.mps.ide.progress.IAdaptiveProgressMonitor):java.util.Set");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0m0a().createNode(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "FindUsagesManager.findUsages()";
    }
    public String getAdditionalInfo(){
      return "FindUsagesManager.findUsages()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.findUsages.FindUsagesManager.findUsages(java.util.Set,jetbrains.mps.smodel.IScope,jetbrains.mps.ide.progress.IAdaptiveProgressMonitor,boolean):java.util.Set");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0n0a().createNode(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "FindUsagesManager.ProgressAdapter";
    }
    public String getAdditionalInfo(){
      return "FindUsagesManager.ProgressAdapter";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isClassCreator(node,"jetbrains.mps.findUsages.FindUsagesManager$ProgressAdapter.<init>(com.intellij.openapi.progress.ProgressIndicator)");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a41a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "AbstractModule.getDependOn()";
    }
    public String getAdditionalInfo(){
      return "AbstractModule.getDependOn()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.project.AbstractModule.getDependOn():java.util.List");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceNode(node,SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0p0a().createNode(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ParenthesisUtil.rotateTree()";
    }
    public String getAdditionalInfo(){
      return "ParenthesisUtil.rotateTree()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isStaticMethodCall(node,SModelReference.fromString("r:00000000-0000-4000-0000-011c895902c8(jetbrains.mps.baseLanguage.plugin)"),"155142699038773182","155142699038773979");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a61a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ParenthesisUtil.isBadPriority()";
    }
    public String getAdditionalInfo(){
      return "ParenthesisUtil.isBadPriority()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isStaticMethodCall(node,SModelReference.fromString("r:00000000-0000-4000-0000-011c895902c8(jetbrains.mps.baseLanguage.plugin)"),"155142699038773182","155142699038774033");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a71a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSEditorOpener";
    }
    public String getAdditionalInfo(){
      return "MPSEditorOpener";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToClass(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType","classifier")),"jetbrains.mps.workbench.editors.MPSEditorOpener");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a81a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSEditorOpener.class";
    }
    public String getAdditionalInfo(){
      return "MPSEditorOpener.class";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierClassExpression";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToClass(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierClassExpression","classifier")),"jetbrains.mps.workbench.editors.MPSEditorOpener");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a91a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "new MPSEditorOpener()";
    }
    public String getAdditionalInfo(){
      return "new MPSEditorOpener()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToMethod(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration")),"jetbrains.mps.workbench.editors.MPSEditorOpener.<init>(com.intellij.openapi.project.Project)");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a02a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSEditOperner.editNode()";
    }
    public String getAdditionalInfo(){
      return "MPSEditOperner.editNode()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.workbench.editors.MPSEditorOpener.editNode(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IOperationContext):jetbrains.mps.ide.IEditor");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0v0a().createNode(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSEditOperner.openNodeExplicitly()";
    }
    public String getAdditionalInfo(){
      return "MPSEditOperner.openNodeExplicitly()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.workbench.editors.MPSEditorOpener.openNodeExplicitly(jetbrains.mps.smodel.SNode,jetbrains.mps.smodel.IOperationContext,boolean,boolean):jetbrains.mps.ide.IEditor");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0w0a().createNode(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSDataKeys.MPS_PROJECT";
    }
    public String getAdditionalInfo(){
      return "MPSDataKeys.MPS_PROJECT";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration","key")),"jetbrains.mps.workbench.MPSDataKeys.MPS_PROJECT");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a32a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSDataKeys.MPS_PROJECT";
    }
    public String getAdditionalInfo(){
      return "MPSDataKeys.MPS_PROJECT";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldReference","staticFieldDeclaration")),"jetbrains.mps.workbench.MPSDataKeys.MPS_PROJECT");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceNode(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a42a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSDataKeys.NODE";
    }
    public String getAdditionalInfo(){
      return "MPSDataKeys.NODE";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration","key")),"jetbrains.mps.workbench.MPSDataKeys.NODE");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a52a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSDataKeys.NODES";
    }
    public String getAdditionalInfo(){
      return "MPSDataKeys.NODES";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration","key")),"jetbrains.mps.workbench.MPSDataKeys.NODES");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a62a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSDataKeys.MODEL";
    }
    public String getAdditionalInfo(){
      return "MPSDataKeys.MODEL";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration","key")),"jetbrains.mps.workbench.MPSDataKeys.MODEL");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a72a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSDataKeys.MODELS";
    }
    public String getAdditionalInfo(){
      return "MPSDataKeys.MODELS";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration","key")),"jetbrains.mps.workbench.MPSDataKeys.MODELS");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a82a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSDataKeys.CONTEXT_MODEL";
    }
    public String getAdditionalInfo(){
      return "MPSDataKeys.CONTEXT_MODEL";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration","key")),"jetbrains.mps.workbench.MPSDataKeys.CONTEXT_MODEL");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a92a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSDataKeys.MODULE";
    }
    public String getAdditionalInfo(){
      return "MPSDataKeys.MODULE";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration","key")),"jetbrains.mps.workbench.MPSDataKeys.MODULE");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a03a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSDataKeys.CONTEXT_MODULE";
    }
    public String getAdditionalInfo(){
      return "MPSDataKeys.CONTEXT_MODULE";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration","key")),"jetbrains.mps.workbench.MPSDataKeys.CONTEXT_MODULE");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a13a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSDataKeys.OPERATION_CONTEXT";
    }
    public String getAdditionalInfo(){
      return "MPSDataKeys.OPERATION_CONTEXT";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration","key")),"jetbrains.mps.workbench.MPSDataKeys.OPERATION_CONTEXT");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a23a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSDataKeys.EDITOR_CONTEXT";
    }
    public String getAdditionalInfo(){
      return "MPSDataKeys.EDITOR_CONTEXT";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration","key")),"jetbrains.mps.workbench.MPSDataKeys.EDITOR_CONTEXT");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a33a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSDataKeys.EDITOR_CELL";
    }
    public String getAdditionalInfo(){
      return "MPSDataKeys.EDITOR_CELL";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration","key")),"jetbrains.mps.workbench.MPSDataKeys.EDITOR_CELL");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a43a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSDataKeys.EDITOR_CREATE_GROUP";
    }
    public String getAdditionalInfo(){
      return "MPSDataKeys.EDITOR_CREATE_GROUP";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration","key")),"jetbrains.mps.workbench.MPSDataKeys.EDITOR_CREATE_GROUP");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a53a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSDataKeys.MPS_EDITOR";
    }
    public String getAdditionalInfo(){
      return "MPSDataKeys.MPS_EDITOR";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration","key")),"jetbrains.mps.workbench.MPSDataKeys.MPS_EDITOR");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a63a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSDataKeys.FRAME";
    }
    public String getAdditionalInfo(){
      return "MPSDataKeys.FRAME";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration","key")),"jetbrains.mps.workbench.MPSDataKeys.FRAME");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a73a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSDataKeys.SCOPE";
    }
    public String getAdditionalInfo(){
      return "MPSDataKeys.SCOPE";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration","key")),"jetbrains.mps.workbench.MPSDataKeys.SCOPE");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a83a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSDataKeys.EDITOR_COMPONENT";
    }
    public String getAdditionalInfo(){
      return "MPSDataKeys.EDITOR_COMPONENT";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration","key")),"jetbrains.mps.workbench.MPSDataKeys.EDITOR_COMPONENT");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a93a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSDataKeys.PLACE";
    }
    public String getAdditionalInfo(){
      return "MPSDataKeys.PLACE";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration","key")),"jetbrains.mps.workbench.MPSDataKeys.PLACE");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a04a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "NodeNavigationItem constructor";
    }
    public String getAdditionalInfo(){
      return "NodeNavigationItem constructor";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return ReferenceUtil.isReferenceToModel(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration")),"jetbrains.mps.baseLanguage.plugin") && (int)ListSequence.fromList(SLinkOperations.getTargets(node,"actualArgument",true)).count() == 3 && "NodeNavigationItem".equals(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration")).getResolveInfo());
    }
    public void doUpdateInstanceNode(    SNode node){
      SNodeOperations.replaceWithAnother(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0a0a0e0a0a0pb0a().createNode(SLinkOperations.getTargets(node,"actualArgument",true).get(2),SLinkOperations.getTargets(node,"actualArgument",true).get(0)));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "NodeNavigationItem reference";
    }
    public String getAdditionalInfo(){
      return "NodeNavigationItem reference";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return ReferenceUtil.isReferenceToModel(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType","classifier")),"jetbrains.mps.baseLanguage.plugin") && "NodeNavigationItem".equals(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType","classifier")).getResolveInfo());
    }
    public void doUpdateInstanceNode(    SNode node){
      String resolveInfo=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType","classifier")).getResolveInfo();
      if ("NodeNavigationItem".equals(resolveInfo)) {
        SNodeOperations.replaceWithAnother(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0a0a0b0e0a0a0qb0a().createNode());
      }
 else       if ("AbstractLeftEditorHighlighterMessage".equals(resolveInfo)) {
        SNodeOperations.replaceWithAnother(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0a0a0a1a4a0a0a24a0().createNode());
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "References to baseLanguage.plugin";
    }
    public String getAdditionalInfo(){
      return "References to baseLanguage.plugin";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.core.structure.BaseConcept";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return Sequence.fromIterable(SNodeOperations.getReferences(node)).any(new IWhereFilter<SReference>(){
        public boolean accept(        SReference it){
          return ReferenceUtil.isReferenceToModel(it,"jetbrains.mps.baseLanguage.plugin") && it.getTargetNodeSilently() == null;
        }
      }
);
    }
    public void doUpdateInstanceNode(    SNode node){
      SModelReference[] modelRefs=new SModelReference[]{new SModelReference("jetbrains.mps.editor.runtime",""),new SModelReference("jetbrains.mps.baseLanguage.util",""),new SModelReference("jetbrains.mps.ide.editor.util","")};
      IModule module=SNodeOperations.getModel(node).getModelDescriptor().getModule();
      for (      SModelReference modelRef : modelRefs) {
        SNodeOperations.getModel(node).addModelImport(modelRef,false);
        ModuleReference moduleReference=SModelRepository.getInstance().getModelDescriptor(modelRef).getModule().getModuleReference();
        module.addDependency(moduleReference,false);
      }
      for (      SReference ref : SNodeOperations.getReferences(node)) {
        if (!(ReferenceUtil.isReferenceToModel(ref,"jetbrains.mps.baseLanguage.plugin"))) {
          continue;
        }
        if (ref.getTargetNode() != null) {
          continue;
        }
        Resolver.resolve1(ref,new ModuleOperationContext(module));
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "NodeNavigationItem getNode()";
    }
    public String getAdditionalInfo(){
      return "NodeNavigationItem getNode()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.DotExpression";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      if (!(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"))) {
        return false;
      }
      SNode operation=SNodeOperations.cast(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation");
      SReference reference=SNodeOperations.getReference(operation,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation","instanceMethodDeclaration"));
      if (reference.getTargetNodeSilently() != null) {
        return false;
      }
      return ReferenceUtil.isReferenceToModel(reference,"jetbrains.mps.baseLanguage.plugin") && "getNode".equals(reference.getResolveInfo());
    }
    public void doUpdateInstanceNode(    SNode node){
      NodeNavigatable n=null;
      SNodeOperations.replaceWithAnother(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0a0b0e0a0a0sb0a().createNode(SLinkOperations.getTarget(node,"operand",true)));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "EditorUtil.createSelectIconButton";
    }
    public String getAdditionalInfo(){
      return "EditorUtil.createSelectIconButton";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isStaticMethodCall(node,SModelReference.fromString("r:3443ab09-ba5b-43e2-8ded-bbcc098418a4(jetbrains.mps.ide)"),"5431388913640420462","5431388913640422688");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a54a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "EditorPopup";
    }
    public String getAdditionalInfo(){
      return "EditorPopup";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ModificationStatement";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceTo(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.plugin.structure.ModificationStatement","modifiedGroup")),SModelReference.fromString("r:00000000-0000-4000-0000-011c895904a4(jetbrains.mps.ide.actions)"),SNodeId.fromString("1204991231476"));
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a64a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Code";
    }
    public String getAdditionalInfo(){
      return "Code";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ModificationStatement";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceTo(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.plugin.structure.ModificationStatement","modifiedGroup")),SModelReference.fromString("r:00000000-0000-4000-0000-011c895904a4(jetbrains.mps.ide.actions)"),SNodeId.fromString("796800879946376627"));
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a0a4a0a0a74a0().createNode());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSModuleRepository.getModuleByUID";
    }
    public String getAdditionalInfo(){
      return "MPSModuleRepository.getModuleByUID";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.smodel.MPSModuleRepository.getModuleByUID(java.lang.String):jetbrains.mps.project.IModule");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a0b0a0e0a0a0wb0a().createNode(),"operation",true));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSModuleRepository.getDevKit()";
    }
    public String getAdditionalInfo(){
      return "MPSModuleRepository.getDevKit()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.DotExpression";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(SNodeOperations.as(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"jetbrains.mps.smodel.MPSModuleRepository.getDevKit(jetbrains.mps.project.structure.modules.ModuleReference):jetbrains.mps.project.DevKit");
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode arg=SNodeOperations.copyNode(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first());
      StubRefUtil.replaceNode(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a1a4a0a0a94a0().createNode(arg));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSModuleRepository.getLanguage()";
    }
    public String getAdditionalInfo(){
      return "MPSModuleRepository.getLanguage()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.DotExpression";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(SNodeOperations.as(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"jetbrains.mps.smodel.MPSModuleRepository.getLanguage(jetbrains.mps.project.structure.modules.ModuleReference):jetbrains.mps.smodel.Language");
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode arg=SNodeOperations.copyNode(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first());
      StubRefUtil.replaceNode(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a1a4a0a0a05a0().createNode(arg));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSModuleRepository.getSolution()";
    }
    public String getAdditionalInfo(){
      return "MPSModuleRepository.getSolution()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.DotExpression";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(SNodeOperations.as(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"jetbrains.mps.smodel.MPSModuleRepository.getSolution(jetbrains.mps.project.structure.modules.ModuleReference):jetbrains.mps.project.Solution");
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode arg=SNodeOperations.copyNode(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first());
      StubRefUtil.replaceNode(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a1a4a0a0a15a0().createNode(arg));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSModuleRepository.getSolution()";
    }
    public String getAdditionalInfo(){
      return "MPSModuleRepository.getSolution()";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.DotExpression";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(SNodeOperations.as(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"jetbrains.mps.smodel.MPSModuleRepository.getSolution(java.lang.String):jetbrains.mps.project.Solution");
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode arg=SNodeOperations.copyNode(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(node,"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first());
      StubRefUtil.replaceNode(node,new Mps25ApiMigration_MigrationScript.QuotationClass_dibvm8_a1a1a4a0a0a25a0().createNode(arg));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ToolDeclaration init block rename";
    }
    public String getAdditionalInfo(){
      return "ToolDeclaration init block rename";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ToolDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return node.getChild("initBlock") != null;
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode init=node.getChild("initBlock");
      if (init != null && SLinkOperations.getTarget(node,"toolInitBlock",true) == null) {
        SLinkOperations.setTarget(node,"toolInitBlock",SConceptOperations.createNewNode("jetbrains.mps.lang.plugin.structure.InitBlock",null),true);
        SLinkOperations.setTarget(SLinkOperations.getTarget(node,"toolInitBlock",true),"body",(SNode)init.getChild("body"),true);
        node.removeChild(init);
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ToolDeclaration dispose block rename";
    }
    public String getAdditionalInfo(){
      return "ToolDeclaration dispose block rename";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ToolDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return node.getChild("disposeBlock") != null;
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode dispose=node.getChild("disposeBlock");
      if (dispose != null && SLinkOperations.getTarget(node,"toolDisposeBlock",true) == null) {
        SLinkOperations.setTarget(node,"toolDisposeBlock",SConceptOperations.createNewNode("jetbrains.mps.lang.plugin.structure.DisposeBlock",null),true);
        SLinkOperations.setTarget(SLinkOperations.getTarget(node,"toolDisposeBlock",true),"body",(SNode)dispose.getChild("body"),true);
        node.removeChild(dispose);
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
