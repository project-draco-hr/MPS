{
  HashMap<String,INodePropertyGetter> result=new HashMap<String,INodePropertyGetter>();
  result.put("name",new BaseNodePropertyGetter(){
    public Object execPropertyGet(    SNode node,    String propertyName,    IScope scope){
      return SPropertyOperations.getString(SNodeOperations.as(SNodeOperations.getParent(node),"jetbrains.mps.lang.core.structure.INamedConcept"),"name");
    }
  }
);
  result.put("nestedName",new BaseNodePropertyGetter(){
    public Object execPropertyGet(    SNode node,    String propertyName,    IScope scope){
      return SPropertyOperations.getString(SNodeOperations.getAncestor(node,"jetbrains.mps.baseLanguage.structure.Classifier",false,false),"nestedName");
    }
  }
);
  result.put("resolveInfo",new BaseNodePropertyGetter(){
    public Object execPropertyGet(    SNode node,    String propertyName,    IScope scope){
      return SPropertyOperations.getString(SNodeOperations.as(SNodeOperations.getParent(node),"jetbrains.mps.lang.core.structure.IResolveInfo"),"resolveInfo");
    }
  }
);
  return result;
}
