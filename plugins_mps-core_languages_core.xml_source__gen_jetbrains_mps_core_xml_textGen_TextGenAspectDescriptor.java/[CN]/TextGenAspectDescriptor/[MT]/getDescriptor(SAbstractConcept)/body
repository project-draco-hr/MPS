{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_t8hmqt_a0c.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return new XmlAttribute_TextGen();
      }
    break;
case 1:
  if (true) {
    return new XmlCDATA_TextGen();
  }
break;
case 2:
if (true) {
return new XmlCharRef_TextGen();
}
break;
case 3:
if (true) {
return new XmlCharRefValue_TextGen();
}
break;
case 4:
if (true) {
return new XmlComment_TextGen();
}
break;
case 5:
if (true) {
return new XmlCommentLine_TextGen();
}
break;
case 6:
if (true) {
return new XmlDeclaration_TextGen();
}
break;
case 7:
if (true) {
return new XmlDoctypeDeclaration_TextGen();
}
break;
case 8:
if (true) {
return new XmlDocument_TextGen();
}
break;
case 9:
if (true) {
return new XmlElement_TextGen();
}
break;
case 10:
if (true) {
return new XmlEntityRef_TextGen();
}
break;
case 11:
if (true) {
return new XmlEntityRefValue_TextGen();
}
break;
case 12:
if (true) {
return new XmlExternalId_TextGen();
}
break;
case 13:
if (true) {
return new XmlFile_TextGen();
}
break;
case 14:
if (true) {
return new XmlNoSpaceValue_TextGen();
}
break;
case 15:
if (true) {
return new XmlProcessingInstruction_TextGen();
}
break;
case 16:
if (true) {
return new XmlProlog_TextGen();
}
break;
case 17:
if (true) {
return new XmlText_TextGen();
}
break;
case 18:
if (true) {
return new XmlTextValue_TextGen();
}
break;
case 19:
if (true) {
return new XmlWhitespace_TextGen();
}
break;
default :
}
}
return null;
}
