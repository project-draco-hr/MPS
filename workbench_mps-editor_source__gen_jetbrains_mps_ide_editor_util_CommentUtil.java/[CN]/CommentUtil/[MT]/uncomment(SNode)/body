{
  SNode parent=SNodeOperations.getParent(attribute);
  if (parent == null) {
    throw new IllegalStateException("Node to comment has no parent. Node: " + BehaviorReflection.invokeVirtual(String.class,attribute,"virtual_getPresentation_1213877396640",new Object[]{}) + " Node id: "+ attribute.getNodeId());
  }
  SContainmentLink containmentLink=BehaviorReflection.invokeNonVirtual(SContainmentLink.class,attribute,"jetbrains.mps.lang.core.structure.ChildAttribute","call_getLink_709746936026609871",new Object[]{});
  SNode commentedNode=SLinkOperations.getTarget(attribute,MetaAdapterFactory.getContainmentLink(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x3dcc194340c24debL,0x2ab99f0d2248e89dL,"commentedNode"));
  if (containmentLink != null) {
    attribute.removeChild(commentedNode);
    if (!(containmentLink.isMultiple())) {
      SNode currentChild=ListSequence.fromList(SNodeOperations.getChildren(parent,containmentLink)).first();
      if ((currentChild != null)) {
        CommentUtil.commentOut(currentChild);
      }
    }
    SNode prev=CommentUtil.getPrevious(parent,attribute,containmentLink);
    SNode next=CommentUtil.getNext(parent,attribute,containmentLink);
    parent.removeChild(attribute);
    if (prev != null) {
      parent.insertChildAfter(containmentLink,commentedNode,prev);
    }
 else     if (next != null) {
      parent.insertChildBefore(containmentLink,commentedNode,next);
    }
 else {
      parent.addChild(containmentLink,commentedNode);
    }
  }
  SNodeOperations.deleteNode(attribute);
}
