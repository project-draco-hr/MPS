{
  final zClosureContext _zClosureContext=new zClosureContext();
  List<SNode> treePathAspects=new ArrayList<SNode>();
  _zClosureContext.expType=TypeChecker.getInstance().getTypeOf(expression);
  if ((_zClosureContext.expType != null)) {
    SNode sequencetype=TypeUtil_Collections.coerceTo_SequenceType(_zClosureContext.expType);
    if (sequencetype != null && !(SNodeOperations.isInstanceOf(_zClosureContext.expType,"jetbrains.mps.bootstrap.smodelLanguage.structure.SNodeType"))) {
      _zClosureContext.expType=SLinkOperations.getTarget(sequencetype,"elementType",true);
    }
    SNode concept=(SNode)SConceptOperations.findConceptDeclaration("jetbrains.mps.ypath.structure.TreePathAspect");
    Iterable<SNode> instances=SModelOperations.getRootsIncludingImported(SNodeOperations.getModel(expression),scope,"jetbrains.mps.ypath.structure.TreePathAspect");
    ListOperations.addAllElements(treePathAspects,SequenceOperations.where(instances,new zPredicate(null,_zClosureContext)));
  }
  return treePathAspects;
}
