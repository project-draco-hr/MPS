{
  CellProviderWithRole provider=new RefCellCellProvider(node,editorContext);
  provider.setRole("propertyDeclaration");
  provider.setNoTargetText("<choose property declaration>");
  EditorCell editorCell;
  provider.setAuxiliaryCellProvider(new CellModel_ConceptProperty_Editor._Inline_rbbf37_a1a());
  editorCell=provider.createEditorCell(editorContext);
{
    Style style=editorCell.getStyle();
    style.set(StyleAttributes.DRAW_BORDER,true);
    style.set(StyleAttributes.TEXT_BACKGROUND_COLOR,CellModel_ConceptProperty_Editor._StyleParameter_QueryFunction_rbbf37_a1b0((editorCell == null ? null : editorCell.getSNode()),(editorCell == null ? null : editorCell.getContext())));
    style.set(StyleAttributes.BACKGROUND_COLOR,CellModel_ConceptProperty_Editor._StyleParameter_QueryFunction_rbbf37_a2b0((editorCell == null ? null : editorCell.getSNode()),(editorCell == null ? null : editorCell.getContext())));
    style.set(StyleAttributes.TEXT_COLOR,CellModel_ConceptProperty_Editor._StyleParameter_QueryFunction_rbbf37_a3b0((editorCell == null ? null : editorCell.getSNode()),(editorCell == null ? null : editorCell.getContext())));
    style.set(StyleAttributes.FONT_STYLE,CellModel_ConceptProperty_Editor._StyleParameter_QueryFunction_rbbf37_a4b0((editorCell == null ? null : editorCell.getSNode()),(editorCell == null ? null : editorCell.getContext())));
    style.set(StyleAttributes.UNDERLINED,CellModel_ConceptProperty_Editor._StyleParameter_QueryFunction_rbbf37_a5b0((editorCell == null ? null : editorCell.getSNode()),(editorCell == null ? null : editorCell.getContext())));
    style.set(StyleAttributes.STRIKE_OUT,CellModel_ConceptProperty_Editor._StyleParameter_QueryFunction_rbbf37_a6b0((editorCell == null ? null : editorCell.getSNode()),(editorCell == null ? null : editorCell.getContext())));
  }
  editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
  SNode attributeConcept=provider.getRoleAttribute();
  Class attributeKind=provider.getRoleAttributeClass();
  if (attributeConcept != null) {
    IOperationContext opContext=editorContext.getOperationContext();
    EditorManager manager=EditorManager.getInstanceFromContext(opContext);
    return manager.createRoleAttributeCell(editorContext,attributeConcept,attributeKind,editorCell);
  }
 else   return editorCell;
}
