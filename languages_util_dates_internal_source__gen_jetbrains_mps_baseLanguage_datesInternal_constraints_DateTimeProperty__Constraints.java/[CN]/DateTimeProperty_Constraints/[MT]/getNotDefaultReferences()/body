{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("jodaPeriodType",new BaseReferenceConstraintsDescriptor("jodaPeriodType",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return new ClassifierVisibleStaticMembersScope((SNode)JavaModelUtil_new.findClassifier(Period.class),_context.getEnclosingNode(),IClassifiersSearchScope.STATIC_METHOD);
        }
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_hi7gxv_a0a1a0a0a1a0b0a1a0;
        }
      }
;
    }
  }
);
  references.put("jodaDateTimeFieldType",new BaseReferenceConstraintsDescriptor("jodaDateTimeFieldType",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return new ClassifierVisibleStaticMembersScope((SNode)JavaModelUtil_new.findClassifier(DateTimeFieldType.class),_context.getEnclosingNode(),IClassifiersSearchScope.STATIC_METHOD);
        }
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_hi7gxv_a0a1a0a0a1a0b0a2a0;
        }
      }
;
    }
  }
);
  references.put("periodFormatMethod",new BaseReferenceConstraintsDescriptor("periodFormatMethod",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          SNode ct=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ClassifierType",null);
          SLinkOperations.setTarget(ct,"classifier",(SNode)JavaModelUtil_new.findClassifier(PeriodFormatterBuilder.class),false);
          return new ClassifierVisibleMembersScope(ct,_context.getEnclosingNode(),IClassifiersSearchScope.INSTANCE_METHOD);
        }
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_hi7gxv_a0a1a0a0a1a0b0a3a0;
        }
      }
;
    }
  }
);
  return references;
}
