{
  this.vars=ListSequence.fromListWithValues(new ArrayList(),Sequence.fromIterable(vars).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (it != null) && SNodeOperations.isInstanceOf(it,NameUtil.nodeFQName(kind));
    }
  }
));
  this.parentScope=parentScope;
  this.names=SetSequence.fromSetWithValues(new HashSet(),Sequence.fromIterable(vars).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (it != null);
    }
  }
).select(new ISelector<SNode,String>(){
    public String select(    SNode it){
      return SPropertyOperations.getString(it,"name");
    }
  }
));
}
