{
  List<SNode> result=ListSequence.fromList(new ArrayList());
  if (prefix == null) {
    ListSequence.fromList(result).addSequence(Sequence.fromIterable(MapSequence.fromMap(vars).values()));
  }
 else {
    ListSequence.fromList(result).addSequence(SetSequence.fromSet(MapSequence.fromMap(vars).keySet()).where(new IWhereFilter<String>(){
      public boolean accept(      String it){
        return it.startsWith(prefix);
      }
    }
).select(new ISelector<String,SNode>(){
      public SNode select(      String it){
        return MapSequence.fromMap(vars).get(it);
      }
    }
));
  }
  if (parentScope != null) {
    ListSequence.fromList(result).addSequence(ListSequence.fromList(parentScope.getAvailableElements(prefix)).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return !(SNodeOperations.isInstanceOf(it,"jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration")) || !(SetSequence.fromSet(names).contains(SPropertyOperations.getString(SNodeOperations.cast(it,"jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration"),"name")));
      }
    }
));
  }
  return result;
}
