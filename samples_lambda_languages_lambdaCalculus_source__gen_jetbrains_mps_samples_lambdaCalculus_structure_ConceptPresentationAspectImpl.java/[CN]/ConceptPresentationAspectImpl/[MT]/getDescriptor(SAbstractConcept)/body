{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case LanguageConceptSwitch.AbstractionVarRef:
    return props_AbstractionVarRef;
case LanguageConceptSwitch.AbstractionVariable:
  return props_AbstractionVariable;
case LanguageConceptSwitch.AddOperation:
return props_AddOperation;
case LanguageConceptSwitch.BinaryNumericOperation:
return props_BinaryNumericOperation;
case LanguageConceptSwitch.BinaryOperation:
return props_BinaryOperation;
case LanguageConceptSwitch.BinaryStringOperation:
return props_BinaryStringOperation;
case LanguageConceptSwitch.ConcatenateOperation:
return props_ConcatenateOperation;
case LanguageConceptSwitch.DivideOperation:
return props_DivideOperation;
case LanguageConceptSwitch.FunctionType:
return props_FunctionType;
case LanguageConceptSwitch.LambdaAbstraction:
return props_LambdaAbstraction;
case LanguageConceptSwitch.LambdaApplication:
return props_LambdaApplication;
case LanguageConceptSwitch.LambdaExpression:
return props_LambdaExpression;
case LanguageConceptSwitch.LambdaType:
return props_LambdaType;
case LanguageConceptSwitch.LetExpression:
return props_LetExpression;
case LanguageConceptSwitch.LetRef:
return props_LetRef;
case LanguageConceptSwitch.LetVariable:
return props_LetVariable;
case LanguageConceptSwitch.MultipleExpression:
return props_MultipleExpression;
case LanguageConceptSwitch.MultiplyOperation:
return props_MultiplyOperation;
case LanguageConceptSwitch.NumberType:
return props_NumberType;
case LanguageConceptSwitch.NumericConstant:
return props_NumericConstant;
case LanguageConceptSwitch.ParenthesisExpression:
return props_ParenthesisExpression;
case LanguageConceptSwitch.Program:
return props_Program;
case LanguageConceptSwitch.StringConstant:
return props_StringConstant;
case LanguageConceptSwitch.StringType:
return props_StringType;
case LanguageConceptSwitch.SubtractOperation:
return props_SubtractOperation;
case LanguageConceptSwitch.Variable:
return props_Variable;
case LanguageConceptSwitch.VariableOwner:
return props_VariableOwner;
case LanguageConceptSwitch.VariableReference:
return props_VariableReference;
}
return null;
}
