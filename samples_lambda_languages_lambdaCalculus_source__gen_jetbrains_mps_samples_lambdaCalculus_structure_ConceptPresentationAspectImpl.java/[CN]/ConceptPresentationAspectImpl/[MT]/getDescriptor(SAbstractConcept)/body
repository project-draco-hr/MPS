{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case 0:
    return props_AbstractionVarRef;
case 1:
  return props_AbstractionVariable;
case 2:
return props_AddOperation;
case 3:
return props_BinaryNumericOperation;
case 4:
return props_BinaryOperation;
case 5:
return props_BinaryStringOperation;
case 6:
return props_ConcatenateOperation;
case 7:
return props_DivideOperation;
case 8:
return props_FunctionType;
case 9:
return props_LambdaAbstraction;
case 10:
return props_LambdaApplication;
case 11:
return props_LambdaExpression;
case 12:
return props_LambdaType;
case 13:
return props_LetExpression;
case 14:
return props_LetRef;
case 15:
return props_LetVariable;
case 16:
return props_MultipleExpression;
case 17:
return props_MultiplyOperation;
case 18:
return props_NumberType;
case 19:
return props_NumericConstant;
case 20:
return props_ParenthesisExpression;
case 21:
return props_Program;
case 22:
return props_StringConstant;
case 23:
return props_StringType;
case 24:
return props_SubtractOperation;
case 25:
return props_Variable;
case 26:
return props_VariableOwner;
case 27:
return props_VariableReference;
}
throw new IllegalStateException("Unknown concept " + c);
}
