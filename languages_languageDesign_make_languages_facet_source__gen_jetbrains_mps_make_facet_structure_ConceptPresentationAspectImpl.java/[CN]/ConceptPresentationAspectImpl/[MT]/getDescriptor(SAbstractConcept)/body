{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)LanguageRegistry.getInstance().getLanguage(MetaAdapterFactory.getLanguage(SLanguageId.deserialize("696c1165-4a59-463b-bc5d-902caab85dd0"),"jetbrains.mps.make.facet")).getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case 0:
    return props_ExtendsFacetReference;
case 1:
  return props_FacetDeclaration;
case 2:
return props_FacetJavaClassExpression;
case 3:
return props_FacetReference;
case 4:
return props_FacetReferenceExpression;
case 5:
return props_ForeignParametersComponentExpression;
case 6:
return props_ForeignParametersExpression;
case 7:
return props_IFacet;
case 8:
return props_IPropertyExpression;
case 9:
return props_LocalParametersComponentExpression;
case 10:
return props_LocalParametersExpression;
case 11:
return props_NamedFacetReference;
case 12:
return props_ParametersDeclaration;
case 13:
return props_RelatedFacetReference;
case 14:
return props_ResourceClassifierType;
case 15:
return props_ResourceSpecificPropertiesExpression;
case 16:
return props_ResourceTypeDeclaration;
case 17:
return props_TargetDeclaration;
case 18:
return props_TargetDependency;
case 19:
return props_TargetReferenceExpression;
}
throw new IllegalStateException();
}
