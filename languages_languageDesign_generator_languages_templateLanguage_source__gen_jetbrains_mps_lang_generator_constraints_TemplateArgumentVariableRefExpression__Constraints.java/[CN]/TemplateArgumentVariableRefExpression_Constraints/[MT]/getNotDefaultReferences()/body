{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("varmacro",new BaseReferenceConstraintsDescriptor("varmacro",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          SNode contextNode=(_context.getReferenceNode() == null ? _context.getEnclosingNode() : _context.getReferenceNode());
          List<SNode> vars=new ArrayList<SNode>();
          while ((contextNode != null)) {
            SNode nextNode=null;
            if (SNodeOperations.isInstanceOf(contextNode,"jetbrains.mps.lang.generator.structure.VarMacro")) {
              ListSequence.fromList(vars).addElement(SNodeOperations.cast(contextNode,"jetbrains.mps.lang.generator.structure.VarMacro"));
              nextNode=SNodeOperations.getPrevSibling(contextNode);
            }
            if (nextNode == null && "smodelAttribute".equals(SNodeOperations.getContainingLinkRole(contextNode))) {
              nextNode=SNodeOperations.getPrevSibling(contextNode);
              if (nextNode == null) {
                contextNode=SNodeOperations.getParent(contextNode);
              }
            }
            if (nextNode == null) {
              SNode parentWithAttrs=SNodeOperations.getParent(contextNode);
              while (parentWithAttrs != null) {
                SNode lastAttr=ListSequence.fromList(SLinkOperations.getTargets(parentWithAttrs,"smodelAttribute",true)).last();
                if (lastAttr != null) {
                  nextNode=lastAttr;
                  break;
                }
                parentWithAttrs=SNodeOperations.getParent(parentWithAttrs);
              }
            }
            contextNode=nextNode;
          }
          return vars;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_k799s7_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
