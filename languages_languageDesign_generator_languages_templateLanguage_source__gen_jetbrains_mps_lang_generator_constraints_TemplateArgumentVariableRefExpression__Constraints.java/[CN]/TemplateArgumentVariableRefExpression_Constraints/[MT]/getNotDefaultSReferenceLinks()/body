{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(0xb401a68083254110L,0x8fd384331ff25befL,0x3d6f2506d88aa028L,0x25c655ce6e80fddaL),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xb401a68083254110L,0x8fd384331ff25befL,0x3d6f2506d88aa028L,0x25c655ce6e80fddaL),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public boolean hasPresentation(){
          return true;
        }
        @Override public String getPresentation(        final IOperationContext operationContext,        final ReferencePresentationContext _context){
          return SPropertyOperations.getString(_context.getParameterNode(),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_k799s7_a0a2a0a0a1a0b0a1a1;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
{
            Scope scope=Scope.getScope(_context.getContextNode(),_context.getContextRole(),_context.getPosition(),SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902e8(jetbrains.mps.lang.generator.structure)","5015072279636464462"));
            return (scope == null ? new EmptyScope() : scope);
          }
        }
      }
;
    }
  }
);
  return references;
}
