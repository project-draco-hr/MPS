{
  SNode parent=SNodeOperations.getParent(op);
  do {
    SNode matchedNode_0=parent;
{
      boolean matches_0=false;
{
        SNode matchingNode_0=parent;
        if (matchingNode_0 != null) {
          matches_0=SModelUtil_new.isAssignableConcept(matchingNode_0.getConceptFqName(),"jetbrains.mps.ypath.structure.TreePathOperationExpression");
        }
      }
      if (matches_0) {
{
          SNode _nodeToCheck_1029348928467=op;
          BaseIntentionProvider intentionProvider=null;
          typeCheckingContext.createEquation((SNode)typeCheckingContext.typeOf(op,"r:00000000-0000-4000-0000-011c895905aa(jetbrains.mps.ypath.typesystem)","1178551167102",true),(SNode)typeCheckingContext.typeOf(matchedNode_0,"r:00000000-0000-4000-0000-011c895905aa(jetbrains.mps.ypath.typesystem)","1178551167104",true),_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895905aa(jetbrains.mps.ypath.typesystem)","1178551167101",intentionProvider);
        }
        break;
      }
    }
{
      BaseIntentionProvider intentionProvider=null;
      IErrorTarget errorTarget=new NodeErrorTarget();
      typeCheckingContext.reportTypeError(op,"Error in model structure: wrong parent type","r:00000000-0000-4000-0000-011c895905aa(jetbrains.mps.ypath.typesystem)","1190288908359",intentionProvider,errorTarget);
    }
  }
 while (false);
}
