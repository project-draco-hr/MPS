{
  super("Migrate Test-Related NodePropertiesContainer to NodeOperationsContainer");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Migrate Test-Related NodePropertiesContainer to NodeOperationsContainer";
    }
    public String getAdditionalInfo(){
      return "Migrate Test-Related NodePropertiesContainer to NodeOperationsContainer";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.test.structure.NodePropertiesContainer";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return true;
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode parent=SNodeOperations.getParent(node);
      SNode newAnnotation=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L,0x98deb16074f1d86cL,0x11b07a3d4b5L,"jetbrains.mps.lang.test.structure.NodeOperationsContainer")));
      ListSequence.fromList(SLinkOperations.getChildren(newAnnotation,MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L,0x98deb16074f1d86cL,0x11b07a3d4b5L,0x11b07abae7cL,"nodeOperations"))).addSequence(ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(0x8585453e6bfb4d80L,0x98deb16074f1d86cL,0x11b01e50b53L,0x11b01eac99fL,"nodeCheckOperations"))));
      AttributeOperations.setAttribute(parent,new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L,0x98deb16074f1d86cL,0x11b07a3d4b5L,"jetbrains.mps.lang.test.structure.NodeOperationsContainer")),newAnnotation);
      AttributeOperations.setAttribute(parent,new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L,0x98deb16074f1d86cL,0x11b01e50b53L,"jetbrains.mps.lang.test.structure.NodePropertiesContainer")),null);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
