{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)LanguageRegistry.getInstance().getLanguage(MetaAdapterFactory.getLanguage(SLanguageId.deserialize("fbc14279-5e2a-4c87-a5d1-5f7061e6c456"),"jetbrains.mps.debugger.api.lang")).getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case 0:
    return props_BreakpointCreator;
case 1:
  return props_BreakpointableNodeItem;
case 2:
return props_ConceptDeclarationReference;
case 3:
return props_ConceptFunctionParameter_Concept;
case 4:
return props_ConceptFunctionParameter_Debug_Project;
case 5:
return props_ConceptFunctionParameter_DebuggableNode;
case 6:
return props_ConceptFunction_CreateBreakpoint;
case 7:
return props_ConceptFunction_IsApplicableBreakpoint;
case 8:
return props_CreateBreakpointOperation;
case 9:
return props_DebuggerConfiguration;
case 10:
return props_DebuggerReference;
case 11:
return props_DebuggerType;
case 12:
return props_GetDebuggerSettings_Function;
}
throw new IllegalStateException();
}
