{
  final Map<RefactoringPart,Iterable<SNodeReference>> affectedNodes=MapSequence.fromMap(new HashMap<RefactoringPart,Iterable<SNodeReference>>());
  for (  RefactoringPart part : ListSequence.fromList(myParts)) {
    MapSequence.fromMap(affectedNodes).put(part,part.getAffectedNodes(project.getScope(),project.getRepository()));
  }
  return new Runnable(){
    public void run(){
      for (      RefactoringPart part : ListSequence.fromList(myParts)) {
        part.execute(Sequence.fromIterable(MapSequence.fromMap(affectedNodes).get(part)).select(new ISelector<SNodeReference,SNode>(){
          public SNode select(          SNodeReference it){
            return it.resolve(project.getRepository());
          }
        }
));
      }
    }
  }
;
}
