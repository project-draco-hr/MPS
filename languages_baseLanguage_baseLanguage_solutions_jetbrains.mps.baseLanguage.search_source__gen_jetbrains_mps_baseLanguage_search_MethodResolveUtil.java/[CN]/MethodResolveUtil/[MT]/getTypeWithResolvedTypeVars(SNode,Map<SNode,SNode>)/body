{
  if (MapSequence.fromMap(typeByTypeVar).isEmpty()) {
    return type;
  }
  if (SNodeOperations.isInstanceOf(type,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102467229d8L,"jetbrains.mps.baseLanguage.structure.TypeVariableReference"))) {
    return MethodResolveUtil.getTypeByTypeVariable(SNodeOperations.cast(type,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102467229d8L,"jetbrains.mps.baseLanguage.structure.TypeVariableReference")),typeByTypeVar);
  }
 else {
    SNode typeCopy=SNodeOperations.copyNode(type);
    for (    SNode typeVariableRef : ListSequence.fromList(SNodeOperations.getNodeDescendants(typeCopy,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102467229d8L,"jetbrains.mps.baseLanguage.structure.TypeVariableReference"),false,new SAbstractConcept[]{}))) {
      SNode resolvedType=MethodResolveUtil.getTypeByTypeVariable(typeVariableRef,typeByTypeVar);
      if (resolvedType != typeVariableRef) {
        SNodeOperations.replaceWithAnother(typeVariableRef,SNodeOperations.copyNode(resolvedType));
      }
    }
    return typeCopy;
  }
}
