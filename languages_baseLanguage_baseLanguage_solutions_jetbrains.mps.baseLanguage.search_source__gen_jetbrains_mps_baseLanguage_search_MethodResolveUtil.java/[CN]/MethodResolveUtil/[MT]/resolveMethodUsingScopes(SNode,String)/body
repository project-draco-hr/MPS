{
  if (SNodeOperations.getReference(methodCall,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141037l,"baseMethodDeclaration")) == null) {
    return MultiTuple.<SNode,Boolean>from((SNode)null,false);
  }
  Scope scope=ModelConstraints.getScope(SNodeOperations.getReference(methodCall,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141037l,"baseMethodDeclaration")));
  SNode resolvedMethod=SNodeOperations.cast(scope.resolve(methodCall,name),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"));
  if ((resolvedMethod != null)) {
    return MultiTuple.<SNode,Boolean>from(resolvedMethod,true);
  }
 else {
    return resolveMethodByCandidatesAndTypes(methodCall,Sequence.fromIterable(((Iterable<SNode>)scope.getAvailableElements(name))).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return eq_zegw12_a0a0a0a0a1a0a0e0d(SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")),name);
      }
    }
),null);
  }
}
