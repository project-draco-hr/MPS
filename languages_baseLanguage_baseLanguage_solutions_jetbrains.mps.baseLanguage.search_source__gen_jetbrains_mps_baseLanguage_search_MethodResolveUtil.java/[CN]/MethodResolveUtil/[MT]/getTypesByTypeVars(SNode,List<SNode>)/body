{
  Map<SNode,SNode> typeByTypeVar=MapSequence.fromMap(new HashMap<SNode,SNode>());
  for (  IMapping<SNode,SNode> elem : MapSequence.fromMap(ClassifierAndSuperClassifiersCache.getInstance(classifier).getTypeByTypeVariableMap())) {
    typeByTypeVar.put(elem.key(),elem.value());
  }
  Iterator<SNode> typeParms=ListSequence.fromList(typeParameters).iterator();
  for (  SNode typeVar : ListSequence.fromList(SLinkOperations.getChildren(classifier,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1109279851642l,1109279881614l,"typeVariableDeclaration")))) {
    if (!(typeParms.hasNext())) {
      break;
    }
    SNode typeParm=SNodeOperations.as(typeParms.next(),"jetbrains.mps.baseLanguage.structure.Type");
    if ((typeParm == null) || SLinkOperations.getTarget(SNodeOperations.as(typeParm,"jetbrains.mps.baseLanguage.structure.TypeVariableReference"),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1109283449304l,1109283546497l,"typeVariableDeclaration")) == typeVar) {
      continue;
    }
    MapSequence.fromMap(typeByTypeVar).put(typeVar,SNodeOperations.cast(typeParm,"jetbrains.mps.baseLanguage.structure.Type"));
  }
  return typeByTypeVar;
}
