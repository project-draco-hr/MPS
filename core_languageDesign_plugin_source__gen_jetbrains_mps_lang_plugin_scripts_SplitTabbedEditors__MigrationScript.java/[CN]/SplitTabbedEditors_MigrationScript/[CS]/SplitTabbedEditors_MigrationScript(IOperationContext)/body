{
  super("SplitTabbedEditors");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Split tabbed editors";
    }
    public String getAdditionalInfo(){
      return "Split tabbed editors";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.TabbedEditorDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return true;
    }
    public void doUpdateInstanceNode(    SNode node){
      SModel model=SNodeOperations.getModel(node);
      for (      SNode tab : ListSequence.fromList(SLinkOperations.getTargets(node,"tabs",true))) {
        SNodeOperations.detachNode(tab);
        SModelOperations.addRootNode(model,tab);
        SLinkOperations.setTarget(tab,"baseNodeConcept",SLinkOperations.getTarget(node,"mainConcept",false),false);
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
