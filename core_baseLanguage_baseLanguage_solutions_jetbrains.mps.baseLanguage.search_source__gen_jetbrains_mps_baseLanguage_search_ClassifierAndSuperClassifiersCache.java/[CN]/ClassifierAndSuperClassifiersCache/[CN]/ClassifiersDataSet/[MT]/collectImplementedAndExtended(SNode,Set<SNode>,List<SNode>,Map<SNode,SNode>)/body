{
  if ((classifier == null)) {
    return;
  }
  if (SetSequence.<SNode>fromSet(result).contains(classifier)) {
    return;
  }
  SetSequence.fromSet(result).addElement(classifier);
  if (typeParms != null && ListSequence.<SNode>fromList(typeParms).count() > 0) {
    Iterator<SNode> typeVars=ListSequence.<SNode>fromList(SLinkOperations.getTargets(classifier,"typeVariableDeclaration",true)).iterator();
    for (    SNode typeParm : typeParms) {
      if (!(typeVars.hasNext())) {
        break;
      }
      SNode typeVar=typeVars.next();
      MapSequence.<SNode,SNode>fromMap(typeByTypeVar).put(typeVar,typeParm);
    }
  }
  if (SNodeOperations.isInstanceOf(classifier,"jetbrains.mps.baseLanguage.structure.AnonymousClass")) {
    SNode cls=SNodeOperations.cast(classifier,"jetbrains.mps.baseLanguage.structure.AnonymousClass");
    ClassifierAndSuperClassifiersCache.ClassifiersDataSet.collectImplementedAndExtended(SLinkOperations.getTarget(cls,"classifier",false),result,SLinkOperations.getTargets(cls,"typeParameter",true),typeByTypeVar);
  }
 else   if (SNodeOperations.isInstanceOf(classifier,"jetbrains.mps.baseLanguage.structure.ClassConcept")) {
    SNode classifierType0=SLinkOperations.getTarget((SNodeOperations.cast(classifier,"jetbrains.mps.baseLanguage.structure.ClassConcept")),"superclass",true);
    if (classifierType0 != null) {
      ClassifierAndSuperClassifiersCache.ClassifiersDataSet.collectImplementedAndExtended(SLinkOperations.getTarget(classifierType0,"classifier",false),result,SLinkOperations.getTargets(classifierType0,"parameter",true),typeByTypeVar);
    }
    for (    SNode classifierType1 : SLinkOperations.getTargets((SNodeOperations.cast(classifier,"jetbrains.mps.baseLanguage.structure.ClassConcept")),"implementedInterface",true)) {
      ClassifierAndSuperClassifiersCache.ClassifiersDataSet.collectImplementedAndExtended(SLinkOperations.getTarget(classifierType1,"classifier",false),result,SLinkOperations.getTargets(classifierType1,"parameter",true),typeByTypeVar);
    }
    if (SNodeOperations.isInstanceOf(classifier,"jetbrains.mps.baseLanguage.structure.EnumClass")) {
      ClassifierAndSuperClassifiersCache.ClassifiersDataSet.collectImplementedAndExtended(SNodeOperations.getNode("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)","~Enum"),result,null,typeByTypeVar);
    }
  }
 else   if (SNodeOperations.isInstanceOf(classifier,"jetbrains.mps.baseLanguage.structure.Interface")) {
    for (    SNode classifierType : SLinkOperations.getTargets((SNodeOperations.cast(classifier,"jetbrains.mps.baseLanguage.structure.Interface")),"extendedInterface",true)) {
      ClassifierAndSuperClassifiersCache.ClassifiersDataSet.collectImplementedAndExtended(SLinkOperations.getTarget(classifierType,"classifier",false),result,SLinkOperations.getTargets(classifierType,"parameter",true),typeByTypeVar);
    }
  }
}
