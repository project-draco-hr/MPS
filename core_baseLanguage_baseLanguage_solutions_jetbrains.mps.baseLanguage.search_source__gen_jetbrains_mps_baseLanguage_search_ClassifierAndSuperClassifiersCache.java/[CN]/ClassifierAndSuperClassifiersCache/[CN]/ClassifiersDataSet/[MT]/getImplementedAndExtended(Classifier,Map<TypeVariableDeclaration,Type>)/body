{
  Set<Classifier> set=new LinkedHashSet<Classifier>();
  ClassifierAndSuperClassifiersCache.ClassifiersDataSet.collectImplementedAndExtended(classifier,set,null,typeByTypeVar);
  ArrayList<Classifier> result=new ArrayList<Classifier>(set);
  SNode objectClassNode=JavaModelUtil_new.findClassifier("java.lang","Object",true);
  if (objectClassNode != null) {
    Classifier objectClass=(Classifier)objectClassNode.getAdapter();
    if (!(set.contains(objectClass))) {
      int indexOfFirstInterface=0;
      for (      Classifier classifierInResult : set) {
        if (classifierInResult instanceof Interface) {
          break;
        }
        indexOfFirstInterface++;
      }
      if (indexOfFirstInterface == 0) {
        result.add(objectClass);
      }
 else {
        result.add(indexOfFirstInterface,objectClass);
      }
    }
  }
  return result;
}
