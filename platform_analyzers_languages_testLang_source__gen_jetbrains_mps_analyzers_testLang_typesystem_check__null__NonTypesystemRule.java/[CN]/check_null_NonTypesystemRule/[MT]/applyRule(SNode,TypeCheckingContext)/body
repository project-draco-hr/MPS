{
  AnalyzerRunner<Map<SNode,NullableState>> nullableRunner=new NullableAnalyzerRunner(iMethodLike);
  AnalysisResult<Map<SNode,NullableState>> result=nullableRunner.analyze();
  for (  ProgramState state : result.getStates()) {
    Instruction instruction=state.getInstruction();
    if (instruction instanceof ReadInstruction) {
      ReadInstruction read=(ReadInstruction)instruction;
      SNode variable=(SNode)read.getSource();
      if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(variable),"jetbrains.mps.baseLanguage.structure.DotExpression") && SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(variable),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true) == variable) {
        if (NullableState.NULLABLE.equals(result.get(state).get((SNode)read.getVariable()))) {
{
            BaseIntentionProvider intentionProvider=null;
            IErrorTarget errorTarget=new NodeErrorTarget();
            IErrorReporter _reporter_2309309498=typeCheckingContext.reportWarning(variable,"Instance can be null","r:99bede3e-9630-4889-aa58-4a993e3d8995(jetbrains.mps.analyzers.testLang.typesystem)","6424669011230761136",intentionProvider,errorTarget);
          }
        }
      }
    }
  }
  System.out.println(result);
}
