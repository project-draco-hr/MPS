{
  CompositeClassPathItem result=new CompositeClassPathItem();
  result.add(getBaseMPSClassPath());
  addIfExists(result,"/core/analyzers/classes");
  addIfExists(result,"/core/idea-patch/classes");
  addIfExists(result,"/core/kernel/classes");
  addIfExists(result,"/core/generator/classes");
  addIfExists(result,"/core/make-runtime/classes");
  addIfExists(result,"/core/typesystemEngine/classes");
  addIfExists(result,"/core/typesystemIntegration/classes");
  addIfExists(result,"/core/debug/classes");
  addIfExists(result,"/core/debug-api/classes");
  addIfExists(result,"/MPSPlugin/apiclasses");
  addIfExists(result,"/workbench/classes");
  addIfExists(result,"/core/actions-runtime/classes");
  addIfExists(result,"/core/editor-runtime/classes");
  addIfExists(result,"/core/intentions-runtime/classes");
  addIfExists(result,"/core/plugin-runtime/classes");
  addIfExists(result,"/core/findUsages-runtime/classes");
  addIfExists(result,"/core/refactoring-runtime/classes");
  addIfExists(result,"/core/runtime/classes");
  addIfExists(result,"/core/languageDesign/test/classes");
  addIfExists(result,"/workbench/typesystemUi/classes");
  addIfExists(result,"/core/baseLanguage/runConfigurations/runtime/classes");
  addIfExists(result,"/languages/util/runConfigurations/classes");
  addIfExists(result,"/lib/platform-api.jar");
  addIfExists(result,"/lib/platform.jar");
  addIfExists(result,"/lib/annotations.jar");
  addIfExists(result,"/lib/execution-api.jar");
  addIfExists(result,"/lib/util.jar");
  addIfExists(result,"/lib/extensions.jar");
  addIfExists(result,"/lib/junit-4.8.2.jar");
  addIfExists(result,"/lib/log4j.jar");
  addIfExists(result,"/lib/commons-lang-2.4.jar");
  addIfExists(result,"/lib/picocontainer.jar");
  addIfExists(result,"/lib/jdom.jar");
  addIfExists(result,"/lib/ecj.jar");
  return result;
}
