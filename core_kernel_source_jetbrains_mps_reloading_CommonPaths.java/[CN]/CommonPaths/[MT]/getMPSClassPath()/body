{
  CompositeClassPathItem result=new CompositeClassPathItem();
  result.add(getBaseMPSClassPath());
  result.add(getIDEAOpenAPIJar());
  result.add(getIDEAJar());
  result.add(getIDEAUtilJar());
  result.add(getIDEAExtensionsJar());
  result.add(getLibraryJars());
  IClassPathItem kernelClassPath=getMPSKernelClassPath();
  if (kernelClassPath != null) {
    result.add(kernelClassPath);
  }
  IClassPathItem debugClassPath=getMPSDebugClassPath();
  if (debugClassPath != null) {
    result.add(debugClassPath);
  }
  IClassPathItem debugAPIClassPath=getMPSDebugAPIClassPath();
  if (debugAPIClassPath != null) {
    result.add(debugAPIClassPath);
  }
  IClassPathItem supportClassPath=getMPSSupportClassPath();
  if (supportClassPath != null) {
    result.add(supportClassPath);
  }
  IClassPathItem workbenchClassPath=getWorkbenchClassPath();
  if (workbenchClassPath != null) {
    result.add(getWorkbenchClassPath());
  }
  IClassPathItem svnClassPath=getSVNSupportClasspath();
  if (svnClassPath != null) {
    result.add(svnClassPath);
  }
  IClassPathItem javaConverterClassPath=getJavaConverterClasspath();
  if (javaConverterClassPath != null) {
    result.add(javaConverterClassPath);
  }
  addIfExists(result,"/lib/commons-lang/commons-lang-2.1.jar");
  addIfExists(result,"/lib/picocontainer/picocontainer.jar");
  addIfExists(result,"/lib/jdom/jdom.jar");
  addIfExists(result,"/lib/jetbrains-ideframework/annotations.jar");
  return result;
}
