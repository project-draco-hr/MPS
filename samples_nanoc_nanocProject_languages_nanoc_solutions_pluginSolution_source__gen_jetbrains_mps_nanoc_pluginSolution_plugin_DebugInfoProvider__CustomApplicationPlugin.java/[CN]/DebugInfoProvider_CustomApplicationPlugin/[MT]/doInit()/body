{
  PluginId debuggerPlugin=PluginManager.getPluginByClassName("jetbrains.mps.debug.api.DebugInfoManager");
  if (debuggerPlugin == null) {
    return;
  }
  DebugInfoManager manager=DebugInfoManager.getInstance();
  if (manager == null) {
    return;
  }
{
    Mapper2<SNode,Project,ILocationBreakpoint> creator=new Mapper2<SNode,Project,ILocationBreakpoint>(){
      public ILocationBreakpoint value(      SNode debuggableNode,      Project project){
        try {
          return Debuggers.getInstance().getDebuggerByNameSafe("Cpp").createBreakpoint(debuggableNode,"CPP_LINE_BREAKPOINT",project);
        }
 catch (        DebuggerNotPresentException e) {
          if (log.isWarnEnabled()) {
            log.warn("Exception while creating breakpoint for node" + debuggableNode,e);
          }
          return null;
        }
      }
    }
;
    manager.addConceptBreakpointCreator("jetbrains.mps.nanoc.structure.CStatement",creator);
  }
}
