{
  List<SNode> result=new ArrayList<SNode>();
  if (!(SPropertyOperations.getBoolean(thisNode,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,1075300953594l,"abstractClass")))) {
    ListSequence.fromList(result).addSequence(ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getContainmentLink(new UUID(-714818927241248010l,-5076282167675141386l),1171931851043l,1171931851044l,"testMethodList")),MetaAdapterFactory.getContainmentLink(new UUID(-714818927241248010l,-5076282167675141386l),1171931858461l,1171931858462l,"testMethod"))));
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,1165602531693l,"superclass")),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1107535924139l,"classifier")),MetaAdapterFactory.getInterfaceConcept(new UUID(-714818927241248010l,-5076282167675141386l),1216130694486l,"jetbrains.mps.baseLanguage.unitTest.structure.ITestCase"))) {
      ListSequence.fromList(result).addSequence(ListSequence.fromList(BehaviorReflection.invokeVirtual((Class<List<SNode>>)((Class)Object.class),SNodeOperations.cast(SLinkOperations.getTarget(SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,1165602531693l,"superclass")),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1107535924139l,"classifier")),MetaAdapterFactory.getInterfaceConcept(new UUID(-714818927241248010l,-5076282167675141386l),1216130694486l,"jetbrains.mps.baseLanguage.unitTest.structure.ITestCase")),"virtual_getTestMethods_2148145109766218395",new Object[]{})));
    }
  }
  return result;
}
