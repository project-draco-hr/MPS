{
  validate();
  if (!(isValid())) {
    LOG.error("attempt to execute invalid script");
    throw new IllegalStateException("invalid script");
  }
  LOG.info("Beginning to execute script");
  final CompositeResult results=new CompositeResult();
  Script.VariablesPool pool=new Script.VariablesPool();
  Iterable<ITarget> toExecute=targetRange.targetAndSortedPrecursors(defaultTargetName);
  for (  ITarget trg : Sequence.fromIterable(toExecute)) {
    LOG.info("Executing " + trg.getName());
    Iterable<IResource> input=Sequence.fromIterable(targetRange.immediatePrecursors(trg.getName())).select(new ISelector<ITarget,IResult>(){
      public IResult select(      ITarget t){
        return results.getResult(t.getName());
      }
    }
).translate(new ITranslator2<IResult,IResource>(){
      public Iterable<IResource> translate(      IResult r){
        return r.output();
      }
    }
);
    IJob job=trg.createJob();
    IResult jr=job.execute(input,monit,pool);
    results.addResult(trg.getName(),jr);
    if (!(jr.isSucessful()) || monit.pleaseStop()) {
      LOG.info((jr.isSucessful() ? "Stop requested" : "Execution failed"));
      break;
    }
  }
  LOG.info("Finished executing script");
  return results;
}
