{
  try {
    AnalyzeDependencies_Tool tool=((Project)MapSequence.fromMap(_params).get("ideaProject")).getComponent(ProjectPluginManager.class).getTool(AnalyzeDependencies_Tool.class);
    final DependencyViewerScope scope=new DependencyViewerScope();
    ((MPSProject)MapSequence.fromMap(_params).get("project")).getRepository().getModelAccess().runReadAction(new Runnable(){
      public void run(){
        if (((List<SModel>)MapSequence.fromMap(_params).get("models")) != null) {
          for (          SModel model : ((List<SModel>)MapSequence.fromMap(_params).get("models"))) {
            scope.add(model);
          }
        }
        if (((List<SModule>)MapSequence.fromMap(_params).get("modules")) != null) {
          for (          SModule module : ((List<SModule>)MapSequence.fromMap(_params).get("modules"))) {
            scope.add(module);
          }
        }
        if (scope.isEmpty()) {
          SNode node=check_rkpdtm_a0a0c0a0a2a0(check_rkpdtm_a0a0a2a0a0c0a(((EditorComponent)MapSequence.fromMap(_params).get("editorComponent"))));
          if (node != null) {
            scope.add(node);
          }
        }
      }
    }
);
    if (scope.isEmpty()) {
      return;
    }
    tool.setContent(scope,((MPSProject)MapSequence.fromMap(_params).get("project")));
    tool.openToolLater(true);
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Priority.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "AnalyzeDependencies",t);
    }
  }
}
