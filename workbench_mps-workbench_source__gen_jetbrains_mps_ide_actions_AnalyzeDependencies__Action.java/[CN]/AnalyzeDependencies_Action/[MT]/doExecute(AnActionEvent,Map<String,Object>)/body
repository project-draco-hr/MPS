{
  try {
    AnalyzeDependencies_Tool tool=((Project)MapSequence.fromMap(_params).get("myProject")).getComponent(ProjectPluginManager.class).getTool(AnalyzeDependencies_Tool.class);
    final DependencyViewerScope scope=new DependencyViewerScope();
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        if (((List<SModelDescriptor>)MapSequence.fromMap(_params).get("myModels")) != null) {
          for (          SModelDescriptor model : ((List<SModelDescriptor>)MapSequence.fromMap(_params).get("myModels"))) {
            scope.add(model);
          }
        }
        if (((List<IModule>)MapSequence.fromMap(_params).get("myModules")) != null) {
          for (          IModule module : ((List<IModule>)MapSequence.fromMap(_params).get("myModules"))) {
            scope.add(module);
          }
        }
        if (scope.isEmpty()) {
          SNode node=check_rkpdtm_a0a0c0a2a0(check_rkpdtm_a0a0a2a0c0a(((EditorComponent)MapSequence.fromMap(_params).get("myEditorComponent"))));
          if (node != null) {
            scope.add(node);
          }
        }
      }
    }
);
    if (scope.isEmpty()) {
      return;
    }
    tool.setContent(scope,((MPSProject)MapSequence.fromMap(_params).get("myMPSProject")));
    tool.openToolLater(true);
  }
 catch (  Throwable t) {
    LOG.error("User's action execute method failed. Action:" + "AnalyzeDependencies",t);
  }
}
