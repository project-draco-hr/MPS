{
  return ModelAccess.instance().runReadAction(new Computable<String>(){
    public String compute(){
      StringBuilder result=new StringBuilder();
      result.append("model = ").append(node.getModel().getReference()).append("\n");
      result.append("concept = ").append(NameUtil.shortNameFromLongName(node.getConcept().getId())).append("\n");
      result.append("language = ").append(NameUtil.namespaceFromConceptFQName(node.getConcept().getId())).append("\n");
      result.append("ID = ").append(node.getNodeId().toString()).append("\n");
      result.append("\nReferences:");
      for (      SReference ref : node.getReferences()) {
        SNode target=ref.getTargetNode();
        if (ref.getTargetNode() == null) {
          result.append("Bad Reference\n");
          if (ref.getTargetSModelReference() != null) {
            result.append("Target model = ").append(ref.getTargetSModelReference()).append("\n");
          }
        }
 else {
          result.append("Model = ").append(target.getModel().getReference()).append("\n");
          result.append("Node = ").append(NodePresentationUtil.getPathToRoot(target)).append("\n");
          result.append("ID = ").append(target.getNodeId().toString()).append("\n");
        }
        result.append("\n");
      }
      return result.toString();
    }
  }
);
}
