{
  SNode nodeUnderDecl=ListSequence.<SNode>fromList(SNodeOperations.getAncestors(childNode,null,true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.getParent(it) == node;
    }
  }
).first();
  if ((nodeUnderDecl == null)) {
    return true;
  }
  if (SNodeOperations.hasRole(nodeUnderDecl,"jetbrains.mps.baseLanguage.structure.VariableDeclaration","initializer")) {
    return false;
  }
  return true;
}
