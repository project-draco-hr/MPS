{
  myConflicts.clear();
  collectLanguageAspectChangeConflict();
  collectPropertyConflicts();
  collectReferenceConflicts();
  collectSetNodeConflicts();
  collectAddAndDeleteConflicts();
  collectMoveConflicts();
  collectConceptConflicts();
  for (  Change change : new ArrayList<Change>(myConflicted)) {
    if (myBaseMyneChangeGroups.get(change) != null) {
      SNodeId group=myBaseMyneChangeGroups.get(change);
      for (      Map.Entry<Change,SNodeId> e : myBaseMyneChangeGroups.entrySet()) {
        if (e.getValue().equals(group)) {
          myConflicted.add(e.getKey());
        }
      }
    }
  }
}
