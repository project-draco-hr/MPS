{
  SNode sd;
  if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.lang.intentions.structure.SurroundWithIntentionDeclaration")) {
    sd=SModelOperations.createNewRootNode(SNodeOperations.getModel(node),"jetbrains.mps.lang.intentions.structure.IntentionDeclaration",null);
  }
 else {
    sd=SModelOperations.createNewRootNode(SNodeOperations.getModel(node),"jetbrains.mps.lang.intentions.structure.SurroundWithIntentionDeclaration",null);
  }
  SPropertyOperations.set(sd,"name",SPropertyOperations.getString(node,"name"));
  SPropertyOperations.set(sd,"alias",SPropertyOperations.getString(node,"alias"));
  SPropertyOperations.set(sd,"shortDescription",SPropertyOperations.getString(node,"shortDescription"));
  SPropertyOperations.set(sd,"virtualPackage",SPropertyOperations.getString(node,"virtualPackage"));
  SPropertyOperations.set(sd,"isAvailableInChildNodes","" + SPropertyOperations.getBoolean(node,"isAvailableInChildNodes"));
  SPropertyOperations.set(sd,"isErrorIntention","" + SPropertyOperations.getBoolean(node,"isErrorIntention"));
  SLinkOperations.setTarget(sd,"forConcept",SLinkOperations.getTarget(node,"forConcept",false),false);
  SLinkOperations.setTarget(sd,"descriptionFunction",SLinkOperations.getTarget(node,"descriptionFunction",true),true);
  SLinkOperations.setTarget(sd,"childFilterFunction",SLinkOperations.getTarget(node,"childFilterFunction",true),true);
  SLinkOperations.setTarget(sd,"isApplicableFunction",SLinkOperations.getTarget(node,"isApplicableFunction",true),true);
  SLinkOperations.setTarget(sd,"executeFunction",SLinkOperations.getTarget(node,"executeFunction",true),true);
  SNodeOperations.deleteNode(node);
}
