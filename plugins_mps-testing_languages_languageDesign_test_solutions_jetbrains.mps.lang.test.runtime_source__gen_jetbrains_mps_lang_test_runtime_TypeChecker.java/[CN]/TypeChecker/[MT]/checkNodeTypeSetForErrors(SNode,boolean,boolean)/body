{
  Assert.assertFalse("should be false (never used anyway)",allowErrors || allowWarnings);
  ITypeContextOwner owner=new DefaultTypecheckingContextOwner();
  SNode containingRoot=node.getContainingRoot();
  TypeContextManager.getInstance().runTypeCheckingAction(owner,containingRoot,new TypeChecker.CheckingAction(node,allowErrors,allowWarnings){
    public void checkOperation(    TypeCheckingContext context,    SNode operation){
      if (SNodeOperations.isInstanceOf(operation,"jetbrains.mps.lang.test.structure.NodeTypeSetProperty")) {
        SNode type1=context.getTypeDontCheck(node);
        boolean hasType=false;
        for (        SNode type2 : SLinkOperations.getTargets(SNodeOperations.cast(operation,"jetbrains.mps.lang.test.structure.NodeTypeSetProperty"),"type",true)) {
          if (MatchingUtil.matchNodes(type1,type2)) {
            hasType=true;
            break;
          }
        }
        Assert.assertTrue("node type <" + TypeChecker.nodeWithIdToString(type1) + "> is not in <"+ SLinkOperations.getTargets(SNodeOperations.cast(operation,"jetbrains.mps.lang.test.structure.NodeTypeSetProperty"),"type",true)+ ">",hasType);
      }
    }
  }
);
}
