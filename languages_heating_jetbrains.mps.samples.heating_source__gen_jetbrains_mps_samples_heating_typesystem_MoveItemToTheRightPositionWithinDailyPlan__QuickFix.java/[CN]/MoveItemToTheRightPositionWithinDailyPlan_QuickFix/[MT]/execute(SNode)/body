{
  final SNode item=SNodeOperations.cast(node,"jetbrains.mps.samples.heating.structure.PlanItem");
  if (SPropertyOperations.getInteger(item,"start") < 0) {
    return;
  }
  SNode dailyPlan=SNodeOperations.cast(SNodeOperations.getParent(item),"jetbrains.mps.samples.heating.structure.DailyPlan");
  SNode nextSibling=ListSequence.fromList(SLinkOperations.getTargets(dailyPlan,"items",true)).findFirst(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SPropertyOperations.getInteger(it,"start") > SPropertyOperations.getInteger(item,"start");
    }
  }
);
  if ((nextSibling != null)) {
    SNodeOperations.insertPrevSiblingChild(nextSibling,item);
  }
}
