{
  for (  SNode logStatement : ListSequence.fromList(SNodeOperations.getNodeDescendants(contextNode,MetaAdapterFactory.getConcept(new UUID(8505622446592443681l,-8359413340076074077l),1167227138527l,"jetbrains.mps.baseLanguage.logging.structure.LogStatement"),false,new SConcept[]{}))) {
    Scope scope=ScopeUtils.parentScope(logStatement,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.VariableDeclaration"));
    if (Sequence.fromIterable(scope.getAvailableElements(baseName)).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return !(SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068431474542l,"jetbrains.mps.baseLanguage.structure.VariableDeclaration"))) || baseName.equals(SPropertyOperations.getString(SNodeOperations.cast(it,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068431474542l,"jetbrains.mps.baseLanguage.structure.VariableDeclaration")),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")));
      }
    }
).isNotEmpty()) {
      return baseName + "_" + Integer.toString(Math.abs(BehaviorReflection.invokeVirtual(String.class,contextNode,"virtual_getFqName_1213877404258",new Object[]{}).hashCode()));
    }
  }
  return baseName;
}
