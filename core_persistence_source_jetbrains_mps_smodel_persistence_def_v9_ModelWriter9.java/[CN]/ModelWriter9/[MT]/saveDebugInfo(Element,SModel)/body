{
  DebugRegistry debugRegistry=DebugRegistry.getInstance();
  for (  SLanguage id : IterableUtil.merge(sourceModel.usedLanguages(),sourceModel.implicitlyUsedLanguagesWithVersions().keySet())) {
    Element langElement=new Element(ModelPersistence9.DEBUG_INFO_LANG);
    langElement.setAttribute(ModelPersistence9.ID,IdHelper.getLanguageId(id).serialize());
    langElement.setAttribute(ModelPersistence9.DEBUG_INFO_NAME,id.getQualifiedName());
    debugInfoElement.addContent(langElement);
  }
  for (  ImportElement ie : sourceModel.importedModels()) {
    SModelReference ref=ie.getModelReference();
    org.jetbrains.mps.openapi.model.SModel model=ref.resolve(MPSModuleRepository.getInstance());
    String name=model != null ? model.getModelName() : debugRegistry.getModelName(ref);
    Element langElement=new Element(ModelPersistence9.DEBUG_INFO_MODEL);
    langElement.setAttribute(ModelPersistence9.REF,ref.toString());
    langElement.setAttribute(ModelPersistence9.DEBUG_INFO_NAME,name);
    debugInfoElement.addContent(langElement);
  }
  Map<SConceptId,String> conceptIds=new HashMap<SConceptId,String>();
  Map<SPropertyId,String> propIds=new HashMap<SPropertyId,String>();
  Map<SReferenceLinkId,String> refIds=new HashMap<SReferenceLinkId,String>();
  Map<SContainmentLinkId,String> roleIds=new HashMap<SContainmentLinkId,String>();
  IdInfoCollector.getDebugInfoById(sourceModel.getRootNodes(),conceptIds,propIds,refIds,roleIds);
  for (  Entry<SConceptId,String> e : conceptIds.entrySet()) {
    Element langElement=new Element(ModelPersistence9.DEBUG_INFO_CONCEPT);
    langElement.setAttribute(ModelPersistence9.ID,e.getKey().serialize());
    langElement.setAttribute(ModelPersistence9.DEBUG_INFO_NAME,NameUtil.shortNameFromLongName(e.getValue()));
    debugInfoElement.addContent(langElement);
  }
  for (  Entry<SPropertyId,String> e : propIds.entrySet()) {
    Element langElement=new Element(ModelPersistence9.DEBUG_INFO_PROP);
    langElement.setAttribute(ModelPersistence9.ID,e.getKey().serialize());
    langElement.setAttribute(ModelPersistence9.DEBUG_INFO_NAME,e.getValue());
    debugInfoElement.addContent(langElement);
  }
  for (  Entry<SReferenceLinkId,String> e : refIds.entrySet()) {
    Element langElement=new Element(ModelPersistence9.DEBUG_INFO_REF_ROLE);
    langElement.setAttribute(ModelPersistence9.ID,e.getKey().serialize());
    langElement.setAttribute(ModelPersistence9.DEBUG_INFO_NAME,e.getValue());
    debugInfoElement.addContent(langElement);
  }
  for (  Entry<SContainmentLinkId,String> e : roleIds.entrySet()) {
    Element langElement=new Element(ModelPersistence9.DEBUG_INFO_CHILD_ROLE);
    langElement.setAttribute(ModelPersistence9.ID,e.getKey().serialize());
    langElement.setAttribute(ModelPersistence9.DEBUG_INFO_NAME,e.getValue());
    debugInfoElement.addContent(langElement);
  }
}
