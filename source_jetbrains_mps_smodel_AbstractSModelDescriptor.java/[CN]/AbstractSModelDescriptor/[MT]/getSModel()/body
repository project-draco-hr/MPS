{
  if (mySModel == null) {
    mySModel=loadModel();
    SModelRepository.getInstance().fireSModelRepositoryChanged();
    LOG.assertLog(mySModel != null,"Couldn't load model \"" + getModelUID() + "\"");
    if (myModelListeners != null) {
      for (      SModelListener listener : myModelListeners) {
        if (!mySModel.hasSModelListener(listener)) {
          mySModel.addSModelListener(listener);
        }
      }
      myModelListeners.clear();
      myModelListeners=null;
    }
    if (myModelListenersForImportedModels != null) {
      Iterator<SModelDescriptor> iterator=mySModel.importedModels(IdeMain.instance().getGlobalOperationContext());
      while (iterator.hasNext()) {
        SModelDescriptor imported=iterator.next();
        for (        SModelListener listener : myModelListenersForImportedModels) {
          imported.addSModelListener(listener);
          imported.addSModelListenerToImportedModels(listener);
        }
      }
      myModelListenersForImportedModels.clear();
      myModelListenersForImportedModels=null;
    }
    if (myCommandListeners != null) {
      for (      SModelCommandListener listener : myCommandListeners) {
        if (!mySModel.hasSModelCommandListener(listener)) {
          mySModel.addSModelCommandListener(listener);
        }
      }
      myCommandListeners.clear();
      myCommandListeners=null;
    }
    if (myModelCommandListenersForImportedModels != null) {
      Iterator<SModelDescriptor> iterator=mySModel.importedModels(IdeMain.instance().getGlobalOperationContext());
      while (iterator.hasNext()) {
        SModelDescriptor imported=iterator.next();
        for (        SModelCommandListener listener : myModelCommandListenersForImportedModels) {
          imported.addSModelCommandListener(listener);
          imported.addSModelCommandListenerToImportedModels(listener);
        }
      }
      myModelCommandListenersForImportedModels.clear();
      myModelCommandListenersForImportedModels=null;
    }
    updateNodeStatuses();
  }
  return mySModel;
}
