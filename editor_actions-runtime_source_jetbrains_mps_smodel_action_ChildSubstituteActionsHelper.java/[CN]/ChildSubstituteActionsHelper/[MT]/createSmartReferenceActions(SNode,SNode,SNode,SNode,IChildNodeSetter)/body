{
  if (parentNode == null) {
    return Collections.emptyList();
  }
  SNode linkDeclaration=null;
  int index=0;
  if (currentChild != null) {
    linkDeclaration=new SNodeLegacy(currentChild).getRoleLink();
    index=((jetbrains.mps.smodel.SNode)parentNode).getChildren(currentChild.getContainmentLink()).indexOf(currentChild);
  }
  if (linkDeclaration == null && childSetter instanceof DefaultChildNodeSetter) {
    linkDeclaration=((DefaultChildNodeSetter)childSetter).getLinkDeclaration();
  }
  if (smartConcept == null) {
    return Collections.emptyList();
  }
  ReferenceDescriptor refDescriptor=ModelConstraints.getSmartReferenceDescriptor(parentNode,linkDeclaration == null ? null : SModelUtil.getLinkDeclarationRole(linkDeclaration),index,smartConcept);
  List<SubstituteAction> actions=new ArrayList<SubstituteAction>();
  Iterable<SNode> referentNodes=refDescriptor.getScope().getAvailableElements(null);
  for (  SNode referentNode : referentNodes) {
    if (referentNode == null || !referentNode.getConcept().isSubConceptOf(MetaAdapterByDeclaration.getConcept(SModelUtil.getLinkDeclarationTarget(smartReference)))) {
      continue;
    }
    actions.add(new SmartRefChildNodeSubstituteAction(referentNode,parentNode,currentChild,childSetter,smartConcept,smartReference,refDescriptor));
  }
  return actions;
}
