{
  return ModelAccess.instance().runReadAction(new Computable<String>(){
    public String compute(){
      List<SNode> statements=SLinkOperations.getTargets(SLinkOperations.getTarget(myEvaluator,"evaluatedStatements",true),"statement",true);
      if (ListSequence.fromList(statements).isEmpty()) {
        return "empty statement";
      }
      SNode lastStatement=ListSequence.fromList(statements).last();
      String suffix=((ListSequence.fromList(statements).count() > 1 ? "..." : ""));
      if (SNodeOperations.isInstanceOf(lastStatement,"jetbrains.mps.baseLanguage.structure.ExpressionStatement")) {
        return getPresentation(SLinkOperations.getTarget(SNodeOperations.cast(lastStatement,"jetbrains.mps.baseLanguage.structure.ExpressionStatement"),"expression",true)) + suffix;
      }
      return ((String)BehaviorManager.getInstance().invoke(Object.class,SNodeOperations.cast(lastStatement,"jetbrains.mps.lang.core.structure.BaseConcept"),"virtual_getPresentation_1213877396640",new Class[]{SNode.class})) + suffix;
    }
  }
);
}
