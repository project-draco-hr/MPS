{
  Map<SPropertyId,PropertyConstraintsDescriptor> properties=new HashMap<SPropertyId,PropertyConstraintsDescriptor>();
  properties.put(MetaIdFactory.propId(0x16bafbb4c6cd4cc5L,0x83327c6de8729b3fL,0x51dcaa29974fc1a2L,0x51dcaa29974fc1a8L),new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0x16bafbb4c6cd4cc5L,0x83327c6de8729b3fL,0x51dcaa29974fc1a2L,0x51dcaa29974fc1a8L),this){
    @Override public boolean hasOwnSetter(){
      return true;
    }
    @Override public void setValue(    SNode node,    String propertyValue){
      String propertyName="size";
      SPropertyOperations.set(node,MetaAdapterFactory.getProperty(0x16bafbb4c6cd4cc5L,0x83327c6de8729b3fL,0x51dcaa29974fc1a2L,0x51dcaa29974fc1a8L,"size"),"" + (111110));
      SPropertyOperations.set(node,MetaAdapterFactory.getProperty(0x16bafbb4c6cd4cc5L,0x83327c6de8729b3fL,0x51dcaa29974fc1a2L,0x51dcaa29974fc1a8L,"size"),"" + ((SPropertyOperations.getInteger(propertyValue))));
    }
  }
);
  return properties;
}
