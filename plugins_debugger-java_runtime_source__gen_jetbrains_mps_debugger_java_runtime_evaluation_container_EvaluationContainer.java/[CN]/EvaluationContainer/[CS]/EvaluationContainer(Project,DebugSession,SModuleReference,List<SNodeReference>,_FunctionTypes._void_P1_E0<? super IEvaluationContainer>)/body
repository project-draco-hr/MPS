{
  myProject=project;
  myDebugSession=session;
  myContainerModule=containerModule;
  myUiState=myDebugSession.getUiState();
  final ModelAccess modelAccess=project.getRepository().getModelAccess();
  modelAccess.runWriteAction(new Runnable(){
    public void run(){
      SModule containerModule=myContainerModule.resolve(myDebuggerRepository);
      SModel descriptor=TemporaryModels.getInstance().create(false,TempModuleOptions.forExistingModule(containerModule));
      myContainerModel=descriptor.getReference();
      myContext=new ModuleContext(containerModule,myProject);
    }
  }
);
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    public void run(){
      modelAccess.executeCommand(new Runnable(){
        public void run(){
          setUpNode(nodesToImport);
        }
      }
);
      onNodeSetUp.invoke(EvaluationContainer.this);
    }
  }
);
}
