{
  SModelDescriptor containerModel=(SModelDescriptor)SModelRepository.getInstance().getModelDescriptor(myContainerModel);
  SNode evaluatorNode=createEvaluatorNode();
  containerModel.addRootNode(evaluatorNode);
  myNode=evaluatorNode.getReference();
  BlImportUtil.tryToImport(SLinkOperations.getTarget(evaluatorNode,"code",true),nodesToImport,new _FunctionTypes._return_P1_E0<SNode,SReference>(){
    public SNode invoke(    SReference variableReference){
      return null;
    }
  }
,new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode variable){
      return createInternalVariableReference_jbng3m_a0a3a8a52(variable.getName());
    }
  }
);
  containerModel.getSModel().addLanguage(ModuleRepositoryFacade.getInstance().getModule("jetbrains.mps.debugger.java.evaluation",Language.class).getModuleReference());
  containerModel.getSModel().addLanguage(ModuleRepositoryFacade.getInstance().getModule("jetbrains.mps.debugger.java.privateMembers",Language.class).getModuleReference());
  SModelOperations.validateLanguagesAndImports(containerModel.getSModel(),true,true);
}
