{
  List<AnAction> actions=ListSequence.fromList(new ArrayList<AnAction>());
  final int fileLine=findFileLineByY(event.getY());
  ListSequence.fromList(actions).addElement(new BaseAction("Close Annotations"){
    protected void doExecute(    AnActionEvent e){
      dispose();
    }
  }
);
  ListSequence.fromList(actions).addElement(Separator.getInstance());
  ListSequence.fromList(actions).addElement(myViewActionGroup);
  if (fileLine != -1) {
    ListSequence.fromList(actions).addElement(new AnnotationColumn.ShowDiffFromAnnotationAction(fileLine));
    ListSequence.fromList(actions).addElement(new BaseAction("Copy revision number"){
      protected void doExecute(      AnActionEvent e){
        String asString=myFileAnnotation.getLineRevisionNumber(fileLine).asString();
        CopyPasteManager.getInstance().setContents(new TextTransferrable(asString,asString));
      }
    }
);
  }
  DefaultActionGroup actionGroup=ActionUtils.groupFromActions(ListSequence.fromList(actions).toGenericArray(AnAction.class));
  return ActionManager.getInstance().createActionPopupMenu(ActionPlaces.UNKNOWN,actionGroup).getComponent();
}
