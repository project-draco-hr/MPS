{
  int[] dependsOn=new int[count];
  int[][] result=new int[count][];
  Map<SNode,Integer> rootIndex=new HashMap<SNode,Integer>();
  for (int i=0; i < myRoots.length; i++) {
    rootIndex.put(myRoots[i],i);
  }
  for (int index=0; index < count; index++) {
    SNode root=myRoots[index];
    Arrays.fill(dependsOn,0);
    buildNodeDependencies(root,dependsOn,rootIndex);
    for (    SNode node : ((List<SNode>)(List)SNodeOperations.getDescendants(root,null))) {
      buildNodeDependencies(node,dependsOn,rootIndex);
    }
    dependsOn[index]=0;
    result[index]=GraphUtil.setToList(dependsOn);
  }
  return result;
}
