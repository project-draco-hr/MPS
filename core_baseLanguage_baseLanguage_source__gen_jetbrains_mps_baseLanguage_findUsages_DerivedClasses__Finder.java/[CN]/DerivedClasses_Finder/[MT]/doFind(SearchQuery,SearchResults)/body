{
  SNode searchedNode=searchQuery.getNodePointer().getNode();
  results.getSearchedNodePointers().add(new SNodePointer(searchedNode));
  List<SNode> derived=new ArrayList<SNode>();
  ListOperations.addElement(derived,(SNode)searchedNode);
  while (!(SequenceOperations.isEmpty(derived))) {
    Set<SReference> resRefs=FindUsagesManager.getInstance().findUsages(SequenceOperations.getFirst(derived),searchQuery.getScope());
    for (    SReference reference : resRefs) {
      SNode node=reference.getSourceNode();
      if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node,null,false,false),"jetbrains.mps.baseLanguage.structure.ClassConcept")) {
        if (SNodeOperations.hasRole(node,"jetbrains.mps.baseLanguage.structure.ClassConcept","superclass")) {
          ListOperations.addElement(derived,SNodeOperations.getParent(node,null,false,false));
        }
      }
    }
    if (SequenceOperations.getFirst(derived) != searchedNode) {
      results.getSearchResults().add(new SearchResult(new SNodePointer(SequenceOperations.getFirst(derived)),"Derived Classes"));
    }
    ListOperations.removeElement(derived,SequenceOperations.getFirst(derived));
  }
}
