{
  List<SNode> derived=new ArrayList<SNode>();
  ListOperations.addElement(derived,(SNode)node);
  int passed=0;
  while (SequenceOperations.getSize(derived) != passed) {
    SNode passingNode=ListOperations.getElement(derived,passed);
    for (    SNode classNode : this.executeFinder("jetbrains.mps.baseLanguage.findUsages.StraightDerivedClasses_Finder",passingNode,scope,monitor)) {
      ListOperations.addElement(derived,classNode);
    }
    if (passingNode != node) {
      ListOperations.addElement(_results,passingNode);
    }
    passed=passed + 1;
  }
}
