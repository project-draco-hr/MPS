{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(-5808042798135555774l,-8657779246725685839l),1225194628440l,5299096511375896640l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(-5808042798135555774l,-8657779246725685839l),1225194628440l,5299096511375896640l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          List<SNode> result=new ArrayList<SNode>();
          SNode abstractConceptDeclaration=SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getReferenceNode(),MetaAdapterFactory.getConcept(new UUID(-5808042798135555774l,-8657779246725685839l),1225194240794l,"jetbrains.mps.lang.behavior.structure.ConceptBehavior"),false,false),MetaAdapterFactory.getReferenceLink(new UUID(-5808042798135555774l,-8657779246725685839l),1225194240794l,1225194240799l,"concept"));
          if (SNodeOperations.isInstanceOf(abstractConceptDeclaration,MetaAdapterFactory.getConcept(new UUID(-4094437568663370681l,-8968368868337559369l),1071489090640l,"jetbrains.mps.lang.structure.structure.ConceptDeclaration"))) {
            SNode cd=(SNode)abstractConceptDeclaration;
            SNode extendsNode=SLinkOperations.getTarget(cd,MetaAdapterFactory.getReferenceLink(new UUID(-4094437568663370681l,-8968368868337559369l),1071489090640l,1071489389519l,"extends"));
            if (extendsNode != null) {
              ListSequence.fromList(result).addElement(extendsNode);
            }
            for (            SNode itfcRef : SLinkOperations.getChildren(cd,MetaAdapterFactory.getContainmentLink(new UUID(-4094437568663370681l,-8968368868337559369l),1071489090640l,1169129564478l,"implements"))) {
              ListSequence.fromList(result).addElement(SLinkOperations.getTarget(itfcRef,MetaAdapterFactory.getReferenceLink(new UUID(-4094437568663370681l,-8968368868337559369l),1169127622168l,1169127628841l,"intfc")));
            }
          }
          if (SNodeOperations.isInstanceOf(abstractConceptDeclaration,MetaAdapterFactory.getConcept(new UUID(-4094437568663370681l,-8968368868337559369l),1169125989551l,"jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration"))) {
            SNode itfc=(SNode)abstractConceptDeclaration;
            for (            SNode itfcRef : SLinkOperations.getChildren(itfc,MetaAdapterFactory.getContainmentLink(new UUID(-4094437568663370681l,-8968368868337559369l),1169125989551l,1169127546356l,"extends"))) {
              ListSequence.fromList(result).addElement(SLinkOperations.getTarget(itfcRef,MetaAdapterFactory.getReferenceLink(new UUID(-4094437568663370681l,-8968368868337559369l),1169127622168l,1169127628841l,"intfc")));
            }
          }
          return result;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_mmhzfq_a0a1a0a0a1a0b0a1a3;
        }
      }
;
    }
  }
);
  return references;
}
