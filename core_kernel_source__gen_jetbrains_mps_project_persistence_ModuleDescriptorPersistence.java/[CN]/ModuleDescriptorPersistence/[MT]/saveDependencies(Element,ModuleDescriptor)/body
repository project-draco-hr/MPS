{
  if (!(descriptor.getDependencies().isEmpty())) {
    Element dependencies=new Element("dependencies");
    saveDependencyList(dependencies,descriptor.getDependencies());
    result.addContent(dependencies);
  }
  if (!(descriptor.getUsedLanguages().isEmpty())) {
    Element usedLanguages=new Element("usedLanguages");
    for (    ModuleReference langRef : CollectionSequence.fromCollection(descriptor.getUsedLanguages())) {
      JDOMUtil.tagWithText(usedLanguages,"usedLanguage",langRef.toString());
    }
    result.addContent(usedLanguages);
  }
  if (!(descriptor.getUsedDevkits().isEmpty())) {
    Element usedDevKits=new Element("usedDevKits");
    for (    ModuleReference dkRef : CollectionSequence.fromCollection(descriptor.getUsedDevkits())) {
      JDOMUtil.tagWithText(usedDevKits,"usedDevKit",dkRef.toString());
    }
    result.addContent(usedDevKits);
  }
  if (descriptor instanceof LanguageDescriptor) {
    LanguageDescriptor ld=((LanguageDescriptor)descriptor);
    if (!(ld.getRuntimeModules().isEmpty())) {
      Element runtime=new Element("runtime");
      Set<ModuleReference> runtimeModules=ld.getRuntimeModules();
      saveDependencyList(runtime,SetSequence.fromSet(runtimeModules).select(new ISelector<ModuleReference,Dependency>(){
        public Dependency select(        ModuleReference it){
          return new Dependency(it,false);
        }
      }
).toListSequence());
      result.addContent(runtime);
    }
  }
}
