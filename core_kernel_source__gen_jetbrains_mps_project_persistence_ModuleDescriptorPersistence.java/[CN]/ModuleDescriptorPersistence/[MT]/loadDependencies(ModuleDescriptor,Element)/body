{
  descriptor.getDependencies().addAll(loadDependenciesList(XmlUtil.first(root,"dependencies")));
  descriptor.getUsedLanguages().addAll(Sequence.fromIterable(XmlUtil.children(XmlUtil.first(root,"usedLanguages"),"usedLanguage")).select(new ISelector<Element,SModuleReference>(){
    public SModuleReference select(    Element ul){
      return PersistenceFacade.getInstance().createModuleReference(ul.getText());
    }
  }
).toListSequence());
  descriptor.getUsedDevkits().addAll(Sequence.fromIterable(XmlUtil.children(XmlUtil.first(root,"usedDevKits"),"usedDevKit")).select(new ISelector<Element,SModuleReference>(){
    public SModuleReference select(    Element udk){
      return PersistenceFacade.getInstance().createModuleReference(udk.getText());
    }
  }
).toListSequence());
  if (descriptor instanceof LanguageDescriptor) {
    LanguageDescriptor ld=(LanguageDescriptor)descriptor;
    Element runtimeXML=XmlUtil.first(root,"runtime");
    if (runtimeXML != null) {
      for (      Dependency dep : ListSequence.fromList(loadDependenciesList(runtimeXML))) {
        ld.getRuntimeModules().add(dep.getModuleRef());
      }
    }
  }
}
