{
  this.myRoot=SModelOperations.createNewRootNode(myModel,"jetbrains.mps.console.lang.structure.Console",null);
  this.myEditor=new UIEditorComponent(new ProjectOperationContext(ProjectHelper.toMPSProject(getProject())),null);
  nextCommand();
  myMainComponent=new JPanel();
  myMainComponent.setLayout(new BorderLayout());
  myMainComponent.add(myEditor,BorderLayout.NORTH);
  JPanel btnPanel=new JPanel();
  myMainComponent.add(btnPanel,BorderLayout.SOUTH);
  btnPanel.setLayout(new FlowLayout());
  btnPanel.add(new JButton(new AbstractAction("Execute"){
    public void actionPerformed(    ActionEvent p0){
      if ((myLastCommand != null)) {
        BehaviorReflection.invokeVirtual(Void.class,myLastCommand,"virtual_execute_757553790980855637",new Object[]{});
      }
      nextCommand();
    }
  }
));
  btnPanel.add(new JButton(new AbstractAction("Prev"){
    public void actionPerformed(    ActionEvent p0){
      if ((SNodeOperations.getPrevSibling(myLastCommand) == null)) {
        return;
      }
      myLastCommand=SNodeOperations.getPrevSibling(myLastCommand);
      myEditor.editNode(myLastCommand);
    }
  }
));
  btnPanel.add(new JButton(new AbstractAction("Next"){
    public void actionPerformed(    ActionEvent p0){
      if ((SNodeOperations.getNextSibling(myLastCommand) == null)) {
        return;
      }
      myLastCommand=SNodeOperations.getNextSibling(myLastCommand);
      myEditor.editNode(myLastCommand);
    }
  }
));
}
