{
  final jetbrains.mps.project.Project project=ProjectHelper.toMPSProject(getProject());
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      ConsoleTool.this.myContext=new ModuleContext(myModel.getModule(),project);
      ConsoleTool.this.myEditor=new UIEditorComponent(MPSModuleRepository.getInstance(),null);
      ((SModelInternal)myModel).addLanguage(ModuleRepositoryFacade.getInstance().getModule("jetbrains.mps.console.lang",Language.class).getModuleReference());
      ((SModelInternal)myModel).addLanguage(ModuleRepositoryFacade.getInstance().getModule("jetbrains.mps.console.lang.commands",Language.class).getModuleReference());
      ((SModelInternal)myModel).addLanguage(ModuleRepositoryFacade.getInstance().getModule("jetbrains.mps.baseLanguage",Language.class).getModuleReference());
      ConsoleTool.this.myRoot=SModelOperations.createNewRootNode(myModel,"jetbrains.mps.console.lang.structure.Console",null);
      myEditor.editNode(myRoot,myContext);
    }
  }
);
  nextCommand();
  myMainComponent=new JPanel();
  myMainComponent.setLayout(new BorderLayout());
  myMainComponent.add(myEditor,BorderLayout.CENTER);
  JPanel btnPanel=new JPanel();
  myMainComponent.add(btnPanel,BorderLayout.SOUTH);
  btnPanel.setLayout(new FlowLayout());
  btnPanel.add(new JButton(new AbstractAction("Execute"){
    public void actionPerformed(    ActionEvent p0){
      ModelAccess.instance().runWriteActionInCommand(new Runnable(){
        public void run(){
          TemporaryModels.getInstance().addMissingModuleImports(myModel);
          myLastCommand=ListSequence.fromList(SLinkOperations.getTargets(myRoot,"item",true)).last();
          if ((myLastCommand != null)) {
            BehaviorReflection.invokeVirtual(Void.class,myLastCommand,"virtual_execute_757553790980855637",new Object[]{project});
          }
        }
      }
);
      nextCommand();
    }
  }
));
  btnPanel.add(new JButton(new AbstractAction("Prev"){
    public void actionPerformed(    ActionEvent p0){
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          if ((SNodeOperations.getPrevSibling(myLastCommand) == null)) {
            return;
          }
          myLastCommand=SNodeOperations.cast(SNodeOperations.getPrevSibling(myLastCommand),"jetbrains.mps.console.lang.structure.Command");
        }
      }
);
    }
  }
));
  btnPanel.add(new JButton(new AbstractAction("Next"){
    public void actionPerformed(    ActionEvent p0){
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          if ((SNodeOperations.getNextSibling(myLastCommand) == null)) {
            return;
          }
          myLastCommand=SNodeOperations.cast(SNodeOperations.getNextSibling(myLastCommand),"jetbrains.mps.console.lang.structure.Command");
        }
      }
);
    }
  }
));
}
