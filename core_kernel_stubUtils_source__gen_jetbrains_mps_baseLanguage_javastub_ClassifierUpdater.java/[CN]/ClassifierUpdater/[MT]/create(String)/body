{
  ClassifierKind kind=myParsedClass.getClassifierKind();
  if (kind == null) {
    return null;
  }
  final SNodeId nodeId=ASMNodeId.createId(fqName);
  final String shortName=NameUtil.shortNameFromLongName(fqName.replace('$','.'));
  SModel fakeModel=null;
switch (kind) {
case CLASS:
    SNode c=SModelOperations.createNewNode(fakeModel,nodeId,SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")));
  prepare(c,shortName);
initClass(c);
return c;
case INTERFACE:
SNode i=SModelOperations.createNewNode(fakeModel,nodeId,SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface")));
prepare(i,shortName);
initInterface(i);
return i;
case ENUM:
SNode e=SModelOperations.createNewNode(fakeModel,nodeId,SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass")));
prepare(e,shortName);
initClass(e);
return e;
case ANNOTATIONS:
SNode a=SModelOperations.createNewNode(fakeModel,nodeId,SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a69dc80cL,"jetbrains.mps.baseLanguage.structure.Annotation")));
prepare(a,shortName);
initAnnotation(a);
return a;
default :
return null;
}
}
