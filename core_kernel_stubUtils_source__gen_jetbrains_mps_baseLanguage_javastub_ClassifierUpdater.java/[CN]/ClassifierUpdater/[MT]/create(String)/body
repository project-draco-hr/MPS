{
  ClassifierKind kind=myParsedClass.getClassifierKind();
  if (kind == null) {
    return null;
  }
  final SNodeId nodeId=ASMNodeId.createId(fqName);
  final String shortName=NameUtil.shortNameFromLongName(fqName.replace('$','.'));
  SModel fakeModel=null;
switch (kind) {
case CLASS:
    SNode c=SModelOperations.createNewNode(fakeModel,nodeId,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept"));
  prepare(c,shortName);
initClass(c);
return c;
case INTERFACE:
SNode i=SModelOperations.createNewNode(fakeModel,nodeId,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107796713796l,"jetbrains.mps.baseLanguage.structure.Interface"));
prepare(i,shortName);
initInterface(i);
return i;
case ENUM:
SNode e=SModelOperations.createNewNode(fakeModel,nodeId,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1083245097125l,"jetbrains.mps.baseLanguage.structure.EnumClass"));
prepare(e,shortName);
initClass(e);
return e;
case ANNOTATIONS:
SNode a=SModelOperations.createNewNode(fakeModel,nodeId,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1188206331916l,"jetbrains.mps.baseLanguage.structure.Annotation"));
prepare(a,shortName);
initAnnotation(a);
return a;
default :
return null;
}
}
