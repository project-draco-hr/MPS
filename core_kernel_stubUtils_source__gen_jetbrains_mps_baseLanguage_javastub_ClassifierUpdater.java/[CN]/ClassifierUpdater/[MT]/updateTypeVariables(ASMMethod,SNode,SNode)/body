{
  Map<ASMTypeVariable,SNode> typeVars=MapSequence.fromMap(new HashMap<ASMTypeVariable,SNode>());
  for (  ASMTypeVariable tv : method.getTypeParameters()) {
    SNode tvd=_quotation_createNode_ol94f8_a0a0b0n(tv.getName());
    ListSequence.fromList(SLinkOperations.getChildren(result,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1109279851642l,1109279881614l,"typeVariableDeclaration"))).addElement(tvd);
    MapSequence.fromMap(typeVars).put(tv,tvd);
  }
  for (  ASMTypeVariable tv : method.getTypeParameters()) {
    SNode tvd=MapSequence.fromMap(typeVars).get(tv);
    if (tv instanceof ASMFormalTypeParameter) {
      ASMFormalTypeParameter tp=(ASMFormalTypeParameter)tv;
      if (tp.getClassBound() != null) {
        SLinkOperations.setTarget(tvd,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1109279763828l,1214996921760l,"bound"),getTypeByASMType(tp.getClassBound(),result,cls));
      }
      for (      ASMType act : tp.getInterfaceBounds()) {
        ListSequence.fromList(SLinkOperations.getChildren(tvd,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1109279763828l,1215091156086l,"auxBounds"))).addElement(SNodeOperations.cast(getTypeByASMType(act,result,cls),"jetbrains.mps.baseLanguage.structure.ClassifierType"));
      }
    }
  }
}
