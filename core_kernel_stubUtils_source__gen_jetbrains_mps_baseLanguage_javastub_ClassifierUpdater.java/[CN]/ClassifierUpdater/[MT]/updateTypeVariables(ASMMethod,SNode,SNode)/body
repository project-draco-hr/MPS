{
  Map<ASMTypeVariable,SNode> typeVars=MapSequence.fromMap(new HashMap<ASMTypeVariable,SNode>());
  for (  ASMTypeVariable tv : method.getTypeParameters()) {
    SNode tvd=_quotation_createNode_ol94f8_a0a0b0c(cm,tv.getName());
    ListSequence.fromList(SLinkOperations.getTargets(result,"typeVariableDeclaration",true)).addElement(tvd);
    MapSequence.fromMap(typeVars).put(tv,tvd);
  }
  for (  ASMTypeVariable tv : method.getTypeParameters()) {
    SNode tvd=MapSequence.fromMap(typeVars).get(tv);
    if (tv instanceof ASMFormalTypeParameter) {
      ASMFormalTypeParameter tp=(ASMFormalTypeParameter)tv;
      if (tp.getClassBound() != null) {
        SLinkOperations.setTarget(tvd,"bound",getTypeByASMType(tp.getClassBound(),result,cls),true);
      }
      for (      ASMType act : tp.getInterfaceBounds()) {
        ListSequence.fromList(SLinkOperations.getTargets(tvd,"auxBounds",true)).addElement(SNodeOperations.cast(getTypeByASMType(act,result,cls),"jetbrains.mps.baseLanguage.structure.ClassifierType"));
      }
    }
  }
}
