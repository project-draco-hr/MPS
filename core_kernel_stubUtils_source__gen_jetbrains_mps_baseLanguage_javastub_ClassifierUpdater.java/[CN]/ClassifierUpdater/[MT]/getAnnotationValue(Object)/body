{
  if (value instanceof Integer) {
    return new ClassifierUpdater.QuotationClass_ol94f8_a0a0a0u().createNode(cm,value.toString());
  }
  if (value instanceof Byte) {
    return new ClassifierUpdater.QuotationClass_ol94f8_a0a0b0u().createNode(cm,value.toString());
  }
  if (value instanceof Short) {
    return new ClassifierUpdater.QuotationClass_ol94f8_a0a0c0u().createNode(cm,value.toString());
  }
  if (value instanceof Boolean) {
    return new ClassifierUpdater.QuotationClass_ol94f8_a0a0d0u().createNode(cm,value.toString());
  }
  if (value instanceof Character) {
    return new ClassifierUpdater.QuotationClass_ol94f8_a0a0e0u().createNode(value.toString());
  }
  if (value instanceof Long) {
    return new ClassifierUpdater.QuotationClass_ol94f8_a0a0f0u().createNode(value.toString() + "L");
  }
  if (value instanceof Float) {
    return new ClassifierUpdater.QuotationClass_ol94f8_a0a0g0u().createNode(cm,value.toString());
  }
  if (value instanceof Double) {
    return new ClassifierUpdater.QuotationClass_ol94f8_a0a0h0u().createNode(cm,value.toString());
  }
  if (value instanceof String) {
    return new ClassifierUpdater.QuotationClass_ol94f8_a0a0i0u().createNode(cm,value.toString());
  }
  if (value instanceof ASMAnnotation) {
    return new ClassifierUpdater.QuotationClass_ol94f8_a0a0j0u().createNode(cm,createAnnotation((ASMAnnotation)value));
  }
  if (value instanceof ASMPrimitiveType) {
    return new ClassifierUpdater.QuotationClass_ol94f8_a0a0k0u().createNode(cm,SNodeOperations.cast(getTypeByASMType((ASMPrimitiveType)value,null,null),"jetbrains.mps.baseLanguage.structure.PrimitiveType"));
  }
  if (value instanceof List) {
    List<Object> list=(List<Object>)value;
    return new ClassifierUpdater.QuotationClass_ol94f8_a0b0l0u().createNode(cm,ListSequence.fromList(list).select(new ISelector<Object,SNode>(){
      public SNode select(      Object it){
        return getAnnotationValue(it);
      }
    }
).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return (it != null);
      }
    }
).toListSequence());
  }
  if (value instanceof ASMEnumValue) {
    ASMEnumValue enumValue=(ASMEnumValue)value;
    ASMClassType c=(ASMClassType)enumValue.getType();
    SNode res=new ClassifierUpdater.QuotationClass_ol94f8_a0a2a21a02().createNode(cm);
    addClassifierReference(res,"enumClass",c);
    addEnumConstReference(res,"enumConstantDeclaration",enumValue);
    return res;
  }
  if (value instanceof ASMClassType) {
    SNode res=new ClassifierUpdater.QuotationClass_ol94f8_a0a0a31a02().createNode(cm);
    addClassifierReference(res,"classifier",(ASMClassType)value);
    return res;
  }
  if (log.isErrorEnabled()) {
    log.error("couldn't create annotation value from " + ((value == null ? "" : value.getClass().getName())) + " : "+ value);
  }
  return null;
}
