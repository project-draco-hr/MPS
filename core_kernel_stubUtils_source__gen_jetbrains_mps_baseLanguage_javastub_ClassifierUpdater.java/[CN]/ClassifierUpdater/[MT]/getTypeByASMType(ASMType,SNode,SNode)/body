{
  if (type == ASMPrimitiveType.BOOLEAN) {
    return _quotation_createNode_ol94f8_a0a0a23();
  }
  if (type == ASMPrimitiveType.BYTE) {
    return _quotation_createNode_ol94f8_a0a1a23();
  }
  if (type == ASMPrimitiveType.SHORT) {
    return _quotation_createNode_ol94f8_a0a2a23();
  }
  if (type == ASMPrimitiveType.INT) {
    return _quotation_createNode_ol94f8_a0a3a23();
  }
  if (type == ASMPrimitiveType.LONG) {
    return _quotation_createNode_ol94f8_a0a4a23();
  }
  if (type == ASMPrimitiveType.FLOAT) {
    return _quotation_createNode_ol94f8_a0a5a23();
  }
  if (type == ASMPrimitiveType.DOUBLE) {
    return _quotation_createNode_ol94f8_a0a6a23();
  }
  if (type == ASMPrimitiveType.VOID) {
    return _quotation_createNode_ol94f8_a0a7a23();
  }
  if (type == ASMPrimitiveType.CHAR) {
    return _quotation_createNode_ol94f8_a0a8a23();
  }
  if (type instanceof ASMArrayType) {
    return _quotation_createNode_ol94f8_a0a9a23(getTypeByASMType(((ASMArrayType)type).getElementType(),method,classifier));
  }
  if (type instanceof ASMVarArgType) {
    return _quotation_createNode_ol94f8_a0a01a23(getTypeByASMType(((ASMVarArgType)type).getElementType(),method,classifier));
  }
  if (type instanceof ASMTypeVariable) {
    ASMTypeVariable tv=(ASMTypeVariable)type;
    if (method != null && findTypeVariableDeclaration(method,tv.getName()) != null) {
      return createTypeVariableReference(method,tv.getName());
    }
 else     if (findTypeVariableDeclaration(classifier,tv.getName()) != null) {
      return createTypeVariableReference(classifier,tv.getName());
    }
 else {
      return getTypeByASMType(ASMClassType.OBJECT,method,classifier);
    }
  }
  if (type instanceof ASMClassType) {
    ASMClassType c=(ASMClassType)type;
    SNode classifierType=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ClassifierType",null);
    addClassifierReference(classifierType,"classifier",c);
    return classifierType;
  }
  if (type instanceof ASMParameterizedType) {
    ASMParameterizedType pt=(ASMParameterizedType)type;
    SNode rawType=SNodeOperations.cast(getTypeByASMType(pt.getRawType(),method,classifier),"jetbrains.mps.baseLanguage.structure.ClassifierType");
    addTypeParameters(pt.getActualTypeArguments(),method,classifier,rawType);
    return rawType;
  }
  if (type instanceof ASMExtendsType) {
    ASMExtendsType e=(ASMExtendsType)type;
    if (e.getBound() instanceof ASMClassType) {
      ASMClassType ct=(ASMClassType)e.getBound();
      if (ct.getName().equals("java.lang.Object")) {
        return SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.WildCardType",null);
      }
    }
    return _quotation_createNode_ol94f8_a2a41a23(getTypeByASMType(e.getBound(),method,classifier));
  }
  if (type instanceof ASMSuperType) {
    ASMSuperType e=(ASMSuperType)type;
    return _quotation_createNode_ol94f8_a1a51a23(getTypeByASMType(e.getBound(),method,classifier));
  }
  if (type instanceof ASMUnboundedType) {
    return SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.WildCardType",null);
  }
  if (LOG.isEnabledFor(Level.ERROR)) {
    LOG.error("Can't convert type " + type + " class : ");
  }
  return SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.Type",null);
}
