{
  for (  ASMField field : ac.getDeclaredFields()) {
    if (field.isPrivate() && mySkipPrivate) {
      continue;
    }
    if (!(field.isStatic())) {
      continue;
    }
    if (field.isCompilerGenerated()) {
      continue;
    }
    if (field.isEnumConstant()) {
      SNode enumClass=SNodeOperations.cast(cls,"jetbrains.mps.baseLanguage.structure.EnumClass");
      SNode ecd=_quotation_createNode_ol94f8_a0b0d0a0j(cm,ASMNodeId.createId(ac,field),field.getName());
      ListSequence.fromList(SLinkOperations.getTargets(enumClass,"enumConstant",true)).addElement(ecd);
    }
 else {
      SNode decl=_quotation_createNode_ol94f8_a0a0a3a0a9(cm,ASMNodeId.createId(ac,field),createVisibility(field),getTypeByASMType(field.getGenericType(),null,cls),field.getName());
      SPropertyOperations.set(decl,"isDeprecated","" + (field.isDeprecated()));
      for (      ASMAnnotation annotation : field.getAnnotations()) {
        ListSequence.fromList(SLinkOperations.getTargets(decl,"annotation",true)).addElement(createAnnotation(annotation));
      }
      if (field.isFinal()) {
        SPropertyOperations.set(decl,"isFinal","" + (true));
        if (field.hasValue()) {
          Object value=field.getValue();
          if (value instanceof Integer) {
            SLinkOperations.setTarget(decl,"initializer",_quotation_createNode_ol94f8_a0a0b0b0d0a3a0a9(cm,value.toString()),true);
          }
 else           if (value instanceof String) {
            SLinkOperations.setTarget(decl,"initializer",_quotation_createNode_ol94f8_a0a0a1a1a3a0d0a0j(cm,(String)value),true);
          }
        }
      }
      ListSequence.fromList(SLinkOperations.getTargets(cls,"staticField",true)).addElement(decl);
    }
  }
}
