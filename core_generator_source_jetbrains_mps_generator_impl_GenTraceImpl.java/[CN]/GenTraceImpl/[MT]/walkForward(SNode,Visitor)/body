{
  Phase ph=findPhaseForInput(inputNode);
  if (ph == null) {
    return;
  }
  ArrayList<SNodeId> nodes=new ArrayList<SNodeId>();
  final SNodeId startNodeId=inputNode.getNodeId();
  nodes.add(startNodeId);
  for (; ph != null && !nodes.isEmpty(); ph=ph.next) {
    Collection<Element> changes=ph.getChangesWithInput(nodes);
    dispatch(v,ph,changes);
    if (!changes.isEmpty()) {
      LinkedHashSet<SNodeId> nextInputs=new LinkedHashSet<SNodeId>();
      for (      Element e : changes) {
        nextInputs.add(e.output);
      }
      nextInputs.add(startNodeId);
      nodes.clear();
      nodes.addAll(nextInputs);
    }
  }
}
