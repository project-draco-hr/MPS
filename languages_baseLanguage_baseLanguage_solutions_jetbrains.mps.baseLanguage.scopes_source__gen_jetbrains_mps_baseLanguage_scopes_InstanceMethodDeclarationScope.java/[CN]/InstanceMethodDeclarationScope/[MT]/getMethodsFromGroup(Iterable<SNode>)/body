{
  Iterable<SNode> nonAbstractMethods=Sequence.fromIterable(groupWithEqualSignature).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return !(((Boolean)BehaviorManager.getInstance().invoke(Boolean.class,SNodeOperations.cast(it,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration"),"virtual_isAbstract_1232982539764",new Class[]{SNode.class})));
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(it,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration");
    }
  }
);
  if (Sequence.fromIterable(nonAbstractMethods).isNotEmpty()) {
    return ((int)Sequence.fromIterable(nonAbstractMethods).count() == 1 ? nonAbstractMethods : Sequence.fromIterable(nonAbstractMethods).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SNodeOperations.getParent(it) != SNodeOperations.getNode("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)","~Object");
      }
    }
));
  }
 else {
    return super.getMethodsFromGroup(groupWithEqualSignature);
  }
}
