{
  Iterable<SNode> nonAbstractMethods=Sequence.fromIterable(groupWithEqualSignature).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return !(BaseMethodDeclaration__BehaviorDescriptor.isAbstract_idhWjv7RO.invoke(SNodeOperations.cast(it,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration"))));
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(it,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration"));
    }
  }
);
  if (Sequence.fromIterable(nonAbstractMethods).isNotEmpty()) {
    return (Sequence.fromIterable(nonAbstractMethods).count() == 1 ? nonAbstractMethods : Sequence.fromIterable(nonAbstractMethods).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SNodeOperations.getParent(it) != SNodeOperations.getNode("6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.lang(JDK/)","~Object");
      }
    }
));
  }
 else {
    return super.getMethodsFromGroup(groupWithEqualSignature);
  }
}
