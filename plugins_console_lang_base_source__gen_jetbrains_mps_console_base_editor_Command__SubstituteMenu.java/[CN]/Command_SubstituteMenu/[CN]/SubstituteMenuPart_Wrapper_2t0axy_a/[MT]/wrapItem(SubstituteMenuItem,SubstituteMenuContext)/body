{
  return new SubstituteMenuItemWrapper(item){
    private SNode myCreatedNode;
    @Nullable @Override public SAbstractConcept getOutputConcept(){
      return item.getOutputConcept();
    }
    @Nullable @Override public SNode createNode(    @NotNull String pattern){
      SNode nodeToWrap=super.createNode(pattern);
      myCreatedNode=nodeToWrap;
      SNode result=SNodeFactoryOperations.createNewNode(SNodeOperations.getModel(nodeToWrap),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xde1ad86d6e504a02L,0xb306d4d17f64c375L,0x6a40a3596560a9d9L,"jetbrains.mps.console.base.structure.BLExpression")),null);
      SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(0xde1ad86d6e504a02L,0xb306d4d17f64c375L,0x6a40a3596560a9d9L,0x6a40a3596560aa42L,"expression"),nodeToWrap);
      return result;
    }
    @Override public void select(    @NotNull SNode createdNode,    @NotNull String pattern){
      super.select(myCreatedNode,pattern);
    }
  }
;
}
