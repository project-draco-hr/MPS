{
  if (myEditedNodeReference != null) {
    e.setAttribute(EDITED_NODE,SNodePointer.serialize(myEditedNodeReference));
  }
  e.setAttribute(SAVE_SESSION_STATE,Boolean.toString(mySaveSessionState));
  Element selectionStack=new Element(SELECTION_STACK);
  e.addContent(selectionStack);
  for (  SelectionInfo selectionInfo : mySelectionStack) {
    Element stackElement=new Element(STACK_ELEMENT);
    ((SelectionInfoImpl)selectionInfo).persistToXML(stackElement);
    selectionStack.addContent(stackElement);
  }
  Element errorMarkers=new Element(ERROR_MARKERS);
  e.addContent(errorMarkers);
  for (  ErrorMarker error : myErrors) {
    error.save(errorMarkers);
  }
  Element transactionalProperties=new Element(TRANSACTIONAL_PROPERTIES);
  e.addContent(transactionalProperties);
  for (  TransactionalPropertyState transactionalProperty : myTransactionalProperties) {
    transactionalProperty.save(transactionalProperties);
  }
  saveFoldingStates(new Element(FOLDABLE),e,myFoldableStates);
  if (mySaveSessionState) {
    saveFoldingStates(new Element(INITIALLY_COLLAPSED),e,myInitiallyCollapsedStates);
  }
  saveFoldingStates(new Element(RESTORE_ALWAYS),e,myRestoreAlwaysStates);
  e.setAttribute(VIEW_POSITION_X,String.valueOf(myViewPosition.x));
  e.setAttribute(VIEW_POSITION_Y,String.valueOf(myViewPosition.y));
  if (myEnabledHints != null) {
    Element hintsElement=new Element(ENABLED_HINTS);
    for (    String hint : myEnabledHints) {
      Element hintElement=new Element(ENABLED_HINTS_ELEMENT);
      hintElement.setAttribute(ENABLED_HINTS_ATTRIBUTE,hint);
      hintsElement.addContent(hintElement);
    }
    e.addContent(hintsElement);
  }
}
