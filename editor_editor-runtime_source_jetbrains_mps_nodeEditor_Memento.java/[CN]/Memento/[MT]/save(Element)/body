{
  if (myEditedNodeReference != null) {
    e.setAttribute(EDITED_NODE,SNodePointer.serialize(myEditedNodeReference));
  }
  Element selectionStack=new Element(SELECTION_STACK);
  e.addContent(selectionStack);
  for (  SelectionInfo selectionInfo : mySelectionStack) {
    Element stackElement=new Element(STACK_ELEMENT);
    ((SelectionInfoImpl)selectionInfo).persistToXML(stackElement);
    selectionStack.addContent(stackElement);
  }
  Element errorMarkers=new Element(ERROR_MARKERS);
  e.addContent(errorMarkers);
  for (  ErrorMarker error : myErrors) {
    error.save(errorMarkers);
  }
  boolean success=true;
  Element collapsed=new Element(COLLAPSED);
  for (  Pair<CellInfo,Boolean> collapsedState : myCollapseStates) {
    if (collapsedState.o1 instanceof DefaultCellInfo) {
      Element collapsedElement=new Element(COLLAPSED_ELEMENT);
      collapsedElement.setAttribute(COLLAPSED_VALUE,collapsedState.o2.toString());
      Element cellId=new Element(CELL_ID_ELEMENT);
      ((DefaultCellInfo)collapsedState.o1).saveTo(cellId);
      collapsedElement.addContent(cellId);
      collapsed.addContent(collapsedElement);
    }
 else {
      success=false;
      break;
    }
  }
  if (success) {
    e.addContent(collapsed);
  }
  e.setAttribute(VIEW_POSITION_X,String.valueOf(myViewPosition.x));
  e.setAttribute(VIEW_POSITION_Y,String.valueOf(myViewPosition.y));
  if (myEnabledHints != null) {
    Element hintsElement=new Element(ENABLED_HINTS);
    for (    String hint : myEnabledHints) {
      Element hintElement=new Element(ENABLED_HINTS_ELEMENT);
      hintElement.setAttribute(ENABLED_HINTS_ATTRIBUTE,hint);
      hintsElement.addContent(hintElement);
    }
    e.addContent(hintsElement);
  }
}
