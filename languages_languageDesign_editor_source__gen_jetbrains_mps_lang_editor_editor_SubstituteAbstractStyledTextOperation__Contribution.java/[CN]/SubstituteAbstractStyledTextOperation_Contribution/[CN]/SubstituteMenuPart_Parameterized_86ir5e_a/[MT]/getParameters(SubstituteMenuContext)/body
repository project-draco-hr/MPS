{
  List<SConcept> emptyList=ListSequence.fromList(new ArrayList<SConcept>());
  if (!(SNodeOperations.isInstanceOf(_context.getParentNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,"jetbrains.mps.baseLanguage.structure.DotExpression")))) {
    return emptyList;
  }
  SNode operand=SLinkOperations.getTarget(SNodeOperations.cast(_context.getParentNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,"jetbrains.mps.baseLanguage.structure.DotExpression")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,0x116b46a4416L,"operand"));
  if (operand == null) {
    return emptyList;
  }
  final SNode type=TypeChecker.getInstance().getTypeOf(operand);
  List<SConcept> list=SConceptOperations.getAllSubConcepts2(MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x3ee423fc2ad10eceL,"jetbrains.mps.lang.editor.structure.AbstractStyledTextOperation"),_context.getModel());
  ListSequence.fromList(list).removeElement(MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x3ee423fc2ad10eceL,"jetbrains.mps.lang.editor.structure.AbstractStyledTextOperation"));
  return ListSequence.fromList(list).where(new IWhereFilter<SConcept>(){
    public boolean accept(    SConcept it){
      return SNodeOperations.isInstanceOf(type,MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x362b8be848e5c49bL,"jetbrains.mps.lang.editor.structure.StyledTextType"));
    }
  }
).toListSequence();
}
