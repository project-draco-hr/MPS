{
  final IRefactoring refactoring=refactoringContext.getRefactoring();
  final Project project=refactoringContext.getCurrentOperationContext().getProject();
  final com.intellij.openapi.project.Project ideaProject=ProjectHelper.toIdeaProject(project);
  final List<SModel> modelsToGenerate=getModelsToGenerate(refactoring,refactoringContext);
  SwingUtilities.invokeLater(new Runnable(){
    @Override public void run(){
      final boolean cancelled=RefactoringAccessEx.getInstance().showRefactoringDialog(ideaProject,refactoringContext,refactoring,!(modelsToGenerate.isEmpty()));
      if (!(cancelled)) {
        project.getRepository().getModelAccess().runWriteInEDT(new Runnable(){
          public void run(){
            executeSimple(refactoringContext);
          }
        }
);
      }
    }
  }
);
}
