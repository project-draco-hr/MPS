{
  try {
    final SNode newClass=SModelOperations.createNewRootNode(((SModel)((SModel)MapSequence.fromMap(_params).get("model"))),"jetbrains.mps.baseLanguage.structure.ClassConcept",null);
    AttributeOperations.setAttribute(newClass,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.lang.classLike.structure.ClassLikeAnnotation"),SConceptOperations.createNewNode("jetbrains.mps.lang.classLike.structure.ClassLikeAnnotation",null));
    SLinkOperations.setTarget(AttributeOperations.getAttribute(newClass,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.lang.classLike.structure.ClassLikeAnnotation")),"descriptor",NewClassLike_Action.this.descr,false);
    ListSequence.fromList(SLinkOperations.getTargets(NewClassLike_Action.this.descr,"method",true)).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return MethodDescriptor_Behavior.call_isRequired_3402736933911994098(it);
      }
    }
).visitAll(new IVisitor<SNode>(){
      public void visit(      SNode it){
        SNode method=Util.createConceptFunctionForDescriptor(it);
        ListSequence.fromList(SLinkOperations.getTargets(newClass,"member",true)).addElement(method);
      }
    }
);
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "NewClassLike",t);
    }
  }
}
