{
  SNode result=null;
  if (expression instanceof Literal && expression.constant != null) {
    if (expression.constant == Constant.NotAConstant) {
      result=new JavaConverterTreeBuilder.QuotationClass_m30mvz_a0a1a0a1a0().createNode(NameUtil.escapeString(new String(((Literal)expression).source())));
    }
 else {
      result=SNodeOperations.cast(dispatchRefl("processConstant",expression.constant),"jetbrains.mps.baseLanguage.structure.Expression");
    }
  }
  if ((result == null)) {
    result=SNodeOperations.cast(dispatchRefl("processExpression",expression),"jetbrains.mps.baseLanguage.structure.Expression");
  }
  if (expression != null) {
    int parenthesisCount=(expression.bits & ASTNode.ParenthesizedMASK) >> ASTNode.ParenthesizedSHIFT;
    for (int parenthsCreated=0; parenthsCreated < parenthesisCount; parenthsCreated++) {
      SNode parenthesizedExpression=SModelOperations.createNewNode(myCurrentModel,"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression",null);
      SLinkOperations.setTarget(parenthesizedExpression,"expression",result,true);
      result=parenthesizedExpression;
    }
  }
  return result;
}
