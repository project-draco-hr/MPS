{
  CompilationUnitDeclaration cud=getCUD();
  char[] content=cud.compilationResult().getCompilationUnit().getContents();
  int[][] comments=cud.comments;
  int[] lineends=cud.compilationResult().lineSeparatorPositions;
  for (  int[] comment : comments) {
    if (comment[0] == javadoc.sourceStart) {
      List<String> lines=CommentHelper.processJavadoc(CommentHelper.splitString(content,lineends,comment[0],comment[1] + 1));
      for (      String text : ListSequence.<String>fromList(lines)) {
        SNode commentLine=SModelOperations.createNewNode(myCurrentModel,"jetbrains.mps.baseLanguage.javadoc.structure.CommentLine",null);
        SPropertyOperations.set(SNodeOperations.cast(ListSequence.<SNode>fromList(SLinkOperations.getTargets(commentLine,"part",true)).getElement(0),"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart"),"text",text);
        ListSequence.<SNode>fromList(SLinkOperations.getTargets(doc,"body",true)).addElement(commentLine);
      }
      break;
    }
  }
}
