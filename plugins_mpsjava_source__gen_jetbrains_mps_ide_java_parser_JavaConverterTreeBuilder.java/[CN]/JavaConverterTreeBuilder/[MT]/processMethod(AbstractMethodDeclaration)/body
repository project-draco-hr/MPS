{
  MethodBinding b=x.binding;
  BaseMethodDeclaration method=(BaseMethodDeclaration)myTypesProvider.getRaw(b);
  if (method == null) {
    return;
  }
  try {
    if (x.isNative()) {
      throw new JavaConverterException("Native methods not supported");
    }
    myCurrentMethod=method;
    StatementList methodBody=method.getBody();
    if (methodBody == null) {
      methodBody=StatementList.newInstance(myCurrentModel);
      method.setBody(methodBody);
    }
    for (    Statement statement : processStatements(x.statements)) {
      methodBody.addStatement(statement);
    }
    addMethodParametersAnnotations(x);
    addMethodAnnotations(method,x);
    myCurrentMethod=null;
  }
 catch (  Throwable e) {
    throw new JavaConverterException(e);
  }
}
