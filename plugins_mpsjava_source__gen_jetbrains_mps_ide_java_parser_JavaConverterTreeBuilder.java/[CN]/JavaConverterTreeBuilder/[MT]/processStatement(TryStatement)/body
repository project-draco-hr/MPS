{
  SNode tryBlock=processStatementRefl(x.tryBlock);
  List<SNode> catchArgs=new ArrayList<SNode>();
  List<SNode> catchBlocks=new ArrayList<SNode>();
  SNode finallyBlock=processStatementRefl(x.finallyBlock);
  if (x.catchBlocks != null) {
    for (int i=0, c=x.catchArguments.length; i < c; ++i) {
      SNode local=SNodeOperations.cast(myTypesProvider.getRaw(x.catchArguments[i].binding),"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration");
      ListSequence.fromList(catchArgs).addElement(local);
    }
    for (int i=0, c=x.catchBlocks.length; i < c; ++i) {
      ListSequence.fromList(catchBlocks).addElement(processStatementRefl(x.catchBlocks[i]));
    }
  }
  if ((finallyBlock != null)) {
    SNode tryStatement=SModelOperations.createNewNode(myCurrentModel,"jetbrains.mps.baseLanguage.structure.TryStatement",null);
    for (int i=0; i < catchBlocks.size(); i++) {
      SNode catchBlock=ListSequence.fromList(catchBlocks).getElement(i);
      SNode lvd=ListSequence.fromList(catchArgs).getElement(i);
      SNode catchClause=SModelOperations.createNewNode(myCurrentModel,"jetbrains.mps.baseLanguage.structure.CatchClause",null);
      ListSequence.fromList(SLinkOperations.getTargets(tryStatement,"catchClause",true)).addElement(catchClause);
      SLinkOperations.setTarget(catchClause,"catchBody",getStatementListFromStatement(catchBlock,x.catchBlocks[i]),true);
      SLinkOperations.setTarget(catchClause,"throwable",lvd,true);
    }
    SLinkOperations.setTarget(tryStatement,"finallyBody",getStatementListFromStatement(finallyBlock,x.finallyBlock),true);
    SLinkOperations.setTarget(tryStatement,"body",getStatementListFromStatement(tryBlock,x.tryBlock),true);
    return tryStatement;
  }
 else {
    SNode tryCatchStatement=SModelOperations.createNewNode(myCurrentModel,"jetbrains.mps.baseLanguage.structure.TryCatchStatement",null);
    for (int i=0; i < catchBlocks.size(); i++) {
      SNode catchBlock=ListSequence.fromList(catchBlocks).getElement(i);
      SNode lvd=ListSequence.fromList(catchArgs).getElement(i);
      SNode catchClause=SModelOperations.createNewNode(myCurrentModel,"jetbrains.mps.baseLanguage.structure.CatchClause",null);
      ListSequence.fromList(SLinkOperations.getTargets(tryCatchStatement,"catchClause",true)).addElement(catchClause);
      SLinkOperations.setTarget(catchClause,"catchBody",getStatementListFromStatement(catchBlock,x.catchBlocks[i]),true);
      SLinkOperations.setTarget(catchClause,"throwable",lvd,true);
    }
    SLinkOperations.setTarget(tryCatchStatement,"body",getStatementListFromStatement(tryBlock,x.tryBlock),true);
    return tryCatchStatement;
  }
}
