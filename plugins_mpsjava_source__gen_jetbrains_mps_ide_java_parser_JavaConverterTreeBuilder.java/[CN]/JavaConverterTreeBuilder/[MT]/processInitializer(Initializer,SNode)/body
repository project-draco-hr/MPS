{
  SNode body;
  if (initializer.isStatic()) {
    SNode staticInitializer=SModelOperations.createNewNode(myCurrentModel,"jetbrains.mps.baseLanguage.structure.StaticInitializer",null);
    SLinkOperations.setTarget(classConcept,"classInitializer",staticInitializer,true);
    SLinkOperations.setTarget(staticInitializer,"statementList",SModelOperations.createNewNode(myCurrentModel,"jetbrains.mps.baseLanguage.structure.StatementList",null),true);
    body=SLinkOperations.getTarget(staticInitializer,"statementList",true);
  }
 else {
    SNode instanceInitializer=SModelOperations.createNewNode(myCurrentModel,"jetbrains.mps.baseLanguage.structure.InstanceInitializer",null);
    SLinkOperations.setTarget(classConcept,"instanceInitializer",instanceInitializer,true);
    SLinkOperations.setTarget(instanceInitializer,"statementList",SModelOperations.createNewNode(myCurrentModel,"jetbrains.mps.baseLanguage.structure.StatementList",null),true);
    body=SLinkOperations.getTarget(instanceInitializer,"statementList",true);
  }
  if (initializer.block != null && initializer.block.statements != null) {
    List<SNode> stmts=processStatements(initializer.block.statements);
    for (    SNode statement : stmts) {
      ListSequence.fromList(SLinkOperations.getTargets(body,"statement",true)).addElement(statement);
    }
  }
}
