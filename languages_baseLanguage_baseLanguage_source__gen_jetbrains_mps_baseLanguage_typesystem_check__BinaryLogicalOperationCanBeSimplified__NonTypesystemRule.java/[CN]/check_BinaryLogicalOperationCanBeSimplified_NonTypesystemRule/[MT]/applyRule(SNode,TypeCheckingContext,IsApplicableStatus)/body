{
  if (!(SNodeOperations.isInstanceOf(binaryOperation,"jetbrains.mps.baseLanguage.structure.AndExpression")) && !(SNodeOperations.isInstanceOf(binaryOperation,"jetbrains.mps.baseLanguage.structure.OrExpression"))) {
    return;
  }
  SNode left=SLinkOperations.getTarget(binaryOperation,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,1081773367580l,"leftExpression"));
  SNode right=SLinkOperations.getTarget(binaryOperation,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,1081773367579l,"rightExpression"));
  SNode eliminatedNode;
  SNode remainingNode;
  if (SNodeOperations.isInstanceOf(left,"jetbrains.mps.baseLanguage.structure.BooleanConstant")) {
    eliminatedNode=SNodeOperations.cast(left,"jetbrains.mps.baseLanguage.structure.BooleanConstant");
    remainingNode=right;
  }
 else   if (SNodeOperations.isInstanceOf(right,"jetbrains.mps.baseLanguage.structure.BooleanConstant")) {
    eliminatedNode=SNodeOperations.cast(right,"jetbrains.mps.baseLanguage.structure.BooleanConstant");
    remainingNode=left;
  }
 else {
    return;
  }
{
    MessageTarget errorTarget=new NodeMessageTarget();
    IErrorReporter _reporter_2309309498=typeCheckingContext.reportWarning(binaryOperation,"The logical expression can be simplified","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","3832376534028382760",null,errorTarget);
{
      BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.baseLanguage.typesystem.SimplifyBinaryLogicalExpressionWithBooleanConstant_QuickFix",false);
      intentionProvider.putArgument("eliminatedNode",eliminatedNode);
      intentionProvider.putArgument("remainingNode",remainingNode);
      intentionProvider.putArgument("operation",binaryOperation);
      _reporter_2309309498.addIntentionProvider(intentionProvider);
    }
  }
}
