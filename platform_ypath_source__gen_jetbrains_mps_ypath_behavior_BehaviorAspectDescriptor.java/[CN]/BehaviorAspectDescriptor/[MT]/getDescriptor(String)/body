{
switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0a,fqName)) {
case 58:
    return new TreePathType_BehaviorDescriptor();
case 55:
  return new TreePathCreator_BehaviorDescriptor();
case 23:
return new LambdaMethod_BehaviorDescriptor();
case 42:
return new ParentBlock_BehaviorDescriptor();
case 0:
return new ChildrenBlock_BehaviorDescriptor();
case 24:
return new LambdaMethodParameter_BehaviorDescriptor();
case 57:
return new TreePathOperationExpression_BehaviorDescriptor();
case 56:
return null;
case 5:
return new FromOperation_BehaviorDescriptor();
case 21:
return new IterateOperation_BehaviorDescriptor();
case 67:
return new WhereOperation_BehaviorDescriptor();
case 66:
return new WhereBlock_BehaviorDescriptor();
case 54:
return new TreePathAspect_BehaviorDescriptor();
case 53:
return new TreePathAdapterExpression_BehaviorDescriptor();
case 48:
return new TreeNodeKind_BehaviorDescriptor();
case 27:
return new MatchKindOperation_BehaviorDescriptor();
case 22:
return new KindBlock_BehaviorDescriptor();
case 50:
return new TreeNodeKindProperty_BehaviorDescriptor();
case 43:
return new PropertyGetter_BehaviorDescriptor();
case 49:
return new TreeNodeKindOccurrence_BehaviorDescriptor();
case 28:
return new MatchPropertyOperation_BehaviorDescriptor();
case 26:
return new MatchDefaultPropertyOperation_BehaviorDescriptor();
case 52:
return null;
case 51:
return new TreeNodeKindReference_BehaviorDescriptor();
case 60:
return new VisitBlock_BehaviorDescriptor();
case 30:
return null;
case 32:
return new NodeKindSpecificCase_BehaviorDescriptor();
case 31:
return new NodeKindDefaultCase_BehaviorDescriptor();
case 61:
return new VisitChildrenExpression_BehaviorDescriptor();
case 63:
return new VisitParameterDeclaration_BehaviorDescriptor();
case 65:
return new VisitParameterReference_BehaviorDescriptor();
case 45:
return new SwitchNodeKindStatement_BehaviorDescriptor();
case 62:
return new VisitNodesStatement_BehaviorDescriptor();
case 64:
return new VisitParameterDeclarationList_BehaviorDescriptor();
case 25:
return new ListFeature_BehaviorDescriptor();
case 2:
return new FeatureGetFun_BehaviorDescriptor();
case 4:
return new FeatureSizeFun_BehaviorDescriptor();
case 29:
return new NodeFunctionParam_BehaviorDescriptor();
case 20:
return new IndexFunctionParam_BehaviorDescriptor();
case 59:
return new ValueFunctionParam_BehaviorDescriptor();
case 3:
return new FeatureSequenceFun_BehaviorDescriptor();
case 14:
return null;
case 44:
return new SequenceFeature_BehaviorDescriptor();
case 37:
return new ParamFunctionParam_BehaviorDescriptor();
case 40:
return new ParameterQueryFun_BehaviorDescriptor();
case 33:
return new NodeTypeFunctionParam_BehaviorDescriptor();
case 46:
return new TargetTypeFun_BehaviorDescriptor();
case 38:
return new ParamListFeature_BehaviorDescriptor();
case 34:
return new ParamFeatureGetFun_BehaviorDescriptor();
case 35:
return new ParamFeatureSequenceFun_BehaviorDescriptor();
case 36:
return new ParamFeatureSizeFun_BehaviorDescriptor();
case 18:
return null;
case 39:
return new ParamSequenceFeature_BehaviorDescriptor();
case 17:
return null;
case 47:
return new ToStringFun_BehaviorDescriptor();
case 41:
return new ParameterWrapper_BehaviorDescriptor();
case 13:
return null;
case 9:
return new GFGetterParamFun_BehaviorDescriptor();
case 16:
return null;
case 1:
return new ExpressionFunctionParam_BehaviorDescriptor();
case 15:
return null;
case 7:
return new GFCardinalParamFun_BehaviorDescriptor();
case 19:
return null;
case 10:
return new GeneratorFunctionParam_BehaviorDescriptor();
case 6:
return null;
case 8:
return new GFGetterFun_BehaviorDescriptor();
case 11:
return new GenericFeature_BehaviorDescriptor();
case 12:
return new GenericParamFeature_BehaviorDescriptor();
default :
return null;
}
}
