{
  ExtensionPoint<ConfigurationType> configurationExtensionPoint=Extensions.getArea(null).getExtensionPoint(ConfigurationType.CONFIGURATION_TYPE_EP);
{
    Ant_Kind runConfigurationKind=new Ant_Kind();
    ListSequence.fromList(RunConfigurationsInitializer_CustomApplicationPlugin.this.myRegisteredKinds).addElement(runConfigurationKind);
    configurationExtensionPoint.registerExtension(runConfigurationKind);
  }
  _FunctionTypes._return_P1_E0<? extends Class<ConfigurationType>,? super String> getClassFunction=new _FunctionTypes._return_P1_E0<Class<ConfigurationType>,String>(){
    public Class<ConfigurationType> invoke(    String className){
      try {
        return (Class<ConfigurationType>)getClass().getClassLoader().loadClass(className);
      }
 catch (      ClassNotFoundException cl) {
        if (log.isErrorEnabled()) {
          log.error("Can not find configuration type " + className + ". Check languages dependency.",cl);
        }
        return (Class<ConfigurationType>)null;
      }
    }
  }
;
  ExtensionPoint<RuntimeConfigurationProducer> producerExtensionPoint=Extensions.getArea(null).getExtensionPoint(RuntimeConfigurationProducer.RUNTIME_CONFIGURATION_PRODUCER);
{
    ConfigurationType configurationType=ContainerUtil.findInstance(configurationExtensionPoint.getExtensions(),getClassFunction.invoke("jetbrains.mps.build.deprecated.execution.Ant_Kind"));
    if (configurationType != null) {
      List<RuntimeConfigurationProducer> configurationProducers=PackagingBuildScript_Producer.getProducers(configurationType);
      ListSequence.fromList(RunConfigurationsInitializer_CustomApplicationPlugin.this.myRegisteredProducers).addSequence(ListSequence.fromList(configurationProducers));
      for (      RuntimeConfigurationProducer producer : ListSequence.fromList(configurationProducers)) {
        producerExtensionPoint.registerExtension(producer);
      }
    }
  }
{
    ConfigurationType configurationType=ContainerUtil.findInstance(configurationExtensionPoint.getExtensions(),getClassFunction.invoke("jetbrains.mps.build.deprecated.execution.Ant_Kind"));
    if (configurationType != null) {
      List<RuntimeConfigurationProducer> configurationProducers=BuildLanguageProject_Producer.getProducers(configurationType);
      ListSequence.fromList(RunConfigurationsInitializer_CustomApplicationPlugin.this.myRegisteredProducers).addSequence(ListSequence.fromList(configurationProducers));
      for (      RuntimeConfigurationProducer producer : ListSequence.fromList(configurationProducers)) {
        producerExtensionPoint.registerExtension(producer);
      }
    }
  }
{
    ConfigurationType configurationType=ContainerUtil.findInstance(configurationExtensionPoint.getExtensions(),getClassFunction.invoke("jetbrains.mps.build.deprecated.execution.Ant_Kind"));
    if (configurationType != null) {
      List<RuntimeConfigurationProducer> configurationProducers=CustomMPSApplication_Producer.getProducers(configurationType);
      ListSequence.fromList(RunConfigurationsInitializer_CustomApplicationPlugin.this.myRegisteredProducers).addSequence(ListSequence.fromList(configurationProducers));
      for (      RuntimeConfigurationProducer producer : ListSequence.fromList(configurationProducers)) {
        producerExtensionPoint.registerExtension(producer);
      }
    }
  }
}
