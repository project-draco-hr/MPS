{
  return Sequence.fromIterable(importDeclarations).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (int)Sequence.fromIterable(SNodeOperations.getReferences(it)).count() == 1 && SNodeOperations.isInstanceOf(SLinkOperations.getTargetNode(Sequence.fromIterable(SNodeOperations.getReferences(it)).first()),"jetbrains.mps.lang.core.structure.ScopeProvider");
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(SLinkOperations.getTargetNode(Sequence.fromIterable(SNodeOperations.getReferences(it)).first()),"jetbrains.mps.lang.core.structure.ScopeProvider");
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return !(ListSequence.fromList(SNodeOperations.getDescendants(it,null,false,new String[]{})).contains(child));
    }
  }
).select(new ISelector<SNode,Scope>(){
    public Scope select(    SNode it){
      return BehaviorReflection.invokeVirtual(Scope.class,it,"virtual_getScope_3734116213129936182",new Object[]{concept,child});
    }
  }
);
}
