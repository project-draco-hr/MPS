{
  SNode parent=SNodeOperations.getParent(op,null,false,false);
  do {
    SNode matchedNode_=parent;
{
      boolean matches_=false;
{
        SNode matchingNode_=parent;
        if (matchingNode_ != null) {
          matches_=SModelUtil_new.isAssignableConcept(matchingNode_.getConceptFqName(),"jetbrains.mps.baseLanguage.ext.collections.lang.structure.SequenceOperationExpression");
        }
      }
      if (matches_) {
        TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_61().createNode(),op,"jetbrains.mps.baseLanguage.ext.collections.lang.helgins","1205249562571");
        break;
      }
    }
{
      boolean matches_1=false;
{
        SNode matchingNode_1=parent;
        if (matchingNode_1 != null) {
          matches_1=SModelUtil_new.isAssignableConcept(matchingNode_1.getConceptFqName(),"jetbrains.mps.baseLanguage.structure.DotExpression");
        }
      }
      if (matches_1) {
        TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_13().createNode(),op,"jetbrains.mps.baseLanguage.ext.collections.lang.helgins","1178725705153");
        break;
      }
    }
{
      BaseIntentionProvider intentionProvider=null;
      TypeChecker.getInstance().reportTypeError(op,"not expected here","jetbrains.mps.baseLanguage.ext.collections.lang.helgins@20_0","1217434997574",intentionProvider);
    }
  }
 while (false);
}
