{
  String sourceQueryAspectMethodName=macro.getSourceQueryAspectMethodName();
  SourceSubstituteMacro_SourceNodeQuery query=macro.getSourceNodeQuery();
  if (query == null && sourceQueryAspectMethodName == null) {
    return currentInputNode;
  }
  if (query != null) {
    return GeneratorUtil.evaluateSourceNodeQuery(currentInputNode,query,generator);
  }
  String methodName="templateSourceQuery_" + sourceQueryAspectMethodName;
  Object[] args=new Object[]{currentInputNode,generator};
  long startTime=System.currentTimeMillis();
  try {
    List<SNode> result=(List<SNode>)QueryMethod.invoke(methodName,args,macro.getModel());
    if (result == null || result.isEmpty()) {
      return null;
    }
    return result.get(0);
  }
 catch (  Exception e) {
    generator.showErrorMessage(currentInputNode,null,BaseAdapter.fromAdapter(macro),"couldn't evaluate macro query: " + NameUtil.shortNameFromLongName(e.getClass().getName()) + " : "+ e.getMessage());
    LOG.error(e);
  }
 finally {
    Statistics.getStatistic(Statistics.TPL).add(macro.getModel(),methodName,startTime);
  }
  return null;
}
