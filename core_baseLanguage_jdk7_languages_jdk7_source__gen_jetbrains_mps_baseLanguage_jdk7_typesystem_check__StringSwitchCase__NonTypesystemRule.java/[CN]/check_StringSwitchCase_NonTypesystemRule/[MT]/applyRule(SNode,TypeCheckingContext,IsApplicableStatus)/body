{
  Set<String> caseElements=SetSequence.fromSet(new HashSet());
  for (  SNode caseElement : SLinkOperations.getTargets(switchStatement,"case",true)) {
    if (!(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(caseElement,"expression",true),"jetbrains.mps.baseLanguage.structure.StringLiteral"))) {
{
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(SLinkOperations.getTarget(caseElement,"expression",true),"Case expression should be string literal","r:ed059f83-fdac-4e67-8269-91684666291c(jetbrains.mps.baseLanguage.jdk7.typesystem)","400642802550421757",null,errorTarget);
      }
    }
    String current=SPropertyOperations.getString(SNodeOperations.cast(SLinkOperations.getTarget(caseElement,"expression",true),"jetbrains.mps.baseLanguage.structure.StringLiteral"),"value");
    if (SetSequence.fromSet(caseElements).contains(current)) {
{
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(SLinkOperations.getTarget(caseElement,"expression",true),"Case expressions should be unique","r:ed059f83-fdac-4e67-8269-91684666291c(jetbrains.mps.baseLanguage.jdk7.typesystem)","364584182801859254",null,errorTarget);
      }
    }
    SetSequence.fromSet(caseElements).addElement(current);
  }
}
