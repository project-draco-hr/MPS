{
  PersistenceFacade facade=PersistenceFacade.getInstance();
  SNode quotedNode_2=null;
  SNode quotedNode_3=null;
  quotedNode_2=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall",null,null,false);
  quotedNode_2.setReference("classConcept",SReference.create("classConcept",quotedNode_2,facade.createModelReference("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.util(MPS.Core/jetbrains.mps.util@java_stub)"),facade.createNodeId("~NameUtil")));
  quotedNode_2.setReference("baseMethodDeclaration",SReference.create("baseMethodDeclaration",quotedNode_2,facade.createModelReference("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.util(MPS.Core/jetbrains.mps.util@java_stub)"),facade.createNodeId("~NameUtil.compactModelName(org.jetbrains.mps.openapi.model.SModelReference):java.lang.String")));
  quotedNode_3=(SNode)parameter_1;
  if (quotedNode_3 != null) {
    quotedNode_2.addChild("actualArgument",HUtil.copyIfNecessary(quotedNode_3));
  }
  return quotedNode_2;
}
