{
  setLayout(new BorderLayout());
  myContext=context;
  myModelTree=new ModelChangesTree(context){
    @Override protected void doubleClickOnNode(    SNode node){
      ModelDifferenceComponent.this.doubleClickOnNode(node);
    }
  }
;
  myModelTreeActionGroup=new DefaultActionGroup();
  myModelTreeToolBar=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,myModelTreeActionGroup,true);
  myChangesTreeActionGroup=new DefaultActionGroup();
  myChangesTreeToolBar=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,myChangesTreeActionGroup,true);
  createToolBarAndActions(myModelTree,myModelTreeActionGroup,"Model");
  createToolBarAndActions(myChangesTree,myChangesTreeActionGroup,"Changes");
  JPanel modelPanel=new JPanel(new BorderLayout());
  modelPanel.add(myModelTreeToolBar.getComponent(),BorderLayout.NORTH);
  modelPanel.add(new JScrollPane(myModelTree),BorderLayout.CENTER);
  JPanel changesPanel=new JPanel(new BorderLayout());
  changesPanel.add(myChangesTreeToolBar.getComponent(),BorderLayout.NORTH);
  changesPanel.add(new JScrollPane(myChangesTree),BorderLayout.CENTER);
  JSplitPane splitter=new JSplitPane(JSplitPane.VERTICAL_SPLIT,modelPanel,changesPanel);
  splitter.setDividerLocation(500);
  add(modelPanel,BorderLayout.CENTER);
  updateView();
}
