{
  EditorCell_Collection editorCell=EditorCell_Collection.createHorizontal(context,node);
  editorCell.setSelectable(true);
  editorCell.setDrawBorder(false);
  editorCell.setGridLayout(false);
  editorCell.setDrawBrackets(false);
  editorCell.setBracketsColor(Color.black);
  editorCell.setUsesBraces(false);
  editorCell.setCanBeFolded(false);
  if (ConceptMethodDeclaration_Editor._QueryFunction_NodeCondition_1177755613626(node,context.getOperationContext().getScope())) {
    editorCell.addEditorCell(this.createConstantCell(context,node,"private"));
  }
  if (ConceptMethodDeclaration_Editor._QueryFunction_NodeCondition_1177755613633(node,context.getOperationContext().getScope())) {
    editorCell.addEditorCell(this.createConstantCell1(context,node,"public"));
  }
  if (ConceptMethodDeclaration_Editor._QueryFunction_NodeCondition_1177755613641(node,context.getOperationContext().getScope())) {
    editorCell.addEditorCell(this.createConstantCell2(context,node,"virtual"));
  }
  if (ConceptMethodDeclaration_Editor._QueryFunction_NodeCondition_1177758934224(node,context.getOperationContext().getScope())) {
    editorCell.addEditorCell(this.createConstantCell3(context,node,"abstract"));
  }
  editorCell.addEditorCell(this.createReturnTypeCell(context,node));
  editorCell.addEditorCell(this.createNameCell(context,node));
  editorCell.addEditorCell(this.createConstantCell4(context,node,"("));
  editorCell.addEditorCell(this.createParameterList(context,node));
  editorCell.addEditorCell(this.createConstantCell5(context,node,")"));
  editorCell.putUserObject(EditorCell.CELL_ID,node.getId() + "_1177755613135");
  editorCell.setLayoutConstraint("");
  return editorCell;
}
