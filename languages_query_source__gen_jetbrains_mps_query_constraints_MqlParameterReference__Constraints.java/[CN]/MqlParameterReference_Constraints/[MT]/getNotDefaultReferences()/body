{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("parameter",new BaseReferenceConstraintsDescriptor("parameter",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          List<SNode> result=new ArrayList<SNode>();
          SNode current=_context.getEnclosingNode();
          while ((current != null)) {
            if (SNodeOperations.isInstanceOf(current,"jetbrains.mps.query.structure.MqlParametersContainer")) {
              ListSequence.fromList(result).addSequence(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(current,"jetbrains.mps.query.structure.MqlParametersContainer"),"parameters",true)));
            }
            current=SNodeOperations.getParent(current);
          }
          return result;
        }
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_ny604g_a0a1a0a0a1a0b0a1a0;
        }
      }
;
    }
  }
);
  return references;
}
