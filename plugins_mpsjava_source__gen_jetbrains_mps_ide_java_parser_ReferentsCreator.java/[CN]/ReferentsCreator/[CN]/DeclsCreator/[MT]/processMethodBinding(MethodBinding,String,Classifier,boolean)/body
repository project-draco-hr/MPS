{
  SModel model=myReferentsCreator.myCurrentModel;
  BaseMethodDeclaration result;
  if (b != null && b.isStatic()) {
    StaticMethodDeclaration staticMethodDeclaration=StaticMethodDeclaration.newInstance(model);
    staticMethodDeclaration.setVisibility(getMethodVisibility(b));
    if (enclosingClassifier instanceof ClassConcept) {
      ClassConcept classConcept=(ClassConcept)enclosingClassifier;
      classConcept.addStaticMethod(staticMethodDeclaration);
    }
    result=staticMethodDeclaration;
  }
 else {
    InstanceMethodDeclaration instanceMethodDeclaration=(isAnnotation ? jetbrains.mps.baseLanguage.structure.AnnotationMethodDeclaration.newInstance(model) : InstanceMethodDeclaration.newInstance(model));
    if (b != null) {
      instanceMethodDeclaration.setIsAbstract(b.isAbstract());
      instanceMethodDeclaration.setVisibility(getMethodVisibility(b));
    }
    enclosingClassifier.addMethod(instanceMethodDeclaration);
    result=instanceMethodDeclaration;
  }
  if (b != null) {
    myReferentsCreator.myBindingMap.put(b,result);
    result.setIsFinal(b.isFinal());
  }
  result.setName(name);
  return result;
}
