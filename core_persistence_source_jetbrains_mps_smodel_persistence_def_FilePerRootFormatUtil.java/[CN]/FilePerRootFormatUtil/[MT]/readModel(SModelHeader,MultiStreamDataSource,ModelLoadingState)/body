{
  IModelPersistence mp=ModelPersistence.getModelPersistence(header.getPersistenceVersion());
  if (mp == null) {
    throw new ModelReadException("Couldn't read model because of unknown persistence version",null);
  }
  DefaultSModel result;
  XMLSAXHandler<ModelLoadResult> headerHandler=mp.getModelReaderHandler(targetState,header);
  InputStream in=null;
  try {
    in=dataSource.openInputStream(FilePerRootDataSource.HEADER_FILE);
    InputSource source=new InputSource(new InputStreamReader(in,FileUtil.DEFAULT_CHARSET));
    ModelPersistence.parseAndHandleExceptions(source,headerHandler,".model");
    if (headerHandler.getResult().getContentKind() != ContentKind.MODEL_HEADER) {
      throw new ModelReadException("Couldn't read model: .model file is broken",null);
    }
  }
 catch (  IOException e) {
    throw new ModelReadException("Couldn't read model: " + e.getMessage(),e,header);
  }
 finally {
    FileUtil.closeFileSafe(in);
  }
  result=(DefaultSModel)headerHandler.getResult().getModel();
  header=result.getSModelHeader();
  for (  String stream : dataSource.getAvailableStreams()) {
    if (!(stream.endsWith(FilePerRootDataSource.ROOT_EXTENSION)))     continue;
    XMLSAXHandler<ModelLoadResult> rootHandler=mp.getModelReaderHandler(targetState,header);
    in=null;
    try {
      in=dataSource.openInputStream(stream);
      InputSource source=new InputSource(new InputStreamReader(in,FileUtil.DEFAULT_CHARSET));
      ModelPersistence.parseAndHandleExceptions(source,rootHandler,stream);
      if (rootHandler.getResult().getContentKind() != ContentKind.MODEL_ROOT) {
        throw new ModelReadException("Couldn't read model: " + stream + " root file is broken",null);
      }
      if (rootHandler.getResult().getState() == ModelLoadingState.INTERFACE_LOADED) {
        headerHandler.getResult().setState(ModelLoadingState.INTERFACE_LOADED);
      }
      int count=0;
      for (      SNode rootNode : rootHandler.getResult().getModel().getRootNodes()) {
        if (count != 0) {
          throw new ModelReadException("Couldn't read model: " + stream + " root file is broken - contains more than one roots",null);
        }
        count++;
        result.addRootNode(rootNode);
      }
    }
 catch (    IOException e) {
      throw new ModelReadException("Couldn't read model: " + e.getMessage(),e,header);
    }
 finally {
      FileUtil.closeFileSafe(in);
    }
  }
  return headerHandler.getResult();
}
