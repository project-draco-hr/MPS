{
  List<SNode> coreBlocks=new ArrayList<SNode>();
  ListSequence.<SNode>fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)","8431776905956472858"));
  ListSequence.<SNode>fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)","8431776905956472940"));
  ListSequence.<SNode>fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)","8431776905956472865"));
  ListSequence.<SNode>fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)","8431776905956472896"));
  ListSequence.<SNode>fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)","8431776905956472902"));
  ListSequence.<SNode>fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)","8431776905956472907"));
  ListSequence.<SNode>fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)","5297918386943402887"));
  Iterable<IModule> coreModules=ListSequence.<SNode>fromList(coreBlocks).<SNode>translate(new ITranslator2<SNode,SNode>(){
    public Iterable<SNode> translate(    SNode it){
      return SNodeOperations.getDescendants(it,"jetbrains.mps.build.packaging.structure.Module",false,new String[]{});
    }
  }
).<IModule>select(new ISelector<SNode,IModule>(){
    public IModule select(    SNode it){
      return Module_Behavior.call_getModule_1213877515148(it);
    }
  }
);
  for (  Solution solution : ListSequence.<Solution>fromList(MPSModuleRepository.getInstance().getAllSolutions())) {
    if (solution.isStub()) {
      continue;
    }
    if (!(solution.getModuleDescriptor().isDontLoadClasses())) {
      continue;
    }
    for (    Language language : SetSequence.<Language>fromSet(solution.getDependenciesManager().getAllUsedLanguages())) {
      for (      IModule module : ListSequence.<IModule>fromList(((LanguageDependenciesManager)language.getDependenciesManager()).getRuntimeDependOnModules())) {
        if (module.getDescriptorFile() == null) {
          continue;
        }
        if (!(Sequence.<IModule>fromIterable(coreModules).contains(module))) {
          String msg="Module " + module.getModuleFqName() + " should be in core because it's a runtime of language "+ language.getModuleFqName()+ ", which is used by core solution "+ solution.getModuleFqName();
          if (log.isErrorEnabled()) {
            log.error(msg);
          }
        }
      }
    }
  }
}
