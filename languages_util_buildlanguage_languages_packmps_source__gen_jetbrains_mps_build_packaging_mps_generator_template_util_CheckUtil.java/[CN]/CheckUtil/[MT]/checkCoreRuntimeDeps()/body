{
  List<SNode> coreBlocks=new ArrayList<SNode>();
  ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)","8431776905956472858"));
  ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)","8431776905956472865"));
  ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)","8431776905956472896"));
  ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)","8431776905956472902"));
  ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)","8431776905956472907"));
  ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)","8431776905956472723"));
  ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)","5428983789737854768"));
  ListSequence.fromList(coreBlocks).addElement(SNodeOperations.getNode("r:972ae1d5-2beb-44b3-a739-a548d8eb423d(jetbrains.mps.build.mpsautobuild)","5428983789737854526"));
  Iterable<IModule> coreModules=ListSequence.fromList(coreBlocks).translate(new ITranslator2<SNode,SNode>(){
    public Iterable<SNode> translate(    SNode it){
      return SNodeOperations.getDescendants(it,"jetbrains.mps.build.packaging.structure.Module",false,new String[]{});
    }
  }
).select(new ISelector<SNode,IModule>(){
    public IModule select(    SNode it){
      return Module_Behavior.call_getModule_1213877515148(it);
    }
  }
);
  for (  Solution solution : ListSequence.fromList(MPSModuleRepository.getInstance().getAllSolutions())) {
    if (solution.isStub()) {
      continue;
    }
    if (solution.getModuleDescriptor().getCompileInMPS()) {
      continue;
    }
    for (    Language language : SetSequence.fromSet(solution.getDependenciesManager().getAllUsedLanguages())) {
      for (      ModuleReference mr : ListSequence.fromList(language.getRuntimeModulesReferences())) {
        IModule module=MPSModuleRepository.getInstance().getModule(mr);
        if (module.getDescriptorFile() == null) {
          continue;
        }
        if (!(Sequence.fromIterable(coreModules).contains(module))) {
          String msg="Module " + mr.getModuleFqName() + " should be in core because it's a runtime of language "+ language.getModuleFqName()+ ", which is used by core solution "+ solution.getModuleFqName();
          if (log.isErrorEnabled()) {
            log.error(msg);
          }
        }
      }
    }
  }
}
