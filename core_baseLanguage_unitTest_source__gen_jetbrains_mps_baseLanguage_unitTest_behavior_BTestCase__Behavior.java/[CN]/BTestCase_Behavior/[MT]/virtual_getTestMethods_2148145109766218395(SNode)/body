{
  List<SNode> result=new ArrayList<SNode>();
  if (!(SPropertyOperations.getBoolean(thisNode,"abstractClass"))) {
    ListSequence.fromList(result).addSequence(ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(thisNode,"testMethodList",true),"testMethod",true)));
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SLinkOperations.getTarget(thisNode,"superclass",true),"classifier",false),"jetbrains.mps.baseLanguage.unitTest.structure.ITestCase")) {
      ListSequence.fromList(result).addSequence(ListSequence.fromList(ITestCase_Behavior.call_getTestMethods_2148145109766218395(SNodeOperations.cast(SLinkOperations.getTarget(SLinkOperations.getTarget(thisNode,"superclass",true),"classifier",false),"jetbrains.mps.baseLanguage.unitTest.structure.ITestCase"))));
    }
  }
  return result;
}
