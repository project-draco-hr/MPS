{
  if (ListSequence.fromList(SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.lang.editor.diagram.structure.CellModel_DiagramNode")).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SLinkOperations.getTarget(it,"actionMap",false) == null;
    }
  }
).isNotEmpty() || ListSequence.fromList(SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.lang.editor.diagram.structure.CellModel_DiagramConnector")).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SLinkOperations.getTarget(it,"actionMap",false) == null;
    }
  }
).isNotEmpty()) {
    SNode de=SModelOperations.createNewNode(_context.getModel(),null,"jetbrains.mps.baseLanguage.structure.DotExpression");
    SLinkOperations.setTarget(de,"operand",SConceptOperations.createNewNode("jetbrains.mps.lang.editor.structure.CellActionMap_FunctionParm_selectedNode",null),true);
    SLinkOperations.setTarget(de,"operation",SConceptOperations.createNewNode("jetbrains.mps.lang.smodel.structure.Node_DeleteOperation",null),true);
    final SNode defaultActionMap=_quotation_createNode_x583g4_a0d0a0mg(de,_context.createUniqueName("DefaultDiagramElementActionMap",null));
    SModelOperations.addRootNode(_context.getModel(),defaultActionMap);
    ListSequence.fromList(SModelOperations.getNodes(_context.getInputModel(),"jetbrains.mps.lang.editor.diagram.structure.CellModel_DiagramNode")).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SLinkOperations.getTarget(it,"actionMap",false) == null;
      }
    }
).visitAll(new IVisitor<SNode>(){
      public void visit(      SNode it){
        SLinkOperations.setTarget(it,"actionMap",defaultActionMap,false);
      }
    }
);
    ListSequence.fromList(SModelOperations.getNodes(_context.getInputModel(),"jetbrains.mps.lang.editor.diagram.structure.CellModel_DiagramConnector")).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SLinkOperations.getTarget(it,"actionMap",false) == null;
      }
    }
).visitAll(new IVisitor<SNode>(){
      public void visit(      SNode it){
        SLinkOperations.setTarget(it,"actionMap",defaultActionMap,false);
      }
    }
);
  }
}
