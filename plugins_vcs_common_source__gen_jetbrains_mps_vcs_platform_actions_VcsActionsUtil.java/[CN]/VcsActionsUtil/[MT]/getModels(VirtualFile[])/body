{
  if (virtualFiles != null) {
    return Sequence.fromIterable(Sequence.fromArray(virtualFiles)).where(new IWhereFilter<VirtualFile>(){
      public boolean accept(      VirtualFile vf){
        return vf.isInLocalFileSystem() && vf.exists() && !(vf.isDirectory());
      }
    }
).select(new ISelector<VirtualFile,SModelDescriptor>(){
      public SModelDescriptor select(      VirtualFile vf){
        return ((SModelDescriptor)SModelRepository.getInstance().findModel(VirtualFileUtils.toIFile(vf)));
      }
    }
).where(new IWhereFilter<SModelDescriptor>(){
      public boolean accept(      SModelDescriptor m){
        return m != null;
      }
    }
).toListSequence();
  }
 else {
    return ListSequence.fromList(new ArrayList<SModelDescriptor>());
  }
}
