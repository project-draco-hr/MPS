{
  try {
    DataSource source=model.getSource();
    IFile iFile=null;
    if (source instanceof FileDataSource) {
      iFile=((FileDataSource)source).getFile();
    }
 else     if (source instanceof FilePerRootDataSource) {
      String rootName=ModelAccess.instance().runReadAction(new Computable<String>(){
        public String compute(){
          return node.getName();
        }
      }
);
      iFile=((FilePerRootDataSource)source).getFile(rootName + "." + MPSExtentions.MODEL_ROOT);
    }
    VirtualFile vFile=VirtualFileUtils.getVirtualFile(iFile);
    AbstractVcs vcs=ProjectLevelVcsManager.getInstance(project).getVcsFor(vFile);
    VcsRevisionNumber revisionNumber=vcs.getDiffProvider().getCurrentRevision(vFile);
    ContentRevision content=vcs.getDiffProvider().createFileContent(revisionNumber,vFile);
    SModel oldModel=PersistenceUtil.loadModel(content.getContent(),MPSExtentions.MODEL);
    final Wrappers._T<SModel> newModel=new Wrappers._T<SModel>();
    final Wrappers._T<SNodeId> id=new Wrappers._T<SNodeId>();
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        newModel.value=node.getModel();
        id.value=node.getNodeId();
      }
    }
);
    String[] titles={revisionNumber.asString() + " (Read-Only)","Your Version"};
    ModelDifferenceDialog.showRootDifference(project,oldModel,newModel.value,id.value,titles[0],titles[1],bounds,null);
  }
 catch (  VcsException e) {
    if (LOG.isEnabledFor(Level.WARN)) {
      LOG.warn("",e);
    }
    Messages.showErrorDialog(project,"Can't show difference due to the following error: " + e.getMessage(),"Error");
  }
}
