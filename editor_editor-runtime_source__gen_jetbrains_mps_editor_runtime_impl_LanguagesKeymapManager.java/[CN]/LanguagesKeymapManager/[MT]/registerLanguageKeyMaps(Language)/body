{
  SModel editorModelDescriptor=LanguageAspect.EDITOR.get(language);
  SModel editorModel=(editorModelDescriptor != null ? editorModelDescriptor : null);
  List<KeyMap> keyMaps;
  if (editorModel != null) {
    keyMaps=ListSequence.fromList(new ArrayList<KeyMap>());
    for (    SNode keyMapDeclaration : ListSequence.fromList(SModelOperations.roots(editorModel,MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0xfbc216b31bL,"jetbrains.mps.lang.editor.structure.CellKeyMapDeclaration")))) {
      Class<KeyMap> keyMapClass=findKeyMapClassByDeclaration(keyMapDeclaration);
      if (keyMapClass != null) {
        try {
          KeyMap keyMap=keyMapClass.newInstance();
          if (keyMap.isApplicableToEveryModel()) {
            ListSequence.fromList(keyMaps).addElement(keyMap);
          }
        }
 catch (        InstantiationException e) {
          if (LOG.isEnabledFor(Level.ERROR)) {
            LOG.error("",e);
          }
        }
catch (        IllegalAccessException e) {
          if (LOG.isEnabledFor(Level.ERROR)) {
            LOG.error("",e);
          }
        }
      }
    }
  }
 else {
    keyMaps=Collections.emptyList();
  }
  MapSequence.fromMap(myLanguagesToKeyMaps).put(language,keyMaps);
}
