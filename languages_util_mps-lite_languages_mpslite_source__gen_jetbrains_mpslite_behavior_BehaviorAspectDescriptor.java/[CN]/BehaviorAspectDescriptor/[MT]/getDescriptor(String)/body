{
switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0a,fqName)) {
case 12:
    return new Line_BehaviorDescriptor();
case 8:
  return new ConstantLinePart_BehaviorDescriptor();
case 11:
return new IndentLinePart_BehaviorDescriptor();
case 7:
return new ConcreteReferencePart_BehaviorDescriptor();
case 17:
return new OptionalPart_BehaviorDescriptor();
case 5:
return new ConcreteChildPart_BehaviorDescriptor();
case 14:
return new MPSLiteConceptDeclaration_BehaviorDescriptor();
case 13:
return new LineList_BehaviorDescriptor();
case 6:
return new ConcretePropertyPart_BehaviorDescriptor();
case 15:
return new MPSLiteConceptReference_BehaviorDescriptor();
case 18:
return new RegularConceptReference_BehaviorDescriptor();
case 0:
return new BinaryOperationConcept_BehaviorDescriptor();
case 10:
return new FeatureAccessConcept_BehaviorDescriptor();
case 21:
return new VariableConcept_BehaviorDescriptor();
case 16:
return new NamePropertyNamePart_BehaviorDescriptor();
case 20:
return new TypePart_BehaviorDescriptor();
case 4:
return new ConceptContainer_BehaviorDescriptor();
case 19:
return new StatementConcept_BehaviorDescriptor();
case 9:
return new ExpressionConcept_BehaviorDescriptor();
case 2:
return new BlockConcept_BehaviorDescriptor();
case 1:
return new BlockBodyPart_BehaviorDescriptor();
case 3:
return new BlockReference_BehaviorDescriptor();
default :
return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
}
}
