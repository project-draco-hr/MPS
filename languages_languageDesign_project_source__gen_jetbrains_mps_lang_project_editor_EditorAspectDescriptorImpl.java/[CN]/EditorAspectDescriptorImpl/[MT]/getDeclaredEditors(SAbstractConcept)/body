{
{
    SAbstractConcept cncpt=((SAbstractConcept)concept);
    Integer preIndex=indices_xbvbvu_a0a.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return Collections.<ConceptEditor>singletonList(new DevKit_Editor());
      }
    break;
case 1:
  if (true) {
    return Collections.<ConceptEditor>singletonList(new Generator_Editor());
  }
break;
case 2:
if (true) {
return Collections.<ConceptEditor>singletonList(new Language_Editor());
}
break;
case 3:
if (true) {
return Collections.<ConceptEditor>singletonList(new MappingConfigExternalRef_Editor());
}
break;
case 4:
if (true) {
return Collections.<ConceptEditor>singletonList(new MappingConfigNormalRef_Editor());
}
break;
case 5:
if (true) {
return Collections.<ConceptEditor>singletonList(new MappingConfigRefAllGlobal_Editor());
}
break;
case 6:
if (true) {
return Collections.<ConceptEditor>singletonList(new MappingConfigRefAllLocal_Editor());
}
break;
case 7:
if (true) {
return Collections.<ConceptEditor>singletonList(new MappingConfigRefSet_Editor());
}
break;
case 8:
if (true) {
return Collections.<ConceptEditor>singletonList(new MappingPriorityRule_Editor());
}
break;
case 9:
if (true) {
return Collections.<ConceptEditor>singletonList(new ModelReference_Editor());
}
break;
case 10:
if (true) {
return Collections.<ConceptEditor>singletonList(new ModelRoot_Editor());
}
break;
case 11:
if (true) {
return Collections.<ConceptEditor>singletonList(new ModuleDependency_Editor());
}
break;
case 12:
if (true) {
return Collections.<ConceptEditor>singletonList(new ModuleReference_Editor());
}
break;
case 13:
if (true) {
return Collections.<ConceptEditor>singletonList(new Solution_Editor());
}
break;
case 14:
if (true) {
return Collections.<ConceptEditor>singletonList(new SourcePath_Editor());
}
break;
case 15:
if (true) {
return Collections.<ConceptEditor>singletonList(new StubEntry_Editor());
}
break;
case 16:
if (true) {
return Collections.<ConceptEditor>singletonList(new StubSolution_Editor());
}
break;
default :
}
}
return Collections.<ConceptEditor>emptyList();
}
