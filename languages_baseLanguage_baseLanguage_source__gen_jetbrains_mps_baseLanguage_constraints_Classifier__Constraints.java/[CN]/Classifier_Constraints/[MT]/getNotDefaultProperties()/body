{
  Map<String,PropertyConstraintsDescriptor> properties=new HashMap();
  properties.put("nestedName",new BasePropertyConstraintsDescriptor("nestedName",this){
    @Override public boolean hasOwnGetter(){
      return true;
    }
    @Override public Object getValue(    SNode node){
      String propertyName="nestedName";
      return BehaviorReflection.invokeVirtual(String.class,node,"virtual_getNestedName_8540045600162184125",new Object[]{});
    }
  }
);
  properties.put("resolveInfo",new BasePropertyConstraintsDescriptor("resolveInfo",this){
    @Override public boolean hasOwnGetter(){
      return true;
    }
    @Override public Object getValue(    SNode node){
      String propertyName="resolveInfo";
      return SPropertyOperations.getString(node,"nestedName");
    }
  }
);
  properties.put("shortDescription",new BasePropertyConstraintsDescriptor("shortDescription",this){
    @Override public boolean hasOwnGetter(){
      return true;
    }
    @Override public Object getValue(    SNode node){
      String propertyName="shortDescription";
      return NodePresentationUtil.getAliasOrConceptName(node) + " (" + NameUtil.compactModelName(SNodeOperations.getModel(node).getReference())+ ")";
    }
  }
);
  return properties;
}
