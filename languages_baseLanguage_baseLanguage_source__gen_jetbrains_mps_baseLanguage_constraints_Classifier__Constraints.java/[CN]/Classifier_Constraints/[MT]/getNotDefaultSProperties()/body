{
  Map<SPropertyId,PropertyConstraintsDescriptor> properties=new HashMap<SPropertyId,PropertyConstraintsDescriptor>();
  properties.put(MetaIdFactory.propId(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,1211504562189l),new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,1211504562189l),this){
    @Override public boolean hasOwnGetter(){
      return true;
    }
    @Override public Object getValue(    SNode node){
      String propertyName="nestedName";
      return BehaviorReflection.invokeVirtual(String.class,node,"virtual_getNestedName_8540045600162184125",new Object[]{});
    }
  }
);
  properties.put(MetaIdFactory.propId(new UUID(-3554657779850784990l,-7236703803128771572l),1196978630214l,1196978656277l),new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(new UUID(-3554657779850784990l,-7236703803128771572l),1196978630214l,1196978656277l),this){
    @Override public boolean hasOwnGetter(){
      return true;
    }
    @Override public Object getValue(    SNode node){
      String propertyName="resolveInfo";
      return SPropertyOperations.getString(node,MetaAdapterFactory.getProperty(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,1211504562189l,"nestedName"));
    }
  }
);
  properties.put(MetaIdFactory.propId(new UUID(-3554657779850784990l,-7236703803128771572l),1133920641626l,1156234966388l),new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(new UUID(-3554657779850784990l,-7236703803128771572l),1133920641626l,1156234966388l),this){
    @Override public boolean hasOwnGetter(){
      return true;
    }
    @Override public Object getValue(    SNode node){
      String propertyName="shortDescription";
      return NodePresentationUtil.getAliasOrConceptName(node) + " (" + NameUtil.compactModelName(SNodeOperations.getModel(node).getReference())+ ")";
    }
  }
);
  return properties;
}
