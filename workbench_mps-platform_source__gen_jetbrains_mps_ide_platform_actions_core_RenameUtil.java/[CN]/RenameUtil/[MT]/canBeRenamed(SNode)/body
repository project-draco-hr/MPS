{
  String nameProperty=SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getChildren(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.core.structure.INamedConcept"),MetaAdapterFactory.getContainmentLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0xf979c3ba6cL,"propertyDeclaration"))).first(),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
  ConstraintsDescriptor cd=ConceptRegistry.getInstance().getConstraintsDescriptor(node.getConcept().getQualifiedName());
  PropertyConstraintsDescriptor property=cd.getProperty(nameProperty);
  if (property == null) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("RenameUtil.canBeRenamed() called for property " + nameProperty + " with no constrints descriptor. Node:"+ node.getPresentation());
    }
    return false;
  }
  return !((property.isReadOnly()));
}
