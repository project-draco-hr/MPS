{
  FileStatusManager.getInstance(myProject).removeFileStatusListener(myFileStatusListener);
  SModelRepository.getInstance().removeModelRepositoryListener(myModelRepositoryListener);
synchronized (myCurrentDifferences) {
    for (    CurrentDifference modelChangesManager : Sequence.fromIterable(MapSequence.fromMap(myCurrentDifferences).values())) {
      modelChangesManager.dispose();
    }
    MapSequence.fromMap(myCurrentDifferences).clear();
  }
  myCommandQueue.dispose();
}
