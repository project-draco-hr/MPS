{
  if (ListSequence.fromList(SLinkOperations.getTargets(iMethodCall,"typeArgument",true)).count() > 0 && ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(iMethodCall,"baseMethodDeclaration",false),"typeVariableDeclaration",true)).count() != ListSequence.fromList(SLinkOperations.getTargets(iMethodCall,"typeArgument",true)).count()) {
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(iMethodCall,"Incorrect number of type arguments for a generic method.","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","7430872850880720443",null,errorTarget);
    }
  }
 else {
    final List<SNode> vars=ListSequence.fromList(new ArrayList<SNode>());
    ListSequence.fromList(vars).addSequence(ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(iMethodCall,"baseMethodDeclaration",false),"typeVariableDeclaration",true)));
    ListSequence.fromList(SLinkOperations.getTargets(iMethodCall,"typeArgument",true)).visitAll(new IVisitor<SNode>(){
      public void visit(      SNode typeParameter){
        SNode var=ListSequence.fromList(vars).removeElementAt(0);
        if ((SLinkOperations.getTarget(var,"bound",true) != null)) {
          if (!(BehaviorReflection.invokeVirtual(Boolean.TYPE,SLinkOperations.getTarget(var,"bound",true),"virtual_isSupersetOf_1220438914705",new Object[]{typeParameter}))) {
{
              MessageTarget errorTarget=new NodeMessageTarget();
              IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(typeParameter,"The type " + typeParameter + " is not a valid substitute for the bounded parameter "+ var,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","7430872850881178173",null,errorTarget);
            }
          }
        }
      }
    }
);
  }
}
