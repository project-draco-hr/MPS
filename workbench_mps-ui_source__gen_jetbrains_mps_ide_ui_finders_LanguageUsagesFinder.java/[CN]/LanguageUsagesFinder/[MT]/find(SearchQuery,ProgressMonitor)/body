{
  SearchResults searchResults=new SearchResults();
  HashSet<SLanguage> languages=new HashSet<SLanguage>(getLanguageToLookUp(query));
  searchResults.getSearchedNodes().addAll(languages);
  Collection<SModel> models=IterableUtil.asCollection(query.getScope().getModels());
  monitor.start("Look up instances of language concepts",models.size());
  for (  SModel model : models) {
    if (monitor.isCanceled()) {
      return searchResults;
    }
    if (!(SModelStereotype.isUserModel(model))) {
      continue;
    }
    for (    SNode node : SNodeUtil.getDescendants(model)) {
      if (languages.contains(node.getConcept().getLanguage())) {
        searchResults.add(new SearchResult<SNode>(node,NODES_IN_LANGUAGE));
      }
    }
    monitor.advance(1);
  }
  monitor.done();
  return searchResults;
}
