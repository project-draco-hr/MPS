{
  SearchResults searchResults=new SearchResults();
  IHolder objectHolder=query.getObjectHolder();
  if (!((objectHolder instanceof ModuleHolder))) {
    return searchResults;
  }
  ModuleHolder moduleHolder=(ModuleHolder)objectHolder;
  IModule searchedModule=moduleHolder.getObject();
  if (searchedModule instanceof DevKit) {
    for (    Language devKiltLanguage : ((DevKit)searchedModule).getAllExportedLanguages()) {
      SearchQuery innerQuery=new SearchQuery(devKiltLanguage,query.getScope());
      searchResults.addAll(find(innerQuery,monitor));
    }
  }
  if (!((searchedModule instanceof Language))) {
    return searchResults;
  }
  Language language=(Language)searchedModule;
  IScope scope=query.getScope();
  if (scope instanceof GlobalScope) {
    for (    IModule module : (as_m2sz3c_a0a0a0j0i(scope,GlobalScope.class)).getVisibleModules()) {
      if (monitor.isCanceled()) {
        return searchResults;
      }
      if (module instanceof Solution) {
        collectUsagesInSolution(language,(Solution)module,searchResults);
      }
      if (module instanceof Language) {
        collectUsagesInLanguage(language,(Language)module,searchResults);
      }
      if (module instanceof DevKit) {
        collectUsagesInDevKit(language,(DevKit)module,searchResults);
      }
    }
  }
 else   if (query.getScope() instanceof ModelsOnlyScope) {
    searchResults.getSearchedNodes().add(language);
    for (    SModel modelDescriptor : (as_m2sz3c_a0a0b0a9a8(query.getScope(),ModelsOnlyScope.class)).getModelDescriptors()) {
      collectUsagesInModel(language,modelDescriptor,searchResults);
    }
  }
  return searchResults;
}
