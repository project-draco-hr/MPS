{
  SearchResults searchResults=new SearchResults();
  Object value=query.getObjectHolder().getObject();
  SModule searchedModule;
  if (value instanceof SModule) {
    searchedModule=((SModule)value);
  }
 else   if (value instanceof SModuleReference) {
    searchedModule=query.getScope().resolve(((SModuleReference)value));
  }
 else {
    return searchResults;
  }
  if (searchedModule instanceof DevKit) {
    for (    Language devKiltLanguage : ((DevKit)searchedModule).getAllExportedLanguages()) {
      SearchQuery innerQuery=new SearchQuery(devKiltLanguage,query.getScope());
      searchResults.addAll(find(innerQuery,monitor));
    }
  }
  if (!((searchedModule instanceof Language))) {
    return searchResults;
  }
  Language language=(Language)searchedModule;
  SearchScope scope=query.getScope();
  if (scope instanceof GlobalScope) {
    ModuleUsagesFinder moduleFinder=new ModuleUsagesFinder();
    for (    SModule module : (as_m2sz3c_a0a0b0j0d(scope,GlobalScope.class)).getModules()) {
      if (monitor.isCanceled()) {
        return searchResults;
      }
      if (module instanceof Solution) {
        moduleFinder.collectUsagesInSolution(language,(Solution)module,searchResults);
      }
      if (module instanceof Language) {
        moduleFinder.collectUsagesInLanguage(language,(Language)module,searchResults);
        for (        Generator g : ((Language)module).getGenerators()) {
          moduleFinder.collectUsagesInGenerator(language,g,searchResults);
        }
      }
      if (module instanceof DevKit) {
        moduleFinder.collectUsagesInDevKit(language,(DevKit)module,searchResults);
      }
    }
  }
 else   if (query.getScope() instanceof ModelsScope) {
    searchResults.getSearchedNodes().add(language);
    for (    SModel modelDescriptor : (as_m2sz3c_a0a0b0a9a3(query.getScope(),ModelsScope.class)).getModels()) {
      collectUsagesInModel(language,modelDescriptor,searchResults);
    }
  }
  return searchResults;
}
