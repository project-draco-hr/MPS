{
  this.addNodeById("2906110183022219846");
  this.addNodeById("2906110183022219807");
  this.addNodeById("2906110183022219843");
  this.addNodeById("2906110183022354865");
  this.addNodeById("2906110183022432276");
  TestUtilities.assertEquals(Sequence.fromArray(new SNode[]{SNodeOperations.cast(this.getNodeById("2906110183022311236"),MetaAdapterFactory.getConcept(0xb02ae39f4c164545L,0x8dfa88df16804e7eL,0x7a02788de4ab4dL,"jetbrains.mps.lang.smodelTests.structure.ChildSubConcept"))}),Sequence.fromIterable(SNodeOperations.getReferences(SNodeOperations.cast(this.getNodeById("2906110183022354866"),MetaAdapterFactory.getConcept(0xb02ae39f4c164545L,0x8dfa88df16804e7eL,0x279bb63b8ca8b7feL,"jetbrains.mps.lang.smodelTests.structure.ReferenceContainerSubConcept")))).where(new IWhereFilter<SReference>(){
    public boolean accept(    SReference it){
      return SLinkOperations.findLinkDeclaration(it) == SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getReferenceLink(0xb02ae39f4c164545L,0x8dfa88df16804e7eL,0x798c0d67da965ac6L,0x798c0d67da965ac9L,"rightChild"));
    }
  }
).select(new ISelector<SReference,SNode>(){
    public SNode select(    SReference it){
      return SLinkOperations.getTargetNode(it);
    }
  }
));
  Assert.assertTrue(Sequence.fromIterable(SNodeOperations.getReferences(SNodeOperations.cast(this.getNodeById("2906110183022354866"),MetaAdapterFactory.getConcept(0xb02ae39f4c164545L,0x8dfa88df16804e7eL,0x279bb63b8ca8b7feL,"jetbrains.mps.lang.smodelTests.structure.ReferenceContainerSubConcept")))).where(new IWhereFilter<SReference>(){
    public boolean accept(    SReference it){
      return SLinkOperations.findLinkDeclaration(it) == SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getReferenceLink(0xb02ae39f4c164545L,0x8dfa88df16804e7eL,0x279bb63b8ca8b7feL,0x279bb63b8ca8b800L,"specializedRightChild"));
    }
  }
).isEmpty());
}
