{
  this.addNodeById("2906110183022219846");
  this.addNodeById("2906110183022219807");
  this.addNodeById("2906110183022219843");
  this.addNodeById("2906110183022354865");
  this.addNodeById("2906110183022432276");
  TestUtilities.assertEquals(Sequence.fromArray(new SNode[]{SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getReferenceLink(0xb02ae39f4c164545L,0x8dfa88df16804e7eL,0x798c0d67da965ac6L,0x798c0d67da965ac7L,"root")),SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getReferenceLink(0xb02ae39f4c164545L,0x8dfa88df16804e7eL,0x798c0d67da965ac6L,0x798c0d67da965ac8L,"leftChild")),SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getReferenceLink(0xb02ae39f4c164545L,0x8dfa88df16804e7eL,0x798c0d67da965ac6L,0x798c0d67da965ac9L,"rightChild"))}),Sequence.fromIterable(SNodeOperations.getReferences(SNodeOperations.cast(this.getNodeById("2906110183022219844"),MetaAdapterFactory.getConcept(0xb02ae39f4c164545L,0x8dfa88df16804e7eL,0x798c0d67da965ac6L,"jetbrains.mps.lang.smodelTests.structure.ReferenceContainer")))).select(new ISelector<SReference,SNode>(){
    public SNode select(    SReference it){
      return SLinkOperations.findLinkDeclaration(it);
    }
  }
));
}
