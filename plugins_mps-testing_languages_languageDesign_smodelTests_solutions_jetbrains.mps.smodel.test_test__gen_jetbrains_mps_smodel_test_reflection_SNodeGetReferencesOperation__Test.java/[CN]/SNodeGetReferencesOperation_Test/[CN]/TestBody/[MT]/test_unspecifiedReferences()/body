{
  this.addNodeById("2906110183022219846");
  this.addNodeById("2906110183022219807");
  this.addNodeById("2906110183022219843");
  this.addNodeById("2906110183022354865");
  this.addNodeById("2906110183022432276");
  int initialSize=Sequence.fromIterable(SNodeOperations.getReferences(SNodeOperations.cast(this.getNodeById("2906110183022432277"),MetaAdapterFactory.getConcept(new UUID(-5752535300696554171l,-8216104078447456642l),8758390115028851398l,"jetbrains.mps.lang.smodelTests.structure.ReferenceContainer")))).count();
  String unspecifiedReferenceName=this.addUnspecifiedReference(SNodeOperations.cast(this.getNodeById("2906110183022432277"),MetaAdapterFactory.getConcept(new UUID(-5752535300696554171l,-8216104078447456642l),8758390115028851398l,"jetbrains.mps.lang.smodelTests.structure.ReferenceContainer")),SNodeOperations.cast(this.getNodeById("2906110183022219849"),MetaAdapterFactory.getConcept(new UUID(-5752535300696554171l,-8216104078447456642l),278471160714141636l,"jetbrains.mps.lang.smodelTests.structure.GrandChild")));
  Assert.assertEquals(initialSize + 1,Sequence.fromIterable(SNodeOperations.getReferences(SNodeOperations.cast(this.getNodeById("2906110183022432277"),MetaAdapterFactory.getConcept(new UUID(-5752535300696554171l,-8216104078447456642l),8758390115028851398l,"jetbrains.mps.lang.smodelTests.structure.ReferenceContainer")))).count());
  Iterable<SReference> unspecifiedReferences=Sequence.fromIterable(SNodeOperations.getReferences(SNodeOperations.cast(this.getNodeById("2906110183022432277"),MetaAdapterFactory.getConcept(new UUID(-5752535300696554171l,-8216104078447456642l),8758390115028851398l,"jetbrains.mps.lang.smodelTests.structure.ReferenceContainer")))).where(new IWhereFilter<SReference>(){
    public boolean accept(    SReference it){
      return (SLinkOperations.findLinkDeclaration(it) == null);
    }
  }
);
  Assert.assertEquals(1,Sequence.fromIterable(unspecifiedReferences).count());
  SReference theReference=Sequence.fromIterable(unspecifiedReferences).first();
  Assert.assertEquals(unspecifiedReferenceName,SLinkOperations.getRole(theReference));
  Assert.assertEquals(SNodeOperations.cast(this.getNodeById("2906110183022219849"),MetaAdapterFactory.getConcept(new UUID(-5752535300696554171l,-8216104078447456642l),278471160714141636l,"jetbrains.mps.lang.smodelTests.structure.GrandChild")),SLinkOperations.getTargetNode(theReference));
}
