{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.lang.pattern.testLang.structure.ListValue","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.lang.pattern.testLang.structure.PatternTest","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.baseLanguage.unitTest.structure.ITestCase","jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod"},new String[]{},new String[]{});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.lang.pattern.testLang.structure.PropertyValue","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.lang.pattern.testLang.structure.TestListReference","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"listPattern"});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.lang.pattern.testLang.structure.TestPropertyVariableReference","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"declaration"});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.lang.pattern.testLang.structure.TestVariableReference","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"declaration"});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.lang.pattern.testLang.structure.VariableValue","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
