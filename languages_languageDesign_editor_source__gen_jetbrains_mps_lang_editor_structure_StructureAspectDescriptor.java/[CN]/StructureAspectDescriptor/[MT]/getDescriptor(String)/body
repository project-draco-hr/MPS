{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.AbstractComponent","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"conceptDeclaration"});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.AbstractPaddingStyleClassItem","jetbrains.mps.lang.editor.structure.FloatStyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.FloatStyleClassItem"},new String[]{"measure"},new String[]{});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.AbstractStyledTextOperation","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.structure.IOperation","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.AppendTextOperation","jetbrains.mps.lang.editor.structure.AbstractStyledTextOperation",false,new String[]{"jetbrains.mps.lang.editor.structure.AbstractStyledTextOperation"},new String[]{},new String[]{});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.AutoDeletableStyleClassItem","jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem",false,new String[]{"jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem"},new String[]{},new String[]{});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.BackgroundColorStyleClassItem","jetbrains.mps.lang.editor.structure.ColorStyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.ColorStyleClassItem"},new String[]{},new String[]{});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.BaseEditorComponent","jetbrains.mps.lang.editor.structure.AbstractComponent",false,new String[]{"jetbrains.mps.lang.editor.structure.AbstractComponent"},new String[]{},new String[]{});
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.BaseLineCell","jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem",false,new String[]{"jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem"},new String[]{},new String[]{});
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem","jetbrains.mps.lang.editor.structure.StyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.StyleClassItem"},new String[]{"flag"},new String[]{});
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.BracketColorStyleClassItem","jetbrains.mps.lang.editor.structure.ColorStyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.ColorStyleClassItem"},new String[]{},new String[]{});
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CaretPositionParameter","jetbrains.mps.lang.editor.structure.SelectParameter",false,new String[]{"jetbrains.mps.lang.editor.structure.SelectParameter"},new String[]{},new String[]{});
case 11:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellActionMapDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.structure.structure.IConceptAspect","jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"applicableConcept"});
case 12:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellActionMapItem","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{"description","actionId"},new String[]{});
case 13:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellActionMap_ExecuteFunction","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 14:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellActionMap_FunctionParm_selectedNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 15:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellKeyMapDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.structure.structure.IConceptAspect","jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"everyModel"},new String[]{"applicableConcept"});
case 16:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellKeyMapItem","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"description","caretPolicy","showInPopup","menuAlwaysShown"},new String[]{});
case 17:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellKeyMapKeystroke","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"modifiers","keycode"},new String[]{});
case 18:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellKeyMap_AbstractFunction","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 19:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellKeyMap_ExecuteFunction","jetbrains.mps.lang.editor.structure.CellKeyMap_AbstractFunction",false,new String[]{"jetbrains.mps.lang.editor.structure.CellKeyMap_AbstractFunction"},new String[]{},new String[]{});
case 20:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellKeyMap_FunctionParm_keyEvent","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 21:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellKeyMap_FunctionParm_selectedNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 22:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellKeyMap_FunctionParm_selectedNodes","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 23:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellKeyMap_IsApplicableFunction","jetbrains.mps.lang.editor.structure.CellKeyMap_AbstractFunction",false,new String[]{"jetbrains.mps.lang.editor.structure.CellKeyMap_AbstractFunction"},new String[]{},new String[]{});
case 24:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellLayout","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 25:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellLayout_Flow","jetbrains.mps.lang.editor.structure.CellLayout",false,new String[]{"jetbrains.mps.lang.editor.structure.CellLayout"},new String[]{},new String[]{});
case 26:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellLayout_Horizontal","jetbrains.mps.lang.editor.structure.CellLayout",false,new String[]{"jetbrains.mps.lang.editor.structure.CellLayout"},new String[]{},new String[]{});
case 27:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellLayout_Indent","jetbrains.mps.lang.editor.structure.CellLayout",false,new String[]{"jetbrains.mps.lang.editor.structure.CellLayout"},new String[]{},new String[]{});
case 28:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellLayout_Indent_Old","jetbrains.mps.lang.editor.structure.CellLayout",false,new String[]{"jetbrains.mps.lang.editor.structure.CellLayout"},new String[]{},new String[]{});
case 29:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellLayout_Superscript","jetbrains.mps.lang.editor.structure.CellLayout",false,new String[]{"jetbrains.mps.lang.editor.structure.CellLayout"},new String[]{},new String[]{});
case 30:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellLayout_Table","jetbrains.mps.lang.editor.structure.CellLayout",false,new String[]{"jetbrains.mps.lang.editor.structure.CellLayout"},new String[]{},new String[]{});
case 31:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellLayout_Vertical","jetbrains.mps.lang.editor.structure.CellLayout",false,new String[]{"jetbrains.mps.lang.editor.structure.CellLayout"},new String[]{},new String[]{});
case 32:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellLayout_VerticalGrid","jetbrains.mps.lang.editor.structure.CellLayout_Vertical",false,new String[]{"jetbrains.mps.lang.editor.structure.CellLayout_Vertical"},new String[]{},new String[]{});
case 33:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuComponent","jetbrains.mps.lang.editor.structure.AbstractComponent",false,new String[]{"jetbrains.mps.lang.editor.structure.AbstractComponent","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.structure.structure.IConceptAspect"},new String[]{},new String[]{});
case 34:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuComponentFeature","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"relationDeclaration"});
case 35:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuComponentFeature_Link","jetbrains.mps.lang.editor.structure.CellMenuComponentFeature",false,new String[]{"jetbrains.mps.lang.editor.structure.CellMenuComponentFeature"},new String[]{},new String[]{"linkDeclaration"});
case 36:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuComponentFeature_Property","jetbrains.mps.lang.editor.structure.CellMenuComponentFeature",false,new String[]{"jetbrains.mps.lang.editor.structure.CellMenuComponentFeature"},new String[]{},new String[]{"propertyDeclaration"});
case 37:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuDescriptor","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 38:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 39:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_AbstractGroup","jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract",false,new String[]{"jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract"},new String[]{"presentation"},new String[]{});
case 40:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_AbstractGroup_DescriptionText","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 41:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_AbstractGroup_MatchingText","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 42:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_AbstractGroup_Query","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 43:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_AbstractGroup_parameterObject","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 44:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract_editedNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 45:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_ApplySideTransforms","jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract",false,new String[]{"jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract"},new String[]{"side"},new String[]{});
case 46:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_CellMenuComponent","jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract",false,new String[]{"jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract"},new String[]{},new String[]{"cellMenuComponent"});
case 47:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_Generic_Group","jetbrains.mps.lang.editor.structure.CellMenuPart_AbstractGroup",false,new String[]{"jetbrains.mps.lang.editor.structure.CellMenuPart_AbstractGroup"},new String[]{},new String[]{});
case 48:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_Generic_Group_Handler","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 49:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_Generic_Item","jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract",false,new String[]{"jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract"},new String[]{"matchingText"},new String[]{});
case 50:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_Generic_Item_Handler","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 51:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_PropertyPostfixHints","jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract",false,new String[]{"jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 52:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_PropertyPostfixHints_GetPostfixes","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 53:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_PropertyValues","jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract",false,new String[]{"jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 54:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_PropertyValues_GetValues","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 55:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_ReferentPrimary","jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract",false,new String[]{"jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 56:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_ReplaceChildPrimary","jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract",false,new String[]{"jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 57:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_ReplaceChild_CustomChildConcept","jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract",false,new String[]{"jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 58:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_ReplaceChild_CustomChildConcept_Query","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 59:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_ReplaceChild_Group","jetbrains.mps.lang.editor.structure.CellMenuPart_AbstractGroup",false,new String[]{"jetbrains.mps.lang.editor.structure.CellMenuPart_AbstractGroup","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 60:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_ReplaceChild_Group_Create","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 61:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_ReplaceChild_Group_Query","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 62:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_ReplaceChild_Item","jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract",false,new String[]{"jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{"matchingText","descriptionText"},new String[]{});
case 63:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_ReplaceChild_Item_Create","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 64:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_ReplaceChild_currentChild","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 65:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_ReplaceChild_defaultConceptOfChild","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 66:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_ReplaceNode_CustomNodeConcept","jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract",false,new String[]{"jetbrains.mps.lang.editor.structure.CellMenuPart_Abstract"},new String[]{},new String[]{"replacementConcept"});
case 67:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_ReplaceNode_Group","jetbrains.mps.lang.editor.structure.CellMenuPart_AbstractGroup",false,new String[]{"jetbrains.mps.lang.editor.structure.CellMenuPart_AbstractGroup"},new String[]{},new String[]{});
case 68:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellMenuPart_ReplaceNode_Group_Create","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 69:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_AbstractLabel","jetbrains.mps.lang.editor.structure.EditorCellModel",false,new String[]{"jetbrains.mps.lang.editor.structure.EditorCellModel"},new String[]{"defaultCaretPosition"},new String[]{});
case 70:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_Alternation","jetbrains.mps.lang.editor.structure.EditorCellModel",false,new String[]{"jetbrains.mps.lang.editor.structure.EditorCellModel"},new String[]{"vertical"},new String[]{});
case 71:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_AttributedLinkCell","jetbrains.mps.lang.editor.structure.EditorCellModel",false,new String[]{"jetbrains.mps.lang.editor.structure.EditorCellModel"},new String[]{},new String[]{});
case 72:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_AttributedNodeCell","jetbrains.mps.lang.editor.structure.EditorCellModel",false,new String[]{"jetbrains.mps.lang.editor.structure.EditorCellModel"},new String[]{},new String[]{});
case 73:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_AttributedPropertyCell","jetbrains.mps.lang.editor.structure.EditorCellModel",false,new String[]{"jetbrains.mps.lang.editor.structure.EditorCellModel"},new String[]{},new String[]{});
case 74:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_Block","jetbrains.mps.lang.editor.structure.EditorCellModel",false,new String[]{"jetbrains.mps.lang.editor.structure.EditorCellModel"},new String[]{"openBrace","closeBrace"},new String[]{});
case 75:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_BlockEnd","jetbrains.mps.lang.editor.structure.EditorCellModel",false,new String[]{"jetbrains.mps.lang.editor.structure.EditorCellModel"},new String[]{"closeBrace"},new String[]{});
case 76:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_BlockStart","jetbrains.mps.lang.editor.structure.EditorCellModel",false,new String[]{"jetbrains.mps.lang.editor.structure.EditorCellModel"},new String[]{"openBrace"},new String[]{});
case 77:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_Collection","jetbrains.mps.lang.editor.structure.EditorCellModel",false,new String[]{"jetbrains.mps.lang.editor.structure.EditorCellModel"},new String[]{"vertical","gridLayout","usesBraces","usesFolding"},new String[]{});
case 78:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_Component","jetbrains.mps.lang.editor.structure.EditorCellModel",false,new String[]{"jetbrains.mps.lang.editor.structure.EditorCellModel"},new String[]{},new String[]{"editorComponent"});
case 79:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_ConceptProperty","jetbrains.mps.lang.editor.structure.CellModel_WithRole",false,new String[]{"jetbrains.mps.lang.editor.structure.CellModel_WithRole"},new String[]{},new String[]{"propertyDeclaration"});
case 80:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_Constant","jetbrains.mps.lang.editor.structure.CellModel_AbstractLabel",false,new String[]{"jetbrains.mps.lang.editor.structure.CellModel_AbstractLabel"},new String[]{"text","nullText"},new String[]{});
case 81:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_Custom","jetbrains.mps.lang.editor.structure.EditorCellModel",false,new String[]{"jetbrains.mps.lang.editor.structure.EditorCellModel"},new String[]{},new String[]{});
case 82:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_Empty","jetbrains.mps.lang.editor.structure.EditorCellModel",false,new String[]{"jetbrains.mps.lang.editor.structure.EditorCellModel"},new String[]{},new String[]{});
case 83:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_Error","jetbrains.mps.lang.editor.structure.CellModel_AbstractLabel",false,new String[]{"jetbrains.mps.lang.editor.structure.CellModel_AbstractLabel"},new String[]{"text"},new String[]{});
case 84:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_Image","jetbrains.mps.lang.editor.structure.EditorCellModel",false,new String[]{"jetbrains.mps.lang.editor.structure.EditorCellModel"},new String[]{"imageFile","descent"},new String[]{});
case 85:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_Indent","jetbrains.mps.lang.editor.structure.EditorCellModel",false,new String[]{"jetbrains.mps.lang.editor.structure.EditorCellModel"},new String[]{},new String[]{});
case 86:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_JComponent","jetbrains.mps.lang.editor.structure.EditorCellModel",false,new String[]{"jetbrains.mps.lang.editor.structure.EditorCellModel"},new String[]{},new String[]{});
case 87:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_ListWithRole","jetbrains.mps.lang.editor.structure.CellModel_WithRole",false,new String[]{"jetbrains.mps.lang.editor.structure.CellModel_WithRole"},new String[]{"vertical","gridLayout","usesBraces","usesFolding","separatorText","separatorLayoutConstraint"},new String[]{});
case 88:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_ModelAccess","jetbrains.mps.lang.editor.structure.CellModel_AbstractLabel",false,new String[]{"jetbrains.mps.lang.editor.structure.CellModel_AbstractLabel"},new String[]{"nullText"},new String[]{});
case 89:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_NonEmptyProperty","jetbrains.mps.lang.editor.structure.CellModel_Property",false,new String[]{"jetbrains.mps.lang.editor.structure.CellModel_Property","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 90:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_Property","jetbrains.mps.lang.editor.structure.CellModel_WithRole",false,new String[]{"jetbrains.mps.lang.editor.structure.CellModel_WithRole"},new String[]{},new String[]{"propertyDeclaration"});
case 91:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_ReadOnlyModelAccessor","jetbrains.mps.lang.editor.structure.CellModel_AbstractLabel",false,new String[]{"jetbrains.mps.lang.editor.structure.CellModel_AbstractLabel"},new String[]{},new String[]{});
case 92:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_RefCell","jetbrains.mps.lang.editor.structure.CellModel_WithRole",false,new String[]{"jetbrains.mps.lang.editor.structure.CellModel_WithRole"},new String[]{},new String[]{"linkDeclaration"});
case 93:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_RefNode","jetbrains.mps.lang.editor.structure.CellModel_WithRole",false,new String[]{"jetbrains.mps.lang.editor.structure.CellModel_WithRole"},new String[]{},new String[]{"linkDeclaration"});
case 94:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_RefNodeList","jetbrains.mps.lang.editor.structure.CellModel_ListWithRole",false,new String[]{"jetbrains.mps.lang.editor.structure.CellModel_ListWithRole"},new String[]{"reverse"},new String[]{"linkDeclaration","elementActionMap"});
case 95:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_ReferencePresentation","jetbrains.mps.lang.editor.structure.EditorCellModel",false,new String[]{"jetbrains.mps.lang.editor.structure.EditorCellModel"},new String[]{},new String[]{});
case 96:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_TransactionalProperty","jetbrains.mps.lang.editor.structure.CellModel_AbstractLabel",false,new String[]{"jetbrains.mps.lang.editor.structure.CellModel_AbstractLabel","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{"runInCommand","allowEmptyText"},new String[]{"property"});
case 97:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_URL","jetbrains.mps.lang.editor.structure.CellModel_WithRole",false,new String[]{"jetbrains.mps.lang.editor.structure.CellModel_WithRole"},new String[]{},new String[]{"propertyDeclaration"});
case 98:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.CellModel_WithRole","jetbrains.mps.lang.editor.structure.CellModel_AbstractLabel",false,new String[]{"jetbrains.mps.lang.editor.structure.CellModel_AbstractLabel"},new String[]{"noTargetText","emptyNoTargetText","readOnly","allowEmptyText"},new String[]{"relationDeclaration"});
case 99:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.ColorStyleClassItem","jetbrains.mps.lang.editor.structure.StyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.StyleClassItem"},new String[]{"color"},new String[]{});
case 100:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.ConceptEditorDeclaration","jetbrains.mps.lang.editor.structure.BaseEditorComponent",false,new String[]{"jetbrains.mps.lang.editor.structure.BaseEditorComponent","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.structure.structure.IConceptAspect"},new String[]{},new String[]{});
case 101:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.ConceptFunctionParameter_StyledText","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 102:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.ConceptFunctionParameter_childNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 103:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.ConceptFunctionParameter_editorContext","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 104:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.ConceptFunctionParameter_nextNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 105:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.ConceptFunctionParameter_node","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 106:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.ConceptFunctionParameter_oldText","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 107:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.ConceptFunctionParameter_parameterObject","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 108:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.ConceptFunctionParameter_prevNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 109:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.ConceptFunctionParameter_selectedNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 110:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.ConceptFunctionParameter_text","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 111:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.DefaultBaseLine","jetbrains.mps.lang.editor.structure.StyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.StyleClassItem"},new String[]{"baseline"},new String[]{});
case 112:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.DefaultCaretPositionStyleClassItem","jetbrains.mps.lang.editor.structure.StyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.StyleClassItem"},new String[]{"position"},new String[]{});
case 113:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.DrawBorderStyleClassItem","jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem",false,new String[]{"jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem"},new String[]{},new String[]{});
case 114:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.DrawBracketsStyleClassItem","jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem",false,new String[]{"jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem"},new String[]{},new String[]{});
case 115:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.EditableStyleClassItem","jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem",false,new String[]{"jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem"},new String[]{},new String[]{});
case 116:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.EditorCellModel","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.editor.structure.IStyleContainer"},new String[]{"attractsFocus"},new String[]{"actionMap","keyMap","styleClass"});
case 117:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.EditorComponentDeclaration","jetbrains.mps.lang.editor.structure.BaseEditorComponent",false,new String[]{"jetbrains.mps.lang.editor.structure.BaseEditorComponent","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.structure.structure.IConceptAspect"},new String[]{},new String[]{});
case 118:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.FirstPositionAllowedStyleClassItem","jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem",false,new String[]{"jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem"},new String[]{},new String[]{});
case 119:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.FloatStyleClassItem","jetbrains.mps.lang.editor.structure.StyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.StyleClassItem"},new String[]{"value"},new String[]{});
case 120:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.FontSizeStyleClassItem","jetbrains.mps.lang.editor.structure.StyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.StyleClassItem"},new String[]{"value"},new String[]{});
case 121:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.FontStyleStyleClassItem","jetbrains.mps.lang.editor.structure.StyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.StyleClassItem"},new String[]{"style"},new String[]{});
case 122:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.ForegroundColorStyleClassItem","jetbrains.mps.lang.editor.structure.ColorStyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.ColorStyleClassItem"},new String[]{},new String[]{});
case 123:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.ForegroundNullColorStyleClassItem","jetbrains.mps.lang.editor.structure.ColorStyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.ColorStyleClassItem"},new String[]{},new String[]{});
case 124:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.HorizontalAlign","jetbrains.mps.lang.editor.structure.StyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.StyleClassItem"},new String[]{"align"},new String[]{});
case 125:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.HorizontalGapStyleClassItem","jetbrains.mps.lang.editor.structure.AbstractPaddingStyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.AbstractPaddingStyleClassItem"},new String[]{},new String[]{});
case 126:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.IQueryFunction_Color",null,true,new String[]{},new String[]{},new String[]{});
case 127:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.IStyleContainer",null,true,new String[]{},new String[]{},new String[]{});
case 128:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.IndentLayoutIndentAnchorStyleClassItem","jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem",false,new String[]{"jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem"},new String[]{},new String[]{});
case 129:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.IndentLayoutIndentStyleClassItem","jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem",false,new String[]{"jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem"},new String[]{},new String[]{});
case 130:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.IndentLayoutNewLineChildrenStyleClassItem","jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem",false,new String[]{"jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem"},new String[]{},new String[]{});
case 131:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.IndentLayoutNewLineStyleClassItem","jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem",false,new String[]{"jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem"},new String[]{},new String[]{});
case 132:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.IndentLayoutNoWrapClassItem","jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem",false,new String[]{"jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem"},new String[]{},new String[]{});
case 133:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.IndentLayoutOnNewLineStyleClassItem","jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem",false,new String[]{"jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem"},new String[]{},new String[]{});
case 134:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.IndentLayoutWrapAnchorStyleClassItem","jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem",false,new String[]{"jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem"},new String[]{},new String[]{});
case 135:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.InlineEditorComponent","jetbrains.mps.lang.editor.structure.BaseEditorComponent",false,new String[]{"jetbrains.mps.lang.editor.structure.BaseEditorComponent"},new String[]{},new String[]{});
case 136:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.InlineStyleDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.editor.structure.IStyleContainer"},new String[]{},new String[]{"parentClass"});
case 137:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.LastPositionAllowedStyleClassItem","jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem",false,new String[]{"jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem"},new String[]{},new String[]{});
case 138:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.LayoutConstraintStyleClassItem","jetbrains.mps.lang.editor.structure.StyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.StyleClassItem"},new String[]{"layoutConstraint"},new String[]{});
case 139:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.MatchingLabelStyleClassItem","jetbrains.mps.lang.editor.structure.StyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.StyleClassItem"},new String[]{"labelName","hasNoLabel"},new String[]{});
case 140:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.MaxWidthStyleClassItem","jetbrains.mps.lang.editor.structure.StyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.StyleClassItem"},new String[]{"value"},new String[]{});
case 141:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.ModelAccessor","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 142:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.NavigatableNodeStyleClassItem","jetbrains.mps.lang.editor.structure.StyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.StyleClassItem"},new String[]{},new String[]{});
case 143:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.NavigatableReferenceStyleClassItem","jetbrains.mps.lang.editor.structure.StyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.StyleClassItem"},new String[]{},new String[]{"link"});
case 144:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.PaddingBottomStyleClassItem","jetbrains.mps.lang.editor.structure.AbstractPaddingStyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.AbstractPaddingStyleClassItem"},new String[]{},new String[]{});
case 145:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.PaddingLeftStyleClassItem","jetbrains.mps.lang.editor.structure.AbstractPaddingStyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.AbstractPaddingStyleClassItem"},new String[]{},new String[]{});
case 146:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.PaddingRightStyleClassItem","jetbrains.mps.lang.editor.structure.AbstractPaddingStyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.AbstractPaddingStyleClassItem"},new String[]{},new String[]{});
case 147:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.PaddingTopStyleClassItem","jetbrains.mps.lang.editor.structure.AbstractPaddingStyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.AbstractPaddingStyleClassItem"},new String[]{},new String[]{});
case 148:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.ParametersInformationQuery","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.baseLanguage.classifiers.structure.IClassifier"},new String[]{},new String[]{"applicableConcept"});
case 149:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.ParametersInformationStyleClassItem","jetbrains.mps.lang.editor.structure.StyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.StyleClassItem"},new String[]{},new String[]{"parametersInformation"});
case 150:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.PositionChildrenStyleClassItem","jetbrains.mps.lang.editor.structure.StyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.StyleClassItem"},new String[]{"position"},new String[]{});
case 151:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.PositionStyleClassItem","jetbrains.mps.lang.editor.structure.StyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.StyleClassItem"},new String[]{"position"},new String[]{});
case 152:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.PunctuationLeftStyleClassItem","jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem",false,new String[]{"jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem"},new String[]{},new String[]{});
case 153:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.PunctuationRightStyleClassItem","jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem",false,new String[]{"jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem"},new String[]{},new String[]{});
case 154:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.QueryFunction_Boolean","jetbrains.mps.lang.editor.structure.QueryFunction_StyleParameter",false,new String[]{"jetbrains.mps.lang.editor.structure.QueryFunction_StyleParameter"},new String[]{},new String[]{});
case 155:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.QueryFunction_CellProvider","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 156:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.QueryFunction_Color","jetbrains.mps.lang.editor.structure.QueryFunction_StyleParameter",false,new String[]{"jetbrains.mps.lang.editor.structure.QueryFunction_StyleParameter","jetbrains.mps.lang.editor.structure.IQueryFunction_Color"},new String[]{},new String[]{});
case 157:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.QueryFunction_FontStyle","jetbrains.mps.lang.editor.structure.QueryFunction_StyleParameter",false,new String[]{"jetbrains.mps.lang.editor.structure.QueryFunction_StyleParameter"},new String[]{},new String[]{});
case 158:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.QueryFunction_ImagePath","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 159:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.QueryFunction_Integer","jetbrains.mps.lang.editor.structure.QueryFunction_StyleParameter",false,new String[]{"jetbrains.mps.lang.editor.structure.QueryFunction_StyleParameter"},new String[]{},new String[]{});
case 160:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.QueryFunction_IsMethodCurrent","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 161:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.QueryFunction_JComponent","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 162:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.QueryFunction_MatchingNode","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 163:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.QueryFunction_MethodPresentation","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 164:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.QueryFunction_ModelAccess_Getter","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 165:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.QueryFunction_ModelAccess_Setter","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 166:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.QueryFunction_ModelAccess_Validator","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 167:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.QueryFunction_NodeCondition","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 168:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.QueryFunction_NodeFactory","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 169:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.QueryFunction_NodeListFilter","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 170:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.QueryFunction_ParametersList","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 171:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.QueryFunction_SNode","jetbrains.mps.lang.editor.structure.QueryFunction_StyleParameter",false,new String[]{"jetbrains.mps.lang.editor.structure.QueryFunction_StyleParameter"},new String[]{},new String[]{});
case 172:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.QueryFunction_SeparatorText","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 173:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.QueryFunction_String","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 174:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.QueryFunction_StyleParameter","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 175:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.QueryFunction_Underlined","jetbrains.mps.lang.editor.structure.QueryFunction_StyleParameter",false,new String[]{"jetbrains.mps.lang.editor.structure.QueryFunction_StyleParameter"},new String[]{},new String[]{});
case 176:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.RGBColor","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.editor.structure.IQueryFunction_Color"},new String[]{"value"},new String[]{});
case 177:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.ReadOnlyModelAccessor","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 178:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.RightTransformAnchorTagWrapper","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"tag"},new String[]{});
case 179:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.ScriptKindClassItem","jetbrains.mps.lang.editor.structure.StyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.StyleClassItem"},new String[]{"script"},new String[]{});
case 180:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.SelectOperation","jetbrains.mps.lang.smodel.structure.SNodeOperation",false,new String[]{"jetbrains.mps.lang.smodel.structure.SNodeOperation"},new String[]{},new String[]{});
case 181:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.SelectParameter","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 182:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.SelectPositionParameter","jetbrains.mps.lang.editor.structure.SelectParameter",false,new String[]{"jetbrains.mps.lang.editor.structure.SelectParameter"},new String[]{"position"},new String[]{});
case 183:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.SelectableStyleSheetItem","jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem",false,new String[]{"jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem"},new String[]{},new String[]{});
case 184:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.SetBoldOperation","jetbrains.mps.lang.editor.structure.AbstractStyledTextOperation",false,new String[]{"jetbrains.mps.lang.editor.structure.AbstractStyledTextOperation"},new String[]{},new String[]{});
case 185:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.SideTransformAnchorTagStyleClassItem","jetbrains.mps.lang.editor.structure.StyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.StyleClassItem"},new String[]{"tag"},new String[]{});
case 186:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.StrikeOutStyleSheet","jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem",false,new String[]{"jetbrains.mps.lang.editor.structure.BooleanStyleSheetItem"},new String[]{},new String[]{});
case 187:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.StyleClassItem","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 188:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.StyleSheet","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{});
case 189:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.StyleSheetClass","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.baseLanguage.structure.IValidIdentifier","jetbrains.mps.lang.editor.structure.IStyleContainer"},new String[]{},new String[]{});
case 190:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.StyleSheetClassReference","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"styleSheetClass"});
case 191:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.StyledTextType","jetbrains.mps.baseLanguage.structure.Type",false,new String[]{"jetbrains.mps.baseLanguage.structure.Type"},new String[]{},new String[]{});
case 192:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.TableComponentStyleClassItem","jetbrains.mps.lang.editor.structure.StyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.StyleClassItem"},new String[]{"tableComponent"},new String[]{});
case 193:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.TextBackgroundColorSelectedStyleClassItem","jetbrains.mps.lang.editor.structure.ColorStyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.ColorStyleClassItem"},new String[]{},new String[]{});
case 194:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.TextBackgroundColorStyleClassItem","jetbrains.mps.lang.editor.structure.ColorStyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.ColorStyleClassItem"},new String[]{},new String[]{});
case 195:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.TransactionPropertyHandler_newValue","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{});
case 196:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.TransactionPropertyHandler_oldValue","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 197:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.TransactionalPropertyHandler","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 198:
return new CompiledConceptDescriptor("jetbrains.mps.lang.editor.structure.UnderlinedStyleClassItem","jetbrains.mps.lang.editor.structure.StyleClassItem",false,new String[]{"jetbrains.mps.lang.editor.structure.StyleClassItem"},new String[]{"underlined"},new String[]{});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
