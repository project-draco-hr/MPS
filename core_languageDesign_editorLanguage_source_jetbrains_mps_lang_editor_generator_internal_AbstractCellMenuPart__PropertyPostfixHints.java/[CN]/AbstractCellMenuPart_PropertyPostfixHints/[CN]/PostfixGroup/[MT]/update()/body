{
  myModel.clear();
  boolean isMatchingSomething=false;
  if (myCurrentPattern.length() > 0) {
    boolean exactMatch=false;
    for (int i=0; !(isMatchingSomething) && i < myCurrentPattern.length(); i++) {
      if (i > 0 && !Character.isUpperCase(myCurrentPattern.charAt(i))) {
        continue;
      }
      Matcher itemMatcher=this.getItemPattern(NameUtil.decapitalize(myCurrentPattern.substring(i))).matcher("");
      for (      String postfix : myPostfixes) {
        itemMatcher.reset(postfix);
        if (itemMatcher.matches()) {
          isMatchingSomething=true;
          if (postfix.equals(myCurrentPattern)) {
            exactMatch=true;
          }
          if (i != 0) {
            myModel.put(postfix,myCurrentPattern.substring(0,i) + NameUtil.capitalize(postfix));
          }
 else {
            myModel.put(postfix,postfix);
          }
        }
      }
    }
    myShowUnpostfixed=!exactMatch;
  }
  myUnpostfixedFirst=!isMatchingSomething;
  if (!(isMatchingSomething)) {
    for (    String postfix : myPostfixes) {
      if (myCurrentPattern.length() > 0) {
        myModel.put(postfix,myCurrentPattern + NameUtil.capitalize(postfix));
      }
 else {
        myModel.put(postfix,postfix);
      }
    }
  }
}
