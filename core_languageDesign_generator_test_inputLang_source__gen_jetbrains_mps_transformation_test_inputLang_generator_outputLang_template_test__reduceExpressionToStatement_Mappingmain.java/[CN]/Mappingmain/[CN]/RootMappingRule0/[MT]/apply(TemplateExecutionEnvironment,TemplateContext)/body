{
  if (!(QueriesGenerated.baseMappingRule_Condition_1209150502311(environment.getOperationContext(),new BaseMappingRuleContext(context.getInput(),null,null)))) {
    return null;
  }
  final SNode tnode1=new SNode(null,"jetbrains.mps.baseLanguage.structure.ClassConcept",false);
  tnode1.setProperty("name","out_class");
{
    final SNode tnode2=new SNode(null,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration",false);
    tnode2.setProperty("name","method");
{
      final SNode tnode3=new SNode(null,"jetbrains.mps.baseLanguage.structure.VoidType",false);
      tnode2.addChild("returnType",tnode3);
    }
{
      final SNode tnode4=new SNode(null,"jetbrains.mps.baseLanguage.structure.PublicVisibility",false);
      tnode2.addChild("visibility",tnode4);
    }
{
      final SNode inputNode5=QueriesGenerated.sourceNodeQuery_1209150187921(null,new SourceSubstituteMacroNodeContext(context.getInput(),null,context,null));
      Collection<SNode> tlist6=environment.copyNodes(Collections.singletonList(inputNode5),null);
      for (      SNode child7 : tlist6) {
        tnode2.addChild("body",child7);
      }
    }
    tnode1.addChild("method",tnode2);
  }
{
    final SNode tnode8=new SNode(null,"jetbrains.mps.baseLanguage.structure.PublicVisibility",false);
    tnode1.addChild("visibility",tnode8);
  }
  return TemplateUtil.singletonList(tnode1);
}
