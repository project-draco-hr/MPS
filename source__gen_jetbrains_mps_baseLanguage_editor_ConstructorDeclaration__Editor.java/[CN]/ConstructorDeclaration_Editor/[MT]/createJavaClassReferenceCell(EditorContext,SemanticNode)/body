{
  SemanticNode effectiveNode=node.getReferent("javaClass");
  SemanticLinkDeclaration linkDeclaration=SemanticModelUtil.getLinkDeclaration(node,"javaClass");
  if (effectiveNode == null) {
    EditorCell_Error errorCell=EditorCell_Error.create(editorContext,node,null);
    errorCell.setAction(EditorCellAction.DELETE,new CellAction_Empty());
    errorCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node,linkDeclaration));
    errorCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION,linkDeclaration);
    errorCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE,node);
    return errorCell;
  }
  AbstractCellProvider javaClass_InlineComponent=new ConstructorDeclaration_Editor_javaClass_InlineComponent(effectiveNode);
  EditorCell editorCell=javaClass_InlineComponent.createEditorCell(editorContext);
  EditorUtil.setSemanticNodeToCells(editorCell,node);
  editorCell.setAction(EditorCellAction.DELETE,new CellAction_Empty());
  editorCell.setSubstituteInfo(new DefaultReferenceSubstituteInfo(node,linkDeclaration));
  editorCell.putUserObject(EditorCell.METAINFO_LINK_DECLARATION,linkDeclaration);
  editorCell.putUserObject(EditorCell.METAINFO_SOURCE_NODE,node);
  return editorCell;
}
