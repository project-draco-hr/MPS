{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a,conceptFqName)) {
case 0:
    return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.baseLanguage.overloadedOperators.structure.BinaryOperationReference",new String[]{"jetbrains.mps.baseLanguage.overloadedOperators.structure.Operator"},new String[]{"jetbrains.mps.baseLanguage.overloadedOperators.structure.Operator"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 1:
  return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.baseLanguage.overloadedOperators.structure.CustomOperator",new String[]{"jetbrains.mps.baseLanguage.overloadedOperators.structure.Operator"},new String[]{"jetbrains.mps.baseLanguage.overloadedOperators.structure.Operator"},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 2:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.baseLanguage.overloadedOperators.structure.CustomOperatorDeclaration",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 3:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.baseLanguage.overloadedOperators.structure.CustomOperatorUsage",new String[]{"jetbrains.mps.baseLanguage.structure.BinaryOperation"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.BinaryOperation"});
case 4:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.baseLanguage.overloadedOperators.structure.LeftOperand",new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.INamedConcept"});
case 5:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.baseLanguage.overloadedOperators.structure.Operator",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"});
case 6:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.baseLanguage.overloadedOperators.structure.OverloadedBinaryOperator",new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"});
case 7:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.baseLanguage.overloadedOperators.structure.OverloadedOperatorContainer",new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"});
case 8:
return new StructureAspectDescriptor.DataBasedStructureDescriptor("jetbrains.mps.baseLanguage.overloadedOperators.structure.RightOperand",new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"});
default :
return null;
}
}
