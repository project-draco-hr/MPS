{
  int lastDot=unitFqName.lastIndexOf(".");
  if (lastDot > 0) {
    String unitPackage=unitFqName.substring(0,lastDot);
    importStubForFqName(unitPackage);
  }
  List<SNode> classifiers=myScope.getNodes(new Condition<SNode>(){
    public boolean met(    @NotNull SNode node){
      if (!(SNodeOperations.isInstanceOf(node,"jetbrains.mps.lang.textGen.structure.UnitConcept"))) {
        return false;
      }
      String nodesUnitName=((String)BehaviorManager.getInstance().invoke(Object.class,SNodeOperations.cast(SNodeOperations.cast(node,"jetbrains.mps.lang.textGen.structure.UnitConcept"),"jetbrains.mps.lang.textGen.structure.UnitConcept"),"virtual_getUnitName_3822000666564591112",new Class[]{SNode.class}));
      if (StringUtils.isEmpty(nodesUnitName)) {
        return false;
      }
      return nodesUnitName.equals(unitFqName);
    }
  }
);
  if (classifiers.isEmpty()) {
    return null;
  }
  SNode classifierType=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ClassifierType",null);
  SLinkOperations.setTarget(classifierType,"classifier",SNodeOperations.cast(classifiers.get(0),"jetbrains.mps.baseLanguage.structure.Classifier"),false);
  return classifierType;
}
