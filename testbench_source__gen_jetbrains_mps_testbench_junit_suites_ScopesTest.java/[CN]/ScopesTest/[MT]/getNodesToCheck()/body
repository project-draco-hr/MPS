{
  final Project project=initTestEnvironmentAndLoadContextProject();
  return ModelAccess.instance().runReadAction(new Computable<List<SNode[]>>(){
    public List<SNode[]> compute(){
      List<SNode[]> nodesToCheck=ListSequence.fromList(new ArrayList<SNode[]>());
      for (      SModel model : project.getProjectModels()) {
        for (        SNode root : model.getRootNodes()) {
          ListSequence.fromList(nodesToCheck).addSequence(ListSequence.fromList(SNodeOperations.getNodeDescendants(root,MetaAdapterFactory.getConcept(0x8585453e6bfb4d80L,0x98deb16074f1d86cL,0x7181d929c720809L,"jetbrains.mps.lang.test.structure.ScopesTest"),true,new SAbstractConcept[]{})).select(new ISelector<SNode,SNode[]>(){
            public SNode[] select(            SNode it){
              return new SNode[]{it};
            }
          }
));
        }
      }
      return nodesToCheck;
    }
  }
);
}
