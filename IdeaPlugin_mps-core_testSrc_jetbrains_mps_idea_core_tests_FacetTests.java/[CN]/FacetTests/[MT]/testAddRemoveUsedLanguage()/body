{
  Language baseLanguage=MPSModuleRepository.getInstance().getLanguage("jetbrains.mps.baseLanguage");
  assertNotNull(baseLanguage);
  Language editorLanguage=MPSModuleRepository.getInstance().getLanguage("jetbrains.mps.lang.editor");
  assertNotNull(editorLanguage);
  String[] usedLanguageStrings=new String[]{baseLanguage.toString(),editorLanguage.toString()};
  Language[] usedLanguages=new Language[]{baseLanguage,editorLanguage};
  MPSConfigurationBean configurationBean=myFacet.getConfiguration().getState();
  configurationBean.setUsedLanguages(usedLanguageStrings);
  myFacet.setConfiguration(configurationBean);
  flushEDT();
  List<ModuleReference> solutionUsedLanguageRefs=myFacet.getSolution().getUsedLanguagesReferences();
  Set<Language> solutionUsedLanguages=new HashSet<Language>();
  for (  ModuleReference solutionUsedLanguageRef : solutionUsedLanguageRefs) {
    solutionUsedLanguages.add(MPSModuleRepository.getInstance().getLanguage(solutionUsedLanguageRef));
  }
  assertEquals(usedLanguages.length,solutionUsedLanguages.size());
  for (  Language usedLanguage : usedLanguages) {
    assertTrue(solutionUsedLanguages.contains(usedLanguage));
  }
  configurationBean.setUsedLanguages(new String[0]);
  myFacet.setConfiguration(configurationBean);
  flushEDT();
  assertEmpty(myFacet.getSolution().getUsedLanguagesReferences());
}
