{
  CellProviderWithRole provider=new ConceptPropertyCellProvider(node,editorContext);
  provider.setRole("alias");
  provider.setNoTargetText("<no alias>");
  EditorCell editorCell;
  editorCell=provider.createEditorCell(editorContext);
  editorCell.setCellId("conceptProperty_alias");
  Styles_StyleSheet.getGenContext_operation(editorCell).apply(editorCell);
  editorCell.setSubstituteInfo(new CompositeSubstituteInfo(editorContext,provider.getCellContext(),new SubstituteInfoPart[]{new GenerationContextOp_UserObjectAccessBase_Editor.GenerationContextOp_UserObjectAccessBase_Editor_replaceWith_GenerationContextOp_UserObjectAccessBase_cellMenu_a0a0()}));
  SNode attributeConcept=provider.getRoleAttribute();
  Class attributeKind=provider.getRoleAttributeClass();
  if (attributeConcept != null) {
    IOperationContext opContext=editorContext.getOperationContext();
    EditorManager manager=EditorManager.getInstanceFromContext(opContext);
    return manager.createRoleAttributeCell(editorContext,attributeConcept,attributeKind,editorCell);
  }
 else   return editorCell;
}
