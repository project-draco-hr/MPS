{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case 0:
    return props_AfterTest;
case 1:
  return props_AssertEquals;
case 2:
return props_AssertFalse;
case 3:
return props_AssertInNotNull;
case 4:
return props_AssertIsNull;
case 5:
return props_AssertSame;
case 6:
return props_AssertThrows;
case 7:
return props_AssertTrue;
case 8:
return props_BTestCase;
case 9:
return props_BeforeTest;
case 10:
return props_BinaryAssert;
case 11:
return props_Fail;
case 12:
return props_ITestCase;
case 13:
return props_ITestMethod;
case 14:
return props_ITestable;
case 15:
return props_Message;
case 16:
return props_MessageHolder;
case 17:
return props_PrepareMethod;
case 18:
return props_TestMethod;
case 19:
return props_TestMethodList;
}
throw new IllegalStateException("Unknown concept " + c);
}
