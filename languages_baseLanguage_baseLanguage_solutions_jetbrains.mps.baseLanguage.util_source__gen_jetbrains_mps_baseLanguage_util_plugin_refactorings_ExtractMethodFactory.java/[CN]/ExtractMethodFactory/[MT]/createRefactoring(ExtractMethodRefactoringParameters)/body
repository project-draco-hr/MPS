{
  if (SNodeOperations.isInstanceOf(ListSequence.fromList(parameteres.getNodesToRefactor()).first(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068431790191l,"jetbrains.mps.baseLanguage.structure.Expression"))) {
    return new ExtractMethodFromExpressionRefactoring(parameteres);
  }
  if (ListSequence.fromList(parameteres.getAnalyzer().getOutputVariables()).isNotEmpty()) {
    return new ExtractMethodWithOutputVariable(parameteres);
  }
  SNode containerType=parameteres.getAnalyzer().getExtractMethodReafactoringProcessor().getContainerReturnType();
  if (parameteres.getAnalyzer().isAlwaysReturns() && containerType != null && !(SNodeOperations.isInstanceOf(containerType,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068581517677l,"jetbrains.mps.baseLanguage.structure.VoidType")))) {
    return new ExtractMethodWithReturn(parameteres);
  }
  if (parameteres.getAnalyzer().hasExitPoints()) {
    return new ExtractMethodWithExitPoints(parameteres);
  }
  return new ExtractMethodFromStatementsRefactoring(parameteres);
}
