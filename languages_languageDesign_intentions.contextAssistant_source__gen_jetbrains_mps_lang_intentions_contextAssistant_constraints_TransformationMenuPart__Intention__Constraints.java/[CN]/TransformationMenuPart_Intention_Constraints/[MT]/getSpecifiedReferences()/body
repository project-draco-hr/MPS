{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0xcffe907ed3de433fL,0x89d657d9c449c0e2L,0x289dadfa24b57a51L,0x289dadfa24b57a52L,"intention"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xcffe907ed3de433fL,0x89d657d9c449c0e2L,0x289dadfa24b57a51L,0x289dadfa24b57a52L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_qffvkf_a0a0a0a0a1a0b0a1a1;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return new FilteringScope(new ModelPlusImportedScope(_context.getModel(),true,MetaAdapterFactory.getConcept(0xd7a92d38f7db40d0L,0x8431763b0c3c9f20L,0x2303633a9c3cc675L,"jetbrains.mps.lang.intentions.structure.BaseIntentionDeclaration"))){
            @Override public boolean isExcluded(            SNode node){
              SNode intentionConcept=SLinkOperations.getTarget(SNodeOperations.cast(node,MetaAdapterFactory.getConcept(0xd7a92d38f7db40d0L,0x8431763b0c3c9f20L,0x2303633a9c3cc675L,"jetbrains.mps.lang.intentions.structure.BaseIntentionDeclaration")),MetaAdapterFactory.getReferenceLink(0xd7a92d38f7db40d0L,0x8431763b0c3c9f20L,0x2303633a9c3cc675L,0x2303633a9c3e6812L,"forConcept"));
              if ((intentionConcept == null)) {
                return true;
              }
              SNode menu=SNodeOperations.getNodeAncestor(_context.getContextNode(),MetaAdapterFactory.getInterfaceConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x4e0f93d8a0c11832L,"jetbrains.mps.lang.editor.structure.ITransformationMenu"),false,false);
              return !(check_qffvkf_a0e0a0a0a0a0b0a0a0b0a1a0b0b(check_qffvkf_a0a4a0a0a0a0a1a0a0a1a0b0a1a1(menu),intentionConcept));
            }
          }
;
        }
      }
;
    }
  }
);
  return references;
}
