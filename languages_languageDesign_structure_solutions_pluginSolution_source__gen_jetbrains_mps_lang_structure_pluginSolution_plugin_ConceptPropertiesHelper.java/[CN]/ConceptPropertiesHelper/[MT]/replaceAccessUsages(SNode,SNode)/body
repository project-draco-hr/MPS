{
  SNode source=SNodeOperations.cast(SNodeOperations.getParent(accessOperation),"jetbrains.mps.baseLanguage.structure.DotExpression");
  SNode operand=SLinkOperations.getTarget(source,"operand",true);
  SNode parent=SNodeOperations.getParent(source);
  String accessName=SPropertyOperations.getString(SLinkOperations.getTarget(accessOperation,"conceptProperty",false),"name");
  if (SNodeOperations.getAncestor(SLinkOperations.getTarget(accessOperation,"conceptProperty",false),"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration",false,false) == SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.core.structure.BaseConcept")) {
    if (eq_azpnkk_a0a0e0n(accessName,aliasName)) {
      migrateAccess(source,new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a0a0a4a31().createNode(operand),new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a0a0a4a31().createNode(operand));
      if (SNodeOperations.isInstanceOf(parent,"jetbrains.mps.baseLanguage.structure.DotExpression") && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(parent,"jetbrains.mps.baseLanguage.structure.DotExpression"),"operation",true),"jetbrains.mps.lang.smodel.structure.ConceptProperty_SetOperation")) {
        SNode setOperation=SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(parent,"jetbrains.mps.baseLanguage.structure.DotExpression"),"operation",true),"jetbrains.mps.lang.smodel.structure.ConceptProperty_SetOperation");
        SNodeOperations.replaceWithAnother(setOperation,SLinkOperations.getTarget(new ConceptPropertiesHelper.QuotationClass_azpnkk_a0b0b0b0a0e0n().createNode(SLinkOperations.getTarget(setOperation,"value",true)),"operation",true));
      }
      return;
    }
 else     if (eq_azpnkk_a0a0a4a31(accessName,shortDescriptionName)) {
      migrateAccess(source,new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a0a0a0e0n().createNode(operand),new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a0a0a0e0n().createNode(operand));
      return;
    }
 else     if (eq_azpnkk_a0b0a4a31(accessName,finalName)) {
      migrateAccess(source,new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a0a1a0e0n().createNode(operand),new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a0a1a0e0n().createNode(operand));
      return;
    }
 else     if (eq_azpnkk_a0c0a4a31(accessName,abstractName)) {
      migrateAccess(source,new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a0a2a0e0n().createNode(operand),new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a0a2a0e0n().createNode(operand));
      return;
    }
 else     if (eq_azpnkk_a0d0a4a31(accessName,dontSubstituteName)) {
      migrateAccess(source,new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a0a3a0e0n().createNode(operand),new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a0a3a0e0n().createNode(operand));
      return;
    }
  }
  SNode methodCall=SConceptOperations.createNewNode("jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall",null);
  SLinkOperations.setTarget(methodCall,"baseMethodDeclaration",method,false);
  migrateAccess(source,new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a7a31().createNode(operand,methodCall),new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a7a31().createNode(operand,methodCall));
}
