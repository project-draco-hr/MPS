{
  SNode source=SNodeOperations.cast(SNodeOperations.getParent(accessOperation),"jetbrains.mps.baseLanguage.structure.DotExpression");
  SNode operand=SLinkOperations.getTarget(source,"operand",true);
  SNode parent=SNodeOperations.getParent(source);
  String accessName=SPropertyOperations.getString(SLinkOperations.getTarget(accessOperation,"conceptProperty",false),"name");
  if (eq_azpnkk_a0e0o(accessName,"alias")) {
    migrateAccess(source,new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a0a4a41().createNode(operand),new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a0a4a41().createNode(operand));
    if (SNodeOperations.isInstanceOf(parent,"jetbrains.mps.baseLanguage.structure.DotExpression") && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(parent,"jetbrains.mps.baseLanguage.structure.DotExpression"),"operation",true),"jetbrains.mps.lang.smodel.structure.ConceptProperty_SetOperation")) {
      SNode setOperation=SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(parent,"jetbrains.mps.baseLanguage.structure.DotExpression"),"operation",true),"jetbrains.mps.lang.smodel.structure.ConceptProperty_SetOperation");
      SNodeOperations.replaceWithAnother(setOperation,SLinkOperations.getTarget(new ConceptPropertiesHelper.QuotationClass_azpnkk_a0b0b0b0e0o().createNode(SLinkOperations.getTarget(setOperation,"value",true)),"operation",true));
    }
  }
 else   if (eq_azpnkk_a0a4a41(accessName,"shortDescription")) {
    migrateAccess(source,new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a0a0e0o().createNode(operand),new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a0a0e0o().createNode(operand));
  }
 else   if (eq_azpnkk_a0b4a41(accessName,"final")) {
    migrateAccess(source,new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a0a1e0o().createNode(operand),new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a0a1e0o().createNode(operand));
  }
 else   if (eq_azpnkk_a0c4a41(accessName,"abstract")) {
    migrateAccess(source,new ConceptPropertiesHelper.QuotationClass_azpnkk_a1a0a2e0o().createNode(operand),new ConceptPropertiesHelper.QuotationClass_azpnkk_a2a0a2e0o().createNode(operand));
  }
 else {
    SNode methodCall=SConceptOperations.createNewNode("jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall",null);
    SLinkOperations.setTarget(methodCall,"baseMethodDeclaration",method,false);
    SNode dotExpression=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.DotExpression",null);
    SLinkOperations.setTarget(dotExpression,"operand",SNodeOperations.copyNode(SNodeOperations.cast(operand,"jetbrains.mps.baseLanguage.structure.Expression")),true);
    SLinkOperations.setTarget(dotExpression,"operation",methodCall,true);
    SNode conceptDotExpression=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.DotExpression",null);
    SLinkOperations.setTarget(conceptDotExpression,"operand",SNodeOperations.copyNode(SNodeOperations.cast(operand,"jetbrains.mps.baseLanguage.structure.Expression")),true);
    SLinkOperations.setTarget(conceptDotExpression,"operation",SConceptOperations.createNewNode("jetbrains.mps.lang.smodel.structure.Node_GetConceptOperation",null),true);
    SNode resultConceptExpression=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.DotExpression",null);
    SLinkOperations.setTarget(resultConceptExpression,"operand",conceptDotExpression,true);
    SLinkOperations.setTarget(resultConceptExpression,"operation",methodCall,true);
    migrateAccess(source,dotExpression,resultConceptExpression);
  }
}
