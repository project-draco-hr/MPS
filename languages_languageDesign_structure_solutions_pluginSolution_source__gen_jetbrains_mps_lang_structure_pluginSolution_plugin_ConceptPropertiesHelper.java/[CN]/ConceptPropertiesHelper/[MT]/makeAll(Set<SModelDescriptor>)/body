{
  if (sourceModels.isEmpty()) {
    return;
  }
  final List<org.jetbrains.mps.openapi.model.SModel> descriptors=new ArrayList<org.jetbrains.mps.openapi.model.SModel>();
  SModelRepository.getInstance().saveAll();
  for (  SModelDescriptor descriptor : sourceModels) {
    if (descriptor == null) {
      continue;
    }
    if (!(descriptor.getSModel().isDisposed()) && descriptor.isGeneratable()) {
      descriptors.add(descriptor);
    }
  }
  final IOperationContext operationContext=new ProjectOperationContext(project);
  new Thread(){
    public void run(){
      try {
        MakeSession sess=new MakeSession(operationContext);
        if (IMakeService.INSTANCE.get().openNewSession(sess)) {
          Future<IResult> result=IMakeService.INSTANCE.get().make(sess,new ModelsToResources(operationContext,descriptors).resources(false));
          result.get();
        }
      }
 catch (      InterruptedException e) {
      }
catch (      CancellationException ignore) {
      }
catch (      ExecutionException e) {
        e.printStackTrace();
      }
 finally {
      }
    }
  }
.start();
}
