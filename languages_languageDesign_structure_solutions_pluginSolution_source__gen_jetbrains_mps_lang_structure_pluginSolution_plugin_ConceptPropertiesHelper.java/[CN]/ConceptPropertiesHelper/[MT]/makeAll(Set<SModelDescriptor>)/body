{
  if (sourceModels.isEmpty()) {
    return;
  }
  final List<org.jetbrains.mps.openapi.model.SModel> descriptors=new ArrayList<org.jetbrains.mps.openapi.model.SModel>();
  SModelRepository.getInstance().saveAll();
  for (  SModelDescriptor descriptor : sourceModels) {
    if (descriptor == null) {
      continue;
    }
    if (!(descriptor.getSModel().isDisposed()) && descriptor.isGeneratable()) {
      descriptors.add(descriptor);
    }
  }
  final IOperationContext operationContext=new ProjectOperationContext(project);
  ConceptPropertiesHelper.MyThread makeThread=new ConceptPropertiesHelper.MyThread(operationContext,descriptors,this);
  makeThread.run();
synchronized (this) {
    while (!(makeThread.isReady())) {
      try {
        wait();
      }
 catch (      InterruptedException e) {
      }
    }
  }
}
