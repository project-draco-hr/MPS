{
  SNode modelComponent=null;
  SNode conceptNode=SNodeOperations.getAncestor(SLinkOperations.getTarget(cell,"relationDeclaration",false),"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration",false,false);
  if (conceptNode == SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.core.structure.BaseConcept")) {
    if (eq_azpnkk_a0a0c0p(SPropertyOperations.getString(SLinkOperations.getTarget(cell,"relationDeclaration",false),"name"),aliasName)) {
      modelComponent=_quotation_createNode_azpnkk_a0a0a0c0p(SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590284(jetbrains.mps.lang.core.editor)","2900100530630621651"));
    }
 else     if (eq_azpnkk_a0a0a2a51(SPropertyOperations.getString(SLinkOperations.getTarget(cell,"relationDeclaration",false),"name"),shortDescriptionName)) {
      modelComponent=_quotation_createNode_azpnkk_a0a0a0a2a51(SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590284(jetbrains.mps.lang.core.editor)","6639471181490591356"));
    }
  }
  if (modelComponent == null) {
    SNode methodCall=SConceptOperations.createNewNode("jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall",null);
    SLinkOperations.setTarget(methodCall,"baseMethodDeclaration",method,false);
    SNode cellModel_ReadOnlyModelAccessor=_quotation_createNode_azpnkk_a0d0d0p();
    SNode conceptFunctionParameter_node=SConceptOperations.createNewNode("jetbrains.mps.lang.editor.structure.ConceptFunctionParameter_node",null);
    SNode returnStatement;
    if (conceptNode == SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.core.structure.BaseConcept") && eq_azpnkk_a0a6a3a51(SPropertyOperations.getString(SLinkOperations.getTarget(cell,"relationDeclaration",false),"name"),dontSubstituteName)) {
      returnStatement=_quotation_createNode_azpnkk_a0a0g0d0p(conceptFunctionParameter_node);
    }
 else {
      returnStatement=_quotation_createNode_azpnkk_a0a0a6a3a51(methodCall,conceptFunctionParameter_node);
    }
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(SLinkOperations.getTarget(SLinkOperations.getTarget(cellModel_ReadOnlyModelAccessor,"modelAccessor",true),"getter",true),"body",true),"statement",true)).addElement(returnStatement);
    modelComponent=cellModel_ReadOnlyModelAccessor;
  }
  SLinkOperations.setTarget(modelComponent,"renderingCondition",SNodeOperations.copyNode(SLinkOperations.getTarget(cell,"renderingCondition",true)),true);
  SLinkOperations.setTarget(modelComponent,"menuDescriptor",SNodeOperations.copyNode(SLinkOperations.getTarget(cell,"menuDescriptor",true)),true);
  SLinkOperations.setTarget(modelComponent,"cellBackgroundFunction",SNodeOperations.copyNode(SLinkOperations.getTarget(cell,"cellBackgroundFunction",true)),true);
  SLinkOperations.setTarget(modelComponent,"focusPolicyApplicable",SNodeOperations.copyNode(SLinkOperations.getTarget(cell,"focusPolicyApplicable",true)),true);
  SLinkOperations.setTarget(modelComponent,"actionMap",SLinkOperations.getTarget(cell,"actionMap",false),false);
  SLinkOperations.setTarget(modelComponent,"keyMap",SLinkOperations.getTarget(cell,"keyMap",false),false);
  SLinkOperations.setTarget(modelComponent,"styleClass",SLinkOperations.getTarget(cell,"styleClass",false),false);
{
    Iterator<SNode> nodeChild_it=ListSequence.fromList(SLinkOperations.getTargets(cell,"styleItem",true)).iterator();
    SNode nodeChild_var;
    while (nodeChild_it.hasNext()) {
      nodeChild_var=nodeChild_it.next();
      ListSequence.fromList(SLinkOperations.getTargets(modelComponent,"styleItem",true)).addElement(SNodeOperations.copyNode(nodeChild_var));
    }
  }
  SPropertyOperations.set(modelComponent,"attractsFocus","" + (SPropertyOperations.getInteger_def(cell,"attractsFocus","0")));
  SNodeOperations.replaceWithAnother(cell,modelComponent);
}
