{
  if (!(SConceptOperations.isSubConceptOf(SLinkOperations.getTarget(conceptLinkDeclaration,"targetType",false),"jetbrains.mps.lang.core.structure.INamedConcept"))) {
    return null;
  }
  SNode conceptNode=SNodeOperations.getAncestor(conceptLinkDeclaration,"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration",false,false);
  boolean valueIsDefault=true;
  List<SNode> sameConceptLink=ListSequence.fromList(new ArrayList<SNode>());
  for (  SNode conceptLink : ListSequence.fromList(SLinkOperations.getTargets(conceptNode,"conceptLink",true))) {
    if (SLinkOperations.getTarget(conceptLink,"conceptLinkDeclaration",false) == conceptLinkDeclaration) {
      valueIsDefault=false;
      ListSequence.fromList(sameConceptLink).addElement(conceptLink);
    }
  }
  SNode returnType=_quotation_createNode_azpnkk_a0f0v(SLinkOperations.getTarget(conceptLinkDeclaration,"targetType",false));
  String name="get" + NameUtil.capitalize(SPropertyOperations.getString(conceptLinkDeclaration,"name"));
  SNode method=createMethod(name,true,null,returnType);
  if (valueIsDefault) {
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method,"body",true),"statement",true)).addElement(_quotation_createNode_azpnkk_a0a0a8a12(SLinkOperations.getTarget(conceptLinkDeclaration,"targetType",false)));
    addMethodToBehavior(conceptNode,method);
    return method;
  }
  SNode declaration=_quotation_createNode_azpnkk_a0j0v(SLinkOperations.getTarget(conceptLinkDeclaration,"targetType",false),SLinkOperations.getTarget(conceptLinkDeclaration,"targetType",false));
  SNode reference=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.VariableReference",null);
  SLinkOperations.setTarget(reference,"variableDeclaration",SLinkOperations.getTarget(declaration,"localVariableDeclaration",true),false);
  ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method,"body",true),"statement",true)).addElement(declaration);
  for (  SNode link : ListSequence.fromList(sameConceptLink)) {
    SNode refExpression=SConceptOperations.createNewNode("jetbrains.mps.lang.smodel.structure.NodeRefExpression",null);
    SLinkOperations.setTarget(refExpression,"referentNode",SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(link,"jetbrains.mps.lang.structure.structure.ReferenceConceptLink"),"target",false),"jetbrains.mps.lang.core.structure.INamedConcept"),false);
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method,"body",true),"statement",true)).addElement(_quotation_createNode_azpnkk_a0a2a31a12(reference,refExpression));
    SetSequence.fromSet(conceptLinks).removeElement(link);
  }
  ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method,"body",true),"statement",true)).addElement(_quotation_createNode_azpnkk_a0a41a12(reference));
  return (addMethodToBehavior(conceptNode,method) ? method : null);
}
