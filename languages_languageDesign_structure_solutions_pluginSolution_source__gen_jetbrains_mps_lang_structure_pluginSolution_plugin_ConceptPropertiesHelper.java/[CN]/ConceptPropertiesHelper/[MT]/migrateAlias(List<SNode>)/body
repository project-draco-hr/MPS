{
  Set<SearchResult<SNode>> results=SetSequence.fromSet(new HashSet<SearchResult<SNode>>());
  List<SModel> modelsToGenerate=ListSequence.fromList(new LinkedList<SModel>());
  for (  SNode node : ListSequence.fromList(affectedNodes)) {
    SetSequence.fromSet(results).addElement(new SearchResult<SNode>(node,""));
    ListSequence.fromList(modelsToGenerate).addElement(node.getModel());
  }
  SearchResults searchResults=new SearchResults(SetSequence.fromSet(new HashSet()),SetSequence.fromSet(results).toListSequence());
  RefactoringViewAction okAction=new RefactoringViewAction(){
    public void performAction(    final RefactoringViewItem refactoringViewItem){
      ModelAccess.instance().runWriteInEDT(new Runnable(){
        public void run(){
          refactoringViewItem.close();
        }
      }
);
    }
  }
;
  RefactoringAccess.getInstance().showRefactoringView(ProjectHelper.toIdeaProject(project),okAction,searchResults,false,"Remove Alias");
}
