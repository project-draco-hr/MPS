{
  Set<SNode> result=SetSequence.fromSet(new HashSet<SNode>());
  SetSequence.fromSet(result).addElement(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a0a1a3().createNode(),"operation",true),"jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess"),"conceptProperty",false));
  SetSequence.fromSet(result).addElement(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a0a2a3().createNode(),"operation",true),"jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess"),"conceptProperty",false));
  SetSequence.fromSet(result).addElement(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a0a3a3().createNode(),"operation",true),"jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess"),"conceptProperty",false));
  SetSequence.fromSet(result).addElement(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a0a4a3().createNode(),"operation",true),"jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess"),"conceptProperty",false));
  return result;
}
