{
  if (SNodeOperations.getAncestor(SLinkOperations.getTarget(conceptProperty,"conceptPropertyDeclaration",false),"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration",false,false) == SNodeOperations.getAncestor(conceptProperty,"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration",false,false)) {
    return;
  }
  SNode conceptNode=SNodeOperations.getAncestor(conceptProperty,"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration",false,false);
  if (conceptProperty.equals(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a0a4a01().createNode(),"operation",true),"jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess"),"conceptProperty",false))) {
    SPropertyOperations.set(conceptNode,"conceptAlias",SConceptPropertyOperations.getString(conceptNode,"alias"));
  }
 else   if (conceptProperty.equals(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a0a0e0k().createNode(),"operation",true),"jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess"),"conceptProperty",false))) {
    SPropertyOperations.set(conceptNode,"conceptShortDescription",SConceptPropertyOperations.getString(conceptNode,"shortDescription"));
  }
 else   if (conceptProperty.equals(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a0a1e0k().createNode(),"operation",true),"jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess"),"conceptProperty",false))) {
    SPropertyOperations.set(conceptNode,"abstract","" + (SConceptPropertyOperations.getBoolean(conceptNode,"abstract")));
  }
 else   if (conceptProperty.equals(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a0a2e0k().createNode(),"operation",true),"jetbrains.mps.lang.smodel.structure.SConceptPropertyAccess"),"conceptProperty",false))) {
    SPropertyOperations.set(conceptNode,"final","" + (SConceptPropertyOperations.getBoolean(conceptNode,"final")));
  }
 else {
    if (overridenMethod == null) {
      return;
    }
    SNode method=createMethod(SPropertyOperations.getString(overridenMethod,"name"),false,false,overridenMethod,SNodeOperations.copyNode(SLinkOperations.getTarget(overridenMethod,"returnType",true)));
    SNode returnStatement;
    if (SNodeOperations.isInstanceOf(conceptProperty,"jetbrains.mps.lang.structure.structure.IntegerConceptProperty")) {
      SNode result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.IntegerConstant",null);
      SPropertyOperations.set(result,"value","" + (SPropertyOperations.getInteger(SNodeOperations.cast(conceptProperty,"jetbrains.mps.lang.structure.structure.IntegerConceptProperty"),"value")));
      returnStatement=new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a2a3a0e0k().createNode(result);
    }
 else     if (SNodeOperations.isInstanceOf(conceptProperty,"jetbrains.mps.lang.structure.structure.StringConceptProperty")) {
      SNode result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StringLiteral",null);
      SPropertyOperations.set(result,"value",SPropertyOperations.getString(SNodeOperations.cast(conceptProperty,"jetbrains.mps.lang.structure.structure.StringConceptProperty"),"value"));
      returnStatement=new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a2a0d0a4a01().createNode(result);
    }
 else     if (SNodeOperations.isInstanceOf(conceptProperty,"jetbrains.mps.lang.structure.structure.BooleanConceptProperty")) {
      returnStatement=new ConceptPropertiesHelper.QuotationClass_azpnkk_a0a0a1d0a4a01().createNode();
    }
 else {
      return;
    }
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method,"body",true),"statement",true)).addElement(returnStatement);
    SNode conceptBehavior=getConceptBehavior(conceptNode);
    if (conceptBehavior == null) {
      return;
    }
 else {
      ListSequence.fromList(SLinkOperations.getTargets(conceptBehavior,"method",true)).addElement(method);
    }
    if (SNodeOperations.isInstanceOf(conceptProperty,"jetbrains.mps.lang.structure.structure.BooleanConceptProperty") && !(SPropertyOperations.getBoolean(SLinkOperations.getTarget(conceptProperty,"conceptPropertyDeclaration",false),"inheritable"))) {
      createBooleanMethodForChilds(conceptNode,SLinkOperations.getTarget(conceptProperty,"conceptPropertyDeclaration",false),overridenMethod);
    }
  }
}
