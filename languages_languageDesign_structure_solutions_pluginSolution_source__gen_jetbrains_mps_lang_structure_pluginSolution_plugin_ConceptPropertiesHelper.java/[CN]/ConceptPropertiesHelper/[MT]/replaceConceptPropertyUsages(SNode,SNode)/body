{
  if (SNodeOperations.getAncestor(SLinkOperations.getTarget(conceptProperty,"conceptPropertyDeclaration",false),"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration",false,false) == SNodeOperations.getAncestor(conceptProperty,"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration",false,false)) {
    return;
  }
  SNode conceptNode=SNodeOperations.getAncestor(conceptProperty,"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration",false,false);
  if (SNodeOperations.getAncestor(SLinkOperations.getTarget(conceptProperty,"conceptPropertyDeclaration",false),"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration",false,false) == SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.core.structure.BaseConcept")) {
    String name=SPropertyOperations.getString(SLinkOperations.getTarget(conceptProperty,"conceptPropertyDeclaration",false),"name");
    if (eq_azpnkk_a0b0e0j(name,aliasName)) {
      SPropertyOperations.set(conceptNode,"conceptAlias",SConceptPropertyOperations.getString(conceptNode,"alias"));
      return;
    }
 else     if (eq_azpnkk_a0a1a4a9(name,shortDescriptionName)) {
      SPropertyOperations.set(conceptNode,"conceptShortDescription",SConceptPropertyOperations.getString(conceptNode,"shortDescription"));
      return;
    }
 else     if (eq_azpnkk_a0b1a4a9(name,abstractName)) {
      SPropertyOperations.set(conceptNode,"abstract","" + (SConceptPropertyOperations.getBoolean(conceptNode,"abstract")));
      return;
    }
 else     if (eq_azpnkk_a0c1a4a9(name,finalName)) {
      SPropertyOperations.set(conceptNode,"final","" + (SConceptPropertyOperations.getBoolean(conceptNode,"final")));
      return;
    }
 else     if (eq_azpnkk_a0d1a4a9(name,dontSubstituteName)) {
      SNode reference=SConceptOperations.createNewNode("jetbrains.mps.lang.structure.structure.InterfaceConceptReference",null);
      SLinkOperations.setTarget(reference,"intfc",SNodeOperations.getNode("r:00000000-0000-4000-0000-011c89590288(jetbrains.mps.lang.core.structure)","1835621062190663819"),false);
      if (SNodeOperations.isInstanceOf(conceptNode,"jetbrains.mps.lang.structure.structure.ConceptDeclaration")) {
        ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(conceptNode,"jetbrains.mps.lang.structure.structure.ConceptDeclaration"),"implements",true)).addElement(reference);
      }
 else       if (SNodeOperations.isInstanceOf(conceptNode,"jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration")) {
        ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(conceptNode,"jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration"),"extends",true)).addElement(reference);
      }
      return;
    }
  }
  if (overridenMethod == null) {
    return;
  }
  SNode method=createMethod(SPropertyOperations.getString(overridenMethod,"name"),false,overridenMethod,SNodeOperations.copyNode(SLinkOperations.getTarget(overridenMethod,"returnType",true)));
  SNode returnStatement;
  if (SNodeOperations.isInstanceOf(conceptProperty,"jetbrains.mps.lang.structure.structure.IntegerConceptProperty")) {
    SNode result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.IntegerConstant",null);
    SPropertyOperations.set(result,"value","" + (SPropertyOperations.getInteger(SNodeOperations.cast(conceptProperty,"jetbrains.mps.lang.structure.structure.IntegerConceptProperty"),"value")));
    returnStatement=_quotation_createNode_azpnkk_a0c0i0j(result);
  }
 else   if (SNodeOperations.isInstanceOf(conceptProperty,"jetbrains.mps.lang.structure.structure.StringConceptProperty")) {
    SNode result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StringLiteral",null);
    SPropertyOperations.set(result,"value",SPropertyOperations.getString(SNodeOperations.cast(conceptProperty,"jetbrains.mps.lang.structure.structure.StringConceptProperty"),"value"));
    returnStatement=_quotation_createNode_azpnkk_a0c0a8a9(result);
  }
 else   if (SNodeOperations.isInstanceOf(conceptProperty,"jetbrains.mps.lang.structure.structure.BooleanConceptProperty")) {
    returnStatement=_quotation_createNode_azpnkk_a0a0b8a9();
  }
 else {
    return;
  }
  ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method,"body",true),"statement",true)).addElement(returnStatement);
  addMethodToBehavior(conceptNode,method);
  if (SNodeOperations.isInstanceOf(conceptProperty,"jetbrains.mps.lang.structure.structure.BooleanConceptProperty") && !(SPropertyOperations.getBoolean(SLinkOperations.getTarget(conceptProperty,"conceptPropertyDeclaration",false),"inheritable"))) {
    createBooleanMethodForChilds(conceptNode,SLinkOperations.getTarget(conceptProperty,"conceptPropertyDeclaration",false),overridenMethod);
  }
}
