{
  Map<SNode,SNode> cpToMethodMap=MapSequence.fromMap(new HashMap<SNode,SNode>());
  for (  SNode conceptPropertyDecl : SetSequence.fromSet(conceptPropertyDeclarations)) {
    SNode method=replaceConceptPropertyDeclarations(conceptPropertyDecl,conceptPropertyUsages);
    MapSequence.fromMap(cpToMethodMap).put(conceptPropertyDecl,method);
  }
  for (  SNode conceptProperty : SetSequence.fromSet(conceptPropertyUsages)) {
    replaceConceptPropertyUsages(conceptProperty,MapSequence.fromMap(cpToMethodMap).get(SLinkOperations.getTarget(conceptProperty,"conceptPropertyDeclaration",false)));
  }
  for (  SNode access : SetSequence.fromSet(accessUsages)) {
    replaceAccessUsages(access,MapSequence.fromMap(cpToMethodMap).get(SLinkOperations.getTarget(access,"conceptProperty",false)));
  }
  for (  SNode cell : SetSequence.fromSet(cellUsages)) {
    replaceCellUsages(cell,MapSequence.fromMap(cpToMethodMap).get(SLinkOperations.getTarget(cell,"relationDeclaration",false)));
  }
}
