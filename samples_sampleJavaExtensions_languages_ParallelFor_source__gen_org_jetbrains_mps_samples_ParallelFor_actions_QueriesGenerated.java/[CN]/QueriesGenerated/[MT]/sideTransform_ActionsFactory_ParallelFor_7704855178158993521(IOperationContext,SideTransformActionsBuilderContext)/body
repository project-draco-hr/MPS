{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
  ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(MetaAdapterFactory.getConcept(0xcb7388e8f1824cdaL,0xbd839796e8634856L,0x7bd8445d1e8770aaL,"org.jetbrains.mps.samples.ParallelFor.structure.ParallelFor").getDeclarationNode(),_context.getSourceNode()){
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      SNode candidate=ParallelFor__BehaviorDescriptor.findPoolDeclaration_id6FH9fp$mItT.invoke(_context.getSourceNode());
      if (candidate == null) {
        SLinkOperations.setTarget(_context.getSourceNode(),MetaAdapterFactory.getContainmentLink(0xcb7388e8f1824cdaL,0xbd839796e8634856L,0x7bd8445d1e8770aaL,0x40a8d217b6d881feL,"threadPool"),SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506fL,"jetbrains.mps.baseLanguage.structure.Expression")));
      }
 else {
        SLinkOperations.setTarget(_context.getSourceNode(),MetaAdapterFactory.getContainmentLink(0xcb7388e8f1824cdaL,0xbd839796e8634856L,0x7bd8445d1e8770aaL,0x40a8d217b6d881feL,"threadPool"),SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c77f1e98L,"jetbrains.mps.baseLanguage.structure.VariableReference")));
        SLinkOperations.setTarget(SNodeOperations.cast(SLinkOperations.getTarget(_context.getSourceNode(),MetaAdapterFactory.getContainmentLink(0xcb7388e8f1824cdaL,0xbd839796e8634856L,0x7bd8445d1e8770aaL,0x40a8d217b6d881feL,"threadPool")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c77f1e98L,"jetbrains.mps.baseLanguage.structure.VariableReference")),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c77f1e98L,0xf8cc6bf960L,"variableDeclaration"),candidate);
      }
      return SLinkOperations.getTarget(_context.getSourceNode(),MetaAdapterFactory.getContainmentLink(0xcb7388e8f1824cdaL,0xbd839796e8634856L,0x7bd8445d1e8770aaL,0x40a8d217b6d881feL,"threadPool"));
    }
    public String getMatchingText(    String pattern){
      return "using";
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
    @Override protected boolean isEnabled(){
      SNode sourceNode=getSourceNode();
      SNode parent=SNodeOperations.getParent(sourceNode);
      SNode containingLink=SNodeOperations.getContainingLinkDeclaration(sourceNode);
      return parent == null || containingLink == null || (ModelConstraints.canBeParent(parent,MetaAdapterFactory.getConcept(0xcb7388e8f1824cdaL,0xbd839796e8634856L,0x7bd8445d1e8770aaL,"org.jetbrains.mps.samples.ParallelFor.structure.ParallelFor").getDeclarationNode(),containingLink,null,null) && ModelConstraints.canBeAncestor(parent,null,MetaAdapterFactory.getConcept(0xcb7388e8f1824cdaL,0xbd839796e8634856L,0x7bd8445d1e8770aaL,"org.jetbrains.mps.samples.ParallelFor.structure.ParallelFor").getDeclarationNode(),null));
    }
  }
);
  return result;
}
