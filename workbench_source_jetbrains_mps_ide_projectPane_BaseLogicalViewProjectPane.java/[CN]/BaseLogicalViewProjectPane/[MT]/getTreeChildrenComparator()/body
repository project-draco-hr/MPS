{
  return new Comparator<Object>(){
    @Override public int compare(    final Object o1,    final Object o2){
      if (isSortByType()) {
        if (o1 instanceof SNode && o2 instanceof SNode) {
          final SNode node1=(SNode)o1;
          final SNode node2=(SNode)o2;
          return ModelAccess.instance().runReadAction(new Computable<Integer>(){
            @Override public Integer compute(){
              String concept1=node1.getConceptFqName();
              String concept2=node2.getConceptFqName();
              return concept1.compareTo(concept2);
            }
          }
);
        }
      }
      return 0;
    }
  }
;
}
