{
  removeAll();
  ActionEventData data=new ActionEventData(event);
  DataContext dataContext=DataManager.getInstance().getDataContext();
  TreeNode treeNode=MPSDataKeys.LOGICAL_VIEW_NODE.getData(dataContext);
  if (!(treeNode instanceof PackageNode)) {
    myPackage=null;
  }
 else {
    final PackageNode node=(PackageNode)treeNode;
    myPackage=node.getPackage();
  }
  List<Language> modelLanguages=data.getModelDescriptor() == null ? new ArrayList<Language>() : data.getModelDescriptor().getSModel().getLanguages(data.getOperationContext().getScope());
  if (modelLanguages.size() == 0) {
    add(new BaseAction("<NO LANGUAGES>"){
      protected void doExecute(      AnActionEvent e){
      }
    }
);
  }
  LanguageAspect aspect=Language.getModelAspect(data.getModelDescriptor());
  if (aspect != null) {
    ModuleReference ref=aspect.getMainLanguage();
    Language lang=data.getScope().getLanguage(ref);
    modelLanguages.remove(lang);
    for (    ConceptDeclaration conceptDeclaration : lang.getConceptDeclarations()) {
      if (ModelConstraintsManager.getInstance().canBeARoot(data.getOperationContext(),NameUtil.nodeFQName(conceptDeclaration),data.getModelDescriptor().getSModel())) {
        add(newRootNodeAction(new SNodePointer(conceptDeclaration),data.getModelDescriptor()));
      }
    }
    addSeparator();
  }
  Collections.sort(modelLanguages,new ToStringComparator());
  List<Language> languagesWithRoots=new ArrayList<Language>();
  for (  final Language language : modelLanguages) {
    for (    ConceptDeclaration conceptDeclaration : language.getConceptDeclarations()) {
      if (ModelConstraintsManager.getInstance().canBeARoot(data.getOperationContext(),NameUtil.nodeFQName(conceptDeclaration),data.getModelDescriptor().getSModel())) {
        languagesWithRoots.add(language);
        break;
      }
    }
  }
  boolean plain=myPlain || (languagesWithRoots.size() == 1 && aspect == null);
  for (  final Language language : languagesWithRoots) {
    String name=language.getNamespace();
    Icon icon=IconManager.getIconFor(language.getNamespace());
    BaseGroup langRootsGroup;
    if (!plain) {
      langRootsGroup=new BaseGroup(name,name,icon);
      langRootsGroup.setPopup(true);
    }
 else {
      langRootsGroup=this;
    }
    for (    ConceptDeclaration conceptDeclaration : language.getConceptDeclarations()) {
      if (ModelConstraintsManager.getInstance().canBeARoot(data.getOperationContext(),NameUtil.nodeFQName(conceptDeclaration),data.getModelDescriptor().getSModel())) {
        langRootsGroup.add(newRootNodeAction(new SNodePointer(conceptDeclaration),data.getModelDescriptor()));
      }
    }
    if (!plain) {
      this.add(langRootsGroup);
    }
 else {
      this.addSeparator();
    }
  }
  Integer selectedItemsCount=MPSDataKeys.LOGICAL_VIEW_SELECTION_SIZE.getData(event.getDataContext());
  boolean enabled=selectedItemsCount != null && selectedItemsCount == 1;
  setEnabledState(event.getPresentation(),enabled);
}
