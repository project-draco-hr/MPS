{
  RulesUtil.checkAppliedCorrectly_generic(node);
  final SNode LeftExprType_typevar_1186057669134=TypeChecker.getInstance().getRuntimeSupport().createNewRuntimeTypesVariable(false);
  TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(RulesUtil.leftExpression(node),"jetbrains.mps.bootstrap.smodelLanguage.helgins","1186057669139",true),TypeChecker.getInstance().getEquationManager().getRepresentator(LeftExprType_typevar_1186057669134),RulesUtil.leftExpression(node),null,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1186057669135");
  TypeChecker.getInstance().getRuntimeSupport().whenConcrete(TypeChecker.getInstance().getEquationManager().getRepresentator(LeftExprType_typevar_1186057669134),new Runnable(){
    public void run(){
      SNode leftNodeType=TypeChecker.getInstance().getRuntimeSupport().coerce(TypeChecker.getInstance().getEquationManager().getRepresentator(LeftExprType_typevar_1186057669134),HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.bootstrap.smodelLanguage.structure.SNodeType"),false);
      SNode leftNodeConcept=SLinkOperations.getTarget(leftNodeType,"concept",false);
      TypeChecker.getInstance().getRuntimeSupport().givetype(AbstractConceptDeclaration_Behavior.call_getAdapterType_1179511141975(leftNodeConcept),node,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1186057669156");
    }
  }
,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1186057669142");
  TypeChecker.getInstance().getRuntimeSupport().createLessThanInequation(TypeChecker.getInstance().getRuntimeSupport().typeOf(node,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1186057680866",true),new QuotationClass_55().createNode(),node,null,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1186057690603");
}
