{
  if (RulesUtil.checkAppliedCorrectly_generic(argument)) {
    SNode leftExpressionType=RulesUtil.typeOf_leftExpression(argument);
    SNode leftNodeType=TypeChecker.getInstance().getRuntimeSupport().coerce(leftExpressionType,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.bootstrap.smodelLanguage.structure.SNodeType"),false);
    SNode leftNodeConcept=SLinkOperations.getTarget(leftNodeType,"concept",false);
    TypeChecker.getInstance().getRuntimeSupport().givetype(TypeUtil_smodel.get_adapterType_for_concept(leftNodeConcept),argument);
  }
 else {
    TypeChecker.getInstance().getRuntimeSupport().givetype(new QuotationClass_52().createNode(),argument);
  }
}
