{
  final String pattern=getPatternEditor().getPattern();
  if (pattern.length() == 0) {
    return;
  }
  String prefix=pattern.substring(0,pattern.length() - 1);
  if (myNodeSubstituteInfo.hasExactlyNActions(pattern,false,0) && myNodeSubstituteInfo.hasExactlyNActions(prefix,true,1)) {
    INodeSubstituteAction action=myNodeSubstituteInfo.getMatchingActions(prefix,true).get(0);
    final SNode node=action.substitute(myEditorComponent.getEditorContext(),prefix);
    myEditorComponent.flushEvents();
    EditorCell cell=myEditorComponent.findNodeCell(node);
    myEditorComponent.changeSelection(cell);
    if (cell instanceof EditorCell_Label) {
      IntelligentInputUtil.processCell((EditorCell_Label)cell,myEditorComponent.getEditorContext(),pattern,prefix);
    }
  }
}
