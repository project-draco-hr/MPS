{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.build.dependency.structure.Cycle","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{"moduleDescription","dependency","classpath"});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.build.dependency.structure.CycleReference","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"cycle"},new String[]{});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.build.dependency.structure.Macros","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{},new String[]{});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.build.dependency.structure.ModuleDescription","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"includeResources","excludeResources"},new String[]{},new String[]{"sources","classes","classpath"});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.build.dependency.structure.PathHolder","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"path"},new String[]{"macro"},new String[]{});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.build.dependency.structure.ProjectDescription","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"basedir","propertiesFile"},new String[]{},new String[]{"cycle","commonClasspath","macro"});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.build.dependency.structure.ProjectDescriptionReference","jetbrains.mps.buildlanguage.structure.ImportProject",false,new String[]{"jetbrains.mps.buildlanguage.structure.ImportProject"},new String[]{},new String[]{"description"},new String[]{});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
