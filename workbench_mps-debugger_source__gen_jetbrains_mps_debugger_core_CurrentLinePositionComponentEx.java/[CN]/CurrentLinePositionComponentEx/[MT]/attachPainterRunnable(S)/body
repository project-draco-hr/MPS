{
  final CurrentLinePainter newPainter=ModelAccess.instance().runReadAction(new Computable<CurrentLinePainter>(){
    @Override public CurrentLinePainter compute(){
      SNode node=getNode(debugSession);
      if (node != null) {
        return new CurrentLinePainter(node);
      }
      return null;
    }
  }
);
  if (newPainter != null) {
    final boolean visible=getCurrentSession() == null || getCurrentSession() == debugSession;
    newPainter.setVisible(visible);
synchronized (mySessionToContextPainterMap) {
      MapSequence.fromMap(mySessionToContextPainterMap).put(debugSession,newPainter);
      return new Runnable(){
        @Override public void run(){
          ModelAccess.assertLegalWrite();
          if (visible) {
            attachPainterAndOpenEditor(newPainter);
          }
 else {
            attachPainter(newPainter);
          }
        }
      }
;
    }
  }
  return null;
}
