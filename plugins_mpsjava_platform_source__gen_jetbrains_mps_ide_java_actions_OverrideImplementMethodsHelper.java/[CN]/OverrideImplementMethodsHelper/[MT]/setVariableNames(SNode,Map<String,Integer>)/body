{
  if (SNodeOperations.isInstanceOf(node,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068431474542l,"jetbrains.mps.baseLanguage.structure.VariableDeclaration"))) {
    SNode variable=SNodeOperations.cast(node,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068431474542l,"jetbrains.mps.baseLanguage.structure.VariableDeclaration"));
    SNode nodeType=SLinkOperations.getTarget(variable,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type"));
    if (nodeType != null) {
      String name=ListSequence.fromList(BehaviorReflection.invokeVirtual((Class<List<String>>)((Class)Object.class),nodeType,"virtual_getVariableSuffixes_1213877337304",new Object[]{})).first();
      if (IdentifierConstraintsUtil.isJavaReserved(name)) {
        name="a" + NameUtil.capitalize(NameUtil.toValidIdentifier(name));
      }
      if (MapSequence.fromMap(usedNames).containsKey(name)) {
        int i=MapSequence.fromMap(usedNames).get(name);
        i=i + 1;
        MapSequence.fromMap(usedNames).put(name,i);
        name=name + i;
      }
 else {
        MapSequence.fromMap(usedNames).put(name,0);
      }
      String prefix=BehaviorReflection.invokeVirtual(String.class,variable,"virtual_getPrefix_3012473318495495520",new Object[]{myProject});
      String suffix=BehaviorReflection.invokeVirtual(String.class,variable,"virtual_getSuffix_3012473318495499856",new Object[]{myProject});
      String mainName=((prefix == null || prefix.length() == 0) ? name : NameUtil.capitalize(name));
      SPropertyOperations.set(variable,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"),prefix + mainName + suffix);
    }
  }
  for (  SNode child : SNodeOperations.getChildren(node)) {
    setVariableNames(child,usedNames);
  }
}
