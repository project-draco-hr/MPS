{
  ModelAccess.assertLegalRead();
  final Map<SModel,GResource> modelToInput=Collections.synchronizedMap(new HashMap<SModel,GResource>());
  for (  GResource inputResource : Sequence.fromIterable(inputResources)) {
    SModel outputModel=inputResource.status().getOutputModel();
    if (outputModel != null) {
      modelToInput.put(outputModel,inputResource);
    }
 else {
      callback.textGenerated(inputResource,Collections.<TextGenerationResult>emptyList());
    }
  }
  engine.generateModels(modelToInput.keySet(),new TextGeneratorEngine.GenerateCallback(){
    public void modelGenerated(    SModel model,    List<TextGenerationResult> results){
      GResource generatedResource=modelToInput.get(model);
      callback.textGenerated(generatedResource,results);
    }
  }
);
}
