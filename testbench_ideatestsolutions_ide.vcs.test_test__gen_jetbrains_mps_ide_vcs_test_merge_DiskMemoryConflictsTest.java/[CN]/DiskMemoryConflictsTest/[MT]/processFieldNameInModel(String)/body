{
  final String[] result=new String[1];
  final Reference<Throwable> refThrowable=new Reference<Throwable>();
  ourModelAccess.executeCommandInEDT(new Runnable(){
    @Override public void run(){
      try {
        SNode theField=getField();
        Assert.assertNotNull(theField);
        if (nameToWrite == null) {
          result[0]=SPropertyOperations.getString(theField,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
        }
 else {
          SPropertyOperations.set(theField,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),nameToWrite);
        }
      }
 catch (      Throwable t) {
        refThrowable.set(t);
      }
    }
  }
);
  if (!(refThrowable.isNull())) {
    throw new RuntimeException(refThrowable.get());
  }
  DiskMemoryConflictsTest.waitEDT();
  return result[0];
}
