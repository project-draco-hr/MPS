{
  setFieldNameInModel(DiskMemoryConflictsTest.FIELD_NAME_IN_MODEL);
  if (DiskMemoryConflictsTest.DiskModification.MODIFY == diskModification) {
    setFieldNameInFile(DiskMemoryConflictsTest.FIELD_NAME_IN_FILE);
  }
 else {
    DiskMemoryConflictsTest.delete();
  }
  refreshVfs();
  final boolean[] dialogWasInvoked=new boolean[1];
  Messages.setTestDialog(new TestDialog(){
    @Override public int show(    String message){
      dialogWasInvoked[0]=true;
      if (DiskMemoryConflictsTest.DiskModification.DELETE == diskModification) {
        return (DiskMemoryConflictsTest.VersionToChoose.MEMORY == versionToChoose ? 0 : 1);
      }
 else {
        return (DiskMemoryConflictsTest.VersionToChoose.MEMORY == versionToChoose ? 1 : 0);
      }
    }
  }
);
  ModelStorageProblemsListener.setTestDialog(new TestDialog(){
    @Override public int show(    String message){
      dialogWasInvoked[0]=true;
      if (DiskMemoryConflictsTest.DiskModification.DELETE == diskModification) {
        return (DiskMemoryConflictsTest.VersionToChoose.MEMORY == versionToChoose ? 0 : 1);
      }
 else {
        return (DiskMemoryConflictsTest.VersionToChoose.MEMORY == versionToChoose ? 1 : 0);
      }
    }
  }
);
  if (DiskMemoryConflictsTest.Action.SAVE == action) {
    myProject.getModelAccess().executeCommandInEDT(new Runnable(){
      @Override public void run(){
        SModelRepository.getInstance().saveAll();
      }
    }
);
  }
 else {
    myProject.getModelAccess().runWriteInEDT(new Runnable(){
      @Override public void run(){
        ((ReloadableSModelBase)myModel).reloadFromDiskSafe();
      }
    }
);
  }
  waitEDT();
  Assert.assertTrue(dialogWasInvoked[0]);
  String expectedFieldName;
  if (DiskMemoryConflictsTest.VersionToChoose.MEMORY == versionToChoose) {
    expectedFieldName=DiskMemoryConflictsTest.FIELD_NAME_IN_MODEL;
  }
 else {
    if (DiskMemoryConflictsTest.DiskModification.MODIFY == diskModification) {
      expectedFieldName=DiskMemoryConflictsTest.FIELD_NAME_IN_FILE;
    }
 else {
      expectedFieldName=null;
    }
  }
  checkSynchronizedState(expectedFieldName);
}
