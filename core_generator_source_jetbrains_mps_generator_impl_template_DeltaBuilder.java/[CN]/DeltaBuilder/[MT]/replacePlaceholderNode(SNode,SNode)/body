{
  clearNodeMap(placeholder);
  fillNodeMap(actual);
  if (placeholder.getParent() == null) {
    for (    NewRoot r : myNewRoots) {
      if (r.myRoot == placeholder) {
        myNewRoots.remove(r);
        int i=myDelta.indexOf(r);
        myDelta.set(i,new NewRoot(actual));
        return;
      }
    }
    for (    ReplacedRoot r : myReplacedRoots) {
      int i=r.myReplacements.indexOf(placeholder);
      if (i != -1) {
        r.myReplacements.set(i,actual);
        return;
      }
    }
    for (    CopyRoot r : myCopyRoots) {
      for (      SubTree t : r.mySubTrees) {
        if (t.isSourceCopy()) {
          continue;
        }
        int i=t.myReplacement.indexOf(placeholder);
        if (i != -1) {
          t.myReplacement.set(i,actual);
          return;
        }
      }
    }
  }
 else {
    SNodeUtil.replaceWithAnother(placeholder,actual);
  }
}
