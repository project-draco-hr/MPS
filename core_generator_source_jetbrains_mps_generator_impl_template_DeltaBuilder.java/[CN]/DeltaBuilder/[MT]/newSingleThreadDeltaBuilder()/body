{
  return new DeltaBuilder(new ArrayList<CopyRoot>()){
    private final Deque<SNode> myNestedCopyRoots=new ArrayDeque<SNode>();
    private CopyRoot myCurrentRoot;
    private final List<SubTree> myCurrentFragments=new ArrayList<SubTree>();
    @Override protected Deque<SNode> getNestedCopyRoots(){
      return myNestedCopyRoots;
    }
    @Override protected CopyRoot getCurrentRoot(){
      return myCurrentRoot;
    }
    @Override protected void setCurrentRoot(    CopyRoot currentRoot){
      myCurrentRoot=currentRoot;
    }
    @Override protected List<SubTree> getCurrentFragments(){
      return myCurrentFragments;
    }
    @Override protected void initCurrentFragments(){
    }
    @Override protected void clearCurrentFragments(){
      myCurrentFragments.clear();
    }
  }
;
}
