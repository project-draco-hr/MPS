{
  try {
    FeatureUsageTracker.getInstance().triggerFeatureUsed("editing.duplicateLine");
    if (ListSequence.fromList(((List<SNode>)MapSequence.fromMap(_params).get("inputNodes"))).count() == 1) {
      SNode nodeToCopy=ListSequence.fromList(((List<SNode>)MapSequence.fromMap(_params).get("inputNodes"))).first();
      while (SNodeOperations.getParent(nodeToCopy) != null) {
        SNode parent=SNodeOperations.getParent(nodeToCopy);
        SContainmentLink link=nodeToCopy.getContainmentLink();
        if (link.isMultiple()) {
          SNode copy=SNodeOperations.copyNode(nodeToCopy);
          parent.insertChildBefore(link,copy,nodeToCopy.getNextSibling());
          EditorContext editorContext=((EditorComponent)MapSequence.fromMap(_params).get("editorComponent")).getEditorContext();
          editorContext.selectWRTFocusPolicy(copy);
          ((EditorComponent)MapSequence.fromMap(_params).get("editorComponent")).selectNode(copy);
          return;
        }
        nodeToCopy=parent;
      }
    }
 else {
      SNode firstNode=ListSequence.fromList(((List<SNode>)MapSequence.fromMap(_params).get("inputNodes"))).first();
      SNode lastNode=ListSequence.fromList(((List<SNode>)MapSequence.fromMap(_params).get("inputNodes"))).last();
      SContainmentLink role=firstNode.getContainmentLink();
      SNode parent=SNodeOperations.getParent(firstNode);
      for (      SNode node : ListSequence.fromList(((List<SNode>)MapSequence.fromMap(_params).get("inputNodes"))).reversedList()) {
        parent.insertChildBefore(role,SNodeOperations.copyNode(node),lastNode.getNextSibling());
      }
      EditorContext editorContext=((EditorComponent)MapSequence.fromMap(_params).get("editorComponent")).getEditorContext();
      editorContext.selectRange(firstNode,lastNode);
    }
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "CopyThisDown",t);
    }
  }
}
