{
  addListeners();
  getPanel().setLayout(new BorderLayout());
  JScrollPane scroller=new JScrollPane(getTree());
  scroller.setBorder(null);
  getPanel().add(scroller,BorderLayout.CENTER);
  getTree().addKeyListener(new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      if (e.getKeyCode() == KeyEvent.VK_F4 && e.getModifiers() == 0) {
        openEditor();
        e.consume();
      }
      if (e.getKeyCode() == KeyEvent.VK_ENTER && e.getModifiers() == 0) {
        openEditor();
        e.consume();
      }
    }
  }
);
  DefaultActionGroup toolbarGroup=new DefaultActionGroup();
  myPAndRToggle=new ToggleAction("Show properties and references","Show properties and references",Icons.PROP_AND_REF){
    public boolean isSelected(    @Nullable AnActionEvent e){
      return isShowPropertiesAndReferences();
    }
    public void setSelected(    @Nullable AnActionEvent e,    boolean state){
      setShowPropertiesAndReferences(!isShowPropertiesAndReferences());
    }
  }
;
  toolbarGroup.add(myPAndRToggle);
  myAutoscrollToSource=new ToggleAction("Autoscroll to source","Autoscroll to source",Icons.AUTOSCROLL_TO_SOURCE){
    public boolean isSelected(    @Nullable AnActionEvent e){
      return getTree().isAutoOpen();
    }
    public void setSelected(    @Nullable AnActionEvent e,    boolean state){
      getTree().setAutoOpen(!getTree().isAutoOpen());
    }
  }
;
  toolbarGroup.add(myAutoscrollToSource);
  myAutoscrollFromSource=new ToggleAction("Autoscroll from source","Autoscroll from source",Icons.AUTOSCROLL_FROM_SOURCE){
    public boolean isSelected(    @Nullable AnActionEvent e){
      return false;
    }
    public void setSelected(    @Nullable AnActionEvent e,    boolean state){
    }
  }
;
  toolbarGroup.add(myAutoscrollFromSource);
  JComponent toolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.FILE_VIEW,toolbarGroup,true).getComponent();
  getPanel().add(toolbar,BorderLayout.NORTH);
  if (!IdeMain.isTestMode()) {
    ThreadUtils.runInUIThreadNoWait(new Runnable(){
      public void run(){
        rebuildTree();
      }
    }
);
  }
}
