{
  myIDE=ide;
  SModelsMulticaster.getInstance().addSModelsListener(new SModelsAdapter(){
    public void modelCreated(    SModelDescriptor modelDescriptor){
    }
    public void modelDeleted(    SModelDescriptor modelDescriptor){
    }
    public void modelWillBeDeleted(    SModelDescriptor modelDescriptor){
      ProjectPane.this.selectNextTreeModel(modelDescriptor);
    }
  }
);
  setLayout(new BorderLayout());
  new TreeWithSNodesSpeedSearch(myTree);
  myToolbar.setFloatable(false);
  add(myToolbar,BorderLayout.NORTH);
  JScrollPane scroller=new JScrollPane(myTree);
  scroller.setBorder(null);
  add(scroller,BorderLayout.CENTER);
  myTree.addKeyListener(new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      if (e.getKeyCode() == KeyEvent.VK_F4 && e.getModifiers() == 0) {
        openEditor();
      }
      if (e.getKeyCode() == KeyEvent.VK_ENTER && e.getModifiers() == 0) {
        openEditor();
      }
    }
  }
);
  myToolbar.add(myPAndRToggle=new JToggleButton(){
{
      setAction(new AbstractAction("",Icons.PROP_AND_REF){
        public void actionPerformed(        ActionEvent e){
          setShowPropertiesAndReferences(!isShowPropertiesAndReferences());
        }
      }
);
    }
    public void updateUI(){
      setUI(new MPSToolBarButtonUI());
    }
  }
);
  myToolbar.add(myAutoscrollToSource=new JToggleButton(){
{
      setAction(new AbstractAction("",Icons.AUTOSCROLL_TO_SOURCE){
        public void actionPerformed(        ActionEvent e){
          myTree.setAutoOpen(!myTree.isAutoOpen());
        }
      }
);
    }
    public void updateUI(){
      setUI(new MPSToolBarButtonUI());
    }
  }
);
  myToolbar.add(myAutoscrollFromSource=new JToggleButton(){
{
      setAction(new AbstractAction("",Icons.AUTOSCROLL_FROM_SOURCE){
        public void actionPerformed(        ActionEvent e){
        }
      }
);
    }
    public void updateUI(){
      setUI(new MPSToolBarButtonUI());
    }
  }
);
  myToolbar.add(myCollapseAll=new JToggleButton(){
{
      setAction(new AbstractAction("",jetbrains.mps.ide.findusages.view.icons.Icons.COLLAPSE_ICON){
        public void actionPerformed(        ActionEvent e){
          for (          MPSTreeNode rootChild : myTree.getRootNode()) {
            myTree.collapseAll(rootChild);
          }
        }
      }
);
    }
    public void updateUI(){
      setUI(new MPSToolBarButtonUI());
    }
  }
);
  rebuildTree();
}
