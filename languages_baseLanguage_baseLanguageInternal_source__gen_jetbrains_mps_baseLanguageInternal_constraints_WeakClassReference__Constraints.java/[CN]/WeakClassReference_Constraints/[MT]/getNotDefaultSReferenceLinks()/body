{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(-2363163772790029805l,-6024047381933761144l),8791205313600585946l,8791205313600585947l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(-2363163772790029805l,-6024047381933761144l),8791205313600585946l,8791205313600585947l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return SModelOperations.nodesIncludingImported(_context.getModel(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,"jetbrains.mps.baseLanguage.structure.Classifier"));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_z4yh41_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
