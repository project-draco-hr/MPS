{
  StringBuffer s=new StringBuffer("Generating:");
  for (  Project p : go.getProjects()) {
    s.append("\n    ");
    s.append(p);
  }
  for (  IModule m : go.getModules()) {
    s.append("\n    ");
    s.append(m);
  }
  for (  SModelDescriptor m : go.getModels()) {
    s.append("\n    ");
    s.append(m);
  }
  info(s.toString());
  ProjectOperationContext ctx=new ProjectOperationContext(project);
  Iterable<IMResource> resources=Sequence.fromIterable(collectResources(ctx,go)).toListSequence();
  ModelAccess.instance().flushEventQueue();
  Future<IResult> res=new BuildMakeService(ctx,myMessageHandler).make(resources);
  try {
    if (!(res.get().isSucessful())) {
      myErrors.add("Make was not successful");
    }
  }
 catch (  InterruptedException e) {
    myErrors.add(e.toString());
  }
catch (  ExecutionException e) {
    myErrors.add(e.toString());
  }
  ModelAccess.instance().flushEventQueue();
}
