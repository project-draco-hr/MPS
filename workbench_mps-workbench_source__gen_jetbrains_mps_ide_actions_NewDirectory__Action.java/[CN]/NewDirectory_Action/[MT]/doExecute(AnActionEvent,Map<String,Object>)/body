{
  try {
    final VirtualFile dir=(((VirtualFile)MapSequence.fromMap(_params).get("selectedFile")).isDirectory() ? ((VirtualFile)MapSequence.fromMap(_params).get("selectedFile")) : ((VirtualFile)MapSequence.fromMap(_params).get("selectedFile")).getParent());
    final VirtualFile[] result=new VirtualFile[1];
    InputValidator validator=new InputValidator(){
      @Override public boolean checkInput(      String p){
        return true;
      }
      @Override public boolean canClose(      final String p){
        if (p.length() == 0) {
          return false;
        }
        if (p.contains(System.getProperty("file.separator"))) {
          return false;
        }
        ModelAccess.instance().runWriteAction(new Runnable(){
          public void run(){
            try {
              result[0]=dir.createChildDirectory(null,p);
            }
 catch (            IOException e) {
            }
          }
        }
);
        return true;
      }
    }
;
    Messages.showInputDialog(((Project)MapSequence.fromMap(_params).get("project")),IdeBundle.message("prompt.enter.new.directory.name"),IdeBundle.message("title.new.directory"),Messages.getQuestionIcon(),"",validator);
    if (result[0] != null) {
      ProjectView.getInstance(((Project)MapSequence.fromMap(_params).get("project"))).refresh();
      SwingUtilities.invokeLater(new Runnable(){
        public void run(){
          ProjectView.getInstance(((Project)MapSequence.fromMap(_params).get("project"))).getProjectViewPaneById(FileViewProjectPane.ID).select(null,result[0],true);
        }
      }
);
    }
  }
 catch (  Throwable t) {
    LOG.error("User's action execute method failed. Action:" + "NewDirectory",t);
  }
}
