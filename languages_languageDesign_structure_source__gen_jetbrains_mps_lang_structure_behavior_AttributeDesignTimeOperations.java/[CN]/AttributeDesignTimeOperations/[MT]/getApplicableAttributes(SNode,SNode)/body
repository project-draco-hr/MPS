{
  final SNode nodeConcept=SLinkOperations.getTarget(AttributeAccess_Behavior.call_getAttributeContainerType_6960953357954139822(accessNode),"concept",false);
  if ((nodeConcept == null)) {
    return null;
  }
  ConceptsScope conceptsScope=new ConceptsScope(accessNode,SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.structure.structure.ConceptDeclaration"));
  return Sequence.fromIterable(conceptsScope.getAvailableElements(null)).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(it,"jetbrains.mps.lang.structure.structure.ConceptDeclaration");
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SetSequence.fromSet(getSuperConcepts(it)).contains(attributeType);
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return isNotEmpty_ripaa1_a0a1a0a0a0a4a0(SPropertyOperations.getString(AttributeOperations.getAttribute(it,new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.structure.structure.AttributeInfo"))),"role")) && Sequence.fromIterable(getApplicableConcepts(it)).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SConceptOperations.isSubConceptOf(nodeConcept,NameUtil.nodeFQName(it));
        }
      }
);
    }
  }
);
}
