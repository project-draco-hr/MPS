{
  return CommandProcessor.instance().executeLightweightCommand(new Calculable<String>(){
    public String calculate(){
      StringBuilder result=new StringBuilder();
      result.append("model = ").append(node.getModel().getUID()).append("\n");
      result.append("concept = ").append(NameUtil.shortNameFromLongName(node.getConceptFqName())).append("\n");
      result.append("language = ").append(node.getLanguageNamespace());
      result.append("\n\nReferences:");
      for (      SReference ref : node.getReferences()) {
        SNode target=ref.getTargetNode();
        if (ref.getTargetNode() == null) {
          result.append("Bad Reference\n");
        }
 else {
          result.append("Model = ").append(target.getModel().getUID()).append("\n");
          result.append("Node = ").append(NodePresentationUtil.getPathToRoot(target)).append("\n");
          result.append("ID  = ").append(target.getId()).append("\n");
        }
        result.append("\n");
      }
      return result.toString();
    }
  }
);
}
