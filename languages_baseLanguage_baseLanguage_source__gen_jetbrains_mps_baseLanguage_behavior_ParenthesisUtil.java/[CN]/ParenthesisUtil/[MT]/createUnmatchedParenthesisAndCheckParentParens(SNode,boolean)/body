{
  SNode expressionToProcess=myExpression;
  SNode expressionToSetFocusOn=null;
  SNode current=findWrappingParens(expressionToProcess);
  while (current != null) {
    SNode leftParenOnParens=AttributeOperations.getAttribute(current,new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x64a1ef64cd9b42ceL,"jetbrains.mps.baseLanguage.structure.IncompleteLeftParen")));
    SNode rightParenOnParens=AttributeOperations.getAttribute(current,new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x2052c4520af308e1L,"jetbrains.mps.baseLanguage.structure.IncompleteRightParen")));
    boolean propagateNewParensInsteadOfExpr=false;
    SNode replacing=SLinkOperations.getTarget(SNodeOperations.cast(current,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfb4ed32b7fL,"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfb4ed32b7fL,0xfb4ed32b80L,"expression"));
    SNode rightMostNode=EditorParenthesisUtil.findRightmostOrLeftmostLeafExpression(replacing,true);
    SNode leftMostNode=EditorParenthesisUtil.findRightmostOrLeftmostLeafExpression(replacing,false);
    if ((completingByRightParen && eq_a65dpo_a0a0a8a5a7_0(expressionToProcess,rightMostNode)) || (!(completingByRightParen) && eq_a65dpo_a0a0a8a5a7(expressionToProcess,leftMostNode))) {
      propagateNewParensInsteadOfExpr=true;
    }
    SNodeOperations.replaceWithAnother(current,replacing);
    SNode localExpToSetFocusOn;
    if (completingByRightParen) {
      setOrIncreaseParen(leftMostNode,false);
      localExpToSetFocusOn=ParenthesisUtil.createUnmatchedParenthesis(expressionToProcess,true);
      expressionToProcess=(propagateNewParensInsteadOfExpr ? localExpToSetFocusOn : rightMostNode);
    }
 else {
      setOrIncreaseParen(rightMostNode,true);
      localExpToSetFocusOn=ParenthesisUtil.createUnmatchedParenthesis(expressionToProcess,false);
      expressionToProcess=(propagateNewParensInsteadOfExpr ? localExpToSetFocusOn : leftMostNode);
    }
    if (expressionToSetFocusOn == null) {
      expressionToSetFocusOn=localExpToSetFocusOn;
    }
    if (completingByRightParen && leftParenOnParens != null) {
      setOrMergeParen(localExpToSetFocusOn,false,leftParenOnParens);
    }
    if (!(completingByRightParen) && rightParenOnParens != null) {
      setOrMergeParen(localExpToSetFocusOn,true,rightParenOnParens);
    }
    if (completingByRightParen && rightParenOnParens != null) {
      setOrMergeParen(expressionToProcess,true,rightParenOnParens);
    }
    if (!(completingByRightParen) && leftParenOnParens != null) {
      setOrMergeParen(expressionToProcess,false,leftParenOnParens);
    }
    current=findWrappingParens(expressionToProcess);
  }
  SNode created=createUnmatchedParenthesis(expressionToProcess,completingByRightParen);
  checkWholeExpressionPriorities(myExpression);
  return (expressionToSetFocusOn != null ? expressionToSetFocusOn : created);
}
