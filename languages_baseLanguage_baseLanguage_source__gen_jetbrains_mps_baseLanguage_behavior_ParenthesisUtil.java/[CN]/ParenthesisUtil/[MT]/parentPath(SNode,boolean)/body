{
  List<SNode> path=new ArrayList<SNode>();
  ListSequence.fromList(path).addElement(leaf);
  List<SNode> leafAncestors=SNodeOperations.getNodeAncestors(leaf,null,true);
  for (SNode currentNode=SNodeOperations.getParent(leaf); SNodeOperations.isInstanceOf(currentNode,MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),1742226163722651198l,"jetbrains.mps.baseLanguage.structure.IBinaryLike")) && BehaviorReflection.invokeVirtual(Boolean.TYPE,SNodeOperations.cast(currentNode,MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),1742226163722651198l,"jetbrains.mps.baseLanguage.structure.IBinaryLike")),"virtual_canPropagateUnmatchedParenUp_1742226163722653670",new Object[]{leaf,rightParen}); currentNode=SNodeOperations.getParent(currentNode)) {
    ListSequence.fromList(path).addElement(SNodeOperations.cast(currentNode,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068431790191l,"jetbrains.mps.baseLanguage.structure.Expression")));
  }
  return path;
}
