{
  List<SNode> path=new ArrayList<SNode>();
  ListSequence.fromList(path).addElement(leaf);
  for (SNode currentNode=SNodeOperations.getParent(leaf); SNodeOperations.isInstanceOf(currentNode,"jetbrains.mps.baseLanguage.structure.Expression"); currentNode=SNodeOperations.getParent(currentNode)) {
    ListSequence.fromList(path).addElement(SNodeOperations.cast(currentNode,"jetbrains.mps.baseLanguage.structure.Expression"));
    if (SNodeOperations.isInstanceOf(currentNode,"jetbrains.mps.baseLanguage.structure.IBinaryLike") && BehaviorReflection.invokeVirtual(Boolean.TYPE,SNodeOperations.cast(currentNode,"jetbrains.mps.baseLanguage.structure.IBinaryLike"),"virtual_canPropagateUnmatchedParenUp_1742226163722653670",new Object[]{leaf,rightParen})) {
      continue;
    }
    break;
  }
  return path;
}
