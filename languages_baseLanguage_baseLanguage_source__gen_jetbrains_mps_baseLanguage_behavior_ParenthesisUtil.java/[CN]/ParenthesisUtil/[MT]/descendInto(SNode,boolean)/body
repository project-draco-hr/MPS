{
  List<SNode> path=ListSequence.fromListAndArray(new ArrayList<SNode>(),null,expr);
  List<SNode> result=ListSequence.fromList(new ArrayList<SNode>());
  SNode current=expr;
  while (ListSequence.fromList(path).isNotEmpty()) {
    if (SNodeOperations.isInstanceOf(current,"jetbrains.mps.baseLanguage.structure.IBinaryLike")) {
      if (eq_a65dpo_a0a0a0e0r(ListSequence.fromList(path).last(),current)) {
        SNode left=BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),SNodeOperations.cast(current,"jetbrains.mps.baseLanguage.structure.IBinaryLike"),"virtual_getSyntacticallyLeftSideExpression_1742226163722653708",new Object[]{});
        if (left != null) {
          ListSequence.fromList(path).addElement(left);
          current=left;
        }
 else {
          current=ListSequence.fromList(path).removeLastElement();
        }
      }
 else {
        ListSequence.fromList(result).addElement(current);
        SNode right=BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),SNodeOperations.cast(current,"jetbrains.mps.baseLanguage.structure.IBinaryLike"),"virtual_getSyntacticallyRightSideExpression_1742226163722653714",new Object[]{});
        if (right != null) {
          ListSequence.fromList(path).addElement(right);
          current=right;
        }
 else {
          current=ListSequence.fromList(path).removeLastElement();
        }
      }
    }
 else {
      ListSequence.fromList(result).addElement(current);
      if (eq_a65dpo_a0b0a0a4a71(ListSequence.fromList(path).last(),current)) {
        ListSequence.fromList(path).removeLastElement();
      }
      current=ListSequence.fromList(path).removeLastElement();
    }
  }
  if (!(completingByRightParen)) {
    result=ListSequence.fromList(result).reversedList();
  }
  result=ListSequence.fromList(result).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return completingByRightParen && (AttributeOperations.getAttribute(it,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.structure.IncompleteLeftParen")) != null) || !(completingByRightParen) && (AttributeOperations.getAttribute(it,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.structure.IncompleteRightParen")) != null);
    }
  }
).toListSequence();
  return result;
}
