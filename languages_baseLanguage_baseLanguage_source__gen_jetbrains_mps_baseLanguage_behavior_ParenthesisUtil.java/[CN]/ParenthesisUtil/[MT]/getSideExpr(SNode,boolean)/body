{
  if (SNodeOperations.isInstanceOf(expr,"jetbrains.mps.baseLanguage.structure.BinaryOperation")) {
    return (left ? SLinkOperations.getTarget(SNodeOperations.cast(expr,"jetbrains.mps.baseLanguage.structure.BinaryOperation"),"leftExpression",true) : SLinkOperations.getTarget(SNodeOperations.cast(expr,"jetbrains.mps.baseLanguage.structure.BinaryOperation"),"rightExpression",true));
  }
  if (SNodeOperations.isInstanceOf(expr,"jetbrains.mps.baseLanguage.structure.DotExpression")) {
    if (!(left)) {
      throw new IllegalStateException("Cannot get a right expression for: " + SNodeOperations.getConceptDeclaration(expr));
    }
    return SLinkOperations.getTarget(SNodeOperations.cast(expr,"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true);
  }
  throw new IllegalStateException("Cannot split " + SNodeOperations.getConceptDeclaration(expr) + " into left and right expressions:");
}
