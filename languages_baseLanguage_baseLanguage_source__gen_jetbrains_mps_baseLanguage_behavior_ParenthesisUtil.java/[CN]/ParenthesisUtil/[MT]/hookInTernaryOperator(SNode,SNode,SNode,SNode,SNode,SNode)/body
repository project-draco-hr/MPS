{
  SNode bottomMostTernary=ParenthesisUtil.findBottomMostTernary(SNodeOperations.cast(firstCommon,"jetbrains.mps.baseLanguage.structure.TernaryOperatorExpression"));
  if ((SLinkOperations.getTarget(firstCommon,"ifFalse",true) != null)) {
    SNodeOperations.replaceWithAnother(firstCommon,SLinkOperations.getTarget(bottomMostTernary,"ifFalse",true));
    if ((SLinkOperations.getTarget(firstCommon,"condition",true) != null)) {
      SLinkOperations.setTarget(rightTurn,"leftExpression",SLinkOperations.getTarget(firstCommon,"condition",true),true);
      SLinkOperations.setTarget(leftTurn,"rightExpression",parens,true);
    }
 else {
      SLinkOperations.setTarget(rightTurn,"leftExpression",parens,true);
    }
  }
 else {
    SNodeOperations.replaceWithAnother(firstCommon,SLinkOperations.getTarget(firstCommon,"condition",true));
    SLinkOperations.setTarget(leftTurn,"rightExpression",parens,true);
  }
  SLinkOperations.setTarget(bottomMostTernary,"ifFalse",rightAccumulator,true);
  SLinkOperations.setTarget(firstCommon,"condition",leftAccumulator,true);
}
