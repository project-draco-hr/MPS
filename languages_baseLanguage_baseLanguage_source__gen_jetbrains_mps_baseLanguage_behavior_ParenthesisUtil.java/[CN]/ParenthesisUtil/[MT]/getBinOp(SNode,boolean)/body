{
  SNode parent=SNodeOperations.getParent(expr);
  if (!(SNodeOperations.isInstanceOf(parent,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbdeb6fecfL,"jetbrains.mps.baseLanguage.structure.BinaryOperation")))) {
    return null;
  }
  SNode parentOp=SNodeOperations.cast(parent,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbdeb6fecfL,"jetbrains.mps.baseLanguage.structure.BinaryOperation"));
  boolean right=toRight && SLinkOperations.getTarget(parentOp,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbdeb6fecfL,0xfbdeb7a11cL,"leftExpression")) == expr;
  boolean left=!(toRight) && SLinkOperations.getTarget(parentOp,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbdeb6fecfL,0xfbdeb7a11bL,"rightExpression")) == expr;
  if (right || left) {
    return parentOp;
  }
  return getBinOp(parentOp,toRight);
}
