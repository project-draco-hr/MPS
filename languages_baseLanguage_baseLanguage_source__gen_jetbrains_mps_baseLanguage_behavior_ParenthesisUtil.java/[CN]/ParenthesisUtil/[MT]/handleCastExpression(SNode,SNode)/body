{
  SNode castExpr=SNodeOperations.cast(firstCommon,"jetbrains.mps.baseLanguage.structure.CastExpression");
  SNode leftTurn=null;
  SNode rightTurn=findRightTurn(rightExpression,castExpr);
  if (eq_a65dpo_a0f0k(leftTurn,rightTurn)) {
    SNode parens=SNodeFactoryOperations.replaceWithNewChild(castExpr,"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression");
    SLinkOperations.setTarget(parens,"expression",castExpr,true);
    return parens;
  }
  return ParenthesisUtil.rebalance(leftTurn,firstCommon,rightTurn);
}
