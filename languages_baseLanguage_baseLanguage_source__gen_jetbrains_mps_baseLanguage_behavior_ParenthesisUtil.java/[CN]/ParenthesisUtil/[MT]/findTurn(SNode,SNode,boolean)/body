{
  SNode currentNode=SNodeOperations.getParent(leaf);
  SNode previous=leaf;
  while (neq_a65dpo_a0a2a12(previous,stopNode) && SNodeOperations.isInstanceOf(currentNode,"jetbrains.mps.baseLanguage.structure.Expression")) {
    SNode leftSideExpression=BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),SNodeOperations.cast(currentNode,"jetbrains.mps.baseLanguage.structure.Expression"),"virtual_getLeftSideExpression_7583777362095214544",new Object[]{});
    SNode rightSideExpression=BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),SNodeOperations.cast(currentNode,"jetbrains.mps.baseLanguage.structure.Expression"),"virtual_getRightSideExpression_7583777362095256690",new Object[]{});
    if (leftTurn && eq_a65dpo_a0a2a2a12(rightSideExpression,previous)) {
      return SNodeOperations.cast(currentNode,"jetbrains.mps.baseLanguage.structure.Expression");
    }
    if (!(leftTurn) && eq_a65dpo_a0a3a2a12(leftSideExpression,previous)) {
      return SNodeOperations.cast(currentNode,"jetbrains.mps.baseLanguage.structure.Expression");
    }
    previous=currentNode;
    currentNode=SNodeOperations.getParent(currentNode);
  }
  return null;
}
