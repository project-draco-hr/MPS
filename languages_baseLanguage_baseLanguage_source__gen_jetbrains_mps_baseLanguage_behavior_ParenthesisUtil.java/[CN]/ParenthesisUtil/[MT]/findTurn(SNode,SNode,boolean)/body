{
  SNode currentNode=SNodeOperations.getParent(leaf);
  SNode previous=leaf;
  while (neq_a65dpo_a0a2a82(previous,stopNode) && SNodeOperations.isInstanceOf(currentNode,"jetbrains.mps.baseLanguage.structure.IBinaryLike")) {
    SNode leftSideExpression=BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),SNodeOperations.cast(currentNode,"jetbrains.mps.baseLanguage.structure.IBinaryLike"),"virtual_getSyntacticallyLeftSideExpression_1742226163722653708",new Object[]{});
    SNode rightSideExpression=BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),SNodeOperations.cast(currentNode,"jetbrains.mps.baseLanguage.structure.IBinaryLike"),"virtual_getSyntacticallyRightSideExpression_1742226163722653714",new Object[]{});
    if (leftTurn && eq_a65dpo_a0a2a2a82(rightSideExpression,previous)) {
      return SNodeOperations.cast(currentNode,"jetbrains.mps.baseLanguage.structure.IBinaryLike");
    }
    if (!(leftTurn) && eq_a65dpo_a0a3a2a82(leftSideExpression,previous)) {
      return SNodeOperations.cast(currentNode,"jetbrains.mps.baseLanguage.structure.IBinaryLike");
    }
    previous=currentNode;
    currentNode=SNodeOperations.getParent(currentNode);
  }
  return null;
}
