{
  Set<SNode> thrownsFromBody=SetSequence.<SNode>fromSet(new HashSet());
  StatementList_Behavior.call_collectUncaughtThrowables_5412515780383134474(body,thrownsFromBody,ignoreMayBeThrowables);
  for (  SNode caatch : ListSequence.<SNode>fromList(catchClause)) {
    SLinkOperations.getTarget(caatch,"throwable",true);
    Set<SNode> toRemove=SetSequence.<SNode>fromSet(new HashSet());
    for (    SNode thrownFromBody : SetSequence.<SNode>fromSet(thrownsFromBody)) {
      SNode catchedType=SLinkOperations.getTarget(SLinkOperations.getTarget(caatch,"throwable",true),"type",true);
      if (TypeChecker.getInstance().getSubtypingManager().isSubtype(new TryCatchStatement_Behavior.QuotationClass_1bi1ep_a0a0b0c0e0d().createNode(thrownFromBody),catchedType)) {
        SetSequence.fromSet(toRemove).addElement(thrownFromBody);
      }
    }
    SetSequence.fromSet(thrownsFromBody).removeSequence(SetSequence.<SNode>fromSet(toRemove));
  }
  SetSequence.fromSet(throwables).addSequence(SetSequence.<SNode>fromSet(thrownsFromBody));
  for (  SNode caatch : ListSequence.<SNode>fromList(catchClause)) {
    StatementList_Behavior.call_collectUncaughtThrowables_5412515780383134474(SLinkOperations.getTarget(caatch,"catchBody",true),throwables,ignoreMayBeThrowables);
  }
}
