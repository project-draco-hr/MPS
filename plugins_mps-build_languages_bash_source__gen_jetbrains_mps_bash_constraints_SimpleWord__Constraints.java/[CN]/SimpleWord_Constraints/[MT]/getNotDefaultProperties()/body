{
  Map<String,PropertyConstraintsDescriptor> properties=new HashMap();
  properties.put("word",new BasePropertyConstraintsDescriptor("word",this){
    @Override public boolean hasOwnSetter(){
      return true;
    }
    @Override public void setValue(    SNode node,    String propertyValue,    IScope scope){
      String propertyName="word";
      if (!(SimpleWord_Behavior.call_splitValue_3147078024759753598(node,(SPropertyOperations.getString(propertyValue))))) {
        SPropertyOperations.set(node,"word",(SPropertyOperations.getString(propertyValue)));
      }
    }
    @Override public boolean hasOwnValidator(){
      return true;
    }
    @Override public boolean validateValue(    SNode node,    String propertyValue,    IScope scope){
      String propertyName="word";
      if ((SPropertyOperations.getString(propertyValue)).contains("#")) {
        return false;
      }
      if ((SPropertyOperations.getString(propertyValue)).contains(";")) {
        return false;
      }
      return true;
    }
  }
);
  return properties;
}
