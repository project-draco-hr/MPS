{
  if (hasAnythingToDo()) {
    ProgressManager.getInstance().run(new Modal(null,"Reloading",false){
      public void run(      @NotNull final ProgressIndicator progressIndicator){
        fireReloadStarted();
        LOG.debug("Starting reload for:\n" + (myChangedModels.size() == 0 ? "" : "Changed models : " + myChangedModels + "\n") + (myChangedModules.size() == 0 ? "" : "Changed modules : " + myChangedModules + "\n")+ (myChangedProjects.size() == 0 ? "" : "Changed projects : " + myChangedProjects + "\n")+ (myNewModelVFiles.size() == 0 ? "" : "New models : " + myNewModelVFiles + "\n")+ (myNewModuleVFiles.size() == 0 ? "" : "New modules : " + myNewModuleVFiles + "\n")+ (myDeletedModels.size() == 0 ? "" : "Deleted models : " + myDeletedModels + "\n")+ (myDeletedModules.size() == 0 ? "" : "Deleted modules : " + myDeletedModules + "\n"));
        try {
          if (!myNewModuleVFiles.isEmpty()) {
            LOG.info("Reloading libraries.");
            progressIndicator.setText("Reloading libraries... Please wait.");
            ModelAccess.instance().runWriteAction(new Runnable(){
              public void run(){
                LibraryManager.getInstance().update();
              }
            }
);
          }
          preprocess();
          boolean areModulesUpdated=updateModules(progressIndicator);
          updateModels(progressIndicator);
          if (areModulesUpdated || !myNewModuleVFiles.isEmpty()) {
            progressIndicator.setText("Reloading classes... Please wait.");
            LOG.info("Reloading classes.");
            ModelAccess.instance().runReadAction(new Runnable(){
              @Override public void run(){
                ClassLoaderManager.getInstance().reloadAll(new EmptyProgressIndicator());
              }
            }
);
          }
        }
  finally {
          LOG.info("Reload finished.");
          fireReloadFinished();
        }
      }
    }
);
  }
}
