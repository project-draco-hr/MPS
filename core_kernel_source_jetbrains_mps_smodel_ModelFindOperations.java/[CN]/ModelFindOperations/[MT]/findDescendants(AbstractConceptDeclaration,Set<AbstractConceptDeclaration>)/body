{
  if (!myFindUsagesSupported)   return new HashSet<AbstractConceptDeclaration>();
  if (myModelDescriptor.isInitialized() && !SModelRepository.getInstance().isChanged(myModelDescriptor.getSModel()) && !descendantsKnownInModel.isEmpty())   return descendantsKnownInModel;
  if (myNeedSearchForStrings && !myModelRootManager.containsString(myModelDescriptor,node.getId()))   return descendantsKnownInModel;
  SModel model=myModelDescriptor.getSModel();
  Set<AbstractConceptDeclaration> result=new HashSet<AbstractConceptDeclaration>();
  if (model != null) {
    for (    SNode root : model.getRoots()) {
      addDescendants(root,node,result);
    }
  }
  descendantsKnownInModel.clear();
  descendantsKnownInModel.addAll(result);
  return descendantsKnownInModel;
}
