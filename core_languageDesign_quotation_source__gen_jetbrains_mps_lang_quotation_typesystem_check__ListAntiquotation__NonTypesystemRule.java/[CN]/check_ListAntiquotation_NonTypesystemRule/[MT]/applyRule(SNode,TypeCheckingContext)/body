{
  SNode annotatedNode=SNodeOperations.getParent(listAntiquotation);
  do {
    SNode matchedNode_5445_fcksdkfd=SNodeOperations.getParent(annotatedNode);
{
      boolean matches_5445_fcksdkfh=false;
{
        SNode matchingNode_5445_fcksdkfh=SNodeOperations.getParent(annotatedNode);
        if (matchingNode_5445_fcksdkfh != null) {
          matches_5445_fcksdkfh=SModelUtil_new.isAssignableConcept(matchingNode_5445_fcksdkfh.getConceptFqName(),"jetbrains.mps.lang.quotation.structure.Quotation");
        }
      }
      if (matches_5445_fcksdkfh) {
        if (SLinkOperations.getTarget(matchedNode_5445_fcksdkfd,"quotedNode",true) == annotatedNode) {
{
            BaseIntentionProvider intentionProvider=null;
            IErrorTarget errorTarget=new NodeErrorTarget();
            IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(listAntiquotation,"list antiquotation should not be used on a quoted node itself","r:00000000-0000-4000-0000-011c8959034a(jetbrains.mps.lang.quotation.typesystem)","1202840835255",intentionProvider,errorTarget);
          }
        }
        break;
      }
    }
  }
 while (false);
}
