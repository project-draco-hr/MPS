{
  StringBuilder sb=new StringBuilder();
  for (int i=0; i < s.length(); i++) {
    char c=s.charAt(i);
    if (c == '\\') {
      sb.append(c);
      if (++i >= s.length()) {
        return null;
      }
      c=s.charAt(i);
      if (c == 'u') {
        sb.append(c);
        for (int e=0; e < 4; e++) {
          if (++i >= s.length()) {
            return null;
          }
          c=s.charAt(i);
          if (!(StringLiteralRegexp_Behavior.call_isHexChar_8949395081772969908(SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.regexp.structure.StringLiteralRegexp"))),c))) {
            return null;
          }
          sb.append(c);
        }
      }
 else       if (Character.isDigit(c)) {
        sb.append(c);
        for (int e=0; e < 2; e++) {
          if (++i >= s.length()) {
            return null;
          }
          c=s.charAt(i);
          if (!(Character.isDigit(c))) {
            return null;
          }
          sb.append(c);
        }
      }
 else       if (c == 'n' || c == 't' || c == 'b' || c == 'f' || c == 'r' || c == '"' || c == '\'') {
        sb.append(c);
      }
 else       if (c == '\\') {
        sb.append("\\\\\\");
      }
 else {
        return null;
      }
    }
 else     if (c < 32) {
      return null;
    }
 else     if (c < 128) {
      if (c == '$') {
        sb.append('\\');
        sb.append('\\');
      }
 else       if (c == '"') {
        sb.append('\\');
      }
      sb.append(c);
    }
 else {
      sb.append("\\u");
      String val=Integer.toString(c,16);
      sb.append("0000".substring(val.length()) + val);
    }
  }
  return sb.toString();
}
