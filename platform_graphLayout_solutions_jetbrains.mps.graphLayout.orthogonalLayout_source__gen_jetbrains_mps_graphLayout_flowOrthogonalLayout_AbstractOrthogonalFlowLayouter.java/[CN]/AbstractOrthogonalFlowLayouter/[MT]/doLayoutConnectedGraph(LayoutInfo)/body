{
  Graph graph=layoutInfo.getGraph();
  LayoutInfo copyInfo;
  LayoutInfoCopier copier=new LayoutInfoCopier(layoutInfo);
  copier.copy();
  copyInfo=copier.getLayoutInfoCopy();
  GraphLayout copyLayout=getLayoutCorruptGraph(copyInfo);
  GraphLayout layout=new GraphLayout(graph);
  for (  Node node : ListSequence.fromList(graph.getNodes())) {
    Node copyNode=copier.getNodeCopy(node);
    layout.setLayoutFor(node,copyLayout.getNodeLayout(copyNode));
  }
  for (  Edge edge : ListSequence.fromList(graph.getEdges())) {
    Edge copyEdge=copier.getEdgeCopy(edge);
    List<Point> copyEdgeLayout=copyLayout.getEdgeLayout(copyEdge);
    if (copyEdge.getSource() != copier.getNodeCopy(edge.getSource())) {
      copyEdgeLayout=ListSequence.fromList(copyEdgeLayout).reversedList();
    }
    layout.setLayoutFor(edge,copyEdgeLayout);
  }
  for (  Edge edge : SetSequence.fromSet(layoutInfo.getLabeledEdges())) {
    Edge copyEdge=copier.getEdgeCopy(edge);
    layout.setLabelLayout(edge,copyLayout.getLabelLayout(copyEdge));
  }
  Rectangle rect=layout.getContainingRectangle();
  layout=LayoutTransform.shift(layout,-rect.x,-rect.y);
  return layout;
}
