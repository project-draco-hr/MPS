{
  GraphLayout initialLayout=GraphLayoutFactory.createGraphLayout(graph);
  for (  Node node : SetSequence.fromSet(initialNodes)) {
    initialLayout.setLayoutFor(node,layout.getNodeLayout(node));
  }
  for (  Edge edge : SetSequence.fromSet(initialEdges)) {
    List<Point> edgeLayout=ListSequence.fromList(new ArrayList<Point>());
    Node cur=edge.getSource();
    for (    Edge historyEdge : ListSequence.fromList(MapSequence.fromMap(history).get(edge))) {
      List<Point> historyLayout=layout.getEdgeLayout(historyEdge);
      if (historyEdge.getSource() != cur) {
        historyLayout=ListSequence.fromList(historyLayout).reversedList();
      }
      ListSequence.fromList(edgeLayout).addSequence(ListSequence.fromList(historyLayout));
      cur=historyEdge.getOpposite(cur);
    }
    initialLayout.setLayoutFor(edge,edgeLayout);
  }
  for (  Edge edge : SetSequence.fromSet(layoutInfo.getLabeledEdges())) {
    initialLayout.setLabelLayout(edge,layout.getLabelLayout(MapSequence.fromMap(labeledEdges).get(edge)));
  }
  return initialLayout;
}
