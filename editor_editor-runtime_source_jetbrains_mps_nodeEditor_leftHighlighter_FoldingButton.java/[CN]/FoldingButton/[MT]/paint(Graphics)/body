{
  if (myIsHidden) {
    return;
  }
  Color borderColor=getBorderColor();
  if (!myIsFolded) {
    int xs[]={-HALF_WIDTH,-HALF_WIDTH,0,HALF_WIDTH,HALF_WIDTH};
    int ys[]={myY1,myY1 + CANT_HEIGHT,myY1 + HEIGHT,myY1 + CANT_HEIGHT,myY1};
    g.setColor(myBackgroundColor);
    g.fillPolygon(xs,ys,xs.length);
    g.setColor(borderColor);
    g.drawPolygon(xs,ys,xs.length);
    for (int i=0; i < xs.length; i++) {
      ys[i]=myY2 - (ys[i] - myY1);
    }
    g.setColor(myBackgroundColor);
    g.fillPolygon(xs,ys,xs.length);
    g.setColor(borderColor);
    g.drawPolygon(xs,ys,xs.length);
    g.setColor(borderColor);
    g.drawLine(-HALF_WIDTH / 2,myY1 + HALF_WIDTH,HALF_WIDTH / 2,myY1 + HALF_WIDTH);
    g.drawLine(-HALF_WIDTH / 2,myY2 - HALF_WIDTH,HALF_WIDTH / 2,myY2 - HALF_WIDTH);
  }
 else {
    g.setColor(myBackgroundColor);
    g.fillRect(-HALF_WIDTH,myY1,HALF_WIDTH * 2,HALF_WIDTH * 2);
    g.setColor(borderColor);
    g.drawRect(-HALF_WIDTH,myY1,HALF_WIDTH * 2,HALF_WIDTH * 2);
    g.drawLine(-HALF_WIDTH / 2,myY1 + HALF_WIDTH,HALF_WIDTH / 2,myY1 + HALF_WIDTH);
    g.drawLine(0,myY1 + HALF_WIDTH / 2,0,myY1 + HALF_WIDTH * 3 / 2);
  }
}
