{
  final int index=Arrays.binarySearch(myId2Index,conceptId.getIdValue());
switch (index) {
case 0:
    if (myIntentions0 == null) {
      myIntentions0=new IntentionFactory[4];
      myIntentions0[0]=new MarkAsThreadSafe_Intention();
      myIntentions0[1]=new UnmarkAsThreadSafe_Intention();
      myIntentions0[2]=new MarkAsNonThreadSafe_Intention();
      myIntentions0[3]=new UnmarkAsNonThreadSafe_Intention();
    }
  return Arrays.asList(myIntentions0);
case 1:
if (myIntentions1 == null) {
  myIntentions1=new IntentionFactory[2];
  myIntentions1[0]=new MarkVariableDeclarationAsThreadSafe_Intention();
  myIntentions1[1]=new UnmarkVariableAsThreadSafe_Intention();
}
return Arrays.asList(myIntentions1);
case 2:
if (myIntentions2 == null) {
myIntentions2=new IntentionFactory[2];
myIntentions2[0]=new MarkStaticMethodCallAsThreadSafe_Intention();
myIntentions2[1]=new UnmarkStaticMethodCallAsThreadSafe_Intention();
}
return Arrays.asList(myIntentions2);
case 3:
if (myIntentions3 == null) {
myIntentions3=new IntentionFactory[1];
myIntentions3[0]=new TurnToParallelForEachStatement_Intention();
}
return Arrays.asList(myIntentions3);
case 4:
if (myIntentions4 == null) {
myIntentions4=new IntentionFactory[2];
myIntentions4[0]=new MarkInstanceMethodCallAsThreadSafe_Intention();
myIntentions4[1]=new UnmarkInstanceMethodCallAsThreadSafe_Intention();
}
return Arrays.asList(myIntentions4);
case 5:
if (myIntentions5 == null) {
myIntentions5=new IntentionFactory[4];
myIntentions5[0]=new MarkLocalStaticMethodCallAsThreadSafe_Intention();
myIntentions5[1]=new UnmarkLocalStaticMethodCallAsThreadSafe_Intention();
myIntentions5[2]=new UnmarkLocalInstanceMethodCallAsThreadSafe_Intention();
myIntentions5[3]=new MarkLocalInstanceMethodCallAsThreadSafe_Intention();
}
return Arrays.asList(myIntentions5);
case 6:
if (myIntentions6 == null) {
myIntentions6=new IntentionFactory[2];
myIntentions6[0]=new DetachFromThreadPool_Intention();
myIntentions6[1]=new TurnToForEachStatement_Intention();
}
return Arrays.asList(myIntentions6);
default :
return null;
}
}
