{
  SNode createdType=SLinkOperations.getTarget(argument,"createdType",true);
  if (createdType != null) {
    if (SLinkOperations.getTarget(createdType,"concept",false) == null) {
      TypeChecker.getInstance().reportTypeError(createdType,"concrete node type is expected");
      return;
    }
    if (SLinkOperations.getTarget(argument,"prototypeNode",true) != null) {
      TypeChecker.getInstance().getRuntimeSupport().createLessThanInequation(TypeChecker.getInstance().getRuntimeSupport().checkedTypeOf(SLinkOperations.getTarget(argument,"prototypeNode",true)),new QuotationClass_67().createNode(),SLinkOperations.getTarget(argument,"prototypeNode",true),null);
    }
    TypeChecker.getInstance().getRuntimeSupport().givetype(createdType,argument);
  }
}
