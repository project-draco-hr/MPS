{
  if (myNamesLoadingState == ModelLoadingState.FULLY_LOADED)   return myNameToConceptCache.get(conceptName);
  if (myNameToConceptCache.containsKey(conceptName))   return myNameToConceptCache.get(conceptName);
  if (myNamesWithNoConcepts.contains(conceptName))   return null;
  return NodeReadAccessCasterInEditor.runReadTransparentAction(new Computable<SNode>(){
    @Override public SNode compute(){
      SModel strucModel=myLanguage.getStructureModelDescriptor();
      if (strucModel == null)       return null;
      if (myNamesLoadingState.compareTo(ModelLoadingState.FULLY_LOADED) < 0) {
        for (        SNode root : strucModel.getRootNodes()) {
          if (!(SNodeUtil.isInstanceOfAbstractConceptDeclaration(root)))           continue;
          String name=root.getProperty(SNodeUtil.property_INamedConcept_name);
          if (name == null)           continue;
          myNameToConceptCache.putIfAbsent(name,root);
        }
        if (myNameToConceptCache.containsKey(conceptName))         return myNameToConceptCache.get(conceptName);
      }
      SNode result=myNameToConceptCache.get(conceptName);
      if (result == null) {
        myNamesWithNoConcepts.add(conceptName);
      }
      return result;
    }
  }
);
}
