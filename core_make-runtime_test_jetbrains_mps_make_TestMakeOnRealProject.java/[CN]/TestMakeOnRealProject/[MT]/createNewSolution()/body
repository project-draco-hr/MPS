{
  IFile descriptorFile=myTmpDir.getDescendant("TestSolution" + File.separator + "testSolution"+ MPSExtentions.DOT_SOLUTION);
  String fileName=descriptorFile.getName();
  SolutionDescriptor solutionDescriptor=new SolutionDescriptor();
  solutionDescriptor.setId(ModuleId.regular());
  String name=fileName.substring(0,fileName.length() - 4);
  solutionDescriptor.setNamespace(name);
  DefaultModelRoot modelRoot=new DefaultModelRoot(new IoFileSystem());
  modelRoot.setContentRoot(descriptorFile.getParent().getPath());
  modelRoot.addFile(DefaultModelRoot.SOURCE_ROOTS,descriptorFile.getParent().getPath());
  solutionDescriptor.getModelRootDescriptors().add(modelRoot.toDescriptor());
  SolutionDescriptorPersistence.saveSolutionDescriptor(descriptorFile,solutionDescriptor,MacrosFactory.forModuleFile(descriptorFile));
  ModuleHandle handle=new ModulesMiner().loadModuleHandle(descriptorFile);
  final Solution rv=(Solution)ModuleRepositoryFacade.createModule(handle,myModuleOwner);
  final SModel m1=rv.getModelRoots().iterator().next().createModel("m1");
  ((SModelInternal)m1).addLanguage(MetaAdapterFactory.getLanguage(myCreatedLanguage.getModuleReference()));
  return rv;
}
