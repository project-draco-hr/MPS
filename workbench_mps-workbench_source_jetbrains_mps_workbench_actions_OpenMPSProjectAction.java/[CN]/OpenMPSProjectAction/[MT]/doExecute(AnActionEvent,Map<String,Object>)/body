{
  final Project currentProject=PlatformDataKeys.PROJECT.getData(e.getDataContext());
  final FileChooserDescriptor descriptor=new OpenMPSProjectFileChooserDescriptor(true);
  descriptor.setTitle(IdeBundle.message("title.open.project"));
  descriptor.setDescription("Project files (" + MPSExtentions.DOT_MPS_PROJECT + ") ");
  VirtualFile userHomeDir=null;
  if (SystemInfo.isMac || SystemInfo.isLinux) {
    final String home=System.getProperty("user.home");
    if (home != null) {
      userHomeDir=LocalFileSystem.getInstance().findFileByIoFile(new File(home));
    }
  }
  descriptor.putUserData(FileChooserDialogImpl.PREFER_LAST_OVER_TO_SELECT,Boolean.TRUE);
  FileChooser.chooseFilesWithSlideEffect(descriptor,currentProject,userHomeDir,new Consumer<VirtualFile[]>(){
    @Override public void consume(    final VirtualFile[] files){
      VirtualFile virtualFile;
      if (files.length == 0 || (virtualFile=OpenMPSProjectFileChooserDescriptor.getMPSProjectFile(files[0])) == null)       return;
      String filePath=virtualFile.getPath();
      Project project=ProjectUtil.openProject(filePath,currentProject,false);
      if (project != null) {
        ProjectBaseDirectory.getInstance(project).setBaseDir(project.getBaseDir());
      }
    }
  }
);
}
