{
  SNode opExpression=SNodeOperations.getParent(node,null,false,false);
  SNode leftExpression=SLinkOperations.getTarget(opExpression,"leftExpression",true);
  SNode nodeType=TypeChecker.getInstance().getRuntimeSupport().coerce(TypeChecker.getInstance().getTypeOf(leftExpression),HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.bootstrap.smodelLanguage.structure.SNodeType"),false);
  SNode adapterClassifierType=AbstractConceptDeclaration_Behavior.call_getAdapterType_1179511141975(SLinkOperations.getTarget(nodeType,"concept",false));
  return SLinkOperations.getTarget(adapterClassifierType,"classifier",false);
}
