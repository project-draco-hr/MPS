{
  super(context.getOperationContext().getMainFrame(),"Find usages");
  CommandProcessor.instance().executeLightweightCommand(new Runnable(){
    public void run(){
      myQueryEditor=new QueryEditor(defaultOptions.getOption(QueryOptions.class),node,context);
      myFindersEditor=new FindersEditor(defaultOptions.getOption(FindersOptions.class),node,context){
        public void goToFinder(        final GeneratedFinder finder){
          final SNode[] finderNode=new SNode[]{null};
          CommandProcessor.instance().executeLightweightCommand(new Runnable(){
            public void run(){
              finderNode[0]=FindUsagesManager.getInstance().getNodeByFinder(finder);
            }
          }
);
          if (finderNode[0] == null)           return;
          FindUsagesDialog.this.onCancel();
          IDEProjectFrame frame=context.getOperationContext().getComponent(IDEProjectFrame.class);
          NavigationActionProcessor.executeNavigationAction(new EditorNavigationCommand(finderNode[0],frame.getEditorsPane().getCurrentEditor(),frame.getEditorsPane()),frame.getProject(),true);
        }
      }
;
      myViewOptionsEditor=new ViewOptionsEditor(defaultOptions.getOption(ViewOptions.class),node,context);
      JPanel centerPanel=new JPanel(new BorderLayout());
      centerPanel.add(myFindersEditor.getComponent(),BorderLayout.CENTER);
      centerPanel.add(myViewOptionsEditor.getComponent(),BorderLayout.EAST);
      myPanel=new JPanel(new BorderLayout());
      myPanel.add(centerPanel,BorderLayout.CENTER);
      myPanel.add(myQueryEditor.getComponent(),BorderLayout.SOUTH);
    }
  }
);
}
