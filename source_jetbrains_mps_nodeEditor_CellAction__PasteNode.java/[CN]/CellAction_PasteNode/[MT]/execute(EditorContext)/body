{
  LOG.assertInCommand();
  EditorCell selectedCell=context.getNodeEditorComponent().getSelectedCell();
  SNode selectedNode=selectedCell.getSNode();
  SModel model=selectedNode.getModel();
  PasteNodeData pasteNodeData=CopyPasteNodeUtil.getPasteNodeDataFromClipboard(model);
  SModel modelProperties=pasteNodeData.getModelProperties();
  Set<String> necessaryLanguages=pasteNodeData.getNecessaryLanguages();
  Set<SModelUID> necessaryImports=pasteNodeData.getNecessaryImports();
  if (!CopyPasteNodeUtil.addImportsAndLanguagesToModel(model,modelProperties,necessaryLanguages,necessaryImports,context.getOperationContext()))   return;
  List<SNode> pasteNodes=pasteNodeData.getNodes();
  Set<SReference> outgoingReferences=pasteNodeData.getOutgoingReferences();
  SNode anchor=pasteNodes.get(0);
  IOperationContext operationContext=context.getOperationContext();
  EditorsPane editorsPane=operationContext.getComponent(EditorsPane.class);
  PasteUtil.paste(selectedCell,anchor,operationContext,editorsPane);
  for (int i=1; i < pasteNodes.size(); i++) {
    SNode node=pasteNodes.get(i);
    PasteUtil.pasteRelative(anchor,node,false,operationContext);
    anchor=node;
  }
  Resolver.resolveReferences(outgoingReferences,operationContext);
}
