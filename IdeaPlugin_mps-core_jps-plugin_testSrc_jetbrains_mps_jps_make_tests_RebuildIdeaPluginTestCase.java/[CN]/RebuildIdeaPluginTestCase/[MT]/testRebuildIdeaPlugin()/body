{
  setUpParameters();
  setUpEnvironment("test.in");
  String projectDir=copyToProject("../IdeaPlugin","IdeaPlugin");
  copyToProject("../plugins/vcs-core/core/source_gen","plugins/vcs-core/core/source_gen");
  copyToProject("../plugins/vcs/common/source_gen","plugins/vcs/common/source_gen");
  copyToProject("../plugins/vcs/common/source","plugins/vcs/common/source");
  copyToProject("../plugins/mpsjava/basePlatform/source_gen","plugins/mpsjava/basePlatform/source_gen");
  copyToProject("../plugins/mpsjava/platform/source_gen","plugins/mpsjava/platform/source_gen");
  copyToProject("../plugins/mpsjava/platform/source","plugins/mpsjava/platform/source");
  copyToProject(PLUGINS_PATH + "/mps-core/lib","IdeaPlugin/mps-core/lib");
  copyToProject(PLUGINS_PATH + "/mps-core/languages","IdeaPlugin/mps-core/languages");
  copyToProject(PLUGINS_PATH + "/mps-testing/lib/jetbrains.mps.lang.test.util.jar","IdeaPlugin/mps-core/lib/jetbrains.mps.lang.test.util.jar");
  copyToProject(PLUGINS_PATH + "/mps-testing/languages/jetbrains.mps.lang.test.matcher.jar","IdeaPlugin/mps-core/lib/jetbrains.mps.lang.test.matcher.jar");
  copyToProject(PLUGINS_PATH + "/mps-testing/languages/languageDesign/jetbrains.mps.lang.test.runtime.jar","IdeaPlugin/mps-core/lib/jetbrains.mps.lang.test.runtime.jar");
  loadProject(projectDir);
  setUpJdk();
  setUpIdeaSdk();
  addBuildParameter(PLUGINS_PATH_ENV,PLUGINS_PATH);
  rebuildAll();
}
