{
  boolean result_14532009=true;
{
    SNode classifier=SLinkOperations.getTarget(supertype,"classifier",false);
    String errorMsg="";
    if (SNodeOperations.isInstanceOf(classifier,"jetbrains.mps.baseLanguage.structure.Interface")) {
      List<SNode> methods=SLinkOperations.getTargets(classifier,"method",true);
      if (methods != null) {
        if (ListSequence.fromList(methods).count() > 1) {
          errorMsg=": interface must have only one method";
        }
        SNode md=ListSequence.fromList(methods).getElement(0);
        if (SLinkOperations.getCount(subtype,"parameterType") == SLinkOperations.getCount(md,"parameter")) {
          SNode retType=ClassifierTypeUtil.resolveType(SLinkOperations.getTarget(md,"returnType",true),supertype);
          if (!(SNodeOperations.isInstanceOf(retType,"jetbrains.mps.baseLanguage.structure.VoidType"))) {
            result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)SLinkOperations.getTarget(subtype,"resultType",true),(SNode)retType,true);
          }
{
            SNode fpt;
            SNode mpt;
            Iterator<SNode> fpt_iterator=ListSequence.fromList(SLinkOperations.getTargets(subtype,"parameterType",true)).iterator();
            Iterator<SNode> mpt_iterator=ListSequence.fromList(SLinkOperations.getTargets(md,"parameter",true)).iterator();
            while (true) {
              if (!(fpt_iterator.hasNext())) {
                break;
              }
              if (!(mpt_iterator.hasNext())) {
                break;
              }
              fpt=fpt_iterator.next();
              mpt=mpt_iterator.next();
              result_14532009=result_14532009 && TypeChecker.getInstance().getSubtypingManager().isSubtype((SNode)ClassifierTypeUtil.resolveType(SLinkOperations.getTarget(mpt,"type",true),supertype),(SNode)fpt,true);
            }
          }
          return result_14532009;
        }
 else {
          errorMsg=": wrong parameter number";
        }
      }
 else {
        errorMsg=": interface must define a method";
      }
    }
 else {
      errorMsg=": not an interface";
    }
    result_14532009=false;
  }
  return result_14532009;
}
