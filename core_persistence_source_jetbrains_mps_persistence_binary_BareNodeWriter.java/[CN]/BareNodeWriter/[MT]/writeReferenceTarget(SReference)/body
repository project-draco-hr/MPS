{
  SModelReference targetModelReference=reference.getTargetSModelReference();
  if (reference instanceof StaticReference) {
    myOut.writeByte(1);
    myOut.writeNodeId(reference.getTargetNodeId());
  }
 else   if (reference instanceof DynamicReference) {
    DynamicReferenceOrigin origin=((DynamicReference)reference).getOrigin();
    if (origin != null) {
      myOut.writeByte(3);
      myOut.writeNodePointer(origin.getTemplate());
      myOut.writeNodePointer(origin.getInputNode());
    }
 else {
      myOut.writeByte(2);
    }
  }
 else {
    throw new IOException("cannot store reference: " + reference.toString());
  }
  if (targetModelReference != null && targetModelReference.equals(myModelReference)) {
    myOut.writeByte(REF_THIS_MODEL);
  }
 else {
    myOut.writeByte(REF_OTHER_MODEL);
    myOut.writeModelReference(targetModelReference);
  }
  myOut.writeString(((jetbrains.mps.smodel.SReference)reference).getResolveInfo());
}
