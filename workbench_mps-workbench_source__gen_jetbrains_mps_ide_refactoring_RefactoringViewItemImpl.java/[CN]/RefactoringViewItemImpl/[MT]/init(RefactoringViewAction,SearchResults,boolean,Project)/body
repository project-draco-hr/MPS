{
  myRefactoringViewAction=refactoringViewAction;
  mySearchResults=searchResults;
  if (mySearchResults == null) {
    throw new IllegalArgumentException("search result is null");
  }
  myPanel=new JPanel(new BorderLayout());
  myUsagesView=new UsagesView(project,new ViewOptions()){
    @Override public void close(){
      RefactoringViewItemImpl.this.close();
    }
    @Override public String getCaption(){
      return "";
    }
    @Override public Icon getIcon(){
      return null;
    }
    @Override public void read(    Element element,    jetbrains.mps.project.Project p){
    }
    @Override public void write(    Element element,    jetbrains.mps.project.Project p){
    }
  }
;
  myButtonsPanel=new JPanel(new FlowLayout(FlowLayout.LEFT));
  myDoRefactorButton=new JButton(new AbstractAction("Do Refactor"){
    @Override public void actionPerformed(    ActionEvent e){
      doRefactor();
    }
  }
);
  myDoRefactorButton.addKeyListener(new KeyAdapter(){
    @Override public void keyTyped(    KeyEvent e){
      if (e.getKeyChar() == '\n') {
        doRefactor();
      }
    }
  }
);
  myButtonsPanel.add(myDoRefactorButton);
  myCancelButton=new JButton(new AbstractAction("Cancel"){
    @Override public void actionPerformed(    ActionEvent e){
      close();
    }
  }
);
  myButtonsPanel.add(myCancelButton);
  if (myRefactoringContext != null) {
    addCheckboxes(hasModelsToGenerate);
  }
  myPanel.add(myUsagesView.getComponent(),BorderLayout.CENTER);
  myPanel.add(myButtonsPanel,BorderLayout.SOUTH);
  final FocusTraversalPolicy ftp=myPanel.getFocusTraversalPolicy();
  myPanel.setFocusTraversalPolicy(new RefactoringViewItemImpl.MyFocusTraversalPolicy(ftp));
}
