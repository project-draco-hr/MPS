{
  List<SNode> outputNodes=new ArrayList<SNode>();
  try {
    List<SNode> newOutputNodes=TemplateProcessor.createOutputNodesForTemplateNode(mappingName,fragmentNode,inputNode,generator);
    if (newOutputNodes != null) {
      outputNodes.addAll(newOutputNodes);
    }
 else {
      generator.showErrorMessage(inputNode,fragmentNode,reductionRule.getNode(),"error processing reduction rule");
    }
  }
 catch (  DismissTopMappingRuleException e) {
    throw e;
  }
catch (  Throwable t) {
    LOG.error(t,BaseAdapter.fromNode(fragmentNode));
    generator.showErrorMessage(inputNode,fragmentNode,reductionRule.getNode(),"error processing reduction rule");
  }
  return outputNodes;
}
