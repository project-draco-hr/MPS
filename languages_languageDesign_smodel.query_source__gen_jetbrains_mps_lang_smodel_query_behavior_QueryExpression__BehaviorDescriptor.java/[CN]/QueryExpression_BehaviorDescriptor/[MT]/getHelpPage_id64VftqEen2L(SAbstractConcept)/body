{
  String result="Supported parameters:\n";
  if (Sequence.fromIterable(QueryExpression_BehaviorDescriptor.getSupportedParameters_id3J6h25QXCDW.invoke(__thisConcept__)).contains(MetaAdapterFactory.getConcept(0x1a8554c4eb8443baL,0x8c346f0d90c6e75aL,0x3bc644217618ed2fL,"jetbrains.mps.lang.smodel.query.structure.QueryParameterScope").getDeclarationNode())) {
    result+="scope  (default = project)   specifies the boundaries of the lookup operation\n";
  }
  if (Sequence.fromIterable(QueryExpression_BehaviorDescriptor.getSupportedParameters_id3J6h25QXCDW.invoke(__thisConcept__)).contains(MetaAdapterFactory.getConcept(0x1a8554c4eb8443baL,0x8c346f0d90c6e75aL,0x3bc644217618ec86L,"jetbrains.mps.lang.smodel.query.structure.QueryParameterIncludeReadOnly").getDeclarationNode())) {
    result+="r/o+   (default = false)     also search in read-only models\n";
  }
 else {
    result+="Note: read-only models are included in the search scope\n";
  }
  return result;
}
