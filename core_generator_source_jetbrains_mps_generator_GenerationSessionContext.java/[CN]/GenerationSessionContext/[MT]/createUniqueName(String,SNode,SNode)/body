{
  if (useOldStyleUniqueName) {
    return createUniqueNameOldStyle(roughName,contextNode);
  }
  String uniqueSuffix=null;
  if (contextNode != null) {
    SNode topmostNamed=null;
    SNode node_=contextNode;
    while (node_ != null) {
      if (node_.isInstanceOfConcept(INamedConcept.concept)) {
        topmostNamed=node_;
      }
      node_=node_.getParent();
    }
    if (topmostNamed != null) {
      String name=topmostNamed.getName();
      if (name != null) {
        uniqueSuffix=Integer.toString(name.hashCode() >>> 1,Character.MAX_RADIX);
      }
    }
  }
  if (inputNode != null) {
    if (uniqueSuffix == null) {
      uniqueSuffix=nodeUniqueId(inputNode);
    }
 else {
      uniqueSuffix=uniqueSuffix + "_" + nodeUniqueId(inputNode);
    }
  }
  if (uniqueSuffix != null) {
    roughName=roughName.endsWith("_") ? roughName + uniqueSuffix : roughName + "_" + uniqueSuffix;
  }
  String uniqueName=roughName;
  if (uniqueSuffix == null || myUsedNames.contains(uniqueName)) {
    roughName+="_";
    for (int count=0; ; count++) {
      uniqueName=roughName + count;
      if (!myUsedNames.contains(uniqueName))       break;
    }
  }
  myUsedNames.add(uniqueName);
  return uniqueName;
}
