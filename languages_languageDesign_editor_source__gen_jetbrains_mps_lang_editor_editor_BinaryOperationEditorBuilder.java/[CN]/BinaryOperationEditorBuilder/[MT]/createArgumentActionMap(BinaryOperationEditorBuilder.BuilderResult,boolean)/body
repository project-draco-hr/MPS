{
  SNode current=getCurrent(isLeft);
  SNode opposite=getOpposite(isLeft);
  SNode argumentActionMap=_quotation_createNode_d1zfxg_a0c0p(SLinkOperations.getTarget(current,MetaAdapterFactory.getReferenceLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086aL,0xf98055fef0L,"target")),createLinkAccess(current),createLinkAccess(current),SLinkOperations.getTarget(current,MetaAdapterFactory.getReferenceLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086aL,0xf98055fef0L,"target")),SLinkOperations.getTarget(current,MetaAdapterFactory.getReferenceLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086aL,0xf98055fef0L,"target")),createLinkAccess(opposite),(isLeft ? "0" : "-1"),getCellSelection(isLeft),"replace " + SPropertyOperations.getString(getConcept(),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")) + " with "+ SPropertyOperations.getString(opposite,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086aL,0xf98052f333L,"role"))+ " argument",SPropertyOperations.getString(getConcept(),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")) + "_" + SPropertyOperations.getString(current,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086aL,0xf98052f333L,"role"))+ "_ArgumentActions",getConcept());
  ListSequence.fromList(result.myActionMaps).addElement(argumentActionMap);
  return argumentActionMap;
}
