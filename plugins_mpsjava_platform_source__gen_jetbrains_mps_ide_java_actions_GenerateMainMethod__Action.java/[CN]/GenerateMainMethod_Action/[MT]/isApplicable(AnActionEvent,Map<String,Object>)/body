{
  SNode classConcept=GenerateMainMethod_Action.this.getClassConcept(_params);
  return !(ListSequence.fromList(SLinkOperations.getTargets(classConcept,"staticMethod",true)).any(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return "main".equals(SPropertyOperations.getString(it,"name")) && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it,"returnType",true),"jetbrains.mps.baseLanguage.structure.VoidType") && (int)ListSequence.fromList(SLinkOperations.getTargets(it,"parameter",true)).count() == 1 && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(it,"parameter",true)).first(),"type",true),"jetbrains.mps.baseLanguage.structure.ArrayType");
    }
  }
)) && !(SNodeOperations.isInstanceOf(classConcept,"jetbrains.mps.baseLanguage.structure.AnonymousClass"));
}
