{
  final SNode node=(SNode)cellContext.get(BasicCellContext.EDITED_NODE);
  final IOperationContext context=editorContext.getOperationContext();
  return Collections.<SubstituteAction>singletonList(new AbstractNodeSubstituteAction(null,null,node){
    public String getMatchingText(    String pattern,    boolean referent_presentation,    boolean visible){
      return AbstractCellMenuPart_Generic_Item.this.getMatchingText();
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
    public String getDescriptionText(    String pattern){
      return null;
    }
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      handleAction(node,node.getModel(),context.getScope(),context,editorContext);
      return null;
    }
  }
);
}
