{
  if (nodeWrapper == null)   return null;
  if (nodeWrapper.getNode() instanceof RuntimeTypeVariable) {
    RuntimeTypeVariable var=(RuntimeTypeVariable)nodeWrapper.getNode();
    NodeWrapperType wrapperType=nodeWrapper.getIType();
    if (wrapperType == null) {
      return nodeWrapper;
    }
    NodeWrapperType type=wrapperType.getRepresentator();
    if (type != representator || depth > 0) {
      if (variablesMet.contains(var)) {
        nodeWrapper=new NodeWrapper();
        RuntimeErrorType error=new RuntimeErrorType(var.getModel());
        error.setErrorText("recursion types not allowed");
        nodeWrapper.setNode(error);
        return nodeWrapper;
      }
      variablesMet.add(var);
      nodeWrapper=expandWrapper(type.getNodeWrapper(),type,0,variablesMet);
      variablesMet.remove(var);
    }
    return nodeWrapper;
  }
  Map<NodeWrapper,NodeWrapper> childrenReplacement=new HashMap<NodeWrapper,NodeWrapper>();
  for (  NodeWrapper child : nodeWrapper.getChildren()) {
    NodeWrapper newChild=expandWrapper(child,representator,depth + 1,variablesMet);
    if (newChild != child) {
      childrenReplacement.put(child,newChild);
    }
  }
  for (  NodeWrapper child : childrenReplacement.keySet()) {
    if (child.getParents().isEmpty()) {
      System.err.println("debug");
    }
    NodeWrapper parent=child.getParents().get(0);
    parent.removeChild(child);
    parent.addChild(childrenReplacement.get(child),child.getRoleInParent());
  }
  return nodeWrapper;
}
