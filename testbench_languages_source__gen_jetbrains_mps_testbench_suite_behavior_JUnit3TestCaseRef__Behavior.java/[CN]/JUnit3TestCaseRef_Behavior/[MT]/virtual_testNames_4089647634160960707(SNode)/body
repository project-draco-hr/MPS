{
  return ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(thisNode,"klass",false),"method",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode m){
      return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(m,"visibility",true),"jetbrains.mps.baseLanguage.structure.PublicVisibility") && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(m,"returnType",true),"jetbrains.mps.baseLanguage.structure.VoidType") && SPropertyOperations.getString(m,"name").startsWith("test");
    }
  }
).<String>select(new ISelector<SNode,String>(){
    public String select(    SNode m){
      return SPropertyOperations.getString(m,"name");
    }
  }
);
}
