{
  return ModelAccess.instance().runReadAction(new Computable<List<BaseSNodeDescriptor>>(){
    @Override public List<BaseSNodeDescriptor> compute(){
      List<BaseSNodeDescriptor> result=new ArrayList<BaseSNodeDescriptor>();
      List<BaseSNodeDescriptor> descriptors=findPossibleNodes(inputString);
      for (      BaseSNodeDescriptor descriptor : descriptors) {
        SNode classifier=JavaModelUtil_new.findClassifier(descriptor.getModelReference().getLongName(),descriptor.getNodeName(),true);
        if ((classifier != null) && isExceptionNode(classifier)) {
          result.add(descriptor);
        }
      }
      return result;
    }
  }
);
}
