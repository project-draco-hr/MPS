{
  final EditorCell selectedCell=editorContext.getSelectedCell();
  if (selectedCell == null)   return false;
  if (areModifiersPressed(keyEvent))   return false;
  if (keyEvent.getKeyCode() == KeyEvent.VK_DELETE && selectedCell.isLastPositionInBigCell() && !selectedCell.isFirstPositionInBigCell()) {
    final EditorCell target;
    if (selectedCell.isLastPositionInBigCell() && selectedCell.getContainingBigCell().getNextSibling() != null) {
      target=selectedCell.getContainingBigCell().getNextSibling();
    }
 else     if (selectedCell.getNextSibling() != null) {
      target=selectedCell.getNextSibling();
    }
 else {
      target=selectedCell.getNextLeaf(CellConditions.SELECTABLE);
    }
    if (target == null || ModelAccess.instance().runReadAction(new Computable<Boolean>(){
      public Boolean compute(){
        return target.getSNode().isAncestorOf(selectedCell.getSNode());
      }
    }
))     return false;
    return target.executeAction(CellActionType.DELETE);
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_BACK_SPACE && selectedCell.isFirstPositionInBigCell() && !selectedCell.isLastPositionInBigCell()) {
    final EditorCell target;
    if (selectedCell.isFirstPositionInBigCell() && selectedCell.getContainingBigCell().getPrevSibling() != null) {
      target=selectedCell.getContainingBigCell().getPrevSibling();
    }
 else     if (selectedCell.getPrevSibling() != null) {
      target=selectedCell.getPrevSibling();
    }
 else {
      target=selectedCell.getPrevLeaf(CellConditions.SELECTABLE);
    }
    if (target == null)     return false;
    if (ModelAccess.instance().runReadAction(new Computable<Boolean>(){
      public Boolean compute(){
        return target.getSNode().isAncestorOf(selectedCell.getSNode());
      }
    }
))     return false;
    return target.executeAction(CellActionType.DELETE);
  }
  return false;
}
