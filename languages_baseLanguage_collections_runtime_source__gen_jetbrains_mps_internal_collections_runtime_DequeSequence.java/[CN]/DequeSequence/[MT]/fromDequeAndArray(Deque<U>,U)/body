{
  if (Sequence.NULL_ARRAY_IS_SINGLETON) {
    if (array == null) {
      array=(U[])Sequence.nullSingletonArray();
    }
  }
  if (Sequence.USE_NULL_SEQUENCE) {
    if (deque == null && array == null) {
      return NullDequeSequence.instance();
    }
 else     if (deque == null) {
      deque=new LinkedList<U>();
    }
 else     if (array == null) {
      if (deque instanceof IDequeSequence) {
        return (IDequeSequence<U>)deque;
      }
      return new DequeSequence<U>(deque);
    }
  }
  List<U> input=Arrays.asList(array);
  if (Sequence.IGNORE_NULL_VALUES) {
    for (    U u : input) {
      if (u != null) {
        deque.add(u);
      }
    }
  }
 else {
    deque.addAll(input);
  }
  if (deque instanceof IDequeSequence) {
    return (IDequeSequence<U>)deque;
  }
  return new DequeSequence<U>(deque);
}
