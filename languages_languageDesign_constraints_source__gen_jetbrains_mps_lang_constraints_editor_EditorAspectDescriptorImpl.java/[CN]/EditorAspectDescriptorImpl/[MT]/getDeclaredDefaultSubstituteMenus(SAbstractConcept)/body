{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_xbvbvu_a0d.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      return Collections.<SubstituteMenu>singletonList(new ConceptParameter_ReferentSearchScope_enclosingNode_SubstituteMenu());
case 1:
    return Collections.<SubstituteMenu>singletonList(new ConstraintFunctionParameter_checkedNode_SubstituteMenu());
case 2:
  return Collections.<SubstituteMenu>singletonList(new ConstraintFunctionParameter_childConcept_SubstituteMenu());
case 3:
return Collections.<SubstituteMenu>singletonList(new ConstraintFunctionParameter_childNode_SubstituteMenu());
case 4:
return Collections.<SubstituteMenu>singletonList(new ConstraintFunctionParameter_containingLink_SubstituteMenu());
case 5:
return Collections.<SubstituteMenu>singletonList(new ConstraintFunctionParameter_contextNode_SubstituteMenu());
case 6:
return Collections.<SubstituteMenu>singletonList(new ConstraintFunctionParameter_contextRole_SubstituteMenu());
case 7:
return Collections.<SubstituteMenu>singletonList(new ConstraintFunctionParameter_exists_SubstituteMenu());
case 8:
return Collections.<SubstituteMenu>singletonList(new ConstraintFunctionParameter_inEditor_SubstituteMenu());
case 9:
return Collections.<SubstituteMenu>singletonList(new ConstraintFunctionParameter_link_SubstituteMenu());
case 10:
return Collections.<SubstituteMenu>singletonList(new ConstraintFunctionParameter_linkTarget_SubstituteMenu());
case 11:
return Collections.<SubstituteMenu>singletonList(new ConstraintFunctionParameter_newReferentNode_SubstituteMenu());
case 12:
return Collections.<SubstituteMenu>singletonList(new ConstraintFunctionParameter_oldReferentNode_SubstituteMenu());
case 13:
return Collections.<SubstituteMenu>singletonList(new ConstraintFunctionParameter_parameterNode_SubstituteMenu());
case 14:
return Collections.<SubstituteMenu>singletonList(new ConstraintFunctionParameter_parentNode_SubstituteMenu());
case 15:
return Collections.<SubstituteMenu>singletonList(new ConstraintFunctionParameter_position_SubstituteMenu());
case 16:
return Collections.<SubstituteMenu>singletonList(new ConstraintFunctionParameter_referenceNode_SubstituteMenu());
case 17:
return Collections.<SubstituteMenu>singletonList(new ConstraintFunctionParameter_smartReference_SubstituteMenu());
case 18:
return Collections.<SubstituteMenu>singletonList(new ConstraintFunctionParameter_visible_SubstituteMenu());
case 19:
return Collections.<SubstituteMenu>singletonList(new ConstraintsFunctionParameter_node_SubstituteMenu());
default :
}
}
return Collections.<SubstituteMenu>emptyList();
}
