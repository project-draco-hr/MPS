{
  SNode type=SLinkOperations.getTarget(node,"type",true);
  if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.core.query.structure.MqlStringType") || SNodeOperations.isInstanceOf(type,"jetbrains.mps.core.query.structure.MqlIntType") || SNodeOperations.isInstanceOf(type,"jetbrains.mps.core.query.structure.MqlBoolType")) {
    SNode stype=SConceptOperations.createNewNode("jetbrains.mps.core.structure.structure.SPrimitiveDataType",null);
    if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.core.query.structure.MqlStringType")) {
      SPropertyOperations.set(stype,"kind","string");
    }
 else     if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.core.query.structure.MqlIntType")) {
      SPropertyOperations.set(stype,"kind","int");
    }
 else {
      SPropertyOperations.set(stype,"kind","bool");
    }
    SNode property=SNodeOperations.replaceWithNewChild(node,"jetbrains.mps.core.structure.structure.SProperty");
    SLinkOperations.setTarget(property,"type",stype,true);
    SPropertyOperations.set(property,"name",SPropertyOperations.getString(node,"name"));
  }
 else   if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.core.smodel.structure.MqlNodeType")) {
    SNode link=SNodeOperations.replaceWithNewChild(node,"jetbrains.mps.core.structure.structure.SChildLink");
    SLinkOperations.setTarget(link,"target",SLinkOperations.getTarget(SNodeOperations.cast(type,"jetbrains.mps.core.smodel.structure.MqlNodeType"),"concept",false),false);
    SPropertyOperations.set(link,"name",SPropertyOperations.getString(node,"name"));
  }
 else   if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.core.query.structure.MqlListType") && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(type,"jetbrains.mps.core.query.structure.MqlListType"),"inner",true),"jetbrains.mps.core.smodel.structure.MqlNodeType")) {
    SNode link=SNodeOperations.replaceWithNewChild(node,"jetbrains.mps.core.structure.structure.SChildLink");
    SLinkOperations.setTarget(link,"target",SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(type,"jetbrains.mps.core.query.structure.MqlListType"),"inner",true),"jetbrains.mps.core.smodel.structure.MqlNodeType"),"concept",false),false);
    SPropertyOperations.set(link,"name",SPropertyOperations.getString(node,"name"));
    SNodeFactoryOperations.setNewChild(link,"cardinality","jetbrains.mps.core.structure.structure.SCardinality");
    SPropertyOperations.set(SLinkOperations.getTarget(link,"cardinality",true),"isMultiple","" + (true));
  }
}
