{
  SNode classConcept=SNodeOperations.getAncestor(SLinkOperations.getTarget(thisNode,"baseMethodDeclaration",false),"jetbrains.mps.baseLanguage.structure.ClassConcept",false,false);
  if ((classConcept == null)) {
    SModel targetModel=SNodeOperations.getReference(thisNode,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration")).getTargetModel();
    SNodeId targetId=SNodeOperations.getReference(thisNode,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration")).getTargetNodeId();
    if (SModelStereotype.getStubStereotypeForId(LanguageID.JAVA).equals(targetModel.getStereotype()) && targetId != null) {
      String constructorId=targetId.toString();
      String classId=constructorId.substring(0,constructorId.indexOf("."));
      classConcept=SNodeOperations.cast(targetModel.getNodeById(classId),"jetbrains.mps.baseLanguage.structure.ClassConcept");
    }
  }
  return SLinkOperations.getTargets(classConcept,"constructor",true);
}
