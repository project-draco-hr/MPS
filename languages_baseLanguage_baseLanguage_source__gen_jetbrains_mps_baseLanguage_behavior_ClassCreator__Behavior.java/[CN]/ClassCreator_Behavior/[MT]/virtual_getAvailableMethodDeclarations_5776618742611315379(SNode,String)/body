{
  SNode classConcept=SNodeOperations.getAncestor(SLinkOperations.getTarget(thisNode,"baseMethodDeclaration",false),"jetbrains.mps.baseLanguage.structure.ClassConcept",false,false);
  if ((classConcept == null)) {
    SReference constructorDeclarationReference=SNodeOperations.getReference(thisNode,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
    if (constructorDeclarationReference != null) {
      SModel targetModel=((StaticReference)constructorDeclarationReference).getTargetSModel();
      SNodeId targetId=constructorDeclarationReference.getTargetNodeId();
      if (SModelStereotype.getStubStereotypeForId(LanguageID.JAVA).equals(targetModel.getStereotype()) && targetId != null) {
        String constructorId=targetId.toString();
        String classId=constructorId.substring(0,constructorId.indexOf("."));
        classConcept=SNodeOperations.cast(targetModel.getNodeById(classId),"jetbrains.mps.baseLanguage.structure.ClassConcept");
      }
    }
  }
  return ClassConcept_Behavior.call_constructors_5292274854859503373(classConcept);
}
