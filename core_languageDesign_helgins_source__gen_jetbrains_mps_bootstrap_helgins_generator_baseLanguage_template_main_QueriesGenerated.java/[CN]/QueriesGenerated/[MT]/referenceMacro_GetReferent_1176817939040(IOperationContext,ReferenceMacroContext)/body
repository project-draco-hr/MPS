{
  SNode parent=SNodeOperations.getParent(SLinkOperations.getTarget(_context.getNode(),"applicableNode",false));
  List<SNode> vars=_context.getAllOutputNodesByInputNodeAndMappingLabel(parent,"coercedNode");
  SNode varRef=_context.getOutputNode();
  final ISearchScope varScope=SNodeOperations.getReferentSearchScope(varRef,"localVariableDeclaration",operationContext);
  return ListSequence.fromList(vars).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SearchScopeOperations.containsNode(varScope,it);
    }
  }
).first();
}
