{
  for (  SNode methodCall : SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.baseLanguage.structure.IMethodCall")) {
    SNode baseMethodDeclaration=SLinkOperations.getTarget(methodCall,"baseMethodDeclaration",false);
    boolean toProcess=false;
    List<SNode> annotationInstances=SLinkOperations.getTargets(baseMethodDeclaration,"annotation",true);
    for (    SNode annotationInstance : annotationInstances) {
      if (SLinkOperations.getTarget(annotationInstance,"annotation",false) == SLinkOperations.getTarget(new QuotationClass_13().createNode(),"classifier",false)) {
        toProcess=true;
        break;
      }
    }
    if (toProcess) {
      SLinkOperations.insertChildFirst(methodCall,"actualArgument",new QuotationClass_14().createNode());
    }
  }
  for (  SNode baseMethodDeclaration : SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration")) {
    boolean toProcess=false;
    List<SNode> annotationInstances=SLinkOperations.getTargets(baseMethodDeclaration,"annotation",true);
    for (    SNode annotationInstance : annotationInstances) {
      if (SLinkOperations.getTarget(annotationInstance,"annotation",false) == SLinkOperations.getTarget(new QuotationClass_15().createNode(),"classifier",false)) {
        toProcess=true;
        break;
      }
    }
    if (toProcess) {
      SLinkOperations.insertChildFirst(baseMethodDeclaration,"parameter",new QuotationClass_16().createNode());
    }
  }
}
