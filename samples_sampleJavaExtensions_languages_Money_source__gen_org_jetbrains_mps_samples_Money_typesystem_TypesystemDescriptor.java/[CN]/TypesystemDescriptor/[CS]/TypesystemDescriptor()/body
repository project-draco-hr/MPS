{
{
    InferenceRule_Runtime inferenceRule=new typeof_ConvertTo_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    InferenceRule_Runtime inferenceRule=new typeof_GetAmount_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    InferenceRule_Runtime inferenceRule=new typeof_GetCurrency_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    InferenceRule_Runtime inferenceRule=new typeof_MoneyLiteral_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    InferenceRule_Runtime inferenceRule=new typeof_MovingAverage_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    InferenceRule_Runtime inferenceRule=new typeof_StockPriceInquiry_InferenceRule();
    this.myInferenceRules.add(inferenceRule);
  }
{
    SubtypingRule_Runtime subtypingRule=new Money_extends_java_lang_Object_SubtypingRule();
    this.mySubtypingRules.add(subtypingRule);
  }
  this.myOverloadedOperationsTypesProviders.add(new TypesystemDescriptor.CustomOverloadedOperationsTypesProvider_b(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbced38fcfL,"jetbrains.mps.baseLanguage.structure.GreaterThanExpression")));
  this.myOverloadedOperationsTypesProviders.add(new TypesystemDescriptor.CustomOverloadedOperationsTypesProvider_b(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10c8d0fac2cL,"jetbrains.mps.baseLanguage.structure.GreaterThanOrEqualsExpression")));
  this.myOverloadedOperationsTypesProviders.add(new TypesystemDescriptor.CustomOverloadedOperationsTypesProvider_b(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbced3b82aL,"jetbrains.mps.baseLanguage.structure.LessThanExpression")));
  this.myOverloadedOperationsTypesProviders.add(new TypesystemDescriptor.CustomOverloadedOperationsTypesProvider_b(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10c8d53a915L,"jetbrains.mps.baseLanguage.structure.LessThanOrEqualsExpression")));
  this.myOverloadedOperationsTypesProviders.add(new TypesystemDescriptor.CustomOverloadedOperationsTypesProvider_a(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc67c7f5L,"jetbrains.mps.baseLanguage.structure.MinusExpression")));
  this.myOverloadedOperationsTypesProviders.add(new TypesystemDescriptor.CustomOverloadedOperationsTypesProvider_a(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc67c7fbL,"jetbrains.mps.baseLanguage.structure.PlusExpression")));
}
