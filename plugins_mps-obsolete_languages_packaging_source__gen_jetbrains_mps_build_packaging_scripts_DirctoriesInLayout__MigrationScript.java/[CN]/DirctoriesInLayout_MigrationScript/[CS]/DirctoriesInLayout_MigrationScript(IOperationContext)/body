{
  super("Migrate directories in build scripts");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Migrate deploy directory in build scripts";
    }
    public String getAdditionalInfo(){
      return "Migrate deploy directory in build scripts";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.build.packaging.structure.Layout";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return (SLinkOperations.getTarget(node,"deployDirectory",true) == null);
    }
    public void doUpdateInstanceNode(    SNode node){
      if (SPropertyOperations.getBoolean(node,"useTmpDir")) {
        SLinkOperations.setTarget(node,"deployDirectory",new DirctoriesInLayout_MigrationScript.QuotationClass_6u5ptb_a0a0a0a0e0a0a0a0b0a().createNode(Layout_Behavior.getBasedirName_1226509010730(),SPropertyOperations.getString(node,"name") + ".artifacts"),true);
      }
 else {
        SLinkOperations.setTarget(node,"deployDirectory",new DirctoriesInLayout_MigrationScript.QuotationClass_6u5ptb_a0a0a0a0a4a0a0a0a1a0().createNode(Layout_Behavior.getBasedirName_1226509010730()),true);
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Migrate scripts directory in build scripts";
    }
    public String getAdditionalInfo(){
      return "Migrate scripts directory in build scripts";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.build.packaging.structure.Layout";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return (SLinkOperations.getTarget(node,"scriptsDirectory",true) == null);
    }
    public void doUpdateInstanceNode(    SNode node){
      if (isNotEmpty_6u5ptb_a0a0e0a0a0a0c0a(SPropertyOperations.getString(node,"scriptsFolder"))) {
        SLinkOperations.setTarget(node,"scriptsDirectory",new DirctoriesInLayout_MigrationScript.QuotationClass_6u5ptb_a0a0a0a0e0a0a0a0c0a().createNode(Layout_Behavior.getBasedirName_1226509010730(),SPropertyOperations.getString(node,"scriptsFolder")),true);
      }
 else {
        SLinkOperations.setTarget(node,"scriptsDirectory",new DirctoriesInLayout_MigrationScript.QuotationClass_6u5ptb_a0a0a0a0a4a0a0a0a2a0().createNode(Layout_Behavior.getBasedirName_1226509010730()),true);
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Replace basedir macro with base_dir";
    }
    public String getAdditionalInfo(){
      return "Replace basedir macro with base_dir";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.build.packaging.structure.Macro";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SPropertyOperations.getString(node,"name").equals("basedir");
    }
    public void doUpdateInstanceNode(    SNode node){
      SPropertyOperations.set(node,"name",Layout_Behavior.getBasedirName_1226509010730());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
