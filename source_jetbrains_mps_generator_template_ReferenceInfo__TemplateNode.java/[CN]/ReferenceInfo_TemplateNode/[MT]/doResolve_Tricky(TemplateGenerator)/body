{
  SNode leastCommonParent_template=myTemplateSourceNode.findLeastCommonParent(myTemplateTargetNode);
  if (leastCommonParent_template != null) {
    SNode leastCommonParent_output=getOutputSourceNode();
    while (leastCommonParent_output != null && generator.findTemplateNodeByOutputNode(leastCommonParent_output) != leastCommonParent_template) {
      leastCommonParent_output=leastCommonParent_output.getParent();
    }
    if (leastCommonParent_output != null) {
      SNode outputTargetNode=findOutputSubnodeByTemplateNode(generator,leastCommonParent_output,myTemplateTargetNode);
      if (outputTargetNode != null) {
        return outputTargetNode;
      }
    }
  }
  SNode outputTargetNode=generator.findOutputNodeByTemplateNode(myTemplateTargetNode,false);
  return outputTargetNode;
}
