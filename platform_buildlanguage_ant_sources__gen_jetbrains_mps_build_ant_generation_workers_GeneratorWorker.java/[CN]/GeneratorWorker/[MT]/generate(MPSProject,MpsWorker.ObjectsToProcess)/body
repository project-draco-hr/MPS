{
  StringBuffer s=new StringBuffer("Generating:");
  for (  MPSProject p : go.getProjects()) {
    s.append("\n    ");
    s.append(p);
  }
  for (  IModule m : go.getModules()) {
    s.append("\n    ");
    s.append(m);
  }
  for (  SModelDescriptor m : go.getModels()) {
    s.append("\n    ");
    s.append(m);
  }
  info(s.toString());
  final ProjectOperationContext ctx=ProjectOperationContext.get(project.getProject());
  final Iterable<IResource> resources=collectResources(ctx,go);
  IdeEventQueue.getInstance().flushQueue();
  ThreadUtils.runInUIThreadAndWait(new Runnable(){
    public void run(){
    }
  }
);
  ThreadUtils.runInUIThreadAndWait(new Runnable(){
    public void run(){
      new BuildMakeService(ctx,myMessageHandler).make(resources);
    }
  }
);
  IdeEventQueue.getInstance().flushQueue();
  ThreadUtils.runInUIThreadAndWait(new Runnable(){
    public void run(){
    }
  }
);
}
