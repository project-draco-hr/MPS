{
  SNode coercedType=TypeChecker.getInstance().getRuntimeSupport().coerce_(BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),thisNode,"virtual_getThisType_3305065273710880775",new Object[]{}),new Classifier_Behavior.Pattern_qw8l7c_a1a0a0a52(ancestor),true);
  if (SNodeOperations.isInstanceOf(t,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1109283449304l,"jetbrains.mps.baseLanguage.structure.TypeVariableReference"))) {
    return Classifier_Behavior.call_getResolvedVar_3305065273710881245(thisNode,SNodeOperations.cast(t,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1109283449304l,"jetbrains.mps.baseLanguage.structure.TypeVariableReference")),ancestor,coercedType,method,baseMethod);
  }
 else {
    SNode result=SNodeOperations.copyNode(t);
    for (    SNode reference : SNodeOperations.getNodeDescendants(result,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1109283449304l,"jetbrains.mps.baseLanguage.structure.TypeVariableReference"),false,new SAbstractConcept[]{})) {
      SNode resolvedVar=Classifier_Behavior.call_getResolvedVar_3305065273710881245(thisNode,reference,ancestor,coercedType,method,baseMethod);
      if (reference != resolvedVar) {
        SNodeOperations.replaceWithAnother(reference,resolvedVar);
      }
    }
    return result;
  }
}
