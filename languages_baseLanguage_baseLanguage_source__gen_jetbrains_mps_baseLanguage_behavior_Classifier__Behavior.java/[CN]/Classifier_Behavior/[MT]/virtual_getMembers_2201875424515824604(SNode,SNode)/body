{
  if (!(SConceptPropertyOperations.getBoolean(SNodeOperations.castConcept(kind,"jetbrains.mps.baseLanguage.structure.ClassifierMember"),"inheritableMember"))) {
    List<SNode> result=new ArrayList<SNode>();
    ListSequence.fromList(result).addSequence(ListSequence.fromList(IMemberContainer_Behavior.call_getMembers_1213877531970(thisNode)).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SNodeOperations.isInstanceOf(it,NameUtil.nodeFQName(kind));
      }
    }
).select(new ISelector<SNode,SNode>(){
      public SNode select(      SNode it){
        return SNodeOperations.cast(it,"jetbrains.mps.baseLanguage.structure.ClassifierMember");
      }
    }
));
    return result;
  }
  List<SNode> pretenders=new ArrayList<SNode>();
  for (  SNode classifier : Classifier_Behavior.call_getExtendedClassifiers_2201875424516179426(thisNode)) {
    boolean isSamePackage=VisibilityUtil.packageName(thisNode).equals(VisibilityUtil.packageName(classifier));
    final int accessLevel=ClassAccessKind.SUBCLASS | ((isSamePackage ? ClassAccessKind.PACKAGE : 0));
    ListSequence.fromList(pretenders).addSequence(ListSequence.fromList(Classifier_Behavior.call_getMembers_2201875424515824604(classifier,kind)).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return ClassifierMember_Behavior.call_isVisible_8083692786967482069(it,accessLevel);
      }
    }
));
  }
  if (SConceptOperations.isSubConceptOf(kind,"jetbrains.mps.baseLanguage.structure.VariableDeclaration")) {
    return Classifier_Behavior.call_overrideMembersBySigature_2201875424516179874(thisNode,kind,pretenders,new _FunctionTypes._return_P1_E0<String,SNode>(){
      public String invoke(      SNode member){
        return SPropertyOperations.getString(SNodeOperations.cast(member,"jetbrains.mps.baseLanguage.structure.VariableDeclaration"),"name");
      }
    }
);
  }
  if (SConceptOperations.isSubConceptOf(kind,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration")) {
    return Classifier_Behavior.call_overrideMembersBySigature_2201875424516179874(thisNode,kind,pretenders,new _FunctionTypes._return_P1_E0<String,SNode>(){
      public String invoke(      SNode member){
        SNode method=SNodeOperations.cast(member,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration");
        return SPropertyOperations.getString(method,"name") + "(" + BaseMethodDeclaration_Behavior.call_getErasureSignature_2830572026628006618(method)+ ")";
      }
    }
);
  }
  return null;
}
