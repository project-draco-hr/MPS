{
  SNode thisType=IClassifier_Behavior.call_getThisType_7405920559687254782(thisNode);
  Iterable<SNode> members=IClassifierType_Behavior.call_getMembers_7405920559687277275(thisType);
  if (SConceptOperations.isSubConceptOf(kind,"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration") || SConceptOperations.isSubConceptOf(kind,"jetbrains.mps.baseLanguage.structure.FieldDeclaration")) {
    return new NamedElementsScope(Sequence.fromIterable(members).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SNodeOperations.isInstanceOf(it,NameUtil.nodeFQName(kind));
      }
    }
).select(new ISelector<SNode,SNode>(){
      public SNode select(      SNode it){
        return SNodeOperations.cast(it,"jetbrains.mps.lang.core.structure.INamedConcept");
      }
    }
));
  }
  if (SConceptOperations.isSubConceptOf(kind,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration") || SConceptOperations.isSubConceptOf(kind,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration")) {
    return new MethodsScope(thisType,Sequence.fromIterable(members).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SNodeOperations.isInstanceOf(it,NameUtil.nodeFQName(kind));
      }
    }
).select(new ISelector<SNode,SNode>(){
      public SNode select(      SNode it){
        return SNodeOperations.cast(it,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration");
      }
    }
));
  }
  return new EmptyScope();
}
