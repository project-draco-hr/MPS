{
  if (node == null)   return null;
  SNode type;
  NodeTypesComponent currentTypesComponent=getNodeTypesComponent();
  if (currentTypesComponent != null) {
    currentTypesComponent.addNodeToFrontier(node);
    if (addDependency) {
      currentTypesComponent.addDependcyOnCurrent(node);
    }
    if (ruleModel != null && ruleId != null) {
      currentTypesComponent.markNodeAsAffectedByRule(node,ruleModel,ruleId);
    }
    type=currentTypesComponent.getRawTypeFromContext(node);
    if (type != null)     return getRepresentatorIfNecessary(type);
  }
  SNode var=createNewRuntimeTypesVariable();
  type=TypeChecker.asType(var);
  getMainContext().put(node,type);
  return getRepresentatorIfNecessary(type);
}
