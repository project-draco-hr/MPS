{
  try {
    Class<?> psiClassImplUtil=Class.forName("com.intellij.psi.impl.PsiClassImplUtil");
    Method method;
    if (ApplicationInfo.getInstance().getMajorVersion().equals("12")) {
      method=psiClassImplUtil.getDeclaredMethod("processDeclarationsInClass",PsiClass.class,PsiScopeProcessor.class,ResolveState.class,Set.class,PsiElement.class,PsiElement.class,boolean.class);
    }
 else {
      method=psiClassImplUtil.getDeclaredMethod("processDeclarationsInClass",PsiClass.class,PsiScopeProcessor.class,ResolveState.class,Set.class,PsiElement.class,PsiElement.class,LanguageLevel.class,boolean.class);
    }
    if (ApplicationInfo.getInstance().getMajorVersion().equals("12")) {
      return (Boolean)method.invoke(null,this,processor,state,null,lastParent,place,false);
    }
 else {
      return (Boolean)method.invoke(null,this,processor,state,null,lastParent,place,PsiUtil.getLanguageLevel(place),false);
    }
  }
 catch (  ClassNotFoundException e) {
  }
catch (  NoSuchMethodException e) {
  }
catch (  InvocationTargetException e) {
  }
catch (  IllegalAccessException e) {
  }
  return false;
}
