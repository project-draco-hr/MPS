{
  List<SNode> layouts=SModelOperations.getRoots(_context.getModel(),"jetbrains.mps.build.packaging.structure.Layout");
  for (  SNode layout : ListSequence.fromList(layouts)) {
    Map<IModule,SNode> modules=MapSequence.fromMap(new HashMap<IModule,SNode>());
    for (    SNode m : ListSequence.fromList(Layout_Behavior.call_getModules_1213877228340(layout)).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return !(SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.packaging.structure.PluginModule"));
      }
    }
)) {
      MapSequence.fromMap(modules).put(Module_Behavior.call_getModule_1213877515148(m),m);
    }
    for (    IModule module : SetSequence.fromSet(MapSequence.fromMap(modules).keySet())) {
      Set<IModule> dependency=module.getDependenciesManager().getAllVisibleModules();
      if (module instanceof DevKit) {
        DevKit d=(DevKit)module;
        dependency.addAll(d.getAllExportedLanguages());
        dependency.addAll(d.getAllExportedSolutions());
        dependency.addAll(d.getAllExtendedDevkits());
      }
      for (      IModule dependent : SetSequence.fromSet(dependency)) {
        if (!(dependent instanceof Generator) && !(dependent.isPackaged()) && dependent.getDescriptorFile() != null && dependent.isCompileInMPS()) {
          if (!(SetSequence.fromSet(MapSequence.fromMap(modules).keySet()).contains(dependent))) {
            String moduleFqName=module.getModuleFqName();
            String errorText="Required module " + dependent.getModuleFqName() + " is absent. Used by module "+ moduleFqName+ ".";
            System.err.println(errorText);
            if (moduleFqName.startsWith("jetbrains.mps")) {
              _context.showErrorMessage(null,errorText);
            }
 else {
              _context.showWarningMessage(null,errorText);
            }
          }
 else           if ((SNodeOperations.getAncestor(MapSequence.fromMap(modules).get(dependent),"jetbrains.mps.build.packaging.structure.PluginModule",false,false) != null)) {
            if ((SNodeOperations.getAncestor(MapSequence.fromMap(modules).get(module),"jetbrains.mps.build.packaging.structure.PluginModule",false,false) == null)) {
              String moduleFqName=module.getModuleFqName();
              String errorText="Required module " + dependent.getModuleFqName() + " is in IDEA plugin. Used by module from MPS "+ moduleFqName+ ".";
              System.err.println(errorText);
              if (moduleFqName.startsWith("jetbrains.mps")) {
                _context.showErrorMessage(null,errorText);
              }
 else {
                _context.showWarningMessage(null,errorText);
              }
            }
          }
        }
      }
    }
  }
}
