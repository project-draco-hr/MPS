{
  SNode holder=SNodeOperations.getAncestor(_context.getNode(),"jetbrains.mps.build.packaging.structure.IMacroHolder",false,false);
  if (holder == null) {
    List<SNode> descendants=SNodeOperations.getDescendants(SNodeOperations.getAncestor(_context.getNode(),null,false,true),"jetbrains.mps.build.packaging.structure.Macro",false,new String[]{});
    for (    SNode m : ListSequence.<SNode>fromList(descendants)) {
      if (SPropertyOperations.getString(m,"name").equals(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(),"macro",true),"name"))) {
        return m;
      }
    }
    return ListSequence.<SNode>fromList(PropertyReference_Behavior.getAllVisibleDeclarations_1239123615225(_context.getOutputNode())).findFirst(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SPropertyOperations.getString(it,"name").equals(SPropertyOperations.getString(SLinkOperations.getTarget(_context.getNode(),"macro",true),"name"));
      }
    }
);
  }
  SNode macro=IMacroHolder_Behavior.call_findMacroForReference_1234972707641(holder,SLinkOperations.getTarget(_context.getNode(),"macro",true));
  return ListSequence.<SNode>fromList(_context.getAllOutputNodesByInputNodeAndMappingLabel(macro,"MacroToPropertyDeclaration")).first();
}
