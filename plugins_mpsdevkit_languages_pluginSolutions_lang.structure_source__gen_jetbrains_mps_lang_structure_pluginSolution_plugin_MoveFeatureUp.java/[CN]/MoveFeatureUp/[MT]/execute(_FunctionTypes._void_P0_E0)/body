{
  targetConcept=MoveUpDialog.getConcept(project.getProject(),feature,featureKind);
  ModelAccess modelAccess=project.getRepository().getModelAccess();
  if (targetConcept == null) {
    return;
  }
  final Wrappers._T<SNode> currentConcept=new Wrappers._T<SNode>();
  final Wrappers._T<Language> currentLanguage=new Wrappers._T<Language>();
  modelAccess.executeCommandInEDT(new Runnable(){
    public void run(){
      currentConcept.value=SNodeOperations.getNodeAncestor(feature,MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"),false,false);
      if (currentConcept.value == null) {
        return;
      }
      if (!(SNodeUtil.isAccessible(feature,project.getRepository()))) {
        return;
      }
      if (!(SNodeUtil.isAccessible(targetConcept,project.getRepository()))) {
        return;
      }
      currentLanguage.value=Language.getLanguageFor(SNodeOperations.getModel(currentConcept.value));
    }
  }
);
  int result=Messages.showYesNoCancelDialog(project.getProject(),"Do you want to run the refactoring locally?","Execute Refactoring","Run locally","Write migration","Cancel",null);
  if (result == Messages.CANCEL) {
    return;
  }
  if (result == Messages.YES) {
    modelAccess.executeCommandInEDT(new Runnable(){
      public void run(){
        usages=FindUsagesManager.getInstance().findUsages(GlobalScope.getInstance(),Collections.singleton(feature),new EmptyProgressMonitor());
        instances=FindUsagesManager.getInstance().findInstances(GlobalScope.getInstance(),Collections.singleton(SNodeOperations.asSConcept(currentConcept.value)),false,new EmptyProgressMonitor());
        RefactoringUtil.changeReferences(project,usages,feature,changeInstances,"Move " + featureKind + " "+ featureName);
      }
    }
);
  }
 else {
    throw new UnsupportedOperationException();
  }
}
