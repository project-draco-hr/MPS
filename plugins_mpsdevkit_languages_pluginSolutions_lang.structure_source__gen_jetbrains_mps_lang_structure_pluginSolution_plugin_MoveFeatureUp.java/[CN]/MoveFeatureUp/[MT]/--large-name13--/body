{
  if (ListSequence.fromList(arg._0()).count() != 1) {
    return;
  }
  targetConcept=MoveUpDialog.getConcept(project.getProject(),feature,featureKind);
  ModelAccess modelAccess=project.getRepository().getModelAccess();
  if (targetConcept == null) {
    return;
  }
  final Wrappers._T<SNode> currentConcept=new Wrappers._T<SNode>();
  final Wrappers._T<Language> currentLanguage=new Wrappers._T<Language>();
  modelAccess.executeCommandInEDT(new Runnable(){
    public void run(){
      currentConcept.value=SNodeOperations.getNodeAncestor(feature,MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"),false,false);
      if (currentConcept.value == null) {
        return;
      }
      if (!(SNodeUtil.isAccessible(feature,project.getRepository()))) {
        return;
      }
      if (!(SNodeUtil.isAccessible(targetConcept,project.getRepository()))) {
        return;
      }
      currentLanguage.value=Language.getLanguageFor(SNodeOperations.getModel(currentConcept.value));
    }
  }
);
  final int result=Messages.showYesNoCancelDialog(project.getProject(),"Do you want to run the refactoring locally?","Execute Refactoring","Run locally","Write migration","Cancel",null);
  if (result == Messages.CANCEL) {
    return;
  }
  modelAccess.executeCommandInEDT(new Runnable(){
    public void run(){
      instances=FindUsagesManager.getInstance().findInstances(GlobalScope.getInstance(),Collections.singleton(SNodeOperations.asSConcept(currentConcept.value)),false,new EmptyProgressMonitor());
      if (result == Messages.YES) {
        usages=FindUsagesManager.getInstance().findUsages(GlobalScope.getInstance(),Collections.singleton(feature),new EmptyProgressMonitor());
        RefactoringUtil.changeReferences(project,usages,feature,refactorInstances,"Move " + featureKind + " "+ featureName);
      }
 else {
        SNode newFeature=SNodeOperations.copyNode(feature);
        ListSequence.fromList(placeToMove.invoke()).addElement(newFeature);
        AttributeOperations.setAttribute(feature,new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x11d0a70ae54L,"jetbrains.mps.lang.structure.structure.DeprecatedNodeAnnotation")),createDeprecatedNodeAnnotation_g4dz8g_a0c0a1a0a0m0u("The " + featureKind + " was moved to superconcept \""+ BehaviorReflection.invokeVirtual(String.class,targetConcept,"virtual_getFqName_1213877404258",new Object[]{})+ "\""));
        markOldFeature.invoke(feature);
        MigrationScriptBuilder builder=MigrationScriptBuilder.createMigrationScript(currentLanguage.value).setName("Move_" + featureKind + "_"+ featureName);
        SNode oldFeatureDecl=oldFeatureVar.invoke(feature);
        SNode newFeatureDecl=newFeatureVar.invoke(newFeature);
        builder.appendExecuteStatements(SLinkOperations.getChildren(SLinkOperations.getTarget(moveStatements(oldFeatureDecl,newFeatureDecl,builder,refactorInstancesClosure.invoke(oldFeatureDecl,newFeatureDecl)),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc092b6b77L,0xfc092b6b78L,"statements")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b200L,0xf8cc6bf961L,"statement"))).addDependency(SModelRepository.getInstance().getModelDescriptor("jetbrains.mps.lang.structure.plugin"));
      }
    }
  }
);
}
