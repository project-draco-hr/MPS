{
  return new BaseReferenceScopeProvider(){
    @Override public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferenceConstraintsContext _context){
      SModule contextModule=_context.getModel().getModelDescriptor().getModule();
      Set<Language> contextLanguages=SetSequence.fromSet(new HashSet<Language>());
      for (      SModule module : Sequence.fromIterable(contextModule.getModuleScope().getModules())) {
        if (module instanceof Language) {
          SetSequence.fromSet(contextLanguages).addElement((Language)module);
        }
      }
      Iterable<SNode> styleSheets=SetSequence.fromSet(contextLanguages).select(new ISelector<Language,SModel>(){
        public SModel select(        Language it){
          return (SModel)LanguageAspect.EDITOR.get(it);
        }
      }
).where(new IWhereFilter<SModel>(){
        public boolean accept(        SModel it){
          return it != null;
        }
      }
).translate(new ITranslator2<SModel,SNode>(){
        public Iterable<SNode> translate(        SModel it){
          return SModelOperations.getNodes(((SModel)((SModelDescriptor)it).getSModel()),"jetbrains.mps.lang.editor.structure.StyleSheetClass");
        }
      }
);
      return Sequence.fromIterable(styleSheets).toListSequence();
    }
    @Override public SNodeReference getSearchScopeValidatorNode(){
      return breakingNode_lvhrww_a0a1a0a0a2;
    }
  }
;
}
