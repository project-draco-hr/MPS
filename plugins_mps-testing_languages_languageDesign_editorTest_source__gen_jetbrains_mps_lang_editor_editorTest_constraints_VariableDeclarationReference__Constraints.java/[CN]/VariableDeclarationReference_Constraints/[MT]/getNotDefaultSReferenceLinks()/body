{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(0x81f0abb8d71e4d13L,0xa0c1d2291fbb28b7L,0x2444dad137fa9b5cL,0x2444dad137fa9b5dL),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x81f0abb8d71e4d13L,0xa0c1d2291fbb28b7L,0x2444dad137fa9b5cL,0x2444dad137fa9b5dL),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          List<SNode> result=new ArrayList<SNode>();
          for (          SNode block : SNodeOperations.getNodeAncestors(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(0x81f0abb8d71e4d13L,0xa0c1d2291fbb28b7L,0x3361ce1b17d62dbbL,"jetbrains.mps.lang.editor.editorTest.structure.TestBlockList"),true)) {
            for (            SNode child : ListSequence.fromList(SNodeOperations.getChildren(block))) {
              if (SNodeOperations.isInstanceOf(child,MetaAdapterFactory.getConcept(0x81f0abb8d71e4d13L,0xa0c1d2291fbb28b7L,0x2444dad137f90ed1L,"jetbrains.mps.lang.editor.editorTest.structure.VariableDeclarationBlock"))) {
                ListSequence.fromList(result).addElement(SNodeOperations.cast(child,MetaAdapterFactory.getConcept(0x81f0abb8d71e4d13L,0xa0c1d2291fbb28b7L,0x2444dad137f90ed1L,"jetbrains.mps.lang.editor.editorTest.structure.VariableDeclarationBlock")));
              }
            }
          }
          return result;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_98f22q_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
