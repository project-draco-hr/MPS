{
  Iterable<SNode> availableElements=ClassifierScopes.getVisibleClassifiersScope(member,true).getAvailableElements(pattern);
  return pattern.equals("string") || pattern.equals("map") || pattern.equals("set")|| pattern.equals("list")|| pattern.equals("sorted_set")|| pattern.equals("sorted_map")|| Sequence.fromIterable(availableElements).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return eq_fp5qrn_a0a0a0a0a0a0b0d(SPropertyOperations.getString(SNodeOperations.cast(it,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,"jetbrains.mps.baseLanguage.structure.Classifier")),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")),pattern);
    }
  }
).isNotEmpty();
}
