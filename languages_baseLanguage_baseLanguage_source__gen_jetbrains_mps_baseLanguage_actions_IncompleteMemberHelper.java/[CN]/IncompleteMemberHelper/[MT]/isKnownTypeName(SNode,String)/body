{
  Iterable<SNode> availableElements=ClassifierScopes.getVisibleClassifiersScope(member,true).getAvailableElements(pattern);
  return pattern.equals("string") || pattern.equals("map") || pattern.equals("set")|| pattern.equals("list")|| pattern.equals("sorted_set")|| pattern.equals("sorted_map")|| Sequence.fromIterable(availableElements).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return eq_fp5qrn_a0a0a0a0a0a0b0d(SPropertyOperations.getString(SNodeOperations.cast(it,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier")),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")),pattern);
    }
  }
).isNotEmpty();
}
