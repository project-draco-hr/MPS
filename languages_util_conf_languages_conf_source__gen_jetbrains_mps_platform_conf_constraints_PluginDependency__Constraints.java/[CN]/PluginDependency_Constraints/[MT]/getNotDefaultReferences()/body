{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("plugin",new BaseReferenceConstraintsDescriptor("plugin",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return Sequence.fromIterable(ConfUtil.visibleConfModels(operationContext.getScope())).translate(new ITranslator2<SModel,SNode>(){
            public Iterable<SNode> translate(            SModel m){
              return SModelOperations.getNodes(m,"jetbrains.mps.platform.conf.structure.Plugin");
            }
          }
);
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_evow16_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
