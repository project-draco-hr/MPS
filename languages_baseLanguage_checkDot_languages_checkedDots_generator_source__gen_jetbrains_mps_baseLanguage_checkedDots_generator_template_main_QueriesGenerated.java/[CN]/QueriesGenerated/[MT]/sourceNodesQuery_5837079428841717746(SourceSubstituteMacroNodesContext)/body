{
  Iterable<SNode> callsToConsider=ReferenceConversionHelper.retrieveDescendentMethodCalls(SLinkOperations.getTarget(_context.getNode(),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,0x116b46b36c4L,"operation")));
  final List<SNode> throwns=ListSequence.fromList(new ArrayList<SNode>());
  Sequence.fromIterable(callsToConsider).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode call){
      SNode declaration;
      declaration=SLinkOperations.getTarget(call,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration"));
      ListSequence.fromList(throwns).addSequence(ListSequence.fromList(SLinkOperations.getChildren(declaration,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0x10f383d6949L,"throwsItem"))));
    }
  }
);
  List<SNode> result=ListSequence.fromList(new ArrayList<SNode>());
  Iterator<SNode> iter=ListSequence.fromList(throwns).iterator();
  while (iter.hasNext()) {
    final SNode next=iter.next();
    if (SNodeOperations.isInstanceOf(next,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType")) && ListSequence.fromList(result).all(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return neq_x583g4_a0a0a0a0a0a1a7a22(SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")),SLinkOperations.getTarget(SNodeOperations.cast(next,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType")),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")));
      }
    }
)) {
      ListSequence.fromList(result).addElement(SNodeOperations.cast(next,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType")));
    }
  }
  return result;
}
