{
  super(frame);
  if (rebuild) {
    t.checkRoot(true);
  }
  this.setLayout(new BorderLayout());
  this.getContentPane().setBackground(this.getBackground());
  myTraceTree=new TypeSystemTraceTree(operationContext,t,frame,node,this);
  myStateTree=new TypeSystemStateTree(operationContext,myTraceTree.getState());
  JSplitPane splitPane=new JSplitPane();
  this.add(splitPane);
  JBScrollPane traceScrollPane=new JBScrollPane(myTraceTree);
  traceScrollPane.setPreferredSize(new Dimension(400,900));
  JBScrollPane stateScrollPane=new JBScrollPane(myStateTree);
  stateScrollPane.setPreferredSize(new Dimension(400,900));
  splitPane.setDividerLocation(0.6);
  splitPane.setResizeWeight(0.5);
  splitPane.setLeftComponent(traceScrollPane);
  splitPane.setRightComponent(stateScrollPane);
  JPanel checkBoxes=new JPanel();
  checkBoxes.setLayout(new FlowLayout());
  this.add(checkBoxes,BorderLayout.SOUTH);
  myBlockDependencies=new Checkbox("Block dependencies");
  myBlockDependencies.setState(TraceSettings.isShowBlockDependencies());
  myTraceForNode=new Checkbox("Trace for selected node");
  myTraceForNode.setState(TraceSettings.isTraceForSelectedNode());
  myGenerationMode=new Checkbox("Generation mode");
  myGenerationMode.setState(TraceSettings.isGenerationMode());
  myShowApply=new Checkbox("Show apply rule");
  myShowApply.setState(TraceSettings.isShowApplyRuleOperations());
  checkBoxes.add(myBlockDependencies);
  checkBoxes.add(myTraceForNode);
  checkBoxes.add(myGenerationMode);
  checkBoxes.add(myShowApply);
  this.setModal(false);
  ShowTypeSystemTrace.CheckBoxListener listener=new ShowTypeSystemTrace.CheckBoxListener();
  myBlockDependencies.addItemListener(listener);
  myTraceForNode.addItemListener(listener);
  myGenerationMode.addItemListener(listener);
  myShowApply.addItemListener(listener);
  myTraceTree.setBackground(getBackground());
  myTraceTree.setForeground(new Color(459357));
  this.setPreferredSize(new Dimension(800,900));
  String title="TypeSystem trace";
  if (TraceSettings.isTraceForSelectedNode() && node != null) {
    title=title.concat(" for selected node (" + node + ")");
  }
  setTitle(title);
  this.pack();
  this.setVisible(true);
}
