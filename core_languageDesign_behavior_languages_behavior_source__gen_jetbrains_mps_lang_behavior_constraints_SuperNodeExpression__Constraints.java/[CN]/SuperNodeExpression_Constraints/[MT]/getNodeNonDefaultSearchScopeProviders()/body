{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("superConcept",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      List<SNode> result=new ArrayList<SNode>();
      SNode abstractConceptDeclaration=SLinkOperations.getTarget(SNodeOperations.getAncestor(_context.getReferenceNode(),"jetbrains.mps.lang.behavior.structure.ConceptBehavior",false,false),"concept",false);
      if (SNodeOperations.isInstanceOf(abstractConceptDeclaration,"jetbrains.mps.lang.structure.structure.ConceptDeclaration")) {
        SNode cd=(SNode)abstractConceptDeclaration;
        SNode extendsNode=SLinkOperations.getTarget(cd,"extends",false);
        if (extendsNode != null) {
          ListSequence.fromList(result).addElement(extendsNode);
        }
        for (        SNode itfcRef : SLinkOperations.getTargets(cd,"implements",true)) {
          ListSequence.fromList(result).addElement(SLinkOperations.getTarget(itfcRef,"intfc",false));
        }
      }
      if (SNodeOperations.isInstanceOf(abstractConceptDeclaration,"jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration")) {
        SNode itfc=(SNode)abstractConceptDeclaration;
        for (        SNode itfcRef : SLinkOperations.getTargets(itfc,"extends",true)) {
          ListSequence.fromList(result).addElement(SLinkOperations.getTarget(itfcRef,"intfc",false));
        }
      }
      return result;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:6786d6ee-e5cc-4a77-9efd-65a8dca8b187(jetbrains.mps.lang.behavior.constraints)","5299096511375909194");
    }
  }
);
  return result;
}
