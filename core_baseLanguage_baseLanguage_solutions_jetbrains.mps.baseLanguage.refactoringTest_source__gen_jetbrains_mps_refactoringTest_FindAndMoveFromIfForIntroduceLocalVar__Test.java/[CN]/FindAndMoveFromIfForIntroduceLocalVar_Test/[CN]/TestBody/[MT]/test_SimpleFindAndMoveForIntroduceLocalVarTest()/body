{
  this.addNodeById("7568753874916244225");
  this.addNodeById("7568753874916244315");
  IntroduceLocalVariableRefactoring refactoring=new IntroduceLocalVariableRefactoring();
  refactoring.init(SNodeOperations.cast(this.getNodeById("7568753874916244242"),"jetbrains.mps.baseLanguage.structure.StringLiteral"),null);
  refactoring.setName("s");
  SNode result=refactoring.doRefactoring();
  for (  SNode duplicate : ListSequence.fromList(refactoring.getDuplicates())) {
    refactoring.replaceNode(duplicate,result);
  }
  Assert.assertEquals(null,NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("7568753874916244226"),"jetbrains.mps.baseLanguage.structure.ClassConcept")),ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("7568753874916244316"),"jetbrains.mps.baseLanguage.structure.ClassConcept"))));
}
