{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("loopLabel",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      List<SNode> labels=new ArrayList<SNode>();
      for (      SNode loop : SNodeOperations.getAncestors(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.AbstractLoopStatement",false)) {
        if ((SLinkOperations.getTarget(loop,"loopLabel",true) != null)) {
          ListSequence.fromList(labels).addElement(SLinkOperations.getTarget(loop,"loopLabel",true));
        }
      }
      return labels;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c895902c1(jetbrains.mps.baseLanguage.constraints)","363746191845183796");
    }
  }
);
  return result;
}
