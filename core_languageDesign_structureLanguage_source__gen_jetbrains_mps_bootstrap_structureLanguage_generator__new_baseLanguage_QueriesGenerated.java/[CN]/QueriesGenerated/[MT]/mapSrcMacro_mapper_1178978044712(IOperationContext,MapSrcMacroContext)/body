{
  SNode enumDataType=SNodeOperations.getParent(_context.getNode(),null,false,false);
  String internalValue=SPropertyOperations.getString(_context.getNode(),"internalValue");
  SNode memberDataType=SLinkOperations.getTarget(enumDataType,"memberDataType",false);
  SNode targetInternalValueExpression=null;
  SModel targetModel=_context.getGenerator().getTargetModel();
  if (SPropertyOperations.hasValue(memberDataType,"name","string")) {
    if (internalValue == null) {
      targetInternalValueExpression=SModelOperations.createNewNode(targetModel,"jetbrains.mps.baseLanguage.structure.NullLiteral",null);
    }
 else {
      targetInternalValueExpression=SModelOperations.createNewNode(targetModel,"jetbrains.mps.baseLanguage.structure.StringLiteral",null);
      SPropertyOperations.set(targetInternalValueExpression,"value",internalValue);
    }
  }
 else   if (SPropertyOperations.hasValue(memberDataType,"name","boolean")) {
    targetInternalValueExpression=SModelOperations.createNewNode(targetModel,"jetbrains.mps.baseLanguage.structure.BooleanConstant",null);
    if (internalValue == null) {
      SPropertyOperations.set(targetInternalValueExpression,"value","" + (true));
    }
 else {
      SPropertyOperations.set(targetInternalValueExpression,"value","" + (Boolean.parseBoolean(internalValue)));
    }
  }
 else   if (SPropertyOperations.hasValue(memberDataType,"name","integer")) {
    targetInternalValueExpression=SModelOperations.createNewNode(targetModel,"jetbrains.mps.baseLanguage.structure.IntegerConstant",null);
    if (internalValue == null) {
      SPropertyOperations.set(targetInternalValueExpression,"value","" + (0));
    }
 else {
      SPropertyOperations.set(targetInternalValueExpression,"value","" + (Integer.parseInt(internalValue)));
    }
  }
  if ((targetInternalValueExpression == null)) {
    _context.getGenerator().showErrorMessage(enumDataType,"Can't generate value for type " + SPropertyOperations.getString(memberDataType,"name"));
  }
  return targetInternalValueExpression;
}
