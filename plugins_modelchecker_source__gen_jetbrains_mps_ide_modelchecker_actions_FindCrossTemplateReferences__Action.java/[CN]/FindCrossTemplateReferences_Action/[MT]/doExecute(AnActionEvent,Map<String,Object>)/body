{
  try {
    List<SModel> modelDescriptors=ListSequence.fromListWithValues(new ArrayList<SModel>(),Sequence.fromIterable(((Iterable<SModelDescriptor>)SModelRepository.getInstance().getModelDescriptors())).where(new IWhereFilter<SModelDescriptor>(){
      public boolean accept(      SModelDescriptor md){
        return SModelStereotype.isGeneratorModel(md) && SNodeOperations.isGeneratable(md);
      }
    }
));
    ((Project)MapSequence.fromMap(_params).get("project")).getComponent(ProjectPluginManager.class).getTool(ModelCheckerTool_Tool.class).checkModels(modelDescriptors,((IOperationContext)MapSequence.fromMap(_params).get("operationContext")),true,new ModelCheckerIssueFinder(){
      @Override protected List<SpecificChecker> getSpecificCheckers(){
        return ListSequence.fromListAndArray(new ArrayList<SpecificChecker>(),new GeneratorTemplatesChecker());
      }
    }
);
  }
 catch (  Throwable t) {
    LOG.error("User's action execute method failed. Action:" + "FindCrossTemplateReferences",t);
  }
}
