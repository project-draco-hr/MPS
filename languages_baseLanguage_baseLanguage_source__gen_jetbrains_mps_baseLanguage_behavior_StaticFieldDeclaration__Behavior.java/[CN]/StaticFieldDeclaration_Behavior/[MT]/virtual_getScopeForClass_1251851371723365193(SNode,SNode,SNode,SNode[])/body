{
  if (ClassifierScopeUtils.isHierarchyCyclic(classNode)) {
    return new EmptyScope();
  }
  List<Scope> extendsScopes=ListSequence.fromList(new ArrayList<Scope>());
  if ((extendsClass != null)) {
    ListSequence.fromList(extendsScopes).addElement(new LazyScope(new _FunctionTypes._return_P0_E0<Scope>(){
      public Scope invoke(){
        return ((Scope)BehaviorManager.getInstance().invoke(Object.class,extendsClass,"virtual_getVisibleMembers_8083692786967356611",new Class[]{SNode.class,SNode.class,SNode.class},classNode,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration")));
      }
    }
));
  }
  for (  final SNode extendsClassifier : implementsInterfaces) {
    if ((extendsClassifier != null)) {
      ListSequence.fromList(extendsScopes).addElement(new LazyScope(new _FunctionTypes._return_P0_E0<Scope>(){
        public Scope invoke(){
          return ((Scope)BehaviorManager.getInstance().invoke(Object.class,extendsClassifier,"virtual_getVisibleMembers_8083692786967356611",new Class[]{SNode.class,SNode.class,SNode.class},classNode,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration")));
        }
      }
));
    }
  }
  return new StaticFieldDeclarationScope(SLinkOperations.getTargets(classNode,"staticField",true),extendsScopes);
}
