{
  Map<SProperty,PropertyConstraintsDescriptor> properties=new HashMap<SProperty,PropertyConstraintsDescriptor>();
  properties.put(MetaAdapterFactory.getProperty(0x16bafbb4c6cd4cc5L,0x83327c6de8729b3fL,0x51dcaa29974fc198L,0x51dcaa29974fc19eL,"radius"),new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(0x16bafbb4c6cd4cc5L,0x83327c6de8729b3fL,0x51dcaa29974fc198L,0x51dcaa29974fc19eL),this){
    @Override public boolean hasOwnSetter(){
      return true;
    }
    @Override public void setValue(    SNode node,    String propertyValue){
      String propertyName="radius";
      SPropertyOperations.set(node,MetaAdapterFactory.getProperty(0x16bafbb4c6cd4cc5L,0x83327c6de8729b3fL,0x51dcaa29974fc198L,0x51dcaa29974fc19eL,"radius"),"" + (11110));
      SPropertyOperations.set(node,MetaAdapterFactory.getProperty(0x16bafbb4c6cd4cc5L,0x83327c6de8729b3fL,0x51dcaa29974fc198L,0x51dcaa29974fc19eL,"radius"),"" + ((SPropertyOperations.getInteger(propertyValue))));
    }
  }
);
  return properties;
}
