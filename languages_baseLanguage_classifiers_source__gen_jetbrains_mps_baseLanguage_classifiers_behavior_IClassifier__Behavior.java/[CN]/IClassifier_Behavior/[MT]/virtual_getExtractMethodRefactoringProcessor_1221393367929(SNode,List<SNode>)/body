{
  return new AbstractExtractMethodRefactoringProcessor(thisNode,nodesToRefactor){
    public SNode createNewMethod(){
      return SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodDeclaration",null);
    }
    public SNode createMethodCall(    SNode methodDeclaration,    List<SNode> parameteres){
      jetbrains.mps.smodel.SNode call=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodCallOperation",null);
      SLinkOperations.setTarget(call,"member",SNodeOperations.cast(methodDeclaration,"jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodDeclaration"),false);
      ListSequence.fromList(SLinkOperations.getTargets(call,"actualArgument",true)).addSequence(ListSequence.fromList(parameteres));
      jetbrains.mps.smodel.SNode result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.DotExpression",null);
      SLinkOperations.setTarget(result,"operand",SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.classifiers.structure.ThisClassifierExpression",null),true);
      SLinkOperations.setTarget(result,"operation",call,true);
      return result;
    }
  }
;
}
