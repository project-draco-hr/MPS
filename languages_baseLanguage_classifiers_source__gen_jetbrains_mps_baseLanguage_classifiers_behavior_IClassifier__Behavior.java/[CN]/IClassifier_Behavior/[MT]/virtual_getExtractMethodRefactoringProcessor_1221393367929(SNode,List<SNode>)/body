{
  return new AbstractExtractMethodRefactoringProcessor(thisNode,nodesToRefactor){
    @Override public SNode createNewMethod(){
      return SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodDeclaration",null);
    }
    @Override public SNode createMethodCall(    SNode methodDeclaration,    List<SNode> parameteres){
      SNode call=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodCallOperation",null);
      SLinkOperations.setTarget(call,MetaAdapterFactory.getReferenceLink(new UUID(4917733117167750838l,-7710007501170303426l),1205756064662l,1205756909548l,"member"),SNodeOperations.cast(methodDeclaration,"jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodDeclaration"));
      ListSequence.fromList(SLinkOperations.getChildren(call,MetaAdapterFactory.getContainmentLink(new UUID(4917733117167750838l,-7710007501170303426l),1205769149993l,1205770614681l,"actualArgument"))).addSequence(ListSequence.fromList(parameteres));
      SNode result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.DotExpression",null);
      SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1197027756228l,1197027771414l,"operand"),SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.classifiers.structure.ThisClassifierExpression",null));
      SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1197027756228l,1197027833540l,"operation"),call);
      return result;
    }
  }
;
}
