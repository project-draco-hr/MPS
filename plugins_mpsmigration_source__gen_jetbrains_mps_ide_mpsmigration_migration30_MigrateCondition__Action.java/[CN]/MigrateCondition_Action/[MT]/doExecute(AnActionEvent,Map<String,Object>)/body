{
  try {
    List<SModule> modulelist=((MPSProject)MapSequence.fromMap(_params).get("project")).getModulesWithGenerators();
    for (    SModel md : ListSequence.fromList(modulelist).translate(new ITranslator2<SModule,SModel>(){
      public Iterable<SModel> translate(      SModule it){
        return it.getModels();
      }
    }
).where(new IWhereFilter<SModel>(){
      public boolean accept(      SModel m){
        return SModelStereotype.isUserModel(m) && !(m.isReadOnly());
      }
    }
)) {
      for (      SNode node : new NodesIterable(md)) {
        for (        SReference ref : Sequence.fromIterable(node.getReferences())) {
          if (!(ref instanceof jetbrains.mps.smodel.SReference)) {
            continue;
          }
          SModelReference targetModel=ref.getTargetSModelReference();
          if (targetModel == null) {
            continue;
          }
          if (!(targetModel.getModelName().equals("jetbrains.mps.util@java_stub"))) {
            continue;
          }
          SNodeId id=ref.getTargetNodeId();
          if (id == null) {
            continue;
          }
          if (!(id instanceof jetbrains.mps.smodel.SNodeId.Foreign)) {
            continue;
          }
          jetbrains.mps.smodel.SNodeId.Foreign fid=((jetbrains.mps.smodel.SNodeId.Foreign)id);
          if (!(fid.getId().equals("~Condition"))) {
            continue;
          }
          ((jetbrains.mps.smodel.SReference)ref).setTargetSModelReference(SModelRepository.getInstance().getModelDescriptor(new jetbrains.mps.smodel.SModelReference("org.jetbrains.mps.util","java_stub")).getReference());
          if (md instanceof EditableSModel) {
            ((EditableSModel)md).setChanged(true);
          }
        }
      }
    }
    SModelRepository.getInstance().saveAll();
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Priority.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "MigrateCondition",t);
    }
  }
}
