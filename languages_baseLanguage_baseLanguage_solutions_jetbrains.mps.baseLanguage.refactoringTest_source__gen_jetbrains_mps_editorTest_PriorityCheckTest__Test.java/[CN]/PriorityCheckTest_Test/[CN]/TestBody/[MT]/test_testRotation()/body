{
  this.addNodeById("3852894662483441863");
  this.addNodeById("3852894662483449708");
  SNode op=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.PlusExpression",null);
  SNode constant=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.IntegerConstant",null);
  SPropertyOperations.set(constant,"value","" + (3));
  SLinkOperations.setTarget(op,"leftExpression",constant,true);
  SNodeOperations.replaceWithAnother(SNodeOperations.cast(this.getNodeById("3852894662483449704"),"jetbrains.mps.baseLanguage.structure.PlusExpression"),op);
  SLinkOperations.setTarget(op,"rightExpression",SNodeOperations.cast(this.getNodeById("3852894662483449704"),"jetbrains.mps.baseLanguage.structure.PlusExpression"),true);
  ParenthesisUtil.checkOperationWRTPriority(op);
  Assert.assertEquals(null,NodesMatcher.matchNodes(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("3852894662483449711"),"jetbrains.mps.baseLanguage.structure.ExpressionStatement")),ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("3852894662483449702"),"jetbrains.mps.baseLanguage.structure.ExpressionStatement"))));
}
