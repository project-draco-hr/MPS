{
  ModelResolveRes result=new ModelResolveRes();
  SModelReference mRep=moduleCache.get(oldId);
  SModelReference gRep=globalCache.get(oldId);
  if (mRep != null) {
    result.replacement=mRep;
    return result;
  }
  if (gRep != null && module.getScope().getModelDescriptor(gRep) != null) {
    moduleCache.put(oldId,gRep);
    result.replacement=gRep;
    return result;
  }
  mRep=resolveModelInModule(module,oldId,nodeId);
  if (mRep != null) {
    moduleCache.put(oldId,mRep);
    globalCache.put(oldId,mRep);
    result.replacement=mRep;
    return result;
  }
  if (globalCache.containsKey(oldId)) {
    gRep=globalCache.get(oldId);
  }
 else {
    gRep=resolveModelAnywhere(oldId,nodeId);
  }
  if (gRep != null) {
    result.replacement=gRep;
    result.needReload=true;
  }
  globalCache.put(oldId,gRep);
  return result;
}
