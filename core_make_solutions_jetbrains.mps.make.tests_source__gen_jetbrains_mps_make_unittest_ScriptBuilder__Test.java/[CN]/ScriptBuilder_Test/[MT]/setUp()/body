{
  super.setUp();
  final IFacet fmake=Mockups.facet(context,"Make");
  final IFacet fgen=Mockups.facet(context,"Gen");
  final ITarget tgen=Mockups.target(context,"gen",new ITarget.Name("gen"));
  final IFacet ftextgen=Mockups.facet(context,"Textgen");
  final ITarget ttextgen=Mockups.target(context,"textgen",new ITarget.Name("textgen"));
  context.checking(new Expectations(){
{
      atLeast(1).of(fgen).required();
      will(returnValue(Sequence.fromArray(new IFacet.Name[]{fmake.getName()})));
      atLeast(1).of(fgen).targets();
      will(returnValue(Sequence.fromArray(new ITarget[]{tgen})));
      atLeast(1).of(ftextgen).required();
      will(returnValue(Sequence.fromArray(new IFacet.Name[]{fmake.getName(),fgen.getName()})));
      atLeast(1).of(ftextgen).targets();
      will(returnValue(Sequence.fromArray(new ITarget[]{ttextgen})));
    }
  }
);
  FacetRegistry.getInstance().register(fmake);
  FacetRegistry.getInstance().register(fgen);
  FacetRegistry.getInstance().register(ftextgen);
  Mockups.allowing(context,fmake);
  Mockups.allowing(context,fgen);
  Mockups.allowing(context,ftextgen);
  this.facets=new IFacet[]{fmake,fgen,ftextgen};
  Mockups.allowing(context,tgen);
  Mockups.allowing(context,ttextgen);
}
