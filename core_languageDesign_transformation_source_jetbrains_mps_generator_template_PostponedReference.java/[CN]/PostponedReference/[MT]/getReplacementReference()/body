{
  if (myReplacementReference != null) {
    return myReplacementReference;
  }
  if (myReferenceInfo == null) {
    return null;
  }
  String role=myReferenceInfo.getReferenceRole();
  SNode outputSourceNode=myReferenceInfo.getOutputSourceNode();
  SModelReference targetModelReference=myReferenceInfo.getTargetModelUID(myGenerator);
  SNode outputTargetNode=myReferenceInfo.doResolve_Straightforward(myGenerator);
  if (outputTargetNode != null) {
    myReplacementReference=new StaticReference(role,outputSourceNode,outputTargetNode);
  }
 else   if (SReferenceUtil.isDynamicResolve(role,outputSourceNode)) {
    myReplacementReference=new DynamicReference(role,outputSourceNode,targetModelReference,myReferenceInfo.getResolveInfoForDynamicResolve());
  }
 else {
    outputTargetNode=myReferenceInfo.doResolve_Tricky(myGenerator);
    if (outputTargetNode != null) {
      if (checkResolvedTarget(outputSourceNode,role,outputTargetNode)) {
        myReplacementReference=new StaticReference(role,outputSourceNode,outputTargetNode);
      }
 else {
        myReferenceInfo.showErrorMessage(myGenerator);
        myReplacementReference=new StaticReference(role,outputSourceNode,targetModelReference,null,myReferenceInfo.getResolveInfoForNothing());
      }
    }
 else     if (myReferenceInfo.isRequired()) {
      myReferenceInfo.showErrorMessage(myGenerator);
      myReplacementReference=new StaticReference(role,outputSourceNode,targetModelReference,null,myReferenceInfo.getResolveInfoForNothing());
    }
 else {
    }
  }
  myReferenceInfo=null;
  myGenerator=null;
  return myReplacementReference;
}
