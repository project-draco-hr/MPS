{
  boolean verMid=ListSequence.fromList(chain).getElement(1).x == ListSequence.fromList(chain).getElement(2).x;
  boolean zLike;
  if (verMid) {
    zLike=GeomUtil.insideOpenSegment(ListSequence.fromList(chain).getElement(0).x,ListSequence.fromList(chain).getElement(3).x,ListSequence.fromList(chain).getElement(1).x);
  }
 else {
    zLike=GeomUtil.insideOpenSegment(ListSequence.fromList(chain).getElement(0).y,ListSequence.fromList(chain).getElement(3).y,ListSequence.fromList(chain).getElement(1).y);
  }
  if (zLike) {
    if (testRect(GeomUtil.getRectangle(ListSequence.fromList(chain).getElement(0),ListSequence.fromList(chain).getElement(2)),edge)) {
      return getChain(ListSequence.fromList(chain).getElement(0),ListSequence.fromList(chain).getElement(2),ListSequence.fromList(chain).getElement(3));
    }
    if (testRect(GeomUtil.getRectangle(ListSequence.fromList(chain).getElement(1),ListSequence.fromList(chain).getElement(3)),edge)) {
      return ListSequence.fromList(getChain(ListSequence.fromList(chain).getElement(3),ListSequence.fromList(chain).getElement(1),ListSequence.fromList(chain).getElement(0))).reversedList();
    }
  }
 else {
    Rectangle first=GeomUtil.getRectangle(ListSequence.fromList(chain).getElement(0),ListSequence.fromList(chain).getElement(2));
    Rectangle second=GeomUtil.getRectangle(ListSequence.fromList(chain).getElement(1),ListSequence.fromList(chain).getElement(3));
    boolean firstSmaller=first.height <= second.height && first.width <= second.width;
    if (firstSmaller) {
      if (testRect(first,edge)) {
        return getChain(ListSequence.fromList(chain).getElement(0),ListSequence.fromList(chain).getElement(2),ListSequence.fromList(chain).getElement(3));
      }
    }
 else {
      if (testRect(second,edge)) {
        return ListSequence.fromList(getChain(ListSequence.fromList(chain).getElement(3),ListSequence.fromList(chain).getElement(1),ListSequence.fromList(chain).getElement(0))).reversedList();
      }
    }
  }
  return null;
}
