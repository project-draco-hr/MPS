{
  if (!(kind instanceof JavaBreakpointKind))   return null;
  JavaBreakpointKind javaKind=(JavaBreakpointKind)kind;
switch (javaKind) {
case LINE_BREAKPOINT:
    final BreakpointInfo breakpointInfo=XmlSerializer.deserialize(state,BreakpointInfo.class);
  MPSBreakpoint breakpoint=ModelAccess.instance().runReadAction(new Computable<MPSBreakpoint>(){
    @Override public MPSBreakpoint compute(){
      SNodePointer pointer=new SNodePointer(breakpointInfo.myModelReference,breakpointInfo.myNodeId);
      return new MPSBreakpoint(pointer.getNode(),project);
    }
  }
);
breakpoint.setCreationTime(breakpointInfo.myCreationTime);
return breakpoint;
case EXCEPTION_BREAKPOINT:
}
return null;
}
