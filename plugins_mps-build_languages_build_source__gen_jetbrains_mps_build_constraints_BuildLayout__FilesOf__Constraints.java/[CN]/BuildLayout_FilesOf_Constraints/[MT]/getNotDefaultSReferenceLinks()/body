{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(8755280088213897754l,-5075149991798053422l),7753544965996647428l,7753544965996647430l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(8755280088213897754l,-5075149991798053422l),7753544965996647428l,7753544965996647430l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public boolean hasPresentation(){
          return true;
        }
        @Override public String getPresentation(        final IOperationContext operationContext,        final ReferencePresentationContext _context){
          return SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(_context.getParameterNode()),MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1169125787135l,5092175715804935370l,"conceptAlias")) + " " + SPropertyOperations.getString(_context.getParameterNode(),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_jcryfz_a0a2a0a0a1a0b0a1a1;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
{
            Scope scope=Scope.getScope(_context.getContextNode(),_context.getContextRole(),_context.getPosition(),(SNode)SConceptOperations.findConceptDeclaration("jetbrains.mps.build.structure.BuildSource_FilesetProjectPart"));
            return (scope == null ? new EmptyScope() : scope);
          }
        }
      }
;
    }
  }
);
  return references;
}
