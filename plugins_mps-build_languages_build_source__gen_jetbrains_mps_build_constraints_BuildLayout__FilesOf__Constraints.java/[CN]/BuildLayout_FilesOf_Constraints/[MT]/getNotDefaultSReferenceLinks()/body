{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x6b9a2011083f9404L,0x6b9a2011083f9406L),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x6b9a2011083f9404L,0x6b9a2011083f9406L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public boolean hasPresentation(){
          return true;
        }
        @Override public String getPresentation(        final IOperationContext operationContext,        final ReferencePresentationContext _context){
          return SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(_context.getParameterNode()),MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0x46ab0ad5826c74caL,"conceptAlias")) + " " + SPropertyOperations.getString(_context.getParameterNode(),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_jcryfz_a0a2a0a0a1a0b0a1a1;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
{
            Scope scope=Scope.getScope(_context.getContextNode(),_context.getContextRole(),_context.getPosition(),(SNode)SConceptOperations.findConceptDeclaration("jetbrains.mps.build.structure.BuildSource_FilesetProjectPart"));
            return (scope == null ? new EmptyScope() : scope);
          }
        }
      }
;
    }
  }
);
  return references;
}
