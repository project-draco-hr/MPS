{
  if (mySeparateFile != null) {
    return mySeparateFile;
  }
  MPSProject mpsProject=ProjectHelper.toMPSProject(getProject());
  if (mpsProject == null) {
    return null;
  }
  final SRepository repository=mpsProject.getRepository();
  return new ModelAccessHelper(repository.getModelAccess()).runReadAction(new Computable<VirtualFile>(){
    @Override public VirtualFile compute(){
      SModel sModel=myModel.getSModelReference().resolve(repository);
      DataSource dataSource=sModel.getSource();
      if (dataSource instanceof FileDataSource) {
        return VirtualFileUtils.getVirtualFile(((FileDataSource)dataSource).getFile());
      }
      return null;
    }
  }
);
}
