{
  DebugInfoManager manager=DebugInfoManager.getInstance();
  manager.removeDebuggableConcept("jetbrains.mps.baseLanguage.structure.Statement");
  manager.removeDebuggableConcept("jetbrains.mps.baseLanguage.structure.FieldDeclaration");
  manager.removeDebuggableConcept("jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration");
  manager.removeDebuggableConcept("jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration");
  manager.removeScopeConcept("jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration");
  manager.removeScopeConcept("jetbrains.mps.baseLanguage.structure.StatementList");
  manager.removeScopeConcept("jetbrains.mps.baseLanguage.structure.ForeachStatement");
  manager.removeScopeConcept("jetbrains.mps.baseLanguage.structure.ForStatement");
  manager.removeScopeConcept("jetbrains.mps.baseLanguage.structure.CatchClause");
  manager.removeScopeConcept("jetbrains.mps.baseLanguage.structure.AnonymousClass");
  manager.removeScopeConcept("jetbrains.mps.baseLanguage.structure.Interface");
  manager.removeScopeConcept("jetbrains.mps.baseLanguage.structure.ClassConcept");
}
