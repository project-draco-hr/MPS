{
  DebugInfoManager manager=DebugInfoManager.getInstance();
  manager.addDebuggableConcept("jetbrains.mps.baseLanguage.structure.Statement");
  manager.addDebuggableConcept("jetbrains.mps.baseLanguage.structure.FieldDeclaration");
  manager.addDebuggableConcept("jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration");
  manager.addDebuggableConcept("jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration");
  manager.addVariableConcept("jetbrains.mps.baseLanguage.structure.LocalVariableReference",new Mapper<SNode,SNode>(){
    public SNode value(    SNode key){
      return SLinkOperations.getTarget(key,"variableDeclaration",false);
    }
  }
);
  manager.addVariableConcept("jetbrains.mps.baseLanguage.structure.ParameterReference",new Mapper<SNode,SNode>(){
    public SNode value(    SNode key){
      return SLinkOperations.getTarget(key,"variableDeclaration",false);
    }
  }
);
}
