{
  if (selected == null) {
    return null;
  }
  if (MPSDataKeys.MODEL_FILES.is(dataName)) {
    return getModelFiles(selected);
  }
  if (PlatformDataKeys.DELETE_ELEMENT_PROVIDER.is(dataName)) {
    List<MPSProjectViewNode> projectViewNodes=new ArrayList<MPSProjectViewNode>();
    for (    AbstractTreeNode treeNode : selected) {
      if (treeNode instanceof MPSProjectViewNode) {
        projectViewNodes.add((MPSProjectViewNode)treeNode);
      }
    }
    if (!projectViewNodes.isEmpty()) {
      return new MPSProjectViewNodeDeleteProvider(projectViewNodes);
    }
  }
  if (selected.size() != 1) {
    return null;
  }
  if (MPSCommonDataKeys.CONTEXT_MODEL.is(dataName)) {
    AbstractTreeNode selectedNode=selected.iterator().next();
    return getContextModel(selectedNode);
  }
  if (MPSCommonDataKeys.MODEL.is(dataName)) {
    AbstractTreeNode selectedNode=selected.iterator().next();
    return selectedNode instanceof PsiFileNode ? getContextModel(selectedNode) : null;
  }
  if (MPSCommonDataKeys.MODULE.is(dataName)) {
    AbstractTreeNode selectedNode=selected.iterator().next();
    EditableSModelDescriptor contextModel=getContextModel(selectedNode);
    return contextModel != null ? contextModel.getModule() : null;
  }
  return null;
}
