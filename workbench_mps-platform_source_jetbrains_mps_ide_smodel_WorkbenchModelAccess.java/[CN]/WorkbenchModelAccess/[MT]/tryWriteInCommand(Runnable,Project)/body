{
  if (myDistributedLocksMode) {
    return false;
  }
  ApplicationManager.getApplication().assertIsDispatchThread();
  final boolean[] res=new boolean[]{false};
  final Project project=p != null ? p : CurrentProjectAccessUtil.getMPSProjectFromUI();
  Runnable commandRunnable=new Runnable(){
    @Override public void run(){
      try {
        if (getWriteLock().tryLock(WAIT_FOR_WRITE_LOCK_MILLIS,MILLISECONDS)) {
          try {
            clearRepositoryStateCaches();
            myWriteActionDispatcher.run(new CommandRunnable(r,project));
          }
  finally {
            getWriteLock().unlock();
          }
        }
      }
 catch (      InterruptedException e) {
        return;
      }
      res[0]=true;
    }
  }
;
  CommandProcessor.getInstance().executeCommand(ProjectHelper.toIdeaProject(project),new TryWriteActionRunnable(commandRunnable),"",null,UndoConfirmationPolicy.DO_NOT_REQUEST_CONFIRMATION);
  return res[0];
}
