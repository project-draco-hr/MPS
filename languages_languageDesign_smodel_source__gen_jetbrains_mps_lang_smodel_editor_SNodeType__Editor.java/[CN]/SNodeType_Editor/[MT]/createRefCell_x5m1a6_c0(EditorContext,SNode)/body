{
  CellProviderWithRole provider=new RefCellCellProvider(node,editorContext);
  provider.setRole("concept");
  provider.setNoTargetText("");
  EditorCell editorCell;
  provider.setAuxiliaryCellProvider(new SNodeType_Editor._Inline_x5m1a6_a2a());
  editorCell=provider.createEditorCell(editorContext);
  if (editorCell.getRole() == null) {
    editorCell.setReferenceCell(true);
    editorCell.setRole("concept");
  }
  Style style=new StyleImpl();
  SharedStyles_StyleSheet.apply_ReferenceOnConcept(style,editorCell);
  style.set(StyleAttributes.PADDING_RIGHT,0,new Padding(0.0,Measure.SPACES));
  editorCell.getStyle().putAll(style);
  if (true) {
    editorCell.getStyle().set(StyleAttributes.FOCUS_POLICY,FocusPolicy.ATTRACTS_FOCUS);
  }
  editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
  SNode attributeConcept=provider.getRoleAttribute();
  Class attributeKind=provider.getRoleAttributeClass();
  if (attributeConcept != null) {
    EditorManager manager=EditorManager.getInstanceFromContext(editorContext);
    return manager.createNodeRoleAttributeCell(editorContext,attributeConcept,attributeKind,editorCell);
  }
 else   return editorCell;
}
