{
  final Wrappers._T<String> queryClassFqName=new Wrappers._T<String>();
  myModelAccess.runReadAction(new Runnable(){
    public void run(){
      queryClassFqName.value=jetbrains.mps.util.SNodeOperations.getModelLongName(myTempModel) + "." + QueryExecutor.GENERATED_QUERY_NAME;
    }
  }
);
  ClassLoader temporaryModuleClassLoader=ClassLoaderManager.getInstance().getClassLoader(myTempModel.getModule());
  final Wrappers._T<Query> query=new Wrappers._T<Query>(null);
  try {
    query.value=(Query)Class.forName(queryClassFqName.value,true,temporaryModuleClassLoader).newInstance();
  }
 catch (  ClassNotFoundException ignore) {
    LOG.warn("Exception on query loading",ignore);
  }
catch (  IllegalAccessException ignore) {
    LOG.warn("Exception on query loading",ignore);
  }
catch (  InstantiationException ignore) {
    LOG.warn("Exception on query loading",ignore);
  }
  if (query.value == null) {
    return;
  }
  myModelAccess.runReadAction(new Runnable(){
    public void run(){
      final FindUsagesScope scope=FindInstancesDialog.this.myScope.getOptions().getScope(FindInstancesDialog.this.myContext,null);
      FindInstancesDialog.this.executeQuery(FindInstancesDialog.this.myContext.getProject(),query.value,SNodeOperations.cast(myNode,"jetbrains.mps.quickQueryLanguage.structure.BaseQuery"),scope);
    }
  }
);
}
