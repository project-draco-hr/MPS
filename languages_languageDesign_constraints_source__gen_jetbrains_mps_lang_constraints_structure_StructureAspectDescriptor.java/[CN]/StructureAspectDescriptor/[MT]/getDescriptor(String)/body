{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConceptConstraints","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.structure.structure.IConceptAspect"},new String[]{},new String[]{"concept","defaultConcreteConcept"},new String[]{"property","referent","defaultScope","canBeChild","canBeRoot","canBeParent","canBeAncestor","alternativeIcon"});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConceptParameter_ReferentSearchScope_enclosingNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunctionParameter_checkedNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunctionParameter_childConcept","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunctionParameter_childNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunctionParameter_containingLink","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunctionParameter_contextNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunctionParameter_contextRole","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunctionParameter_exists","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunctionParameter_inEditor","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunctionParameter_link","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 11:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunctionParameter_linkTarget","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 12:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunctionParameter_newReferentNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 13:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunctionParameter_oldReferentNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 14:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunctionParameter_parameterNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 15:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunctionParameter_parentNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 16:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunctionParameter_position","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 17:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunctionParameter_referenceNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 18:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunctionParameter_smartReference","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 19:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunctionParameter_visible","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 20:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunction_CanBeAChild","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 21:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunction_CanBeAParent","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 22:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunction_CanBeARoot","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 23:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunction_CanBeAnAncestor","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 24:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunction_GetAlternativeIcon","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 25:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunction_PropertyGetter","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 26:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunction_PropertySetter","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 27:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunction_PropertyValidator","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 28:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunction_RefSetHandlerKeepsReference","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 29:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunction_ReferentSearchScope_AbstractBase","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 30:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunction_ReferentSearchScope_Factory","jetbrains.mps.lang.constraints.structure.ConstraintFunction_ReferentSearchScope_AbstractBase",false,new String[]{"jetbrains.mps.lang.constraints.structure.ConstraintFunction_ReferentSearchScope_AbstractBase","jetbrains.mps.lang.constraints.structure.NodeScopeFactory"},new String[]{},new String[]{},new String[]{});
case 31:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunction_ReferentSearchScope_Presentation","jetbrains.mps.lang.constraints.structure.ConstraintFunction_ReferentSearchScope_AbstractBase",false,new String[]{"jetbrains.mps.lang.constraints.structure.ConstraintFunction_ReferentSearchScope_AbstractBase"},new String[]{},new String[]{},new String[]{});
case 32:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunction_ReferentSearchScope_Scope","jetbrains.mps.lang.constraints.structure.ConstraintFunction_ReferentSearchScope_AbstractBase",false,new String[]{"jetbrains.mps.lang.constraints.structure.ConstraintFunction_ReferentSearchScope_AbstractBase","jetbrains.mps.lang.constraints.structure.NodeScopeFactory"},new String[]{},new String[]{},new String[]{});
case 33:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunction_ReferentSearchScope_Validator","jetbrains.mps.lang.constraints.structure.ConstraintFunction_ReferentSearchScope_AbstractBase",false,new String[]{"jetbrains.mps.lang.constraints.structure.ConstraintFunction_ReferentSearchScope_AbstractBase"},new String[]{},new String[]{},new String[]{});
case 34:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintFunction_ReferentSetHandler","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{});
case 35:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintsFunctionParameter_node","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{});
case 36:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.ConstraintsFunctionParameter_propertyValue","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{},new String[]{});
case 37:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.InheritedNodeScopeFactory","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.constraints.structure.NodeScopeFactory"},new String[]{},new String[]{"kind"},new String[]{});
case 38:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.NodeDefaultSearchScope","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"description"},new String[]{},new String[]{"searchScopeFactory","validator","presentation"});
case 39:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.NodePropertyConstraint","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"applicableProperty"},new String[]{"propertyGetter","propertySetter","propertyValidator"});
case 40:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.NodeReferentConstraint","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"applicableLink"},new String[]{"searchScopeFactory","validator","presentation","referentSetHandler","keepsReference"});
case 41:
return new CompiledConceptDescriptor("jetbrains.mps.lang.constraints.structure.NodeScopeFactory",null,true,new String[]{},new String[]{},new String[]{},new String[]{});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
