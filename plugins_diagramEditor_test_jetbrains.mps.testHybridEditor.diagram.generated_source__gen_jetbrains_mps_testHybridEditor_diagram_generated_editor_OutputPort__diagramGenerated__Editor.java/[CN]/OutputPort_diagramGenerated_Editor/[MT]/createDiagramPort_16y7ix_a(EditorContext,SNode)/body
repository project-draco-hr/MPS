{
  final EditorCell editorCell=new PortCell(editorContext,node){
    public Mapper<SNode,RectView> getMapper(){
      Mapper<SNode,RectView> mapper=new Mapper<SNode,RectView>(node,new RectView()){
        @Override protected void registerSynchronizers(        Mapper.SynchronizersConfiguration configuration){
{
            super.registerSynchronizers(configuration);
            getTarget().background().set(Color.GRAY);
            getTarget().dimension().set(new Vector(10,10));
            final Value<PolyLineConnection> connector=new Value<PolyLineConnection>();
            DiagramCell diagramCell=null;
            EditorCell cell;
            Iterator<EditorCell_Collection> parents=parents();
            while (parents.hasNext()) {
              cell=parents.next();
              if (cell instanceof DiagramCell) {
                diagramCell=((DiagramCell)cell);
                break;
              }
            }
            final DiagramCell parent=diagramCell;
            getTarget().addTrait(new ViewTraitBuilder().on(ViewEvents.MOUSE_DRAGGED,new ViewEventHandler<MouseEvent>(){
              @Override public void handle(              View view,              MouseEvent e){
                if (connector.get() == null) {
                  PolyLineConnection newConnector=new PolyLineConnection();
                  newConnector.fromView().set(getTarget());
                  newConnector.toLocation().set(e.location());
                  parent.setConnection(newConnector);
                  connector.set(newConnector);
                }
 else {
                  connector.get().toLocation().set(e.location());
                }
              }
            }
).on(ViewEvents.MOUSE_RELEASED,new ViewEventHandler<MouseEvent>(){
              @Override public void handle(              View view,              MouseEvent e){
                if (connector.get() == null) {
                  return;
                }
                View atEvent=getTarget().container().root().viewAt(e.location());
                if (atEvent == null || atEvent.prop(JetpadUtils.PORT).get() == null) {
                  parent.setConnection(null);
                }
 else {
                  connector.get().toView().set(atEvent);
                }
                connector.set(null);
              }
            }
).build());
          }
          getTarget().prop(JetpadUtils.PORT).set(getSource());
        }
      }
;
      return mapper;
    }
  }
;
  editorCell.setBig(true);
  editorCell.setCellId("DiagramPort_16y7ix_a");
  editorCell.setBig(true);
  return editorCell;
}
