{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("format",new BaseReferenceConstraintsDescriptor("format",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public boolean hasPresentation(){
          return true;
        }
        @Override public String getPresentation(        final IOperationContext operationContext,        final ReferencePresentationContext _context){
          return (_context.getSmartReference() ? "<" + SPropertyOperations.getString(_context.getParameterNode(),"name") + ">" : SPropertyOperations.getString(_context.getParameterNode(),"name"));
        }
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return DateFormatReferenceUtil.buildIPeriodFormatSearchScope(_context.getEnclosingNode(),operationContext.getScope());
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_jo2z1j_a0a3a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
