{
  if (operationContext == null) {
    return;
  }
  AbstractConceptDeclaration concept=((AbstractConceptDeclaration)SNodeOperations.getAdapter(SNodeOperations.getConceptDeclaration(node)));
  for (  SReference ref : SNodeOperations.getReferences(node)) {
    SNode target=SLinkOperations.getTargetNode(ref);
    LinkDeclaration linkDeclaration=((LinkDeclaration)SNodeOperations.getAdapter(SLinkOperations.findLinkDeclaration(ref)));
    if ((target == null) || linkDeclaration == null) {
      continue;
    }
    SearchScopeStatus sss=ModelConstraintsUtil.getSearchScope(SNodeOperations.getParent(node),node,concept,linkDeclaration,operationContext);
    if (sss.isError()) {
      SetSequence.fromSet(new HashSet<SNode>());
      component.addError(node,sss.getMessage(),(SNode)null,SetSequence.fromSet(new HashSet<SNode>()),new ReferenceMessageTarget(SLinkOperations.getRole(ref)));
    }
 else     if (!(sss.isDefault() || sss.getSearchScope().isInScope(target))) {
      String name=target.getName();
      component.addError(node,"reference" + ((name == null ? "" : " " + name)) + " ("+ SLinkOperations.getRole(ref)+ ") is out of search scope",sss.getReferenceValidatorNode(),SetSequence.fromSet(new HashSet<SNode>()),new ReferenceMessageTarget(SLinkOperations.getRole(ref)));
    }
  }
}
