{
  myRepository.getModelAccess().checkReadAccess();
  if (module.getRepository() == null) {
    return DepsWithErrors.EMPTY;
  }
  ErrorContainer errorContainer=new ErrorContainer();
  Collection<SModule> directlyUsedModules=usedModulesCollector.directlyUsedModules(module,errorContainer,true,true);
  Set<ReloadableModule> deps=new LinkedHashSet<>();
  for (  SModule dep : directlyUsedModules) {
    if (dep instanceof ReloadableModule) {
      ReloadableModule reloadableModule=(ReloadableModule)dep;
      if (myWatchableCondition.met(reloadableModule)) {
        deps.add(reloadableModule);
      }
    }
  }
  List<SearchError> errors=new ArrayList<>(errorContainer.getErrors());
  return new DepsWithErrors(deps,errors);
}
