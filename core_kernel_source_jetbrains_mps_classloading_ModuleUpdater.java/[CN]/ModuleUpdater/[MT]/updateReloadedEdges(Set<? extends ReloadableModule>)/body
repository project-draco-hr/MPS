{
  boolean updated=false;
  myRepository.getModelAccess().checkReadAccess();
  Collection<? extends SModuleReference> allRefs=myDepGraph.getVertices();
  for (  ReloadableModule module : modulesToReload) {
    SModuleReference mRef=module.getModuleReference();
    Collection<? extends SModuleReference> currentDeps=new HashSet<SModuleReference>(myDepGraph.getOutgoingEdges(mRef));
    Collection<? extends ReloadableModule> newModuleDeps=getModuleDeps(module);
    for (    ReloadableModule moduleDep : newModuleDeps) {
      SModuleReference depRef=moduleDep.getModuleReference();
      if (!currentDeps.contains(depRef)) {
        if (allRefs.contains(depRef)) {
          myDepGraph.addEdge(mRef,depRef);
          updated=true;
        }
      }
 else {
        currentDeps.remove(depRef);
      }
    }
    for (    SModuleReference curDep : currentDeps) {
      myDepGraph.removeEdge(mRef,curDep);
      updated=true;
    }
  }
  return updated;
}
