{
  boolean can=false;
  if (SNodeOperations.isInstanceOf(_context.getParentNode(),"jetbrains.mps.baseLanguage.structure.DotExpression")) {
    SNode operandType=TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(SNodeOperations.cast(_context.getParentNode(),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true));
    can=TypeChecker.getInstance().getSubtypingManager().isSubtype(operandType,new ConvertToDateTimeOperation_Constraints.QuotationClass_i6v6x6_a1a0a1a1a0().createNode());
    can=can || TypeChecker.getInstance().getSubtypingManager().isSubtype(operandType,new ConvertToDateTimeOperation_Constraints.QuotationClass_i6v6x6_a1a0a0c0b0a().createNode());
    can=can || TypeChecker.getInstance().getSubtypingManager().isSubtype(operandType,new ConvertToDateTimeOperation_Constraints.QuotationClass_i6v6x6_a1a0a0d0b0a().createNode());
    can=can || TypeChecker.getInstance().getSubtypingManager().isSubtype(operandType,new ConvertToDateTimeOperation_Constraints.QuotationClass_i6v6x6_a1a0a0e0b0a().createNode());
    can=can || TypeChecker.getInstance().getSubtypingManager().isSubtype(operandType,new ConvertToDateTimeOperation_Constraints.QuotationClass_i6v6x6_a1a0a0f0b0a().createNode());
    can=can || TypeChecker.getInstance().getSubtypingManager().isSubtype(operandType,new ConvertToDateTimeOperation_Constraints.QuotationClass_i6v6x6_a1a0a0g0b0a().createNode());
  }
  return can;
}
