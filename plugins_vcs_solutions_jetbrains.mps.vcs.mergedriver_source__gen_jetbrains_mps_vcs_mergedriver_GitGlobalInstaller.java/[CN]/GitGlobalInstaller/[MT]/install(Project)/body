{
  String globalConfigPath=WorkbenchPathManager.getUserHome() + File.separator + ".gitconfig";
  File configFile=new File(globalConfigPath);
  if (!(configFile.exists())) {
    Messages.showErrorDialog(project,"Git config (~/.gitconfig) file is not present","No Git Config");
    return null;
  }
  List<String> configLines=StringsIO.readLines(configFile);
  if (ListSequence.fromList(configLines).any(new IWhereFilter<String>(){
    public boolean accept(    String line){
      return line.matches("\\s*\\[merge\\s+\"mps\"\\]\\s*");
    }
  }
)) {
    return "Global merge driver is already installed.";
  }
  ListSequence.fromList(configLines).addElement("[merge \"mps\"]");
  ListSequence.fromList(configLines).addElement("\tname = MPS merge driver");
  String cmd=MergeDriverMain.getCommandLine().replace("\\","\\\\");
  ListSequence.fromList(configLines).addElement(String.format("\tdriver = %s --git %%O %%A %%B %%L",cmd));
  try {
    StringsIO.writeLines(configFile,configLines);
    return "Global merge driver have been successfully installed.";
  }
 catch (  IOException e) {
    if (log.isErrorEnabled()) {
      log.error("Writing gitconfig file failed",e);
    }
    Messages.showErrorDialog(project,"Writing gitconfig file failed (" + e.getMessage() + ")","Writing .gitconfig Failed");
    return null;
  }
}
