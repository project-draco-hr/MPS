{
  AnAction goToRule2=ActionManager.getInstance().getAction("jetbrains.mps.newTypesystem.presentation.trace.GoToRule_Action");
  AbstractOperation difference=(AbstractOperation)treeNode.getUserObject();
  final EquationInfo info=difference.getEquationInfo();
  final SNode source=difference.getSource();
  BaseAction goToRule=null;
  BaseAction goToNode=null;
  if (info != null) {
    goToRule=new BaseAction("Go to rule"){
      public void doExecute(      AnActionEvent e,      Map<String,Object> _params){
        GoToTypeErrorRuleUtil.goToRuleById(myOperationContext,new Pair<String,String>(info.getRuleModel(),info.getRuleId()));
      }
    }
;
  }
  if (source != null && source.isRegistered()) {
    goToNode=new BaseAction("Go to node"){
      public void doExecute(      AnActionEvent e,      Map<String,Object> _params){
        myOperationContext.getComponent(MPSEditorOpener.class).editNode(source,myOperationContext);
      }
    }
;
  }
  DefaultActionGroup group=ActionUtils.groupFromActions(goToRule2,goToRule,goToNode);
  return ActionManager.getInstance().createActionPopupMenu(ActionPlaces.UNKNOWN,group).getComponent();
}
