{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.structure.structure.IStructureDeprecatable"},new String[]{"helpURL","conceptAlias","conceptShortDescription","abstract","final"},new String[]{},new String[]{"linkDeclaration","propertyDeclaration","conceptProperty","conceptLink","conceptPropertyDeclaration","conceptLinkDeclaration"},new boolean[]{true,true,true,true,true,true},true,false,"","","");
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.AggregationConceptLink","jetbrains.mps.lang.structure.structure.ConceptLink",false,new String[]{"jetbrains.mps.lang.structure.structure.ConceptLink"},new String[]{},new String[]{"aggregationConceptLinkDeclaration"},new String[]{"target"},new boolean[]{false},false,false,"","","");
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.AggregationConceptLinkDeclaration","jetbrains.mps.lang.structure.structure.ConceptLinkDeclaration",false,new String[]{"jetbrains.mps.lang.structure.structure.ConceptLinkDeclaration"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"aggregation","","");
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.AnnotationLinkDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{"role","stereotype","sourceCardinality"},new String[]{"source","target"},new String[]{},new boolean[]{},false,false,"Annotation Link","","");
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.BooleanConceptProperty","jetbrains.mps.lang.structure.structure.ConceptProperty",false,new String[]{"jetbrains.mps.lang.structure.structure.ConceptProperty"},new String[]{},new String[]{"booleanConceptPropertyDeclaration"},new String[]{},new boolean[]{},false,true,"","","");
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.BooleanConceptPropertyDeclaration","jetbrains.mps.lang.structure.structure.ConceptPropertyDeclaration",false,new String[]{"jetbrains.mps.lang.structure.structure.ConceptPropertyDeclaration"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,true,"boolean","","");
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.ConceptDeclaration","jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration",false,new String[]{"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"},new String[]{"rootable","iconPath","staticScope"},new String[]{"extends"},new String[]{"implements"},new boolean[]{true},false,true,"Concept","","");
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.ConceptLink","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"conceptLinkDeclaration"},new String[]{},new boolean[]{},true,false,"","","");
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.ConceptLinkDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.structure.structure.IStructureDeprecatable"},new String[]{},new String[]{"targetType"},new String[]{},new boolean[]{},true,false,"","","");
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.ConceptProperty","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"conceptPropertyDeclaration"},new String[]{},new boolean[]{},true,false,"","","");
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.ConceptPropertyDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.structure.structure.IStructureDeprecatable"},new String[]{"inheritable"},new String[]{},new String[]{},new boolean[]{},true,false,"","","");
case 11:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.ConstrainedDataTypeDeclaration","jetbrains.mps.lang.structure.structure.DataTypeDeclaration",false,new String[]{"jetbrains.mps.lang.structure.structure.DataTypeDeclaration"},new String[]{"constraint"},new String[]{},new String[]{},new boolean[]{},false,false,"Constrained Data Type","","");
case 12:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.DataTypeDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 13:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.DeprecatedNodeAnnotation","jetbrains.mps.lang.core.structure.NodeAttribute",false,new String[]{"jetbrains.mps.lang.core.structure.NodeAttribute","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{"build","comment"},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 14:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.EnumerationDataTypeDeclaration","jetbrains.mps.lang.structure.structure.DataTypeDeclaration",false,new String[]{"jetbrains.mps.lang.structure.structure.DataTypeDeclaration"},new String[]{"memberIdentifierPolicy","hasNoDefaultMember","noValueText"},new String[]{"memberDataType","defaultMember"},new String[]{"member"},new boolean[]{true},false,false,"Enum Data Type","","");
case 15:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.EnumerationMemberDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"internalValue","externalValue","javaIdentifier"},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 16:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.IConceptAspect",null,true,new String[]{},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 17:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.IStructureDeprecatable",null,true,new String[]{"jetbrains.mps.lang.core.structure.IDeprecatable"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"","","");
case 18:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.IntegerConceptProperty","jetbrains.mps.lang.structure.structure.ConceptProperty",false,new String[]{"jetbrains.mps.lang.structure.structure.ConceptProperty"},new String[]{"value"},new String[]{"integerConceptPropertyDeclaration"},new String[]{},new boolean[]{},false,true,"","","");
case 19:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.IntegerConceptPropertyDeclaration","jetbrains.mps.lang.structure.structure.ConceptPropertyDeclaration",false,new String[]{"jetbrains.mps.lang.structure.structure.ConceptPropertyDeclaration"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,true,"integer","","");
case 20:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration","jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration",false,new String[]{"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"},new String[]{},new String[]{},new String[]{"extends"},new boolean[]{true},false,true,"Interface Concept","","");
case 21:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.InterfaceConceptReference","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"intfc"},new String[]{},new boolean[]{},false,false,"","","");
case 22:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.LinkDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.structure.structure.IStructureDeprecatable"},new String[]{"role","metaClass","sourceCardinality","doNotGenerate"},new String[]{"specializedLink","target"},new String[]{},new boolean[]{},false,true,"","","");
case 23:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.MigratedToMethodAnnotation","jetbrains.mps.lang.core.structure.NodeAttribute",false,new String[]{"jetbrains.mps.lang.core.structure.NodeAttribute"},new String[]{},new String[]{"method"},new String[]{},new boolean[]{},false,false,"","","");
case 24:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.PrimitiveDataTypeDeclaration","jetbrains.mps.lang.structure.structure.DataTypeDeclaration",false,new String[]{"jetbrains.mps.lang.structure.structure.DataTypeDeclaration"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,true,"","","");
case 25:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.PropertyDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.structure.structure.IStructureDeprecatable"},new String[]{"doNotGenerate"},new String[]{"dataType"},new String[]{},new boolean[]{},false,true,"","","");
case 26:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.ReferenceConceptLink","jetbrains.mps.lang.structure.structure.ConceptLink",false,new String[]{"jetbrains.mps.lang.structure.structure.ConceptLink"},new String[]{},new String[]{"referenceConceptLinkDeclaration","target"},new String[]{},new boolean[]{},false,false,"<{referenceConceptLinkDeclaration}>","","");
case 27:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.ReferenceConceptLinkDeclaration","jetbrains.mps.lang.structure.structure.ConceptLinkDeclaration",false,new String[]{"jetbrains.mps.lang.structure.structure.ConceptLinkDeclaration"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"reference","","");
case 28:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.StringConceptProperty","jetbrains.mps.lang.structure.structure.ConceptProperty",false,new String[]{"jetbrains.mps.lang.structure.structure.ConceptProperty"},new String[]{"value"},new String[]{"stringConceptPropertyDeclaration"},new String[]{},new boolean[]{},false,true,"","","");
case 29:
return new CompiledConceptDescriptor("jetbrains.mps.lang.structure.structure.StringConceptPropertyDeclaration","jetbrains.mps.lang.structure.structure.ConceptPropertyDeclaration",false,new String[]{"jetbrains.mps.lang.structure.structure.ConceptPropertyDeclaration"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,true,"string","","");
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
