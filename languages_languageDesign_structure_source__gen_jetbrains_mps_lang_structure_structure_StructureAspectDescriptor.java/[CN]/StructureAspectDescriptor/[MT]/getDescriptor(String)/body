{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0w,conceptFqName)) {
case 0:
    return myConceptAbstractConceptDeclaration;
case 1:
  return myConceptAggregationLinkDeclarationScopeKind;
case 2:
return myConceptAttributeInfo;
case 3:
return myConceptAttributeInfo_AttributedConcept;
case 4:
return myConceptAttributeInfo_IsMultiple;
case 5:
return myConceptConceptDeclaration;
case 6:
return myConceptConstrainedDataTypeDeclaration;
case 7:
return myConceptDataTypeDeclaration;
case 8:
return myConceptDeprecatedNodeAnnotation;
case 9:
return myConceptEnumerationDataTypeDeclaration;
case 10:
return myConceptEnumerationMemberDeclaration;
case 11:
return myConceptIConceptAspect;
case 12:
return myConceptIStructureDeprecatable;
case 13:
return myConceptInterfaceConceptDeclaration;
case 14:
return myConceptInterfaceConceptReference;
case 15:
return myConceptLinkDeclaration;
case 16:
return myConceptPrimitiveDataTypeDeclaration;
case 17:
return myConceptPropertyDeclaration;
case 18:
return myConceptReferenceLinkDeclartionScopeKind;
default :
throw new IllegalStateException("Wrong fqName of the concept " + conceptFqName);
}
}
