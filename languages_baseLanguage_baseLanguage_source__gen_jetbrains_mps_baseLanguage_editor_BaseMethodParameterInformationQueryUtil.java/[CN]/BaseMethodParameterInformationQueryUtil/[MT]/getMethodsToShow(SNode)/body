{
  SNode method=SLinkOperations.getTarget(methodCall,"baseMethodDeclaration",false);
  List<SNode> methodsToShow=new ArrayList<SNode>();
  final Iterable<SNode> members=BehaviorReflection.invokeVirtual((Class<Iterable<SNode>>)((Class)Object.class),methodCall,"virtual_getAvailableMethodDeclarations_5776618742611315379",new Object[]{SPropertyOperations.getString(method,"name")});
  for (  SNode member : Sequence.fromIterable(members)) {
    if (SNodeOperations.isInstanceOf(member,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration")) {
      ListSequence.fromList(methodsToShow).addElement(SNodeOperations.cast(member,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"));
    }
  }
  return methodsToShow;
}
