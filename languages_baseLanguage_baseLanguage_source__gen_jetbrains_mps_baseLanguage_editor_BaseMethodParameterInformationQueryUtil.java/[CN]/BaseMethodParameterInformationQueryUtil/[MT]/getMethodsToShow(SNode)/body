{
  List<SNode> methodsToShow=new ArrayList<SNode>();
  SNode method=SLinkOperations.getTarget(methodCall,"baseMethodDeclaration",false);
  SNode targetContainer=SNodeOperations.cast(SNodeOperations.getParent(method),"jetbrains.mps.baseLanguage.structure.IMemberContainer");
  Iterable<SNode> members=BehaviorReflection.invokeVirtual((Class<Iterable<SNode>>)((Class)Object.class),methodCall,"virtual_getAvailableMethodDeclarations_5776618742611315379",new Object[]{SPropertyOperations.getString(method,"name")});
  if (Sequence.fromIterable(members).isEmpty()) {
    members=BehaviorReflection.invokeVirtual((Class<List<SNode>>)((Class)Object.class),targetContainer,"virtual_getMembers_1213877531970",new Object[]{});
  }
  for (  SNode member : Sequence.fromIterable(members)) {
    if (SNodeOperations.isInstanceOf(member,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration") && eq_bha4h6_a0a0a6a1(SPropertyOperations.getString(SNodeOperations.cast(member,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"),"name"),SPropertyOperations.getString(method,"name"))) {
      ListSequence.fromList(methodsToShow).addElement(SNodeOperations.cast(member,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"));
    }
  }
  return methodsToShow;
}
