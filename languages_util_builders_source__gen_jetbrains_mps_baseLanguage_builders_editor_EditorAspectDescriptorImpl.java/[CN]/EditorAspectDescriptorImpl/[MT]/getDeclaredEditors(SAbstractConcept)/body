{
{
    SAbstractConcept cncpt=((SAbstractConcept)concept);
    Integer preIndex=indices_xbvbvu_a0a.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      return Collections.<ConceptEditor>singletonList(new AsBuilderStatement_Editor());
case 1:
    return Collections.<ConceptEditor>singletonList(new AsTypeBuilder_Editor());
case 2:
  return Collections.<ConceptEditor>singletonList(new BeanBuilder_Editor());
case 3:
return Collections.<ConceptEditor>singletonList(new BeanPropertyBuilder_Editor());
case 4:
return Collections.<ConceptEditor>singletonList(new Builder_Editor());
case 5:
return Collections.<ConceptEditor>singletonList(new BuilderCreator_Editor());
case 6:
return Collections.<ConceptEditor>singletonList(new BuilderStatement_Editor());
case 7:
return Collections.<ConceptEditor>singletonList(new ResultExpression_Editor());
case 8:
return Collections.<ConceptEditor>singletonList(new SimpleBuilder_Editor());
case 9:
return Collections.<ConceptEditor>singletonList(new SimpleBuilderChild_Editor());
case 10:
return Collections.<ConceptEditor>singletonList(new SimpleBuilderDeclaration_Editor());
case 11:
return Collections.<ConceptEditor>singletonList(new SimpleBuilderExpression_Editor());
case 12:
return Collections.<ConceptEditor>singletonList(new SimpleBuilderExtensionDeclaration_Editor());
case 13:
return Collections.<ConceptEditor>singletonList(new SimpleBuilderParameter_Editor());
case 14:
return Collections.<ConceptEditor>singletonList(new SimpleBuilderParameterReference_Editor());
case 15:
return Collections.<ConceptEditor>singletonList(new SimpleBuilderProperty_Editor());
case 16:
return Collections.<ConceptEditor>singletonList(new SimpleBuilderPropertyBuilder_Editor());
case 17:
return Collections.<ConceptEditor>singletonList(new SimpleBuilderPropertyExpression_Editor());
case 18:
return Collections.<ConceptEditor>singletonList(new SimpleBuilders_Editor());
default :
}
}
return Collections.<ConceptEditor>emptyList();
}
