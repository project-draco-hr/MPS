{
  final VirtualFile virtualFile=getVirtualFile() instanceof LightVirtualFile ? ((LightVirtualFile)getVirtualFile()).getOriginalFile() : getVirtualFile();
  if (virtualFile == null || (virtualFile.getFileType() != MPSFileTypeFactory.MPS_FILE_TYPE && virtualFile.getFileType() != MPSFileTypeFactory.MPS_ROOT_FILE_TYPE)) {
    return null;
  }
  final IFile modelFile=virtualFile.getFileType() == MPSFileTypeFactory.MPS_ROOT_FILE_TYPE ? FileSystem.getInstance().getFileByPath(virtualFile.getParent().getPath()) : FileSystem.getInstance().getFileByPath(virtualFile.getPath());
  PsiFile psiFile=new ModelAccessHelper(ProjectHelper.getModelAccess(getManager().getProject())).runReadAction(new Computable<PsiFile>(){
    @Override public PsiFile compute(){
      SModel descr=SModelFileTracker.getInstance().findModel(modelFile);
      if (descr != null) {
        MPSPsiProvider mpsPsiProvider=MPSPsiProvider.getInstance(getManager().getProject());
        MPSPsiModel psiModel=mpsPsiProvider.getPsi(descr);
        if (virtualFile.getFileType() == MPSFileTypeFactory.MPS_ROOT_FILE_TYPE) {
          for (          PsiElement element : psiModel.getChildren()) {
            if (((MPSPsiRootNode)element).getVirtualFile().equals(virtualFile) || ((MPSPsiRootNode)element).getVirtualFile().getName().equals(virtualFile.getNameWithoutExtension())) {
              return (MPSPsiRootNode)element;
            }
          }
          return null;
        }
        return new FileSourcePsiFile(MyFileViewProvider.this,descr.getReference(),descr.getModelName());
      }
      return null;
    }
  }
);
  return psiFile;
}
