{
  SNode leftExpression=SLinkOperations.getTarget(parentNode,"leftExpression",true);
  if (SNodeOperations.isInstanceOf(leftExpression,"jetbrains.mps.bootstrap.smodelLanguage.structure.SNodeOperationExpression")) {
    SNode nodeOperation=SLinkOperations.getTarget(leftExpression,"nodeOperation",true);
    if (SNodeOperations.isInstanceOf(nodeOperation,"jetbrains.mps.bootstrap.smodelLanguage.structure.SPropertyAccess")) {
      SNode dataType=SLinkOperations.getTarget(SLinkOperations.getTarget(nodeOperation,"property",false),"dataType",false);
      if (SNodeOperations.isInstanceOf(dataType,"jetbrains.mps.bootstrap.structureLanguage.structure.EnumerationDataTypeDeclaration")) {
        return !(concept.hasConceptProperty(SNodeOperation.CPR_Applicable_to_enum_property,operationContext.getScope()));
      }
 else {
        return !(concept.hasConceptProperty(SNodeOperation.CPR_Applicable_to_simple_property,operationContext.getScope()));
      }
    }
    if (SNodeOperations.isInstanceOf(nodeOperation,"jetbrains.mps.bootstrap.smodelLanguage.structure.SConceptPropertyAccess")) {
      return !(concept.hasConceptProperty(SNodeOperation.CPR_Applicable_to_concept_property,operationContext.getScope()));
    }
    if (SNodeOperations.isInstanceOf(nodeOperation,"jetbrains.mps.bootstrap.smodelLanguage.structure.SLinkAccess")) {
      return !(concept.hasConceptProperty(SNodeOperation.CPR_Applicable_to_link,operationContext.getScope()));
    }
    if (SNodeOperations.isInstanceOf(nodeOperation,"jetbrains.mps.bootstrap.smodelLanguage.structure.SLinkListAccess")) {
      return !(concept.hasConceptProperty(SNodeOperation.CPR_Applicable_to_linkList,operationContext.getScope()));
    }
  }
  SNode leftType=TypeChecker.getInstance().getTypeOf(leftExpression);
  if (TypeChecker.getInstance().getRuntimeSupport().coerce(leftType,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.bootstrap.smodelLanguage.structure.SConceptType"),false) != null) {
    boolean b1=concept.hasConceptProperty(SNodeOperation.CPR_Applicable_to_node,operationContext.getScope());
    boolean b2=concept.hasConceptProperty(SNodeOperation.CPR_Applicable_to_concept,operationContext.getScope());
    return !(b1 || b2);
  }
  if (TypeChecker.getInstance().getRuntimeSupport().coerce(leftType,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.bootstrap.smodelLanguage.structure.SNodeType"),false) != null) {
    return !(concept.hasConceptProperty(SNodeOperation.CPR_Applicable_to_node,operationContext.getScope()));
  }
  if (TypeChecker.getInstance().getRuntimeSupport().coerce(leftType,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.bootstrap.smodelLanguage.structure.SModelType"),false) != null) {
    return !(concept.hasConceptProperty(SNodeOperation.CPR_Applicable_to_model,operationContext.getScope()));
  }
  return true;
}
