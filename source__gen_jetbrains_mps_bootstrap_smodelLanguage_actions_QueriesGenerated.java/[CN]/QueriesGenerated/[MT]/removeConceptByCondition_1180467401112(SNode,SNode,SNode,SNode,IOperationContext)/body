{
  if (!(SConceptOperations.isSubConceptOf(concept,"jetbrains.mps.bootstrap.smodelLanguage.structure.SNodeOperation"))) {
    return false;
  }
  SNode parameterOp=(SNode)concept;
  SNode leftExpression=SLinkOperations.getTarget(parentNode,"leftExpression",true);
  if (SNodeOperations.isInstanceOf(leftExpression,"jetbrains.mps.bootstrap.smodelLanguage.structure.SNodeOperationExpression")) {
    SNode nodeOperation=SLinkOperations.getTarget(leftExpression,"nodeOperation",true);
    if (SNodeOperations.isInstanceOf(nodeOperation,"jetbrains.mps.bootstrap.smodelLanguage.structure.SPropertyAccess")) {
      SNode dataType=SLinkOperations.getTarget(SLinkOperations.getTarget(nodeOperation,"property",false),"dataType",false);
      if (SNodeOperations.isInstanceOf(dataType,"jetbrains.mps.bootstrap.structureLanguage.structure.EnumerationDataTypeDeclaration")) {
        return !(SConceptPropertyOperations.getBoolean(parameterOp,"applicable_to_enum_property"));
      }
 else {
        return !(SConceptPropertyOperations.getBoolean(parameterOp,"applicable_to_simple_property"));
      }
    }
    if (SNodeOperations.isInstanceOf(nodeOperation,"jetbrains.mps.bootstrap.smodelLanguage.structure.SConceptPropertyAccess")) {
      return !(SConceptPropertyOperations.getBoolean(parameterOp,"applicable_to_concept_property"));
    }
    if (SNodeOperations.isInstanceOf(nodeOperation,"jetbrains.mps.bootstrap.smodelLanguage.structure.SLinkAccess")) {
      return !(SConceptPropertyOperations.getBoolean(parameterOp,"applicable_to_link"));
    }
    if (SNodeOperations.isInstanceOf(nodeOperation,"jetbrains.mps.bootstrap.smodelLanguage.structure.SLinkListAccess")) {
      return !(SConceptPropertyOperations.getBoolean(parameterOp,"applicable_to_linkList"));
    }
  }
  SNode leftType=TypeChecker.getInstance().getTypeOf(leftExpression);
  if (TypeChecker.getInstance().getRuntimeSupport().coerce(leftType,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.bootstrap.smodelLanguage.structure.SConceptType"),false) != null) {
    return !(SConceptPropertyOperations.getBoolean(parameterOp,"applicable_to_concept"));
  }
  if (TypeChecker.getInstance().getRuntimeSupport().coerce(leftType,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.bootstrap.smodelLanguage.structure.SNodeType"),false) != null) {
    return !(SConceptPropertyOperations.getBoolean(parameterOp,"applicable_to_node"));
  }
  if (TypeChecker.getInstance().getRuntimeSupport().coerce(leftType,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.bootstrap.smodelLanguage.structure.SModelType"),false) != null) {
    return !(SConceptPropertyOperations.getBoolean(parameterOp,"applicable_to_model"));
  }
  return true;
}
