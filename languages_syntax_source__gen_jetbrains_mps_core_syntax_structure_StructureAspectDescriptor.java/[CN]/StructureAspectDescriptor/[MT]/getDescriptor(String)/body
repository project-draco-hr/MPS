{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.core.syntax.structure.SAction","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.core.syntax.structure.SGrammarPart","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.core.syntax.structure.SInputRef","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"noEoi"},new String[]{"symbol"});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.core.syntax.structure.SLexem","jetbrains.mps.core.syntax.structure.SLexerPart",false,new String[]{"jetbrains.mps.core.syntax.structure.SLexerPart"},new String[]{},new String[]{});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.core.syntax.structure.SLexerPart","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.core.syntax.structure.SLineComment","jetbrains.mps.core.syntax.structure.SLexerPart",false,new String[]{"jetbrains.mps.core.syntax.structure.SLexerPart"},new String[]{"content"},new String[]{});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.core.syntax.structure.SNamedPattern","jetbrains.mps.core.syntax.structure.SLexerPart",false,new String[]{"jetbrains.mps.core.syntax.structure.SLexerPart","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{});
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.core.syntax.structure.SNonTerm","jetbrains.mps.core.syntax.structure.SGrammarPart",false,new String[]{"jetbrains.mps.core.syntax.structure.SGrammarPart"},new String[]{},new String[]{});
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.core.syntax.structure.SPrio","jetbrains.mps.core.syntax.structure.SGrammarPart",false,new String[]{"jetbrains.mps.core.syntax.structure.SGrammarPart"},new String[]{"kind"},new String[]{});
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.core.syntax.structure.SReference","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"symbol"});
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.core.syntax.structure.SRegex","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"regexp"},new String[]{});
case 11:
return new CompiledConceptDescriptor("jetbrains.mps.core.syntax.structure.SRule","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 12:
return new CompiledConceptDescriptor("jetbrains.mps.core.syntax.structure.SRulePart",null,true,new String[]{},new String[]{},new String[]{});
case 13:
return new CompiledConceptDescriptor("jetbrains.mps.core.syntax.structure.SSource","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{});
case 14:
return new CompiledConceptDescriptor("jetbrains.mps.core.syntax.structure.SSymbol","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept"},new String[]{},new String[]{});
case 15:
return new CompiledConceptDescriptor("jetbrains.mps.core.syntax.structure.SSymbolRef","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.core.syntax.structure.SRulePart"},new String[]{"refalias","isOptional"},new String[]{"ref"});
case 16:
return new CompiledConceptDescriptor("jetbrains.mps.core.syntax.structure.SType","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
