{
  boolean oneLine=SNodeOperations.isInstanceOf(SNodeOperations.getParent(node),"jetbrains.mps.baseLanguage.structure.ParameterDeclaration") || SNodeOperations.isInstanceOf(SNodeOperations.getParent(node),"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration");
  if (oneLine) {
    this.append("@");
  }
 else {
    this.appendWithIndent("@");
  }
  BaseLanguageTextGen.blClassifierRef(SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.AnnotationInstance","annotation")),this);
  if (ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1188207840427l,1188214630783l,"value"))).isNotEmpty()) {
    this.append("(");
{
      Iterable<SNode> collection=SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1188207840427l,1188214630783l,"value"));
      final SNode lastItem=Sequence.fromIterable(collection).last();
      for (      SNode item : collection) {
        appendNode(item);
        if (item != lastItem) {
          append(", ");
        }
      }
    }
    this.append(")");
  }
  if (oneLine) {
    this.append(" ");
  }
 else {
    this.appendNewLine();
  }
}
