{
  DataNode next=null;
  PathItem currentPathItem=path.get(index);
  Object currentIdObject=currentPathItem.getIdObject();
  for (  DataNode child : root.getChildren()) {
    if (currentIdObject instanceof String) {
      if (child.getData().getIdObject().equals(currentIdObject)) {
        next=child;
      }
    }
 else {
      if (child.getData().getIdObject() == currentIdObject) {
        next=child;
      }
    }
  }
  if (next == null) {
    Object o=currentIdObject;
    PathItemRole creator=path.get(index).getRole();
    BaseNodeData data=null;
    boolean isResult=index == path.size() - 1;
    if (o instanceof IModule) {
      data=new ModuleNodeData(creator,(IModule)o,isResult,results);
    }
 else     if (o instanceof SModel) {
      data=new ModelNodeData(creator,(SModel)o,isResult,results);
    }
 else     if (o instanceof SNode) {
      if (result != null && isResult) {
        data=new NodeNodeData(creator,result,isResult,nodeRepresentator,results);
      }
 else {
        data=new NodeNodeData(creator,(SNode)o,isResult,nodeRepresentator,results);
      }
    }
 else     if (o instanceof Pair) {
      Pair<CategoryKind,String> category=(Pair<CategoryKind,String>)currentIdObject;
      data=new CategoryNodeData(creator,category.o2,results,nodeRepresentator);
    }
    next=new DataNode(data);
    root.add(next);
  }
 else {
    adjustNode(next,path,index);
  }
  if (index == path.size() - 1) {
    return next;
  }
 else {
    return createPath(path,index + 1,next,nodeRepresentator,results,result);
  }
}
