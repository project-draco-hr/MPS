{
  super("OpenAPI Migration");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "SubProgressKind moved to openapi";
    }
    public String getAdditionalInfo(){
      return "SubProgressKind moved to openapi";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.EnumConstantReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isEnumClassifierReference(node,"f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.progress(MPS.Core/jetbrains.mps.progress@java_stub)","~SubProgressKind");
    }
    public void doUpdateInstanceNode(    SNode node){
      SNodeId targetNodeId=SNodeOperations.getReference(node,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc37588bc8L,0xfc37588bcaL,"enumConstantDeclaration")).getTargetNodeId();
      String value=(targetNodeId != null ? targetNodeId.toString() : null);
      if (value == null || value.endsWith("DEFAULT")) {
        StubRefUtil.replaceRefs(node,_quotation_createNode_kyzgj4_b0a0c0a0());
      }
 else       if (value.endsWith("AS_COMMENT")) {
        StubRefUtil.replaceRefs(node,_quotation_createNode_kyzgj4_b0a0a2a0a());
      }
 else       if (value.endsWith("IGNORED")) {
        StubRefUtil.replaceRefs(node,_quotation_createNode_kyzgj4_b0a0b2a0a());
      }
 else       if (value.endsWith("REPLACING")) {
        StubRefUtil.replaceRefs(node,_quotation_createNode_kyzgj4_b0a0c2a0a());
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "SubProgressKind moved to openapi";
    }
    public String getAdditionalInfo(){
      return "SubProgressKind moved to openapi";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToClass(SNodeOperations.getReference(node,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")),"jetbrains.mps.progress.SubProgressKind");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,_quotation_createNode_kyzgj4_b0a0a1());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ProgressMonitor.subTask(int)";
    }
    public String getAdditionalInfo(){
      return "ProgressMonitor.subTask(int)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.progress.ProgressMonitor.subTask(int):jetbrains.mps.progress.ProgressMonitor");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(_quotation_createNode_kyzgj4_a1a0a0c(),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,0x116b46b36c4L,"operation")));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ProgressMonitor.subTask(int,SubProgressKind)";
    }
    public String getAdditionalInfo(){
      return "ProgressMonitor.subTask(int,SubProgressKind)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isInstanceMethodCall(node,"jetbrains.mps.progress.ProgressMonitor.subTask(int,jetbrains.mps.progress.SubProgressKind):jetbrains.mps.progress.ProgressMonitor");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,SLinkOperations.getTarget(_quotation_createNode_kyzgj4_a1a0a0d(),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,0x116b46b36c4L,"operation")));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ProgressMonitor moved to openapi";
    }
    public String getAdditionalInfo(){
      return "ProgressMonitor moved to openapi";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToClass(SNodeOperations.getReference(node,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")),"jetbrains.mps.progress.ProgressMonitor");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,_quotation_createNode_kyzgj4_b0a0a4());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "ModuleReference.fromString() -> PersistenceFacade";
    }
    public String getAdditionalInfo(){
      return "ModuleReference.fromString() -> PersistenceFacade";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isStaticMethodCall(node,"jetbrains.mps.project.structure.modules.ModuleReference.fromString(java.lang.String):org.jetbrains.mps.openapi.module.SModuleReference");
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode arg=SNodeOperations.copyNode(ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301aeL,"actualArgument"))).first());
      StubRefUtil.replaceNode(node,_quotation_createNode_kyzgj4_b0b0a5(arg));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "SModelReference.fromString() -> PersistenceFacade";
    }
    public String getAdditionalInfo(){
      return "SModelReference.fromString() -> PersistenceFacade";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticMethodCall";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isStaticMethodCall(node,"jetbrains.mps.smodel.SModelReference.fromString(java.lang.String):jetbrains.mps.smodel.SModelReference");
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode arg=SNodeOperations.copyNode(ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301aeL,"actualArgument"))).first());
      StubRefUtil.replaceNode(node,_quotation_createNode_kyzgj4_b0b0a6(arg));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSTree moved to j.m.ide.ui.tree";
    }
    public String getAdditionalInfo(){
      return "MPSTree moved to j.m.ide.ui.tree";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToClass(SNodeOperations.getReference(node,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")),"jetbrains.mps.ide.ui.MPSTree");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,_quotation_createNode_kyzgj4_b0a0a7());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSTreeNode moved to j.m.ide.ui.tree";
    }
    public String getAdditionalInfo(){
      return "MPSTreeNode moved to j.m.ide.ui.tree";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassifierType";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToClass(SNodeOperations.getReference(node,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")),"jetbrains.mps.ide.ui.MPSTreeNode");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,_quotation_createNode_kyzgj4_b0a0a8());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "refs to MPSDataKeys.LOGICAL_VIEW_NODES";
    }
    public String getAdditionalInfo(){
      return "refs to MPSDataKeys.LOGICAL_VIEW_NODES";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,MetaAdapterFactory.getReferenceLink(0x28f9e4973b424291L,0xaeba0a1039153ab1L,0x11b69e025e0L,0x11b69e95df5L,"key")),"jetbrains.mps.workbench.MPSDataKeys.LOGICAL_VIEW_NODES");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,_quotation_createNode_kyzgj4_b0a0a9());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSDataKeys.LOGICAL_VIEW_NODES";
    }
    public String getAdditionalInfo(){
      return "MPSDataKeys.LOGICAL_VIEW_NODES";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c77f1e98L,0xf8cc6bf960L,"variableDeclaration")),"jetbrains.mps.workbench.MPSDataKeys.LOGICAL_VIEW_NODES");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,_quotation_createNode_kyzgj4_b0a0a01());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "refs to MPSDataKeys.LOGICAL_VIEW_NODE";
    }
    public String getAdditionalInfo(){
      return "refs to MPSDataKeys.LOGICAL_VIEW_NODE";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,MetaAdapterFactory.getReferenceLink(0x28f9e4973b424291L,0xaeba0a1039153ab1L,0x11b69e025e0L,0x11b69e95df5L,"key")),"jetbrains.mps.workbench.MPSDataKeys.LOGICAL_VIEW_NODE");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,_quotation_createNode_kyzgj4_b0a0a11());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSDataKeys.LOGICAL_VIEW_NODE";
    }
    public String getAdditionalInfo(){
      return "MPSDataKeys.LOGICAL_VIEW_NODE";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c77f1e98L,0xf8cc6bf960L,"variableDeclaration")),"jetbrains.mps.workbench.MPSDataKeys.LOGICAL_VIEW_NODE");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,_quotation_createNode_kyzgj4_b0a0a21());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "refs to MPSDataKeys.LOGICAL_VIEW_SELECTION_SIZE";
    }
    public String getAdditionalInfo(){
      return "refs to MPSDataKeys.LOGICAL_VIEW_SELECTION_SIZE";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return StubRefUtil.isReferenceToField(SNodeOperations.getReference(node,MetaAdapterFactory.getReferenceLink(0x28f9e4973b424291L,0xaeba0a1039153ab1L,0x11b69e025e0L,0x11b69e95df5L,"key")),"jetbrains.mps.workbench.MPSDataKeys.LOGICAL_VIEW_SELECTION_SIZE");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceRefs(node,_quotation_createNode_kyzgj4_b0a0a31());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "MPSDataKeys -> MPSCommonDataKeys";
    }
    public String getAdditionalInfo(){
      return "MPSDataKeys -> MPSCommonDataKeys";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.StaticFieldReference";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      if (!(StubRefUtil.isReferenceToClass(SNodeOperations.getReference(node,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf940c80846L,0x10a75869f9bL,"classifier")),"jetbrains.mps.workbench.MPSDataKeys"))) {
        return false;
      }
      SNode ancestor=SNodeOperations.getNodeAncestor(SLinkOperations.getTarget(node,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c77f1e98L,0xf8cc6bf960L,"variableDeclaration")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"),false,false);
      return (ancestor != null) && eq_kgm8nx_a0a3a3a0a0a0a51a0(SPropertyOperations.getString(ancestor,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")),"MPSCommonDataKeys");
    }
    public void doUpdateInstanceNode(    SNode node){
      StubRefUtil.replaceReference(node,SNodeOperations.getReference(_quotation_createNode_kyzgj4_a1a0a0o(),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf940c80846L,0x10a75869f9bL,"classifier")));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
