{
  ListSequence.fromList(SLinkOperations.getChildren(to,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a6be947aL,0x114a6beb0bdL,"annotation"))).addSequence(Sequence.fromIterable(Sequence.fromArray(from.getModifierList().getAnnotations())).select(new ISelector<PsiAnnotation,SNode>(){
    public SNode select(    PsiAnnotation it){
      PsiAnnotation psiAnno=it;
      SNode anno=resolveAnnotation(psiAnno);
      if ((anno == null)) {
        return null;
      }
      ListSequence.fromList(SLinkOperations.getChildren(anno,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a6b4ccabL,0x114a71c697fL,"value"))).addSequence(Sequence.fromIterable(Sequence.fromArray(psiAnno.getParameterList().getAttributes())).select(new ISelector<PsiNameValuePair,SNode>(){
        public SNode select(        PsiNameValuePair it){
          SNode annoParam=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a71b1af4L,"jetbrains.mps.baseLanguage.structure.AnnotationInstanceValue"));
          String paramName=it.getName();
          annoParam.setReference("key",new DynamicReference("key",annoParam,null,paramName));
          return annoParam;
        }
      }
));
      return anno;
    }
  }
));
}
