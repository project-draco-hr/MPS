{
  SNode field;
  if (isStatic(x) || SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(parentConcept),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface"))) {
    field=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf93c84351fL,"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration")));
  }
 else {
    field=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca68L,"jetbrains.mps.baseLanguage.structure.FieldDeclaration")));
    SPropertyOperations.set(SNodeOperations.cast(field,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca68L,"jetbrains.mps.baseLanguage.structure.FieldDeclaration")),MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca68L,0x120c4a208a1L,"isVolatile"),"" + (x.hasModifierProperty(PsiModifier.VOLATILE)));
    SPropertyOperations.set(SNodeOperations.cast(field,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca68L,"jetbrains.mps.baseLanguage.structure.FieldDeclaration")),MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca68L,0x776fe644792f90adL,"isTransient"),"" + (x.hasModifierProperty(PsiModifier.TRANSIENT)));
  }
  SPropertyOperations.set(field,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),"" + (x.getName()));
  SLinkOperations.setTarget(SNodeOperations.cast(field,MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112574373bdL,"jetbrains.mps.baseLanguage.structure.ClassifierMember")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,0x112670d886aL,"visibility"),getVisibility(x));
  SPropertyOperations.set(field,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37a7f6eL,0x111f9e9f00cL,"isFinal"),"" + (isFinal(x)));
  SLinkOperations.setTarget(field,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x450368d90ce15bc3L,0x4ed4d318133c80ceL,"type"),convertType(x.getType()));
  addAnnotations(x,field);
  if (needToSetId() && SPropertyOperations.getString(field,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")) != null) {
    ((jetbrains.mps.smodel.SNode)field).setId(JavaForeignIdBuilder.computeNodeId(x));
  }
  if (myMps2PsiMapper != null) {
    myMps2PsiMapper.consume(new Pair<SNode,PsiElement>(field,x));
  }
  return field;
}
