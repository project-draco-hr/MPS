{
  final Wrappers._T<SNode> classifier=new Wrappers._T<SNode>();
  if (x.isAnnotationType()) {
    classifier.value=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a69dc80cL,"jetbrains.mps.baseLanguage.structure.Annotation"));
  }
 else   if (x.isEnum()) {
    classifier.value=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass"));
  }
 else   if (x.isInterface()) {
    classifier.value=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface"));
  }
 else {
    classifier.value=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"));
  }
  final SNode ourConcept=SNodeOperations.getConceptDeclaration(classifier.value);
  SPropertyOperations.set(classifier.value,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),"" + (x.getName()));
  SLinkOperations.setTarget(classifier.value,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,0x112670d886aL,"visibility"),getVisibility(x));
  addAnnotations(x,classifier.value);
  if (needToSetId() && isNotEmptyString(SPropertyOperations.getString(classifier.value,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")))) {
    ((jetbrains.mps.smodel.SNode)classifier.value).setId(JavaForeignIdBuilder.computeNodeId(x));
  }
  final ASTConverter currConverter=addTypeParams(x,classifier.value);
  PsiClassType[] extendz=x.getExtendsListTypes();
  PsiClassType[] implementz=x.getImplementsListTypes();
{
    final SNode reallyClass=classifier.value;
    if (SNodeOperations.isInstanceOf(reallyClass,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"))) {
      if (extendz.length != 0) {
        SLinkOperations.setTarget(reallyClass,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x10f6353296dL,"superclass"),currConverter.resolveClass(extendz[0]));
      }
      ListSequence.fromList(SLinkOperations.getChildren(reallyClass,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0xff2ac0b419L,"implementedInterface"))).addSequence(Sequence.fromIterable(Sequence.fromArray(implementz)).where(new IWhereFilter<PsiClassType>(){
        public boolean accept(        PsiClassType it){
          return isNotLight(it);
        }
      }
).select(new ISelector<PsiClassType,SNode>(){
        public SNode select(        PsiClassType it){
          return currConverter.resolveClass(it);
        }
      }
));
      SPropertyOperations.set(reallyClass,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x11c6af4b284L,"isFinal"),"" + (isFinal(x)));
      SPropertyOperations.set(reallyClass,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x451f9e9f920b7f7dL,"isStatic"),"" + (isStatic(x)));
    }
  }
{
    final SNode iface=classifier.value;
    if (SNodeOperations.isInstanceOf(iface,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface"))) {
      ListSequence.fromList(SLinkOperations.getChildren(iface,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,0x101eddadad7L,"extendedInterface"))).addSequence(Sequence.fromIterable(Sequence.fromArray(extendz)).where(new IWhereFilter<PsiClassType>(){
        public boolean accept(        PsiClassType it){
          return isNotLight(it);
        }
      }
).select(new ISelector<PsiClassType,SNode>(){
        public SNode select(        PsiClassType it){
          return currConverter.resolveClass(it);
        }
      }
));
    }
  }
  Sequence.fromIterable(Sequence.fromArray(x.getFields())).visitAll(new IVisitor<PsiField>(){
    public void visit(    PsiField it){
      if (it instanceof PsiEnumConstant) {
        if (!(SNodeOperations.isInstanceOf(classifier.value,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass")))) {
          return;
        }
        SNode cnst=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367388b3L,"jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration"));
        SPropertyOperations.set(cnst,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),"" + (it.getName()));
        if (needToSetId() && SPropertyOperations.getString(cnst,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")) != null) {
          ((jetbrains.mps.smodel.SNode)cnst).setId(JavaForeignIdBuilder.computeNodeId(it));
        }
        ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(classifier.value,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,0xfc367503acL,"enumConstant"))).addElement(cnst);
      }
      SNode node=currConverter.convertField(it,ourConcept);
      if (SNodeOperations.isInstanceOf(node,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf93c84351fL,"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration"))) {
        ListSequence.fromList(SLinkOperations.getChildren(classifier.value,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x106c32c4395L,"staticField"))).addElement(SNodeOperations.cast(node,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf93c84351fL,"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration")));
      }
 else       if (SNodeOperations.isInstanceOf(node,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca68L,"jetbrains.mps.baseLanguage.structure.FieldDeclaration"))) {
        ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(classifier.value,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0xf8c108ca67L,"field"))).addElement(SNodeOperations.cast(node,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca68L,"jetbrains.mps.baseLanguage.structure.FieldDeclaration")));
      }
    }
  }
);
  Sequence.fromIterable(Sequence.fromArray(x.getMethods())).visitAll(new IVisitor<PsiMethod>(){
    public void visit(    PsiMethod it){
      SNode node=currConverter.convertMethod(it,ourConcept);
      if (SNodeOperations.isInstanceOf(node,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration"))) {
        ListSequence.fromList(SLinkOperations.getChildren(classifier.value,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x101f2cc410bL,"method"))).addElement(SNodeOperations.cast(node,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration")));
      }
 else       if (SNodeOperations.isInstanceOf(node,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbbebabf0aL,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration"))) {
        ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(classifier.value,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0xf93c860970L,"staticMethod"))).addElement(SNodeOperations.cast(node,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbbebabf0aL,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration")));
      }
 else       if (SNodeOperations.isInstanceOf(node,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b204L,"jetbrains.mps.baseLanguage.structure.ConstructorDeclaration"))) {
        ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(classifier.value,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0xf8c108ca69L,"constructor"))).addElement(SNodeOperations.cast(node,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b204L,"jetbrains.mps.baseLanguage.structure.ConstructorDeclaration")));
      }
    }
  }
);
  ListSequence.fromList(SLinkOperations.getChildren(classifier.value,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x1126b0986b7L,"staticInnerClassifiers"))).addSequence(Sequence.fromIterable(Sequence.fromArray(x.getInnerClasses())).select(new ISelector<PsiClass,SNode>(){
    public SNode select(    PsiClass it){
      return currConverter.convertClass(it);
    }
  }
));
  if (myMps2PsiMapper != null) {
    myMps2PsiMapper.consume(new Pair<SNode,PsiElement>(classifier.value,x));
  }
  return classifier.value;
}
