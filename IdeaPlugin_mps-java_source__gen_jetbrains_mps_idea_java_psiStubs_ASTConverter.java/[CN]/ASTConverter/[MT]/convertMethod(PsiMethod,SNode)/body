{
  SNode method;
  if (x.isConstructor()) {
    method=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b204L,"jetbrains.mps.baseLanguage.structure.ConstructorDeclaration")));
  }
 else   if (x instanceof PsiAnnotationMethod && SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(parentConcept),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a69dc80cL,"jetbrains.mps.baseLanguage.structure.Annotation"))) {
    method=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a6a17a27L,"jetbrains.mps.baseLanguage.structure.AnnotationMethodDeclaration")));
    if (((PsiAnnotationMethod)x).getDefaultValue() != null) {
      SNode str=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf93d565d10L,"jetbrains.mps.baseLanguage.structure.StringLiteral")));
      SPropertyOperations.set(str,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf93d565d10L,0xf93d565d11L,"value"),"TODO: SUPPORT EXPRESSIONS IN PSI STUBS?");
      SLinkOperations.setTarget(SNodeOperations.cast(method,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a6a17a27L,"jetbrains.mps.baseLanguage.structure.AnnotationMethodDeclaration")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a6a17a27L,0x505a7bf53e13af48L,"defaultValue"),str);
    }
  }
 else   if (!(isStatic(x)) || SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(parentConcept),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface"))) {
    method=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration")));
  }
 else {
    method=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbbebabf0aL,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration")));
  }
  SPropertyOperations.set(method,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),"" + (x.getName()));
  SLinkOperations.setTarget(SNodeOperations.cast(method,MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112574373bdL,"jetbrains.mps.baseLanguage.structure.ClassifierMember")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,0x112670d886aL,"visibility"),getVisibility(x));
  SPropertyOperations.set(method,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0x113294bffd2L,"isFinal"),"" + (isFinal(x)));
  SPropertyOperations.set(method,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0x3b576cda23612c7aL,"isSynchronized"),"" + (x.hasModifierProperty(PsiModifier.SYNCHRONIZED)));
  ListSequence.fromList(SLinkOperations.getChildren(method,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0x10f383d6949L,"throwsItem"))).addSequence(Sequence.fromIterable(Sequence.fromArray(x.getThrowsList().getReferencedTypes())).where(new IWhereFilter<PsiClassType>(){
    public boolean accept(    PsiClassType it){
      return isNotLight(it);
    }
  }
).select(new ISelector<PsiClassType,SNode>(){
    public SNode select(    PsiClassType it){
      SNode typ=resolveClass(it);
      return typ;
    }
  }
));
  final ASTConverter currConverter=addTypeParams(x,method);
  SLinkOperations.setTarget(method,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1fdL,"returnType"),currConverter.convertType(x.getReturnType()));
  ListSequence.fromList(SLinkOperations.getChildren(method,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1feL,"parameter"))).addSequence(Sequence.fromIterable(Sequence.fromArray(x.getParameterList().getParameters())).select(new ISelector<PsiParameter,SNode>(){
    public SNode select(    PsiParameter it){
      SNode param=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c77f1e94L,"jetbrains.mps.baseLanguage.structure.ParameterDeclaration")));
      SPropertyOperations.set(param,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),"" + (it.getName()));
      SLinkOperations.setTarget(param,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x450368d90ce15bc3L,0x4ed4d318133c80ceL,"type"),currConverter.convertType(it.getType()));
      SPropertyOperations.set(param,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37a7f6eL,0x111f9e9f00cL,"isFinal"),"" + (isFinal(it)));
      currConverter.addAnnotations(it,param);
      return param;
    }
  }
));
  if (1 > 0) {
    SLinkOperations.setTarget(method,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1ffL,"body"),SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x4975dc2bdcfa0c49L,"jetbrains.mps.baseLanguage.structure.StubStatementList"))));
  }
 else {
    SLinkOperations.setTarget(method,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1ffL,"body"),SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b200L,"jetbrains.mps.baseLanguage.structure.StatementList"))));
  }
  if (needToSetId()) {
    SNodeId.Foreign nodeId=JavaForeignIdBuilder.computeNodeId(x);
    if (nodeId != null) {
      ((jetbrains.mps.smodel.SNode)method).setId(nodeId);
    }
  }
  if (myMps2PsiMapper != null) {
    myMps2PsiMapper.consume(new Pair<SNode,PsiElement>(method,x));
  }
  return method;
}
