{
  if (x == null) {
    return null;
  }
  if (x instanceof PsiPrimitiveType) {
    PsiPrimitiveType t=(PsiPrimitiveType)x;
    if (x.equals(PsiPrimitiveType.BYTE)) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1070534604311l,"jetbrains.mps.baseLanguage.structure.ByteType")));
    }
 else     if (x.equals(PsiPrimitiveType.INT)) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1070534370425l,"jetbrains.mps.baseLanguage.structure.IntegerType")));
    }
 else     if (x.equals(PsiPrimitiveType.SHORT)) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1070533982221l,"jetbrains.mps.baseLanguage.structure.ShortType")));
    }
 else     if (x.equals(PsiPrimitiveType.LONG)) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068581242867l,"jetbrains.mps.baseLanguage.structure.LongType")));
    }
 else     if (x.equals(PsiPrimitiveType.SHORT)) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1070533982221l,"jetbrains.mps.baseLanguage.structure.ShortType")));
    }
 else     if (x.equals(PsiPrimitiveType.FLOAT)) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1070534436861l,"jetbrains.mps.baseLanguage.structure.FloatType")));
    }
 else     if (x.equals(PsiPrimitiveType.DOUBLE)) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1070534513062l,"jetbrains.mps.baseLanguage.structure.DoubleType")));
    }
 else     if (x.equals(PsiPrimitiveType.CHAR)) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1070534555686l,"jetbrains.mps.baseLanguage.structure.CharType")));
    }
 else     if (x.equals(PsiPrimitiveType.BOOLEAN)) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1070534644030l,"jetbrains.mps.baseLanguage.structure.BooleanType")));
    }
 else     if (x.equals(PsiPrimitiveType.VOID)) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068581517677l,"jetbrains.mps.baseLanguage.structure.VoidType")));
    }
 else {
      return null;
    }
  }
 else   if (x instanceof PsiClassType) {
    PsiClassType t=(PsiClassType)x;
    SNode typVarRef=myState.resolveTypeVar(t.getClassName());
    if (typVarRef != null) {
      return typVarRef;
    }
    SNode typ=resolveClass(t);
    return typ;
  }
 else   if (x instanceof PsiArrayType) {
    SNode arrType=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1070534760951l,"jetbrains.mps.baseLanguage.structure.ArrayType")));
    SLinkOperations.setTarget(arrType,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1070534760951l,1070534760952l,"componentType"),convertType(((PsiArrayType)x).getComponentType()));
    return arrType;
  }
 else   if (x instanceof PsiWildcardType) {
    PsiWildcardType t=(PsiWildcardType)x;
    if (!(t.isBounded())) {
      return SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1171903607971l,"jetbrains.mps.baseLanguage.structure.WildCardType")));
    }
    SNode bound=convertType(t.getBound());
    if (t.isExtends()) {
      return _quotation_createNode_rbndtb_a0a6a2c0t(bound);
    }
 else {
      return _quotation_createNode_rbndtb_a0a0g0c2a91(bound);
    }
  }
 else {
    return null;
  }
}
