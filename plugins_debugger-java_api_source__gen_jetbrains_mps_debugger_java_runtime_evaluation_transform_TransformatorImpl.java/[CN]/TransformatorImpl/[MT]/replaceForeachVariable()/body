{
  boolean finished=true;
  for (  SNode foreachStatement : ListSequence.fromList(SNodeOperations.getDescendants(myWhatToEvaluate,"jetbrains.mps.baseLanguage.structure.ForeachStatement",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return TransformationUtil.isUnprocessed(it);
    }
  }
)) {
    if (TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(foreachStatement,"iterable",true)),_quotation_createNode_s72qk1_b0a0a0b0t()) && !(TypeChecker.getInstance().getSubtypingManager().isSubtype(SLinkOperations.getTarget(SLinkOperations.getTarget(foreachStatement,"variable",true),"type",true),_quotation_createNode_s72qk1_b0a0a0a1a91()))) {
      TransformationUtil.replaceForEachStatement(foreachStatement);
      finished=false;
    }
  }
  return finished;
}
