{
  for (  SNode newExpression : ListSequence.fromList(SNodeOperations.getDescendants(myWhatToEvaluate,"jetbrains.mps.baseLanguage.structure.GenericNewExpression",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return TransformationUtil.isUnprocessed(it) && TransformationUtil.isUnprocessed(SLinkOperations.getTarget(it,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1145552977093l,1145553007750l,"creator")));
    }
  }
)) {
    if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(newExpression,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1145552977093l,1145553007750l,"creator")),"jetbrains.mps.baseLanguage.structure.ClassCreator") && !(SNodeOperations.isInstanceOf(SNodeOperations.getParent(newExpression),"jetbrains.mps.baseLanguage.structure.ThrowStatement"))) {
      SNode constructor=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(newExpression,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1145552977093l,1145553007750l,"creator")),"jetbrains.mps.baseLanguage.structure.ClassCreator"),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141037l,"baseMethodDeclaration"));
      SNode fqNameNode=TransformationUtil.createClassFqNameNode(myModel,SNodeOperations.getAncestor(constructor,"jetbrains.mps.baseLanguage.structure.ClassConcept",false,false));
      SNode jnSignature=TransformationUtil.createStringLiteral(TransformationUtil.getJniSignature(constructor));
      List<SNode> actualArguments=SLinkOperations.getChildren(SNodeOperations.cast(SLinkOperations.getTarget(newExpression,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1145552977093l,1145553007750l,"creator")),"jetbrains.mps.baseLanguage.structure.ClassCreator"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141038l,"actualArgument"));
      TransformationUtil.replaceConstructor(newExpression,fqNameNode,jnSignature,actualArguments);
    }
 else     if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(newExpression,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1145552977093l,1145553007750l,"creator")),"jetbrains.mps.baseLanguage.structure.ArrayCreator")) {
      SNode componentType=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(newExpression,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1145552977093l,1145553007750l,"creator")),"jetbrains.mps.baseLanguage.structure.ArrayCreator"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1184950988562l,1184951007469l,"componentType"));
      SNode fqNameNode;
      if (SNodeOperations.isInstanceOf(componentType,"jetbrains.mps.baseLanguage.structure.ClassifierType")) {
        fqNameNode=TransformationUtil.createClassFqNameNode(myModel,SLinkOperations.getTarget(SNodeOperations.cast(componentType,"jetbrains.mps.baseLanguage.structure.ClassifierType"),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1107535924139l,"classifier")));
      }
 else {
        fqNameNode=TransformationUtil.createStringLiteral(SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(componentType),MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1169125787135l,5092175715804935370l,"conceptAlias")));
      }
      SNode size=SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(SLinkOperations.getTarget(newExpression,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1145552977093l,1145553007750l,"creator")),"jetbrains.mps.baseLanguage.structure.ArrayCreator"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1184950988562l,1184952969026l,"dimensionExpression"))).first(),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1184952934362l,1184953288404l,"expression"));
      TransformationUtil.replaceArrayConstructor(newExpression,fqNameNode,size);
    }
 else     if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(newExpression,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1145552977093l,1145553007750l,"creator")),"jetbrains.mps.baseLanguage.structure.ArrayCreatorWithInitializer")) {
      SNode componentType=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(newExpression,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1145552977093l,1145553007750l,"creator")),"jetbrains.mps.baseLanguage.structure.ArrayCreatorWithInitializer"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1154542696413l,1154542793668l,"componentType"));
      SNode fqNameNode;
      if (SNodeOperations.isInstanceOf(componentType,"jetbrains.mps.baseLanguage.structure.ClassifierType")) {
        fqNameNode=TransformationUtil.createClassFqNameNode(myModel,SLinkOperations.getTarget(SNodeOperations.cast(componentType,"jetbrains.mps.baseLanguage.structure.ClassifierType"),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1107535924139l,"classifier")));
      }
 else {
        fqNameNode=TransformationUtil.createStringLiteral(SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(componentType),MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1169125787135l,5092175715804935370l,"conceptAlias")));
      }
      List<SNode> initValues=SLinkOperations.getChildren(SNodeOperations.cast(SLinkOperations.getTarget(newExpression,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1145552977093l,1145553007750l,"creator")),"jetbrains.mps.baseLanguage.structure.ArrayCreatorWithInitializer"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1154542696413l,1154542803372l,"initValue"));
      TransformationUtil.replaceArrayWithInitializerConstructor(newExpression,fqNameNode,initValues);
    }
  }
  for (  SNode newExpression : ListSequence.fromList(SNodeOperations.getDescendants(myWhatToEvaluate,"jetbrains.mps.baseLanguageInternal.structure.InternalNewExpression",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return TransformationUtil.isUnprocessed(it);
    }
  }
)) {
    if (!(SNodeOperations.isInstanceOf(SNodeOperations.getParent(newExpression),"jetbrains.mps.baseLanguage.structure.ThrowStatement"))) {
      TransformationUtil.replaceConstructor(newExpression,TransformationUtil.createStringLiteral(SPropertyOperations.getString(newExpression,MetaAdapterFactory.getProperty(new UUID(-2363163772790029805l,-6024047381933761144l),1173996401517l,1173996588177l,"fqClassName"))),TransformationUtil.createStringLiteral(TransformationUtil.getJniSignature(ListSequence.fromList(SLinkOperations.getChildren(newExpression,MetaAdapterFactory.getContainmentLink(new UUID(-2363163772790029805l,-6024047381933761144l),1173996401517l,319021450862590135l,"actualArgument"))).select(new ISelector<SNode,SNode>(){
        public SNode select(        SNode it){
          return SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(it),"jetbrains.mps.baseLanguage.structure.Type");
        }
      }
),_quotation_createNode_s72qk1_b0c0a0a0c0l())),SLinkOperations.getChildren(newExpression,MetaAdapterFactory.getContainmentLink(new UUID(-2363163772790029805l,-6024047381933761144l),1173996401517l,319021450862590135l,"actualArgument")));
    }
  }
}
