{
  List<SNode> order=getOrder(dotExpression,ListSequence.fromList(new ArrayList<SNode>()));
  final Wrappers._T<SNode> normalizedDotExpression=new Wrappers._T<SNode>(SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.DotExpression",null));
  final Wrappers._boolean firstTime=new Wrappers._boolean(true);
  ListSequence.fromList(order).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode node){
      if (firstTime.value) {
        SLinkOperations.setTarget(normalizedDotExpression.value,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1197027756228l,1197027771414l,"operand"),SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.Expression"));
        firstTime.value=false;
      }
 else {
        SNode newDotExpression=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.DotExpression",null);
        SLinkOperations.setTarget(newDotExpression,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1197027756228l,1197027771414l,"operand"),normalizedDotExpression.value);
        SLinkOperations.setTarget(normalizedDotExpression.value,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1197027756228l,1197027833540l,"operation"),SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.IOperation"));
        normalizedDotExpression.value=newDotExpression;
      }
    }
  }
);
  SNodeOperations.replaceWithAnother(dotExpression,SLinkOperations.getTarget(normalizedDotExpression.value,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1197027756228l,1197027771414l,"operand")));
}
