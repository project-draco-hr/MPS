{
  for (  SNode variableRef : ListSequence.fromList(SNodeOperations.getNodeDescendants(myWhatToEvaluate,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x4c4b92003e49a704L,"jetbrains.mps.baseLanguage.structure.BaseVariableReference"),false,new SAbstractConcept[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return TransformationUtil.isUnprocessed(it);
    }
  }
)) {
    if ((TransformationUtil.isLowLevelVariableReference(variableRef))) {
      String variableName;
      if (SNodeOperations.isInstanceOf(variableRef,MetaAdapterFactory.getConcept(0x7da4580f9d754603L,0x816251a896d78375L,0x7d9a547f857a394bL,"jetbrains.mps.debugger.java.evaluation.structure.LowLevelVariableReference")) && SPropertyOperations.getBoolean(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.cast(variableRef,MetaAdapterFactory.getConcept(0x7da4580f9d754603L,0x816251a896d78375L,0x7d9a547f857a394bL,"jetbrains.mps.debugger.java.evaluation.structure.LowLevelVariableReference")),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x4c4b92003e49a704L,0x4c4b92003e49a705L,"baseVariableDeclaration")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x450368d90ce15bc3L,0x4ed4d318133c80ceL,"type")),MetaAdapterFactory.getProperty(0x7da4580f9d754603L,0x816251a896d78375L,0x3f11b1341fa25ed8L,0x3f11b1341fa25eedL,"isHigh"))) {
        variableName=SPropertyOperations.getString(SLinkOperations.getTarget(SNodeOperations.cast(variableRef,MetaAdapterFactory.getConcept(0x7da4580f9d754603L,0x816251a896d78375L,0x7d9a547f857a394bL,"jetbrains.mps.debugger.java.evaluation.structure.LowLevelVariableReference")),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x4c4b92003e49a704L,0x4c4b92003e49a705L,"baseVariableDeclaration")),MetaAdapterFactory.getProperty(0x7da4580f9d754603L,0x816251a896d78375L,0x53c5060c6b18d926L,0x4db8c07036eb94eeL,"lowLevelName"));
      }
 else {
        variableName=SPropertyOperations.getString(SLinkOperations.getTarget(variableRef,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x4c4b92003e49a704L,0x4c4b92003e49a705L,"baseVariableDeclaration")),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
      }
      SNode variableType=TypeChecker.getInstance().getTypeOf(variableRef);
      TransformationUtil.replaceLowLevelVariableReference(variableName,variableType,variableRef);
    }
  }
  for (  SNode variableRef : ListSequence.fromList(SNodeOperations.getNodeDescendants(myWhatToEvaluate,MetaAdapterFactory.getConcept(0xdf345b11b8c74213L,0xac6648d2a9b75d88L,0x111fb5bb1f2L,"jetbrains.mps.baseLanguageInternal.structure.InternalVariableReference"),false,new SAbstractConcept[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return TransformationUtil.isUnprocessed(it);
    }
  }
)) {
    TransformationUtil.replaceLowLevelVariableReference(SPropertyOperations.getString(variableRef,MetaAdapterFactory.getProperty(0xdf345b11b8c74213L,0xac6648d2a9b75d88L,0x111fb5bb1f2L,0x111fb5dbc49L,"name")),SLinkOperations.getTarget(variableRef,MetaAdapterFactory.getContainmentLink(0xdf345b11b8c74213L,0xac6648d2a9b75d88L,0x111fb5bb1f2L,0x111fb5c4f4cL,"type")),variableRef);
  }
}
