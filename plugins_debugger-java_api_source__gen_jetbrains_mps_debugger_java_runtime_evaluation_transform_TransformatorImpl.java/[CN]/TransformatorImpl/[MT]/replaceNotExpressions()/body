{
  boolean finished=true;
{
    SNode notExpression;
    Iterator<SNode> notExpression_iterator=ListSequence.fromList(SNodeOperations.getNodeDescendants(myWhatToEvaluate,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbcf6bd10dL,"jetbrains.mps.baseLanguage.structure.NotExpression"),false,new SAbstractConcept[]{})).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return TransformationUtil.isUnprocessed(it);
      }
    }
).iterator();
    while (true) {
      if (!(notExpression_iterator.hasNext())) {
        break;
      }
      notExpression=notExpression_iterator.next();
      if (TransformationUtil.isNotNullProxy(SLinkOperations.getTarget(notExpression,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbcf6bd10dL,0xfbcf6c30a4L,"expression")))) {
        SLinkOperations.setTarget(notExpression,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbcf6bd10dL,0xfbcf6c30a4L,"expression"),_quotation_createNode_s72qk1_a0a0a0a2a2a1a12(SLinkOperations.getTarget(notExpression,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbcf6bd10dL,0xfbcf6c30a4L,"expression"))));
        finished=false;
      }
    }
  }
  return finished;
}
