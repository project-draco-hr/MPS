{
  for (  SNode thisExpression : ListSequence.fromList(SNodeOperations.getNodeDescendants(myWhatToEvaluate,MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11d206f8d91L,"jetbrains.mps.baseLanguage.structure.IThisExpression"),false,new SAbstractConcept[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return TransformationUtil.isUnprocessed(it);
    }
  }
)) {
    TransformationUtil.replaceThisExpression(thisExpression);
  }
  for (  SNode thisExpression : ListSequence.fromList(SNodeOperations.getNodeDescendants(myWhatToEvaluate,MetaAdapterFactory.getConcept(0x7da4580f9d754603L,0x816251a896d78375L,0x53c5060c6b1ae1c6L,"jetbrains.mps.debugger.java.evaluation.structure.EvaluatorsThisExpression"),false,new SAbstractConcept[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return TransformationUtil.isUnprocessed(it);
    }
  }
)) {
    TransformationUtil.replaceThisExpression(thisExpression);
  }
  for (  SNode thisExpression : ListSequence.fromList(SNodeOperations.getNodeDescendants(myWhatToEvaluate,MetaAdapterFactory.getConcept(0xdf345b11b8c74213L,0xac6648d2a9b75d88L,0x1180ebdd5b4L,"jetbrains.mps.baseLanguageInternal.structure.InternalThisExpression"),false,new SAbstractConcept[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return TransformationUtil.isUnprocessed(it);
    }
  }
)) {
    TransformationUtil.replaceThisExpression(thisExpression);
  }
}
