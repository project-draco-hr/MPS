{
  boolean finished=true;
  for (  SNode arrayAccess : ListSequence.fromList(SNodeOperations.getDescendants(myWhatToEvaluate,"jetbrains.mps.baseLanguage.structure.ArrayAccessExpression",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return TransformationUtil.isUnprocessed(it);
    }
  }
)) {
    if (TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(arrayAccess,"array",true)),_quotation_createNode_s72qk1_b0a0a1a33())) {
      SNode returnType=_quotation_createNode_s72qk1_a0a0a0b0hb();
      if (arrayAccess.getUserObject(TransformatorImpl.LTYPE) != null) {
        returnType=TransformationUtil.getValueProxyTypeFromType(((SNode)arrayAccess.getUserObject(LTYPE)));
      }
      SNodeOperations.replaceWithAnother(arrayAccess,_quotation_createNode_s72qk1_a0a2a0a1a33(returnType,SLinkOperations.getTarget(arrayAccess,"index",true),returnType,SLinkOperations.getTarget(arrayAccess,"array",true)));
      finished=false;
    }
  }
  for (  SNode arrayLength : ListSequence.fromList(SNodeOperations.getDescendants(myWhatToEvaluate,"jetbrains.mps.baseLanguage.structure.ArrayLengthOperation",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return TransformationUtil.isUnprocessed(it);
    }
  }
)) {
    if (TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(arrayLength),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)),_quotation_createNode_s72qk1_b0a0a2a33())) {
      SNodeOperations.replaceWithAnother(SNodeOperations.getParent(arrayLength),_quotation_createNode_s72qk1_a0a0a0a2a33(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(arrayLength),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
      finished=false;
    }
  }
  return finished;
}
