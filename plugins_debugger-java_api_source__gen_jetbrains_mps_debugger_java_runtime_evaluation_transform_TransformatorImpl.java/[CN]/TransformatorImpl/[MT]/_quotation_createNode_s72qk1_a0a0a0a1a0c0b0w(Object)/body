{
  SNode quotedNode_2=null;
  SNode quotedNode_3=null;
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  SNode quotedNode_7=null;
  SNode quotedNode_8=null;
  SNode quotedNode_9=null;
  SNode quotedNode_10=null;
  SNode quotedNode_11=null;
  SNode quotedNode_12=null;
  SNode quotedNode_13=null;
  SNode quotedNode_14=null;
  quotedNode_2=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.CastExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_3=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",null,null,GlobalScope.getInstance(),false);
  quotedNode_3.setReference("classifier",SReference.create("classifier",quotedNode_3,SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"),SNodeId.fromString("~String")));
  quotedNode_2.addChild("type",quotedNode_3);
  quotedNode_4=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguageInternal.structure.InternalPartialInstanceMethodCall",null,null,GlobalScope.getInstance(),false);
  SNodeAccessUtil.setProperty(quotedNode_4,"methodName","getJavaValue");
  quotedNode_5=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",null,null,GlobalScope.getInstance(),false);
  quotedNode_5.setReference("classifier",SReference.create("classifier",quotedNode_5,SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"),SNodeId.fromString("~Object")));
  quotedNode_4.addChild("returnType",quotedNode_5);
  quotedNode_6=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguageInternal.structure.InternalPartialInstanceMethodCall",null,null,GlobalScope.getInstance(),false);
  SNodeAccessUtil.setProperty(quotedNode_6,"methodName","invokeMethod");
  quotedNode_7=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",null,null,GlobalScope.getInstance(),false);
  quotedNode_7.setReference("classifier",SReference.create("classifier",quotedNode_7,SModelReference.fromString("r:ea2e6d1f-eab5-4a08-8299-1abe57148f37(jetbrains.mps.debugger.java.api.evaluation.proxies)"),SNodeId.fromString("4727801710070560812")));
  quotedNode_6.addChild("returnType",quotedNode_7);
  quotedNode_8=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral",null,null,GlobalScope.getInstance(),false);
  SNodeAccessUtil.setProperty(quotedNode_8,"value","toString");
  quotedNode_6.addChild("actualArgument",quotedNode_8);
  quotedNode_9=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StringLiteral",null,null,GlobalScope.getInstance(),false);
  SNodeAccessUtil.setProperty(quotedNode_9,"value","()Ljava/lang/String;");
  quotedNode_6.addChild("actualArgument",quotedNode_9);
  quotedNode_10=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguageInternal.structure.InternalPartialInstanceMethodCall",null,null,GlobalScope.getInstance(),false);
  SNodeAccessUtil.setProperty(quotedNode_10,"methodName","getThreadReference");
  quotedNode_12=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",null,null,GlobalScope.getInstance(),false);
  quotedNode_12.setReference("classifier",SReference.create("classifier",quotedNode_12,SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#com.sun.jdi(JDK/com.sun.jdi@java_stub)"),SNodeId.fromString("~ThreadReference")));
  quotedNode_10.addChild("returnType",quotedNode_12);
  quotedNode_13=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguageInternal.structure.InternalThisExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_10.addChild("instance",quotedNode_13);
  quotedNode_6.addChild("actualArgument",quotedNode_10);
  quotedNode_11=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_14=(SNode)parameter_1;
  if (quotedNode_14 != null) {
    quotedNode_11.addChild("expression",HUtil.copyIfNecessary(quotedNode_14));
  }
  quotedNode_6.addChild("instance",quotedNode_11);
  quotedNode_4.addChild("instance",quotedNode_6);
  quotedNode_2.addChild("expression",quotedNode_4);
  return quotedNode_2;
}
