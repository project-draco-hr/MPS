{
  final Map<IModule,ConfigurationType> conTypes=new HashMap<IModule,ConfigurationType>();
  Set<Language> languages=new HashSet<Language>();
  for (  Solution s : project.getProjectSolutions()) {
    languages.addAll(s.getScope().getVisibleLanguages());
  }
  for (  Language l : project.getProjectLanguages()) {
    languages.add(l);
  }
  languages.addAll(LibraryManager.getInstance().getGlobalModules(Language.class));
  for (  Language language : languages) {
    if (language.getPluginModelDescriptor() != null) {
      SModel model=language.getPluginModelDescriptor().getSModel();
      List<ConfigurationTypeDeclaration> configTypeAdapters=model.getRootsAdapters(ConfigurationTypeDeclaration.class);
      if (configTypeAdapters.isEmpty())       continue;
      String configName=configTypeAdapters.get(0).getName();
      String confName=language.getPluginModelDescriptor().getLongName() + "." + configName;
      ConfigurationType configurationType=createConfig(language,confName);
      if (configurationType == null)       continue;
      conTypes.put(language,configurationType);
    }
  }
  return new ArrayList<ConfigurationType>(conTypes.values());
}
