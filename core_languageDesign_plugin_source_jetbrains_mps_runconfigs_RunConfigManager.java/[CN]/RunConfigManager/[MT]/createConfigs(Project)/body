{
  final List<ConfigurationType> conTypes=new ArrayList<ConfigurationType>();
  Set<Language> languages=new HashSet<Language>();
  for (  Solution s : myMpsProject.getProjectSolutions()) {
    languages.addAll(s.getScope().getVisibleLanguages());
  }
  for (  Language l : myMpsProject.getProjectLanguages()) {
    languages.add(l);
  }
  languages.addAll(LibraryManager.getInstance().getGlobalModules(Language.class));
  for (  Language language : languages) {
    if (LanguageAspect.PLUGIN.get(language) != null) {
      SModel model=LanguageAspect.PLUGIN.get(language).getSModel();
      for (      RunConfigurationTypeDeclaration rcTypeDecl : model.getRootsAdapters(RunConfigurationTypeDeclaration.class)) {
        String configName=rcTypeDecl.getName() + "_ConfigurationType";
        String confName=LanguageAspect.PLUGIN.get(language).getLongName() + "." + configName;
        ConfigurationType configurationType=createConfig(language,confName);
        if (configurationType == null)         continue;
        conTypes.add(configurationType);
      }
    }
  }
  return conTypes;
}
