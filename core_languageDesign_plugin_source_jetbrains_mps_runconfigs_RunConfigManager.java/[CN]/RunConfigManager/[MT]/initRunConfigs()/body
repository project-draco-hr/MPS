{
  if (myProject.isDisposed())   return;
  if (myLoaded)   return;
  final MPSProject mpsProject=myProject.getComponent(MPSProjectHolder.class).getMPSProject();
  final ExtensionPoint<ConfigurationType> epConfigType=Extensions.getArea(null).getExtensionPoint(ConfigurationType.CONFIGURATION_TYPE_EP);
synchronized (myConfigsLock) {
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        mySortedConfigs=createConfigs(mpsProject);
        for (        ConfigurationType ct : mySortedConfigs) {
          epConfigType.registerExtension(ct);
        }
      }
    }
);
  }
  final ConfigurationType[] configurationTypes=Extensions.getExtensions(ConfigurationType.CONFIGURATION_TYPE_EP);
  getRunManager().initializeConfigurationTypes(configurationTypes);
  if (myState != null) {
    try {
      getRunManager().readExternal(myState);
    }
 catch (    InvalidDataException e) {
      LOG.error(e);
    }
  }
  myLoaded=true;
}
