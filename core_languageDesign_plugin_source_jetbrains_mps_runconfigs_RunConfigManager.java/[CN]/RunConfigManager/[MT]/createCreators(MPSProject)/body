{
  final List<ConfigurationType> conTypes=new ArrayList<ConfigurationType>();
  Set<Language> languages=new HashSet<Language>();
  for (  Solution s : project.getProjectSolutions()) {
    languages.addAll(s.getScope().getVisibleLanguages());
  }
  for (  Language l : project.getProjectLanguages()) {
    languages.add(l);
  }
  languages.addAll(LibraryManager.getInstance().getGlobalModules(Language.class));
  for (  Language language : languages) {
    if (language.getPluginModelDescriptor() != null) {
      SModel model=language.getPluginModelDescriptor().getSModel();
      final ExtensionPoint<RuntimeConfigurationProducer> epCreator=Extensions.getArea(null).getExtensionPoint(RuntimeConfigurationProducer.RUNTIME_CONFIGURATION_PRODUCER);
      for (      RunConfigCreator creator : model.getRootsAdapters(RunConfigCreator.class)) {
        String creatorClassName=language.getPluginModelDescriptor().getLongName() + "." + creator.getName();
        BaseConfigCreator configCreator=createCreator(language,creatorClassName);
        if (configCreator == null)         continue;
        epCreator.registerExtension(configCreator);
      }
    }
  }
  return conTypes;
}
