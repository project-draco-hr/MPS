{
  boolean isWrappedElementBefore=true;
  SNode lastMember=Sequence.fromIterable(Classifier_Behavior.call_members_1465982738252129704(classifier)).last();
  for (  SNode member : Classifier_Behavior.call_members_1465982738252129704(classifier)) {
    if (SNodeOperations.isInstanceOf(member,"jetbrains.mps.baseLanguage.structure.ClassifierMember")) {
      boolean needsLineBefore=BehaviorReflection.invokeVirtual(Boolean.TYPE,SNodeOperations.cast(member,"jetbrains.mps.baseLanguage.structure.ClassifierMember"),"virtual_needsEmptyLineBefore_641490355014296733",new Object[]{});
      boolean needsLineAfter=BehaviorReflection.invokeVirtual(Boolean.TYPE,SNodeOperations.cast(member,"jetbrains.mps.baseLanguage.structure.ClassifierMember"),"virtual_needsEmptyLineAfter_641490355014298838",new Object[]{});
      BaseLanguageTextGen.newLine(needsLineBefore && !(isWrappedElementBefore),textGen);
      textGen.appendNode(member);
      BaseLanguageTextGen.newLine(needsLineAfter && !((lastMember == member)),textGen);
      isWrappedElementBefore=needsLineAfter;
    }
 else {
      textGen.appendNode(member);
      isWrappedElementBefore=false;
    }
  }
  if ((SLinkOperations.getTarget(SNodeOperations.as(classifier,"jetbrains.mps.baseLanguage.structure.ClassConcept"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,1171626359898l,"staticInitializer")) != null)) {
    textGen.appendWithIndent("static {");
    textGen.increaseDepth();
    textGen.appendNode(SLinkOperations.getTarget(SNodeOperations.cast(classifier,"jetbrains.mps.baseLanguage.structure.ClassConcept"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,1171626359898l,"staticInitializer")));
    textGen.appendNewLine();
    textGen.decreaseDepth();
    textGen.appendWithIndent("}");
    textGen.appendNewLine();
  }
}
