{
  boolean needNewLineBefore=false;
  for (  SNode member : Sequence.fromIterable(Classifier_Behavior.call_members_1465982738252129704(classifier))) {
    BaseLanguageTextGen.newLine(needNewLineBefore,textGen);
    TextGenManager.instance().appendNodeText(textGen.getContext(),textGen.getBuffer(),member,textGen.getSNode());
    needNewLineBefore=true;
  }
  if ((SLinkOperations.getTarget(SNodeOperations.as(classifier,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"classInitializer",true) != null)) {
    BaseLanguageTextGen.newLine(needNewLineBefore,textGen);
    textGen.appendWithIndent("static {");
    textGen.increaseDepth();
    TextGenManager.instance().appendNodeText(textGen.getContext(),textGen.getBuffer(),SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.cast(classifier,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"classInitializer",true),"statementList",true),textGen.getSNode());
    textGen.appendNewLine();
    textGen.decreaseDepth();
    textGen.appendWithIndent("}");
    textGen.appendNewLine();
  }
}
