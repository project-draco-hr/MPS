{
  final TextGenSupport tgs=new TextGenSupport(ctx);
  boolean isWrappedElementBefore=true;
  SNode lastMember=Sequence.fromIterable(Classifier__BehaviorDescriptor.members_id1hodSy8nQmC.invoke(classifier)).last();
  for (  SNode member : SLinkOperations.getChildren(classifier,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x4a9a46de59132803L,"member"))) {
    boolean needsLineBefore=(boolean)ClassifierMember__BehaviorDescriptor.needsEmptyLineBefore_idzB21h1tQit.invoke(member);
    boolean needsLineAfter=(boolean)ClassifierMember__BehaviorDescriptor.needsEmptyLineAfter_idzB21h1tQNm.invoke(member);
    BaseLanguageTextGen.newLine(needsLineBefore && !(isWrappedElementBefore),ctx);
    tgs.appendNode(member);
    BaseLanguageTextGen.newLine(needsLineAfter && !((lastMember == member)),ctx);
    isWrappedElementBefore=needsLineAfter;
  }
}
