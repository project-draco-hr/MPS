{
  try {
    ModelAccess.instance().runWriteAction(new Runnable(){
      public void run(){
        SModelRepository.getInstance().saveAll();
      }
    }
);
    new Thread(){
      public void run(){
        final List<ChangeMethodSignatureRefactoring> myRefactorings=ChangeMethodSignature_Action.this.init(event.getData(MPSDataKeys.OPERATION_CONTEXT),_params);
        if (ListSequence.fromList(myRefactorings).isEmpty()) {
          return;
        }
        final Wrappers._T<RefactoringContext> c=new Wrappers._T<RefactoringContext>();
        ModelAccess.instance().runReadAction(new Runnable(){
          public void run(){
            c.value=RefactoringContext.createRefactoringContext(RefactoringUtil.getRefactoringByClassName("jetbrains.mps.baseLanguage.refactorings" + "." + "ChangeMethodSignature"),Arrays.asList("myRefactorings"),Arrays.asList(myRefactorings),((SNode)MapSequence.fromMap(_params).get("method")),ProjectHelper.toMPSProject(((Project)MapSequence.fromMap(_params).get("project"))));
          }
        }
);
        if (c.value != null) {
          new RefactoringFacade().execute(c.value);
        }
      }
    }
.start();
  }
 catch (  Throwable t) {
    LOG.error("User's action execute method failed. Action:" + "ChangeMethodSignature",t);
  }
}
