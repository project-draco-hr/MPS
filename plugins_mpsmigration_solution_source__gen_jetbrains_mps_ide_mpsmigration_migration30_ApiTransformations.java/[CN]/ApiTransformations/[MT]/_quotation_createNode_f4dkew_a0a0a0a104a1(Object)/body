{
  PersistenceFacade facade=PersistenceFacade.getInstance();
  SNode quotedNode_2=null;
  SNode quotedNode_3=null;
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  quotedNode_2=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_3=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation",null,null,GlobalScope.getInstance(),false);
  quotedNode_3.setReference("baseMethodDeclaration",SReference.create("baseMethodDeclaration",quotedNode_3,facade.createModelReference("f:java_stub#8865b7a8-5271-43d3-884c-6fd1d9cfdd34#org.jetbrains.mps.openapi.model.util(MPS.OpenAPI/org.jetbrains.mps.openapi.model.util@java_stub)"),facade.createNodeId("~NodesIterable.iterator():java.util.Iterator")));
  quotedNode_2.addChild("operation",quotedNode_3);
  quotedNode_4=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.GenericNewExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_5=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator",null,null,GlobalScope.getInstance(),false);
  quotedNode_5.setReference("baseMethodDeclaration",SReference.create("baseMethodDeclaration",quotedNode_5,facade.createModelReference("f:java_stub#8865b7a8-5271-43d3-884c-6fd1d9cfdd34#org.jetbrains.mps.openapi.model.util(MPS.OpenAPI/org.jetbrains.mps.openapi.model.util@java_stub)"),facade.createNodeId("~NodesIterable.<init>(org.jetbrains.mps.openapi.model.SModel)")));
  quotedNode_6=(SNode)parameter_1;
  if (quotedNode_6 != null) {
    quotedNode_5.addChild("actualArgument",HUtil.copyIfNecessary(quotedNode_6));
  }
  quotedNode_4.addChild("creator",quotedNode_5);
  quotedNode_2.addChild("operand",quotedNode_4);
  return quotedNode_2;
}
