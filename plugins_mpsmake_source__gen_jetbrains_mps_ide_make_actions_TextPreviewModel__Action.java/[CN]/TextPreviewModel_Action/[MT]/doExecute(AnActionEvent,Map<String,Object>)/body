{
  try {
    final SModelDescriptor md=TextPreviewModel_Action.this.modelToGenerate(_params);
    ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
      public void run(){
        IScript scr=new ScriptBuilder().withFacetNames(new IFacet.Name("jetbrains.mps.lang.core.Generate"),new IFacet.Name("jetbrains.mps.lang.core.TextGen"),new IFacet.Name("jetbrains.mps.lang.core.Make")).withFinalTarget(new ITarget.Name("textGenToMemory")).toScript();
        IScriptController ctl=new IScriptController.Stub(new IConfigMonitor.Stub(){
          public <T extends IOption>T relayQuery(          IQuery<T> query){
            return query.defaultOption();
          }
        }
,new IJobMonitor.Stub());
        MakeSession session=new MakeSession(((IOperationContext)MapSequence.fromMap(_params).get("context")),null,true);
        if (IMakeService.INSTANCE.get().openNewSession(session)) {
          Future<IResult> future=IMakeService.INSTANCE.get().make(session,new ModelsToResources(((IOperationContext)MapSequence.fromMap(_params).get("context")),Sequence.<SModelDescriptor>singleton(md)).resources(false),scr,ctl);
          try {
            IResult result=future.get();
            if (result.isSucessful()) {
              FResource fres=(FResource)Sequence.fromIterable(result.output()).first();
              final TextPreviewFile tfile=new TextPreviewFile(md.getSModelReference().getSModelFqName().getCompactPresentation(),"Generated text for " + md.getSModelReference().getSModelFqName().getLongName(),fres.contents());
              SwingUtilities.invokeLater(new Runnable(){
                public void run(){
                  FileEditorManager.getInstance(((IOperationContext)MapSequence.fromMap(_params).get("context")).getProject()).openTextEditor(new OpenFileDescriptor(((IOperationContext)MapSequence.fromMap(_params).get("context")).getProject(),tfile),true);
                }
              }
);
            }
          }
 catch (          InterruptedException ignore) {
          }
catch (          ExecutionException ignore) {
          }
        }
      }
    }
);
  }
 catch (  Throwable t) {
    if (log.isErrorEnabled()) {
      log.error("User's action execute method failed. Action:" + "TextPreviewModel",t);
    }
  }
}
