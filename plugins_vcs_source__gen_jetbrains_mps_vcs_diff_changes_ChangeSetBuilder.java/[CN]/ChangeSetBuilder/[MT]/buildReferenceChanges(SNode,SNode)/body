{
  final Map<String,SReference> oldReferences=MapSequence.fromMap(new HashMap<String,SReference>());
  final Map<String,SReference> newReferences=MapSequence.fromMap(new HashMap<String,SReference>());
  Sequence.fromIterable(SNodeOperations.getReferences(oldNode)).visitAll(new IVisitor<SReference>(){
    public void visit(    SReference ref){
      MapSequence.fromMap(oldReferences).put(SLinkOperations.getRole(ref),ref);
    }
  }
);
  Sequence.fromIterable(SNodeOperations.getReferences(newNode)).visitAll(new IVisitor<SReference>(){
    public void visit(    SReference ref){
      MapSequence.fromMap(newReferences).put(SLinkOperations.getRole(ref),ref);
    }
  }
);
  for (  String role : SetSequence.fromSet(MapSequence.fromMap(oldReferences).keySet()).union(SetSequence.fromSet(MapSequence.fromMap(newReferences).keySet()))) {
    SReference oldReference=MapSequence.fromMap(oldReferences).get(role);
    SReference newReference=MapSequence.fromMap(newReferences).get(role);
    if (eq_nbyrtw_a0a0c0e0b(check_nbyrtw_a0a0c0e0b(oldReference),check_nbyrtw_a0a0c0e0b_0(newReference)) && eq_nbyrtw_a0a0c0e0b_0(check_nbyrtw_a0a0c0e0b_1(oldReference),check_nbyrtw_a0a0c0e0b_2(newReference)) && eq_nbyrtw_a0a2a4a1(check_nbyrtw_a0a2a4a1(oldReference),check_nbyrtw_a0a2a4a1_0(newReference))) {
    }
 else {
      SModelReference targetModel=newReference.getTargetSModelReference();
      if (eq_nbyrtw_a0b0a2a4a1(SNodeOperations.getModel(newNode).getSModelReference(),targetModel)) {
        targetModel=null;
      }
      myChangeSet.add(new SetReferenceChange(myChangeSet,oldNode.getSNodeId(),role,targetModel,newReference.getTargetNodeId(),newReference.getResolveInfo()));
    }
  }
}
