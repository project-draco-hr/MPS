{
  final Map<String,SReference> oldReferences=MapSequence.<String,SReference>fromMap(new HashMap<String,SReference>());
  final Map<String,SReference> newReferences=MapSequence.<String,SReference>fromMap(new HashMap<String,SReference>());
  Sequence.<SReference>fromIterable(SNodeOperations.getReferences(oldNode)).visitAll(new IVisitor<SReference>(){
    public void visit(    SReference ref){
      MapSequence.<String,SReference>fromMap(oldReferences).put(SLinkOperations.getRole(ref),ref);
    }
  }
);
  Sequence.<SReference>fromIterable(SNodeOperations.getReferences(newNode)).visitAll(new IVisitor<SReference>(){
    public void visit(    SReference ref){
      MapSequence.<String,SReference>fromMap(newReferences).put(SLinkOperations.getRole(ref),ref);
    }
  }
);
  for (  String role : SetSequence.<String>fromSet(MapSequence.fromMap(oldReferences).keySet()).union(SetSequence.<String>fromSet(MapSequence.fromMap(newReferences).keySet()))) {
    SReference oldReference=MapSequence.<String,SReference>fromMap(oldReferences).get(role);
    SReference newReference=MapSequence.<String,SReference>fromMap(newReferences).get(role);
    SNodeId oldTargetId=(oldReference instanceof DynamicReference ? null : check_nbyrtw_a0a2a4a1(oldReference));
    SNodeId newTargetId=(newReference instanceof DynamicReference ? null : check_nbyrtw_a0a3a4a1(newReference));
    if (eq_nbyrtw_a0a0e0e0b(oldTargetId,newTargetId) && eq_nbyrtw_a0a0e0e0b_0(check_nbyrtw_a0a0e0e0b(oldReference),check_nbyrtw_a0a0e0e0b_0(newReference)) && eq_nbyrtw_a0a4a4a1(check_nbyrtw_a0a4a4a1(oldReference),check_nbyrtw_a0a4a4a1_0(newReference))) {
    }
 else {
      SModelReference targetModel=check_nbyrtw_a0a0a4a4a1(newReference);
      if (eq_nbyrtw_a0b0a4a4a1(SNodeOperations.getModel(newNode).getSModelReference(),targetModel)) {
        targetModel=null;
      }
      myChangeSet.add(new SetReferenceChange(myChangeSet,oldNode.getSNodeId(),role,targetModel,newTargetId,check_nbyrtw_f0a0a2a0e0e0b(newReference)));
    }
  }
}
