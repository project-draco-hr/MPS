{
  buildModelImports();
  buildModuleDependencies(ModuleDependencyChange.DependencyType.USED_LANG,new _FunctionTypes._return_P1_E0<List<ModuleReference>,SModel>(){
    public List<ModuleReference> invoke(    SModel model){
      return model.importedLanguages();
    }
  }
);
  buildModuleDependencies(ModuleDependencyChange.DependencyType.USED_DEVKIT,new _FunctionTypes._return_P1_E0<List<ModuleReference>,SModel>(){
    public List<ModuleReference> invoke(    SModel model){
      return model.importedDevkits();
    }
  }
);
  buildModuleDependencies(ModuleDependencyChange.DependencyType.LANG_ENGAGED_ON_GENERATION,new _FunctionTypes._return_P1_E0<List<ModuleReference>,SModel>(){
    public List<ModuleReference> invoke(    SModel model){
      return model.engagedOnGenerationLanguages();
    }
  }
);
  if (myNewModel.getSModelHeader().isDoNotGenerate() != myOldModel.getSModelHeader().isDoNotGenerate()) {
    myChangeSet.add(new DoNotGenerateOptionChange(myChangeSet));
  }
}
