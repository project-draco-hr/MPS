{
  super.createComponent();
  GridBagLayout layout=new GridBagLayout();
  final JPanel pagePanel=new JPanel(layout);
  myComponent.add(pagePanel,BorderLayout.CENTER);
  final Insets insets=new Insets(0,0,0,0);
  JPanel infoHolder=new JPanel(new BorderLayout());
  infoHolder.setBorder(BorderFactory.createEmptyBorder(2,2,2,2));
  JTextPane info=new JTextPane();
  info.setContentType("text/html");
  info.setText("Welcome to Migration Assistant!<br><br>MPS has detected that your project requires migration before it can be used with this version of the product.<br><br>This wizard will guide you through the migration process. It's going to take a while.<br><br>Select Next to proceed with migration or Cancel if you wish to postpone it.");
  info.setEditable(false);
  info.setFocusable(false);
  info.setBorder(BorderFactory.createLoweredBevelBorder());
  info.setPreferredSize(new Dimension(300,220));
  infoHolder.add(info,BorderLayout.CENTER);
  pagePanel.add(infoHolder,new GridBagConstraints(0,0,1,1,1.0,1.0,GridBagConstraints.FIRST_LINE_START,GridBagConstraints.BOTH,insets,0,0));
  final Wrappers._int y=new Wrappers._int(1);
  List<ProjectMigration> pMig=ProjectMigrationsRegistry.getInstance().getMigrations();
  ListSequence.fromList(pMig).where(new IWhereFilter<ProjectMigration>(){
    public boolean accept(    ProjectMigration it){
      return it.shouldBeExecuted(ProjectHelper.toMPSProject(myProject));
    }
  }
).translate(new ITranslator2<ProjectMigration,String>(){
    public Iterable<String> translate(    ProjectMigration it){
      return it.getOptionIds();
    }
  }
).visitAll(new IVisitor<String>(){
    public void visit(    String it){
      JComponent c=ProjectOptionsRegistry.getInstance().createComponentForOption(it);
      myComponents.put(it,c);
      pagePanel.add(c,new GridBagConstraints(0,y.value++,1,1,0,1,GridBagConstraints.FIRST_LINE_START,GridBagConstraints.HORIZONTAL,insets,5,0));
    }
  }
);
}
