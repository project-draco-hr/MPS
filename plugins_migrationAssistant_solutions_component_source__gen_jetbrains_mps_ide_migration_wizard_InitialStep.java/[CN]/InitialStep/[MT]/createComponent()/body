{
  super.createComponent();
  JPanel pagePanel=new JPanel(new GridLayoutManager(2,1,new JBInsets(5,5,5,0),-1,-1));
  myComponent.add(pagePanel,BorderLayout.CENTER);
  JPanel infoHolder=new JPanel(new BorderLayout());
  infoHolder.setBorder(IdeBorderFactory.createTitledBorder("Description",true));
  JTextPane info=new JTextPane();
  Messages.installHyperlinkSupport(info);
  info.setText("Welcome to Migration Assistant!<br>" + "MPS has detected that your project requires migration before it can be used with this version of the product.<br>" + "This wizard will guide you through the migration process. It's going to take a while.<br>"+ "Select Next to proceed with migration or Cancel if you wish to postpone it.");
  info.setPreferredSize(new Dimension(300,220));
  infoHolder.add(info,BorderLayout.CENTER);
  pagePanel.add(infoHolder,new GridConstraints(0,0,1,1,GridConstraints.ANCHOR_NORTHWEST,GridConstraints.FILL_BOTH,GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,null,null,null));
  final JPanel settingsPanel=new JPanel();
  settingsPanel.setLayout(new BoxLayout(settingsPanel,BoxLayout.Y_AXIS));
  settingsPanel.setBorder(IdeBorderFactory.createTitledBorder("Settings",true));
  pagePanel.add(settingsPanel,new GridConstraints(1,0,1,1,GridConstraints.ANCHOR_NORTHWEST,GridConstraints.FILL_BOTH,GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW,GridConstraints.SIZEPOLICY_FIXED,null,null,null));
  List<ProjectMigration> pMig=ProjectMigrationsRegistry.getInstance().getMigrations();
  ListSequence.fromList(pMig).ofType(ProjectMigrationWithOptions.class).where(new IWhereFilter<ProjectMigrationWithOptions>(){
    public boolean accept(    ProjectMigrationWithOptions it){
      return it.shouldBeExecuted(ProjectHelper.toMPSProject(myProject));
    }
  }
).translate(new ITranslator2<ProjectMigrationWithOptions,String>(){
    public Iterable<String> translate(    ProjectMigrationWithOptions it){
      return it.getOptionIds();
    }
  }
).visitAll(new IVisitor<String>(){
    public void visit(    String it){
      JComponent c=ProjectOptionsRegistry.getInstance().createComponentForOption(it);
      myComponents.put(it,c);
      settingsPanel.add(c);
    }
  }
);
}
