{
  SNode result=null;
  Set<SNode> _parameterValues_129834374=new HashSet<SNode>();
  SNode quotedNode_1=null;
  SNode quotedNode_2=null;
  SNode quotedNode_3=null;
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  SNode quotedNode_7=null;
  SNode quotedNode_8=null;
  SNode quotedNode_9=null;
  SNode quotedNode_10=null;
  SNode quotedNode_11=null;
  SNode quotedNode_12=null;
{
    quotedNode_1=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression",null,GlobalScope.getInstance(),false);
    SNode quotedNode1_13=quotedNode_1;
{
      quotedNode_2=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BitwiseOrExpression",null,GlobalScope.getInstance(),false);
      SNode quotedNode1_14=quotedNode_2;
{
        quotedNode_3=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerConstant",null,GlobalScope.getInstance(),false);
        SNode quotedNode1_15=quotedNode_3;
        quotedNode1_15.setProperty("value","6");
        quotedNode_2.addChild("rightExpression",quotedNode1_15);
      }
{
        quotedNode_4=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BitwiseOrExpression",null,GlobalScope.getInstance(),false);
        SNode quotedNode1_16=quotedNode_4;
{
          quotedNode_5=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BitwiseAndExpression",null,GlobalScope.getInstance(),false);
          SNode quotedNode1_17=quotedNode_5;
{
            quotedNode_7=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerConstant",null,GlobalScope.getInstance(),false);
            SNode quotedNode1_18=quotedNode_7;
            quotedNode1_18.setProperty("value","1");
            quotedNode_5.addChild("leftExpression",quotedNode1_18);
          }
{
            quotedNode_8=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerConstant",null,GlobalScope.getInstance(),false);
            SNode quotedNode1_19=quotedNode_8;
            quotedNode1_19.setProperty("value","2");
            quotedNode_5.addChild("rightExpression",quotedNode1_19);
          }
          quotedNode_4.addChild("leftExpression",quotedNode1_17);
        }
{
          quotedNode_6=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.BitwiseXorExpression",null,GlobalScope.getInstance(),false);
          SNode quotedNode1_20=quotedNode_6;
{
            quotedNode_9=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ShiftLeftExpression",null,GlobalScope.getInstance(),false);
            SNode quotedNode1_21=quotedNode_9;
{
              quotedNode_11=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerConstant",null,GlobalScope.getInstance(),false);
              SNode quotedNode1_22=quotedNode_11;
              quotedNode1_22.setProperty("value","3");
              quotedNode_9.addChild("leftExpression",quotedNode1_22);
            }
{
              quotedNode_12=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerConstant",null,GlobalScope.getInstance(),false);
              SNode quotedNode1_23=quotedNode_12;
              quotedNode1_23.setProperty("value","4");
              quotedNode_9.addChild("rightExpression",quotedNode1_23);
            }
            quotedNode_6.addChild("leftExpression",quotedNode1_21);
          }
{
            quotedNode_10=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerConstant",null,GlobalScope.getInstance(),false);
            SNode quotedNode1_24=quotedNode_10;
            quotedNode1_24.setProperty("value","5");
            quotedNode_6.addChild("rightExpression",quotedNode1_24);
          }
          quotedNode_4.addChild("rightExpression",quotedNode1_20);
        }
        quotedNode_2.addChild("leftExpression",quotedNode1_16);
      }
      quotedNode_1.addChild("expression",quotedNode1_14);
    }
    result=quotedNode1_13;
  }
  return result;
}
