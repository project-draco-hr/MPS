{
  int left=this.eval(SLinkOperations.getTarget(SNodeOperations.cast(e,"jetbrains.mps.baseLanguage.structure.BinaryOperation"),"leftExpression",true));
  int right=this.eval(SLinkOperations.getTarget(SNodeOperations.cast(e,"jetbrains.mps.baseLanguage.structure.BinaryOperation"),"rightExpression",true));
  if (SNodeOperations.isInstanceOf(e,"jetbrains.mps.baseLanguage.structure.ShiftLeftExpression")) {
    return left << right;
  }
  if (SNodeOperations.isInstanceOf(e,"jetbrains.mps.baseLanguage.structure.BitwiseAndExpression")) {
    return left & right;
  }
  if (SNodeOperations.isInstanceOf(e,"jetbrains.mps.baseLanguage.structure.BitwiseOrExpression")) {
    return left | right;
  }
  if (SNodeOperations.isInstanceOf(e,"jetbrains.mps.baseLanguage.structure.BitwiseXorExpression")) {
    return left ^ right;
  }
  throw new UnsupportedOperationException(e.getPresentation());
}
