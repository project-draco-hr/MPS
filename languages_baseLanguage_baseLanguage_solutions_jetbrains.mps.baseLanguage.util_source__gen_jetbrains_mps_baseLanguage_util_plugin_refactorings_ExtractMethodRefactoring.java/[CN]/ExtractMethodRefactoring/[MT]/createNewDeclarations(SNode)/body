{
  Map<SNode,List<SNode>> mapping=MapSequence.fromMap(new HashMap<SNode,List<SNode>>());
  for (  SNode reference : ListSequence.fromList(SNodeOperations.getDescendants(method,"jetbrains.mps.baseLanguage.structure.VariableReference",false,new String[]{}))) {
    SNode declaration=SLinkOperations.getTarget(reference,"variableDeclaration",false);
    if (!(SNodeOperations.isInstanceOf(declaration,"jetbrains.mps.baseLanguage.structure.ParameterDeclaration") || SNodeOperations.isInstanceOf(declaration,"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration"))) {
      continue;
    }
    if (!(ListSequence.fromList(SNodeOperations.getAncestors(declaration,null,false)).contains(method))) {
      if (!(SetSequence.fromSet(MapSequence.fromMap(mapping).keySet()).contains(declaration))) {
        MapSequence.fromMap(mapping).put(declaration,new ArrayList<SNode>());
      }
      ListSequence.fromList(MapSequence.fromMap(mapping).get(declaration)).addElement(reference);
    }
  }
  for (  SNode declaration : SetSequence.fromSet(MapSequence.fromMap(mapping).keySet())) {
    SNode newDeclaration=_quotation_createNode_jq3ovj_a0a0c0g(SNodeOperations.copyNode(SLinkOperations.getTarget(declaration,"type",true)),SPropertyOperations.getString(declaration,"name"));
    SNodeOperations.insertPrevSiblingChild(ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method,"body",true),"statement",true)).first(),_quotation_createNode_jq3ovj_a0a1a2a6(newDeclaration));
    for (    SNode reference : ListSequence.fromList(MapSequence.fromMap(mapping).get(declaration))) {
      SNodeOperations.replaceWithAnother(reference,BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),newDeclaration,"virtual_createReference_1213877517482",new Object[]{}));
    }
  }
}
