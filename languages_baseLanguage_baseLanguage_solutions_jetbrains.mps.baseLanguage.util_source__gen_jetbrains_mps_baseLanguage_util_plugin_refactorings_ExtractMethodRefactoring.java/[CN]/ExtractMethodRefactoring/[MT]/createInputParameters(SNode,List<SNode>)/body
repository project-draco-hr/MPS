{
  Map<SNode,SNode> result=MapSequence.fromMap(new HashMap<SNode,SNode>());
  for (  MethodParameter methodParameter : ListSequence.fromList(this.myParameters.getParameters())) {
    if (methodParameter.isSelected()) {
      SNode parameter=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c77f1e94L,"jetbrains.mps.baseLanguage.structure.ParameterDeclaration"));
      SLinkOperations.setTarget(parameter,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x450368d90ce15bc3L,0x4ed4d318133c80ceL,"type"),SNodeOperations.copyNode(methodParameter.getType()));
      SPropertyOperations.set(parameter,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),methodParameter.getName());
      if (methodParameter.isFinal()) {
        SPropertyOperations.set(parameter,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37a7f6eL,0x111f9e9f00cL,"isFinal"),"" + (true));
      }
      ListSequence.fromList(parameters).addElement(parameter);
      MapSequence.fromMap(result).put(methodParameter.getDeclaration(),parameter);
    }
  }
  return result;
}
