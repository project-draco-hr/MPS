{
  Map<SNode,SNode> mapping=MapSequence.fromMap(new HashMap<SNode,SNode>());
  for (  SNode node : ListSequence.fromList(nodes)) {
    for (    SNode reference : ListSequence.fromList(SNodeOperations.getNodeDescendants(node,MetaAdapterFactory.getConcept(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x10802efe25aL,"jetbrains.mps.lang.core.structure.BaseConcept"),false,new SAbstractConcept[]{}))) {
      if (MoveRefactoringUtils.isReference(reference)) {
        SNode target=Sequence.fromIterable(SNodeOperations.getReferences(reference)).first().getTargetNode();
        if (MapSequence.fromMap(variableDeclarationToParameter).containsKey(target)) {
          MapSequence.fromMap(mapping).put(reference,MapSequence.fromMap(variableDeclarationToParameter).get(target));
        }
      }
    }
    for (    SNode parameter : ListSequence.fromList(SNodeOperations.getNodeDescendants(node,MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11d486a1d9eL,"jetbrains.mps.baseLanguage.structure.IParameter"),false,new SAbstractConcept[]{}))) {
      SNode declaration=BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),parameter,"virtual_getDeclaration_1225282371351",new Object[]{});
      if (MapSequence.fromMap(variableDeclarationToParameter).containsKey(declaration)) {
        MapSequence.fromMap(mapping).put(parameter,MapSequence.fromMap(variableDeclarationToParameter).get(declaration));
      }
    }
  }
  return mapping;
}
