{
  Map<SNode,SNode> mapping=MapSequence.fromMap(new HashMap<SNode,SNode>());
  for (  SNode node : ListSequence.fromList(nodes)) {
    for (    SNode reference : ListSequence.fromList(SNodeOperations.getDescendants(node,"jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{}))) {
      if (MoveRefactoringUtils.isReference(reference)) {
        SNode target=ListSequence.fromList(SNodeOperations.getReferences(reference)).first().getTargetNode();
        if (MapSequence.fromMap(variableDeclarationToParameter).containsKey(target)) {
          MapSequence.fromMap(mapping).put(reference,MapSequence.fromMap(variableDeclarationToParameter).get(target));
        }
      }
    }
    for (    SNode parameter : ListSequence.fromList(SNodeOperations.getDescendants(node,"jetbrains.mps.baseLanguage.structure.IParameter",false,new String[]{}))) {
      SNode declaration=((SNode)BehaviorManager.getInstance().invoke(Object.class,SNodeOperations.cast(parameter,"jetbrains.mps.baseLanguage.structure.IParameter"),"virtual_getDeclaration_1225282371351",new Class[]{SNode.class}));
      if (MapSequence.fromMap(variableDeclarationToParameter).containsKey(declaration)) {
        MapSequence.fromMap(mapping).put(parameter,MapSequence.fromMap(variableDeclarationToParameter).get(declaration));
      }
    }
  }
  return mapping;
}
