{
  List<SNode> throwables=new ArrayList<SNode>();
  for (  SNode statement : ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(method,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1ffL,"body")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b200L,0xf8cc6bf961L,"statement")))) {
    ListSequence.fromList(throwables).addSequence(SetSequence.fromSet(((Set<SNode>)BHReflection.invoke(statement,SMethodTrimmedId.create("uncaughtThrowables",MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b215L,"jetbrains.mps.baseLanguage.structure.Statement"),"4Gt7ANIVAVT"),((boolean)false)))));
  }
  ListSequence.fromList(SLinkOperations.getChildren(method,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0x10f383d6949L,"throwsItem"))).addSequence(ListSequence.fromList(throwables).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return _quotation_createNode_jq3ovj_a0a0a0a0c0k(it);
    }
  }
));
}
