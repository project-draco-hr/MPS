{
  List<SNode> throwables=new ArrayList<SNode>();
  for (  SNode statement : ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(method,"body",true),"statement",true))) {
    ListSequence.fromList(throwables).addSequence(SetSequence.fromSet(BehaviorReflection.invokeNonVirtual((Class<Set<SNode>>)((Class)Object.class),statement,"jetbrains.mps.baseLanguage.structure.Statement","call_uncaughtThrowables_5412515780383108857",new Object[]{false})));
  }
  ListSequence.fromList(SLinkOperations.getTargets(method,"throwsItem",true)).addSequence(ListSequence.fromList(throwables).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return new ExtractMethodRefactoring.QuotationClass_jq3ovj_a0a0a0a0a0a0c0f().createNode(it);
    }
  }
));
}
