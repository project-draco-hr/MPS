{
  SearchResults<SNode> results=new SearchResults<SNode>();
  IScope queryScope=query.getScope();
  List<BaseMigrationScript> scriptInstances=MigrationScriptUtil.getScriptInstances(myScripts,myContext);
  indicator.setText("Searching applicable nodes");
  int count=0;
  for (  BaseMigrationScript scriptInstance : scriptInstances) {
    if (indicator.isCanceled())     break;
    List<IRefactoring> refactorings=scriptInstance.getRefactorings();
    for (    IRefactoring refactoring : refactorings) {
      if (indicator.isCanceled())       break;
      AbstractMigrationRefactoring migrationRefactoring=(AbstractMigrationRefactoring)refactoring;
      String category=TreeTextUtil.toHtml(scriptInstance.getName() + "  " + migrationRefactoring.getAdditionalInfo());
      indicator.setText2(category);
      Set<SNode> instances=FindUsagesManager.getInstance().findInstances(MigrationScriptUtil.getApplicableConcept(migrationRefactoring),queryScope,null,false);
      for (      SNode instance : instances) {
        if (MigrationScriptUtil.isApplicableRefactoring(instance,migrationRefactoring)) {
          SearchResult<SNode> result=new SearchResult<SNode>(instance,category);
          myMigrationBySearchResult.put(result,migrationRefactoring);
          results.getSearchResults().add(result);
        }
      }
    }
  }
  indicator.setText("Searching applicable nodes " + (indicator.isCanceled() ? "canceled" : "finished"));
  indicator.setText2("");
  return results;
}
