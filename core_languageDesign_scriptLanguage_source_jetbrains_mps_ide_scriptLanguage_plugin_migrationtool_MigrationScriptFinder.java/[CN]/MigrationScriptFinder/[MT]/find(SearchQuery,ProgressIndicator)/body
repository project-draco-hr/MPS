{
  SearchResults<SNode> results=new SearchResults<SNode>();
  IScope queryScope=query.getScope();
  List<AbstractMigrationRefactoring> migrationRefactorings=new ArrayList<AbstractMigrationRefactoring>();
  List<BaseMigrationScript> scriptInstances=MigrationScriptUtil.getScriptInstances(myMigrationScriptPointers,myContext);
  for (  BaseMigrationScript scriptInstance : scriptInstances) {
    List<IRefactoring> refactorings=scriptInstance.getRefactorings();
    for (    IRefactoring refactoring : refactorings) {
      migrationRefactorings.add((AbstractMigrationRefactoring)refactoring);
    }
  }
  indicator.setText("searching models");
  int count=1;
  for (  AbstractMigrationRefactoring migrationRefactoring : migrationRefactorings) {
    if (indicator.isCanceled()) {
      break;
    }
    int donePers=Math.min(100,(int)(((float)(count++) / migrationRefactorings.size()) * 100));
    if (donePers > 0)     indicator.setText("searching models " + donePers + "%");
    indicator.setText2(migrationRefactoring.getName());
    Set<SNode> instances=FindUsagesManager.getInstance().findInstances(MigrationScriptUtil.getApplicableConcept(migrationRefactoring),queryScope,null,false);
    for (    SNode instance : instances) {
      if (isApplicableInstanceNode(instance,migrationRefactoring)) {
        results.getSearchResults().add(new SearchResult<SNode>(instance,migrationRefactoring.getAdditionalInfo()));
      }
    }
  }
  indicator.setText("searching models " + (indicator.isCanceled() ? "canceled" : "finished"));
  indicator.setText2("");
  return results;
}
