{
  return ModelAccess.instance().runReadAction(new Computable<Icon>(){
    public Icon compute(){
      Icon result=null;
      if (node.isUnknown()) {
        return Icons.UNKNOWN_ICON;
      }
      if (node.getConceptDeclarationAdapter() instanceof ConceptDeclaration) {
        ConceptDeclaration concept=(ConceptDeclaration)node.getConceptDeclarationAdapter();
        Method alternativeIconMethod=ModelConstraintsManager.getInstance().getAlternativeIconMethod(concept);
        Icon icon=null;
        try {
          if (alternativeIconMethod != null) {
            Object iconObject=alternativeIconMethod.invoke(null,node);
            if (iconObject != null) {
              String alternativeIconPath=(String)iconObject;
              icon=getIconFor(concept,alternativeIconPath);
            }
          }
        }
 catch (        Throwable t) {
        }
        if (icon != null) {
          result=icon;
        }
 else {
          result=IconManager.getIconFor(concept);
        }
      }
      if (result == null) {
        if (node.isRoot()) {
          return Icons.DEFAULT_ROOT_ICON;
        }
 else {
          return Icons.DEFAULT_NODE_ICON;
        }
      }
      return result;
    }
  }
);
}
