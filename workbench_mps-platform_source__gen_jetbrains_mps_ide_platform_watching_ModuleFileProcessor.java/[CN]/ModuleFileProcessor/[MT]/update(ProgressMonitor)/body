{
  monitor.start("Reloading updated modules... Please wait.",SetSequence.fromSet(myChangedModules).count() + SetSequence.fromSet(myDeletedModules).count() + MapSequence.fromMap(myNewLibModules).count()+ MapSequence.fromMap(myNewProjectModules).count()+ 1);
  try {
    for (    final SModule module : myChangedModules) {
      monitor.step("Reloading " + module.getModuleName());
      ((IModule)module).reloadFromDisk(false);
      SetSequence.fromSet(myProcessedModules).addElement(module);
      monitor.advance(1);
    }
    for (    final SModule module : myDeletedModules) {
      monitor.step("Unloading removed module " + module.getModuleName());
      ModuleRepositoryFacade.getInstance().removeModuleForced((IModule)module);
      monitor.advance(1);
      SetSequence.fromSet(myProcessedModules).addElement(module);
    }
    monitor.step("Updating lib modules");
    for (    String lib : SetSequence.fromSet(MapSequence.fromMap(myNewLibModules).keySet())) {
      List<SModule> newModules=LibraryInitializer.getInstance().registerNewModules(lib,MapSequence.fromMap(myNewLibModules).get(lib));
      SetSequence.fromSet(myProcessedModules).addSequence(ListSequence.fromList(newModules));
      monitor.advance(1);
    }
    monitor.step("Loading new modules");
    for (    Project project : SetSequence.fromSet(MapSequence.fromMap(myNewProjectModules).keySet())) {
      addNewModules(project,MapSequence.fromMap(myNewProjectModules).get(project));
      monitor.advance(1);
    }
  }
  finally {
    monitor.done();
  }
}
