{
  if (type == null)   return null;
  INodeAdapter typeAdapter=null;
  if (type instanceof NodeWrapper) {
    typeAdapter=BaseAdapter.fromNode(((NodeWrapper)type).getNode());
  }
  if (type instanceof INodeAdapter) {
    typeAdapter=(INodeAdapter)type;
  }
  if (type instanceof SNode) {
    typeAdapter=((SNode)type).getAdapter();
  }
  if (typeAdapter instanceof RuntimeTypeVariable && !(typeAdapter instanceof RuntimeErrorType)) {
    return ((RuntimeTypeVariable)typeAdapter).getName();
  }
  if (type instanceof String) {
    return (String)type;
  }
  if (type instanceof MeetWrapper) {
    StringBuilder sb=new StringBuilder("MEET( ");
    List<IWrapper> wrappers=((MeetWrapper)type).getArguments();
    int size=wrappers.size();
    for (int i=0; i < size; i++) {
      IWrapper wrapper=wrappers.get(i);
      sb.append(toString(wrapper));
      if (i < size - 1) {
        sb.append(" & ");
      }
    }
    sb.append(" )");
    return sb.toString();
  }
  if (type instanceof JoinWrapper) {
    StringBuilder sb=new StringBuilder("JOIN( ");
    List<IWrapper> wrappers=((JoinWrapper)type).getArguments();
    int size=wrappers.size();
    for (int i=0; i < size; i++) {
      IWrapper wrapper=wrappers.get(i);
      sb.append(toString(wrapper));
      if (i < size - 1) {
        sb.append(" | ");
      }
    }
    sb.append(" )");
    return sb.toString();
  }
  if (typeAdapter == null)   return null;
  return toString_1(typeAdapter.getNode());
}
