{
  List<SNode> result=new ArrayList<SNode>();
  for (  SNode mod : Sequence.fromIterable(((Tuples._3<SNode,Iterable<SNode>,Iterable<SNode>>)_context.getVariable("var:mdeps"))._1()).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SPropertyOperations.getBoolean(it,"doNotCompile") == false && SNodeOperations.getContainingRoot(((Tuples._3<SNode,Iterable<SNode>,Iterable<SNode>>)_context.getVariable("var:mdeps"))._0()) == SNodeOperations.getContainingRoot(_context.getNode());
    }
  }
).sort(new ISelector<SNode,Comparable<?>>(){
    public Comparable<?> select(    SNode it){
      return SPropertyOperations.getString(it,"name");
    }
  }
,true)) {
    SNode loopnode=SModelOperations.createNewNode(_context.getOutputModel(),"jetbrains.mps.lang.core.structure.BaseConcept",null);
    loopnode.setReferent("targetModule",mod,false);
    ListSequence.fromList(result).addElement(loopnode);
  }
  return result;
}
