{
  List<SNode> result=new ArrayList<SNode>();
  for (  SNode lang : Sequence.fromIterable(((MPSModulesClosure)_context.getVariable("var:mdeps")).getLanguagesWithRuntime()).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.getContainingRoot(_context.getNode()) != SNodeOperations.getContainingRoot(it);
    }
  }
).sort(new ISelector<SNode,Comparable<?>>(){
    public Comparable<?> select(    SNode it){
      return SPropertyOperations.getString(it,"name");
    }
  }
,true)) {
    for (    SNode runtime : SLinkOperations.getTargets(lang,"runtime",true)) {
      if (!(SNodeOperations.isInstanceOf(runtime,"jetbrains.mps.build.mps.structure.BuildMps_ModuleJarRuntime"))) {
        continue;
      }
      ListSequence.fromList(result).addElement(SLinkOperations.getTarget(SNodeOperations.cast(runtime,"jetbrains.mps.build.mps.structure.BuildMps_ModuleJarRuntime"),"path",true));
    }
  }
  for (  SNode module : Sequence.fromIterable(((MPSModulesClosure)_context.getVariable("var:mdeps")).getModules()).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.getContainingRoot(_context.getNode()) != SNodeOperations.getContainingRoot(it);
    }
  }
).sort(new ISelector<SNode,Comparable<?>>(){
    public Comparable<?> select(    SNode it){
      return SPropertyOperations.getString(it,"name");
    }
  }
,true)) {
    ListSequence.fromList(result).addSequence(ListSequence.fromList(SLinkOperations.getTargets(module,"dependencies",true)).select(new ISelector<SNode,SNode>(){
      public SNode select(      SNode it){
        return (SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.mps.structure.BuildMps_ExtractedModuleDependency") ? SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.build.mps.structure.BuildMps_ExtractedModuleDependency"),"dependency",true) : it);
      }
    }
).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyJar");
      }
    }
).select(new ISelector<SNode,SNode>(){
      public SNode select(      SNode it){
        return SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyJar"),"path",true);
      }
    }
));
  }
  return ListSequence.fromList(result).distinct().select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      SNode loopnode=SModelOperations.createNewNode(_context.getOutputModel(),"jetbrains.mps.lang.core.structure.BaseConcept",null);
      loopnode.setReferent("targetJarPath",it,false);
      return loopnode;
    }
  }
);
}
