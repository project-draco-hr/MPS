{
  invokeTestWithModelRead(new _FunctionTypes._void_P0_E0(){
    public void invoke(){
      try {
        TestClass.foreachTest();
      }
 catch (      Throwable t) {
        StackTraceElement stackTraceElement=t.getStackTrace()[0];
        List<SNodeReference> variableNodesForPosition=myTraceProvider.debugInfo(getModelName(stackTraceElement)).findFirst().get().getVariableNodesForPosition(stackTraceElement.getFileName(),stackTraceElement.getLineNumber(),"it");
        Assert.assertFalse(variableNodesForPosition.isEmpty());
        SNode node=variableNodesForPosition.get(0).resolve(myProject.getRepository());
        Assert.assertNotNull(node);
        Assert.assertTrue("Node " + node + " for variable it.",SNodeOperations.isInstanceOf(node,MetaAdapterFactory.getConcept(0x8388864671ce4f1cL,0x9c53c54016f6ad4fL,0x10cac6f0962L,"jetbrains.mps.baseLanguage.collections.structure.ForEachVariable")));
      }
    }
  }
);
}
