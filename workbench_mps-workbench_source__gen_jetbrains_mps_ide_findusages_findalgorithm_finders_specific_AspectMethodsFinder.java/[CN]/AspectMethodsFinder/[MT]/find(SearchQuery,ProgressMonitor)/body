{
  final AspectMethodsFinder.AspectMethodQueryData data=(AspectMethodsFinder.AspectMethodQueryData)query.getObjectHolder().getObject();
  final List<SModel> applicableModelDescriptors=new ArrayList<SModel>();
  ModelAccess.instance().runReadAction(new Runnable(){
    @Override public void run(){
      for (      final SModel descriptor : SModelRepository.getInstance().getModelDescriptorsByModelName(data.myModelName)) {
        if (!(SModelStereotype.isStubModelStereotype(SModelStereotype.getStereotype(descriptor)))) {
          applicableModelDescriptors.add(descriptor);
        }
      }
    }
  }
);
  SearchResults<SNode> res=new SearchResults<SNode>();
  for (  SModel model : applicableModelDescriptors) {
    for (    SNode node : SNodeUtil.getDescendants(model)) {
      for (      String value : SNodeOperations.getProperties(node).values()) {
        if (data.myMethodName.endsWith(value)) {
          res.getSearchResults().add(new SearchResult<SNode>(node,"Aspect methods"));
          break;
        }
      }
    }
  }
  return res;
}
