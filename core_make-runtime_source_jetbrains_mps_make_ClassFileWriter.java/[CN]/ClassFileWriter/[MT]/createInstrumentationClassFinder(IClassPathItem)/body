{
  final List<URL> urls=new ArrayList<URL>();
  for (  RealClassPathItem flatten : classPath.flatten()) {
    try {
      urls.add(new File(flatten.getPath()).toURI().toURL());
    }
 catch (    MalformedURLException e) {
      e.printStackTrace();
    }
  }
  final URL[] urlsArr=urls.toArray(new URL[urls.size()]);
  final Map<String,InputStream> myClassFile2Bytes=fillClassFile2BytesMap();
  return new InstrumentationClassFinder(urlsArr){
    @Override protected InputStream lookupClassBeforeClasspath(    String internalClassName){
      return myClassFile2Bytes.get(internalClassName);
    }
  }
;
}
