{
  MPSProject mpsProject=project.getComponent(MPSProject.class);
  if (!mpsProject.isProjectModule(module) && !deleteFiles) {
    JOptionPane.showMessageDialog(WindowManager.getInstance().getFrame(project),"Non-project modules can only be deleted with files deletion enabled","Can't delete module",JOptionPane.WARNING_MESSAGE);
  }
  if (mpsProject.isProjectModule(module)) {
    mpsProject.removeModule(module.getModuleReference());
    ((StandaloneMPSProject)mpsProject).update();
    project.save();
  }
  if (deleteFiles) {
    for (    SModel model : module.getOwnModelDescriptors()) {
      DeleteModelHelper.delete(module,model,true);
    }
    if (module.getFacet(JavaModuleFacet.class) != null) {
      IFile classesGen=module.getFacet(JavaModuleFacet.class).getClassesGen();
      if (classesGen != null) {
        deleteFile(classesGen.getPath());
      }
    }
    if (module instanceof AbstractModule) {
      String outputPath=((AbstractModule)module).getOutputPath().getPath();
      deleteFile(outputPath);
      deleteFile(FileGenerationUtil.getCachesPath(outputPath));
    }
    if (module.getFacet(TestsFacet.class) != null) {
      deleteFile(module.getFacet(TestsFacet.class).getTestsOutputPath().getPath());
    }
    if (module.getBundleHome().getChildren().isEmpty()) {
      deleteFile(module.getBundleHome().getPath());
    }
    module.getDescriptorFile().delete();
    ModuleRepositoryFacade.getInstance().removeModuleForced(module);
  }
}
