{
  for (  SNode newNode : myNewModel.nodes()) {
    SNodeId id=newNode.getSNodeId();
    SNode oldNode=myOldModel.getNodeById(id);
    if (oldNode == null) {
      for (      SReference ref : newNode.getReferences()) {
        myChanges.add(new SetReferenceChange(id,myNewModel,ref,ref.getTargetNode()));
      }
    }
 else {
      Set<String> roles=new HashSet<String>(newNode.getReferenceRoles());
      roles.addAll(oldNode.getReferenceRoles());
      for (      String role : roles) {
        if (!(isMultipleCardinality(newNode.getConceptFqName(),role))) {
          if (oldNode.getReference(role) != null && newNode.getReference(role) == null) {
            myChanges.add(new DeleteReferenceChange(id,myNewModel,oldNode.getReference(role)));
          }
 else {
            if (!(("" + getTargetId(newNode.getReference(role))).equals("" + getTargetId(oldNode.getReference(role))))) {
              myChanges.add(new SetReferenceChange(id,myNewModel,newNode.getReference(role),newNode.getReferent(role)));
            }
          }
        }
 else {
          System.out.println("we have too many references : " + newNode + " "+ newNode.getId());
          System.out.println("role : " + role);
          System.out.println("not supported!");
          isMultipleCardinality(newNode.getConceptFqName(),role);
        }
      }
    }
  }
}
