{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,1068581517664l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,1068581517664l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          SNode container=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.extensionMethods.structure.BaseExtensionMethodContainer",false,false);
          return SLinkOperations.getChildren(container,MetaAdapterFactory.getContainmentLink(new UUID(6757083949642499970l,-9110065865172803712l),8022092943110829337l,1973189701690661983l,"staticFields"));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_xefsui_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
