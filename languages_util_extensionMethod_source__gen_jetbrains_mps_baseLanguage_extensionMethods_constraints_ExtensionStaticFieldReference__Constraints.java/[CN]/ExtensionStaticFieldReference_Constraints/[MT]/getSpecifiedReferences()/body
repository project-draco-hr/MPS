{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c77f1e98L,0xf8cc6bf960L,"variableDeclaration"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c77f1e98L,0xf8cc6bf960L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          SNode container=SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(0x5dc5fc0d37ef4782L,0x81928b5ce1f69f80L,0x6f5433076549f519L,"jetbrains.mps.baseLanguage.extensionMethods.structure.BaseExtensionMethodContainer"),false,false);
          return SLinkOperations.getChildren(container,MetaAdapterFactory.getContainmentLink(0x5dc5fc0d37ef4782L,0x81928b5ce1f69f80L,0x6f5433076549f519L,0x1b622d944bbb1c5fL,"staticFields"));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_xefsui_a0a1a0a0a1a0b0a1a2;
        }
      }
;
    }
  }
);
  return references;
}
