{
  if (SNodeOperations.isInstanceOf(functionTypeOrClassifier,"jetbrains.mps.baseLanguage.structure.TypeVariableReference")) {
    return null;
  }
  if (SNodeOperations.isInstanceOf(functionTypeOrClassifier,"jetbrains.mps.baseLanguage.closures.structure.FunctionType")) {
    return SLinkOperations.getTargets(SNodeOperations.cast(functionTypeOrClassifier,"jetbrains.mps.baseLanguage.closures.structure.FunctionType"),"parameterType",true);
  }
 else   if (SNodeOperations.isInstanceOf(functionTypeOrClassifier,"jetbrains.mps.baseLanguage.structure.ClassifierType")) {
    SNode meth=FunctionTypeUtil.getFunctionMethod(functionTypeOrClassifier);
    List<SNode> res=new ArrayList<SNode>();
    for (    SNode pd : ListSequence.fromList(SLinkOperations.getTargets(meth,"parameter",true))) {
      ListSequence.fromList(res).addElement(ClassifierTypeUtil.resolveType(SLinkOperations.getTarget(pd,"type",true),SNodeOperations.cast(functionTypeOrClassifier,"jetbrains.mps.baseLanguage.structure.ClassifierType")));
    }
    return res;
  }
 else {
    throw new IllegalArgumentException("Invalid argument: " + functionTypeOrClassifier);
  }
}
