{
  if (SNodeOperations.isInstanceOf(functionTypeOrClassifier,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1109283449304l,"jetbrains.mps.baseLanguage.structure.TypeVariableReference"))) {
    return null;
  }
  if (SNodeOperations.isInstanceOf(functionTypeOrClassifier,MetaAdapterFactory.getConcept(new UUID(-200093298712821347l,-8038623698278341771l),1199542442495l,"jetbrains.mps.baseLanguage.closures.structure.FunctionType"))) {
    return SLinkOperations.getChildren(SNodeOperations.cast(functionTypeOrClassifier,MetaAdapterFactory.getConcept(new UUID(-200093298712821347l,-8038623698278341771l),1199542442495l,"jetbrains.mps.baseLanguage.closures.structure.FunctionType")),MetaAdapterFactory.getContainmentLink(new UUID(-200093298712821347l,-8038623698278341771l),1199542442495l,1199542501692l,"parameterType"));
  }
 else   if (SNodeOperations.isInstanceOf(functionTypeOrClassifier,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType"))) {
    SNode meth=FunctionTypeUtil.getFunctionMethod(functionTypeOrClassifier);
    List<SNode> res=new ArrayList<SNode>();
    for (    SNode pd : ListSequence.fromList(SLinkOperations.getChildren(meth,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123134l,"parameter")))) {
      ListSequence.fromList(res).addElement(ClassifierTypeUtil.resolveType(SLinkOperations.getTarget(pd,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type")),SNodeOperations.cast(functionTypeOrClassifier,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType"))));
    }
    return res;
  }
 else {
    throw new IllegalArgumentException("Invalid argument: " + functionTypeOrClassifier);
  }
}
