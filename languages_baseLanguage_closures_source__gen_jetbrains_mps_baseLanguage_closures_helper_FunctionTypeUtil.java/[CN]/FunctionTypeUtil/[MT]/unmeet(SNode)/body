{
  SNode tmp=possiblyMeet;
  with_meet:   while (SNodeOperations.isInstanceOf(tmp,"jetbrains.mps.lang.typesystem.structure.MeetType")) {
    for (    SNode arg : SLinkOperations.getTargets(SNodeOperations.cast(tmp,"jetbrains.mps.lang.typesystem.structure.MeetType"),"argument",true)) {
      if (!(SNodeOperations.isInstanceOf(arg,"jetbrains.mps.baseLanguage.structure.VoidType"))) {
        tmp=arg;
        continue with_meet;
      }
    }
    return _quotation_createNode_2t0coq_a1a1a5();
  }
  if (SNodeOperations.isInstanceOf(tmp,"jetbrains.mps.baseLanguage.structure.ClassifierType")) {
    List<SNode> params=SLinkOperations.getTargets(SNodeOperations.cast(tmp,"jetbrains.mps.baseLanguage.structure.ClassifierType"),"parameter",true);
    for (    SNode p : params) {
      SNode up=unmeet(p);
      if (up != p) {
        SNodeOperations.replaceWithAnother(p,up);
      }
    }
  }
  return tmp;
}
