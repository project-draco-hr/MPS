{
  SNode tmp=possiblyMeet;
  with_meet:   while (SNodeOperations.isInstanceOf(tmp,"jetbrains.mps.lang.typesystem.structure.MeetType")) {
    for (    SNode arg : SLinkOperations.getChildren(SNodeOperations.cast(tmp,"jetbrains.mps.lang.typesystem.structure.MeetType"),MetaAdapterFactory.getContainmentLink(new UUID(8817443762339858024l,-6091446231697526094l),1188473524530l,1188473537547l,"argument"))) {
      if (!(SNodeOperations.isInstanceOf(arg,"jetbrains.mps.baseLanguage.structure.VoidType"))) {
        tmp=arg;
        continue with_meet;
      }
    }
    return _quotation_createNode_2t0coq_a1a1a5();
  }
  if (SNodeOperations.isInstanceOf(tmp,"jetbrains.mps.baseLanguage.structure.ClassifierType")) {
    List<SNode> params=SLinkOperations.getChildren(SNodeOperations.cast(tmp,"jetbrains.mps.baseLanguage.structure.ClassifierType"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1109201940907l,"parameter"));
    for (    SNode p : params) {
      SNode up=unmeet(p);
      if (up != p) {
        SNodeOperations.replaceWithAnother(p,up);
      }
    }
  }
  return tmp;
}
