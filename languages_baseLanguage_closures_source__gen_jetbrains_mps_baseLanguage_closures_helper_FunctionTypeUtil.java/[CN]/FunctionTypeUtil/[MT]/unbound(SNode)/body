{
  SNode res=null;
  List<SNode> q=ListSequence.fromListAndArray(new LinkedList<SNode>(),SNodeOperations.copyNode(maybeBound));
  while (!(ListSequence.fromList(q).isEmpty())) {
    SNode n=ListSequence.fromList(q).removeElementAt(0);
    if (SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.UpperBoundType")) {
      n=SNodeOperations.replaceWithAnother(n,SLinkOperations.getTarget(SNodeOperations.cast(n,"jetbrains.mps.baseLanguage.structure.UpperBoundType"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1171903916106l,1171903916107l,"bound")));
    }
    if (SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.LowerBoundType")) {
      n=SNodeOperations.replaceWithAnother(n,SLinkOperations.getTarget(SNodeOperations.cast(n,"jetbrains.mps.baseLanguage.structure.LowerBoundType"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1171903862077l,1171903869531l,"bound")));
    }
    if ((n != null)) {
      ListSequence.fromList(q).addSequence(ListSequence.fromList(SNodeOperations.getChildren(n)));
    }
    if ((res == null)) {
      res=n;
    }
    break;
  }
  return res;
}
