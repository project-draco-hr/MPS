{
  CompositeClassPathItem item=new CompositeClassPathItem();
  item.add(context.getModule().getModuleWithDependenciesClassPathItem());
  item.add(CommonPaths.getMPSPath());
  item.add(CommonPaths.getJDK());
  JavaCompiler compiler=new JavaCompiler(item);
  for (  SNode root : targetModel.getRoots()) {
    INodeAdapter outputNode=BaseAdapter.fromNode(root);
    if (outputNode instanceof ClassConcept || outputNode instanceof Interface) {
      compiler.addSource(generateText(context,root).getText(),JavaNameUtil.packageNameForModelUID(targetModel.getUID()) + "." + root.getName());
    }
  }
  progress.addText("Compiling...");
  compiler.compile();
  for (  org.eclipse.jdt.internal.compiler.CompilationResult cr : compiler.getCompilationResults()) {
    CategorizedProblem[] categorizedProblems=cr.getErrors();
    if (categorizedProblems != null && categorizedProblems.length > 0) {
      System.err.println("Warning. Compilation failed.");
    }
  }
  progress.addText("Compilation finished.");
  return compiler;
}
