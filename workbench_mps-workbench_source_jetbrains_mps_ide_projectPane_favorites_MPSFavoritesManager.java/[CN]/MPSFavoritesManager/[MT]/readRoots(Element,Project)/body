{
  List<Object> result=new ArrayList<Object>();
  for (  Object favorite : list.getChildren(FAVORITES_ROOT)) {
    Element favoriteElement=(Element)favorite;
    final String moduleRef=favoriteElement.getAttributeValue(MODULE_REFERENCE);
    if (moduleRef != null) {
      result.add(ModuleReference.fromString(moduleRef));
      continue;
    }
    String snodeRef=favoriteElement.getAttributeValue(SNODE_REFERENCE);
    if (snodeRef != null) {
      result.add(jetbrains.mps.smodel.SNodePointer.deserialize(snodeRef));
    }
 else {
      final String modelRef=favoriteElement.getAttributeValue("model_ref");
      if (modelRef != null) {
        final String nodeId=favoriteElement.getAttributeValue("node_pointer");
        if (nodeId == null) {
          SModelReference modelReference=jetbrains.mps.smodel.SModelReference.fromString(modelRef);
          result.add(modelReference);
        }
 else {
          SNodeReference nodePointer=new jetbrains.mps.smodel.SNodePointer(modelRef,nodeId);
          result.add(nodePointer);
        }
      }
    }
  }
  return result;
}
