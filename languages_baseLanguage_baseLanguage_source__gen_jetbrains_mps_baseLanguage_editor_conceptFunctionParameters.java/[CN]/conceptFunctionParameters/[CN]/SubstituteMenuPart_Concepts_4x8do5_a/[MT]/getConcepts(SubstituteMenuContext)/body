{
  List<SNode> functions=SNodeOperations.getNodeAncestors(_context.getParentNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x108bbca0f48L,"jetbrains.mps.baseLanguage.structure.ConceptFunction"),false);
  SNode parentFunction=ListSequence.fromList(functions).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return !(SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10c63f4f3f3L,"jetbrains.mps.baseLanguage.structure.Closure")));
    }
  }
).first();
  if (parentFunction != null) {
    return ListSequence.fromList(ConceptFunction__BehaviorDescriptor.getParameters_idhEwIGRM.invoke(parentFunction)).select(new ISelector<SNode,SAbstractConcept>(){
      public SAbstractConcept select(      SNode it){
        return SNodeOperations.asSConcept(it);
      }
    }
).toListSequence();
  }
 else {
    return ListSequence.fromList(ListSequence.fromList(new ArrayList<SNode>())).select(new ISelector<SNode,SAbstractConcept>(){
      public SAbstractConcept select(      SNode it){
        return SNodeOperations.asSConcept(it);
      }
    }
).toListSequence();
  }
}
