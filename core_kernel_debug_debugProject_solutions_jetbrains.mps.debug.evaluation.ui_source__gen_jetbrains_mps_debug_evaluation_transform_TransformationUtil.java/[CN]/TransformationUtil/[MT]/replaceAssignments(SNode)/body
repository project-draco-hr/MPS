{
  for (  SNode baseAssignment : ListSequence.fromList(SNodeOperations.getDescendants(evaluateMethod,"jetbrains.mps.baseLanguage.structure.BaseAssignmentExpression",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return isUnprocessed(it) && !(SNodeOperations.isInstanceOf(it,"jetbrains.mps.baseLanguage.structure.AssignmentExpression"));
    }
  }
)) {
    SNode lvalueType=baseAssignment.getChild(LTYPE);
    SNode rvalueType=baseAssignment.getChild(RTYPE);
    SNode rightExpression;
    if (SNodeOperations.isInstanceOf(baseAssignment,"jetbrains.mps.baseLanguage.structure.AndAssignmentExpression")) {
      rightExpression=new TransformationUtil.QuotationClass_crriw5_a0a0a5a0a7().createNode(SLinkOperations.getTarget(baseAssignment,"rValue",true),SLinkOperations.getTarget(baseAssignment,"lValue",true));
    }
 else     if (SNodeOperations.isInstanceOf(baseAssignment,"jetbrains.mps.baseLanguage.structure.DivAssignmentExpression")) {
      rightExpression=new TransformationUtil.QuotationClass_crriw5_a0a0a0f0a0h().createNode(SLinkOperations.getTarget(baseAssignment,"lValue",true),SLinkOperations.getTarget(baseAssignment,"rValue",true));
    }
 else     if (SNodeOperations.isInstanceOf(baseAssignment,"jetbrains.mps.baseLanguage.structure.LeftShiftAssignmentExpression")) {
      rightExpression=new TransformationUtil.QuotationClass_crriw5_a0a0a1f0a0h().createNode(SLinkOperations.getTarget(baseAssignment,"lValue",true),SLinkOperations.getTarget(baseAssignment,"rValue",true));
    }
 else     if (SNodeOperations.isInstanceOf(baseAssignment,"jetbrains.mps.baseLanguage.structure.MinusAssignmentExpression")) {
      rightExpression=new TransformationUtil.QuotationClass_crriw5_a0a0a2f0a0h().createNode(SLinkOperations.getTarget(baseAssignment,"lValue",true),SLinkOperations.getTarget(baseAssignment,"rValue",true));
    }
 else     if (SNodeOperations.isInstanceOf(baseAssignment,"jetbrains.mps.baseLanguage.structure.MulAssignmentExpression")) {
      rightExpression=new TransformationUtil.QuotationClass_crriw5_a0a0a3f0a0h().createNode(SLinkOperations.getTarget(baseAssignment,"lValue",true),SLinkOperations.getTarget(baseAssignment,"rValue",true));
    }
 else     if (SNodeOperations.isInstanceOf(baseAssignment,"jetbrains.mps.baseLanguage.structure.OrAssignmentExpression")) {
      rightExpression=new TransformationUtil.QuotationClass_crriw5_a0a0a4f0a0h().createNode(SLinkOperations.getTarget(baseAssignment,"lValue",true),SLinkOperations.getTarget(baseAssignment,"rValue",true));
    }
 else     if (SNodeOperations.isInstanceOf(baseAssignment,"jetbrains.mps.baseLanguage.structure.PlusAssignmentExpression")) {
      rightExpression=new TransformationUtil.QuotationClass_crriw5_a0a0a5f0a0h().createNode(SLinkOperations.getTarget(baseAssignment,"lValue",true),SLinkOperations.getTarget(baseAssignment,"rValue",true));
    }
 else     if (SNodeOperations.isInstanceOf(baseAssignment,"jetbrains.mps.baseLanguage.structure.RemAssignmentExpression")) {
      rightExpression=new TransformationUtil.QuotationClass_crriw5_a0a0a6f0a0h().createNode(SLinkOperations.getTarget(baseAssignment,"lValue",true),SLinkOperations.getTarget(baseAssignment,"rValue",true));
    }
 else     if (SNodeOperations.isInstanceOf(baseAssignment,"jetbrains.mps.baseLanguage.structure.RightShiftAssignmentExpression")) {
      rightExpression=new TransformationUtil.QuotationClass_crriw5_a0a0a7f0a0h().createNode(SLinkOperations.getTarget(baseAssignment,"lValue",true),SLinkOperations.getTarget(baseAssignment,"rValue",true));
    }
 else     if (SNodeOperations.isInstanceOf(baseAssignment,"jetbrains.mps.baseLanguage.structure.XorAssignmentExpression")) {
      rightExpression=new TransformationUtil.QuotationClass_crriw5_a0a0a8f0a0h().createNode(SLinkOperations.getTarget(baseAssignment,"lValue",true),SLinkOperations.getTarget(baseAssignment,"rValue",true));
    }
 else {
      continue;
    }
    SNodeOperations.replaceWithAnother(baseAssignment,new TransformationUtil.QuotationClass_crriw5_a0a0g0a0h().createNode(SLinkOperations.getTarget(baseAssignment,"lValue",true),rightExpression));
    rightExpression.addChild(LTYPE,SNodeOperations.copyNode(lvalueType));
    rightExpression.addChild(RTYPE,SNodeOperations.copyNode(rvalueType));
    SLinkOperations.setNewChild(rightExpression,AttributesRolesUtil.childRoleFromAttributeRole("unprocessedAnnotation"),"jetbrains.mps.debug.evaluation.structure.UnprocessedAnnotation");
    SLinkOperations.setNewChild(baseAssignment,AttributesRolesUtil.childRoleFromAttributeRole("unprocessedAnnotation"),"jetbrains.mps.debug.evaluation.structure.UnprocessedAnnotation");
  }
}
