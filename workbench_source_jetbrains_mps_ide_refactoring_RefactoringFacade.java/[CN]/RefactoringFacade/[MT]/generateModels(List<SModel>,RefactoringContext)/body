{
  if (sourceModels.isEmpty())   return;
  final RefactoringNodeMembersAccessModifier modifier=new RefactoringNodeMembersAccessModifier();
  try {
    final List<SModelDescriptor> descriptors=new ArrayList<SModelDescriptor>();
    ModelAccess.instance().runWriteAction(new Runnable(){
      public void run(){
        refactoringContext.setUpMembersAccessModifier(modifier);
        modifier.addModelsToModify(sourceModels);
        SNode.setNodeMemberAccessModifier(modifier);
        for (        SModel model : sourceModels) {
          descriptors.add(model.getModelDescriptor());
        }
      }
    }
);
    IOperationContext operationContext=ProjectOperationContext.get(refactoringContext.getSelectedProject());
    MakeSession sess=new MakeSession(operationContext);
    if (IMakeService.INSTANCE.get().openNewSession(sess)) {
      IMakeService.INSTANCE.get().make(sess,new ModelsToResources(operationContext,descriptors).resources(false));
    }
  }
  finally {
    SNode.setNodeMemberAccessModifier(null);
  }
}
