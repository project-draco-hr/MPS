{
  IRefactoring refactoring=refactoringContext.getRefactoring();
  try {
    ((ILoggableRefactoring)refactoring).updateModel(model,refactoringContext);
  }
 catch (  Throwable t) {
    LOG.error("An exception was thrown by refactoring " + refactoring.getUserFriendlyName() + " while updating model "+ model.getLongName()+ ". Models could have been corrupted.",t);
  }
  if (!refactoringContext.isLocal()) {
    Map<SModelReference,Integer> dependencies=refactoringContext.getStructureModification().getDependencies();
    for (    SModelReference modelRef : dependencies.keySet()) {
      model.updateImportedModelUsedVersion(modelRef,dependencies.get(modelRef) + 1);
    }
  }
  SModelRepository.getInstance().markChanged(model);
}
