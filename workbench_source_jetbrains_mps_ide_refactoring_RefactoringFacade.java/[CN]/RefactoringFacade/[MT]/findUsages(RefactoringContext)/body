{
  final SearchResults[] result=new SearchResults[]{null};
  ThreadUtils.runInUIThreadAndWait(new Runnable(){
    public void run(){
      ProgressManager.getInstance().run(new Modal(refactoringContext.getCurrentOperationContext().getIdeaProject(),"Finding usages...",false){
        public void run(        @NotNull ProgressIndicator indicator){
          indicator.setIndeterminate(true);
          ModelAccess.instance().runReadAction(new Runnable(){
            public void run(){
              try {
                Project project=refactoringContext.getSelectedProject();
                refactoringContext.setCurrentOperationContext(ProjectOperationContext.get(project));
                IRefactoring refactoring=refactoringContext.getRefactoring();
                result[0]=refactoring.getAffectedNodes(refactoringContext);
                if (result[0] == null) {
                  result[0]=new SearchResults();
                }
              }
 catch (              Throwable t) {
                LOG.error(t);
              }
            }
          }
);
        }
      }
);
      if (result[0] != null) {
        return;
      }
      int promptResult=JOptionPane.showConfirmDialog(MPSDataKeys.FRAME.getData(DataManager.getInstance().getDataContext()),"An exception occurred during searching affected nodes. Do you want to continue anyway?","Exception",JOptionPane.YES_NO_OPTION);
      if (promptResult == JOptionPane.YES_OPTION) {
        result[0]=new SearchResults();
      }
    }
  }
);
  return result[0];
}
