{
  if (kind == SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.actions.structure.SubstituteNodeBuilderVariableDeclaration")) {
    if (ScopeUtils.comeFrom("precondition",thisNode,child)) {
      return BehaviorReflection.invokeSuper(Scope.class,thisNode,"jetbrains.mps.lang.core.structure.ScopeProvider","virtual_getScope_3734116213129936182",new Object[]{kind,child});
    }
    SNode thisVarDecl=SNodeOperations.as(child,"jetbrains.mps.lang.actions.structure.SubstituteNodeBuilderVariableDeclaration");
    List<SNode> result=new ArrayList<SNode>();
    for (    SNode nextVarDecl : ListSequence.fromList(SLinkOperations.getTargets(thisNode,"variable",true))) {
      if (nextVarDecl == thisVarDecl) {
        break;
      }
      ListSequence.fromList(result).addElement(nextVarDecl);
    }
    return Scopes.forVariables(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.actions.structure.SubstituteNodeBuilderVariableDeclaration"),result,ScopeUtils.lazyParentScope(thisNode,kind));
  }
  return BehaviorReflection.invokeSuper(Scope.class,thisNode,"jetbrains.mps.lang.core.structure.ScopeProvider","virtual_getScope_3734116213129936182",new Object[]{kind,child});
}
