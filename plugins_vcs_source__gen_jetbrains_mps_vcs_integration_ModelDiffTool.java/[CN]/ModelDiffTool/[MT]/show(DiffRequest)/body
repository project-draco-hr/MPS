{
  DiffContent[] contents=request.getContents();
  final SModel oldModel;
  final SModel newModel;
  try {
    oldModel=readModel(contents[0]);
    newModel=readModel(contents[1]);
  }
 catch (  ModelReadException e) {
    if (log.isErrorEnabled()) {
      log.error("Can't read models",e);
    }
    DiffManager.getInstance().getIdeaDiffTool().show(request);
    return;
  }
  final BaseDialog d=ModelAccess.instance().runReadAction(new Computable<BaseDialog>(){
    public BaseDialog compute(){
      SModelDescriptor modelDescriptor=oldModel.getModelDescriptor();
      if (modelDescriptor == null) {
        modelDescriptor=newModel.getModelDescriptor();
        if (modelDescriptor == null) {
          modelDescriptor=SModelRepository.getInstance().getModelDescriptor(oldModel.getSModelFqName());
        }
      }
      IOperationContext context;
      if (modelDescriptor == null) {
        context=new GlobalOperationContext();
      }
 else {
        context=new ModuleContext(modelDescriptor.getModule(),ProjectHelper.toMPSProject(request.getProject()));
      }
      boolean modal=!(request.getHints().contains(DiffTool.HINT_SHOW_FRAME));
      JFrame frame=WindowManager.getInstance().getFrame(request.getProject());
      if (isNewDiffEnabled()) {
        return new ModelDifferenceDialog(oldModel,newModel,request);
      }
 else {
        final OldModelDifferenceDialog d=new OldModelDifferenceDialog(context,frame,oldModel,newModel,request.getWindowTitle(),modal,request.getContentTitles());
        d.addAction(new AnAction("View as Text","View as Text",Icons.TEXT_ICON){
          public void actionPerformed(          AnActionEvent e){
            DiffTool ideaDiffTool=DiffManager.getInstance().getIdeaDiffTool();
            if (ideaDiffTool.canShow(request)) {
              d.dispose();
              ideaDiffTool.show(request);
            }
          }
        }
);
        return d;
      }
    }
  }
);
  d.showDialog();
}
