{
  SNode classConcept=SNodeOperations.as(SNodeOperations.getParent(node),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"));
  if (classConcept == null) {
    return false;
  }
  if (!(OverridingMethodsFinder.canOverride(node)) || ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a6be947aL,0x114a6beb0bdL,"annotation"))).any(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return "java.lang.Override".equals(INamedConcept__BehaviorDescriptor.getFqName_idhEwIO9y.invoke(SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a6b4ccabL,0x114a6b85d40L,"annotation"))));
    }
  }
)) {
    return false;
  }
  OverridingMethodsFinder finder=new OverridingMethodsFinder(classConcept,Sequence.<SNode>singleton(node));
  return SetSequence.fromSet(finder.getOverridingMethods()).isNotEmpty();
}
