{
  SModelDescriptor modelDescriptor=refactoringContext.getSelectedModel();
  ModelOwner modelOwner=SModelRepository.getInstance().getOwner(modelDescriptor);
  if (modelOwner instanceof Language) {
    deleteModelFromLanguage((Language)(IModule)modelOwner,modelDescriptor);
  }
 else   if (modelOwner instanceof Solution) {
    deleteModelFromSolution((Solution)(IModule)modelOwner,modelDescriptor);
  }
 else   if (modelOwner instanceof Generator) {
    deleteModelFromGenerator((Generator)(IModule)modelOwner,modelDescriptor);
  }
 else   if (modelOwner != null) {
    LOG.warning("Module type " + ((IModule)modelOwner).getClass().getSimpleName() + " is not supported by delete refactoring. Changes will not be saved automatically for modules of this type.");
  }
  for (  SModelDescriptor md : SModelRepository.getInstance().getModelDescriptors()) {
    if (SModelStereotype.isUserModel(md) && new ModelFindOperations(md).hasImportedModel(modelDescriptor)) {
      md.getSModel().deleteModelImport(modelDescriptor.getSModelReference());
    }
  }
  if (myDeleteFiles) {
    SModelRepository.getInstance().deleteModel(modelDescriptor);
  }
  if (modelOwner instanceof IModule) {
    ((IModule)modelOwner).save();
  }
}
