{
  I initialState=participant.deserializeInitialState(initialStateSerialized);
  final F finalState=participant.deserializeFinalState(finalStateSerialized);
  Map<String,Boolean> options=MapSequence.fromMap(new HashMap<String,Boolean>());
  for (  String option : participant.getOptions(initialState,repository)) {
    MapSequence.fromMap(options).put(option,true);
  }
  ListSequence.fromList(participant.getChanges(initialState,repository,options,searchScope)).visitAll(new IVisitor<RefactoringParticipant.Change<I,F>>(){
    public void visit(    RefactoringParticipant.Change<I,F> it){
      it.confirm(finalState,repository,session);
    }
  }
);
}
