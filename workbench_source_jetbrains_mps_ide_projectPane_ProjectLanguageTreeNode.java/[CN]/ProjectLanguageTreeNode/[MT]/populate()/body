{
  IOperationContext operationContext=getOperationContext();
  SModelDescriptor structureModelDescriptor=myLanguage.getStructureModelDescriptor();
  if (structureModelDescriptor != null) {
    this.add(new SModelTreeNode(structureModelDescriptor,null,operationContext,false));
  }
  if (myLanguage.getAccessoryModels().size() > 0) {
    TextTreeNode accessories=new TextTreeNode("accessories"){
{
        setIcon(Icons.LIB_ICON);
      }
    }
;
    List<SModelDescriptor> sortedModels=SortUtil.sortModels(myLanguage.getAccessoryModels());
    for (    SModelDescriptor model : sortedModels) {
      accessories.add(new SModelTreeNode(model,null,operationContext));
    }
    this.add(accessories);
  }
  for (  Generator generator : myLanguage.getGenerators()) {
    MPSTreeNode generatorNode=new GeneratorTreeNode(generator,myProject);
    this.add(generatorNode);
  }
  TextTreeNode allModels=new TextTreeNode("All models");
  SModelsSubtree.create(allModels,getOperationContext());
  this.add(allModels);
}
