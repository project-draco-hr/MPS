{
  if (!(myToolComponent.isToolVisible())) {
    return;
  }
  if (selection.isSame(myLastSelection)) {
    return;
  }
  myNextSelection=selection;
  ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
    public void run(){
      try {
        Thread.sleep(500);
      }
 catch (      InterruptedException ex) {
        return;
      }
      if (myNextSelection != selection) {
        return;
      }
      myLastSelection=selection;
      try {
        final Wrappers._T<List<ToolComponent.IItem>> items=new Wrappers._T<List<ToolComponent.IItem>>(null);
        myProject.getRepository().getModelAccess().runReadAction(new Runnable(){
          public void run(){
            items.value=queryItems(selection);
          }
        }
);
        items.value=ListSequence.fromList(items.value).sort(new ISelector<ToolComponent.IItem,String>(){
          public String select(          ToolComponent.IItem it){
            return it.getLabel();
          }
        }
,true).toListSequence();
        ThreadUtils.runInUIThreadNoWait(new Runnable(){
          public void run(){
            myProject.getRepository().getModelAccess().runReadAction(new Runnable(){
              public void run(){
                items.value=ListSequence.fromList(items.value).where(new IWhereFilter<ToolComponent.IItem>(){
                  public boolean accept(                  ToolComponent.IItem it){
                    return it.isVisible();
                  }
                }
).toListSequence();
              }
            }
);
            myToolComponent.loadItems(items.value);
          }
        }
);
      }
 catch (      Exception ex) {
        if (LOG.isEnabledFor(Level.ERROR)) {
          LOG.error("Context actions update failed",ex);
        }
      }
    }
  }
);
}
