{
  JLabel component=(JLabel)super.getListCellRendererComponent(list,value,index,isSelected,cellHasFocus);
  final IMessage message=(IMessage)value;
  component.setBackground(isSelected ? Color.LIGHT_GRAY : Color.WHITE);
  component.setBorder(EMPTY_BORDER);
  String text=(message instanceof Message) ? ((Message)message).getCreationTimeString() + "\t: " + message : message.getText();
  NavStatus ns=ModelAccess.instance().runReadAction(new Computable<NavStatus>(){
    public NavStatus compute(){
      return canNavigate(message);
    }
  }
);
  if (ns == NavStatus.NO) {
    component.setForeground(Color.BLACK);
    component.setText(text);
  }
 else   if (ns == NavStatus.OUTDATED) {
    component.setForeground(Color.BLACK);
    component.setText("[outdated] " + message.getHintObject().toString() + ":"+ text);
  }
 else   if (ns == NavStatus.YES) {
    component.setForeground(Color.BLUE);
    component.setText(text);
  }
switch (message.getKind()) {
case INFORMATION:
    component.setIcon(Icons.INFORMATION_ICON);
  break;
case WARNING:
component.setIcon(Icons.WARNING_ICON);
break;
case ERROR:
component.setIcon(Icons.ERROR_ICON);
break;
}
return component;
}
