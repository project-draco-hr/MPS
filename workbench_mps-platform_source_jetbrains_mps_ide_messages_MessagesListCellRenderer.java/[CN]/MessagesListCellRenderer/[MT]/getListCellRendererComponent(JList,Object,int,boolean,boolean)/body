{
  JLabel component=(JLabel)super.getListCellRendererComponent(list,value,index,isSelected,cellHasFocus);
  final IMessage message=(IMessage)value;
  component.setBackground(isSelected ? CONSOLE_BACKGROUND.darker() : CONSOLE_BACKGROUND);
  component.setBorder(EMPTY_BORDER);
  String text=(message instanceof Message) ? ((Message)message).getCreationTimeString() + "\t: " + message : message.getText();
  NavStatus ns=canNavigate(message);
  if (ns == NavStatus.NO) {
    component.setForeground(INFO_ATTRIBUTES.getForegroundColor());
    component.setText(text);
  }
 else   if (ns == NavStatus.OUTDATED) {
    component.setForeground(EXPIRED_ATTRIBUTES.getForegroundColor());
    component.setText("[outdated] " + message.getHintObject().toString() + ":"+ text);
  }
 else   if (ns == NavStatus.YES) {
    component.setForeground(Color.BLUE);
switch (message.getKind()) {
case WARNING:
      component.setForeground(WARNING_ATTRIBUTES.getForegroundColor());
    break;
case ERROR:
  component.setForeground(ERROR_ATTRIBUTES.getForegroundColor());
break;
default :
component.setForeground(INFO_ATTRIBUTES.getForegroundColor());
break;
}
component.setText(text);
}
switch (message.getKind()) {
case INFORMATION:
component.setIcon(Icons.INFORMATION_ICON);
break;
case WARNING:
component.setIcon(Icons.WARNING_ICON);
break;
case ERROR:
component.setIcon(Icons.ERROR_ICON);
break;
}
return component;
}
