{
  try {
    AddToFavoritesGroup_ActionGroup.this.removeAll();
    Project project=event.getData(MPSDataKeys.PROJECT);
    if (project == null) {
      return;
    }
    MPSFavoritesManager favoritesManager=project.getComponent(MPSFavoritesManager.class);
    if (favoritesManager == null) {
      return;
    }
    FavoritesProjectPane pane=FavoritesUtil.getCurrentPane(project);
    String currentFavoritesList=null;
    if (pane != null) {
      currentFavoritesList=pane.getSubId();
    }
    for (    String name : favoritesManager.getFavoriteNames()) {
      if (pane != null && EqualUtil.equals(name,currentFavoritesList)) {
        continue;
      }
{
        GeneratedAction newAction=new AddToFavorites_Action(name);
        ActionManagerEx manager=ActionManagerEx.getInstanceEx();
        AnAction oldAction=manager.getAction(newAction.getActionId());
        if (oldAction == null) {
          manager.registerAction(newAction.getActionId(),newAction,PluginId.getId("jetbrains.mps.ide@transient5"));
          oldAction=newAction;
        }
        AddToFavoritesGroup_ActionGroup.this.addAction(oldAction);
      }
    }
  }
 catch (  Throwable t) {
    LOG.error("User group error",t);
  }
  for (  Pair<ActionPlace,Condition<BaseAction>> p : this.myPlaces) {
    this.addPlace(p.first,p.second);
  }
}
