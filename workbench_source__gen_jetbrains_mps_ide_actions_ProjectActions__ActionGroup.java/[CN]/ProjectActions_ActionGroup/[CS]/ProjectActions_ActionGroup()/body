{
  super("ProjectActions",ID);
  this.setIsInternal(false);
  this.setPopup(false);
  try {
{
      LabelledAnchor action=new LabelledAnchor(ProjectActions_ActionGroup.LABEL_ID_projectNew);
      ActionManagerEx manager=ActionManagerEx.getInstanceEx();
      manager.registerAction(action.getId(),action,PluginId.getId("jetbrains.mps.ide"));
      ProjectActions_ActionGroup.this.addAction(action);
    }
    ProjectActions_ActionGroup.this.addSeparator();
    ProjectActions_ActionGroup.this.addParameterizedAction(new RegenerateProject_Action(new GenerateAllModulesInProjectAction(true)),PluginId.getId("jetbrains.mps.ide"),new GenerateAllModulesInProjectAction(true));
    ProjectActions_ActionGroup.this.addParameterizedAction(new GenerateProject_Action(new GenerateAllModulesInProjectAction(false)),PluginId.getId("jetbrains.mps.ide"),new GenerateAllModulesInProjectAction(false));
    ProjectActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.CheckProject_Action");
    ProjectActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.MakeProject_Action");
    ProjectActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.RebuildProject_Action");
    ProjectActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.CleanProject_Action");
{
      LabelledAnchor action=new LabelledAnchor(ProjectActions_ActionGroup.LABEL_ID_runConfig);
      ActionManagerEx manager=ActionManagerEx.getInstanceEx();
      manager.registerAction(action.getId(),action,PluginId.getId("jetbrains.mps.ide"));
      ProjectActions_ActionGroup.this.addAction(action);
    }
    ProjectActions_ActionGroup.this.addSeparator();
    ProjectActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.UpgradeModelPersistenceInProject_Action");
    ProjectActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.OptimizeProjectImports_Action");
    ProjectActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.MPSProjectPaths_Action");
  }
 catch (  Throwable t) {
    LOG.error("User group error",t);
  }
}
