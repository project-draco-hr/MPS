{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.core.syntax.structure.SLexerPart");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(childConcept,NameUtil.nodeFQName(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          Matcher _matcher_x583g4_a1a0a0a0a0a2a0a1a1;
          SNode result=SNodeFactoryOperations.createNewNode(model,"jetbrains.mps.core.syntax.structure.SLexem",null);
          if ((_matcher_x583g4_a1a0a0a0a0a2a0a1a1=REGEXP_x583g4_a0a0a2a0a0a0a0a2a0a1a1.matcher(pattern)).find()) {
            SPropertyOperations.set(SLinkOperations.getTarget(result,"sym",true),"name",_matcher_x583g4_a1a0a0a0a0a2a0a1a1.group(1));
          }
          return result;
        }
        public String getDescriptionText(        String pattern){
          return "new lexem definition";
        }
        public String getMatchingText(        String pattern){
          Matcher _matcher_x583g4_a0a2a0a0a0a2a0a1a1;
          if ((_matcher_x583g4_a0a2a0a0a0a2a0a1a1=REGEXP_x583g4_a0a0a1a2a0a0a0a2a0a1a1.matcher(pattern)).find()) {
            return (pattern.endsWith(":") ? pattern : StringUtils.stripEnd(pattern," \n\r\t") + " :");
          }
          return "lexem:";
        }
        public String getVisibleMatchingText(        String pattern){
          return getMatchingText(pattern);
        }
      }
);
    }
  }
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.core.syntax.structure.SLexerPart");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(childConcept,NameUtil.nodeFQName(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          Matcher _matcher_x583g4_a1a0a0a0a0a2a1a1a1;
          SNode result=SNodeFactoryOperations.createNewNode(model,"jetbrains.mps.core.syntax.structure.SNamedPattern",null);
          if ((_matcher_x583g4_a1a0a0a0a0a2a1a1a1=REGEXP_x583g4_a0a0a2a0a0a0a0a2a1a1a1.matcher(pattern)).find()) {
            SPropertyOperations.set(result,"name",_matcher_x583g4_a1a0a0a0a0a2a1a1a1.group(1));
          }
          return result;
        }
        public String getDescriptionText(        String pattern){
          return "new named pattern definition";
        }
        public String getMatchingText(        String pattern){
          Matcher _matcher_x583g4_a0a2a0a0a0a2a1a1a1;
          if ((_matcher_x583g4_a0a2a0a0a0a2a1a1a1=REGEXP_x583g4_a0a0a1a2a0a0a0a2a1a1a1.matcher(pattern)).find()) {
            return (pattern.endsWith("=") ? pattern : StringUtils.stripEnd(pattern," \n\r\t") + " =");
          }
          return "pattern = /regexp/";
        }
        public String getVisibleMatchingText(        String pattern){
          return getMatchingText(pattern);
        }
      }
);
    }
  }
  return result;
}
