{
  SNode quotedNode_2=null;
  SNode quotedNode_3=null;
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  SNode quotedNode_7=null;
  SNode quotedNode_8=null;
  SNode quotedNode_9=null;
  SNode quotedNode_10=null;
  SNode quotedNode_11=null;
  SNode quotedNode_12=null;
  SNode quotedNode_13=null;
  SNode quotedNode_14=null;
  SNode quotedNode_15=null;
  SNode quotedNode_16=null;
  SNode quotedNode_17=null;
  SNode quotedNode_18=null;
  quotedNode_2=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AnonymousClassCreator",null,null,GlobalScope.getInstance(),false);
  quotedNode_3=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AnonymousClass",null,null,GlobalScope.getInstance(),false);
  SNodeAccessUtil.setProperty(quotedNode_3,"nonStatic","true");
  quotedNode_3.setReference("classifier",SReference.create("classifier",quotedNode_3,SModelReference.fromString("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)"),SNodeId.fromString("~DefaultEditorMessage")));
  quotedNode_3.setReference("baseMethodDeclaration",SReference.create("baseMethodDeclaration",quotedNode_3,SModelReference.fromString("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)"),SNodeId.fromString("~DefaultEditorMessage.<init>(jetbrains.mps.smodel.SNode,java.awt.Color,java.lang.String,jetbrains.mps.nodeEditor.EditorMessageOwner)")));
{
    List<SNode> nodes=(List<SNode>)parameter_1;
    for (    SNode child : nodes) {
      quotedNode_3.addChild("actualArgument",HUtil.copyIfNecessary(child));
    }
  }
  quotedNode_5=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PublicVisibility",null,null,GlobalScope.getInstance(),false);
  quotedNode_3.addChild("visibility",quotedNode_5);
  quotedNode_6=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration",null,null,GlobalScope.getInstance(),false);
  SNodeAccessUtil.setProperty(quotedNode_6,"isDeprecated","false");
  SNodeAccessUtil.setProperty(quotedNode_6,"isAbstract","false");
  SNodeAccessUtil.setProperty(quotedNode_6,"name","paint");
  SNodeAccessUtil.setProperty(quotedNode_6,"isFinal","false");
  quotedNode_7=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.PublicVisibility",null,null,GlobalScope.getInstance(),false);
  quotedNode_6.addChild("visibility",quotedNode_7);
  quotedNode_8=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.VoidType",null,null,GlobalScope.getInstance(),false);
  quotedNode_6.addChild("returnType",quotedNode_8);
  quotedNode_9=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterDeclaration",null,null,GlobalScope.getInstance(),false);
  SNodeAccessUtil.setProperty(quotedNode_9,"name","graphics");
  quotedNode_14=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",null,null,GlobalScope.getInstance(),false);
  quotedNode_14.setReference("classifier",SReference.create("classifier",quotedNode_14,SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.awt(JDK/java.awt@java_stub)"),SNodeId.fromString("~Graphics")));
  quotedNode_9.addChild("type",quotedNode_14);
  quotedNode_6.addChild("parameter",quotedNode_9);
  quotedNode_10=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterDeclaration",null,null,GlobalScope.getInstance(),false);
  SNodeAccessUtil.setProperty(quotedNode_10,"name","component");
  quotedNode_15=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",null,null,GlobalScope.getInstance(),false);
  quotedNode_15.setReference("classifier",SReference.create("classifier",quotedNode_15,SModelReference.fromString("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor(MPS.Editor/jetbrains.mps.nodeEditor@java_stub)"),SNodeId.fromString("~EditorComponent")));
  quotedNode_10.addChild("type",quotedNode_15);
  quotedNode_6.addChild("parameter",quotedNode_10);
  quotedNode_11=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParameterDeclaration",null,null,GlobalScope.getInstance(),false);
  SNodeAccessUtil.setProperty(quotedNode_11,"name","cell");
  quotedNode_16=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",null,null,GlobalScope.getInstance(),false);
  quotedNode_16.setReference("classifier",SReference.create("classifier",quotedNode_16,SModelReference.fromString("f:java_stub#1ed103c3-3aa6-49b7-9c21-6765ee11f224#jetbrains.mps.nodeEditor.cells(MPS.Editor/jetbrains.mps.nodeEditor.cells@java_stub)"),SNodeId.fromString("~EditorCell")));
  quotedNode_11.addChild("type",quotedNode_16);
  quotedNode_6.addChild("parameter",quotedNode_11);
  quotedNode_12=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList",null,null,GlobalScope.getInstance(),false);
  quotedNode_17=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.SingleLineComment",null,null,GlobalScope.getInstance(),false);
  quotedNode_18=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.TextCommentPart",null,null,GlobalScope.getInstance(),false);
  SNodeAccessUtil.setProperty(quotedNode_18,"text","nothing");
  quotedNode_17.addChild("commentPart",quotedNode_18);
  quotedNode_12.addChild("statement",quotedNode_17);
  quotedNode_6.addChild("body",quotedNode_12);
  quotedNode_13=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.AnnotationInstance",null,null,GlobalScope.getInstance(),false);
  quotedNode_13.setReference("annotation",SReference.create("annotation",quotedNode_13,SModelReference.fromString("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"),SNodeId.fromString("~Override")));
  quotedNode_6.addChild("annotation",quotedNode_13);
  quotedNode_3.addChild("member",quotedNode_6);
  quotedNode_2.addChild("cls",quotedNode_3);
  return quotedNode_2;
}
