{
switch (myConceptIndex.index(id)) {
case LanguageConceptSwitch.AndOperation:
    return myConceptAndOperation;
case LanguageConceptSwitch.Constant:
  return myConceptConstant;
case LanguageConceptSwitch.EqualsOperation:
return myConceptEqualsOperation;
case LanguageConceptSwitch.Expression:
return myConceptExpression;
case LanguageConceptSwitch.FloatingPointConstant:
return myConceptFloatingPointConstant;
case LanguageConceptSwitch.Formula:
return myConceptFormula;
case LanguageConceptSwitch.Function:
return myConceptFunction;
case LanguageConceptSwitch.GreaterThanOperation:
return myConceptGreaterThanOperation;
case LanguageConceptSwitch.IfFunction:
return myConceptIfFunction;
case LanguageConceptSwitch.IntegerConstant:
return myConceptIntegerConstant;
case LanguageConceptSwitch.IsNullOperation:
return myConceptIsNullOperation;
case LanguageConceptSwitch.LessThanOperation:
return myConceptLessThanOperation;
case LanguageConceptSwitch.MinusOperation:
return myConceptMinusOperation;
case LanguageConceptSwitch.MultOperation:
return myConceptMultOperation;
case LanguageConceptSwitch.NotOperation:
return myConceptNotOperation;
case LanguageConceptSwitch.NullConstant:
return myConceptNullConstant;
case LanguageConceptSwitch.Operation:
return myConceptOperation;
case LanguageConceptSwitch.OrOperation:
return myConceptOrOperation;
case LanguageConceptSwitch.ParenthisizedExpression:
return myConceptParenthisizedExpression;
case LanguageConceptSwitch.PlusOperation:
return myConceptPlusOperation;
case LanguageConceptSwitch.Reference:
return myConceptReference;
case LanguageConceptSwitch.StringConstant:
return myConceptStringConstant;
default :
return null;
}
}
