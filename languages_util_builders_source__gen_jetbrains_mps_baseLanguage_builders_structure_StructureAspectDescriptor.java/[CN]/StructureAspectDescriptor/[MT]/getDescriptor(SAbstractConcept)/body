{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_1htk8d_a0db.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return myConceptAsBuilderStatement;
      }
    break;
case 1:
  if (true) {
    return myConceptAsTypeBuilder;
  }
break;
case 2:
if (true) {
return myConceptBaseSimpleBuilderDeclaration;
}
break;
case 3:
if (true) {
return myConceptBeanBuilder;
}
break;
case 4:
if (true) {
return myConceptBeanPropertyBuilder;
}
break;
case 5:
if (true) {
return myConceptBuilder;
}
break;
case 6:
if (true) {
return myConceptBuilderContainer;
}
break;
case 7:
if (true) {
return myConceptBuilderCreator;
}
break;
case 8:
if (true) {
return myConceptBuilderStatement;
}
break;
case 9:
if (true) {
return myConceptResultExpression;
}
break;
case 10:
if (true) {
return myConceptSimpleBuilder;
}
break;
case 11:
if (true) {
return myConceptSimpleBuilderChild;
}
break;
case 12:
if (true) {
return myConceptSimpleBuilderChildExpression;
}
break;
case 13:
if (true) {
return myConceptSimpleBuilderDeclaration;
}
break;
case 14:
if (true) {
return myConceptSimpleBuilderExpression;
}
break;
case 15:
if (true) {
return myConceptSimpleBuilderExtensionDeclaration;
}
break;
case 16:
if (true) {
return myConceptSimpleBuilderParameter;
}
break;
case 17:
if (true) {
return myConceptSimpleBuilderParameterReference;
}
break;
case 18:
if (true) {
return myConceptSimpleBuilderParentExpression;
}
break;
case 19:
if (true) {
return myConceptSimpleBuilderProperty;
}
break;
case 20:
if (true) {
return myConceptSimpleBuilderPropertyBuilder;
}
break;
case 21:
if (true) {
return myConceptSimpleBuilderPropertyExpression;
}
break;
case 22:
if (true) {
return myConceptSimpleBuilderPropertyParent;
}
break;
case 23:
if (true) {
return myConceptSimpleBuilderPropertyValue;
}
break;
case 24:
if (true) {
return myConceptSimpleBuilders;
}
break;
default :
}
}
return null;
}
