{
  pushTask(context,getMessage(context,refContext,"+"));
  EditorCell result=null;
  try {
    final SNode node=refContext.getNode();
    NodeReadAccessInEditorListener nodeAccessListener=new NodeReadAccessInEditorListener();
    try {
      if (!isAttributedCell(editorCell)) {
        editorCell=removeSideTransformHintCell(editorCell);
      }
      NodeReadAccessCasterInEditor.setCellBuildNodeReadAccessListener(nodeAccessListener);
      editorCell.synchronize();
      result=editorCell;
      if (!isAttributedCell(result)) {
        result=addSideTransformHintCell(result,node);
      }
    }
 catch (    Throwable e) {
      LOG.error("Failed to synchronize cell for node " + SNodeUtil.getDebugText(node),e);
      result=new EditorCell_Error(context,node,"!exception!:" + SNodeUtil.getDebugText(node));
      result.setBig(true);
    }
 finally {
      NodeReadAccessCasterInEditor.removeCellBuildNodeAccessListener();
      addNodeDependenciesToEditor(result,nodeAccessListener,context);
      if (!isAttributedCell(result)) {
        result.putUserObject(BIG_CELL_CONTEXT,refContext);
        EditorCell unwrappedNodeBigCell=getUnwrappedNodeBigCell(result,node);
        if (unwrappedNodeBigCell != null) {
          getEditorComponent(context).registerAsBigCell(unwrappedNodeBigCell,this);
        }
      }
    }
    return result;
  }
  finally {
    popTask(context);
  }
}
