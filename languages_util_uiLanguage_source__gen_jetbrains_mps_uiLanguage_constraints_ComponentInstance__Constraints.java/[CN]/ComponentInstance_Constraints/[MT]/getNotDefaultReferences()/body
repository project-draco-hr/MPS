{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("componentDeclaration",new BaseReferenceConstraintsDescriptor("componentDeclaration",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          List<SNode> components=new ArrayList<SNode>();
          ListSequence.fromList(components).addSequence(ListSequence.fromList(SModelOperations.getRootsIncludingImported(_context.getModel(),operationContext.getScope(),"jetbrains.mps.uiLanguage.structure.ComponentDeclaration")).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return !(SPropertyOperations.getBoolean(it,"abstract"));
            }
          }
));
          return components;
        }
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_hoyq5w_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
