{
  List<SNode> result=new ArrayList<SNode>();
  for (  SReference reference : _context.getNode().getReferences()) {
    if (AttributeOperations.getAttribute(_context.getNode(),new IAttributeDescriptor.LinkAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.ReferenceMacro"),reference.getRole())) != null) {
      continue;
    }
    SNode targetNode=reference.getTargetNodeSilently();
    if (targetNode == null) {
      _context.showErrorMessage(_context.getNode(),"cannot resolve reference in template model; role: " + reference.getRole());
      continue;
    }
    if (SNodeOperations.getModel(targetNode) == SNodeOperations.getModel(_context.getNode())) {
      SNode current=_context.getNode();
      int counter=0;
      while (current != null) {
        if (eq_x583g4_a0a0c0d0b0xdb(current,targetNode)) {
          break;
        }
        current=SNodeOperations.getParent(current);
        counter++;
      }
      SNode referenceNode=SModelOperations.createNewNode(_context.getInputModel(),null,"jetbrains.mps.lang.core.structure.BaseConcept");
      SNodeAccessUtil.setProperty(referenceNode,"role",reference.getRole());
      referenceNode.setReferent("originalNode",_context.getNode(),false);
      if (current != null) {
        SNodeAccessUtil.setProperty(referenceNode,"kind","parentIndex");
        SNodeAccessUtil.setProperty(referenceNode,"parentIndex",Integer.toString(counter));
      }
 else {
        SNodeAccessUtil.setProperty(referenceNode,"kind","internal");
        SNodeAccessUtil.setProperty(referenceNode,"templateNodeId",GeneratorUtil.getTemplateNodeId(_context.getOriginalCopiedInputNode(targetNode)));
      }
      String resolveInfo=null;
      if ((targetNode != null)) {
        resolveInfo=jetbrains.mps.util.SNodeOperations.getResolveInfo(targetNode);
      }
      if (resolveInfo == null) {
        resolveInfo=reference.getResolveInfo();
      }
      if (resolveInfo == null) {
        resolveInfo="";
      }
      SNodeAccessUtil.setProperty(referenceNode,"resolveInfo",resolveInfo);
      ListSequence.fromList(result).addElement(referenceNode);
    }
 else {
      SNode referenceNode=SModelOperations.createNewNode(_context.getInputModel(),null,"jetbrains.mps.lang.core.structure.BaseConcept");
      SNodeAccessUtil.setProperty(referenceNode,"kind","normal");
      SNodeAccessUtil.setProperty(referenceNode,"targetModel",reference.getTargetSModelReference().toString());
      SNodeAccessUtil.setProperty(referenceNode,"role",reference.getRole());
      SNodeAccessUtil.setProperty(referenceNode,"targetNodeId",targetNode.getSNodeId().toString());
      ListSequence.fromList(result).addElement(referenceNode);
    }
  }
  return result;
}
