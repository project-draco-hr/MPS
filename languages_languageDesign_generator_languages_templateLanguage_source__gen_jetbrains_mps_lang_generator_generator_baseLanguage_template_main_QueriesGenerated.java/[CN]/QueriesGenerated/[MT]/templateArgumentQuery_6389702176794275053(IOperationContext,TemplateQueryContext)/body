{
  return Sequence.<SNode>fromIterable(((Iterable<SNode>)_context.getVariable("fragments"))).<SNode>translate(new ITranslator2<SNode,SNode>(){
    public Iterable<SNode> translate(    SNode it){
      return SNodeOperations.getDescendants(it,"jetbrains.mps.lang.generator.structure.MapSrcNodeMacro",false,new String[]{});
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (SLinkOperations.getTarget(it,"mapperFunction",true) == null);
    }
  }
).<SNode>select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.getParent(it);
    }
  }
).distinct();
}
