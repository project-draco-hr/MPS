{
  List<SNode> result=new ArrayList<SNode>();
  List<String> propertyNames=ListSequence.<String>fromListWithValues(new ArrayList<String>(),_context.getNode().getPropertyNames());
  for (  SNode child : _context.getNode().getChildren(true)) {
    if (SNodeOperations.isInstanceOf(child,"jetbrains.mps.lang.generator.structure.PropertyMacro")) {
      String role=AttributeOperations.getPropertyName(SNodeOperations.cast(child,"jetbrains.mps.lang.generator.structure.PropertyMacro"));
      ListSequence.<String>fromList(propertyNames).removeElement(role);
    }
  }
  Collections.sort(propertyNames);
  for (  String property : propertyNames) {
    SNode propertyNode=SModelOperations.createNewNode(_context.getInputModel(),"jetbrains.mps.lang.core.structure.BaseConcept",null);
    propertyNode.setProperty("propertyName",property);
    propertyNode.setProperty("propertyValue",_context.getNode().getProperty(property));
    ListSequence.<SNode>fromList(result).addElement(propertyNode);
  }
  return result;
}
