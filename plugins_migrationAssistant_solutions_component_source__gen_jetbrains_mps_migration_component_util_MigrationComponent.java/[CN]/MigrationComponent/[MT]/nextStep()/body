{
  final Wrappers._T<MigrationManager.MigrationState> lastState=new Wrappers._T<MigrationManager.MigrationState>();
  ModelAccess.instance().runWriteAction(new Runnable(){
    public void run(){
      final Iterable<ScriptApplied> allStepScripts=Sequence.fromIterable(fetchScripts()).toListSequence();
      final Iterable<ScriptApplied> availableScripts=Sequence.fromIterable(allStepScripts).where(new IWhereFilter<ScriptApplied>(){
        public boolean accept(        ScriptApplied it){
          return isAvailable(it);
        }
      }
);
      final ScriptApplied scriptToExecute=Sequence.fromIterable(availableScripts).first();
      if (scriptToExecute != null) {
        lastState.value=new MigrationManager.MigrationState.Step(){
          public String getDescription(){
            return scriptToExecute.toString();
          }
          public boolean execute(){
            final Wrappers._boolean res=new Wrappers._boolean();
            ModelAccess.instance().runWriteActionInCommand(new Runnable(){
              public void run(){
                res.value=executeScript(Sequence.fromIterable(availableScripts).first());
              }
            }
);
            return res.value;
          }
        }
;
      }
 else {
        if (Sequence.fromIterable(allStepScripts).isEmpty()) {
          if (isMigrationRequired()) {
            lastState.value=new MigrationManager.MigrationState.Error(){
              public String getErrorMessage(){
                return "Some of scripts are missing";
              }
              public Throwable cause(){
                return null;
              }
            }
;
          }
 else {
            lastState.value=new MigrationManager.MigrationState.Finished(){
            }
;
          }
        }
 else {
          lastState.value=new MigrationManager.MigrationState.Conflict(){
            public Iterable<ScriptApplied> getConflictingScripts(){
              return allStepScripts;
            }
            public boolean forceExecution(            ScriptApplied scriptApplied){
              final Wrappers._boolean res=new Wrappers._boolean();
              ModelAccess.instance().runWriteActionInCommand(new Runnable(){
                public void run(){
                  res.value=executeScript(Sequence.fromIterable(availableScripts).first());
                }
              }
);
              return res.value;
            }
          }
;
        }
      }
    }
  }
);
  return lastState.value;
}
