{
  ProjectMigration current=next(lastProjectMigration,cleanup);
  while (current != null && !(current.shouldBeExecuted(mpsProject))) {
    current=next(current,cleanup);
  }
  if (current == null) {
    return null;
  }
  lastProjectMigration=current;
  if (current instanceof ProjectMigrationWithOptions) {
    ((ProjectMigrationWithOptions)current).setOptionValues(options);
  }
  final ProjectMigration cc=current;
  return new MigrationManager.MigrationStep(){
    public String getDescription(){
      return cc.getDescription();
    }
    public boolean execute(){
      try {
        ModelAccess.instance().runWriteActionInCommand(new Runnable(){
          public void run(){
            cc.execute(mpsProject);
          }
        }
);
      }
 catch (      Throwable e) {
        if (LOG.isEnabledFor(Level.ERROR)) {
          LOG.error("Could not execute script",e);
        }
        return false;
      }
      return true;
    }
  }
;
}
