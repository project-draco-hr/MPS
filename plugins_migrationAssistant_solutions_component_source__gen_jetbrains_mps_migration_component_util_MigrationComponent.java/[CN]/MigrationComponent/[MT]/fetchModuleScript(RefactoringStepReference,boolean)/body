{
  SModuleReference depModule=scriptReference.getModule();
  final int current=scriptReference.getFromVersion();
  SModel migrationModel=LanguageAspect.MIGRATION.get((Language)depModule.resolve(MPSModuleRepository.getInstance()));
  SNode script=ListSequence.fromList(SModelOperations.roots(migrationModel,MetaAdapterFactory.getInterfaceConcept(0x9882f4ad195546feL,0x826994189e5dbbf2L,0x47bb811da2acc4d6L,"jetbrains.mps.lang.migration.util.structure.IMigrationUnit"))).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return ((Integer)BHReflection.invoke(it,SMethodTrimmedId.create("fromVersion",null,"4uVwhQyFcnl"))) == current;
    }
  }
).first();
  RefactoringStep implementation=((RefactoringStep)BHReflection.invoke(script,SMethodTrimmedId.create("getImplementation",null,"4yRsQKnslQA")));
  return implementation;
}
