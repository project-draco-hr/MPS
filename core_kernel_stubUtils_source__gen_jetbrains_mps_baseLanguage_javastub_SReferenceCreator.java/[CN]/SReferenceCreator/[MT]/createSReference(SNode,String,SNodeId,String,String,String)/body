{
  if (pack.equals(modelLongName)) {
    SNode nodeInSameModel=model.getNode(targetNodeId);
    if (nodeInSameModel != null) {
      return jetbrains.mps.smodel.SReference.create(role,source,model.getReference(),targetNodeId,resolveInfo);
    }
  }
  Collection<org.jetbrains.mps.openapi.model.SModel> possibleModels=myModuleDeps.resolveModel(SModelStereotype.withStereotype(pack,SModelStereotype.JAVA_STUB));
  if (possibleModels.isEmpty()) {
    return jetbrains.mps.smodel.SReference.create(role,source,null,targetNodeId,resolveInfo);
  }
  for (  org.jetbrains.mps.openapi.model.SModel m : possibleModels) {
    if (m == model) {
      continue;
    }
    new SModelLegacy(model).addModelImport(m.getReference(),false);
  }
  if (possibleModels.size() > 1) {
    return DynamicReference.createDynamicReference(role,source,pack,resolveInfo);
  }
  org.jetbrains.mps.openapi.model.SModel targetModel=possibleModels.iterator().next();
  SModuleReference targetModule=targetModel.getModule().getModuleReference();
  SModelReference targetModelStubReference=StubHelper.uidForPackageInStubs(targetModule,pack);
  return jetbrains.mps.smodel.SReference.create(role,source,targetModelStubReference,targetNodeId,resolveInfo);
}
