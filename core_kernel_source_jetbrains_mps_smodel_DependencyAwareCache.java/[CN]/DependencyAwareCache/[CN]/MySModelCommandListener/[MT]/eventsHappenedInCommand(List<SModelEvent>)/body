{
  final List<SNode> changedNodes=new ArrayList<SNode>();
  for (  SModelEvent e : events) {
    e.accept(new SModelEventVisitorAdapter(){
      @Override public void visitRootEvent(      SModelRootEvent event){
        changedNodes.add(event.getRoot());
      }
      @Override public void visitChildEvent(      SModelChildEvent event){
        changedNodes.add(event.getParent());
        changedNodes.add(event.getChild());
      }
      @Override public void visitPropertyEvent(      SModelPropertyEvent event){
        changedNodes.add(event.getNode());
      }
      @Override public void visitReferenceEvent(      SModelReferenceEvent event){
        changedNodes.add(event.getReference().getSourceNode());
      }
    }
);
  }
  for (  SNode changeNode : changedNodes) {
    for (    K key : myRecorder.getDependOn(changeNode)) {
      myCache.remove(key);
    }
  }
}
