{
  addNodeById("2282909602806268543");
  addNodeById("2282909602806423211");
  List<SNode> addition=ListSequence.fromListAndArray(new ArrayList<SNode>(),SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xb02ae39f4c164545L,0x8dfa88df16804e7eL,0x3dd540b968e9fbfL,"jetbrains.mps.lang.smodelTests.structure.Child")),SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xb02ae39f4c164545L,0x8dfa88df16804e7eL,0x3dd540b968e9fbfL,"jetbrains.mps.lang.smodelTests.structure.Child")));
  ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(getNodeById("2282909602806268544"),MetaAdapterFactory.getConcept(0xb02ae39f4c164545L,0x8dfa88df16804e7eL,0x3dd540b968e9fc5L,"jetbrains.mps.lang.smodelTests.structure.Root")),MetaAdapterFactory.getContainmentLink(0xb02ae39f4c164545L,0x8dfa88df16804e7eL,0x3dd540b968e9fc5L,0x3dd540b968e9fc6L,"child_0_n"))).addSequence(ListSequence.fromList(addition));
  Assert.assertTrue(ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(getNodeById("2282909602806268544"),MetaAdapterFactory.getConcept(0xb02ae39f4c164545L,0x8dfa88df16804e7eL,0x3dd540b968e9fc5L,"jetbrains.mps.lang.smodelTests.structure.Root")),MetaAdapterFactory.getContainmentLink(0xb02ae39f4c164545L,0x8dfa88df16804e7eL,0x3dd540b968e9fc5L,0x3dd540b968e9fc6L,"child_0_n"))).containsSequence(ListSequence.fromList(addition)));
}
