{
  this.addNodeById("2282909602806268543");
  this.addNodeById("2282909602806423211");
  Assert.assertTrue(ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(this.getNodeById("2282909602806268544"),"jetbrains.mps.lang.smodelTests.structure.Root"),MetaAdapterFactory.getContainmentLink(new UUID(-5752535300696554171l,-8216104078447456642l),278471160714141637l,278471160714141639l,"child_1_n"))).isNotEmpty());
  SNode toBeRemoved=ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(this.getNodeById("2282909602806268544"),"jetbrains.mps.lang.smodelTests.structure.Root"),MetaAdapterFactory.getContainmentLink(new UUID(-5752535300696554171l,-8216104078447456642l),278471160714141637l,278471160714141639l,"child_1_n"))).first();
  Assert.assertNotNull(toBeRemoved);
  Assert.assertEquals(SNodeOperations.cast(this.getNodeById("2282909602806268544"),"jetbrains.mps.lang.smodelTests.structure.Root"),SNodeOperations.getParent(toBeRemoved));
  ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(this.getNodeById("2282909602806268544"),"jetbrains.mps.lang.smodelTests.structure.Root"),MetaAdapterFactory.getContainmentLink(new UUID(-5752535300696554171l,-8216104078447456642l),278471160714141637l,278471160714141639l,"child_1_n"))).removeElement(toBeRemoved);
  Assert.assertFalse(ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(this.getNodeById("2282909602806268544"),"jetbrains.mps.lang.smodelTests.structure.Root"),MetaAdapterFactory.getContainmentLink(new UUID(-5752535300696554171l,-8216104078447456642l),278471160714141637l,278471160714141639l,"child_1_n"))).contains(toBeRemoved));
  Assert.assertNull(SNodeOperations.getParent(toBeRemoved));
}
