{
  INodeAdapter object=BaseAdapter.fromNode(ruleNode);
  if (!(object instanceof AbstractRule))   return false;
  AbstractRule rule=(AbstractRule)object;
  if (conceptDeclaration == null) {
    return false;
  }
  AbstractConceptDeclaration applicableConcept=getApplicableConcept(rule.getApplicableNode());
  if (applicableConcept == null) {
    return false;
  }
  if (skipExact && conceptDeclaration == applicableConcept) {
    return false;
  }
  return SModelUtil_new.isAssignableConcept(conceptDeclaration,applicableConcept);
}
