{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.scopes.structure.ComeFromExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").references("link").alias("come from","").create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.lang.scopes.structure.CompositeWithParentScopeExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").children(new String[]{"expr"},new boolean[]{false}).alias("composite with","").create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.scopes.structure.ParentScope").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").alias("parent scope","").create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.scopes.structure.UniformScopeProvider").interface_().parents("jetbrains.mps.lang.core.structure.ScopeProvider").create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
