{
  AbstractCellProvider inlineComponent=myAuxiliaryCellProvider;
  myAuxiliaryCellProvider.setSNode(effectiveNode);
  if (inlineComponent instanceof InlineCellProvider) {
    InlineCellProvider inlineComponentProvider=(InlineCellProvider)inlineComponent;
    inlineComponentProvider.setRefNode(node);
    inlineComponentProvider.setLinkDeclaration(myGenuineLinkDeclaration);
  }
  EditorCell editorCell;
  if (myIsAggregation) {
    editorCell=inlineComponent.createEditorCell(context);
  }
 else {
    editorCell=context.createReferentCell(inlineComponent,getSNode(),effectiveNode,myGenuineRole);
    if (SNodeOperations.isInstanceOf(effectiveNode,IDeprecatable.concept)) {
      final SNode conceptDeclaration=SNodeOperations.getConceptDeclaration(node);
      Style inlineStyle=new Style(editorCell){
{
          this.set(StyleAttributes.STRIKE_OUT,IDeprecatable_Behavior.call_isDeprecated_1224609060727(effectiveNode) || IDeprecatable_Behavior.call_isDeprecated_1224609060727(conceptDeclaration));
        }
      }
;
      inlineStyle.apply(editorCell);
    }
  }
  setSemanticNodeToCells(editorCell,node);
  if (myIsCardinality1) {
    if (ReferenceConceptUtil.getCharacteristicReference(node.getConceptDeclarationAdapter()) != null) {
      editorCell.setAction(CellActionType.DELETE,new CellAction_DeleteNode(node));
    }
 else {
      editorCell.setAction(CellActionType.DELETE,new CellAction_Empty());
    }
  }
 else {
    if (myIsAggregation) {
      editorCell.setAction(CellActionType.DELETE,new CellAction_DeleteNode(node));
    }
 else {
      editorCell.setAction(CellActionType.DELETE,new CellAction_DeleteReference(node,myGenuineRole));
    }
  }
  return editorCell;
}
