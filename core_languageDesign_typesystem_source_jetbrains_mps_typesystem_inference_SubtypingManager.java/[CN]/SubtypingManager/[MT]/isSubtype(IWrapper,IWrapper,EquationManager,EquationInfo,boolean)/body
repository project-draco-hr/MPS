{
synchronized (CACHE_ACCESS) {
    return NodeReadAccessCasterInEditor.runReadTransparentAction(new Computable<Boolean>(){
      public Boolean compute(){
        IWrapper subRepresentator=subtype;
        IWrapper superRepresentator=supertype;
        if (equationManager != null) {
          subRepresentator=equationManager.getRepresentatorWrapper(subtype);
          superRepresentator=equationManager.getRepresentatorWrapper(supertype);
        }
        if (subRepresentator == superRepresentator)         return true;
        if (subRepresentator == null || superRepresentator == null)         return false;
        if (superRepresentator.matchesWith(subRepresentator,equationManager,errorInfo)) {
          return true;
        }
        return isStrictSubtype(subRepresentator,superRepresentator,equationManager,errorInfo,isWeak);
      }
    }
);
  }
}
