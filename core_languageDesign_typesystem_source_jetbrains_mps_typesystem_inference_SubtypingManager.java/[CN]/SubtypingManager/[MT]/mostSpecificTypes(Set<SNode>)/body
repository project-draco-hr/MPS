{
  Set<SNode> residualNodes=new HashSet<SNode>(nodes);
  while (residualNodes.size() > 1) {
    List<SNode> nodesToIterate=new ArrayList<SNode>(residualNodes);
    boolean wasChange=false;
    int size=nodesToIterate.size();
    for (int i=0; i < size; i++) {
      for (int j=i + 1; j < size; j++) {
        SNode node1=nodesToIterate.get(i);
        SNode node2=nodesToIterate.get(j);
        if (node1 == null || node2 == null) {
          residualNodes.remove(null);
        }
        if (isSubtype(node1,node2)) {
          residualNodes.remove(node2);
          wasChange=true;
        }
 else         if (isSubtype(node2,node1)) {
          residualNodes.remove(node1);
          wasChange=true;
        }
      }
    }
    if (!wasChange) {
      break;
    }
  }
  return residualNodes;
}
