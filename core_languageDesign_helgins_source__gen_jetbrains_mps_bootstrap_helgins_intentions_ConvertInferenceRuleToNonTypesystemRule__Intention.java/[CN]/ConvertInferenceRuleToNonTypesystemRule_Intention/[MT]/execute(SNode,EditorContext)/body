{
  SNode nonTypesystemRule=SModelOperations.createNewRootNode(SNodeOperations.getModel(node),"jetbrains.mps.bootstrap.helgins.structure.NonTypesystemRule",null);
  SPropertyOperations.set(nonTypesystemRule,"overrides","" + (SPropertyOperations.getBoolean(node,"overrides")));
  SPropertyOperations.set(nonTypesystemRule,"name",SPropertyOperations.getString(node,"name"));
  SLinkOperations.setTarget(nonTypesystemRule,"body",SNodeOperations.copyNode(SLinkOperations.getTarget(node,"body",true)),true);
  SLinkOperations.setTarget(nonTypesystemRule,"applicableNode",SNodeOperations.copyNode(SLinkOperations.getTarget(node,"applicableNode",true)),true);
  for (  SNode applicableNodeReference : SNodeOperations.getDescendants(SLinkOperations.getTarget(nonTypesystemRule,"body",true),"jetbrains.mps.bootstrap.helgins.structure.ApplicableNodeReference",false)) {
    if (SLinkOperations.getTarget(applicableNodeReference,"applicableNode",false) == SLinkOperations.getTarget(node,"applicableNode",true)) {
      SLinkOperations.setTarget(applicableNodeReference,"applicableNode",SLinkOperations.getTarget(nonTypesystemRule,"applicableNode",true),false);
    }
  }
  SNodeOperations.deleteNode(node);
  EditorsPane editorsPane=((EditorsPane)editorContext.getOperationContext().getComponent(EditorsPane.class));
  editorsPane.openEditor(nonTypesystemRule,editorContext.getOperationContext());
}
