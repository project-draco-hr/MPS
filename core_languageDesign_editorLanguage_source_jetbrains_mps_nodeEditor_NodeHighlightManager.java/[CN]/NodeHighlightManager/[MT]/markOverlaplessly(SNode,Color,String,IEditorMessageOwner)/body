{
  if (nodeToHighlight == null)   return;
  SNode node=nodeToHighlight;
  while (node != null) {
    if (color.equals(this.getColorFor(node)))     return;
    node=node.getParent();
  }
  Set<IEditorMessage> messagesToRemove=new HashSet<IEditorMessage>();
  for (  SNode childNode : nodeToHighlight.getDescendants()) {
    for (    IEditorMessage msg : myMessages()) {
      if (msg.getNode() == childNode && msg.getColor().equals(color))       messagesToRemove.add(msg);
    }
  }
  for (  IEditorMessage msg : messagesToRemove) {
    Set<IEditorMessage> msgs=this.myMessages.get(msg.getOwner());
    if (msgs != null) {
      msgs.remove(msg);
    }
  }
  for (  IEditorMessage msg : messagesToRemove) {
    myEditor.getMessagesGutter().remove(msg);
  }
  this.mark(nodeToHighlight,color,messageText,owner);
}
