{
  List<SNode> declarations=_context.getAllOutputNodesByInputNodeAndMappingLabel(_context.getNode(),"coercedPattern");
  SNode method=SNodeOperations.getAncestorWhereConceptInList(_context.getOutputNode(),new String[]{"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration","jetbrains.mps.baseLanguage.structure.ConceptFunction"},false,false);
  for (  SNode variableDeclaration : declarations) {
    if (ListSequence.fromList(SNodeOperations.getDescendants(method,"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration",false,new String[]{})).contains(variableDeclaration)) {
      return variableDeclaration;
    }
  }
  return null;
}
