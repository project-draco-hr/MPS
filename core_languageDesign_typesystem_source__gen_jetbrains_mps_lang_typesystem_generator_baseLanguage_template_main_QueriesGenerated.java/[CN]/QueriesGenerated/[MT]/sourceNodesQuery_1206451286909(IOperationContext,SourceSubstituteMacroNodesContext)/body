{
  List<SNode> result=ListSequence.fromList(new ArrayList<SNode>());
  for (  SNode child : SNodeOperations.getDescendants(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(_context.getNode(),"jetbrains.mps.lang.typesystem.structure.MatchStatementItem"),"condition",true),"jetbrains.mps.lang.typesystem.structure.PatternCondition"),"pattern",true),null,false,new String[]{})) {
    if (SNodeOperations.isInstanceOf(child,"jetbrains.mps.lang.quotation.structure.AbstractAntiquotation")) {
      ListSequence.fromList(result).addElement(SLinkOperations.getTarget(SNodeOperations.cast(child,"jetbrains.mps.lang.quotation.structure.AbstractAntiquotation"),"expression",true));
    }
  }
  return result;
}
