{
  List<SNode> result=ListSequence.<SNode>fromArray();
  for (  SNode child : SNodeOperations.getDescendants(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_context.getNode(),"pattern",true),"jetbrains.mps.lang.typesystem.structure.PatternCondition"),"pattern",true),null,false)) {
    if (SNodeOperations.isInstanceOf(child,"jetbrains.mps.lang.quotation.structure.AbstractAntiquotation")) {
      ListSequence.fromList(result).addElement(SLinkOperations.getTarget(SNodeOperations.cast(child,"jetbrains.mps.lang.quotation.structure.AbstractAntiquotation"),"expression",true));
    }
  }
  return result;
}
