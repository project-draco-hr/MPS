{
  List<UnitPositionInfo> resultList=ListSequence.fromList(new ArrayList<UnitPositionInfo>());
  for (  Set<UnitPositionInfo> val : MapSequence.fromMap(this.myRootToUnitPositions).values()) {
    for (    UnitPositionInfo element : val) {
      if (ObjectUtils.equals(element.getFileName(),file) && element.getStartLine() <= line && line <= element.getEndLine()) {
        ListSequence.fromList(resultList).addElement(element);
      }
    }
  }
  if (ListSequence.fromList(resultList).isEmpty()) {
    return null;
  }
  Iterable<UnitPositionInfo> sorted=ListSequence.fromList(resultList).sort(new ISelector<UnitPositionInfo,Comparable<?>>(){
    public Comparable<?> select(    UnitPositionInfo it){
      return it;
    }
  }
,true);
  UnitPositionInfo firstPositionInfo=Sequence.fromIterable(sorted).first();
  return model.getNodeById(firstPositionInfo.getNodeId());
}
