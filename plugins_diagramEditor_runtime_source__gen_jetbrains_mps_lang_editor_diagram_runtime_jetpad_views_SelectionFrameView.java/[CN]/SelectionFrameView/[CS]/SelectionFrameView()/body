{
  new Mapper<SelectionFrameView,SelectionFrameView>(this,this){
    @Override protected void registerSynchronizers(    Mapper.SynchronizersConfiguration configuration){
      super.registerSynchronizers(configuration);
      configuration.add(Synchronizers.forConstantRole(this,SelectionFrameView.this,children(),new MapperFactory<SelectionFrameView,View>(){
        public Mapper<? extends SelectionFrameView,? extends View> createMapper(        SelectionFrameView selectionView){
          return new Mapper<SelectionFrameView,PolyLineView>(selectionView,new NonFocusablePolyLineView()){
            @Override protected void registerSynchronizers(            Mapper.SynchronizersConfiguration configuration){
              super.registerSynchronizers(configuration);
              configuration.add(Synchronizers.forProperty(color,getTarget().color()));
              configuration.add(Synchronizers.forProperties(lineWidth,getTarget().width()));
              configuration.add(Synchronizers.forProperty(frameRectangle,new Runnable(){
                public void run(){
                  updateBorderView(getTarget(),frameRectangle.get());
                }
              }
));
            }
          }
;
        }
      }
));
    }
  }
.attachRoot();
}
