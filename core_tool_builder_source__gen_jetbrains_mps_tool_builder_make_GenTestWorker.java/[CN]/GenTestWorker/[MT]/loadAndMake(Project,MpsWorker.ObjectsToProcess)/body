{
  project.getModelAccess().runWriteAction(new Runnable(){
    @Override public void run(){
      LibraryInitializer.getInstance().update();
    }
  }
);
  ModelAccess.instance().runReadAction(new Computable<MPSCompilationResult>(){
    public MPSCompilationResult compute(){
      return new ModuleMaker().make(go.getModules(),new EmptyProgressMonitor(){
        @Override public void step(        String text){
        }
        @Override public void start(        String taskName,        int work){
        }
      }
,myJavaCompilerOptions);
    }
  }
);
  ModelAccess.instance().runWriteAction(new Runnable(){
    public void run(){
      ClassLoaderManager.getInstance().reloadModules(go.getModules());
      for (      SModule m : MPSModuleRepository.getInstance().getModules()) {
        if (!((m instanceof AbstractModule))) {
          continue;
        }
        ((AbstractModule)m).updateModelsSet();
      }
    }
  }
);
}
