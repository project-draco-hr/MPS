{
  Color foreground;
  if (selected) {
    foreground=UIManager.getColor("Tree.selectionForeground");
  }
 else {
    foreground=UIManager.getColor("Tree.textForeground");
  }
  myMainTextLabel.setForeground(foreground);
  myAdditionalTextLabel.setForeground(Color.GRAY);
  Icon icon=null;
  String text=value.toString();
  String additionalText=null;
  if (value instanceof MPSTreeNode) {
    MPSTreeNode treeNode=(MPSTreeNode)value;
    icon=treeNode.getIcon(expanded);
    additionalText=treeNode.getAdditionalText();
    Font newFont=tree.getFont().deriveFont(treeNode.getFontStyle());
    myMainTextLabel.setFont(newFont);
    myAdditionalTextLabel.setFont(newFont);
  }
 else {
    myMainTextLabel.setFont(tree.getFont());
    myAdditionalTextLabel.setFont(tree.getFont());
  }
  myMainTextLabel.setText(text);
  if (additionalText != null) {
    myAdditionalTextLabel.setText(" (" + additionalText + ")");
  }
 else {
    myAdditionalTextLabel.setText("");
  }
  if (icon == null) {
    if (leaf) {
      icon=UIManager.getIcon("Tree.leafIcon");
    }
 else     if (expanded) {
      icon=UIManager.getIcon(UIManager.getIcon("Tree.openIcon"));
    }
 else {
      icon=UIManager.getIcon(UIManager.getIcon("Tree.closedIcon"));
    }
  }
  myMainTextLabel.setIcon(icon);
  mySelected=selected;
  myHasFocus=hasFocus;
  return this;
}
