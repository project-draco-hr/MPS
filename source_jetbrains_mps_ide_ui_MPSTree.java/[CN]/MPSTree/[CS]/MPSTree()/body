{
  largeModel=true;
  ToolTipManager.sharedInstance().registerComponent(this);
  setCellRenderer(new MPSTreeCellRenderer());
  addTreeWillExpandListener(new TreeWillExpandListener(){
    public void treeWillExpand(    TreeExpansionEvent event) throws ExpandVetoException {
      TreePath path=event.getPath();
      Object node=path.getLastPathComponent();
      MPSTreeNode treeNode=(MPSTreeNode)node;
      if (!treeNode.isInitialized()) {
        treeNode.init();
      }
    }
    public void treeWillCollapse(    TreeExpansionEvent event) throws ExpandVetoException {
    }
  }
);
  addMouseListener(new MouseAdapter(){
    public void mousePressed(    MouseEvent e){
      if (e.isPopupTrigger())       showPopup(e);
    }
    public void mouseClicked(    MouseEvent e){
      TreePath path=getPathForLocation(e.getX(),e.getY());
      if (path == null)       return;
      if (path.getLastPathComponent() instanceof MPSTreeNode && e.getClickCount() == 2) {
        setSelectionPath(path);
        MPSTreeNode node=(MPSTreeNode)path.getLastPathComponent();
        node.doubleClick();
        e.consume();
      }
    }
    public void mouseReleased(    MouseEvent e){
      if (e.isPopupTrigger())       showPopup(e);
    }
    public void mouseEntered(    MouseEvent e){
      myTooltipManagerRecentInitialDelay=ToolTipManager.sharedInstance().getInitialDelay();
      ToolTipManager.sharedInstance().setInitialDelay(10);
    }
    public void mouseExited(    MouseEvent e){
      ToolTipManager.sharedInstance().setInitialDelay(myTooltipManagerRecentInitialDelay);
    }
  }
);
  addKeyListener(new KeyAdapter(){
    public void keyPressed(    KeyEvent e){
      TreePath[] paths=getSelectionPaths();
      TreePath selPath=getSelectionPath();
      if (selPath == null)       return;
      MPSTreeNode selNode=(MPSTreeNode)selPath.getLastPathComponent();
      if (selNode == null)       return;
      List<MPSTreeNode> nodes=new ArrayList<MPSTreeNode>();
      for (      TreePath path : paths) {
        MPSTreeNode node=(MPSTreeNode)path.getLastPathComponent();
        nodes.add(node);
        node.keyPressed(e);
      }
      Pair pair=new Pair(KeyStroke.getKeyStrokeForEvent(e),selNode.getClass());
      final MPSAction action=myKeyStrokesToActionsMap.get(pair);
      if (action != null) {
        final ActionContext context=getActionContext(selNode,nodes);
        if (action.executeInsideCommand()) {
          CommandProcessor.instance().executeCommand(new Runnable(){
            public void run(){
              action.execute(context);
            }
          }
);
        }
 else {
          action.execute(context);
        }
      }
    }
  }
);
}
