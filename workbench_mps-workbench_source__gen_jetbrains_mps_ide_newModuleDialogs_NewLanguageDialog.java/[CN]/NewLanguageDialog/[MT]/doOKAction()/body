{
  if (!(check())) {
    return;
  }
  super.doOKAction();
  NewModuleUtil.runModuleCreation(ProjectHelper.toIdeaProject(myProject),new _FunctionTypes._void_P0_E0(){
    public void invoke(){
      Language language=NewModuleUtil.createLanguage(myLanguageSettings.getLanguageName(),myLanguageSettings.getLanguageLocation(),(MPSProject)myProject);
      ((StandaloneMPSProject)myProject).setFolderFor(language,myVirtualFolder);
      try {
        if (myLanguageSettings.isRuntimeSolutionNeeded()) {
          Solution runtimeSolution=NewModuleUtil.createRuntimeSolution(language,myLanguageSettings.getLanguageLocation(),(MPSProject)myProject);
          ((StandaloneMPSProject)myProject).setFolderFor(runtimeSolution,myVirtualFolder);
        }
        if (myLanguageSettings.isSandboxSolutionNeeded()) {
          Solution sandboxSolution=NewModuleUtil.createSandboxSolution(language,myLanguageSettings.getLanguageLocation(),(MPSProject)myProject);
          ((StandaloneMPSProject)myProject).setFolderFor(sandboxSolution,myVirtualFolder);
        }
      }
 catch (      IOException e) {
        LOG.error("Cannot create runtime / sandbox module",e);
      }
      myResult=language;
    }
  }
);
}
