{
  final ProcessEvent[] failed=new ProcessEvent[1];
  final boolean[] printed=new boolean[1];
  try {
    final CountDownLatch countDown=new CountDownLatch(1);
    OutputRedirector.redirect(process,new ProcessAdapter(){
      @Override public void processTerminated(      ProcessEvent event){
        countDown.countDown();
      }
      @Override public void onTextAvailable(      ProcessEvent event,      Key key){
        if (ProcessOutputTypes.STDERR.equals(key)) {
          if (neq_849b2c_a0a0a0b0a1a2a2a3a(event.getText(),expectedSysErr)) {
            failed[0]=event;
          }
 else {
            printed[0]=true;
          }
        }
 else         if (!(ProcessOutputTypes.SYSTEM.equals(key))) {
          failed[0]=event;
        }
      }
    }
);
    process.startNotify();
    countDown.await();
    if (failed[0] != null) {
      Assert.fail(failed[0].getText());
    }
    if (!(printed[0])) {
      Assert.fail("Did not print required message!");
    }
  }
 catch (  InterruptedException e) {
    e.printStackTrace();
    Assert.fail(e.getMessage());
  }
}
