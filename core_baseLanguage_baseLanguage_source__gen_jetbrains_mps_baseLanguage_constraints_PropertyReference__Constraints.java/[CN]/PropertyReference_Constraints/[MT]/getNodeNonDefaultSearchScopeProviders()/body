{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("property",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      if (!(SNodeOperations.isInstanceOf(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.DotExpression"))) {
        return null;
      }
      SNode opClassifier=DotExpression_Behavior.call_getClassifier_1213877410697(SNodeOperations.cast(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.DotExpression"));
      if (opClassifier == null) {
        return null;
      }
      List<SNode> resultProperties=new ArrayList<SNode>();
      List<SNode> classifiers=new ClassifierAndSuperClassifiersScope(opClassifier).getClassifiers();
      for (      SNode classifier : ListSequence.fromList(classifiers)) {
        if (SNodeOperations.isInstanceOf(classifier,"jetbrains.mps.baseLanguage.structure.ClassConcept")) {
          for (          SNode property : ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(classifier,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"property",true))) {
            if (VisibilityUtil.isVisible(((_context.getReferenceNode() == null) ? _context.getEnclosingNode() : _context.getReferenceNode()),property)) {
              ListSequence.fromList(resultProperties).addElement(property);
            }
          }
        }
      }
      return resultProperties;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c895902c1(jetbrains.mps.baseLanguage.constraints)","1213104859432");
    }
  }
);
  return result;
}
