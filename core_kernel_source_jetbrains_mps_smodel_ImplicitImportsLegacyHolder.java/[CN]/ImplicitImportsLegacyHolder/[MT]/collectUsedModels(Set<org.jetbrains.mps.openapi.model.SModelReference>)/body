{
  ModelEnvironmentInfo env=PersistenceRegistry.getInstance().getModelEnvironmentInfo();
  for (  org.jetbrains.mps.openapi.model.SNode node : myModel.allNodes()) {
    SNodeReference ptrConcept=env.getConceptId(node);
    if (ptrConcept == null) {
      LOG.warn("concept not found for node " + SNodeOperations.getDebugText(node));
    }
 else {
      result.add(ptrConcept.getModelReference());
    }
    for (    String propname : node.getPropertyNames()) {
      SNodeReference ptrDecl=env.getPropertyId(node,propname);
      if (ptrDecl == null) {
        LOG.warn("undeclared property: '" + propname + "' in node "+ SNodeOperations.getDebugText(node));
      }
 else {
        result.add(ptrDecl.getModelReference());
      }
    }
    for (    SReference ref : node.getReferences()) {
      if (ref.getTargetSModelReference() != null) {
        result.add(ref.getTargetSModelReference());
      }
      SNodeReference ptrDecl=env.getReferenceRoleId(ref);
      if (ptrDecl == null) {
        LOG.warn("undeclared link role: '" + ref.getRole() + "' in node "+ SNodeOperations.getDebugText(node));
      }
 else {
        result.add(ptrDecl.getModelReference());
      }
    }
    for (    org.jetbrains.mps.openapi.model.SNode child : node.getChildren()) {
      SNodeReference ptrDecl=env.getNodeRoleId(child);
      if (ptrDecl == null) {
        LOG.warn("undeclared child role: '" + child.getContainmentLink().getRoleName() + "' in node "+ SNodeOperations.getDebugText(node));
      }
 else {
        result.add(ptrDecl.getModelReference());
      }
    }
  }
  return result;
}
