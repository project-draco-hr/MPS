{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.lang.smodelTests.structure.Child","jetbrains.mps.lang.smodelTests.structure.NamedConcept",false,new String[]{"jetbrains.mps.lang.smodelTests.structure.NamedConcept"},new String[]{},new String[]{});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.lang.smodelTests.structure.ChildSubConcept","jetbrains.mps.lang.smodelTests.structure.Child",false,new String[]{"jetbrains.mps.lang.smodelTests.structure.Child"},new String[]{},new String[]{});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.lang.smodelTests.structure.GrandChild","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.lang.smodelTests.structure.NamedConcept","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"name"},new String[]{});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.lang.smodelTests.structure.ReferenceContainer","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{"root","leftChild","rightChild"});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.lang.smodelTests.structure.ReferenceContainerSubConcept","jetbrains.mps.lang.smodelTests.structure.ReferenceContainer",false,new String[]{"jetbrains.mps.lang.smodelTests.structure.ReferenceContainer"},new String[]{},new String[]{"specializedRightChild"});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.lang.smodelTests.structure.Root","jetbrains.mps.lang.smodelTests.structure.NamedConcept",false,new String[]{"jetbrains.mps.lang.smodelTests.structure.NamedConcept"},new String[]{},new String[]{});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
