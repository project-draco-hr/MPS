{
  DefaultActionGroup result=new DefaultActionGroup("Cell actions",true);
  EditorCell cell=getSelectedCell();
  final EditorContext editorContext=createEditorContextForActions();
  for (  final EditorCellKeyMapAction action : KeyMapUtil.getRegisteredActions(cell,editorContext)) {
    try {
      if (action.isShownInPopupMenu() && action.canExecute(null,editorContext)) {
        BaseAction mpsAction=new BaseAction("" + action.getDescriptionText()){
          private EditorCellKeyMapAction myAction=action;
{
            String keyStroke=action.getKeyStroke();
            if (keyStroke != null && keyStroke.length() != 0) {
              KeyboardShortcut shortcut=new KeyboardShortcut(KeyStroke.getKeyStroke(keyStroke),null);
              KeymapManager.getInstance().getKeymap(KeymapManager.DEFAULT_IDEA_KEYMAP).addShortcut(getActionId(),shortcut);
            }
          }
          protected void doExecute(          AnActionEvent e,          Map<String,Object> _params){
            try {
              myAction.execute(null,editorContext);
            }
 catch (            Throwable t) {
              LOG.error(t);
            }
          }
        }
;
        mpsAction.addPlace(ActionPlace.EDITOR);
        result.add(mpsAction);
      }
    }
 catch (    Throwable t) {
      LOG.error(t);
    }
  }
  return result;
}
