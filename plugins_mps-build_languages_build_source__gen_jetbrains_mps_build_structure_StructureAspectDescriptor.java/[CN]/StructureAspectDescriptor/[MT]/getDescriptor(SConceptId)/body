{
switch (myConceptIndex.index(id)) {
case LanguageConceptSwitch.BuildAspect:
    return myConceptBuildAspect;
case LanguageConceptSwitch.BuildCompositePath:
  return myConceptBuildCompositePath;
case LanguageConceptSwitch.BuildCustomWorkflow:
return myConceptBuildCustomWorkflow;
case LanguageConceptSwitch.BuildDependency:
return myConceptBuildDependency;
case LanguageConceptSwitch.BuildExternalDependency:
return myConceptBuildExternalDependency;
case LanguageConceptSwitch.BuildExternalLayout:
return myConceptBuildExternalLayout;
case LanguageConceptSwitch.BuildExternalLayoutDependency:
return myConceptBuildExternalLayoutDependency;
case LanguageConceptSwitch.BuildFileExcludeSelector:
return myConceptBuildFileExcludeSelector;
case LanguageConceptSwitch.BuildFileIncludeSelector:
return myConceptBuildFileIncludeSelector;
case LanguageConceptSwitch.BuildFileIncludesSelector:
return myConceptBuildFileIncludesSelector;
case LanguageConceptSwitch.BuildFileSelector:
return myConceptBuildFileSelector;
case LanguageConceptSwitch.BuildFileSelectorInAttribute:
return myConceptBuildFileSelectorInAttribute;
case LanguageConceptSwitch.BuildFolderMacro:
return myConceptBuildFolderMacro;
case LanguageConceptSwitch.BuildInputFileSet:
return myConceptBuildInputFileSet;
case LanguageConceptSwitch.BuildInputFiles:
return myConceptBuildInputFiles;
case LanguageConceptSwitch.BuildInputFolderSet:
return myConceptBuildInputFolderSet;
case LanguageConceptSwitch.BuildInputFolders:
return myConceptBuildInputFolders;
case LanguageConceptSwitch.BuildInputResourceSet:
return myConceptBuildInputResourceSet;
case LanguageConceptSwitch.BuildInputSingleFile:
return myConceptBuildInputSingleFile;
case LanguageConceptSwitch.BuildInputSingleFolder:
return myConceptBuildInputSingleFolder;
case LanguageConceptSwitch.BuildJavaPlugin:
return myConceptBuildJavaPlugin;
case LanguageConceptSwitch.BuildLayout:
return myConceptBuildLayout;
case LanguageConceptSwitch.BuildLayout_AbstractContainer:
return myConceptBuildLayout_AbstractContainer;
case LanguageConceptSwitch.BuildLayout_AbstractCopy:
return myConceptBuildLayout_AbstractCopy;
case LanguageConceptSwitch.BuildLayout_Comment:
return myConceptBuildLayout_Comment;
case LanguageConceptSwitch.BuildLayout_CompileOutputOf:
return myConceptBuildLayout_CompileOutputOf;
case LanguageConceptSwitch.BuildLayout_Container:
return myConceptBuildLayout_Container;
case LanguageConceptSwitch.BuildLayout_ContainerAcceptingFileSet:
return myConceptBuildLayout_ContainerAcceptingFileSet;
case LanguageConceptSwitch.BuildLayout_Copy:
return myConceptBuildLayout_Copy;
case LanguageConceptSwitch.BuildLayout_CopyFilter:
return myConceptBuildLayout_CopyFilter;
case LanguageConceptSwitch.BuildLayout_CopyFilterFixCRLF:
return myConceptBuildLayout_CopyFilterFixCRLF;
case LanguageConceptSwitch.BuildLayout_CopyFilterReplaceRegex:
return myConceptBuildLayout_CopyFilterReplaceRegex;
case LanguageConceptSwitch.BuildLayout_CopyFilterReplaceTokens:
return myConceptBuildLayout_CopyFilterReplaceTokens;
case LanguageConceptSwitch.BuildLayout_CopyFlattenMapper:
return myConceptBuildLayout_CopyFlattenMapper;
case LanguageConceptSwitch.BuildLayout_CopyGlobMapper:
return myConceptBuildLayout_CopyGlobMapper;
case LanguageConceptSwitch.BuildLayout_CopyHandler:
return myConceptBuildLayout_CopyHandler;
case LanguageConceptSwitch.BuildLayout_CopyMapper:
return myConceptBuildLayout_CopyMapper;
case LanguageConceptSwitch.BuildLayout_CopyParameter:
return myConceptBuildLayout_CopyParameter;
case LanguageConceptSwitch.BuildLayout_CopyProcessor:
return myConceptBuildLayout_CopyProcessor;
case LanguageConceptSwitch.BuildLayout_CopyRegexMapper:
return myConceptBuildLayout_CopyRegexMapper;
case LanguageConceptSwitch.BuildLayout_CustomCopy:
return myConceptBuildLayout_CustomCopy;
case LanguageConceptSwitch.BuildLayout_EchoProperties:
return myConceptBuildLayout_EchoProperties;
case LanguageConceptSwitch.BuildLayout_EchoPropertyEntry:
return myConceptBuildLayout_EchoPropertyEntry;
case LanguageConceptSwitch.BuildLayout_EchoXml:
return myConceptBuildLayout_EchoXml;
case LanguageConceptSwitch.BuildLayout_ExportAsJavaLibrary:
return myConceptBuildLayout_ExportAsJavaLibrary;
case LanguageConceptSwitch.BuildLayout_File:
return myConceptBuildLayout_File;
case LanguageConceptSwitch.BuildLayout_FileSet:
return myConceptBuildLayout_FileSet;
case LanguageConceptSwitch.BuildLayout_FileStub:
return myConceptBuildLayout_FileStub;
case LanguageConceptSwitch.BuildLayout_Filemode:
return myConceptBuildLayout_Filemode;
case LanguageConceptSwitch.BuildLayout_Files:
return myConceptBuildLayout_Files;
case LanguageConceptSwitch.BuildLayout_FilesOf:
return myConceptBuildLayout_FilesOf;
case LanguageConceptSwitch.BuildLayout_Folder:
return myConceptBuildLayout_Folder;
case LanguageConceptSwitch.BuildLayout_Import:
return myConceptBuildLayout_Import;
case LanguageConceptSwitch.BuildLayout_ImportContent:
return myConceptBuildLayout_ImportContent;
case LanguageConceptSwitch.BuildLayout_InJarNode:
return myConceptBuildLayout_InJarNode;
case LanguageConceptSwitch.BuildLayout_Jar:
return myConceptBuildLayout_Jar;
case LanguageConceptSwitch.BuildLayout_JarManifest:
return myConceptBuildLayout_JarManifest;
case LanguageConceptSwitch.BuildLayout_JarManifest_Attribute:
return myConceptBuildLayout_JarManifest_Attribute;
case LanguageConceptSwitch.BuildLayout_JarManifest_Part:
return myConceptBuildLayout_JarManifest_Part;
case LanguageConceptSwitch.BuildLayout_JarManifest_Section:
return myConceptBuildLayout_JarManifest_Section;
case LanguageConceptSwitch.BuildLayout_NamedContainer:
return myConceptBuildLayout_NamedContainer;
case LanguageConceptSwitch.BuildLayout_Node:
return myConceptBuildLayout_Node;
case LanguageConceptSwitch.BuildLayout_PathElement:
return myConceptBuildLayout_PathElement;
case LanguageConceptSwitch.BuildLayout_PureNode:
return myConceptBuildLayout_PureNode;
case LanguageConceptSwitch.BuildLayout_Tar:
return myConceptBuildLayout_Tar;
case LanguageConceptSwitch.BuildLayout_TransparentContainer:
return myConceptBuildLayout_TransparentContainer;
case LanguageConceptSwitch.BuildLayout_War:
return myConceptBuildLayout_War;
case LanguageConceptSwitch.BuildLayout_Zip:
return myConceptBuildLayout_Zip;
case LanguageConceptSwitch.BuildMacro:
return myConceptBuildMacro;
case LanguageConceptSwitch.BuildNamedLayout:
return myConceptBuildNamedLayout;
case LanguageConceptSwitch.BuildPlugin:
return myConceptBuildPlugin;
case LanguageConceptSwitch.BuildProject:
return myConceptBuildProject;
case LanguageConceptSwitch.BuildProjectDependency:
return myConceptBuildProjectDependency;
case LanguageConceptSwitch.BuildProjectPart:
return myConceptBuildProjectPart;
case LanguageConceptSwitch.BuildRelativePath:
return myConceptBuildRelativePath;
case LanguageConceptSwitch.BuildSourceArchiveRelativePath:
return myConceptBuildSourceArchiveRelativePath;
case LanguageConceptSwitch.BuildSourceMacroRelativePath:
return myConceptBuildSourceMacroRelativePath;
case LanguageConceptSwitch.BuildSourcePath:
return myConceptBuildSourcePath;
case LanguageConceptSwitch.BuildSourceProjectRelativePath:
return myConceptBuildSourceProjectRelativePath;
case LanguageConceptSwitch.BuildSourceSetContainer:
return myConceptBuildSourceSetContainer;
case LanguageConceptSwitch.BuildSource_CompilablePart:
return myConceptBuildSource_CompilablePart;
case LanguageConceptSwitch.BuildSource_FilesetProjectPart:
return myConceptBuildSource_FilesetProjectPart;
case LanguageConceptSwitch.BuildSource_JavaCP:
return myConceptBuildSource_JavaCP;
case LanguageConceptSwitch.BuildSource_JavaClassFolder:
return myConceptBuildSource_JavaClassFolder;
case LanguageConceptSwitch.BuildSource_JavaContentFolder:
return myConceptBuildSource_JavaContentFolder;
case LanguageConceptSwitch.BuildSource_JavaContentRoot:
return myConceptBuildSource_JavaContentRoot;
case LanguageConceptSwitch.BuildSource_JavaDependency:
return myConceptBuildSource_JavaDependency;
case LanguageConceptSwitch.BuildSource_JavaDependencyExternalJar:
return myConceptBuildSource_JavaDependencyExternalJar;
case LanguageConceptSwitch.BuildSource_JavaDependencyExternalJarInFolder:
return myConceptBuildSource_JavaDependencyExternalJarInFolder;
case LanguageConceptSwitch.BuildSource_JavaDependencyFileset:
return myConceptBuildSource_JavaDependencyFileset;
case LanguageConceptSwitch.BuildSource_JavaDependencyJar:
return myConceptBuildSource_JavaDependencyJar;
case LanguageConceptSwitch.BuildSource_JavaDependencyLibrary:
return myConceptBuildSource_JavaDependencyLibrary;
case LanguageConceptSwitch.BuildSource_JavaDependencyModule:
return myConceptBuildSource_JavaDependencyModule;
case LanguageConceptSwitch.BuildSource_JavaExternalJarFolderRef:
return myConceptBuildSource_JavaExternalJarFolderRef;
case LanguageConceptSwitch.BuildSource_JavaExternalJarRef:
return myConceptBuildSource_JavaExternalJarRef;
case LanguageConceptSwitch.BuildSource_JavaFiles:
return myConceptBuildSource_JavaFiles;
case LanguageConceptSwitch.BuildSource_JavaJar:
return myConceptBuildSource_JavaJar;
case LanguageConceptSwitch.BuildSource_JavaJars:
return myConceptBuildSource_JavaJars;
case LanguageConceptSwitch.BuildSource_JavaLibrary:
return myConceptBuildSource_JavaLibrary;
case LanguageConceptSwitch.BuildSource_JavaLibraryCP:
return myConceptBuildSource_JavaLibraryCP;
case LanguageConceptSwitch.BuildSource_JavaLibraryElement:
return myConceptBuildSource_JavaLibraryElement;
case LanguageConceptSwitch.BuildSource_JavaLibraryExternalJar:
return myConceptBuildSource_JavaLibraryExternalJar;
case LanguageConceptSwitch.BuildSource_JavaLibraryExternalJarFolder:
return myConceptBuildSource_JavaLibraryExternalJarFolder;
case LanguageConceptSwitch.BuildSource_JavaModule:
return myConceptBuildSource_JavaModule;
case LanguageConceptSwitch.BuildSource_JavaModuleOptions:
return myConceptBuildSource_JavaModuleOptions;
case LanguageConceptSwitch.BuildSource_JavaOptions:
return myConceptBuildSource_JavaOptions;
case LanguageConceptSwitch.BuildSource_JavaResources:
return myConceptBuildSource_JavaResources;
case LanguageConceptSwitch.BuildSource_JavaSources:
return myConceptBuildSource_JavaSources;
case LanguageConceptSwitch.BuildSource_SingleFile:
return myConceptBuildSource_SingleFile;
case LanguageConceptSwitch.BuildSource_SingleFolder:
return myConceptBuildSource_SingleFolder;
case LanguageConceptSwitch.BuildString:
return myConceptBuildString;
case LanguageConceptSwitch.BuildStringContainer:
return myConceptBuildStringContainer;
case LanguageConceptSwitch.BuildStringNotEmpty:
return myConceptBuildStringNotEmpty;
case LanguageConceptSwitch.BuildStringPart:
return myConceptBuildStringPart;
case LanguageConceptSwitch.BuildTextStringPart:
return myConceptBuildTextStringPart;
case LanguageConceptSwitch.BuildVarRefStringPart:
return myConceptBuildVarRefStringPart;
case LanguageConceptSwitch.BuildVariableMacro:
return myConceptBuildVariableMacro;
case LanguageConceptSwitch.BuildVariableMacroInitValue:
return myConceptBuildVariableMacroInitValue;
case LanguageConceptSwitch.BuildVariableMacroInitWithDate:
return myConceptBuildVariableMacroInitWithDate;
case LanguageConceptSwitch.BuildVariableMacroInitWithFileContent:
return myConceptBuildVariableMacroInitWithFileContent;
case LanguageConceptSwitch.BuildVariableMacroInitWithString:
return myConceptBuildVariableMacroInitWithString;
case LanguageConceptSwitch.BuildVariableMacroInitWithValueFromFile:
return myConceptBuildVariableMacroInitWithValueFromFile;
case LanguageConceptSwitch.GeneratorInternal_BuildSource_Folder:
return myConceptGeneratorInternal_BuildSource_Folder;
case LanguageConceptSwitch.GeneratorInternal_BuildSource_JarFolder:
return myConceptGeneratorInternal_BuildSource_JarFolder;
case LanguageConceptSwitch.GeneratorInternal_BuildSource_JavaJar:
return myConceptGeneratorInternal_BuildSource_JavaJar;
case LanguageConceptSwitch.GeneratorInternal_BuildSource_JavaLibrary:
return myConceptGeneratorInternal_BuildSource_JavaLibrary;
case LanguageConceptSwitch.GeneratorInternal_BuildSource_JavaModule:
return myConceptGeneratorInternal_BuildSource_JavaModule;
case LanguageConceptSwitch.GeneratorInternal_BuildSource_SingleFile:
return myConceptGeneratorInternal_BuildSource_SingleFile;
case LanguageConceptSwitch.GeneratorInternal_IWorkflowParticipantReference:
return myConceptGeneratorInternal_IWorkflowParticipantReference;
case LanguageConceptSwitch.GeneratorInternal_IWorkfowParticipants:
return myConceptGeneratorInternal_IWorkfowParticipants;
case LanguageConceptSwitch.GeneratorInternal_LibraryArtifacts:
return myConceptGeneratorInternal_LibraryArtifacts;
case LanguageConceptSwitch.GeneratorInternal_Mapping:
return myConceptGeneratorInternal_Mapping;
case LanguageConceptSwitch.GeneratorInternal_ProjectDependency:
return myConceptGeneratorInternal_ProjectDependency;
case LanguageConceptSwitch.IWorkflowParticipant:
return myConceptIWorkflowParticipant;
default :
return null;
}
}
