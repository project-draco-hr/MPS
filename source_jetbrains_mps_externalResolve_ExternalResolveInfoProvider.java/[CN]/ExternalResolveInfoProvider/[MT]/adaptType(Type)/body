{
  String s=ourPrimitiveAdaptationNames.get(t.getClass().getName());
  if (s != null) {
    return new Pair<String,String>(s,s);
  }
  if (t instanceof ClassifierType) {
    StringBuffer sb=new StringBuffer(classifier_);
    sb.append(" [");
    ClassifierType classifierType=(ClassifierType)t;
    sb.append(classifierType.getClassifier().getName());
    if (classifierType.parameters().hasNext()) {
      sb.append(", ");
      sb.append("<");
    }
    int i=0;
    for (    Type parameter : CollectionUtil.iteratorAsIterable(classifierType.parameters())) {
      String componentString=toString(parameter);
      if (componentString == null) {
        continue;
      }
      if (i > 0) {
        sb.append(", ");
      }
      sb.append(componentString);
      i++;
    }
    if (classifierType.getParametersCount() > 0) {
      sb.append(">");
    }
    sb.append("]");
    return new Pair<String,String>(classifier_,sb.toString());
  }
  if (t instanceof ArrayType) {
    StringBuffer sb=new StringBuffer(array_);
    sb.append(" [");
    ArrayType arrayType=(ArrayType)t;
    sb.append(-1);
    sb.append(", ");
    sb.append(toString(arrayType.getComponentType()));
    sb.append("]");
    return new Pair<String,String>(array_,sb.toString());
  }
  return new Pair<String,String>("","");
}
