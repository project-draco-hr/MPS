{
  String name=baseMethodDeclaration.getName();
  String conceptName=baseMethodDeclaration.getConceptName();
  Pair<String,String> typeObject=adaptNode(baseMethodDeclaration.getReturnType());
  if (typeObject == null)   return ExternalResolver.NO_MEMBER_TYPE;
  String methodTypeName=typeObject.o1;
  String methodTypeSignature=typeObject.o2;
  String methodType="(" + methodTypeName + "/"+ methodTypeSignature+ ")";
  String result="[" + conceptName + "]"+ name+ "(";
  Iterator<ParameterDeclaration> pIterator=baseMethodDeclaration.parameters();
  while (pIterator.hasNext()) {
    ParameterDeclaration parameterDeclaration=pIterator.next();
    typeObject=adaptNode(parameterDeclaration.getType());
    if (typeObject == null)     return ExternalResolver.NO_MEMBER_TYPE;
    result+="(" + typeObject.o1 + "/"+ typeObject.o2+ ")";
    if (pIterator.hasNext())     result+=", ";
  }
  result+=") : ";
  result+=methodType;
  return result;
}
