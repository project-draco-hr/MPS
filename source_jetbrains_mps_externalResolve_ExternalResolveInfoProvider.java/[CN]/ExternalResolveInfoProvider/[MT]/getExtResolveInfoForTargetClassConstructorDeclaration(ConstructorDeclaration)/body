{
  String conceptName=constructorDeclaration.getConceptName();
  ClassConcept classConcept=(ClassConcept)constructorDeclaration.getParent();
  String classifierExtResolveInfo=getExtResolveInfoForTargetClassGenericDeclaration(classConcept);
  String result="[" + conceptName + "] (";
  Iterator<ParameterDeclaration> pIterator=constructorDeclaration.parameters();
  ITypeChecker typeChecker=TypeCheckerAccess.getTypeChecker();
  while (pIterator.hasNext()) {
    ParameterDeclaration parameterDeclaration=pIterator.next();
    TSStatus tSStatus=typeChecker.adaptNode(parameterDeclaration.getType());
    ITypeObject parameterTypeObject=tSStatus.getTypeObject();
    if (parameterTypeObject == null)     return ExternalResolver.NO_MEMBER_TYPE;
    result+="(" + parameterTypeObject.getTypeName() + "/"+ parameterTypeObject.getSignature()+ ")";
    if (pIterator.hasNext())     result+=", ";
  }
  result+=")";
  return ExternalResolver.CONSTRUCTOR + classifierExtResolveInfo + result;
}
