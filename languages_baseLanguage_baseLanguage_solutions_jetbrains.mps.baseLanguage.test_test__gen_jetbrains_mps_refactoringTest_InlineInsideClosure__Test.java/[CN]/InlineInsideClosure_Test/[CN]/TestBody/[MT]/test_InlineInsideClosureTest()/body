{
  this.addNodeById("7093131866560585662");
  this.addNodeById("7093131866560585699");
  InlineVariableRefactoring ref=new InlineVariableReferenceRefactoring(SNodeOperations.cast(this.getNodeById("7093131866560585685"),"jetbrains.mps.baseLanguage.structure.VariableReference"));
  ref.doRefactoring();
{
    List<SNode> nodesBefore=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("7093131866560585663"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    List<SNode> nodesAfter=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("7093131866560585703"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    Assert.assertNull("nodes '" + nodesBefore + "' and '"+ nodesAfter+ "' do not match!",NodesMatcher.matchNodes(nodesBefore,nodesAfter));
  }
}
