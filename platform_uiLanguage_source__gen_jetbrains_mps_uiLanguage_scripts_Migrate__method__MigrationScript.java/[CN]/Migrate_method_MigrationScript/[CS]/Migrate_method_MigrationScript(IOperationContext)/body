{
  super("migrate methods");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "migrate methods";
    }
    public String getAdditionalInfo(){
      return "migrate methods";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.uiLanguage.structure.ComponentMethodCallOperation";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return true;
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode replacement=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodCallOperation",null);
      SLinkOperations.setTarget(replacement,"member",SLinkOperations.getTarget(node,"baseMethodDeclaration",false),false);
      for (      SNode parm : SLinkOperations.getTargets(node,"actualArgument",true)) {
        SLinkOperations.addChild(replacement,"actualArgument",parm);
      }
      SNodeOperations.replaceWithAnother(node,replacement);
    }
  }
);
}
