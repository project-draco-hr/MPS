{
  final SModel model=((SModel)MapSequence.fromMap(_params).get("modelDesc"));
  final Wrappers._T<List<SModuleReference>> solutions=new Wrappers._T<List<SModuleReference>>();
  ((MPSProject)MapSequence.fromMap(_params).get("mpsProject")).getRepository().getModelAccess().runReadAction(new Runnable(){
    public void run(){
      solutions.value=CollectTests_Action.this.allSolutions(_params);
    }
  }
);
  int done=0;
  for (  SModuleReference mref : solutions.value) {
    if (proInd.isCanceled()) {
      return false;
    }
    proInd.setText("Processing " + mref.getModuleName());
    final SModule module=ModuleRepositoryFacade.getInstance().getModule(mref);
    if (module != null) {
      for (      final SModel smodel : module.getModels()) {
        if (!(CollectTests_Action.this.isUserEditableGeneratableModel(smodel,_params))) {
          continue;
        }
        final List<SNode> tests=new ArrayList<SNode>();
        final Wrappers._boolean collected=new Wrappers._boolean();
        ((MPSProject)MapSequence.fromMap(_params).get("mpsProject")).getRepository().getModelAccess().runReadAction(new Runnable(){
          public void run(){
            collected.value=new TestCollector().collectTests(smodel,tests);
          }
        }
);
        if (collected.value) {
          ThreadUtils.runInUIThreadAndWait(new Runnable(){
            public void run(){
              ((MPSProject)MapSequence.fromMap(_params).get("mpsProject")).getRepository().getModelAccess().executeCommand(new Runnable(){
                public void run(){
                  final Wrappers._T<SNode> suite=new Wrappers._T<SNode>(null);
                  ((MPSProject)MapSequence.fromMap(_params).get("mpsProject")).getRepository().getModelAccess().runReadAction(new Runnable(){
                    public void run(){
                      suite.value=ListSequence.fromList(SModelOperations.roots(model,MetaAdapterFactory.getConcept(0xd3c5a46fb8c247dbL,0xad0a30b8f19c2055L,0x3e81ed1e2be77cb5L,"jetbrains.mps.testbench.suite.structure.ModuleSuite"))).findFirst(new IWhereFilter<SNode>(){
                        public boolean accept(                        SNode it){
                          return BehaviorReflection.invokeVirtual(SModuleReference.class,SLinkOperations.getTarget(it,MetaAdapterFactory.getContainmentLink(0xd3c5a46fb8c247dbL,0xad0a30b8f19c2055L,0x3e81ed1e2be77cb5L,0x11c3fc56a6d1cc88L,"moduleRef")),"virtual_moduleReference_1280144168199513544",new Object[]{}).equals(module.getModuleReference());
                        }
                      }
);
                    }
                  }
);
                  if (suite.value == null) {
                    suite.value=SModelOperations.createNewRootNode(model,SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xd3c5a46fb8c247dbL,0xad0a30b8f19c2055L,0x3e81ed1e2be77cb5L,"jetbrains.mps.testbench.suite.structure.ModuleSuite")));
                    SNode sref=SLinkOperations.setNewChild(suite.value,MetaAdapterFactory.getContainmentLink(0xd3c5a46fb8c247dbL,0xad0a30b8f19c2055L,0x3e81ed1e2be77cb5L,0x11c3fc56a6d1cc88L,"moduleRef"),SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xd3c5a46fb8c247dbL,0xad0a30b8f19c2055L,0x11c3fc56a6d1cbdcL,"jetbrains.mps.testbench.suite.structure.SolutionRef")));
                    SModuleReference mref=module.getModuleReference();
                    SPropertyOperations.set(sref,MetaAdapterFactory.getProperty(0xd3c5a46fb8c247dbL,0xad0a30b8f19c2055L,0x11c3fc56a6d1cbdcL,0x11c3fc56a6d1cbddL,"moduleFQName"),mref.getModuleName());
                    SPropertyOperations.set(sref,MetaAdapterFactory.getProperty(0xd3c5a46fb8c247dbL,0xad0a30b8f19c2055L,0x11c3fc56a6d1cbdcL,0x11c3fc56a6d1cbdeL,"moduleID"),mref.getModuleId().toString());
                  }
                  for (                  final SNode tref : tests) {
                    if (!(ListSequence.fromList(SLinkOperations.getChildren(suite.value,MetaAdapterFactory.getContainmentLink(0xd3c5a46fb8c247dbL,0xad0a30b8f19c2055L,0x3e81ed1e2be77cb5L,0x3e81ed1e2be77cbeL,"testRef"))).any(new IWhereFilter<SNode>(){
                      public boolean accept(                      SNode it){
                        return BehaviorReflection.invokeVirtual(Boolean.TYPE,it,"virtual_isSame_24903889606765997",new Object[]{tref});
                      }
                    }
))) {
                      ListSequence.fromList(SLinkOperations.getChildren(suite.value,MetaAdapterFactory.getContainmentLink(0xd3c5a46fb8c247dbL,0xad0a30b8f19c2055L,0x3e81ed1e2be77cb5L,0x3e81ed1e2be77cbeL,"testRef"))).addElement(SNodeOperations.cast(tref,MetaAdapterFactory.getInterfaceConcept(0xd3c5a46fb8c247dbL,0xad0a30b8f19c2055L,0x3e81ed1e2be77cbaL,"jetbrains.mps.testbench.suite.structure.ITestRef")));
                      ((SModelInternal)model).addModelImport(smodel.getReference(),false);
                      ((AbstractModule)((SModel)MapSequence.fromMap(_params).get("modelDesc")).getModule()).addDependency(module.getModuleReference(),false);
                    }
                  }
                }
              }
);
            }
          }
);
        }
      }
    }
    proInd.setFraction(((double)++done) / ListSequence.fromList(solutions.value).count());
  }
  return true;
}
