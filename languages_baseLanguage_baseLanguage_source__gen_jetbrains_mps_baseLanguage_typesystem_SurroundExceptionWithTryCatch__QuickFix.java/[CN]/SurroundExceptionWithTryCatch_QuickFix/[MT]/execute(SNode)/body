{
  if (ListSequence.fromList(((List<SNode>)(SurroundExceptionWithTryCatch_QuickFix.this.getField("throwableTypes")[0]))).isEmpty()) {
    return;
  }
  SNode ancestorStatement=SNodeOperations.getAncestor(node,"jetbrains.mps.baseLanguage.structure.Statement",false,false);
  if (ancestorStatement == null) {
    return;
  }
  SNode parentTryStatement=(((Boolean)(SurroundExceptionWithTryCatch_QuickFix.this.getField("createNew")[0])) ? null : SNodeOperations.getAncestor(ancestorStatement,"jetbrains.mps.baseLanguage.structure.ITryCatchStatement",false,false));
  final List<SNode> clauses=ListSequence.fromList(new ArrayList<SNode>());
  ListSequence.fromList(((List<SNode>)(SurroundExceptionWithTryCatch_QuickFix.this.getField("throwableTypes")[0]))).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode it){
      if (!(SNodeOperations.isInstanceOf(it,"jetbrains.mps.baseLanguage.structure.ClassifierType"))) {
        return;
      }
      SNode catchClause=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.CatchClause",null);
      SLinkOperations.setTarget(catchClause,"catchBody",SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StatementList",null),true);
      SLinkOperations.setTarget(catchClause,"throwable",SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration",null),true);
      SLinkOperations.setTarget(SLinkOperations.getTarget(catchClause,"throwable",true),"type",SNodeOperations.cast(SNodeOperations.copyNode(it),"jetbrains.mps.baseLanguage.structure.Type"),true);
      SPropertyOperations.set(SLinkOperations.getTarget(catchClause,"throwable",true),"name","e");
      ListSequence.fromList(clauses).addElement(catchClause);
    }
  }
);
  if (parentTryStatement != null) {
    clauses.removeAll(BehaviorReflection.invokeVirtual((Class<List<SNode>>)(((Class)(Object.class))),parentTryStatement,"virtual_getCatchClauses_3718132079121388582",new Object[]{}));
    if (SNodeOperations.isInstanceOf(parentTryStatement,"jetbrains.mps.baseLanguage.structure.TryCatchStatement")) {
      ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(parentTryStatement,"jetbrains.mps.baseLanguage.structure.TryCatchStatement"),"catchClause",true)).addSequence(ListSequence.fromList(clauses));
    }
 else     if (SNodeOperations.isInstanceOf(parentTryStatement,"jetbrains.mps.baseLanguage.structure.TryStatement")) {
      ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(parentTryStatement,"jetbrains.mps.baseLanguage.structure.TryStatement"),"catchClause",true)).addSequence(ListSequence.fromList(clauses));
    }
  }
 else {
    SNode tryCatchStatement=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.TryCatchStatement",null);
    SLinkOperations.setTarget(tryCatchStatement,"body",SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StatementList",null),true);
    SNodeOperations.replaceWithAnother(ancestorStatement,tryCatchStatement);
    ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(tryCatchStatement,"body",true),"statement",true)).addElement(ancestorStatement);
    ListSequence.fromList(SLinkOperations.getTargets(tryCatchStatement,"catchClause",true)).addSequence(ListSequence.fromList(clauses));
  }
}
