{
  if (!(module instanceof Language)) {
    return Collections.emptyMap();
  }
  SModel migModel=LanguageAspect.MIGRATION.get((Language)module);
  if (migModel == null) {
    return Collections.emptyMap();
  }
  if (!(migModel.isLoaded())) {
    return Collections.emptyMap();
  }
  List<SNode> allScripts=SModelOperations.roots(migModel,MetaAdapterFactory.getInterfaceConcept(0x9882f4ad195546feL,0x826994189e5dbbf2L,0x47bb811da2acc4d6L,"jetbrains.mps.lang.migration.util.structure.IMigrationUnit"));
  final Map<SNode,Collection<String>> result=MapSequence.fromMap(new HashMap<SNode,Collection<String>>());
  Iterable<SNode> noVersionScripts=ListSequence.fromList(allScripts).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return !(BehaviorReflection.invokeVirtual(Boolean.TYPE,it,"virtual_isVersionSet_5168866961621097742",new Object[]{}));
    }
  }
);
  Sequence.fromIterable(noVersionScripts).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode it){
      MigrationsCheckUtil.ensureInitialized(result,it);
      CollectionSequence.fromCollection(MapSequence.fromMap(result).get(it)).addElement("Script does not have version");
    }
  }
);
  if (Sequence.fromIterable(noVersionScripts).count() == ListSequence.fromList(allScripts).count()) {
    return result;
  }
  Iterable<SNode> scriptsWithVersions=ListSequence.fromList(allScripts).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return BehaviorReflection.invokeVirtual(Boolean.TYPE,it,"virtual_isVersionSet_5168866961621097742",new Object[]{});
    }
  }
);
  final Map<Integer,Integer> versions=MapSequence.fromMap(new HashMap<Integer,Integer>());
  Sequence.fromIterable(scriptsWithVersions).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode it){
      if (MapSequence.fromMap(versions).get(BehaviorReflection.invokeVirtual(Integer.TYPE,it,"virtual_fromVersion_5168866961621042645",new Object[]{})) == null) {
        MapSequence.fromMap(versions).put(BehaviorReflection.invokeVirtual(Integer.TYPE,it,"virtual_fromVersion_5168866961621042645",new Object[]{}),0);
      }
      MapSequence.fromMap(versions).put(BehaviorReflection.invokeVirtual(Integer.TYPE,it,"virtual_fromVersion_5168866961621042645",new Object[]{}),MapSequence.fromMap(versions).get(BehaviorReflection.invokeVirtual(Integer.TYPE,it,"virtual_fromVersion_5168866961621042645",new Object[]{})) + 1);
    }
  }
);
  final int minVersion=SetSequence.fromSet(MapSequence.fromMap(versions).keySet()).sort(new ISelector<Integer,Integer>(){
    public Integer select(    Integer it){
      return it;
    }
  }
,true).first();
  final int maxVersion=SetSequence.fromSet(MapSequence.fromMap(versions).keySet()).sort(new ISelector<Integer,Integer>(){
    public Integer select(    Integer it){
      return it;
    }
  }
,false).first();
  final int langVersion=((Language)module).getLanguageVersion();
  if (maxVersion != langVersion - 1) {
    Sequence.fromIterable(scriptsWithVersions).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return BehaviorReflection.invokeVirtual(Integer.TYPE,it,"virtual_fromVersion_5168866961621042645",new Object[]{}) == maxVersion;
      }
    }
).visitAll(new IVisitor<SNode>(){
      public void visit(      SNode it){
        ensureInitialized(result,it);
        CollectionSequence.fromCollection(MapSequence.fromMap(result).get(it)).addElement("Language version (" + langVersion + ") is greater than the target version of last migration script ("+ maxVersion+ ")");
      }
    }
);
  }
  Sequence.fromIterable(scriptsWithVersions).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode it){
      if (MapSequence.fromMap(versions).get(BehaviorReflection.invokeVirtual(Integer.TYPE,it,"virtual_fromVersion_5168866961621042645",new Object[]{})) > 1) {
        ensureInitialized(result,it);
        CollectionSequence.fromCollection(MapSequence.fromMap(result).get(it)).addElement("Multiple scripts for version " + BehaviorReflection.invokeVirtual(Integer.TYPE,it,"virtual_fromVersion_5168866961621042645",new Object[]{}) + " found");
      }
      if (BehaviorReflection.invokeVirtual(Integer.TYPE,it,"virtual_fromVersion_5168866961621042645",new Object[]{}) != minVersion && MapSequence.fromMap(versions).get(BehaviorReflection.invokeVirtual(Integer.TYPE,it,"virtual_fromVersion_5168866961621042645",new Object[]{}) - 1) == null) {
        ensureInitialized(result,it);
        CollectionSequence.fromCollection(MapSequence.fromMap(result).get(it)).addElement("Missing script for version " + (BehaviorReflection.invokeVirtual(Integer.TYPE,it,"virtual_fromVersion_5168866961621042645",new Object[]{}) - 1));
      }
    }
  }
);
  return result;
}
