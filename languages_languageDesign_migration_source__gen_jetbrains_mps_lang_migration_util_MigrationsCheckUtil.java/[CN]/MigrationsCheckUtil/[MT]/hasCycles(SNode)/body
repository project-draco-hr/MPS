{
  List<SNode> step=ListSequence.fromListAndArray(new ArrayList<SNode>(),migrationScript);
  List<SNode> all=ListSequence.fromList(new ArrayList<SNode>());
  while (ListSequence.fromList(step).isNotEmpty()) {
    step=ListSequence.fromList(step).translate(new ITranslator2<SNode,SNode>(){
      public Iterable<SNode> translate(      SNode it){
        return allScriptdependencies(it);
      }
    }
).distinct().toListSequence();
    if (ListSequence.fromList(all).intersect(ListSequence.fromList(step)).isNotEmpty()) {
      return true;
    }
    ListSequence.fromList(all).addSequence(ListSequence.fromList(step));
  }
  return false;
}
