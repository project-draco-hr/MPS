{
{
    SAbstractConcept cncpt=c;
    Integer preIndex=indices_4qogsf_a0r.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return props_AbstractFinderDeclaration;
      }
    break;
case 1:
  if (true) {
    return props_CategorizeBlock;
  }
break;
case 2:
if (true) {
return props_CheckCancelledStatusStatement;
}
break;
case 3:
if (true) {
return props_ConceptFunctionParameter_node;
}
break;
case 4:
if (true) {
return props_ExecuteFinderExpression;
}
break;
case 5:
if (true) {
return props_ExecuteFindersGetSearchResults;
}
break;
case 6:
if (true) {
return props_FindBlock;
}
break;
case 7:
if (true) {
return props_FinderDeclaration;
}
break;
case 8:
if (true) {
return props_FinderReference;
}
break;
case 9:
if (true) {
return props_IsApplicableBlock;
}
break;
case 10:
if (true) {
return props_IsUsedByDefault;
}
break;
case 11:
if (true) {
return props_IsVisibleBlock;
}
break;
case 12:
if (true) {
return props_MakeResultProvider;
}
break;
case 13:
if (true) {
return props_NodeStatement;
}
break;
case 14:
if (true) {
return props_ResultStatement;
}
break;
case 15:
if (true) {
return props_SearchedNodesBlock;
}
break;
default :
}
}
throw new IllegalStateException();
}
