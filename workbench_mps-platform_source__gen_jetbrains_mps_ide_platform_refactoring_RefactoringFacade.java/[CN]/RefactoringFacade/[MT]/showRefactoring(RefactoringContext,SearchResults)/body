{
  ThreadUtils.runInUIThreadNoWait(new Runnable(){
    public void run(){
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          RefactoringViewAction okAction=new RefactoringViewAction(){
            public void performAction(            final RefactoringViewItem refactoringViewItem){
              new Thread(){
                public void run(){
                  doExecute(refactoringContext);
                  SwingUtilities.invokeLater(new Runnable(){
                    public void run(){
                      refactoringViewItem.close();
                    }
                  }
);
                }
              }
.start();
            }
          }
;
          List<SModel> modelsToGenerate=getModelsToGenerate(refactoringContext.getRefactoring(),refactoringContext);
          RefactoringAccess.getInstance().showRefactoringView(ProjectHelper.toIdeaProject(refactoringContext.getSelectedProject()),okAction,searchResults,!(modelsToGenerate.isEmpty()),refactoringContext.getRefactoring().getUserFriendlyName());
        }
      }
);
    }
  }
);
}
