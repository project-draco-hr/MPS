{
  final SModelRepository modelRepository=SModelRepository.getInstance();
  Map<SModelReference,Integer> dependencies=context.getStructureModification().getDependencies();
  Set<SModelDescriptor> result=SetSequence.fromSet(new HashSet<SModelDescriptor>());
  SetSequence.fromSet(result).addSequence(SetSequence.fromSet(MapSequence.fromMap(dependencies).keySet()).select(new ISelector<SModelReference,SModelDescriptor>(){
    public SModelDescriptor select(    SModelReference it){
      return modelRepository.getModelDescriptor(it);
    }
  }
));
  for (  SModelDescriptor descr : modelRepository.getModelDescriptors()) {
    if (!(SModelStereotype.isUserModel(descr)) || !(descr.isLoaded())) {
      continue;
    }
    for (    jetbrains.mps.smodel.SModel.ImportElement elem : ListSequence.fromList(SModelOperations.getAllImportElements(descr.getSModel()))) {
      if (MapSequence.fromMap(dependencies).containsKey(elem.getModelReference())) {
        SetSequence.fromSet(result).addElement(descr);
        break;
      }
    }
  }
  return result;
}
