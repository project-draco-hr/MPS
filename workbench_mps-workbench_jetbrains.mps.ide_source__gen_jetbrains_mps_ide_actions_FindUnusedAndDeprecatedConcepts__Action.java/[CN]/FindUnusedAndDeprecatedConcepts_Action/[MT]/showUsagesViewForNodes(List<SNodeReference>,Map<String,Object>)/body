{
  IResultProvider provider=FindUtils.makeProvider(new IFinder(){
    @Override public SearchResults find(    SearchQuery query,    ProgressMonitor progress){
      final SRepository repo=((MPSProject)MapSequence.fromMap(_params).get("mpsProject")).getRepository();
      SearchResults<SNode> results=new SearchResults<SNode>();
      for (      SNode node : ListSequence.fromList(nodes).select(new ISelector<SNodeReference,SNode>(){
        public SNode select(        SNodeReference it){
          return it.resolve(repo);
        }
      }
).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return it != null;
        }
      }
)) {
        results.getSearchResults().add(new SearchResult<SNode>(node,"Uncategorized"));
      }
      return results;
    }
  }
);
  UsageToolOptions opt=new UsageToolOptions().allowRunAgain(false).navigateIfSingle(false).forceNewTab(false).notFoundMessage("Nothing");
  UsagesViewTool.showUsages(((Project)MapSequence.fromMap(_params).get("ideaProject")),provider,new SearchQuery(GlobalScope.getInstance()),opt);
}
