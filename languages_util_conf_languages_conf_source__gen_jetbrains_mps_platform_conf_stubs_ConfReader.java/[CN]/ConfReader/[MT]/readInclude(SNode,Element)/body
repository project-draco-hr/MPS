{
  SNode xi=SLinkOperations.addNewChild(node,"fragment","jetbrains.mps.platform.conf.structure.XInclude");
  String href=include.getAttributeValue(HREF);
  if (href != null) {
    while (href.startsWith("/")) {
      href=href.substring(1);
    }
    if (href.endsWith(".xml") || href.endsWith(".XML")) {
      href=href.substring(0,href.length() - 4);
    }
    String pkg=SModelStereotype.withoutStereotype(SNodeOperations.getModel(node).getReference().getModelName());
    String name=href;
    int lastSlash=href.lastIndexOf("/");
    if (lastSlash > 0) {
      pkg=href.substring(0,lastSlash).replace('/','.');
      name=href.substring(lastSlash + 1);
    }
    addConfXmlDocumentReference(SLinkOperations.findLinkDeclaration("jetbrains.mps.platform.conf.structure.XInclude","document"),xi,pkg + "." + name);
  }
  String xpointer=include.getAttributeValue(XPOINTER);
  if (xpointer == null) {
    xpointer="xpointer(/components/*)";
  }
  Matcher m=XPOINTER_PTN.matcher(xpointer);
  if (m.matches()) {
    Matcher mm=INCLUDE_PTN.matcher(m.group(1));
    if (mm.matches()) {
      SPropertyOperations.set(xi,"includeRoot",mm.group(1));
    }
  }
}
