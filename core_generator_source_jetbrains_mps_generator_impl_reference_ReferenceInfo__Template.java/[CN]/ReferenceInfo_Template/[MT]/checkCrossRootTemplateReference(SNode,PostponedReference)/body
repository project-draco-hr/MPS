{
  final TemplateGenerator generator=ref.getGenerator();
  if (!generator.isStrict() || !generator.isIncremental()) {
    return;
  }
  SNode outputTargetRoot=outputTarget.getContainingRoot();
  SNode outputSourceRoot=ref.getSourceNode().getContainingRoot();
  SModel model=outputTargetRoot.getModel();
  if (model == null || outputTargetRoot.getParent() != null) {
    SNode inputSourceRoot=generator.getOriginalRootByGenerated(outputSourceRoot);
    SNode inputTargetRoot=generator.getOriginalRootByGenerated(outputTargetRoot);
    if (inputTargetRoot != inputSourceRoot) {
      generator.getLogger().warning(myTemplateSourceNode,"references across templates for different roots are not allowed: use mapping labels or turn off incremental mode, " + "source root: " + (inputSourceRoot == null ? "<conditional root>" : SNodeOperations.getDebugText(inputSourceRoot)) + ", target root: "+ (inputTargetRoot == null ? "<conditional root>" : SNodeOperations.getDebugText(inputTargetRoot)),GeneratorUtil.describeIfExists(ref.getSourceNode(),"source"),GeneratorUtil.describeIfExists(outputTarget,"target"));
    }
  }
}
