{
  this.addNodeById("1230052684687");
  this.addNodeById("1230052684697");
  this.addNodeById("1230052684705");
  this.addNodeById("1230052684709");
  SNode call=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StaticMethodCall",null);
  SLinkOperations.setTarget(call,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141037l,"baseMethodDeclaration"),SNodeOperations.cast(this.getNodeById("1230052684711"),"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration"));
  SLinkOperations.setTarget(call,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1081236700937l,1144433194310l,"classConcept"),SNodeOperations.cast(this.getNodeById("1230052684710"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
  SNodeOperations.replaceWithAnother(SNodeOperations.cast(this.getNodeById("1230052684702"),"jetbrains.mps.baseLanguage.structure.IntegerConstant"),call);
  ExtractMethodRefactoringParameters params=ExtractMethodFactory.createParameters(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230052684691"),"jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement"),SNodeOperations.cast(this.getNodeById("6195342755327940882"),"jetbrains.mps.baseLanguage.structure.ExpressionStatement")));
  params.setName("foo");
  ExtractMethodRefactoring ref=ExtractMethodFactory.createRefactoring(params);
  ref.setStaticContainer(SNodeOperations.cast(this.getNodeById("1230052684706"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
  ref.doRefactor();
{
    List<SNode> nodesBefore=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230052684688"),"jetbrains.mps.lang.behavior.structure.ConceptBehavior"),SNodeOperations.cast(this.getNodeById("1230052684706"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    List<SNode> nodesAfter=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230052684698"),"jetbrains.mps.lang.behavior.structure.ConceptBehavior"),SNodeOperations.cast(this.getNodeById("1230052684710"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    Assert.assertNull("nodes '" + nodesBefore + "' and '"+ nodesAfter+ "' do not match!",NodesMatcher.matchNodes(nodesBefore,nodesAfter));
  }
}
