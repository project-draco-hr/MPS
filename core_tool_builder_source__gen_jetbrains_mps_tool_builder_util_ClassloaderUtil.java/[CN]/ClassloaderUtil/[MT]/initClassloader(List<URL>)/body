{
  PathManager.loadProperties();
  try {
    ClassloaderUtil.addParentClasspath(classpathElements);
    ClassloaderUtil.addIDEALibraries(classpathElements);
    ClassloaderUtil.addAdditionalClassPath(classpathElements);
  }
 catch (  IllegalArgumentException e) {
    ClassloaderUtil.getLogger().error(null,e);
    System.exit(1);
  }
catch (  MalformedURLException e) {
    ClassloaderUtil.getLogger().error(e.getMessage());
    System.exit(1);
  }
  ClassloaderUtil.filterClassPath(classpathElements);
  UrlClassLoader newClassLoader=null;
  try {
    newClassLoader=new UrlClassLoader(classpathElements,null,true,true);
    Thread.currentThread().setContextClassLoader(newClassLoader);
  }
 catch (  Exception e) {
    Logger logger=ClassloaderUtil.getLogger();
    if (logger == null) {
      e.printStackTrace(System.err);
    }
 else {
      logger.error(null,e);
    }
  }
  return newClassLoader;
}
