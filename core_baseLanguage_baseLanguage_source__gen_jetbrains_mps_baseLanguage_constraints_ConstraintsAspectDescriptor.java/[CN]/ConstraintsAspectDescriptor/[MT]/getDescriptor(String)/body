{
  if ("jetbrains.mps.baseLanguage.structure.AssignmentExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.AssignmentExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.BaseMethodCall".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.BaseMethodCall"));
  }
  if ("jetbrains.mps.baseLanguage.structure.Expression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.Expression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.FieldDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.FieldDeclaration"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ClassConcept".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ClassConcept_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.ParameterDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ParameterDeclaration"));
  }
  if ("jetbrains.mps.baseLanguage.structure.Type".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.Type"));
  }
  if ("jetbrains.mps.baseLanguage.structure.VariableDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.VariableDeclaration"));
  }
  if ("jetbrains.mps.baseLanguage.structure.VariableReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.VariableReference"));
  }
  if ("jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new BaseMethodDeclaration_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.StatementList".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.StatementList"));
  }
  if ("jetbrains.mps.baseLanguage.structure.BooleanConstant".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.BooleanConstant"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ConstructorDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ConstructorDeclaration_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.EqualsExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.EqualsExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ExpressionStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ExpressionStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.Statement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.Statement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.IfStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IfStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new InstanceMethodDeclaration_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.IntegerConstant".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IntegerConstant"));
  }
  if ("jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new LocalVariableDeclaration_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.LocalVariableReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new LocalVariableReference_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.LongType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.LongType"));
  }
  if ("jetbrains.mps.baseLanguage.structure.MinusExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.MinusExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ParameterReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ParameterReference_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.PlusExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.PlusExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ReturnStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ReturnStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.VoidType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.VoidType"));
  }
  if ("jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new StaticFieldDeclaration_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.SuperConstructorInvocation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new SuperConstructorInvocation_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.StringLiteral".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.StringLiteral"));
  }
  if ("jetbrains.mps.baseLanguage.structure.StaticFieldReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new StaticFieldReference_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.ShortType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ShortType"));
  }
  if ("jetbrains.mps.baseLanguage.structure.NullLiteral".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.NullLiteral"));
  }
  if ("jetbrains.mps.baseLanguage.structure.IntegerType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IntegerType"));
  }
  if ("jetbrains.mps.baseLanguage.structure.FloatType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.FloatType"));
  }
  if ("jetbrains.mps.baseLanguage.structure.DoubleType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.DoubleType"));
  }
  if ("jetbrains.mps.baseLanguage.structure.CharType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.CharType"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ByteType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ByteType"));
  }
  if ("jetbrains.mps.baseLanguage.structure.BooleanType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.BooleanType"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ArrayType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ArrayType"));
  }
  if ("jetbrains.mps.baseLanguage.structure.CastExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.CastExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.SuperMethodCall".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new SuperMethodCall_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.NotEqualsExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.NotEqualsExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.WhileStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.WhileStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.AndExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.AndExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.OrExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.OrExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.StaticMethodCall".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new StaticMethodCall_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration"));
  }
  if ("jetbrains.mps.baseLanguage.structure.InstanceOfExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.InstanceOfExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.GreaterThanExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.GreaterThanExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.LessThanExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.LessThanExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.NotExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.NotExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.BreakStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.BreakStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.BinaryOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.BinaryOperation"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ContinueStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ContinueStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.BlockStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.BlockStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.EnumClass".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.EnumClass"));
  }
  if ("jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration"));
  }
  if ("jetbrains.mps.baseLanguage.structure.EnumConstantReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EnumConstantReference_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.MulExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.MulExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.DivExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.DivExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"));
  }
  if ("jetbrains.mps.baseLanguage.structure.Classifier".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Classifier_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.ClassifierType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ClassifierType"));
  }
  if ("jetbrains.mps.baseLanguage.structure.Interface".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Interface_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.TypeVariableDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.TypeVariableDeclaration"));
  }
  if ("jetbrains.mps.baseLanguage.structure.GenericDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.GenericDeclaration"));
  }
  if ("jetbrains.mps.baseLanguage.structure.TypeVariableReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new TypeVariableReference_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.FloatingPointConstant".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.FloatingPointConstant"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ClassifierClassExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ClassifierClassExpression_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.ConceptFunction".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ConceptFunction"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ForeachStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ForeachStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.AbstractForStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.AbstractForStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ForStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ForStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.AbstractCreator".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.AbstractCreator"));
  }
  if ("jetbrains.mps.baseLanguage.structure.GenericNewExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.GenericNewExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.Visibility".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.Visibility"));
  }
  if ("jetbrains.mps.baseLanguage.structure.PublicVisibility".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.PublicVisibility"));
  }
  if ("jetbrains.mps.baseLanguage.structure.PrivateVisibility".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.PrivateVisibility"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ProtectedVisibility".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ProtectedVisibility"));
  }
  if ("jetbrains.mps.baseLanguage.structure.Closure".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.Closure"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ClosureParameter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ClosureParameter"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ClosureParameterReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ClosureParameterReference_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.GreaterThanOrEqualsExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.GreaterThanOrEqualsExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.RemExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.RemExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.LessThanOrEqualsExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.LessThanOrEqualsExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.TryStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.TryStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.AbstractLoopStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.AbstractLoopStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ArrayCreatorWithInitializer".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ArrayCreatorWithInitializer"));
  }
  if ("jetbrains.mps.baseLanguage.structure.Number".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.Number"));
  }
  if ("jetbrains.mps.baseLanguage.structure.AssertStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.AssertStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ThisExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ThisExpression_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.TernaryOperatorExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.TernaryOperatorExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.SwitchStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.SwitchStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.SwitchCase".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.SwitchCase"));
  }
  if ("jetbrains.mps.baseLanguage.structure.PrimitiveType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.PrimitiveType"));
  }
  if ("jetbrains.mps.baseLanguage.structure.TryCatchStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.TryCatchStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.CatchClause".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.CatchClause"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ThrowStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ThrowStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.RemarkStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.RemarkStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.SynchronizedStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.SynchronizedStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.AnonymousClass".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AnonymousClass_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.WildCardType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.WildCardType"));
  }
  if ("jetbrains.mps.baseLanguage.structure.LowerBoundType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.LowerBoundType"));
  }
  if ("jetbrains.mps.baseLanguage.structure.UpperBoundType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.UpperBoundType"));
  }
  if ("jetbrains.mps.baseLanguage.structure.LocalStaticFieldReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new LocalStaticFieldReference_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.LocalStaticMethodCall".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new LocalStaticMethodCall_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.ArrayAccessExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ArrayAccessExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.CommentedStatementsBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.CommentedStatementsBlock"));
  }
  if ("jetbrains.mps.baseLanguage.structure.DoWhileStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.DoWhileStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.VarType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.VarType"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ClassifierMember".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ClassifierMember_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.IVisible".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IVisible"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ThisConstructorInvocation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ThisConstructorInvocation_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.HexIntegerLiteral".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.HexIntegerLiteral"));
  }
  if ("jetbrains.mps.baseLanguage.structure.IntegerLiteral".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IntegerLiteral"));
  }
  if ("jetbrains.mps.baseLanguage.structure.AnonymousClassCreator".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.AnonymousClassCreator"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ArrayCreator".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ArrayCreator"));
  }
  if ("jetbrains.mps.baseLanguage.structure.DimensionExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.DimensionExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.Annotation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Annotation_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.AnnotationMethodDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AnnotationMethodDeclaration_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.AnnotationInstance".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AnnotationInstance_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.HasAnnotation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.HasAnnotation"));
  }
  if ("jetbrains.mps.baseLanguage.structure.AnnotationInstanceExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.AnnotationInstanceExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.AnnotationInstanceValue".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AnnotationInstanceValue_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.ArrayLiteral".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ArrayLiteral_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.IMemberContainer".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IMemberContainer"));
  }
  if ("jetbrains.mps.baseLanguage.structure.DotExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.DotExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.IOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new IOperation_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.FieldReferenceOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new FieldReferenceOperation_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.IStatementListContainer".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IStatementListContainer"));
  }
  if ("jetbrains.mps.baseLanguage.structure.CharConstant".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.CharConstant"));
  }
  if ("jetbrains.mps.baseLanguage.structure.TypeDerivable".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.TypeDerivable"));
  }
  if ("jetbrains.mps.baseLanguage.structure.Property".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Property_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.PropertyImplementation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new PropertyImplementation_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.DefaultPropertyImplementation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.DefaultPropertyImplementation"));
  }
  if ("jetbrains.mps.baseLanguage.structure.PropertyReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new PropertyReference_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.CustomPropertyImplementation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.CustomPropertyImplementation"));
  }
  if ("jetbrains.mps.baseLanguage.structure.GetAccessor".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.GetAccessor"));
  }
  if ("jetbrains.mps.baseLanguage.structure.SetAccessor".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.SetAccessor"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ValueParameter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ValueParameter"));
  }
  if ("jetbrains.mps.baseLanguage.structure.DefaultGetAccessor".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.DefaultGetAccessor"));
  }
  if ("jetbrains.mps.baseLanguage.structure.DefaultSetAccessor".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.DefaultSetAccessor"));
  }
  if ("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new InstanceMethodCallOperation_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.IMethodCall".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IMethodCall"));
  }
  if ("jetbrains.mps.baseLanguage.structure.NullType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.NullType"));
  }
  if ("jetbrains.mps.baseLanguage.structure.IInternalType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IInternalType"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ElsifClause".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ElsifClause"));
  }
  if ("jetbrains.mps.baseLanguage.structure.InstanceInitializer".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.InstanceInitializer"));
  }
  if ("jetbrains.mps.baseLanguage.structure.Closureoid".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.Closureoid"));
  }
  if ("jetbrains.mps.baseLanguage.structure.AbstractOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.AbstractOperation"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ArrayLengthOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ArrayLengthOperation_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.IValidIdentifier".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new IValidIdentifier_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.ClassCreator".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ClassCreator_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.PostfixIncrementExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.PostfixIncrementExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.PostfixDecrementExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.PostfixDecrementExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.BaseAssignmentExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.BaseAssignmentExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.PlusAssignmentExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.PlusAssignmentExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.MinusAssignmentExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.MinusAssignmentExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.VariableArityType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.VariableArityType"));
  }
  if ("jetbrains.mps.baseLanguage.structure.IExtractMethodAvailable".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IExtractMethodAvailable"));
  }
  if ("jetbrains.mps.baseLanguage.structure.StaticInitializer".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.StaticInitializer"));
  }
  if ("jetbrains.mps.baseLanguage.structure.IStaticContainerForMethods".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IStaticContainerForMethods"));
  }
  if ("jetbrains.mps.baseLanguage.structure.IVariableAssignment".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IVariableAssignment"));
  }
  if ("jetbrains.mps.baseLanguage.structure.AsExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.AsExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.UsingStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.UsingStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.EnumValuesExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EnumValuesExpression_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.BitwiseXorExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.BitwiseXorExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.EnumValueOfExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EnumValueOfExpression_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.BinaryBitwiseOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.BinaryBitwiseOperation"));
  }
  if ("jetbrains.mps.baseLanguage.structure.BitwiseOrExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.BitwiseOrExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.BitwiseAndExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.BitwiseAndExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.IThisExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IThisExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.IBLDeprecatable".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IBLDeprecatable"));
  }
  if ("jetbrains.mps.baseLanguage.structure.StringType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.StringType"));
  }
  if ("jetbrains.mps.baseLanguage.structure.NPENotEqualsExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.NPENotEqualsExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.NPEEqualsExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.NPEEqualsExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.BaseStringOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new BaseStringOperation_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.IsEmptyOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IsEmptyOperation"));
  }
  if ("jetbrains.mps.baseLanguage.structure.IsNotEmptyOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IsNotEmptyOperation"));
  }
  if ("jetbrains.mps.baseLanguage.structure.StringBooleanOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.StringBooleanOperation"));
  }
  if ("jetbrains.mps.baseLanguage.structure.SubstringExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.SubstringExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.TrimOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.TrimOperation"));
  }
  if ("jetbrains.mps.baseLanguage.structure.IParameter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IParameter"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ShiftLeftExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ShiftLeftExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ShiftRightExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ShiftRightExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.BitwiseNotExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.BitwiseNotExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.CommentedStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.CommentedStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.TypeAnnotable".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.TypeAnnotable"));
  }
  if ("jetbrains.mps.baseLanguage.structure.VarVariableDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.VarVariableDeclaration"));
  }
  if ("jetbrains.mps.baseLanguage.structure.VarVariableReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new VarVariableReference_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.IContainsStatementList".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IContainsStatementList"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ILocalVariableElement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ILocalVariableElement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ILocalVariableElementList".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ILocalVariableElementList"));
  }
  if ("jetbrains.mps.baseLanguage.structure.IMethodLike".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IMethodLike"));
  }
  if ("jetbrains.mps.baseLanguage.structure.BinaryCompareOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.BinaryCompareOperation"));
  }
  if ("jetbrains.mps.baseLanguage.structure.PrefixIncrementExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.PrefixIncrementExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.PrefixDecrementExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.PrefixDecrementExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.AbstractUnaryNumberOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.AbstractUnaryNumberOperation"));
  }
  if ("jetbrains.mps.baseLanguage.structure.BLBottomType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.BLBottomType"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ConstructorInvocationStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ConstructorInvocationStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.LongLiteral".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.LongLiteral"));
  }
  if ("jetbrains.mps.baseLanguage.structure.FloatingPointFloatConstant".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.FloatingPointFloatConstant"));
  }
  if ("jetbrains.mps.baseLanguage.structure.UnaryMinus".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.UnaryMinus"));
  }
  if ("jetbrains.mps.baseLanguage.structure.PlaceholderMethodDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new PlaceholderMethodDeclaration_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.BaseVariableDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new BaseVariableDeclaration_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.BaseVariableReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.BaseVariableReference"));
  }
  if ("jetbrains.mps.baseLanguage.structure.LoopLabel".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.LoopLabel"));
  }
  if ("jetbrains.mps.baseLanguage.structure.LoopLabelReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new LoopLabelReference_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.SingleLineComment".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.SingleLineComment"));
  }
  if ("jetbrains.mps.baseLanguage.structure.CommentPart".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.CommentPart"));
  }
  if ("jetbrains.mps.baseLanguage.structure.TextCommentPart".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.TextCommentPart"));
  }
  if ("jetbrains.mps.baseLanguage.structure.StatementCommentPart".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.StatementCommentPart"));
  }
  if ("jetbrains.mps.baseLanguage.structure.MulAssignmentExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.MulAssignmentExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.DivAssignmentExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.DivAssignmentExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.RemAssignmentExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.RemAssignmentExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.OrAssignmentExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.OrAssignmentExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.AndAssignmentExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.AndAssignmentExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.XorAssignmentExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.XorAssignmentExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.LeftShiftAssignmentExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.LeftShiftAssignmentExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.RightShiftAssignmentExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.RightShiftAssignmentExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.AdditionalForLoopVariable".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AdditionalForLoopVariable_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.AbstractClassifierReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.AbstractClassifierReference"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ImplicitAnnotationInstanceValue".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ImplicitAnnotationInstanceValue_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.PrimitiveClassExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.PrimitiveClassExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.IVariableDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IVariableDeclaration"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ITryCatchStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ITryCatchStatement"));
  }
  if ("jetbrains.mps.baseLanguage.structure.LocalInstanceMethodCall".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new LocalInstanceMethodCall_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.LocalInstanceFieldReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new LocalInstanceFieldReference_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.ILocalDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ILocalDeclaration"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ILocalReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.ILocalReference"));
  }
  if ("jetbrains.mps.baseLanguage.structure.ArrayCloneOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ArrayCloneOperation_Constraints());
  }
  if ("jetbrains.mps.baseLanguage.structure.UnresolvedNameReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.UnresolvedNameReference"));
  }
  if ("jetbrains.mps.baseLanguage.structure.StubStatementList".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.StubStatementList"));
  }
  if ("jetbrains.mps.baseLanguage.structure.OperationAssignmentExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.OperationAssignmentExpression"));
  }
  if ("jetbrains.mps.baseLanguage.structure.IControlFlowInterrupter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IControlFlowInterrupter"));
  }
  if ("jetbrains.mps.baseLanguage.structure.IWillBeClassifier".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IWillBeClassifier"));
  }
  if ("jetbrains.mps.baseLanguage.structure.EscapeOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.EscapeOperation"));
  }
  if ("jetbrains.mps.baseLanguage.structure.UndefinedType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.UndefinedType"));
  }
  if ("jetbrains.mps.baseLanguage.structure.IFinalWrapper".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.baseLanguage.structure.IFinalWrapper"));
  }
  return null;
}
