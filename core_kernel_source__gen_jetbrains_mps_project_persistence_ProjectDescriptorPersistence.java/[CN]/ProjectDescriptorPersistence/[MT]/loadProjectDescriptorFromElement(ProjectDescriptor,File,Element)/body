{
  Macros macros=Macros.projectDescriptor();
  ProjectDescriptor result_9913_22=descriptor;
  String result_9913_23=file.getName();
  result_9913_22.setName(result_9913_23);
  if (root == null) {
    return;
  }
  for (  Element solutionElement : ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(root,"projectSolutions")).first(),"solutionPath"))) {
    Path solutionPath=new Path();
    Path result_9913_24=solutionPath;
    String result_9913_25=macros.expandPath(solutionElement.getAttributeValue("path"),file);
    result_9913_24.setPath(result_9913_25);
    String result_9913_26=solutionElement.getAttributeValue("folder");
    result_9913_24.setMPSFolder(result_9913_26);
    result_9913_22.getSolutions().add(solutionPath);
  }
  for (  Element languageElement : ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(root,"projectLanguages")).first(),"languagePath")).concat(ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(root,"projectLanguages")).first(),"projectLanguage")))) {
    Path languagePath=new Path();
    Path result_9913_27=languagePath;
    String result_9913_28=macros.expandPath(languageElement.getAttributeValue("path"),file);
    result_9913_27.setPath(result_9913_28);
    String result_9913_29=languageElement.getAttributeValue("folder");
    result_9913_27.setMPSFolder(result_9913_29);
    result_9913_22.getLanguages().add(languagePath);
  }
  for (  Element languageElement : ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(root,"projectDevkits")).first(),"devkitPath"))) {
    Path devkitPath=new Path();
    Path result_9913_30=devkitPath;
    String result_9913_31=macros.expandPath(languageElement.getAttributeValue("path"),file);
    result_9913_30.setPath(result_9913_31);
    String result_9913_32=languageElement.getAttributeValue("folder");
    result_9913_30.setMPSFolder(result_9913_32);
    result_9913_22.getDevkits().add(devkitPath);
  }
  for (  Element e : ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(root,"genConfs")).first(),"genConfModels"))) {
    ModelsTestConfiguration tc=new ModelsTestConfiguration();
    tc.setName(e.getAttributeValue("name"));
    for (    Element me : ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(e,"models")).first(),"model"))) {
      tc.addModel(SModelReference.fromString(me.getAttributeValue("modelRef")));
    }
    result_9913_22.getTestConfigurations().add(tc);
  }
  for (  Element e : ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(root,"genConfs")).first(),"genConfModule"))) {
    ModuleTestConfiguration tc=new ModuleTestConfiguration();
    tc.setName(e.getAttributeValue("name"));
    if (e.getAttributeValue("moduleRef") != null) {
      tc.setModuleRef(ModuleReference.fromString(e.getAttributeValue("moduleRef")));
      result_9913_22.getTestConfigurations().add(tc);
    }
  }
}
