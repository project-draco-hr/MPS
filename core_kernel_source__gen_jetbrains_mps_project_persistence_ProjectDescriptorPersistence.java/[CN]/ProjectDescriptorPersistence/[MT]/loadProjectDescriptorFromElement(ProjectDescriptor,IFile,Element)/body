{
  MacroHelper macros=MacrosFactory.forProjectFile(file);
  ProjectDescriptor result_jnk9az_a1a2=descriptor;
  final String result_jnk9az_a0a1a2=file.getName();
  result_jnk9az_a1a2.setName(result_jnk9az_a0a1a2);
  if (root == null) {
    return;
  }
  List<Element> moduleList=ListSequence.fromList(new ArrayList<Element>());
  ListSequence.fromList(moduleList).addSequence(ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(root,"projectSolutions")).first(),"solutionPath")));
  ListSequence.fromList(moduleList).addSequence(ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(root,"projectLanguages")).first(),"languagePath")));
  ListSequence.fromList(moduleList).addSequence(ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(root,"projectDevkits")).first(),"devkitPath")));
  ListSequence.fromList(moduleList).addSequence(ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(root,"projectModules")).first(),"modulePath")));
  for (  Element moduleElement : ListSequence.fromList(moduleList)) {
    Path modulePath=new Path();
    Path result_jnk9az_a1a9a1a2=modulePath;
    final String result_jnk9az_a0a1a9a1a2=macros.expandPath(moduleElement.getAttributeValue("path"));
    result_jnk9az_a1a9a1a2.setPath(result_jnk9az_a0a1a9a1a2);
    final String result_jnk9az_a1a1a9a1a2=moduleElement.getAttributeValue("folder");
    result_jnk9az_a1a9a1a2.setMPSFolder(result_jnk9az_a1a1a9a1a2);
    result_jnk9az_a1a2.addModule(modulePath);
  }
  for (  Element e : ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(root,"genConfs")).first(),"genConfModels"))) {
    ModelsTestConfiguration tc=new ModelsTestConfiguration();
    tc.setName(e.getAttributeValue("name"));
    for (    Element me : ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(e,"models")).first(),"model"))) {
      tc.addModel(SModelReference.fromString(me.getAttributeValue("modelRef")));
    }
    result_jnk9az_a1a2.getTestConfigurations().add(tc);
  }
  for (  Element e : ListSequence.fromList(AttributeUtils.elementChildren(ListSequence.fromList(AttributeUtils.elementChildren(root,"genConfs")).first(),"genConfModule"))) {
    ModuleTestConfiguration tc=new ModuleTestConfiguration();
    tc.setName(e.getAttributeValue("name"));
    if (e.getAttributeValue("moduleRef") != null) {
      tc.setModuleRef(ModuleReference.fromString(e.getAttributeValue("moduleRef")));
      result_jnk9az_a1a2.getTestConfigurations().add(tc);
    }
  }
}
