{
  MacroHelper macros=MacrosFactory.forProjectFile(file);
  ProjectDescriptor result_jnk9az_a1a3=descriptor;
  final String result_jnk9az_a0a1a3=file.getName();
  result_jnk9az_a1a3.setName(result_jnk9az_a0a1a3);
  if (root == null) {
    return;
  }
  List<Element> moduleList=ListSequence.fromList(new ArrayList<Element>());
  ListSequence.fromList(moduleList).addSequence(Sequence.fromIterable(XmlUtil.children(XmlUtil.first(root,"projectSolutions"),"solutionPath")));
  ListSequence.fromList(moduleList).addSequence(Sequence.fromIterable(XmlUtil.children(XmlUtil.first(root,"projectLanguages"),"languagePath")));
  ListSequence.fromList(moduleList).addSequence(Sequence.fromIterable(XmlUtil.children(XmlUtil.first(root,"projectDevkits"),"devkitPath")));
  ListSequence.fromList(moduleList).addSequence(Sequence.fromIterable(XmlUtil.children(XmlUtil.first(root,"projectModules"),"modulePath")));
  for (  Element moduleElement : ListSequence.fromList(moduleList)) {
    Path modulePath=new Path();
    Path result_jnk9az_a1a9a1a3=modulePath;
    final String result_jnk9az_a0a1a9a1a3=macros.expandPath(moduleElement.getAttributeValue("path"));
    result_jnk9az_a1a9a1a3.setPath(result_jnk9az_a0a1a9a1a3);
    final String result_jnk9az_a1a1a9a1a3=moduleElement.getAttributeValue("folder");
    result_jnk9az_a1a9a1a3.setMPSFolder(result_jnk9az_a1a1a9a1a3);
    result_jnk9az_a1a3.addModule(modulePath);
  }
  for (  Element e : Sequence.fromIterable(XmlUtil.children(XmlUtil.first(root,"genConfs"),"genConfModels"))) {
    ModelsTestConfiguration tc=new ModelsTestConfiguration();
    tc.setName(e.getAttributeValue("name"));
    for (    Element me : Sequence.fromIterable(XmlUtil.children(XmlUtil.first(e,"models"),"model"))) {
      tc.addModel(PersistenceFacade.getInstance().createModelReference(me.getAttributeValue("modelRef")));
    }
    result_jnk9az_a1a3.getTestConfigurations().add(tc);
  }
  for (  Element e : Sequence.fromIterable(XmlUtil.children(XmlUtil.first(root,"genConfs"),"genConfModule"))) {
    ModuleTestConfiguration tc=new ModuleTestConfiguration();
    tc.setName(e.getAttributeValue("name"));
    String moduleRef=e.getAttributeValue("moduleRef");
    if (moduleRef != null) {
      tc.setModuleRef(ModuleReference.fromString(moduleRef));
      result_jnk9az_a1a3.getTestConfigurations().add(tc);
    }
  }
}
