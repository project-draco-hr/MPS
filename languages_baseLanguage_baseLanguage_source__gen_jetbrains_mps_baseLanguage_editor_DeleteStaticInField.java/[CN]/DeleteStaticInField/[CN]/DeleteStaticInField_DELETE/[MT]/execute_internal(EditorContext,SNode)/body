{
  final SNode field=SNodeFactoryOperations.insertNewNextSiblingChild(node,"jetbrains.mps.baseLanguage.structure.FieldDeclaration");
  SLinkOperations.setTarget(field,"type",SLinkOperations.getTarget(node,"type",true),true);
  SLinkOperations.setTarget(field,"visibility",SLinkOperations.getTarget(node,"visibility",true),true);
  SLinkOperations.setTarget(field,"initializer",SLinkOperations.getTarget(node,"initializer",true),true);
  SPropertyOperations.set(field,"isDeprecated","" + (SPropertyOperations.getBoolean(node,"isDeprecated")));
  SPropertyOperations.set(field,"name",SPropertyOperations.getString(node,"name"));
  SPropertyOperations.set(field,"isFinal","" + (SPropertyOperations.getBoolean(node,"isFinal")));
  ListSequence.fromList(SLinkOperations.getTargets(field,"annotation",true)).addSequence(ListSequence.fromList(SLinkOperations.getTargets(node,"annotation",true)));
  AttributeOperations.setAttribute(field,new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment")),AttributeOperations.getAttribute(node,new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.javadoc.structure.FieldDocComment"))));
  SNodeOperations.deleteNode(node);
}
