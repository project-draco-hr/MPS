{
  final String blName=MPSModuleRepository.getInstance().getModuleById(ModuleId.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816")).getModuleFqName();
  concepts=SetSequence.fromSetWithValues(new HashSet<SConcept>(),SetSequence.fromSet(concepts).where(new IWhereFilter<SConcept>(){
    public boolean accept(    SConcept it){
      return NameUtil.namespaceFromConceptFQName(it.getId()).equals(blName);
    }
  }
));
  Map<SModel,Collection<SConcept>> res=new HashMap<SModel,Collection<SConcept>>();
  for (  Map.Entry<SModel,Collection<SConcept>> e : findModels(models,concepts,null).entrySet()) {
    res.put(e.getKey(),e.getValue());
  }
  return res;
}
