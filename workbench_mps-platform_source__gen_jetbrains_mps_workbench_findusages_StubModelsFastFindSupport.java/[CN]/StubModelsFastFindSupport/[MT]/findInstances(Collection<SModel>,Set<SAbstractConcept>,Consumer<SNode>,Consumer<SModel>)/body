{
  final SLanguage bl=MetaAdapterFactory.getLanguage(MetaIdFactory.langId(0xf3061a5392264cc5L,0xa443f952ceaf5816L),"jetbrains.mps.baseLanguage");
  concepts=SetSequence.fromSetWithValues(new HashSet<SAbstractConcept>(),SetSequence.fromSet(concepts).where(new IWhereFilter<SAbstractConcept>(){
    public boolean accept(    SAbstractConcept it){
      return bl.equals(it.getLanguage());
    }
  }
));
  MultiMap<SModel,SAbstractConcept> candidates=findCandidates(models,concepts,processedConsumer,null);
  for (  Map.Entry<SModel,Collection<SAbstractConcept>> e : candidates.entrySet()) {
    FindUsagesUtil.collectInstances(e.getKey(),e.getValue(),consumer);
  }
}
