{
  final String blName=MPSModuleRepository.getInstance().getModuleById(ModuleId.fromString("f3061a53-9226-4cc5-a443-f952ceaf5816")).getModuleName();
  concepts=SetSequence.fromSetWithValues(new HashSet<SAbstractConcept>(),SetSequence.fromSet(concepts).where(new IWhereFilter<SAbstractConcept>(){
    public boolean accept(    SAbstractConcept it){
      return NameUtil.namespaceFromConceptFQName(it.getConceptId()).equals(blName);
    }
  }
));
  MultiMap<SModel,SAbstractConcept> candidates=findCandidates(models,concepts,processedConsumer,null);
  for (  Map.Entry<SModel,Collection<SAbstractConcept>> e : candidates.entrySet()) {
    FindUsagesManager.collectInstances(e.getKey(),e.getValue(),consumer);
  }
}
