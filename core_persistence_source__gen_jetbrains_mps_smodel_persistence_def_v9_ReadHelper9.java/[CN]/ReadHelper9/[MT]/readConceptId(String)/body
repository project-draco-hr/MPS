{
  int ix=s.indexOf(WriteHelper.MODEL_SEPARATOR_CHAR);
  if (ix <= 0) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("Broken reference to type=" + s + " in model "+ myModelRef);
    }
    return new SConceptId111(new SLanguageId(new UUID(0,0)),0);
  }
  SLanguageId langId=MapSequence.fromMap(myLanguageByIx).get(s.substring(0,ix));
  if (langId == null) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("couldn't create node '" + s.substring(ix + 1) + "' : import for index ["+ s.substring(0,ix)+ "] not found");
    }
    return new SConceptId111(new SLanguageId(new UUID(0,0)),0);
  }
 else {
    return new SConceptId111(langId,Long.parseLong(s.substring(ix + 1)));
  }
}
