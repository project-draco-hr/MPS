{
  final LanguageAspect[] aspects=new LanguageAspect[]{LanguageAspect.STRUCTURE,LanguageAspect.CONSTRAINTS,LanguageAspect.EDITOR,LanguageAspect.BEHAVIOR,LanguageAspect.TYPESYSTEM};
  String[] rv=new String[aspects.length + 1];
  for (int i=0; i < aspects.length; i++) {
    rv[i]=String.format(PATH_IN_PROJECT,projectName,LANGUAGES_ROOT,languageNamespace,Language.LANGUAGE_MODELS,aspects[i].getName(),MPSExtentions.MODEL);
  }
  rv[aspects.length]=String.format(PATH_IN_PROJECT,projectName,LANGUAGES_ROOT,languageNamespace,"generator/template","main@generator",MPSExtentions.MODEL);
  return Arrays.asList(rv);
}
