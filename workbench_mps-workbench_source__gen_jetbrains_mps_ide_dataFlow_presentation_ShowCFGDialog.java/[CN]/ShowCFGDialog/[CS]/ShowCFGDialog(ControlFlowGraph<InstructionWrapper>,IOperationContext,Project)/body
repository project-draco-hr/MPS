{
  super(project);
  this.myComponent=new ShowCFGDialog.MyComponent();
  this.myScrollPane=ScrollPaneFactory.createScrollPane(myComponent);
  this.myScrollPane.setBackground(this.getBackground());
  this.myComponent.setFont(this.myComponent.getFont().deriveFont(10.0f));
  this.myControlFlowGraph=graph;
  graph.setComponent(myComponent);
  graph.relayout();
  this.myControlFlowGraph.addBlockListener(new IBlockListener(){
    @Override public void mousePressed(    final MouseEvent event,    final IBlock block){
      ModelAccess.instance().runWriteInEDT(new Runnable(){
        public void run(){
          final SNode node=check_wx2hhz_a0a0a0a0a0a0a0a8a3(((SNodePointer)block.getSourceNode()));
          if (SwingUtilities.isRightMouseButton(event)) {
            JPopupMenu menu=new JPopupMenu();
            JMenuItem item=new JMenuItem("go to data flow rule");
            menu.add(item);
            menu.show(event.getComponent(),block.getX() + block.getWidth() / 2,block.getY() + block.getHeight() / 2);
            SNodeReference ruleRef=block.getRuleNode();
            final SNode ruleNode=check_wx2hhz_a0g0b0a0a0a0a0a0a8a3(ruleRef);
            if (ruleNode == null) {
              item.setEnabled(false);
            }
            item.addActionListener(new ActionListener(){
              public void actionPerformed(              ActionEvent p0){
                ModelAccess.instance().runWriteInEDT(new Runnable(){
                  public void run(){
                    if (ruleNode != null) {
                      NavigationSupport.getInstance().openNode(operationContext,ruleNode,true,false);
                    }
                  }
                }
);
              }
            }
);
          }
 else {
            if (node != null) {
              NavigationSupport.getInstance().openNode(operationContext,node,true,true);
            }
          }
        }
      }
);
    }
  }
);
  init();
}
