{
  String cellId;
  int cellNumber;
  boolean isInList;
  final String model;
  final String id;
  DefaultCellInfo parentInfo=null;
  cellId=e.getAttributeValue(CELL_ID);
  if (cellId == null)   return null;
  String num=e.getAttributeValue(CELL_NUMBER);
  if (num == null)   return null;
  try {
    cellNumber=Integer.parseInt(num);
  }
 catch (  NumberFormatException ex) {
    return null;
  }
  isInList="true".equals(e.getAttributeValue(IS_IN_LIST));
  Element nodeElem=e.getChild(NODE);
  if (nodeElem == null)   return null;
  model=nodeElem.getAttributeValue(MODEL);
  if (model == null)   return null;
  id=nodeElem.getAttributeValue(ID);
  if (id == null)   return null;
  Element parentElem=e.getChild(PARENT);
  if (parentElem != null) {
    parentInfo=loadFrom(parentElem);
    if (parentInfo == null)     return null;
  }
  final DefaultCellInfo result=new DefaultCellInfo();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      result.myNodePointer=new SNodePointer(model,id);
    }
  }
);
  result.myCellId=cellId;
  result.myParentInfo=parentInfo;
  result.myIsInList=isInList;
  result.myCellNumber=cellNumber;
  return result;
}
