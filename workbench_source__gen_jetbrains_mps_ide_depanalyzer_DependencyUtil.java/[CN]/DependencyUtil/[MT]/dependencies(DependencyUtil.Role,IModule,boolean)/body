{
  List<DependencyUtil.Link> result=ListSequence.fromList(new ArrayList<DependencyUtil.Link>());
  ModuleDescriptor descr=module.getModuleDescriptor();
switch (role) {
case None:
    addDeps(result,check_he47wm_b0b0a2a0(descr),DependencyUtil.Role.UsedDevkit,DependencyUtil.LinkType.UsesDevkit);
  addDeps(result,check_he47wm_b0c0a2a0(descr),DependencyUtil.Role.UsedLanguage,DependencyUtil.LinkType.UsesLanguage);
addDeps(result,getReexportDeps(descr),DependencyUtil.Role.DTDependency_,DependencyUtil.LinkType.ReexportsDep);
addDeps(result,getNonreexportDeps(descr),DependencyUtil.Role.DTDependency_,DependencyUtil.LinkType.Depends);
break;
case UsedDevkit:
addDeps(result,check_he47wm_b0a0b2a0(as_he47wm_a0b0a0b2a0(descr,DevkitDescriptor.class)),DependencyUtil.Role.UsedDevkit,DependencyUtil.LinkType.ExtendsDevkit);
addDeps(result,check_he47wm_b0b0b2a0(as_he47wm_a0b0b0b2a0(descr,DevkitDescriptor.class)),DependencyUtil.Role.UsedLanguage,DependencyUtil.LinkType.ExportsLanguage);
addDeps(result,check_he47wm_b0c0b2a0(as_he47wm_a0b0c0b2a0(descr,DevkitDescriptor.class)),DependencyUtil.Role.DTDependency_,DependencyUtil.LinkType.ExportsSolution);
break;
case UsedLanguage:
addDeps(result,check_he47wm_b0a0c2a0(as_he47wm_a0b0a0c2a0(descr,LanguageDescriptor.class)),DependencyUtil.Role.UsedLanguage,DependencyUtil.LinkType.ExtendsLanguage);
if (trackRuntime) {
addDeps(result,check_he47wm_b0a0b0c2a0(as_he47wm_a0b0a0b0c2a0(descr,LanguageDescriptor.class)),DependencyUtil.Role.RTDependency,DependencyUtil.LinkType.ExportsRuntime);
}
break;
case DTDependency_:
addDeps(result,getReexportDeps(descr),DependencyUtil.Role.DTDependency_,DependencyUtil.LinkType.ReexportsDep);
if (trackRuntime) {
addDeps(result,getNonreexportDeps(descr),DependencyUtil.Role.RTDependency,DependencyUtil.LinkType.Depends);
}
break;
case RTDependency:
addDeps(result,getReexportDeps(descr),DependencyUtil.Role.RTDependency,DependencyUtil.LinkType.ReexportsDep);
addDeps(result,getNonreexportDeps(descr),DependencyUtil.Role.RTDependency,DependencyUtil.LinkType.Depends);
break;
case RTLibraries:
break;
default :
}
return result;
}
