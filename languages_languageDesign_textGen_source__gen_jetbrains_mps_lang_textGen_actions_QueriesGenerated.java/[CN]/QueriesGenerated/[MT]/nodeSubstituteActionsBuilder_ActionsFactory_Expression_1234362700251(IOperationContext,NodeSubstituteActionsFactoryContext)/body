{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
      public Iterable<SNode> compute(){
        List<SNode> langTextGenComponents=SNodeOperations.getNodeAncestors(_context.getParentNode(),MetaAdapterFactory.getConcept(new UUID(-5173455103397510980l,-8487484424797171117l),1233921373471l,"jetbrains.mps.lang.textGen.structure.LanguageTextGenDeclaration"),false);
        SNode langTextGen=ListSequence.fromList(langTextGenComponents).first();
        if (langTextGen != null) {
          return LanguageTextGenDeclaration_Behavior.call_getParameters_1234799367488(langTextGen);
        }
 else {
          return ListSequence.fromList(new ArrayList<SNode>());
        }
      }
    }
.compute();
    if (queryResult != null) {
      for (      SNode item : queryResult) {
        ListSequence.fromList(result).addSequence(ListSequence.fromList(ChildSubstituteActionsHelper.createDefaultSubstituteActions(item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter())));
      }
    }
  }
  return result;
}
