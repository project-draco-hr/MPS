{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    Computable computable=new Computable(){
      public Object compute(){
        List<SNode> langTextGenComponents=SNodeOperations.getAncestors(_context.getParentNode(),"jetbrains.mps.lang.textGen.structure.LanguageTextGenDeclaration",false);
        SNode langTextGen=ListSequence.fromList(langTextGenComponents).first();
        if (langTextGen != null) {
          return LanguageTextGenDeclaration_Behavior.call_getParameters_1234799367488(langTextGen);
        }
 else {
          return ListSequence.fromList(new ArrayList<SNode>());
        }
      }
    }
;
    Iterable queryResult=(Iterable)computable.compute();
    if (queryResult != null) {
      for (      Object item : queryResult) {
        ListSequence.fromList(result).addSequence(ListSequence.fromList(ChildSubstituteActionsHelper.createDefaultSubstituteActions((SNode)item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter(),operationContext)));
      }
    }
  }
  return result;
}
