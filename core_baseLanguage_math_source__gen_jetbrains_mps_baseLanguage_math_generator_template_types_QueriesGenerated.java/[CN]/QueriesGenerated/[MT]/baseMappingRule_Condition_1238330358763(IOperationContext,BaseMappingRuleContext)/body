{
  return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(),"leftExpression",true),"jetbrains.mps.baseLanguage.math.structure.LiteralI") && TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(),"rightExpression",true)),new _Quotations.QuotationClass_3().createNode()) || SNodeOperations.isInstanceOf(SLinkOperations.getTarget(_context.getNode(),"rightExpression",true),"jetbrains.mps.baseLanguage.math.structure.LiteralI") && TypeChecker.getInstance().getSubtypingManager().isSubtype(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(_context.getNode(),"leftExpression",true)),new _Quotations.QuotationClass_2().createNode());
}
