{
  Iterable<SNode> list=ListSequence.fromList(SLinkOperations.getTargets(_context.getNode(),"dependencies",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.structure.BuildProjectDependency") && (SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.build.structure.BuildProjectDependency"),"artifacts",true) == null) && !(BuildProject_Behavior.call_isPackaged_4129895186893455885(SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.build.structure.BuildProjectDependency"),"script",false),Context.defaultContext(_context)));
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(it,"jetbrains.mps.build.structure.BuildProjectDependency");
    }
  }
);
  String basePath=BuildProject_Behavior.call_getBasePath_4959435991187146924(_context.getNode(),Context.defaultContext(_context));
  return MultiTuple.<Iterable<SNode>,String>from(list,basePath);
}
