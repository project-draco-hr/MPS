{
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      myListPopup=JBPopupFactory.getInstance().createListPopup(new BaseListPopupStep<SNode>("Choose concept",getAvailableConcepts()){
        public Icon getIconFor(        final SNode concept){
          final Icon[] result=new Icon[1];
          ModelAccess.instance().runReadAction(new Runnable(){
            public void run(){
              String name=NameUtil.longNameFromNamespaceAndShortName(concept.getModel().getSModelFqName().getLongName(),concept.getName());
              result[0]=IconManager.getIconForConceptFQName(name);
            }
          }
);
          return result[0];
        }
        @NotNull public String getTextFor(        final SNode concept){
          final String[] result=new String[]{null};
          ModelAccess.instance().runReadAction(new Runnable(){
            public void run(){
              result[0]=NodePresentationUtil.matchingText(concept);
            }
          }
);
          return result[0];
        }
        public PopupStep onChosen(        final SNode selectedValue,        boolean finalChoice){
          myListPopup.dispose();
          myListPopup=null;
          IdeFocusManager.getGlobalInstance().doWhenFocusSettlesDown(new Runnable(){
            public void run(){
              createLoadableNodeChecked(selectedValue);
            }
          }
);
          return FINAL_CHOICE;
        }
      }
);
      myListPopup.show(relativePoint);
    }
  }
);
}
