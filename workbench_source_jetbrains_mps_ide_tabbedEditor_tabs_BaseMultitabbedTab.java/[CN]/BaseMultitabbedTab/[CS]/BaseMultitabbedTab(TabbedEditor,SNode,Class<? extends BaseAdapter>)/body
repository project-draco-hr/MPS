{
  myTabbedEditor=tabbedEditor;
  myBaseNode=new SNodePointer(baseNode);
  myClass=adapterClass;
  myListener=new SModelAdapter(){
    @Override public void rootRemoved(    SModelRootEvent event){
      if (myBaseNode.getNode() == null)       return;
      if (myBaseNode.getNode() == event.getRoot())       return;
      if (getLoadableNodes().contains(event.getRoot()) || getLoadableNodes().isEmpty()) {
        reinit();
      }
    }
    @Override public void rootAdded(    SModelRootEvent event){
      if (!getLoadableNodes().contains(event.getRoot())) {
        for (        Pair<SNode,IOperationContext> p : tryToLoadNodes()) {
          if (p.o1 == event.getRoot()) {
            reinit();
            break;
          }
        }
      }
    }
    public void referenceAdded(    SModelReferenceEvent event){
      SReference reference=event.getReference();
      INodeAdapter sourceNode=BaseAdapter.fromNode(reference.getSourceNode());
      if (myClass.isInstance(sourceNode.getContainingRoot()) && reference.getTargetNode() == getBaseNode()) {
        reinit();
      }
    }
    public void propertyChanged(    SModelPropertyEvent event){
      SNodePointer pointer=new SNodePointer(event.getNode());
      if (event.getPropertyName().equals(INamedConcept.NAME) && myLoadableNodes.contains(pointer)) {
        myInnerTabbedPane.setTitleAt(myLoadableNodesList.indexOf(pointer),event.getNewPropertyValue());
      }
    }
  }
;
}
