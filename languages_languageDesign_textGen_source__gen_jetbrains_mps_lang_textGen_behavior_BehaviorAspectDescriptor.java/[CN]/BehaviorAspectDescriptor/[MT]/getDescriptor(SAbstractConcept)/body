{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_846f5o_a0w.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return myAbstractAppendPart__BehaviorDescriptor;
      }
    break;
case 1:
  if (true) {
    return myAbstractTextGenDeclaration__BehaviorDescriptor;
  }
break;
case 2:
if (true) {
return myAbstractTextGenParameter__BehaviorDescriptor;
}
break;
case 3:
if (true) {
return myBufferParameter__BehaviorDescriptor;
}
break;
case 4:
if (true) {
return myCollectionAppendPart__BehaviorDescriptor;
}
break;
case 5:
if (true) {
return myConceptTextGenDeclaration__BehaviorDescriptor;
}
break;
case 6:
if (true) {
return myConstantStringAppendPart__BehaviorDescriptor;
}
break;
case 7:
if (true) {
return myContextParameter__BehaviorDescriptor;
}
break;
case 8:
if (true) {
return myEncodingDeclaration__BehaviorDescriptor;
}
break;
case 9:
if (true) {
return myExtensionDeclaration__BehaviorDescriptor;
}
break;
case 10:
if (true) {
return myFilenameFunction__BehaviorDescriptor;
}
break;
case 11:
if (true) {
return myGenerateTextDeclaration__BehaviorDescriptor;
}
break;
case 12:
if (true) {
return myLanguageTextGenDeclaration__BehaviorDescriptor;
}
break;
case 13:
if (true) {
return myNodeAppendPart__BehaviorDescriptor;
}
break;
case 14:
if (true) {
return myNodeParameter__BehaviorDescriptor;
}
break;
case 15:
if (true) {
return myOperationDeclaration__BehaviorDescriptor;
}
break;
case 16:
if (true) {
return myStubOperationDeclaration__BehaviorDescriptor;
}
break;
case 17:
if (true) {
return myUtilityMethodCall__BehaviorDescriptor;
}
break;
case 18:
if (true) {
return myWithIndentOperation__BehaviorDescriptor;
}
break;
default :
}
}
return null;
}
