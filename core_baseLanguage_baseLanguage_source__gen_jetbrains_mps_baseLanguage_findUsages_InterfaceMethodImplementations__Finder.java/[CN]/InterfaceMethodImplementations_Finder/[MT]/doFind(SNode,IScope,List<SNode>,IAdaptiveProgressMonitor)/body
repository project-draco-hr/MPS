{
  List<SNode> implementorsAndAncestorsList=new ArrayList<SNode>();
{
    ICursor<SNode> _zCursor10=CursorFactory.createCursor(this.executeFinder("jetbrains.mps.baseLanguage.findUsages.ImplementingClasses_Finder",SNodeOperations.getParent(node,null,false,false),scope,monitor));
    try {
      while (_zCursor10.moveToNext()) {
        SNode implementor=_zCursor10.getCurrent();
        ListOperations.addElement(implementorsAndAncestorsList,implementor);
        ListOperations.addAllElements(implementorsAndAncestorsList,this.executeFinder("jetbrains.mps.baseLanguage.findUsages.ClassAncestors_Finder",implementor,scope,monitor));
      }
    }
  finally {
      _zCursor10.release();
    }
  }
  Set<SNode> implementorsAndAncestorsNodes=new HashSet<SNode>();
{
    ICursor<SNode> _zCursor11=CursorFactory.createCursor(implementorsAndAncestorsList);
    try {
      while (_zCursor11.moveToNext()) {
        SNode implementorOrAncestor=_zCursor11.getCurrent();
        implementorsAndAncestorsNodes.add(implementorOrAncestor);
      }
    }
  finally {
      _zCursor11.release();
    }
  }
{
    ICursor<SNode> _zCursor12=CursorFactory.createCursor(implementorsAndAncestorsNodes);
    try {
      while (_zCursor12.moveToNext()) {
        SNode classNode=_zCursor12.getCurrent();
{
          ICursor<SNode> _zCursor13=CursorFactory.createCursor(SLinkOperations.getTargets(classNode,"method",true));
          try {
            while (_zCursor13.moveToNext()) {
              SNode sMethod=_zCursor13.getCurrent();
              if (BaseMethodDeclaration_Behavior.call_hasSameSignature_1204901126405(sMethod,node)) {
                ListOperations.addElement(_results,sMethod);
              }
            }
          }
  finally {
            _zCursor13.release();
          }
        }
      }
    }
  finally {
      _zCursor12.release();
    }
  }
}
