{
  try {
    myTracer.push(COMPILING_JAVA_MSG);
    IClassPathItem classPath=computeDependenciesClassPath(myModulesContainer.getModules(),myTracer);
    final CompilationErrorsHandler errorsHandler=new CompilationErrorsHandler(myModulesContainer,mySender,classPath);
    CompilationHandler compilationHandler=new CompilationHandler(classPath,errorsHandler);
    final CollectingResultsListener listener=new CollectingResultsListener(errorsHandler);
    compiler.addCompilationResultListener(listener);
    doCompileJava(compiler,classPath,myCompilerOptions);
    compiler.removeCompilationResultListener(listener);
    Collection<SModule> changedModules=compilationHandler.process(listener.getResults());
    if (changedModules.isEmpty()) {
      mySender.error(NO_CHANGES_AFTER_COMPILATION_ERROR);
    }
    return new MPSCompilationResult(errorsHandler.getErrorsCount(),0,false,changedModules);
  }
  finally {
    myTracer.pop();
  }
}
