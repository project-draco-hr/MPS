{
  if (!myModulesContainer.hasNoExcludedModule()) {
    return MPSCompilationResult.ZERO_COMPILATION_RESULT;
  }
  myTracer.push(PREPARING_TO_COMPILE_MSG);
  ModuleAnalyzerResult analysisResult=new ModuleAnalyzer(myModulesContainer,mySender).analyze();
  EclipseJavaCompiler compiler=new EclipseJavaCompiler();
  for (  SModule module : myModulesContainer.getModules()) {
    if (!myModulesContainer.areClassesUpToDate(module)) {
      if (ModulesContainer.isCompileInMps(module)) {
        for (        JavaFile javaFile : myModulesContainer.getSources(module).getFilesToCompile()) {
          compiler.addSource(javaFile.getClassName(),javaFile.getContents());
          myModulesContainer.putClassForModule(javaFile.getClassName(),module);
        }
      }
    }
  }
  myTracer.pop();
  if (!analysisResult.hasJavaToCompile && !analysisResult.hasResourcesToUpdate) {
    return MPSCompilationResult.nothingToDoCompilationResult();
  }
  MPSCompilationResult result;
  if (!analysisResult.hasJavaToCompile) {
    result=MPSCompilationResult.noJavaCompiledCompilationResult();
  }
 else {
    result=compileJava(compiler);
    reportModulesWithRemovalsAreNotChanged(analysisResult.modulesWithRemovals,result.getChangedModules());
    invalidateCompiledClasses();
    return result;
  }
  copyResources();
  return result;
}
