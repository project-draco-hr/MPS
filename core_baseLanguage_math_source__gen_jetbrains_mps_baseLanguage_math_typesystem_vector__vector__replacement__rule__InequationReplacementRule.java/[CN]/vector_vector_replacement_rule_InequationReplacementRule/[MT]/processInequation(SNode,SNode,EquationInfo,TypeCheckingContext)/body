{
{
    SNode _nodeToCheck_1029348928467=equationInfo.getNodeWithError();
    BaseIntentionProvider intentionProvider=null;
    EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)","6389121991275106407",0,intentionProvider);
    _info_12389875345.pushOuterRuleId((equationInfo).getRuleModel(),(equationInfo).getRuleId());
    _info_12389875345.setInequationGroup("default");
    typeCheckingContext.createLessThanInequation((SNode)SLinkOperations.getTarget(subtype,"elementType",true),(SNode)SLinkOperations.getTarget(supertype,"elementType",true),false,_info_12389875345);
  }
  if (SPropertyOperations.getInteger(subtype,"height") != 0 && SPropertyOperations.getInteger(supertype,"height") != 0) {
    if (!(SPropertyOperations.getInteger(subtype,"height") == SPropertyOperations.getInteger(supertype,"height"))) {
{
        BaseIntentionProvider intentionProvider=null;
        IErrorTarget errorTarget=new NodeErrorTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(equationInfo.getNodeWithError()," invalid vector dimensions","r:47d0f24b-df34-4ea0-aa7e-7c2eb0f88f31(jetbrains.mps.baseLanguage.math.typesystem)","6389121991275106420",intentionProvider,errorTarget);
        _reporter_2309309498.addAdditionalRuleId((equationInfo).getRuleModel(),(equationInfo).getRuleId());
      }
    }
  }
}
