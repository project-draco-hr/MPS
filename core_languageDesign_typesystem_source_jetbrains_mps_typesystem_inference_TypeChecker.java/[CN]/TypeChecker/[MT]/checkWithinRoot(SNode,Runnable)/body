{
  try {
    MyReadAccessListener listener=new MyReadAccessListener();
    NodeReadAccessCaster.setNodeAccessListener(listener);
    checkingAction.run();
synchronized (listener.myLock) {
      for (      SNode nodeToDependOn : listener.myNodesToDependOn) {
        WeakSet<SNode> dependentRoots=myNodesToDependentRoots.get(nodeToDependOn);
        if (dependentRoots == null) {
          dependentRoots=new WeakSet<SNode>(1);
          myNodesToDependentRoots.put(nodeToDependOn,dependentRoots);
        }
        dependentRoots.add(node.getContainingRoot());
      }
    }
    SModel model=node.getModel();
    model.removeModelCommandListener(myListener);
    model.removeModelListener(myListener);
    model.addModelCommandListener(myListener);
    model.addWeakSModelListener(myListener);
  }
  finally {
    NodeReadAccessCaster.removeNodeAccessListener();
  }
}
