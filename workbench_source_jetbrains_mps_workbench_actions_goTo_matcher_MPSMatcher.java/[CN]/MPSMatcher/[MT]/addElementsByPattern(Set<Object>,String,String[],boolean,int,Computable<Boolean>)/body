{
  if (pattern.length() == 0 && !canShowListForEmptyPattern())   return false;
  List<String> namesList=new ArrayList<String>();
  getNamesByPattern(namesList,pattern,names,isCancelled);
  if (isCancelled.compute()) {
    throw new ProcessCanceledException();
  }
  Collections.sort(namesList,new MatchesComparator(pattern));
  boolean overflow=false;
  All:   for (  String name : namesList) {
    if (isCancelled.compute()) {
      throw new ProcessCanceledException();
    }
    final Object[] elements=myModel.getElementsByName(name,checkboxState,name);
    List<Object> sameNameElements=new SmartList<Object>();
    sameNameElements.addAll(Arrays.asList(elements));
    for (    Object element : sameNameElements) {
      result.add(element);
      if (result.size() >= maxCount) {
        overflow=true;
        break All;
      }
    }
  }
  return overflow;
}
