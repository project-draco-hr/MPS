{
  final List<SNode> pathToRoot=SModelUtils.getPathToRoot(e.getParent());
  final List<SNode> currentChildren=getCurrentChildren(e.getParent(),e.getChildRole());
  myCommandQueue.runTask(new Runnable(){
    public void run(){
      if (!(checkLoaded())) {
        return;
      }
      fireChangeUpdateStarted();
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          if (isAncestorAlreadyAdded(pathToRoot)) {
            return;
          }
          SNode child=e.getChild();
          String prevRole=null;
          SNode prevSibling=child.prevSibling();
          if (prevSibling != null) {
            prevRole=prevSibling.getRole_();
          }
          boolean isSingle=SModelUtils.isChildInSingleRole(e);
          if (isSingle) {
            if (removeChanges(DeleteNodeChange.class,new _FunctionTypes._return_P1_E0<Boolean,DeleteNodeChange>(){
              public Boolean invoke(              DeleteNodeChange ch){
                return ch.getAffectedNodeId().equals(e.getChild().getSNodeId()) && ObjectUtils.equals(ch.getParentId(),e.getParent().getSNodeId());
              }
            }
) != 0) {
              return;
            }
            SNode thisNodeInBase=myBaseVersionModel.getNodeById(e.getChild().getSNodeId());
            if (thisNodeInBase != null) {
              if (e.getParent().getSNodeId().equals(check_fh1co9_a0a0a0c0i0a3a0a0c0t0(SNodeOperations.getParent(thisNodeInBase))) && e.getChildRole().equals(SNodeOperations.getContainingLinkRole(thisNodeInBase))) {
                return;
              }
            }
            removeChanges(DeleteNodeChange.class,new _FunctionTypes._return_P1_E0<Boolean,DeleteNodeChange>(){
              public Boolean invoke(              DeleteNodeChange ch){
                return ObjectUtils.equals(ch.getParentId(),e.getParent().getSNodeId()) && e.getChildRole().equals(ch.getRole());
              }
            }
);
            removeChanges(SetNodeChange.class,new _FunctionTypes._return_P1_E0<Boolean,SetNodeChange>(){
              public Boolean invoke(              SetNodeChange ch){
                return ObjectUtils.equals(ch.getNodeParent(),e.getParent().getSNodeId()) && e.getChildRole().equals(ch.getNodeRole());
              }
            }
);
            addChange(new SetNodeChange(child.getConceptFqName(),child.getSNodeId(),e.getChildRole(),e.getParent().getSNodeId(),check_fh1co9_e0a0f0i0a3a0a0c0t0(check_fh1co9_a4a0a5a8a0d0a0a2a91a(myBaseVersionModel.getNodeById(e.getParent().getSNodeId()),e)),prevRole),e.getAffectedRoot());
          }
 else {
            refreshMultipleChildChanges(e.getParent(),e.getChildRole(),currentChildren,false);
          }
          if (recursively) {
            recursivelyChildAdded(e.getChild());
          }
        }
      }
);
      fireChangeUpdateFinished();
    }
  }
);
}
