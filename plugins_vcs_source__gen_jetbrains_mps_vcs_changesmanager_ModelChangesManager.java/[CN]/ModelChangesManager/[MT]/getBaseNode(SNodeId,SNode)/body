{
  SNode baseNode=myBaseVersionModel.getNodeById(childId);
  SNode copyOfBaseNode=CopyUtil.copyAndPreserveId(baseNode);
  SModel model=getModel();
  List<SNode> nodesToChangeId=ListSequence.<SNode>fromList(new ArrayList<SNode>());
  for (  SNode descendant : ListSequence.<SNode>fromList(SNodeOperations.getDescendants(baseNode,null,true,new String[]{}))) {
    SNode maybeOverlappedNode=model.getNodeById(descendant.getSNodeId());
    if (maybeOverlappedNode != null) {
      if (nodeToBeReplaced != null && nodeToBeReplaced.isAncestorOf(maybeOverlappedNode)) {
        continue;
      }
      ListSequence.<SNode>fromList(nodesToChangeId).addElement(maybeOverlappedNode);
    }
  }
  for (  SNode node : ListSequence.<SNode>fromList(SModelUtils.getDominators(nodesToChangeId))) {
    resetNodeId(node);
  }
  return copyOfBaseNode;
}
