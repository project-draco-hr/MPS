{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case 0:
    return props_AsBuilderStatement;
case 1:
  return props_AsTypeBuilder;
case 2:
return props_BaseSimpleBuilderDeclaration;
case 3:
return props_BeanBuilder;
case 4:
return props_BeanPropertyBuilder;
case 5:
return props_Builder;
case 6:
return props_BuilderContainer;
case 7:
return props_BuilderCreator;
case 8:
return props_BuilderStatement;
case 9:
return props_ResultExpression;
case 10:
return props_SimpleBuilder;
case 11:
return props_SimpleBuilderChild;
case 12:
return props_SimpleBuilderChildExpression;
case 13:
return props_SimpleBuilderDeclaration;
case 14:
return props_SimpleBuilderExpression;
case 15:
return props_SimpleBuilderExtensionDeclaration;
case 16:
return props_SimpleBuilderParameter;
case 17:
return props_SimpleBuilderParameterReference;
case 18:
return props_SimpleBuilderParentExpression;
case 19:
return props_SimpleBuilderProperty;
case 20:
return props_SimpleBuilderPropertyBuilder;
case 21:
return props_SimpleBuilderPropertyExpression;
case 22:
return props_SimpleBuilderPropertyParent;
case 23:
return props_SimpleBuilderPropertyValue;
case 24:
return props_SimpleBuilders;
}
throw new IllegalStateException("Unknown concept " + c);
}
