{
  String namespace=check_fy6mn3_a0b0a(check_fy6mn3_a0a1a0(typeCheckingContext.getOperationContext()));
  if (namespace == null) {
    return;
  }
  SNode exp=SLinkOperations.getTarget(ListSequence.fromList(SNodeOperations.getAncestors(((SNode)SNodeOperations.getConceptDeclaration(node)),null,true)).findFirst(new IWhereFilter<SNode>(){
    public boolean accept(    SNode n){
      return (SLinkOperations.getTarget(n,AttributesRolesUtil.childRoleFromAttributeRole("export"),true) != null);
    }
  }
),AttributesRolesUtil.childRoleFromAttributeRole("export"),true);
  if ((exp == null)) {
  }
 else   if (namespace.equals(check_fy6mn3_a0a0f0a(check_fy6mn3_a0a0a5a0(check_fy6mn3_a0a0a0f0a(SNodeOperations.getModel(SNodeOperations.getConceptDeclaration(node))))))) {
  }
 else   if (SNodeOperations.isInstanceOf(exp,"jetbrains.mps.lang.core.structure.ExportScopeModule")) {
{
      BaseIntentionProvider intentionProvider=null;
      IErrorTarget errorTarget=new NodeErrorTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(node,"usage of nonpublic API","r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)","4075196924244387032",intentionProvider,errorTarget);
    }
  }
 else   if (SNodeOperations.isInstanceOf(exp,"jetbrains.mps.lang.core.structure.ExportScopeNamespace") && !(namespace.startsWith(SPropertyOperations.getString(SNodeOperations.cast(exp,"jetbrains.mps.lang.core.structure.ExportScopeNamespace"),"namespace")))) {
{
      BaseIntentionProvider intentionProvider=null;
      IErrorTarget errorTarget=new NodeErrorTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(node,"usage of nonpublic API","r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)","4075196924244387095",intentionProvider,errorTarget);
    }
  }
  for (  SReference ref : Sequence.fromIterable(SNodeOperations.getReferences(node))) {
    SNode target=SLinkOperations.getTargetNode(ref);
    String targNamespace=check_fy6mn3_a0b0h0a(check_fy6mn3_a0a1a7a0(check_fy6mn3_a0a0b0h0a(SNodeOperations.getModel(target))));
    if (targNamespace == null || targNamespace.equals(namespace)) {
      continue;
    }
    exp=SLinkOperations.getTarget(ListSequence.fromList(SNodeOperations.getAncestors(SLinkOperations.getTargetNode(ref),null,true)).findFirst(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return (SLinkOperations.getTarget(it,AttributesRolesUtil.childRoleFromAttributeRole("export"),true) != null);
      }
    }
),AttributesRolesUtil.childRoleFromAttributeRole("export"),true);
    if ((exp == null)) {
      if (targNamespace.startsWith("jetbrains.mps")) {
{
          BaseIntentionProvider intentionProvider=null;
          IErrorTarget errorTarget=new NodeErrorTarget();
          errorTarget=new ReferenceErrorTarget(SLinkOperations.getRole(ref));
          IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(node,"usage of nonpublic API","r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)","5425021671150237358",intentionProvider,errorTarget);
        }
      }
    }
 else     if (SNodeOperations.isInstanceOf(exp,"jetbrains.mps.lang.core.structure.ExportScopeModule")) {
{
        BaseIntentionProvider intentionProvider=null;
        IErrorTarget errorTarget=new NodeErrorTarget();
        errorTarget=new ReferenceErrorTarget(SLinkOperations.getRole(ref));
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(node,"usage of nonpublic API","r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)","4075196924244387112",intentionProvider,errorTarget);
      }
    }
 else     if (SNodeOperations.isInstanceOf(exp,"jetbrains.mps.lang.core.structure.ExportScopeNamespace") && !(targNamespace.startsWith(SPropertyOperations.getString(SNodeOperations.cast(exp,"jetbrains.mps.lang.core.structure.ExportScopeNamespace"),"namespace")))) {
{
        BaseIntentionProvider intentionProvider=null;
        IErrorTarget errorTarget=new NodeErrorTarget();
        errorTarget=new ReferenceErrorTarget(SLinkOperations.getRole(ref));
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(node,"usage of nonpublic API","r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)","4075196924244387149",intentionProvider,errorTarget);
      }
    }
  }
}
