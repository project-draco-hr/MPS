{
{
    final SNode type=TypeChecker.getInstance().getRuntimeSupport().typeOf(SLinkOperations.getTarget(nodeToCheck,"literal",true),"jetbrains.mps.matrixLanguage.helgins","1210175481776",true);
    TypeChecker.getInstance().getRuntimeSupport().whenConcrete(type,new Runnable(){
      public void run(){
        if (!(SNodeOperations.isInstanceOf(TypeChecker.getInstance().getEquationManager().getRepresentator(type),"jetbrains.mps.matrixLanguage.structure.MatrixType"))) {
{
            BaseIntentionProvider intentionProvider=null;
            TypeChecker.getInstance().reportTypeError(nodeToCheck,"Should be matrix but was " + SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(TypeChecker.getInstance().getEquationManager().getRepresentator(type)),"name"),"jetbrains.mps.matrixLanguage.helgins@22_0","1215699388921",intentionProvider);
          }
        }
        SNode matrix=(SNode)TypeChecker.getInstance().getEquationManager().getRepresentator(type);
{
          SNode _nodeToCheck_1029348928467=nodeToCheck;
          TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(_nodeToCheck_1029348928467,"jetbrains.mps.matrixLanguage.helgins","1215405423730",true),SLinkOperations.getTarget(matrix,"scalarType",true),_nodeToCheck_1029348928467,null,"jetbrains.mps.matrixLanguage.helgins@22_0","1215699388937");
        }
      }
    }
,"jetbrains.mps.matrixLanguage.helgins","1210172894554");
  }
}
