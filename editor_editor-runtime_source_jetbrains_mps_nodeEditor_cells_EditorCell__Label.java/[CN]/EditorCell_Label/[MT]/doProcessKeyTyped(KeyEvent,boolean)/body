{
  if (!isTextTypedEvent(keyEvent)) {
    return false;
  }
  int caretPosition=getCaretPosition();
  CellSide side;
  if (caretPosition == 0) {
    side=CellSide.LEFT;
  }
 else   if (caretPosition == getRenderedText().length()) {
    side=CellSide.RIGHT;
  }
 else {
    side=null;
  }
  ModelAccess modelAccess=getContext().getRepository().getModelAccess();
  if (isEditable()) {
    ProcessKeyTypedCommand keyTypedCommand=new ProcessKeyTypedCommand(keyEvent,allowErrors,side);
    modelAccess.executeCommand(keyTypedCommand);
    getEditor().relayout();
    return keyTypedCommand.getResult();
  }
 else   if (side != null) {
    String pattern=getTextOnEvent(keyEvent);
    if (!pattern.equals(getRenderedText())) {
      return IntelligentInputUtil.processCell(this,getContext(),pattern,side);
    }
  }
  return false;
}
