{
  String oldText=myTextLine.getText();
  int caretPosition=myTextLine.getCaretPosition();
  if (myActionType == CellActionType.BACKSPACE) {
    if (myTextLine.hasNonTrivialSelection()) {
      deleteSelection();
      deleteIfPossible(myActionType);
      return true;
    }
    if (caretPosition > 0) {
      String newText=oldText.substring(0,caretPosition - 1) + oldText.substring(caretPosition);
      if (!myAllowErrors && !isValidText(newText)) {
        return false;
      }
      changeText(newText);
      addChangeTextUndoableAction();
      if (!isCaretPositionAllowed(caretPosition - 1)) {
        return false;
      }
      setCaretPosition(caretPosition - 1);
      ensureCaretVisible();
      deleteIfPossible(myActionType);
      return true;
    }
 else {
      jetbrains.mps.openapi.editor.cells.EditorCell prevLeaf=CellTraversalUtil.getPrevLeaf(EditorCell_Label.this);
      if (myAllowErrors && canDeleteFrom(prevLeaf)) {
        EditorCell_Label label=(EditorCell_Label)prevLeaf;
        getEditor().changeSelection(label);
        label.end();
        label.executeTextAction(myActionType,true);
        return true;
      }
      return false;
    }
  }
 else   if (myActionType == CellActionType.DELETE) {
    if (myTextLine.hasNonTrivialSelection()) {
      deleteSelection();
      deleteIfPossible(myActionType);
      return true;
    }
 else     if (caretPosition < oldText.length()) {
      String newText=oldText.substring(0,caretPosition) + oldText.substring(caretPosition + 1);
      if (!myAllowErrors && !isValidText(newText)) {
        return false;
      }
      changeText(newText);
      addChangeTextUndoableAction();
      ensureCaretVisible();
      deleteIfPossible(myActionType);
      return true;
    }
 else {
      jetbrains.mps.openapi.editor.cells.EditorCell nextLeaf=CellTraversalUtil.getNextLeaf(EditorCell_Label.this);
      if (myAllowErrors && canDeleteFrom(nextLeaf)) {
        EditorCell_Label label=(EditorCell_Label)nextLeaf;
        getEditor().changeSelection(label);
        label.home();
        label.executeTextAction(myActionType,true);
        return true;
      }
      return false;
    }
  }
  return false;
}
