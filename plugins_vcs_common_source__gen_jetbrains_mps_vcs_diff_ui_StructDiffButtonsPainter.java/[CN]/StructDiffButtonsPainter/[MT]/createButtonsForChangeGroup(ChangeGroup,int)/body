{
  boolean allInsert=ListSequence.fromList(changeGroup.getChanges()).all(new IWhereFilter<ModelChange>(){
    public boolean accept(    ModelChange c){
      return c.getType() == ChangeType.ADD;
    }
  }
);
  boolean allDelete=ListSequence.fromList(changeGroup.getChanges()).all(new IWhereFilter<ModelChange>(){
    public boolean accept(    ModelChange c){
      return c.getType() == ChangeType.DELETE;
    }
  }
);
  List<FoldingAreaButton> result=ListSequence.fromList(new ArrayList<FoldingAreaButton>());
  if (isHighlightLeft()) {
    if (!(allInsert)) {
      ListSequence.fromList(result).addElement(new StructDiffButtonsPainter.MyButtonRevert(changeGroup,getX(0),y,"Replace",MIRRORED_APPLY_ICON));
    }
    if (allDelete) {
      ListSequence.fromList(result).addElement(new StructDiffButtonsPainter.MyButtonApply(changeGroup,getX(1),y,"Remove",IdeIcons.EXCLUDE));
    }
  }
 else {
    if (allInsert) {
      ListSequence.fromList(result).addElement(new StructDiffButtonsPainter.MyButtonRevert(changeGroup,getX(0),y,"Remove",IdeIcons.EXCLUDE));
    }
    if (!(allDelete)) {
      ListSequence.fromList(result).addElement(new StructDiffButtonsPainter.MyButtonApply(changeGroup,getX(1),y,"Replace",IdeIcons.APPLY));
    }
  }
  return result;
}
