{
  SNode classifier=SLinkOperations.getTarget(classifierType,"classifier",false);
  if (!(ListSequence.fromList(SLinkOperations.getTargets(classifierType,"parameter",true)).isEmpty() || ListSequence.fromList(SLinkOperations.getTargets(classifierType,"parameter",true)).count() == ListSequence.fromList(SLinkOperations.getTargets(classifier,"typeVariableDeclaration",true)).count())) {
    MessageTarget errorTarget=new NodeMessageTarget();
    IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(classifierType,"wrong number of type parameters","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1195494591081",null,errorTarget);
  }
  Map<SNode,SNode> typeParamsToArgs=MapSequence.fromMap(new HashMap<SNode,SNode>());
{
    SNode typeParameter;
    SNode typeVar;
    Iterator<SNode> typeParameter_iterator=ListSequence.fromList(SLinkOperations.getTargets(classifierType,"parameter",true)).iterator();
    Iterator<SNode> typeVar_iterator=ListSequence.fromList(SLinkOperations.getTargets(classifier,"typeVariableDeclaration",true)).iterator();
    while (true) {
      if (!(typeParameter_iterator.hasNext())) {
        break;
      }
      if (!(typeVar_iterator.hasNext())) {
        break;
      }
      typeParameter=typeParameter_iterator.next();
      typeVar=typeVar_iterator.next();
      MapSequence.fromMap(typeParamsToArgs).put(typeVar,typeParameter);
    }
  }
  for (  SNode typeParameter : SLinkOperations.getTargets(classifierType,"parameter",true)) {
    if (!(!(TypeChecker.getInstance().getSubtypingManager().isSubtype(typeParameter,SLinkOperations.getTarget(_quotation_createNode_i2c76q_a1a0a0a4a1(),"descriptor",false),false)))) {
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(typeParameter,"primitive types not allowed","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1195494591112",null,errorTarget);
    }
  }
  if (ListSequence.fromList(SLinkOperations.getTargets(classifierType,"parameter",true)).count() == ListSequence.fromList(SLinkOperations.getTargets(classifier,"typeVariableDeclaration",true)).count()) {
{
      Iterator<SNode> typeArgument_it=ListSequence.fromList(SLinkOperations.getTargets(classifierType,"parameter",true)).iterator();
      Iterator<SNode> typeVar_it=ListSequence.fromList(SLinkOperations.getTargets(classifier,"typeVariableDeclaration",true)).iterator();
      SNode typeArgument_var;
      SNode typeVar_var;
      while (typeArgument_it.hasNext() && typeVar_it.hasNext()) {
        typeArgument_var=typeArgument_it.next();
        typeVar_var=typeVar_it.next();
        if (SNodeOperations.isInstanceOf(typeArgument_var,"jetbrains.mps.baseLanguage.structure.WildCardType") || SNodeOperations.isInstanceOf(typeArgument_var,"jetbrains.mps.baseLanguage.structure.LowerBoundType") || SNodeOperations.isInstanceOf(typeArgument_var,"jetbrains.mps.baseLanguage.structure.UpperBoundType")) {
          continue;
        }
        if ((SLinkOperations.getTarget(typeVar_var,"bound",true) != null)) {
          SNode concreteBound=RulesFunctions_BaseLanguage.concretifyType(SLinkOperations.getTarget(typeVar_var,"bound",true),typeParamsToArgs);
          if (!(TypeChecker.getInstance().getSubtypingManager().isSubtype(typeArgument_var,concreteBound))) {
            MessageTarget errorTarget=new NodeMessageTarget();
            IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(typeArgument_var,"type parameter is not within its bounds","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","2452011492298387662",null,errorTarget);
          }
        }
        for (        SNode auxBound : SLinkOperations.getTargets(typeVar_var,"auxBounds",true)) {
          SNode concreteBound=RulesFunctions_BaseLanguage.concretifyType(auxBound,typeParamsToArgs);
          if (!(TypeChecker.getInstance().getSubtypingManager().isSubtype(typeArgument_var,concreteBound))) {
            MessageTarget errorTarget=new NodeMessageTarget();
            IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(typeArgument_var,"type parameter is not within its bounds","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","2452011492298387681",null,errorTarget);
          }
        }
      }
    }
  }
}
