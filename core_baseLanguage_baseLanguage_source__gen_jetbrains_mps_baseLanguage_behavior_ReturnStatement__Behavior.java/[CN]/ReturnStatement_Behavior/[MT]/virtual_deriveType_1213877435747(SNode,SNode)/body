{
  SNode type=null;
  if (SNodeOperations.getParent(expression) == thisNode && SNodeOperations.hasRole(expression,"jetbrains.mps.baseLanguage.structure.ReturnStatement","expression")) {
    SNode ancestor=SNodeOperations.getAncestorWhereConceptInList(thisNode,new String[]{"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration","jetbrains.mps.baseLanguage.structure.ConceptFunction"},false,false);
    if (SNodeOperations.isInstanceOf(ancestor,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration")) {
      type=SNodeOperations.copyNode(SLinkOperations.getTarget(SNodeOperations.cast(ancestor,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"),"returnType",true));
    }
 else {
      SNode expectedReturnType=ConceptFunction_Behavior.call_getExpectedReturnType_1213877374441(SNodeOperations.cast(ancestor,"jetbrains.mps.baseLanguage.structure.ConceptFunction"));
      if (SNodeOperations.isInstanceOf(expectedReturnType,"jetbrains.mps.baseLanguage.structure.Type")) {
        type=SNodeOperations.cast(SNodeOperations.copyNode(expectedReturnType),"jetbrains.mps.baseLanguage.structure.Type");
      }
    }
  }
  return type;
}
