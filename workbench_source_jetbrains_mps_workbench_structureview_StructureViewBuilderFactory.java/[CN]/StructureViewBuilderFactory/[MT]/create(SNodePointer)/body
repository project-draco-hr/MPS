{
  return ModelAccess.instance().runReadAction(new Computable<StructureViewBuilder>(){
    public StructureViewBuilder compute(){
      List<EditorTabDescriptor> tabs=myProject.getComponent(ProjectPluginManager.class).getTabDescriptors();
      SNode node=np.getNode();
      for (      EditorTabDescriptor tab : tabs) {
        SNode baseNode=tab.getBaseNode(node);
        if (baseNode != null) {
          myLastBaseNode=new SNodePointer(baseNode);
          return new ConceptStructureViewBuilder(myProject,myLastBaseNode);
        }
      }
      if (myLastBaseNode != null) {
        for (        EditorTabDescriptor tab : tabs) {
          SNode lastBaseNode=myLastBaseNode.getNode();
          if (!tab.isApplicable(lastBaseNode))           continue;
          if (!tab.getNodes(lastBaseNode).contains(node))           continue;
          return new ConceptStructureViewBuilder(myProject,myLastBaseNode);
        }
      }
      myLastBaseNode=null;
      return null;
    }
  }
);
}
