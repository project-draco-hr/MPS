{
  GraphLayout graphLayout=new GraphLayout(myGraph);
  for (  Node node : ListSequence.<Node>fromList(myGraph.getNodes())) {
    Node leafNode=MapSequence.<Node,Node>fromMap(myNodeMap).get(node);
    if (leafNode != null) {
      graphLayout.setLayoutFor(node,layout.getNodeLayout(leafNode));
    }
 else {
      Node cluster=MapSequence.<Node,Node>fromMap(myClusterMap).get(node);
      List<Point> clusterLayout=layout.getClusterLayout(cluster);
      graphLayout.setLayoutFor(node,GeomUtil.getContainingRectangle(clusterLayout));
    }
  }
  for (  Edge edge : ListSequence.<Edge>fromList(myGraph.getEdges())) {
    List<Point> route=layout.getEdgeLayout(MapSequence.<Edge,Edge>fromMap(myEdgeMap).get(edge));
    Node source=edge.getSource();
    if (!(MapSequence.fromMap(myNodeMap).containsKey(source))) {
      Rectangle rect=graphLayout.getNodeLayout(source);
      route=cutRouteToBorder(route,rect);
    }
    Node target=edge.getTarget();
    if (!(MapSequence.fromMap(myNodeMap).containsKey(target))) {
      Rectangle rect=graphLayout.getNodeLayout(target);
      route=ListSequence.<Point>fromList(cutRouteToBorder(ListSequence.<Point>fromList(route).reversedList(),rect)).reversedList();
    }
    graphLayout.setLayoutFor(edge,route);
    Rectangle labelRect=layout.getLabelLayout(MapSequence.<Edge,Edge>fromMap(myEdgeMap).get(edge));
    if (labelRect != null) {
      graphLayout.setLabelLayout(edge,labelRect);
    }
  }
  return graphLayout;
}
