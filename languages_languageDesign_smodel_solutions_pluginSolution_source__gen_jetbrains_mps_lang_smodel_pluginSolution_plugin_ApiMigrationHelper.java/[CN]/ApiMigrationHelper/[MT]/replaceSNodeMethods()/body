{
  List<Tuples._4<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>> transformations=ListSequence.fromList(new ArrayList<Tuples._4<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>>());
  String cat="getConceptFqName()->getConcept().getQualifiedName()";
  SNode md=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0f0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a7a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat,md,transVerifier,transformer));
  String cat2="getReferent()->getReferenceTarget()";
  SNode md2=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0o0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier2=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer2=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(usage,SLinkOperations.getTarget(SNodeOperations.cast(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a0a61a1().createNode(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operation",true));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat2,md2,transVerifier2,transformer2));
  String cat3="setReferent()->setReferenceTarget()";
  SNode md3=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0x0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier3=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer3=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(usage,SLinkOperations.getTarget(SNodeOperations.cast(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a0a52a1().createNode(usage,SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operation",true));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat3,md3,transVerifier3,transformer3));
  String cat4="isAncestor()->SNodeOperations.isAncestor()";
  SNode md4=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0gb0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier4=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer4=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a43a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat4,md4,transVerifier4,transformer4));
  String cat5="getId()->getSNodeId().toString()";
  SNode md5=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0pb0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier5=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer5=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a34a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat5,md5,transVerifier5,transformer5));
  String cat6="getSNodeId()->getNodeId()";
  SNode md6=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0yb0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier6=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer6=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a25a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat6,md6,transVerifier6,transformer6));
  String cat7="addReference()->setReference()";
  SNode md7=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0hc0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier7=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer7=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a16a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat7,md7,transVerifier7,transformer7));
  String cat8="getRole_()->getRole()";
  SNode md8=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0qc0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier8=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer8=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a07a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat8,md8,transVerifier8,transformer8));
  String cat9="isRegistered()->SNodeOperations.isRegistered()";
  SNode md9=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0zc0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier9=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer9=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a97a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat9,md9,transVerifier9,transformer9));
  String cat10="isDisposed()->SNodeOperations.isDisposed()";
  SNode md10=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0id0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier10=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer10=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a88a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat10,md10,transVerifier10,transformer10));
  String cat12="getContainingRoot()->SNodeOperations.getContainingRoot()";
  SNode md12=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0xd0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier12=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer12=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a301a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat12,md12,transVerifier12,transformer12));
  String cat13="isRoot()->getParent()==null";
  SNode md13=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0ge0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier13=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer13=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a211a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat13,md13,transVerifier13,transformer13));
  String cat14="getConceptShortName()->concept.name";
  SNode md14=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0pe0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier14=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer14=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      SNode rep;
      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),"jetbrains.mps.lang.smodel.structure.SemanticDowncastExpression")) {
        rep=new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a1a0a0a0a0re0b().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),"jetbrains.mps.lang.smodel.structure.SemanticDowncastExpression"),"leftExpression",true));
      }
 else {
        rep=new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0b0a0a0a0a121a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true));
      }
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),rep);
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat14,md14,transVerifier14,transformer14));
  String cat15="getChildren(boolean)->SNodeOperations.getChildren()";
  SNode md15=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0ye0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier15=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer15=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a031a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat15,md15,transVerifier15,transformer15));
  String cat16="findParent(condition)->SNodeOperations.findParent(condition)";
  SNode md16=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0hf0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier16=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer16=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a931a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat16,md16,transVerifier16,transformer16));
  String cat17="getDescendants()->.descendants";
  SNode md17=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0rf0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier17=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer17=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      SNode rep;
      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),"jetbrains.mps.lang.smodel.structure.SemanticDowncastExpression")) {
        rep=new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a1a0a0a0a0tf0b().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),"jetbrains.mps.lang.smodel.structure.SemanticDowncastExpression"),"leftExpression",true));
      }
 else {
        rep=new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0b0a0a0a0a941a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true));
      }
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),rep);
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat17,md17,transVerifier17,transformer17));
  String cat18="getDescendants(condition)->SNodeOperations.getDescendants(condition)";
  SNode md18=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0ag0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier18=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer18=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a851a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat18,md18,transVerifier18,transformer18));
  String cat19="replaceChild(n1,n2)->n1.replace with(n2)";
  SNode md19=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0jg0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier19=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer19=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a761a1().createNode(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).getElement(0),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).getElement(1)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat19,md19,transVerifier19,transformer19));
  String cat20="getProperties()->SNodeOperations.getProperties()";
  SNode md20=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0sg0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier20=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer20=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a671a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat20,md20,transVerifier20,transformer20));
  String cat21="getPropertyNames()->SNodeOperations.getProperties().keySet()";
  SNode md21=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0bh0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier21=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer21=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a581a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat21,md21,transVerifier21,transformer21));
  String cat22="n.isInstanceOfConcept(c)->n.getConcept().isSubConceptOf(c)";
  SNode md22=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0kh0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier22=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer22=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a491a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat22,md22,transVerifier22,transformer22));
  String cat23="n.isInstanceOfConcept(string)->n.getConcept().isSubConceptOf(SNodeOperations.getConcept(string))";
  SNode md23=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0th0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier23=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer23=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a302a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat23,md23,transVerifier23,transformer23));
  String cat24="toString()->getPresentation()";
  SNode md24=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0ci0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier24=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer24=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a212a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat24,md24,transVerifier24,transformer24));
  String cat25="n.getChildrenIterable()->SNodeOperations.getChildren()";
  SNode md25=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0li0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier25=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer25=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a122a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat25,md25,transVerifier25,transformer25));
  String cat26="getConceptLanguage()->((Language)((node<>)n).concept/.getModel.?getModule()).getModuleReference()";
  SNode md26=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0ui0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier26=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer26=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a032a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat26,md26,transVerifier26,transformer26));
  String cat27="getLanguageNamespace()->((Language)((node<>)n).concept/.getModel.?getModule()).getModuleFqName()";
  SNode md27=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0dj0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier27=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer27=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a932a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat27,md27,transVerifier27,transformer27));
  String cat28="getLanguage()->(Language)((node<>)n).concept/.getModel.?getModule()";
  SNode md28=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0mj0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier28=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer28=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a842a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat28,md28,transVerifier28,transformer28));
  String cat29="getIndexOfChild()->.children.indexOf()";
  SNode md29=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0vj0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier29=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer29=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      SNode rep;
      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),"jetbrains.mps.lang.smodel.structure.SemanticDowncastExpression")) {
        rep=new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a1a0a0a0a0xj0b().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),"jetbrains.mps.lang.smodel.structure.SemanticDowncastExpression"),"leftExpression",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first());
      }
 else {
        rep=new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0b0a0a0a0a752a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first());
      }
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),rep);
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat29,md29,transVerifier29,transformer29));
  String cat30="getNodeLanguage()->(Language)((node<>)n).concept/.getModel.?getModule()";
  SNode md30=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0ek0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier30=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer30=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a662a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat30,md30,transVerifier30,transformer30));
  String cat31="getConceptProperty()->(Language)((node<>)n).concept/.getModel.?getModule()";
  SNode md31=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0nk0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier31=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer31=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a572a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat31,md31,transVerifier31,transformer31));
  String cat32="getDescendantsIterable()->SNodeOperations.getDescendants()";
  SNode md32=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0wk0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier32=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer32=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a482a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).getElement(0),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).getElement(1)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat32,md32,transVerifier32,transformer32));
  String cat33="getReferencesIterable()->SNodeOperations.getReferences()";
  SNode md33=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0fl0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier33=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer33=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a392a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat33,md33,transVerifier33,transformer33));
  String cat34="getDebugText()->SNodeOperations.getDebugText()";
  SNode md34=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0ol0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier34=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer34=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a203a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat34,md34,transVerifier34,transformer34));
  String cat35="getChildRoles()->SNodeOperations.getChildRoles()";
  SNode md35=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0xl0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier35=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer35=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a113a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat35,md35,transVerifier35,transformer35));
  String cat36="n.getChildren()->SNodeOperations.getChildren()";
  SNode md36=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0gm0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier36=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer36=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a023a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat36,md36,transVerifier36,transformer36));
  String cat37="getRoleOf()->getRoleOf()";
  SNode md37=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0pm0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier37=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer37=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a923a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat37,md37,transVerifier37,transformer37));
  String cat38="n.getReferenceRoles()->SNodeOperations.getReferenceRoles()";
  SNode md38=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0ym0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier38=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer38=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a833a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat38,md38,transVerifier38,transformer38));
  String cat39="insertChild(a,r,c)->insertChild()";
  SNode md39=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0hn0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier39=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer39=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      List<SNode> arg=SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true);
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0b0a0a0a0a743a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(arg).getElement(1),ListSequence.fromList(arg).getElement(2),ListSequence.fromList(arg).getElement(0)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat39,md39,transVerifier39,transformer39));
  String cat40="insertChild(a,r,c,b)->insertChild()";
  SNode md40=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0qn0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier40=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer40=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      List<SNode> arg=SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true);
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0b0a0a0a0a653a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(arg).getElement(1),ListSequence.fromList(arg).getElement(2),ListSequence.fromList(arg).getElement(0),ListSequence.fromList(arg).getElement(3)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat40,md40,transVerifier40,transformer40));
  String cat41="removeReferent()->setReferenceTarget(null)";
  SNode md41=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0zn0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier41=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer41=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a563a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat41,md41,transVerifier41,transformer41));
  migrateMethods(transformations);
}
