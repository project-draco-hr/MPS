{
  List<Tuples._4<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>> transformations=ListSequence.fromList(new ArrayList<Tuples._4<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>>());
  String cat="getConceptFqName()->getConcept().getQualifiedName()";
  SNode md=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0f0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a7a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat,md,transVerifier,transformer));
  String cat2="getReferent()->getReferenceTarget()";
  SNode md2=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0o0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier2=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer2=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(usage,SLinkOperations.getTarget(SNodeOperations.cast(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a0a61a1().createNode(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operation",true));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat2,md2,transVerifier2,transformer2));
  String cat3="setReferent()->setReferenceTarget()";
  SNode md3=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0x0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier3=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer3=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(usage,SLinkOperations.getTarget(SNodeOperations.cast(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a0a52a1().createNode(usage,SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operation",true));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat3,md3,transVerifier3,transformer3));
  String cat4="isAncestor()->SNodeOperations.isAncestor()";
  SNode md4=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0gb0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier4=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer4=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a43a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat4,md4,transVerifier4,transformer4));
  String cat5="getId()->getSNodeId().toString()";
  SNode md5=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0pb0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier5=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer5=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a34a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat5,md5,transVerifier5,transformer5));
  String cat6="getSNodeId()->getNodeId()";
  SNode md6=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0yb0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier6=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer6=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a25a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat6,md6,transVerifier6,transformer6));
  String cat7="addReference()->setReference()";
  SNode md7=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0hc0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier7=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer7=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a16a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat7,md7,transVerifier7,transformer7));
  String cat8="getRole_()->getRole()";
  SNode md8=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0qc0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier8=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer8=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a07a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat8,md8,transVerifier8,transformer8));
  String cat9="isRegistered()->SNodeOperations.isRegistered()";
  SNode md9=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0zc0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier9=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer9=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a97a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat9,md9,transVerifier9,transformer9));
  String cat10="isDisposed()->SNodeOperations.isDisposed()";
  SNode md10=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0id0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier10=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer10=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a88a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat10,md10,transVerifier10,transformer10));
  String cat12="getContainingRoot()->getTopmostAncestor()";
  SNode md12=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0rd0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier12=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer12=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a79a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat12,md12,transVerifier12,transformer12));
  String cat13="isRoot()->getParent()==null";
  SNode md13=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0ae0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier13=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer13=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a601a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat13,md13,transVerifier13,transformer13));
  String cat14="getConceptShortName()->concept.name";
  SNode md14=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0je0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier14=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer14=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      SNode rep;
      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),"jetbrains.mps.lang.smodel.structure.SemanticDowncastExpression")) {
        rep=new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a1a0a0a0a0le0b().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),"jetbrains.mps.lang.smodel.structure.SemanticDowncastExpression"),"leftExpression",true));
      }
 else {
        rep=new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0b0a0a0a0a511a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true));
      }
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),rep);
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat14,md14,transVerifier14,transformer14));
  String cat15="getChildren(boolean)->SNodeOperations.getChildren()";
  SNode md15=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0se0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier15=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer15=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a421a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat15,md15,transVerifier15,transformer15));
  String cat16="findParent(condition)->SNodeOperations.findParent(condition)";
  SNode md16=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0bf0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier16=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer16=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a331a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat16,md16,transVerifier16,transformer16));
  String cat17="getDescendants()->.descendants";
  SNode md17=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0lf0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier17=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer17=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      SNode rep;
      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),"jetbrains.mps.lang.smodel.structure.SemanticDowncastExpression")) {
        rep=new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a1a0a0a0a0nf0b().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),"jetbrains.mps.lang.smodel.structure.SemanticDowncastExpression"),"leftExpression",true));
      }
 else {
        rep=new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0b0a0a0a0a341a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true));
      }
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),rep);
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat17,md17,transVerifier17,transformer17));
  String cat18="getDescendants(condition)->SNodeOperations.getDescendants(condition)";
  SNode md18=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0uf0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier18=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer18=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a251a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat18,md18,transVerifier18,transformer18));
  String cat19="replaceChild(n1,n2)->n1.replace with(n2)";
  SNode md19=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0dg0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier19=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer19=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      SNode de=SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression");
      while (SNodeOperations.isInstanceOf(SNodeOperations.getParent(de),"jetbrains.mps.baseLanguage.structure.DotExpression")) {
        de=SNodeOperations.cast(SNodeOperations.getParent(de),"jetbrains.mps.baseLanguage.structure.DotExpression");
      }
      SNode rep=new ApiMigrationHelper.QuotationClass_yke5lt_a0a2a0a0a0a0fg0b().createNode(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).getElement(0),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).getElement(1));
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(de),rep);
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat19,md19,transVerifier19,transformer19));
  String cat20="getProperties()->SNodeOperations.getProperties()";
  SNode md20=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0mg0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier20=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer20=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a071a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat20,md20,transVerifier20,transformer20));
  String cat21="getPropertyNames()->SNodeOperations.getProperties().keySet()";
  SNode md21=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0vg0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier21=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer21=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a971a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat21,md21,transVerifier21,transformer21));
  String cat22="n.isInstanceOfConcept(c)->n.getConcept().isSubConceptOf(c)";
  SNode md22=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0eh0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier22=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer22=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a881a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat22,md22,transVerifier22,transformer22));
  String cat23="n.isInstanceOfConcept(string)->n.getConcept().isSubConceptOf(SNodeOperations.getConcept(string))";
  SNode md23=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0nh0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier23=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer23=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a791a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat23,md23,transVerifier23,transformer23));
  String cat24="toString()->toString()";
  SNode md24=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0wh0b().createNode(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier24=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer24=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),new ApiMigrationHelper.QuotationClass_yke5lt_a0a0a0a0a0a0a602a1().createNode(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._return_P1_E0<? extends Boolean,? super SNode>,_FunctionTypes._void_P1_E0<? super SNode>>from(cat24,md24,transVerifier24,transformer24));
  migrateMethods(transformations);
}
