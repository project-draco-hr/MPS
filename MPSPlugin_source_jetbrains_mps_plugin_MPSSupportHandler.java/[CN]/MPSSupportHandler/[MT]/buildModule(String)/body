{
  final Object lock=new Object(){
  }
;
synchronized (lock) {
    ApplicationManager.getApplication().invokeLater(new Runnable(){
      public void run(){
        ApplicationManager.getApplication().runWriteAction(new Runnable(){
          public void run(){
            Module module=findModule(path);
            if (module == null) {
synchronized (lock) {
                lock.notifyAll();
              }
              return;
            }
            CompilerManager compilerManager=myProject.getComponent(CompilerManager.class);
            compilerManager.make(module,new CompileStatusNotification(){
              public void finished(              boolean b,              int i,              int i1){
synchronized (lock) {
                  lock.notifyAll();
                }
              }
              public void finished(              boolean b,              int i,              int i1,              CompileContext compileContext){
synchronized (lock) {
                  lock.notifyAll();
                }
              }
            }
);
          }
        }
);
      }
    }
);
    try {
      lock.wait();
    }
 catch (    InterruptedException e) {
      e.printStackTrace();
    }
  }
}
