{
  RulesUtil.checkAppliedTo_LinkAccess_aggregation(op);
  final SNode expectedConcept=RulesUtil.get_inputNodeConcept(op);
  TypeChecker.getInstance().getRuntimeSupport().whenConcrete(expectedConcept,new Runnable(){
    public void run(){
      SNode resultConcept=null;
      SNode parameterConcept=SLinkOperations.getTarget(op,"concept",false);
      if (parameterConcept == null) {
        resultConcept=expectedConcept;
      }
 else {
        resultConcept=parameterConcept;
        if (!(SConceptOperations.isSubConceptOf(parameterConcept,NameUtil.nodeFQName(expectedConcept)))) {
          TypeChecker.getInstance().reportTypeError(op,SPropertyOperations.getString(parameterConcept,"name") + " is not sub-concept of " + SPropertyOperations.getString(expectedConcept,"name"),"jetbrains.mps.bootstrap.smodelLanguage.helgins","1205442304609");
        }
      }
      TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(op,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1205442304627",true),new QuotationClass_80().createNode(resultConcept),op,null,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1205442304625");
    }
  }
,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1205442246000");
}
