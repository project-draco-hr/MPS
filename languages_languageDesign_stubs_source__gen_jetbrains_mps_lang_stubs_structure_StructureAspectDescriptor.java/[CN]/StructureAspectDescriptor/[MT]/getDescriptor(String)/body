{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0a,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.lang.stubs.structure.CanCreateFunction","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.lang.stubs.structure.CreateBlock","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.lang.stubs.structure.CreateFunction","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.lang.stubs.structure.DescriptorsFunction","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.lang.stubs.structure.IModule_ConceptFunctionParameter","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.lang.stubs.structure.LanguageRef","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"languageId","languageFqName"},new String[]{});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.lang.stubs.structure.ModelCreationSettings","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{});
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.lang.stubs.structure.ModelManagerDeclaration","jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifier",false,new String[]{"jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifier","jetbrains.mps.baseLanguage.classifiers.structure.IClassifier"},new String[]{},new String[]{});
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.lang.stubs.structure.ModelRoot_ConceptFunctionParameter","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.lang.stubs.structure.Model_ConceptFunctionParameter","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.lang.stubs.structure.SModelFqName_ConceptFunctionParameter","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
case 11:
return new CompiledConceptDescriptor("jetbrains.mps.lang.stubs.structure.SModelRoot_ConceptFunctionParameter","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter"},new String[]{},new String[]{});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
