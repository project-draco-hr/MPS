{
  org.jetbrains.mps.openapi.model.SNode root=SLinkOperations.getTarget(_context.getNode(),"quotedNode",true);
  List<org.jetbrains.mps.openapi.model.SNode> result=new ArrayList<org.jetbrains.mps.openapi.model.SNode>();
  List<org.jetbrains.mps.openapi.model.SNode> frontier=new ArrayList<org.jetbrains.mps.openapi.model.SNode>();
  ListSequence.fromList(frontier).addElement(root);
  List<org.jetbrains.mps.openapi.model.SNode> newFrontier=new ArrayList<org.jetbrains.mps.openapi.model.SNode>();
  while (ListSequence.fromList(frontier).isNotEmpty()) {
    for (    org.jetbrains.mps.openapi.model.SNode node : frontier) {
      for (      org.jetbrains.mps.openapi.model.SNode child : SNodeOperations.getChildren(node)) {
        if (!(SNodeOperations.isInstanceOf(child,"jetbrains.mps.lang.quotation.structure.AbstractAntiquotation"))) {
          for (          SReference reference : child.getReferences()) {
            if (AttributeOperations.getAttribute(child,new IAttributeDescriptor.LinkAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.quotation.structure.ReferenceAntiquotation"),reference.getRole())) != null || AttributeOperations.getAttribute(child,new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.quotation.structure.Antiquotation"))) != null) {
              continue;
            }
            boolean hasAntiquotation=false;
            for (            org.jetbrains.mps.openapi.model.SNode grandChild : SNodeOperations.getChildren(child)) {
              if (SNodeOperations.isInstanceOf(grandChild,"jetbrains.mps.lang.quotation.structure.Antiquotation") || SNodeOperations.isInstanceOf(grandChild,"jetbrains.mps.lang.quotation.structure.ListAntiquotation")) {
                hasAntiquotation=true;
                break;
              }
            }
            if (hasAntiquotation) {
              continue;
            }
            org.jetbrains.mps.openapi.model.SNode targetNode=reference.getTargetNode();
            if (SNodeOperations.getAncestor(targetNode,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == SNodeOperations.getAncestor(child,"jetbrains.mps.lang.quotation.structure.Quotation",false,false)) {
              org.jetbrains.mps.openapi.model.SNode referenceNode=SModelOperations.createNewNode(_context.getOutputModel(),null,"jetbrains.mps.lang.core.structure.BaseConcept");
              referenceNode.setProperty("role",reference.getRole());
              referenceNode.setReferenceTarget("targetNode",targetNode);
              referenceNode.setReferenceTarget("sourceNode",child);
              ListSequence.fromList(result).addElement(referenceNode);
            }
          }
          ListSequence.fromList(newFrontier).addElement(child);
        }
      }
    }
    frontier=newFrontier;
    newFrontier=new ArrayList<org.jetbrains.mps.openapi.model.SNode>();
  }
  return result;
}
