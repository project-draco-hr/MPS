{
  final List<SNode> result=new ArrayList<SNode>();
  for (  SReference ref : Sequence.fromIterable(_context.getNode().getReferences())) {
    if ((AttributeOperations.getAttribute(_context.getNode(),new IAttributeDescriptor.LinkAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.quotation.structure.ReferenceAntiquotation"),ref.getRole())) != null)) {
      continue;
    }
    SNode targetNode=((SNode)ref.getTargetNode());
    if (SNodeOperations.getAncestor(targetNode,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == SNodeOperations.getAncestor(_context.getNode(),"jetbrains.mps.lang.quotation.structure.Quotation",false,false)) {
      continue;
    }
    SNode referenceNode=SModelOperations.createNewNode(_context.getOutputModel(),null,"jetbrains.mps.lang.core.structure.BaseConcept");
    referenceNode.setProperty("targetModel",((SModelReference)(ref).getTargetSModelReference()).update().toString());
    referenceNode.setProperty("role",ref.getRole());
    if (targetNode != null) {
      referenceNode.setProperty("targetNodeId",targetNode.getNodeId().toString());
    }
    ListSequence.fromList(result).addElement(referenceNode);
  }
  return result;
}
