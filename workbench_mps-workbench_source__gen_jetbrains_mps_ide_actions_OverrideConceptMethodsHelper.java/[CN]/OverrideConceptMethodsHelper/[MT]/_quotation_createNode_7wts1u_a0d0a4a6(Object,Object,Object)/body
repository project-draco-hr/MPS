{
  PersistenceFacade facade=PersistenceFacade.getInstance();
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  SNode quotedNode_7=null;
  quotedNode_4=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",null,null,false);
  quotedNode_5=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.behavior.structure.SuperNodeExpression",null,null,false);
  SNodeAccessUtil.setReferenceTarget(quotedNode_5,MetaAdapterFactory.getReferenceLink(new UUID(-5808042798135555774l,-8657779246725685839l),1225194628440l,5299096511375896640l,"superConcept"),(SNode)parameter_1);
  quotedNode_4.addChild("operand",quotedNode_5);
  quotedNode_6=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall",null,null,false);
  SNodeAccessUtil.setReferenceTarget(quotedNode_6,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141037l,"baseMethodDeclaration"),(SNode)parameter_2);
{
    List<SNode> nodes=(List<SNode>)parameter_3;
    for (    SNode child : nodes) {
      quotedNode_6.addChild("actualArgument",HUtil.copyIfNecessary(child));
    }
  }
  quotedNode_4.addChild("operation",quotedNode_6);
  return quotedNode_4;
}
