{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("workStatement",new BaseNodeReferenceSearchScopeProvider(){
    public boolean hasPresentation(){
      return true;
    }
    public String getPresentation(    final IOperationContext operationContext,    final PresentationReferentConstraintContext _context){
      return SPropertyOperations.getString(_context.getParameterNode(),"workName");
    }
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      return SNodeOperations.getDescendants(SLinkOperations.getTarget(SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.make.script.structure.JobDefinition",false,false),"body",true),"jetbrains.mps.make.script.structure.BeginWorkStatement",false,new String[]{});
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:56325792-0540-48ec-8d52-897a8821cc64(jetbrains.mps.make.script.constraints)","682890046602395485");
    }
  }
);
  return result;
}
