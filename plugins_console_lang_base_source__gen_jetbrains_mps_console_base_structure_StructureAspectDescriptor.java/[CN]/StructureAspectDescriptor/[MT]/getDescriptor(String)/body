{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.Command").interface_().create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.CommandHolder").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.console.base.structure.HistoryItem").children(new String[]{"command"},new boolean[]{false}).create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.CommandResult").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.console.base.structure.Result","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").children(new String[]{"line"},new boolean[]{true}).create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.CommandResultLine").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").children(new String[]{"part"},new boolean[]{true}).create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.CommandResultPart").interface_().parents("jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").create();
case 5:
return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.GeneratedCommand").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.console.base.structure.Command").abstract_().create();
case 6:
return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.History").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"item"},new boolean[]{true}).create();
case 7:
return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.HistoryItem").interface_().create();
case 8:
return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.IActionHolder").interface_().create();
case 9:
return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.INodeWithClickableReference").interface_().parents("jetbrains.mps.console.base.structure.IActionHolder").create();
case 10:
return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.INodeWithClosure").interface_().parents("jetbrains.mps.console.base.structure.IActionHolder").create();
case 11:
return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.InterpretedCommand").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.console.base.structure.Command").abstract_().create();
case 12:
return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.NodeReferenceResultPart").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.console.base.structure.CommandResultPart","jetbrains.mps.console.base.structure.INodeWithClickableReference").references("target").create();
case 13:
return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.NodeResultPart").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.console.base.structure.CommandResultPart").children(new String[]{"node"},new boolean[]{false}).create();
case 14:
return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.NodeWithClosureResultPart").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.console.base.structure.CommandResultPart","jetbrains.mps.console.base.structure.INodeWithClosure").properties("text").create();
case 15:
return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.PastedNodeReference").super_("jetbrains.mps.lang.smodel.structure.AbstractNodeRefExpression").parents("jetbrains.mps.lang.smodel.structure.AbstractNodeRefExpression","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault","jetbrains.mps.console.base.structure.INodeWithClickableReference").references("target").alias("pastedNodeRef","").create();
case 16:
return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.Result").interface_().parents("jetbrains.mps.console.base.structure.HistoryItem").create();
case 17:
return new ConceptDescriptorBuilder("jetbrains.mps.console.base.structure.TextResultPart").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.console.base.structure.CommandResultPart").properties("text").create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
