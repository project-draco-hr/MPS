{
  int behaviorIndex=Arrays.binarySearch(myConceptBehaviorIds,conceptId.getIdValue());
switch (behaviorIndex) {
case 0:
    return myActionDeclaration_BehaviorDescriptor;
case 1:
  return myDoUpdateBlock_BehaviorDescriptor;
case 2:
return myConceptFunctionParameter_AnActionEvent_BehaviorDescriptor;
case 3:
return myExecuteBlock_BehaviorDescriptor;
case 4:
return myActionGroupDeclaration_BehaviorDescriptor;
case 5:
return myGroupAnchor_BehaviorDescriptor;
case 6:
return myGetNodeBlock_BehaviorDescriptor;
case 7:
return myGetNodesBlock_BehaviorDescriptor;
case 8:
return myConceptFunctionParameter_node_BehaviorDescriptor;
case 9:
return myConceptFunctionParameter_OperationContext_BehaviorDescriptor;
case 10:
return myConceptFunctionParameter_IModule_BehaviorDescriptor;
case 11:
return myConceptFunctionParameter_MPSProject_BehaviorDescriptor;
case 12:
return myActionParameterDeclaration_BehaviorDescriptor;
case 13:
return myUpdateBlock_BehaviorDescriptor;
case 14:
return myIsApplicableBlock_BehaviorDescriptor;
case 15:
return myActionType_BehaviorDescriptor;
case 16:
return myActionParameterReferenceOperation_BehaviorDescriptor;
case 17:
return myBuildGroupBlock_BehaviorDescriptor;
case 18:
return myKeyMapKeystroke_BehaviorDescriptor;
case 19:
return myGroupType_BehaviorDescriptor;
case 20:
return myToolType_BehaviorDescriptor;
case 21:
return myPreferencesComponentDeclaration_BehaviorDescriptor;
case 22:
return myPersistentPropertyDeclaration_BehaviorDescriptor;
case 23:
return myPersistentPropertyReference_BehaviorDescriptor;
case 24:
return myPreferencesComponentType_BehaviorDescriptor;
case 25:
return myOnBeforeWriteBlock_BehaviorDescriptor;
case 26:
return myOnAfterReadBlock_BehaviorDescriptor;
case 27:
return myPreferencePage_BehaviorDescriptor;
case 28:
return myPreferencePageResetBlock_BehaviorDescriptor;
case 29:
return myPreferencePageCommitBlock_BehaviorDescriptor;
case 30:
return myPreferencePageIsModifiedBlock_BehaviorDescriptor;
case 31:
return myInitBlock_BehaviorDescriptor;
case 32:
return myDisposeBlock_BehaviorDescriptor;
case 33:
return myConceptFunctionParameter_Project_BehaviorDescriptor;
case 34:
return myGetComponentBlock_BehaviorDescriptor;
case 35:
return myActionDataParameterDeclaration_BehaviorDescriptor;
case 36:
return myActionDataParameterReferenceOperation_BehaviorDescriptor;
case 37:
return myActionParameter_BehaviorDescriptor;
case 38:
return myToStringConceptFunction_BehaviorDescriptor;
case 39:
return myUpdateGroupFunction_BehaviorDescriptor;
case 40:
return myEnumerateChildrenFunction_BehaviorDescriptor;
case 41:
return myMPSPluginDependency_BehaviorDescriptor;
case 42:
return myKeymapChangesDeclaration_BehaviorDescriptor;
case 43:
return myActionParameterReference_BehaviorDescriptor;
case 44:
return myOrderConstraints_BehaviorDescriptor;
case 45:
return myOrder_BehaviorDescriptor;
case 46:
return myOrderReference_BehaviorDescriptor;
case 47:
return myCreateNodeAspectBlock_BehaviorDescriptor;
case 48:
return myEditorTab_BehaviorDescriptor;
case 49:
return myIsApplicableTabBlock_BehaviorDescriptor;
case 50:
return myBaseNodeBlock_BehaviorDescriptor;
case 51:
return myListenBlock_BehaviorDescriptor;
case 52:
return myIdeaInitializerDescriptor_BehaviorDescriptor;
case 53:
return myCustomCondition_BehaviorDescriptor;
case 54:
return myConceptFunctionParameter_Model_BehaviorDescriptor;
case 55:
return myPluginDependency_BehaviorDescriptor;
case 56:
return myIdeaPluginDependency_BehaviorDescriptor;
case 57:
return myParameterizedShortcutChange_BehaviorDescriptor;
case 58:
return myBaseToolDeclaration_BehaviorDescriptor;
case 59:
return myGetConceptsBlock_BehaviorDescriptor;
case 60:
return myNewCreateBlock_BehaviorDescriptor;
case 61:
return myConceptFunctionParameter_Concept_BehaviorDescriptor;
default :
return null;
}
}
