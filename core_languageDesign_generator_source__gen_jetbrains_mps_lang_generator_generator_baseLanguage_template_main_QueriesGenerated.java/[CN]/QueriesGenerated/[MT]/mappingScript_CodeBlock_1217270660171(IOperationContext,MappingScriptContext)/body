{
{
    List<SNode> ops=SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputByLabel");
    for (    SNode op : ops) {
      SNode label=SLinkOperations.getTarget(op,"label",false);
      if (label == null) {
        _context.showErrorMessage(op,"reference on mapping label is broken");
        continue;
      }
      SPropertyOperations.set(op,"labelName_intern",SPropertyOperations.getString(label,"name"));
      SLinkOperations.setTarget(op,"label",null,false);
    }
  }
{
    List<SNode> ops=SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputByLabelAndInput");
    for (    SNode op : ops) {
      SNode label=SLinkOperations.getTarget(op,"label",false);
      if (label == null) {
        _context.showErrorMessage(op,"reference on mapping label is broken");
        continue;
      }
      SPropertyOperations.set(op,"labelName_intern",SPropertyOperations.getString(label,"name"));
      SLinkOperations.setTarget(op,"label",null,false);
    }
  }
{
    List<SNode> ops=SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputByLabelAndInputAndReferenceScope");
    for (    SNode op : ops) {
      SNode label=SLinkOperations.getTarget(op,"label",false);
      if (label == null) {
        _context.showErrorMessage(op,"reference on mapping label is broken");
        continue;
      }
      SPropertyOperations.set(op,"labelName_intern",SPropertyOperations.getString(label,"name"));
      SLinkOperations.setTarget(op,"label",null,false);
    }
  }
{
    List<SNode> ops=SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputListByLabelAndInput");
    for (    SNode op : ops) {
      SNode label=SLinkOperations.getTarget(op,"label",false);
      if (label == null) {
        _context.showErrorMessage(op,"reference on mapping label is broken");
        continue;
      }
      SPropertyOperations.set(op,"labelName_intern",SPropertyOperations.getString(label,"name"));
      SLinkOperations.setTarget(op,"label",null,false);
    }
  }
{
    List<SNode> ops=SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetPrevInputByLabel");
    for (    SNode op : ops) {
      SNode label=SLinkOperations.getTarget(op,"label",false);
      if (label == null) {
        _context.showErrorMessage(op,"reference on mapping label is broken");
        continue;
      }
      SPropertyOperations.set(op,"labelName_intern",SPropertyOperations.getString(label,"name"));
      SLinkOperations.setTarget(op,"label",null,false);
    }
  }
{
    List<SNode> ops=SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ParameterRef");
    for (    SNode op : ops) {
      SNode param=SLinkOperations.getTarget(op,"parameter",false);
      if (param == null) {
        _context.showErrorMessage(op,"reference on parameter is broken");
        continue;
      }
      SPropertyOperations.set(op,"name_intern",SPropertyOperations.getString(param,"name"));
      SLinkOperations.setTarget(op,"parameter",null,false);
    }
  }
{
    List<SNode> ops=SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PatternRef");
    for (    SNode op : ops) {
      SNode patternVar=GenerationContextOp_PatternRef_Behavior.call_getTarget_1758784108620114792(op);
      if (patternVar == null) {
        _context.showErrorMessage(op,"reference on pattern variable is broken");
        continue;
      }
      SPropertyOperations.set(op,"name_intern",PatternVarsUtil.getFieldName(patternVar));
      GenerationContextOp_PatternRef_Behavior.call_setTarget_1758784108620254533(op,null);
    }
  }
{
    List<SNode> ops=SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GenParameterRef");
    for (    SNode op : ops) {
      SNode paramref=SLinkOperations.getTarget(op,"importClause",false);
      if (paramref == null || (SLinkOperations.getTarget(paramref,"declaration",false) == null)) {
        _context.showErrorMessage(op,"reference on generation parameter is broken");
        continue;
      }
      SPropertyOperations.set(op,"name_intern",IGeneratorParameter_Behavior.call_getUniqueId_650531548511609559(SLinkOperations.getTarget(paramref,"declaration",false)));
      SLinkOperations.setTarget(op,"importClause",null,false);
    }
  }
}
