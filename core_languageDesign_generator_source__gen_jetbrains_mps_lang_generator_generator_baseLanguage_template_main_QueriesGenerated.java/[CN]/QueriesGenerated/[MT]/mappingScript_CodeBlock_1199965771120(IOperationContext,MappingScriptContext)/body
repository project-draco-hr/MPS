{
  List<SNode> nodes=SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.lang.generator.structure.TemplateFunctionParameter_sourceNode");
  for (  SNode node : nodes) {
    SNode replacement=SConceptOperations.createNewNode("jetbrains.mps.baseLanguageInternal.structure.TypeHintExpression",null);
    SLinkOperations.setTarget(replacement,"typeHint",SNodeOperations.copyNode(TypeChecker.getInstance().getTypeOf(node)),true);
    SNodeOperations.replaceWithAnother(node,replacement);
    SLinkOperations.setTarget(replacement,"expression",node,true);
  }
}
