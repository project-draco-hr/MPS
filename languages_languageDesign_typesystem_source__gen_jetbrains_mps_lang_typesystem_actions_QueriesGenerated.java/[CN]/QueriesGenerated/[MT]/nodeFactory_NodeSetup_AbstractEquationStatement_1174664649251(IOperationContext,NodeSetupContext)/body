{
  if (SNodeOperations.isInstanceOf(_context.getSampleNode(),"jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement")) {
    SLinkOperations.setTarget(_context.getNewNode(),"leftExpression",SLinkOperations.getTarget(SNodeOperations.cast(_context.getSampleNode(),"jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement"),"leftExpression",true),true);
    SLinkOperations.setTarget(_context.getNewNode(),"rightExpression",SLinkOperations.getTarget(SNodeOperations.cast(_context.getSampleNode(),"jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement"),"rightExpression",true),true);
    SLinkOperations.setTarget(_context.getNewNode(),"nodeToCheck",SLinkOperations.getTarget(SNodeOperations.cast(_context.getSampleNode(),"jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement"),"nodeToCheck",true),true);
    SPropertyOperations.set(_context.getNewNode(),"checkOnly","" + (SPropertyOperations.getBoolean(SNodeOperations.cast(_context.getSampleNode(),"jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement"),"checkOnly")));
    SLinkOperations.setTarget(_context.getNewNode(),"errorString",SLinkOperations.getTarget(SNodeOperations.cast(_context.getSampleNode(),"jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement"),"errorString",true),true);
    ListSequence.fromList(SLinkOperations.getTargets(_context.getNewNode(),"helginsIntention",true)).addSequence(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(_context.getSampleNode(),"jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement"),"helginsIntention",true)));
  }
}
