{
  for (  File child : dir.listFiles()) {
    if (child.isDirectory()) {
      collectMPSCompiledModulesInfoRecursively(child,result);
      continue;
    }
    boolean solution=child.getName().endsWith(MPSExtentions.DOT_SOLUTION);
    boolean language=child.getName().endsWith(MPSExtentions.DOT_LANGUAGE);
    if (!(solution || language))     continue;
    final IFile moduleIFile=new IoFileSystemProvider().getFile(child.getAbsolutePath());
    IFile moduleDir=moduleIFile.getParent();
    MacroHelper expander=new MyMacroHelper(moduleIFile);
    if (solution) {
      SolutionDescriptor sd=SolutionDescriptorPersistence.loadSolutionDescriptor(moduleIFile,expander);
      if (!sd.getCompileInMPS())       continue;
      String srcPath=ProjectPathUtil.getGeneratorOutputPath(moduleIFile,sd).getPath();
      result.putValue(moduleDir.getPath(),srcPath);
      String testPath=ProjectPathUtil.getGeneratorTestsOutputPath(moduleIFile,sd).getPath();
      result.putValue(moduleDir.getPath(),testPath);
    }
 else {
      LanguageDescriptor ld=LanguageDescriptorPersistence.loadLanguageDescriptor(moduleIFile,expander);
      String srcPath=ProjectPathUtil.getGeneratorOutputPath(moduleIFile,ld).getPath();
      result.putValue(moduleDir.getPath(),srcPath);
    }
  }
}
