{
  List<SNode> descendants=SNodeOperations.getNodeDescendantsWhereConceptInList(node,new SAbstractConcept[]{MetaAdapterFactory.getConcept(new UUID(8817443762339858024l,-6091446231697526094l),1174660718586l,"jetbrains.mps.lang.typesystem.structure.AbstractEquationStatement"),MetaAdapterFactory.getConcept(new UUID(8817443762339858024l,-6091446231697526094l),1174665551739l,"jetbrains.mps.lang.typesystem.structure.TypeVarDeclaration"),MetaAdapterFactory.getConcept(new UUID(8817443762339858024l,-6091446231697526094l),1174666260556l,"jetbrains.mps.lang.typesystem.structure.TypeVarReference"),MetaAdapterFactory.getConcept(new UUID(8817443762339858024l,-6091446231697526094l),1174657487114l,"jetbrains.mps.lang.typesystem.structure.TypeOfExpression"),MetaAdapterFactory.getConcept(new UUID(8817443762339858024l,-6091446231697526094l),1185805035213l,"jetbrains.mps.lang.typesystem.structure.WhenConcreteStatement")},false,new SAbstractConcept[]{});
  return ListSequence.fromList(descendants).isEmpty();
}
