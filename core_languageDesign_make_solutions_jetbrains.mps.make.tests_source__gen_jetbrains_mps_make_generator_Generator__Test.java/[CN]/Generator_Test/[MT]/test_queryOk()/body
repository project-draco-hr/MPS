{
  ScriptBuilder scb=new ScriptBuilder();
  final IMonitors mons=Mockups.monitors(context,"mons");
  final IConfigMonitor cmon=context.mock(IConfigMonitor.class);
  context.checking(new Expectations(){
{
      final Object[] cfg=new Object[1];
      exactly(1).of(mons).runConfigWithMonitor((_FunctionTypes._void_P1_E0<? super IConfigMonitor>)with(new BaseMatcher<Object>(){
        public boolean matches(        Object o){
          cfg[0]=o;
          return true;
        }
        public void describeTo(        Description p0){
        }
      }
));
      will(new Action(){
        public Object invoke(        Invocation invocation) throws Throwable {
          ((_FunctionTypes._void_P1_E0<? super IConfigMonitor>)cfg[0]).invoke(cmon);
          return null;
        }
        public void describeTo(        Description description){
        }
      }
);
      final IQuery[] query=new IQuery[1];
      exactly(1).of(cmon).relayQuery(with(new BaseMatcher<IQuery>(){
        public boolean matches(        Object o){
          if (o instanceof IQuery) {
            query[0]=(IQuery)o;
            return true;
          }
          return false;
        }
        public void describeTo(        Description p0){
        }
      }
));
      will(new Action(){
        public Object invoke(        Invocation invocation) throws Throwable {
          return Sequence.fromIterable(query[0].options()).first();
        }
        public void describeTo(        Description description){
        }
      }
);
    }
  }
);
  Mockups.allowing(context,mons);
  IScript scr=scb.withFacet(new IFacet.Name("Maker_")).withFacet(new IFacet.Name("Generator_")).withFacet(new IFacet.Name("TextGen_")).withTarget(new ITarget.Name("Make")).toScript();
  scr=new IScript.StubBoss(scr){
    public IMonitors monitors(){
      return mons;
    }
    public void init(    IParametersPool ppool){
    }
  }
;
  Assert.assertTrue(scr.isValid());
  ITarget dt=scr.finalTarget();
  Assert.assertNotNull(dt);
  Assert.assertEquals(new ITarget.Name("Make"),dt.getName());
  IResult res=scr.execute(null);
  Assert.assertNotNull(res);
  Assert.assertTrue(res.isSucessful());
  Assert.assertTrue(Sequence.fromIterable(res.output()).isEmpty());
}
