{
  SNode result=null;
  Set<SNode> _parameterValues_129834374=new HashSet<SNode>();
  SNode quotedNode_1=null;
  SNode quotedNode_2=null;
  SNode quotedNode_3=null;
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
{
    quotedNode_1=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",null,GlobalScope.getInstance(),false);
    SNode quotedNode1_7=quotedNode_1;
{
      quotedNode_2=(SNode)parameter_12;
      SNode quotedNode1_8;
      if (_parameterValues_129834374.contains(quotedNode_2)) {
        quotedNode1_8=HUtil.copyIfNecessary(quotedNode_2);
      }
 else {
        _parameterValues_129834374.add(quotedNode_2);
        quotedNode1_8=quotedNode_2;
      }
      if (quotedNode1_8 != null) {
        quotedNode_1.addChild("operand",HUtil.copyIfNecessary(quotedNode1_8));
      }
    }
{
      quotedNode_3=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguageInternal.structure.InternalPartialInstanceMethodCall",null,GlobalScope.getInstance(),false);
      SNode quotedNode1_9=quotedNode_3;
      quotedNode1_9.setProperty("methodName",(String)parameter_14);
{
        quotedNode_5=(SNode)parameter_13;
        SNode quotedNode1_10;
        if (_parameterValues_129834374.contains(quotedNode_5)) {
          quotedNode1_10=HUtil.copyIfNecessary(quotedNode_5);
        }
 else {
          _parameterValues_129834374.add(quotedNode_5);
          quotedNode1_10=quotedNode_5;
        }
        if (quotedNode1_10 != null) {
          quotedNode_3.addChild("actualArgument",HUtil.copyIfNecessary(quotedNode1_10));
        }
      }
{
        quotedNode_6=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",null,GlobalScope.getInstance(),false);
        SNode quotedNode1_11=quotedNode_6;
        quotedNode1_11.addReference(SReference.create("classifier",quotedNode1_11,SModelReference.fromString("f:java_stub#37a3367b-1fb2-44d8-aa6b-18075e74e003#jetbrains.mps.execution.api.commands(MPS.Classpath/jetbrains.mps.execution.api.commands@java_stub)"),SNodeId.fromString("~ProcessHandlerBuilder")));
        quotedNode_3.addChild("returnType",quotedNode1_11);
      }
      quotedNode_1.addChild("operation",quotedNode1_9);
    }
    result=quotedNode1_7;
  }
  return result;
}
