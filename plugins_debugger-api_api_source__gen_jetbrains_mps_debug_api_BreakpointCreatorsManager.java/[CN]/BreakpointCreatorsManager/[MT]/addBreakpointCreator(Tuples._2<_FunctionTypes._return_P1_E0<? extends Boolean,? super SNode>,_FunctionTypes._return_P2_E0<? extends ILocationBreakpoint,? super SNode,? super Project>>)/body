{
  Tuples._2<_FunctionTypes._return_P2_E0<? extends Boolean,? super SNode,? super SNode>,_FunctionTypes._return_P2_E0<? extends ILocationBreakpoint,? super SNode,? super Project>> creator=MultiTuple.<_FunctionTypes._return_P2_E0<? extends Boolean,? super SNode,? super SNode>,_FunctionTypes._return_P2_E0<? extends ILocationBreakpoint,? super SNode,? super Project>>from(new _FunctionTypes._return_P2_E0<Boolean,SNode,SNode>(){
    public Boolean invoke(    SNode c,    SNode n){
      return oldCreator._0().invoke(c);
    }
  }
,oldCreator._1());
  SetSequence.fromSet(myCreators).addElement(creator);
  MapSequence.fromMap(myOldToNewCreatorMap).put(oldCreator,creator);
}
