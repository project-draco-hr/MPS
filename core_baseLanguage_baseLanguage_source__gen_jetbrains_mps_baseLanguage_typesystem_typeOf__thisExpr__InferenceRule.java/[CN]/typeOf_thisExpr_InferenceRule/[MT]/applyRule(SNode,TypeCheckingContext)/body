{
  SNode classifier;
  if ((SLinkOperations.getTarget(thisExpr,"classConcept",false) != null)) {
    classifier=SLinkOperations.getTarget(thisExpr,"classConcept",false);
  }
 else {
    SNode contextNode=thisExpr;
    SNode parent=SNodeOperations.getParent(thisExpr);
    if (SNodeOperations.isInstanceOf(parent,"jetbrains.mps.baseLanguage.structure.AnonymousClass")) {
      for (      SNode param : SLinkOperations.getTargets(SNodeOperations.cast(parent,"jetbrains.mps.baseLanguage.structure.AnonymousClass"),"parameter",true)) {
        if (ListSequence.fromList(SNodeOperations.getDescendants(param,null,true)).contains(thisExpr)) {
          contextNode=parent;
          break;
        }
      }
    }
    classifier=SNodeOperations.getAncestor(contextNode,"jetbrains.mps.baseLanguage.structure.ClassConcept",false,false);
  }
  List<SNode> typeVarRefs=ListOperations.<SNode>createList();
  for (  SNode typeVariableDeclaration : SLinkOperations.getTargets(classifier,"typeVariableDeclaration",true)) {
    ListSequence.fromList(typeVarRefs).addElement(new _Quotations.QuotationClass_14().createNode(typeVariableDeclaration,typeCheckingContext));
  }
{
    SNode _nodeToCheck_1029348928467=thisExpr;
    BaseIntentionProvider intentionProvider=null;
    typeCheckingContext.createEquation((SNode)typeCheckingContext.typeOf(thisExpr,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1215004810739",true),(SNode)new _Quotations.QuotationClass_15().createNode(typeVarRefs,classifier,typeCheckingContext),_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1215004810737",intentionProvider);
  }
}
