{
  List<SNode> allAdaptable=(List<SNode>)genContext.getStepObject(Keys.ALL_NEEDS_ADAPTED);
  if (allAdaptable == null) {
    allAdaptable=ListSequence.fromList(new ArrayList<SNode>());
    genContext.putStepObject(Keys.ALL_NEEDS_ADAPTED,allAdaptable);
  }
  if (!(ListSequence.fromList(allAdaptable).contains(SLinkOperations.getTarget(adaptable,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier"))))) {
    ListSequence.fromList(allAdaptable).addElement(SLinkOperations.getTarget(adaptable,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")));
  }
  List<SNode> trgList=getOrCreateTargets(adaptable);
  if (!(ListSequence.fromList(trgList).any(new IWhereFilter<SNode>(){
    @Override public boolean accept(    SNode cr){
      return INamedConcept__BehaviorDescriptor.getFqName_idhEwIO9y.invoke(SLinkOperations.getTarget(target,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier"))).equals(INamedConcept__BehaviorDescriptor.getFqName_idhEwIO9y.invoke(cr));
    }
  }
))) {
    ListSequence.fromList(trgList).addElement(SLinkOperations.getTarget(target,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")));
    Values.ADAPTABLE.set(genContext,SLinkOperations.getTarget(target,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")),SLinkOperations.getTarget(adaptable,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")));
  }
}
