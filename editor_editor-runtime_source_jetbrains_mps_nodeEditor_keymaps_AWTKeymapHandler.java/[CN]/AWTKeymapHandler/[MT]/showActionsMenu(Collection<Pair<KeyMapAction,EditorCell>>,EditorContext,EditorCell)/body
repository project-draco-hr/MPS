{
  JPopupMenu menu=new JPopupMenu();
  int index=1;
  for (  Pair<KeyMapAction,EditorCell> actionAndContextCell : actionsInfo) {
    final KeyMapAction action=actionAndContextCell.o1;
    final EditorCell contextCell=actionAndContextCell.o2;
    char acc=0;
    if (1 <= index && index <= 9) {
      acc=(char)('0' + index);
    }
 else     if (index == 10) {
      acc='0';
    }
 else     if (10 < index && index - 11 < ('Z' - 'A')) {
      acc=(char)('A' + index - 11);
    }
    JMenuItem menuItem=new JMenuItem(action.getDescriptionText());
    if (acc != 0) {
      menuItem.setAccelerator(KeyStroke.getKeyStroke(acc));
    }
    ActionListener actionListener=new ActionListener(){
      @Override public void actionPerformed(      ActionEvent e){
        ModelAccess.instance().runWriteActionInCommand(new Runnable(){
          @Override public void run(){
            executeAction(action,contextCell,editorContext);
          }
        }
);
      }
    }
;
    menuItem.addActionListener(actionListener);
    menu.add(menuItem);
    index++;
  }
  EditorComponent component=((jetbrains.mps.nodeEditor.EditorContext)editorContext).getNodeEditorComponent();
  int x=selectedCell.getX();
  int y=selectedCell.getY() + selectedCell.getHeight();
  if (component.getParent() instanceof JViewport) {
    JViewport viewport=(JViewport)component.getParent();
    Rectangle vr=viewport.getViewRect();
    x=Math.max(vr.x,x);
    y=Math.max(vr.y,y);
  }
  menu.show(component,x,y);
}
