{
  List<SNode> methodDeclarations=AbstractConceptDeclaration_Behavior.call_getNotImplementedConceptMethods_1213877394339(SLinkOperations.getTarget(nodeToCheck,"concept",false),GlobalScope.getInstance());
  if (SConceptPropertyOperations.getBoolean(SLinkOperations.getTarget(nodeToCheck,"concept",false),"abstract")) {
    return;
  }
  if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(nodeToCheck,"concept",false),"jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration")) {
    return;
  }
  if (!(ListSequence.fromList(methodDeclarations).isEmpty())) {
    boolean notImplementedMethods=false;
    for (    SNode cm : methodDeclarations) {
      if (!(ListSequence.fromList(SLinkOperations.getTargets(nodeToCheck,"method",true)).contains(cm))) {
        notImplementedMethods=true;
      }
    }
    if (notImplementedMethods) {
{
        BaseQuickFixProvider intentionProvider=null;
        IErrorTarget errorTarget=new NodeErrorTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(nodeToCheck,"Concept " + SPropertyOperations.getString(SLinkOperations.getTarget(nodeToCheck,"concept",false),"name") + " doesn't implement "+ methodDeclarations,"r:00000000-0000-4000-0000-011c89590309(jetbrains.mps.lang.constraints.typesystem)","1198950378289",intentionProvider,errorTarget);
      }
    }
  }
  for (  SNode cmd : SLinkOperations.getTargets(nodeToCheck,"method",true)) {
    if (SConceptPropertyOperations.getBoolean(cmd,"abstract")) {
{
        BaseQuickFixProvider intentionProvider=null;
        IErrorTarget errorTarget=new NodeErrorTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(cmd,"Abstract method in non abstract concept","r:00000000-0000-4000-0000-011c89590309(jetbrains.mps.lang.constraints.typesystem)","1198949983025",intentionProvider,errorTarget);
      }
    }
  }
}
