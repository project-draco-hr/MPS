{
  List<INodeSubstituteAction> result=new ArrayList<INodeSubstituteAction>();
{
    Calculable calc=new Calculable(){
      public Object calculate(){
        return ListSequence.fromList(SConceptOperations.getAllSubConcepts(SConceptOperations.findConceptDeclaration("jetbrains.mps.transformation.generationContext.structure.GenerationContextOp_Base"),_context.getModel(),operationContext.getScope())).where(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return !(SConceptPropertyOperations.getBoolean(it,"abstract"));
          }
        }
).toListSequence();
      }
    }
;
    Iterable queryResult=(Iterable)calc.calculate();
    if (queryResult != null) {
      for (      Object item : queryResult) {
        List<INodeSubstituteAction> defaultActions=ChildSubstituteActionsHelper.createDefaultActions((SNode)item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter(),operationContext);
        result.addAll(defaultActions);
      }
    }
  }
  return result;
}
