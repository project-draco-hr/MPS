{
  final SModelReference mr=node.getModel().getReference();
  scheduleModelRead(node,new Runnable(){
    @Override public void run(){
      final SModel modelDescriptor=mr.resolve(myProject.getRepository());
      if (modelDescriptor == null || !(modelDescriptor.isLoaded())) {
        return;
      }
      final List<String> errors=new ArrayList<String>();
      final List<String> warnings=new ArrayList<String>();
      ValidationUtil.validateModel(modelDescriptor,new Consumer<ValidationProblem>(){
        @Override public void consume(        ValidationProblem problem){
          if (problem.getSeverity() == Severity.ERROR) {
            errors.add(problem.getMessage());
          }
 else {
            warnings.add(problem.getMessage());
          }
        }
      }
);
      schedule(node,new ErrorReport(node,errors,warnings));
    }
  }
);
}
