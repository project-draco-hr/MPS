{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.jdk8.structure.SuperInterfaceMethodCall");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          List<SNode> classifiers=ListSequence.fromList(new ArrayList<SNode>());
          SNode ancestor=SNodeOperations.getNodeAncestor(_context.getParentNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,"jetbrains.mps.baseLanguage.structure.Classifier"),true,false);
          if (SNodeOperations.isInstanceOf(ancestor,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept"))) {
            ListSequence.fromList(classifiers).addSequence(ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(ancestor,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,1095933932569l,"implementedInterface"))).where(new IWhereFilter<SNode>(){
              public boolean accept(              SNode it){
                return (SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1107535924139l,"classifier")) != null);
              }
            }
).select(new ISelector<SNode,SNode>(){
              public SNode select(              SNode it){
                return SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1107535924139l,"classifier"));
              }
            }
));
          }
 else           if (SNodeOperations.isInstanceOf(ancestor,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107796713796l,"jetbrains.mps.baseLanguage.structure.Interface"))) {
            ListSequence.fromList(classifiers).addSequence(ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(ancestor,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107796713796l,"jetbrains.mps.baseLanguage.structure.Interface")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1107796713796l,1107797138135l,"extendedInterface"))).where(new IWhereFilter<SNode>(){
              public boolean accept(              SNode it){
                return (SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1107535924139l,"classifier")) != null);
              }
            }
).select(new ISelector<SNode,SNode>(){
              public SNode select(              SNode it){
                return SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1107535924139l,"classifier"));
              }
            }
));
          }
          return classifiers;
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SNode result=SNodeFactoryOperations.createNewNode(model,SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-158254290210109391l,-6163639281827995632l),1719162360409810393l,"jetbrains.mps.baseLanguage.jdk8.structure.SuperInterfaceMethodCall")),null);
              SLinkOperations.setTarget(result,MetaAdapterFactory.getReferenceLink(new UUID(-158254290210109391l,-6163639281827995632l),1719162360409810393l,1719162360409958622l,"classifier"),(item));
              return result;
            }
            public String getMatchingText(            String pattern){
              return SPropertyOperations.getString((item),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")) + "." + "super";
            }
            public String getVisibleMatchingText(            String pattern){
              return getMatchingText(pattern);
            }
            public String getDescriptionText(            String pattern){
              return "super method call^" + NodePresentationUtil.descriptionText((item));
            }
          }
);
        }
      }
    }
  }
  return result;
}
