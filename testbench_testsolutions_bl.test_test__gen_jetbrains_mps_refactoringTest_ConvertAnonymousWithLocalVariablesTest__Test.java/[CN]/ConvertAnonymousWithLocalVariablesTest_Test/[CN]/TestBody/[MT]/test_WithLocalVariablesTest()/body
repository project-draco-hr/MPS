{
  addNodeById("3145818413496050426");
  addNodeById("3145818413496050433");
  addNodeById("3145818413496504287");
  new ConvertAnonymousRefactoring(SNodeOperations.cast(getNodeById("3145818413496050467"),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x1107e0cb103L,"jetbrains.mps.baseLanguage.structure.AnonymousClass")),"MyIField").doRefactor();
{
    List<SNode> nodesBefore=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(getNodeById("3145818413496050438"),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")));
    List<SNode> nodesAfter=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(getNodeById("3145818413496504288"),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")));
    Assert.assertNull("The nodes '" + nodesBefore + "' and '"+ nodesAfter+ "' do not match!",new NodesMatcher().match(nodesBefore,nodesAfter));
  }
}
