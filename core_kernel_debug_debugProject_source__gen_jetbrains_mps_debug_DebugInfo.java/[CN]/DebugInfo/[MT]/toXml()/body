{
  Element root=new Element(DEBUG_INFO);
  Set<PositionInfo> noRoot=MapSequence.fromMap(this.myRootToPositions).get(UNSPECIFIED_ROOT);
  if (noRoot != null) {
    for (    PositionInfo position : noRoot) {
      Element e=new Element(NODE_INFO);
      position.saveTo(e);
      root.addContent(e);
    }
  }
  Set<ScopePositionInfo> noRootScopes=MapSequence.fromMap(this.myRootToScopePositions).get(UNSPECIFIED_ROOT);
  if (noRootScopes != null) {
    for (    ScopePositionInfo position : noRootScopes) {
      Element e=new Element(SCOPE_INFO);
      position.saveTo(e);
      root.addContent(e);
    }
  }
  Map<String,Element> rootsToElements=MapSequence.fromMap(new HashMap<String,Element>());
  for (  String rootId : SetSequence.fromSet(MapSequence.fromMap(this.myRootToPositions).keySet()).where(new IWhereFilter<String>(){
    public boolean accept(    String it){
      return !(ObjectUtils.equals(it,UNSPECIFIED_ROOT));
    }
  }
).sort(new ISelector<String,Comparable<?>>(){
    public Comparable<?> select(    String it){
      return it;
    }
  }
,true)) {
    Element re=new Element(ROOT);
    re.setAttribute(ROOT_ID_ATTR,rootId);
    MapSequence.fromMap(rootsToElements).put(rootId,re);
    root.addContent(re);
    for (    PositionInfo position : MapSequence.fromMap(this.myRootToPositions).get(rootId)) {
      Element e=new Element(NODE_INFO);
      position.saveTo(e);
      re.addContent(e);
    }
  }
  for (  String rootId : SetSequence.fromSet(MapSequence.fromMap(this.myRootToScopePositions).keySet()).where(new IWhereFilter<String>(){
    public boolean accept(    String it){
      return !(ObjectUtils.equals(it,UNSPECIFIED_ROOT));
    }
  }
).sort(new ISelector<String,Comparable<?>>(){
    public Comparable<?> select(    String it){
      return it;
    }
  }
,true)) {
    Element re=MapSequence.fromMap(rootsToElements).get(rootId);
    if (re == null) {
      re=new Element(ROOT);
      MapSequence.fromMap(rootsToElements).put(rootId,re);
    }
    re.setAttribute(ROOT_ID_ATTR,rootId);
    root.addContent(re);
    for (    ScopePositionInfo position : MapSequence.fromMap(this.myRootToScopePositions).get(rootId)) {
      Element e=new Element(SCOPE_INFO);
      position.saveTo(e);
      re.addContent(e);
    }
  }
  return root;
}
