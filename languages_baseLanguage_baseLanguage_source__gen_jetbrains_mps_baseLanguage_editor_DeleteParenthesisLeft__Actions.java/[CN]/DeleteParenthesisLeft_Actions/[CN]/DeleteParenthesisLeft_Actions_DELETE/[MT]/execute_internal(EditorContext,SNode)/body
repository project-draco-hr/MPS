{
  boolean hasLeftUnmatchedParen=(AttributeOperations.getAttribute(node,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.baseLanguage.structure.IncompleteLeftParen")) != null);
  SNode replacing=SLinkOperations.getTarget(node,"expression",true);
  SNode rightMost=EditorParenthesisUtil.findRightmostOrLeftmostLeafExpression(replacing,true);
  SNodeOperations.replaceWithAnother(node,replacing);
  SNode leftMostNode=EditorParenthesisUtil.findRightmostOrLeftmostLeafExpression(replacing,false);
  ParenthesisUtil.checkExpressionPriorities(replacing);
  ParenthesisUtil.createUnmatchedRightParenthesis(rightMost);
  if (hasLeftUnmatchedParen) {
    ParenthesisUtil.createUnmatchedLeftParenthesis(leftMostNode);
  }
  SelectionUtil.selectLabelCellAnSetCaret(editorContext,leftMostNode,SelectionManager.FIRST_CELL,0);
}
