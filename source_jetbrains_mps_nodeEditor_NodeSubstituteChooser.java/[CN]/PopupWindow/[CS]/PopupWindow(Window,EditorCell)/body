{
  super(owner);
  owner.addComponentListener(new ComponentAdapter(){
    public void componentMoved(    ComponentEvent e){
      NodeSubstituteChooser.this.setLocationRelative(cell);
      getPatternEditor().setLocation(myPatternEditorLocation);
    }
  }
);
  myRelativeCell=cell;
  myList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  myList.setFont(new TextLine("",null).getFont());
  myList.setBackground(new Color(255,255,200));
  myList.addMouseListener(new MouseAdapter(){
    public void mousePressed(    MouseEvent e){
      repaintPopupMenu();
      updatePatternEditor();
    }
    public void mouseClicked(    MouseEvent e){
      if (e.getClickCount() == 2) {
        CommandProcessor.instance().executeCommand(new Runnable(){
          public void run(){
            doSubstituteSelection();
          }
        }
,"Substitute");
      }
    }
  }
);
  add(myScroller);
  myList.setFocusable(false);
  setSize(PREFERRED_WIDTH,PREFERRED_HEIGHT);
}
