{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case 0:
    return props_AbstractAppendPart;
case 1:
  return props_AbstractTextGenDeclaration;
case 2:
return props_AbstractTextGenParameter;
case 3:
return props_AppendOperation;
case 4:
return props_AttributedNodePart;
case 5:
return props_BufferParameter;
case 6:
return props_CollectionAppendPart;
case 7:
return props_ConceptTextGenDeclaration;
case 8:
return props_ConstantStringAppendPart;
case 9:
return props_ContextParameter;
case 10:
return props_DecreaseDepthOperation;
case 11:
return props_EncodingDeclaration;
case 12:
return props_EncodingDeclarationBase;
case 13:
return props_EncodingLiteral;
case 14:
return props_ExtensionDeclaration;
case 15:
return props_FilenameFunction;
case 16:
return props_FoundErrorOperation;
case 17:
return props_GenerateTextDeclaration;
case 18:
return props_IncreaseDepthOperation;
case 19:
return props_IndentBufferOperation;
case 20:
return props_IndentPart;
case 21:
return props_LanguageTextGenDeclaration;
case 22:
return props_LayoutPart;
case 23:
return props_NewLineAppendPart;
case 24:
return props_NodeAppendPart;
case 25:
return props_NodeParameter;
case 26:
return props_OperationCall;
case 27:
return props_OperationDeclaration;
case 28:
return props_ReferenceAppendPart;
case 29:
return props_SimpleTextGenOperation;
case 30:
return props_StubOperationDeclaration;
case 31:
return props_TextUnitLayout;
case 32:
return props_UtilityMethodCall;
case 33:
return props_UtilityMethodDeclaration;
case 34:
return props_WithIndentOperation;
}
throw new IllegalStateException("Unknown concept " + c);
}
