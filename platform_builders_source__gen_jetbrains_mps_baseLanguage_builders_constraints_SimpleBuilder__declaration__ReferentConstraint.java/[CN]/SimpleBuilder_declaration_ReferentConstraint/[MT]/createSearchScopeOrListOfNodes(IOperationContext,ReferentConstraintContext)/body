{
  SNode contextBuilder=Builder_Behavior.getContextBuilder_7057666463730366732(_context.getEnclosingNode());
  if (SNodeOperations.isInstanceOf(contextBuilder,"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilder")) {
    return SimpleBuilder_Behavior.call_getPossibleChildren_8969040284892300232(SNodeOperations.cast(contextBuilder,"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilder"),_context.getModel(),operationContext.getScope());
  }
 else   if (contextBuilder == null && (SNodeOperations.isInstanceOf(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.GenericNewExpression") || SNodeOperations.isInstanceOf(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.builders.structure.AsBuilderStatement"))) {
    return ListSequence.fromList(SModelOperations.getRootsIncludingImported(_context.getModel(),operationContext.getScope(),"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilders")).translate(new ITranslator2<SNode,SNode>(){
      public Iterable<SNode> translate(      SNode it){
        return SLinkOperations.getTargets(it,"builder",true);
      }
    }
).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SimpleBuilderDeclaration_Behavior.call_isRoot_8969040284892403078(it);
      }
    }
).toListSequence();
  }
 else {
    return new ArrayList<SNode>();
  }
}
