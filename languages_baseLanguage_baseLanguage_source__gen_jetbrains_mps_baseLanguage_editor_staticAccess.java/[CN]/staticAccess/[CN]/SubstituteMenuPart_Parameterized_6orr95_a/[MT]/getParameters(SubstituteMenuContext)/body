{
  FilteringScope visibleClassifiers=new FilteringScope(new ClassifiersScope(_context.getModel(),SNodeOperations.as(_context.getParentNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"),true)){
    @Override public boolean isExcluded(    SNode node){
      return super.isExcluded(node) || !(VisibilityUtil.isVisible(_context.getParentNode(),SNodeOperations.as(node,MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,"jetbrains.mps.baseLanguage.structure.IVisible"))));
    }
  }
;
  Iterable<SNode> availableElements=visibleClassifiers.getAvailableElements("");
  Iterable<SNode> seq=Sequence.fromIterable(availableElements).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(it,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"));
    }
  }
);
  return seq;
}
