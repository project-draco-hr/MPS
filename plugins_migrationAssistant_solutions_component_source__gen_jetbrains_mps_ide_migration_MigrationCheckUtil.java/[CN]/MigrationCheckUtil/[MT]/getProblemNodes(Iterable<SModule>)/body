{
  return Sequence.fromIterable(modules).translate(new ITranslator2<SModule,SModel>(){
    public Iterable<SModel> translate(    SModule it){
      return it.getModels();
    }
  }
).ofType(SModel.class).translate(new ITranslator2<SModel,SNode>(){
    public Iterable<SNode> translate(    SModel it){
      return SModelOperations.nodes(it,null);
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      SAbstractConceptAdapter concept=(SAbstractConceptAdapter)it.getConcept();
      if (concept.getConceptDescriptor() == null) {
        return true;
      }
      List<SProperty> props=IterableUtil.asList(concept.getProperties());
      for (      SProperty p : Sequence.fromIterable(it.getProperties())) {
        if (!(props.contains(p))) {
          return true;
        }
      }
      List<SContainmentLink> links=IterableUtil.asList(concept.getContainmentLinks());
      for (      SNode n : Sequence.fromIterable(it.getChildren())) {
        if (!(links.contains(n.getContainmentLink()))) {
          return true;
        }
      }
      List<SReferenceLink> refs=IterableUtil.asList(concept.getReferenceLinks());
      for (      SReference r : Sequence.fromIterable(it.getReferences())) {
        if (!(refs.contains(r.getLink()))) {
          return true;
        }
      }
      return false;
    }
  }
);
}
