{
  return Sequence.fromIterable(modules).translate(new ITranslator2<SModule,SModel>(){
    public Iterable<SModel> translate(    SModule it){
      return it.getModels();
    }
  }
).ofType(SModel.class).translate(new ITranslator2<SModel,SNode>(){
    public Iterable<SNode> translate(    SModel it){
      return SModelOperations.nodes(it,null);
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return ((SAbstractConceptAdapter)it.getConcept()).getConceptDescriptor() == null;
    }
  }
);
}
