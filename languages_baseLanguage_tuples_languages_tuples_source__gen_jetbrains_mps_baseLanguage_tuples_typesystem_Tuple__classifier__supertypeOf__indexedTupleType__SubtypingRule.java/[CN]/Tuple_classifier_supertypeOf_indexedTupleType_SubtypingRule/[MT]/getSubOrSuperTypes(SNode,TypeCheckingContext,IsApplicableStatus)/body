{
  List<SNode> result=new ArrayList<SNode>();
  final String ifcname="_" + ListSequence.fromList(SLinkOperations.getChildren(itt,MetaAdapterFactory.getContainmentLink(0xa247e09e243545baL,0xb8d207e93feba96aL,0x1207157a8dcL,0x1207158795cL,"componentType"))).count();
  SNode ifc=Sequence.fromIterable(Classifier_Behavior.call_nestedClassifiers_5292274854859193142(SLinkOperations.getTarget(_quotation_createNode_tm6bn3_a0a0a2a1(),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")))).findFirst(new IWhereFilter<SNode>(){
    public boolean accept(    SNode ifc){
      return ifcname.equals(SPropertyOperations.getString(ifc,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")));
    }
  }
);
  SNode supertype=_quotation_createNode_tm6bn3_a0d0b(ifc);
  ListSequence.fromList(result).addElement(supertype);
  for (  SNode comptype : SLinkOperations.getChildren(itt,MetaAdapterFactory.getContainmentLink(0xa247e09e243545baL,0xb8d207e93feba96aL,0x1207157a8dcL,0x1207158795cL,"componentType"))) {
    SNode javatype=ClassifierTypeUtil.getTypeCoercedToClassifierType(comptype);
    ListSequence.fromList(SLinkOperations.getChildren(supertype,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x102419671abL,"parameter"))).addElement(SNodeOperations.copyNode(javatype));
  }
  return result;
}
