{
  List<SNode> result=new ArrayList<SNode>();
  final String ifcname="_" + ListSequence.fromList(SLinkOperations.getTargets(itt,"componentType",true)).count();
  SNode ifc=Sequence.fromIterable(Classifier_Behavior.call_nestedClassifiers_5292274854859193142(SLinkOperations.getTarget(_quotation_createNode_tm6bn3_a0a0a2a0(),"classifier",false))).findFirst(new IWhereFilter<SNode>(){
    public boolean accept(    SNode ifc){
      return ifcname.equals(SPropertyOperations.getString(ifc,"name"));
    }
  }
);
  SNode supertype=_quotation_createNode_tm6bn3_a0d0a(ifc);
  ListSequence.fromList(result).addElement(supertype);
  for (  SNode comptype : SLinkOperations.getTargets(itt,"componentType",true)) {
    SNode javatype=ClassifierTypeUtil.getTypeCoercedToClassifierType(comptype);
    ListSequence.fromList(SLinkOperations.getTargets(supertype,"parameter",true)).addElement(SNodeOperations.copyNode(javatype));
  }
  return result;
}
