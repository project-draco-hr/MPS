{
  List<SNode> result=new ArrayList<SNode>();
  if (constraint == 0) {
    return result;
  }
  if ((constraint ^ IClassifiersSearchScope.ANYTHING) == 0) {
    for (    SNode classifier : classifiers) {
      if (condition.met(classifier)) {
        result.add(classifier);
      }
      result.addAll(IterableUtil.asCollection(SNodeUtil.getDescendants(classifier,condition,false)));
    }
  }
 else {
    for (    SNode classifier : classifiers) {
      boolean isClassConcept=SNodeOperations.isInstanceOf(classifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"));
      if ((constraint & IClassifiersSearchScope.NON_FINAL) == IClassifiersSearchScope.NON_FINAL && isClassConcept && SPropertyOperations.getBoolean(SNodeOperations.cast(classifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")),MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x11c6af4b284L,"isFinal"))) {
        continue;
      }
      if ((constraint & IClassifiersSearchScope.INTERFACE) == IClassifiersSearchScope.INTERFACE && SNodeOperations.isInstanceOf(classifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface")) && !(SNodeOperations.isInstanceOf(classifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a69dc80cL,"jetbrains.mps.baseLanguage.structure.Annotation"))) && condition.met(classifier)) {
        result.add(classifier);
      }
      if ((constraint & IClassifiersSearchScope.ANNOTATION) == IClassifiersSearchScope.ANNOTATION && SConceptOperations.isExactly(SNodeOperations.asSConcept(SNodeOperations.getConceptDeclaration(classifier)),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a69dc80cL,"jetbrains.mps.baseLanguage.structure.Annotation")) && condition.met(classifier)) {
        result.add(classifier);
      }
      if ((constraint & IClassifiersSearchScope.CLASS) == IClassifiersSearchScope.CLASS && isClassConcept && condition.met(classifier)) {
        result.add(classifier);
      }
      if ((constraint & IClassifiersSearchScope.CONSTRUCTOR) == IClassifiersSearchScope.CONSTRUCTOR && isClassConcept) {
        for (        SNode constructorDeclaration : Sequence.fromIterable(((Iterable<SNode>)BHReflection.invoke((SNodeOperations.cast(classifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"))),SMethodTrimmedId.create("constructors",MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"4_LVZ3pCvsd"))))) {
          if (condition.met(constructorDeclaration)) {
            result.add(constructorDeclaration);
          }
        }
      }
      if ((constraint & IClassifiersSearchScope.INSTANCE_FIELD) == IClassifiersSearchScope.INSTANCE_FIELD && isClassConcept) {
        for (        SNode member : Sequence.fromIterable(((Iterable<SNode>)BHReflection.invoke((SNodeOperations.cast(classifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"))),SMethodTrimmedId.create("fields",MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"4_LVZ3pC27C"))))) {
          if (condition.met(member)) {
            result.add(member);
          }
        }
      }
      if ((constraint & IClassifiersSearchScope.INSTANCE_METHOD) == IClassifiersSearchScope.INSTANCE_METHOD && isClassConcept) {
        for (        SNode member : Sequence.fromIterable(((Iterable<SNode>)BHReflection.invoke((SNodeOperations.cast(classifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"))),SMethodTrimmedId.create("methods",MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"),"4_LVZ3pBKCn"))))) {
          if (condition.met(member)) {
            result.add(member);
          }
        }
      }
      if ((constraint & IClassifiersSearchScope.STATIC_FIELD) == IClassifiersSearchScope.STATIC_FIELD && isClassConcept) {
        for (        SNode member : Sequence.fromIterable(((Iterable<SNode>)BHReflection.invoke((SNodeOperations.cast(classifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"))),SMethodTrimmedId.create("staticFields",MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"),"4_LVZ3pBr7M"))))) {
          if (condition.met(member)) {
            result.add(member);
          }
        }
      }
      if ((constraint & IClassifiersSearchScope.STATIC_METHOD) == IClassifiersSearchScope.STATIC_METHOD && isClassConcept) {
        for (        SNode member : Sequence.fromIterable(((Iterable<SNode>)BHReflection.invoke((SNodeOperations.cast(classifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"))),SMethodTrimmedId.create("staticMethods",MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"4_LVZ3pCeXr"))))) {
          if (condition.met(member)) {
            result.add(member);
          }
        }
      }
      if ((constraint & IClassifiersSearchScope.ENUM_CONSTANT) == IClassifiersSearchScope.ENUM_CONSTANT && SNodeOperations.isInstanceOf(classifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass"))) {
        for (        SNode member : ListSequence.fromList(SLinkOperations.getChildren((SNodeOperations.cast(classifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass"))),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,0xfc367503acL,"enumConstant")))) {
          if (condition.met(member)) {
            result.add(member);
          }
        }
      }
    }
  }
  return result;
}
