{
  for (  SNode ucl : SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.baseLanguage.closures.structure.UnrestrictedClosureLiteral")) {
    for (    SNode bs : SNodeOperations.getDescendants(ucl,"jetbrains.mps.baseLanguage.structure.BreakStatement",false,new String[]{"jetbrains.mps.baseLanguage.structure.CommentedStatementsBlock","jetbrains.mps.baseLanguage.structure.IStatementListContainer"})) {
      SNode cs=SNodeOperations.getAncestorWhereConceptInList(bs,new String[]{"jetbrains.mps.baseLanguage.structure.AbstractLoopStatement","jetbrains.mps.baseLanguage.structure.SwitchStatement"},false,false);
      String label=SPropertyOperations.getString(SNodeOperations.as(cs,"jetbrains.mps.baseLanguage.structure.AbstractLoopStatement"),"label");
      if (label == null) {
        label=SPropertyOperations.getString(SNodeOperations.as(cs,"jetbrains.mps.baseLanguage.structure.SwitchStatement"),"label");
      }
      if (SPropertyOperations.getString(bs,"label") == null || !(SPropertyOperations.getString(bs,"label").equals(label))) {
        if (label == null) {
          label=_context.createUniqueName("label",SNodeOperations.getAncestor(cs,"jetbrains.mps.baseLanguage.structure.IStatementListContainer",false,false));
          if (SNodeOperations.isInstanceOf(cs,"jetbrains.mps.baseLanguage.structure.AbstractLoopStatement")) {
            SPropertyOperations.set(SNodeOperations.cast(cs,"jetbrains.mps.baseLanguage.structure.AbstractLoopStatement"),"label",label);
          }
 else {
            SPropertyOperations.set(SNodeOperations.cast(cs,"jetbrains.mps.baseLanguage.structure.SwitchStatement"),"label",label);
          }
        }
        SPropertyOperations.set(bs,"label",label);
      }
    }
  }
}
