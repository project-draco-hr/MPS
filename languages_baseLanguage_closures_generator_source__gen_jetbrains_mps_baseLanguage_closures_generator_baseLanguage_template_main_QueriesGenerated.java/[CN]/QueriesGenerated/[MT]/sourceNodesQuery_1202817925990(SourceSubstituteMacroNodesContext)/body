{
  SNode mtd=Sequence.fromIterable(Classifier__BehaviorDescriptor.methods_id4_LVZ3pBKCn.invoke(SLinkOperations.getTarget(_context.getNode(),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")))).first();
  int idx=0;
  List<SNode> ptypes=SLinkOperations.getChildren(SNodeOperations.cast(_context.getNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x102419671abL,"parameter"));
  SNode cl=(SNode)Values.LITERAL.get(_context,_context.getNode());
  List<SNode> litParams=SLinkOperations.getChildren(cl,MetaAdapterFactory.getContainmentLink(0xfd3920347849419dL,0x907112563d152375L,0x1174bed3125L,0x1174bf02c34L,"parameter"));
  List<SNode> res=ListSequence.fromList(new ArrayList<SNode>());
  for (  SNode pdecl : SLinkOperations.getChildren(mtd,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1feL,"parameter"))) {
    SNode pd=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c77f1e94L,"jetbrains.mps.baseLanguage.structure.ParameterDeclaration"));
    SNode ptype=SLinkOperations.getTarget(pdecl,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x450368d90ce15bc3L,0x4ed4d318133c80ceL,"type"));
    if (SNodeOperations.isInstanceOf(ptype,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102467229d8L,"jetbrains.mps.baseLanguage.structure.TypeVariableReference"))) {
      List<SNode> psib=SNodeOperations.getPrevSiblings(SLinkOperations.getTarget(SNodeOperations.cast(ptype,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102467229d8L,"jetbrains.mps.baseLanguage.structure.TypeVariableReference")),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102467229d8L,0x1024673a581L,"typeVariableDeclaration")),false);
      SLinkOperations.setTarget(pd,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x450368d90ce15bc3L,0x4ed4d318133c80ceL,"type"),ClassifierTypeUtil.copyTypeRecursively(ListSequence.fromList(ptypes).getElement(ListSequence.fromList(psib).count())));
    }
 else {
      SLinkOperations.setTarget(pd,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x450368d90ce15bc3L,0x4ed4d318133c80ceL,"type"),SNodeOperations.copyNode(ptype));
    }
    SPropertyOperations.set(pd,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),SPropertyOperations.getString(ListSequence.fromList(litParams).getElement(idx),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")));
    idx++;
    ListSequence.fromList(res).addElement(pd);
  }
  return res;
}
