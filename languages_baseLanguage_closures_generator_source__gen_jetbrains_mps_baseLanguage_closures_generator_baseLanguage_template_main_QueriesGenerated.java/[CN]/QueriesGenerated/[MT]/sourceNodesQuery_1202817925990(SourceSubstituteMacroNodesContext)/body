{
  SNode mtd=Sequence.fromIterable(Classifier_Behavior.call_methods_5292274854859311639(SLinkOperations.getTarget(_context.getNode(),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1107535924139l,"classifier")))).first();
  int idx=0;
  List<SNode> ptypes=SLinkOperations.getChildren(SNodeOperations.cast(_context.getNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,"jetbrains.mps.baseLanguage.structure.ClassifierType")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1109201940907l,"parameter"));
  SNode cl=(SNode)Values.LITERAL.get(_context,_context.getNode());
  List<SNode> litParams=SLinkOperations.getChildren(cl,MetaAdapterFactory.getContainmentLink(new UUID(-200093298712821347l,-8038623698278341771l),1199569711397l,1199569906740l,"parameter"));
  List<SNode> res=ListSequence.fromList(new ArrayList<SNode>());
  for (  SNode pdecl : SLinkOperations.getChildren(mtd,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123134l,"parameter"))) {
    SNode pd=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068498886292l,"jetbrains.mps.baseLanguage.structure.ParameterDeclaration"));
    SNode ptype=SLinkOperations.getTarget(pdecl,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type"));
    if (SNodeOperations.isInstanceOf(ptype,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1109283449304l,"jetbrains.mps.baseLanguage.structure.TypeVariableReference"))) {
      List<SNode> psib=SNodeOperations.getPrevSiblings(SLinkOperations.getTarget(SNodeOperations.cast(ptype,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1109283449304l,"jetbrains.mps.baseLanguage.structure.TypeVariableReference")),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1109283449304l,1109283546497l,"typeVariableDeclaration")),false);
      SLinkOperations.setTarget(pd,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type"),ClassifierTypeUtil.copyTypeRecursively(ListSequence.fromList(ptypes).getElement(ListSequence.fromList(psib).count())));
    }
 else {
      SLinkOperations.setTarget(pd,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type"),SNodeOperations.copyNode(ptype));
    }
    SPropertyOperations.set(pd,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"),SPropertyOperations.getString(ListSequence.fromList(litParams).getElement(idx),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")));
    idx++;
    ListSequence.fromList(res).addElement(pd);
  }
  return res;
}
