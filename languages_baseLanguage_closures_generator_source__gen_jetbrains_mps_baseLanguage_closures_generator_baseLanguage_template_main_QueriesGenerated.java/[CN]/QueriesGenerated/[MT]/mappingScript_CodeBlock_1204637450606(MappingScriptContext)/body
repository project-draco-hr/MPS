{
  if (Constants.ONLY_CLOSURE_LITERAL_AS_FUNCTION_TYPE) {
    for (    SNode cl : SModelOperations.nodes(_context.getModel(),MetaAdapterFactory.getConcept(0xfd3920347849419dL,0x907112563d152375L,0x1174bed3125L,"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral"))) {
      if (!(SNodeOperations.isInstanceOf(SNodeOperations.getParent(cl),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x118154a6332L,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"))) || !(SNodeOperations.getContainingLinkRole(cl).equals("actualArgument"))) {
        continue;
      }
      SNode imco=SNodeOperations.cast(SNodeOperations.getParent(cl),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x118154a6332L,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"));
      if (!(SNodeOperations.isInstanceOf(SNodeOperations.getParent(imco),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,"jetbrains.mps.baseLanguage.structure.DotExpression")))) {
        continue;
      }
      SNode de=SNodeOperations.cast(SNodeOperations.getParent(imco),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,"jetbrains.mps.baseLanguage.structure.DotExpression"));
      if (SLinkOperations.getTarget(de,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,0x116b46b36c4L,"operation")) != imco) {
        continue;
      }
      List<SNode> args=SLinkOperations.getChildren(imco,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301aeL,"actualArgument"));
      List<SNode> pdecls=SLinkOperations.getChildren(SLinkOperations.getTarget(imco,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1feL,"parameter"));
      if ((SLinkOperations.getTarget(imco,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration")) != null) && ListSequence.fromList(args).count() != ListSequence.fromList(pdecls).count()) {
        _context.showInformationMessage(imco,"Actual arguments count != parameter declarations count");
      }
      SNode deOperandType=TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(de,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,0x116b46a4416L,"operand")));
      SNode operandType=SNodeOperations.as(deOperandType,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType"));
      if ((operandType == null)) {
        operandType=TypeChecker.getInstance().getRuntimeSupport().coerce_(deOperandType,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.structure.ClassifierType"),true);
      }
      Iterator<SNode> argsItr=ListSequence.fromList(args).iterator();
      for (      SNode pdecl : pdecls) {
        if (argsItr.hasNext()) {
          SNode arg=argsItr.next();
          SNode pdeclType=ClassifierTypeUtil.resolveType(SLinkOperations.getTarget(pdecl,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x450368d90ce15bc3L,0x4ed4d318133c80ceL,"type")),operandType);
          FunctionTypeUtil.prepAdaptations(_context,FunctionTypeUtil.unmeet(pdeclType),arg);
        }
      }
    }
  }
 else {
    for (    SNode de : SModelOperations.nodes(_context.getModel(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,"jetbrains.mps.baseLanguage.structure.DotExpression"))) {
      if (_context.isDirty(de) && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(de,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,0x116b46b36c4L,"operation")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x118154a6332L,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"))) {
        SNode imco=SNodeOperations.cast(SLinkOperations.getTarget(de,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,0x116b46b36c4L,"operation")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x118154a6332L,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"));
        List<SNode> args=SLinkOperations.getChildren(imco,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301aeL,"actualArgument"));
        List<SNode> pdecls=SLinkOperations.getChildren(SLinkOperations.getTarget(imco,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1feL,"parameter"));
        if ((SLinkOperations.getTarget(imco,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration")) != null) && ListSequence.fromList(args).count() != ListSequence.fromList(pdecls).count()) {
          _context.showInformationMessage(imco,"Actual arguments count != parameter declarations count");
        }
        Iterator<SNode> argsItr=ListSequence.fromList(args).iterator();
        for (        SNode pdecl : pdecls) {
          if (argsItr.hasNext()) {
            SNode arg=argsItr.next();
            if (Constants.ONLY_CLOSURE_LITERAL_AS_FUNCTION_TYPE) {
              if (!(SNodeOperations.isInstanceOf(arg,MetaAdapterFactory.getConcept(0xfd3920347849419dL,0x907112563d152375L,0x1174bed3125L,"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral")))) {
                continue;
              }
            }
            SNode operandType=SNodeOperations.as(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(de,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,0x116b46a4416L,"operand"))),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType"));
            if ((operandType == null)) {
              operandType=TypeChecker.getInstance().getRuntimeSupport().coerce_(TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(de,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,0x116b46a4416L,"operand"))),HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.structure.ClassifierType"),true);
            }
            SNode pdeclType=ClassifierTypeUtil.resolveType(SLinkOperations.getTarget(pdecl,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x450368d90ce15bc3L,0x4ed4d318133c80ceL,"type")),operandType);
            FunctionTypeUtil.prepAdaptations(_context,FunctionTypeUtil.unmeet(pdeclType),arg);
          }
        }
      }
    }
  }
}
