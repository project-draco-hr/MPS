{
  List<SNode> paramDecls=SLinkOperations.getChildren(_context.getNode(),MetaAdapterFactory.getContainmentLink(0xfd3920347849419dL,0x907112563d152375L,0x1174bed3125L,0x1174bf02c34L,"parameter"));
  SNode literal=_context.getNode();
  SNode ct=(SNode)Values.LITERAL_TARGET.get(_context,literal);
  if (ct != null) {
    Iterable<SNode> imds=Classifier__BehaviorDescriptor.methods_id4_LVZ3pBKCn.invoke(SLinkOperations.getTarget(ct,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")));
    if (Sequence.fromIterable(imds).isNotEmpty()) {
      SNode imd=Sequence.fromIterable(imds).first();
      List<SNode> res=ListSequence.fromList(new ArrayList<SNode>());
      int idx=0;
      for (      SNode pd : SLinkOperations.getChildren(imd,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1feL,"parameter"))) {
        if (idx >= ListSequence.fromList(paramDecls).count()) {
          _context.showErrorMessage(_context.getNode(),"Method parameters count doesn't match closure parameters count: " + SPropertyOperations.getString(imd,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x10802efe25aL,0x10d34f97574L,"shortDescription")));
          break;
        }
        SNode newpd=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c77f1e94L,"jetbrains.mps.baseLanguage.structure.ParameterDeclaration"));
        SLinkOperations.setTarget(newpd,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x450368d90ce15bc3L,0x4ed4d318133c80ceL,"type"),FunctionTypeUtil.unmeet(FunctionTypeUtil.unbound(ClassifierTypeUtil.resolveType(SLinkOperations.getTarget(pd,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x450368d90ce15bc3L,0x4ed4d318133c80ceL,"type")),ct))));
        SPropertyOperations.set(newpd,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),SPropertyOperations.getString(ListSequence.fromList(paramDecls).getElement(idx),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")));
        SPropertyOperations.set(newpd,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37a7f6eL,0x111f9e9f00cL,"isFinal"),"" + (SPropertyOperations.getBoolean(ListSequence.fromList(paramDecls).getElement(idx),MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37a7f6eL,0x111f9e9f00cL,"isFinal"))));
        idx++;
        ListSequence.fromList(res).addElement(newpd);
      }
      return res;
    }
  }
  return ListSequence.fromList(new ArrayList<SNode>());
}
