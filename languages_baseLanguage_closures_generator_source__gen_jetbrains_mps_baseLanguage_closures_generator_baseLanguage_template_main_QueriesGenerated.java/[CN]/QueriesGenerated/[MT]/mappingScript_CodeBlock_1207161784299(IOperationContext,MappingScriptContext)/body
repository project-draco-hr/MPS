{
  for (  SNode cl : SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral")) {
    for (    SNode te : SNodeOperations.getDescendants(cl,"jetbrains.mps.baseLanguage.structure.ThisExpression",false,new String[]{})) {
      if ((SLinkOperations.getTarget(te,"classConcept",false) == null) && SNodeOperations.isInstanceOf(SNodeOperations.getParent(te),"jetbrains.mps.baseLanguage.structure.DotExpression")) {
        SNode thisCC=SNodeOperations.getAncestor(te,"jetbrains.mps.baseLanguage.structure.ClassConcept",false,false);
        if (SNodeOperations.isInstanceOf(thisCC,"jetbrains.mps.baseLanguage.structure.AnonymousClass") && SNodeOperations.getAncestor(cl,"jetbrains.mps.baseLanguage.structure.ClassConcept",false,false) == thisCC) {
          SNode op=SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(te),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operation",true);
          if (SNodeOperations.isInstanceOf(op,"jetbrains.mps.baseLanguage.structure.FieldReferenceOperation")) {
            Flags.REMOVE_THIS.flag(_context,op);
          }
 else           if (SNodeOperations.isInstanceOf(op,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation")) {
            Flags.REMOVE_THIS.flag(_context,op);
          }
 else {
            _context.showErrorMessage(te,"'this' expression couldn't be removed");
          }
        }
      }
    }
  }
}
