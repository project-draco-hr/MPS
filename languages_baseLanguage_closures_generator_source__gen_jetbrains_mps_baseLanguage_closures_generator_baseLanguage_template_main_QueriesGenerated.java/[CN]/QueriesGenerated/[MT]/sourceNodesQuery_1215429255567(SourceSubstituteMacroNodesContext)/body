{
  SNode literal=_context.getNode();
  SNode ct=(SNode)Values.LITERAL_TARGET.get(_context,literal);
  if (ct != null) {
    Iterable<SNode> imds=Classifier__BehaviorDescriptor.methods_id4_LVZ3pBKCn.invoke(SLinkOperations.getTarget(ct,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")));
    if (Sequence.fromIterable(imds).isNotEmpty()) {
      SNode imd=Sequence.fromIterable(imds).first();
      List<SNode> res=ListSequence.fromList(new ArrayList<SNode>());
      for (      SNode tt : SLinkOperations.getChildren(imd,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0x10f383d6949L,"throwsItem"))) {
        ListSequence.fromList(res).addElement(ClassifierTypeUtil.resolveType(tt,ct));
      }
      return res;
    }
  }
  return (List<SNode>)FunctionType__BehaviorDescriptor.getNormalizedThrowsTypes_id2ZrgyPlTDZP.invoke(SNodeOperations.cast(((SNode)_context.getVariable("var:nodeType")),MetaAdapterFactory.getConcept(0xfd3920347849419dL,0x907112563d152375L,0x1174a4d19ffL,"jetbrains.mps.baseLanguage.closures.structure.FunctionType")));
}
