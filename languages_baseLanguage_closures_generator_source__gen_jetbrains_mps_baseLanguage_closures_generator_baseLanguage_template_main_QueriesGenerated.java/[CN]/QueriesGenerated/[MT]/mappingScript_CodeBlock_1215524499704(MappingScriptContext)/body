{
  List<SNode> rss=SModelOperations.getNodes(_context.getModel(),"jetbrains.mps.baseLanguage.structure.ReturnStatement");
  for (  SNode rs : rss) {
    if ((SLinkOperations.getTarget(rs,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068581242878l,1068581517676l,"expression")) != null)) {
      SNode anc=SNodeOperations.getAncestorWhereConceptInList(rs,new String[]{"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration","jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral"},false,false);
      if (SNodeOperations.isInstanceOf(anc,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration")) {
        SNode rt=SLinkOperations.getTarget(SNodeOperations.cast(anc,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123133l,"returnType"));
        if (!(((rt != null) && SNodeOperations.isInstanceOf(rt,"jetbrains.mps.baseLanguage.structure.VoidType")))) {
          FunctionTypeUtil.prepAdaptations(_context,rt,SLinkOperations.getTarget(rs,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068581242878l,1068581517676l,"expression")));
        }
      }
    }
  }
}
