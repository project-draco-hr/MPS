{
  for (  SNode ac : SModelOperations.nodes(_context.getModel(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x1107e0cb103L,"jetbrains.mps.baseLanguage.structure.AnonymousClass"))) {
    List<SNode> args=SLinkOperations.getChildren(ac,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301aeL,"actualArgument"));
    List<SNode> pdecls=SLinkOperations.getChildren(SLinkOperations.getTarget(ac,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1feL,"parameter"));
    if ((SLinkOperations.getTarget(ac,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration")) != null) && ListSequence.fromList(args).count() != ListSequence.fromList(pdecls).count()) {
      _context.showInformationMessage(ac,"Actual arguments count != parameter declarations count");
    }
    int idx=0;
    for (    SNode pdecl : pdecls) {
      if (idx < ListSequence.fromList(args).count()) {
        SNode arg=ListSequence.fromList(args).getElement(idx);
        FunctionTypeUtil.prepAdaptations(_context,TypeDerivable__BehaviorDescriptor.deriveType_idhEwIVPz.invoke(ac,arg),arg);
      }
      idx++;
    }
  }
}
