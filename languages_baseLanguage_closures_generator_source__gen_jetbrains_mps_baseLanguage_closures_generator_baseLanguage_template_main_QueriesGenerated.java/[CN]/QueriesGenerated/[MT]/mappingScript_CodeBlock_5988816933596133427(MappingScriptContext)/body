{
  for (  SNode ac : SModelOperations.nodes(_context.getModel(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1170345865475l,"jetbrains.mps.baseLanguage.structure.AnonymousClass"))) {
    List<SNode> args=SLinkOperations.getChildren(ac,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141038l,"actualArgument"));
    List<SNode> pdecls=SLinkOperations.getChildren(SLinkOperations.getTarget(ac,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141037l,"baseMethodDeclaration")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123132l,1068580123134l,"parameter"));
    if ((SLinkOperations.getTarget(ac,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141037l,"baseMethodDeclaration")) != null) && ListSequence.fromList(args).count() != ListSequence.fromList(pdecls).count()) {
      _context.showInformationMessage(ac,"Actual arguments count != parameter declarations count");
    }
    int idx=0;
    for (    SNode pdecl : pdecls) {
      if (idx < ListSequence.fromList(args).count()) {
        SNode arg=ListSequence.fromList(args).getElement(idx);
        FunctionTypeUtil.prepAdaptations(_context,BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),ac,"virtual_deriveType_1213877435747",new Object[]{arg}),arg);
      }
      idx++;
    }
  }
}
