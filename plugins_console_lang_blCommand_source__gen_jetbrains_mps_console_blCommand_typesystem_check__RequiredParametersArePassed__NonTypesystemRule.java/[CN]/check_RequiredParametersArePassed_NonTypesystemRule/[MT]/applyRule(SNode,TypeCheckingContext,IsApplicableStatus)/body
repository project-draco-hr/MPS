{
  Iterable<SNode> requiredParameters=ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(callAction,"action",false),"parameter",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return ListSequence.fromList(SLinkOperations.getTargets(it,"condition",true)).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SNodeOperations.isInstanceOf(it,"jetbrains.mps.lang.plugin.structure.RequiredCondition");
        }
      }
);
    }
  }
);
  Iterable<SNode> passedParameters=ListSequence.fromList(SLinkOperations.getTargets(callAction,"parameter",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return (SLinkOperations.getTarget(it,"declaration",false) != null);
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SLinkOperations.getTarget(it,"declaration",false);
    }
  }
);
  Iterable<SNode> missed=Sequence.fromIterable(requiredParameters).subtract(Sequence.fromIterable(passedParameters));
  if (Sequence.fromIterable(missed).isNotEmpty()) {
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(callAction,"Parameter " + SPropertyOperations.getString(Sequence.fromIterable(missed).first(),"name") + " is required","r:7e8cfa8a-da13-467d-9878-63b90b943128(jetbrains.mps.console.blCommand.typesystem)","2284201910214329644",null,errorTarget);
    }
  }
}
