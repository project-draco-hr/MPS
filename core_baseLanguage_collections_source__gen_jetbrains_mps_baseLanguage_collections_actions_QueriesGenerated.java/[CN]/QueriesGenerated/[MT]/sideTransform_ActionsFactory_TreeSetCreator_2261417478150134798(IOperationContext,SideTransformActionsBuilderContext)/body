{
  List<INodeSubstituteAction> result=ListSequence.fromList(new ArrayList<INodeSubstituteAction>());
{
    SNode concept=SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.collections.structure.TreeSetCreator");
    ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(concept,_context.getSourceNode()){
      public SNode doSubstitute(      String pattern){
        return SLinkOperations.setTarget(_context.getSourceNode(),"comparator",new QueriesGenerated.QuotationClass_x583g4_a2a0a0a0a0a1a0a1a37().createNode(SNodeOperations.copyNode(SLinkOperations.getTarget(_context.getSourceNode(),"elementType",true)),SNodeOperations.copyNode(SLinkOperations.getTarget(_context.getSourceNode(),"elementType",true))),true);
      }
      public String getMatchingText(      String pattern){
        return "(";
      }
      public String getVisibleMatchingText(      String pattern){
        return this.getMatchingText(pattern);
      }
      public String getDescriptionText(      String pattern){
        return "specity comparator";
      }
    }
);
  }
  return result;
}
