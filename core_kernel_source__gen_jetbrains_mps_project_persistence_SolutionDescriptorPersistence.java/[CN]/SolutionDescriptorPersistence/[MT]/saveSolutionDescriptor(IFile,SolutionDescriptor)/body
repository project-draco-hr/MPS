{
  if (file.isReadOnly()) {
    if (log.isErrorEnabled()) {
      log.error("Can't save " + file.getPath());
    }
    return;
  }
  final Macros macros=MacrosFactory.solutionDescriptor();
  Element solElem=new _FunctionTypes._return_P0_E0<Element>(){
    public Element invoke(){
      final Element result_8ckma3_a0a0d0b=new Element("solution");
      if (descriptor.getNamespace() != null) {
        final String result_8ckma3_a0a0a0a0d0b=descriptor.getNamespace();
        result_8ckma3_a0a0d0b.setAttribute("name","" + result_8ckma3_a0a0a0a0d0b);
      }
      if (descriptor.getUUID() != null) {
        final String result_8ckma3_a0a1a0a0d0b=descriptor.getUUID();
        result_8ckma3_a0a0d0b.setAttribute("uuid","" + result_8ckma3_a0a1a0a0d0b);
      }
      if (descriptor.getKind() != SolutionKind.NONE) {
        final String result_8ckma3_a0a2a0a0d0b=descriptor.getKind().name();
        result_8ckma3_a0a0d0b.setAttribute("pluginKind","" + result_8ckma3_a0a2a0a0d0b);
      }
      final boolean result_8ckma3_a3a0a0d0b=descriptor.getCompileInMPS();
      result_8ckma3_a0a0d0b.setAttribute("compileInMPS","" + result_8ckma3_a3a0a0d0b);
      if (descriptor.getOutputPath() != null) {
        final String result_8ckma3_a0a4a0a0d0b=macros.shrinkPath(descriptor.getOutputPath(),file);
        result_8ckma3_a0a0d0b.setAttribute("generatorOutputPath","" + result_8ckma3_a0a4a0a0d0b);
      }
      final Element result_8ckma3_a6a0a0d0b=new Element("models");
      ModuleDescriptorPersistence.saveModelRoots(result_8ckma3_a6a0a0d0b,descriptor.getModelRoots(),file,macros);
      result_8ckma3_a0a0d0b.addContent(result_8ckma3_a6a0a0d0b);
      if (!(descriptor.getStubModelEntries().isEmpty())) {
        final Element result_8ckma3_a0a8a0a0d0b=new Element("stubModelEntries");
        ModuleDescriptorPersistence.saveStubModelEntries(result_8ckma3_a0a8a0a0d0b,descriptor.getStubModelEntries(),file,macros);
        result_8ckma3_a0a0d0b.addContent(result_8ckma3_a0a8a0a0d0b);
      }
      final Element result_8ckma3_a11a0a0d0b=new Element("sourcePath");
      for (      String p : SetSequence.fromSet(descriptor.getSourcePaths())) {
        final Element result_8ckma3_a0a0a11a0a0d0b=new Element("source");
        final String result_8ckma3_a0a0a0a11a0a0d0b=macros.shrinkPath(p,file);
        result_8ckma3_a0a0a11a0a0d0b.setAttribute("path","" + result_8ckma3_a0a0a0a11a0a0d0b);
        result_8ckma3_a11a0a0d0b.addContent(result_8ckma3_a0a0a11a0a0d0b);
      }
      result_8ckma3_a0a0d0b.addContent(result_8ckma3_a11a0a0d0b);
      ModuleDescriptorPersistence.saveDependencies(result_8ckma3_a0a0d0b,descriptor);
      return result_8ckma3_a0a0d0b;
    }
  }
.invoke();
  try {
    OutputStream os=file.openOutputStream();
    JDOMUtil.writeDocument(new Document(solElem),os);
  }
 catch (  Exception e) {
    if (log.isErrorEnabled()) {
      log.error("",e);
    }
  }
  ModuleDescriptorPersistence.setTimestamp(descriptor,file);
}
