{
  ManagerThread.assertIsMangerThread();
  final ThreadReference thread=event.thread();
  if (myContextManager.isEvaluated(thread)) {
    myContextManager.voteResume(context);
    return;
  }
  final LocatableEventRequestor requestor=(LocatableEventRequestor)myRequestManager.findRequestor(event.request());
  if (requestor == null || EventRequest.SUSPEND_NONE == requestor.getSuspendPolicy()) {
    myContextManager.voteResume(context);
  }
  scheduleEvaluation(new _FunctionTypes._void_P0_E0(){
    public void invoke(){
      boolean resume=true;
      try {
        resume=!(requestor.isRequestHitByEvent(context,event));
      }
  finally {
        if (resume) {
          myContextManager.voteResume(context);
        }
 else {
          try {
            if (requestor instanceof JavaBreakpoint && ((JavaBreakpoint)requestor).isLogMessage()) {
              myReporter.reportInformation("Breakpoint hit: " + ((JavaBreakpoint)requestor).getPresentation() + " "+ event.location().sourceName()+ ":"+ event.location().lineNumber());
            }
          }
 catch (          AbsentInformationException ignore) {
          }
 finally {
            myContextManager.votePause(context);
          }
        }
      }
    }
  }
,thread);
}
