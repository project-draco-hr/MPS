{
  SNode sequenceType=TypeChecker.getInstance().getRuntimeSupport().coerce_(type,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.collections.structure.SequenceType"),true);
  if (sequenceType != null) {
    return sequenceType;
  }
  if (sequenceType == null) {
    return null;
  }
  if (type == null) {
    return null;
  }
  if ("jetbrains.teamsys.dnq.structure.PListType".equals(type.getConcept().getConceptId())) {
    SNode classifierType=SNodeOperations.cast(type.getChild("classifierType"),"jetbrains.mps.baseLanguage.structure.ClassifierType");
    return _quotation_createNode_kv7ms9_a1a7a1(SNodeOperations.copyNode(classifierType));
  }
  GlobalScope scope=GlobalScope.getInstance();
  SNode entity=SNodeOperations.cast(SModelUtil.findNodeByFQName("com.jetbrains.teamsys.database.Entity",SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Classifier"),scope),"jetbrains.mps.baseLanguage.structure.Classifier");
  if (entity == null) {
    return null;
  }
  SNode entityType=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ClassifierType",null);
  SLinkOperations.setTarget(entityType,"classifier",entity,false);
  SNode javaIterable=SNodeOperations.cast(SModelUtil.findNodeByFQName("java.lang.Iterable",SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Classifier"),scope),"jetbrains.mps.baseLanguage.structure.Classifier");
  SNode javaIterableType=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ClassifierType",null);
  SLinkOperations.setTarget(javaIterableType,"classifier",javaIterable,false);
  ListSequence.fromList(SLinkOperations.getTargets(javaIterableType,"parameter",true)).addElement(entityType);
  if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type,javaIterableType)) {
    return _quotation_createNode_kv7ms9_a0a22a1(SNodeOperations.copyNode(entity));
  }
  SNode entityIterable=SNodeOperations.cast(SModelUtil.findNodeByFQName("com.jetbrains.teamsys.database.EntityIterable",SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Classifier"),scope),"jetbrains.mps.baseLanguage.structure.Classifier");
  SNode entityIterableType=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ClassifierType",null);
  SLinkOperations.setTarget(entityIterableType,"classifier",entityIterable,false);
  if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type,entityIterableType)) {
    return _quotation_createNode_kv7ms9_a0a72a1(SNodeOperations.copyNode(entity));
  }
  return null;
}
