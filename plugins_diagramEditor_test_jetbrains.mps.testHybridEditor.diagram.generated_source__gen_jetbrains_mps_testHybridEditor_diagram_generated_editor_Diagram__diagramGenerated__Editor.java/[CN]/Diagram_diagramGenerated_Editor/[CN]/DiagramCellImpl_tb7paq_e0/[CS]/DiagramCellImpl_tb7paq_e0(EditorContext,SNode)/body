{
  super(editorContext,node);
  setSubstituteInfo(new CompositeSubstituteInfo(editorContext,new BasicCellContext(node),new SubstituteInfoPartExt[]{createNewDiagramNodeActions(getSNode(),SConceptOperations.findConceptDeclaration("jetbrains.mps.testHybridEditor.structure.BlockInstance"),SLinkOperations.findLinkDeclaration("jetbrains.mps.testHybridEditor.structure.Diagram","newBlocks"),new _FunctionTypes._void_P3_E0<SNode,Integer,Integer>(){
    public void invoke(    SNode node,    Integer x,    Integer y){
      SPropertyOperations.set(SNodeOperations.cast(node,"jetbrains.mps.testHybridEditor.structure.BlockInstance"),"name","block");
      SPropertyOperations.set(SNodeOperations.cast(node,"jetbrains.mps.testHybridEditor.structure.BlockInstance"),"x","" + (x));
      SPropertyOperations.set(SNodeOperations.cast(node,"jetbrains.mps.testHybridEditor.structure.BlockInstance"),"y","" + (y));
    }
  }
),createNewDiagramConnectorActions(getSNode(),SConceptOperations.findConceptDeclaration("jetbrains.mps.testHybridEditor.structure.ConnectorInstance"),SLinkOperations.findLinkDeclaration("jetbrains.mps.testHybridEditor.structure.Diagram","newConnectors"),new _FunctionTypes._return_P4_E0<Boolean,SNode,Object,SNode,Object>(){
    public Boolean invoke(    SNode from,    Object fromId,    SNode to,    Object toId){
      return SNodeOperations.isInstanceOf(from,"jetbrains.mps.testHybridEditor.structure.BlockInstance") && fromId instanceof SNode && SNodeOperations.isInstanceOf(to,"jetbrains.mps.testHybridEditor.structure.BlockInstance")&& toId instanceof SNode&& eq_tb7paq_a0a0a0a0d1a2a0a1a0m(SNodeOperations.getContainingLinkDeclaration(((SNode)toId)),SLinkOperations.findLinkDeclaration("jetbrains.mps.testHybridEditor.structure.MetaBlock","inMetaPorts"));
    }
  }
,new _FunctionTypes._void_P5_E0<SNode,SNode,Object,SNode,Object>(){
    public void invoke(    SNode node,    SNode from,    Object fromId,    SNode to,    Object toId){
      SNode connector=SNodeOperations.cast(node,"jetbrains.mps.testHybridEditor.structure.ConnectorInstance");
      SLinkOperations.setTarget(SLinkOperations.getTarget(connector,"source",true),"block",SNodeOperations.cast(from,"jetbrains.mps.testHybridEditor.structure.BlockInstance"),false);
      final SNode port=((SNode)fromId);
      SLinkOperations.setTarget(SLinkOperations.getTarget(connector,"source",true),"metaPort",ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(SNodeOperations.cast(from,"jetbrains.mps.testHybridEditor.structure.BlockInstance"),"metaBlock",false),"outMetaPorts",true)).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return eq_tb7paq_a0a0a0a0a2a3a0a0e1a2a0a1a0m(it,port);
        }
      }
),false);
      SLinkOperations.setTarget(SLinkOperations.getTarget(connector,"target",true),"block",SNodeOperations.cast(to,"jetbrains.mps.testHybridEditor.structure.BlockInstance"),false);
      SLinkOperations.setTarget(SLinkOperations.getTarget(connector,"target",true),"metaPort",(SNode)toId,false);
    }
  }
)}));
  synchronize();
}
