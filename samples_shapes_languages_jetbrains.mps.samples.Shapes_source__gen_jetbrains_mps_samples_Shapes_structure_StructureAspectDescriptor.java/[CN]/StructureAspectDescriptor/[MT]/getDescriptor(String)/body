{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.samples.Shapes.structure.Canvas").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.execution.util.structure.IMainClass").children(new String[]{"shapes"},new boolean[]{true}).create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.samples.Shapes.structure.Circle").super_("jetbrains.mps.samples.Shapes.structure.Shape").parents("jetbrains.mps.samples.Shapes.structure.Shape").properties("x","y","radius").alias("circle","").create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.samples.Shapes.structure.ColorReference").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("color").create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.samples.Shapes.structure.Shape").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"color"},new boolean[]{false}).abstract_().create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.samples.Shapes.structure.Square").super_("jetbrains.mps.samples.Shapes.structure.Shape").parents("jetbrains.mps.samples.Shapes.structure.Shape").properties("upperLeftX","upperLeftY","size").alias("square","").create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
