{
  final List<SNode> conceptsToMove=(List<SNode>)target;
  MoveNodesUI moveNodesUI=MoveNodesUI.MoveNodesUIImpl.getIsntance();
  final Wrappers._boolean hasGenerator=new Wrappers._boolean(false);
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      hasGenerator.value=ListSequence.fromList(conceptsToMove).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode node){
          return ListSequence.fromList(AbstractConceptDeclaration_Behavior.call_findGeneratorFragments_6409339300305625383(node)).isNotEmpty();
        }
      }
);
    }
  }
);
  if (hasGenerator.value) {
    moveNodesUI.showWarningDialog(project,"Generator fragments will not be moved.","Move concepts");
  }
  final Wrappers._T<List<SModelReference>> structureModels=new Wrappers._T<List<SModelReference>>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      Iterable<SModule> modules=project.getRepository().getModules();
      structureModels.value=Sequence.fromIterable(modules).ofType(Language.class).select(new ISelector<Language,SModelReference>(){
        public SModelReference select(        Language it){
          return it.getStructureModelDescriptor().getReference();
        }
      }
).toListSequence();
    }
  }
);
  final SModelReference targetModelRef=SModelReferenceDialog.getSelectedModel(project.getProject(),structureModels.value);
  if (targetModelRef == null) {
    return;
  }
  final MoveNodesUI.WhetherWriteMigration writeMigration=moveNodesUI.askAboutMigration(project);
  if (writeMigration == MoveNodesUI.WhetherWriteMigration.CANCEL) {
    return;
  }
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      for (      SNode concept : ListSequence.fromList(conceptsToMove)) {
        if (!(SNodeUtil.isAccessible(concept,project.getRepository()))) {
          return;
        }
      }
      SModel targetModel=targetModelRef.resolve(project.getRepository());
      if (targetModel == null) {
        return;
      }
      if (writeMigration == MoveNodesUI.WhetherWriteMigration.WRITE_MIGRATION) {
        MoveConceptUtil.moveConcepts(conceptsToMove,targetModel);
      }
      if (writeMigration == MoveNodesUI.WhetherWriteMigration.LOCALLY) {
        throw new UnsupportedOperationException();
      }
    }
  }
);
}
