{
  if (aspects) {
    ListSequence.fromList(myNodesToDelete).addSequence(ListSequence.fromList(myNodesToDelete).translate(new ITranslator2<SNode,SNode>(){
      public Iterable<SNode> translate(      final SNode node){
        List<RelationDescriptor> tabs=ProjectPluginManager.getApplicableTabs(ProjectHelper.toIdeaProject(myContext.getProject()),node);
        return ListSequence.fromList(tabs).translate(new ITranslator2<RelationDescriptor,SNode>(){
          public Iterable<SNode> translate(          RelationDescriptor tab){
            return (tab.isSingle() && tab.isApplicable(node) ? tab.getNodes(node) : Collections.<SNode>emptyList());
          }
        }
);
      }
    }
));
  }
  ProjectPane projectPane=ProjectPane.getInstance(ProjectHelper.toIdeaProject(myContext.getProject()));
  for (Iterator<SNode> iterator=myNodesToDelete.iterator(); iterator.hasNext(); ) {
    SNode sNode=iterator.next();
    if (!(iterator.hasNext()) && fromProjectPane) {
      projectPane.rebuildTree();
      projectPane.selectNextNode(sNode);
    }
    if (safe) {
      safeDelete(myContext,sNode);
    }
 else {
      delete(sNode);
    }
  }
}
