{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("variable",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      List<SNode> forEachStatements=SNodeOperations.getAncestors(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.collections.structure.ForEachStatement",false);
      return new NodeListChildrenSearchScope(forEachStatements);
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c89590328(jetbrains.mps.baseLanguage.collections.constraints)","1213104847100");
    }
  }
);
  return result;
}
