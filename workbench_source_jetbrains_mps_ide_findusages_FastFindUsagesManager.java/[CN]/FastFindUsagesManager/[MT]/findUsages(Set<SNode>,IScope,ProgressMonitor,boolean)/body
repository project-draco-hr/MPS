{
  Set<SReference> result=new HashSet<SReference>();
  if (monitor == null)   monitor=new EmptyProgressMonitor();
  final Iterable<SModelDescriptor> models=scope.getModelDescriptors();
  int count=0;
  for (  SModelDescriptor model : models) {
    if ((model instanceof EditableSModelDescriptor) && ((EditableSModelDescriptor)model).isChanged()) {
      count++;
    }
  }
  monitor.start("Finding usages...",nodes.size() + count);
  try {
    monitor.step("Loading cache");
    for (    SNode node : nodes) {
      result.addAll(findUsagesOfNodeInCache(node,scope));
      monitor.advance(1);
    }
    for (    SModelDescriptor model : models) {
      if ((model instanceof EditableSModelDescriptor) && ((EditableSModelDescriptor)model).isChanged()) {
        monitor.step(model.getLongName());
        model.getSModel();
        result.addAll(new ModelFindOperations(model).findUsages(nodes));
        monitor.advance(1);
      }
      if (monitor.isCanceled()) {
        return result;
      }
    }
  }
  finally {
    monitor.done();
  }
  return result;
}
