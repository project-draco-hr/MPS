{
  SNode link=null;
  if (childSetter instanceof DefaultChildNodeSetter) {
    link=SNodeOperations.cast(((DefaultChildNodeSetter)childSetter).getLinkDeclaration(),MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086aL,"jetbrains.mps.lang.structure.structure.LinkDeclaration"));
  }
  List<SNode> allBuilders=new ArrayList<SNode>();
  List<Language> languages=SModelOperations.getLanguages(SNodeOperations.getModel(parentNode));
  boolean wrapped=!(childSetter instanceof DefaultChildNodeSetter);
  for (  SNode actionsBuilder : ListSequence.fromList(getAllActionsBuilders(languages))) {
    SNode applicableConcept=SLinkOperations.getTarget(actionsBuilder,MetaAdapterFactory.getReferenceLink(0xaee9cad2acd44608L,0xaef20004f6a1cdbdL,0x102ebd2e9eaL,0x102ebd3cd08L,"applicableConcept"));
    if (applicableConcept == null) {
      continue;
    }
    if (SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(applicableConcept),SNodeOperations.asSConcept(childConcept)) || SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(applicableConcept))) {
      if (satisfiesPrecondition(actionsBuilder,parentNode,applicableConcept,link,currentChild,wrapped,context)) {
        ListSequence.fromList(allBuilders).addElement(actionsBuilder);
      }
    }
  }
  return allBuilders;
}
