{
  this.addNodeById("3852894662483077200");
  this.addNodeById("3852894662483077206");
  this.addNodeById("3852894662483228699");
  this.addNodeById("3852894662483230132");
  this.addNodeById("3852894662483240397");
  this.addNodeById("3852894662483240422");
  SNode result=ParenthesisUtil.createParenthesis(SNodeOperations.cast(this.getNodeById("3852894662483077204"),"jetbrains.mps.baseLanguage.structure.IntegerConstant"),true);
  Assert.assertEquals(null,NodesMatcher.matchNodes(ListSequence.<SNode>fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("3852894662483077210"),"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression")),ListSequence.<SNode>fromListAndArray(new ArrayList<SNode>(),result)));
}
