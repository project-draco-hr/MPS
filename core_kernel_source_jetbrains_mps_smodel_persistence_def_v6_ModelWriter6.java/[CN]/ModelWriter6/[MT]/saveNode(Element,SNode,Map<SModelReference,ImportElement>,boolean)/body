{
  Element element=new Element(ModelPersistence.NODE);
  final String role=node.getRole_();
  if (role != null) {
    SModelReference mr=node.getRoleLink().getModel().getSModelReference();
    element.setAttribute(ModelPersistence.ROLE,VersionUtil.formVersionedString(role,imports.get(mr).getUsedVersion()));
  }
  SModelReference cmr=node.getConceptDeclarationNode().getModel().getSModelReference();
  element.setAttribute(ModelPersistence.TYPE,VersionUtil.formVersionedString(node.getConceptFqName(),imports.get(cmr).getUsedVersion()));
  element.setAttribute(ModelPersistence.ID,node.getId());
  for (  String propertyName : node.getProperties().keySet()) {
    Element propertyElement=new Element(ModelPersistence.PROPERTY);
    SModelReference mr=node.getPropertyDeclaration(propertyName).getModel().getSModelReference();
    propertyElement.setAttribute(ModelPersistence.NAME,VersionUtil.formVersionedString(propertyName,imports.get(mr).getUsedVersion()));
    DocUtil.setNotNullAttribute(propertyElement,ModelPersistence.VALUE,node.getPersistentProperty(propertyName));
    element.addContent(propertyElement);
  }
  for (  SReference reference : node.getReferencesIterable()) {
    saveReference(element,reference,imports);
  }
  if (saveChildren) {
    for (    SNode childNode : node.getChildren()) {
      saveNode(element,childNode,imports,true);
    }
  }
  parentElement.addContent(element);
}
