{
  Map<StyleAttribute,Object> oldCachedValues=myCachedAttributeValues;
  myCachedAttributeValues=new HashMap<StyleAttribute,Object>();
  Set<StyleAttribute> attributes=new HashSet<StyleAttribute>();
  attributes.addAll(myAttributeValues.keySet());
  if (getParentStyle() != null) {
    for (    StyleAttribute sa : getParentStyle().myCachedAttributeValues.keySet()) {
      if (!(sa instanceof SimpleStyleAttribute)) {
        attributes.add(sa);
      }
    }
  }
  boolean changed=false;
  Set<StyleAttribute> changedAttributes=new HashSet<StyleAttribute>();
  for (  StyleAttribute attribute : attributes) {
    Object parentValue=getParentStyle() == null ? null : getParentStyle().get(attribute);
    Object currentValue=myAttributeValues.get(attribute);
    if (currentValue instanceof AttributeCalculator) {
      currentValue=((AttributeCalculator)currentValue).calculate(myEditorCell);
    }
    Object newValue=attribute.combine(parentValue,currentValue);
    if (!EqualUtil.equals(newValue,oldCachedValues.get(attribute))) {
      changedAttributes.add(attribute);
    }
    if (newValue != null) {
      myCachedAttributeValues.put(attribute,newValue);
    }
  }
  if (!changedAttributes.isEmpty()) {
    for (    Style style : myChildren) {
      style.updateCache();
    }
    fireStyleChanged(new StyleChangeEvent(this,changedAttributes));
  }
}
