{
  if (!needProcess(file,excludes))   return;
  if (file.getPath().endsWith(JAR + JAR_SEPARATOR)) {
    IFile moduleXml=file.getDescendant(META_INF).getDescendant(MODULE_XML);
    if (moduleXml.exists() && !moduleXml.isDirectory()) {
      ModuleDescriptor moduleDescriptor=loadModuleDescriptor(moduleXml);
      if (moduleDescriptor != null) {
        T descriptor=reader.read(new ModuleHandle(moduleXml,moduleDescriptor));
        if (descriptor != null) {
          result.add(descriptor);
        }
      }
    }
 else {
      IFile dirInJar=file.getDescendant(MODULES_DIR);
      if (dirInJar.exists() && dirInJar.isDirectory()) {
        readModuleDescriptorsFromFolder(dirInJar,excludes,result,reader);
      }
    }
  }
 else {
    List<IFile> children=file.getChildren();
    ArrayList<IFile> folders=new ArrayList<IFile>();
    for (    IFile child : children) {
      if (!child.isDirectory()) {
        readModuleDescriptorsFromFile(child,excludes,result,reader);
      }
 else {
        folders.add(child);
      }
    }
    for (    IFile child : folders) {
      readModuleDescriptorsFromFolder(child,excludes,result,reader);
    }
  }
}
