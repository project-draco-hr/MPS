{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlAttribute","jetbrains.mps.core.xml.structure.XmlBaseAttribute",false,new String[]{"jetbrains.mps.core.xml.structure.XmlBaseAttribute","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{"attrName"},new String[]{},new String[]{"value"},new boolean[]{true});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlBaseAttribute","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlBaseElement","jetbrains.mps.core.xml.structure.XmlContent",false,new String[]{"jetbrains.mps.core.xml.structure.XmlContent"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlBasePrologElement","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.core.xml.structure.XmlPrologElement"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlCDATA","jetbrains.mps.core.xml.structure.XmlContent",false,new String[]{"jetbrains.mps.core.xml.structure.XmlContent"},new String[]{"content"},new String[]{},new String[]{},new boolean[]{});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlCharRef","jetbrains.mps.core.xml.structure.XmlContent",false,new String[]{"jetbrains.mps.core.xml.structure.XmlContent"},new String[]{"charCode"},new String[]{},new String[]{},new boolean[]{});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlCharRefValue","jetbrains.mps.core.xml.structure.XmlValuePart",false,new String[]{"jetbrains.mps.core.xml.structure.XmlValuePart","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{"charCode"},new String[]{},new String[]{},new boolean[]{});
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlComment","jetbrains.mps.core.xml.structure.XmlContent",false,new String[]{"jetbrains.mps.core.xml.structure.XmlContent","jetbrains.mps.core.xml.structure.XmlPrologElement"},new String[]{},new String[]{},new String[]{"lines"},new boolean[]{true});
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlCommentLine","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"text"},new String[]{},new String[]{},new boolean[]{});
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlContent","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.core.xml.structure.XmlPart"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlDeclaration","jetbrains.mps.core.xml.structure.XmlBasePrologElement",false,new String[]{"jetbrains.mps.core.xml.structure.XmlBasePrologElement","jetbrains.mps.core.xml.structure.XmlPrologElement"},new String[]{"version","encoding","standalone"},new String[]{},new String[]{},new boolean[]{});
case 11:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlDoctypeDeclaration","jetbrains.mps.core.xml.structure.XmlBasePrologElement",false,new String[]{"jetbrains.mps.core.xml.structure.XmlBasePrologElement","jetbrains.mps.core.xml.structure.XmlPrologElement"},new String[]{"doctypeName"},new String[]{},new String[]{"externalId"},new boolean[]{false});
case 12:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlDocument","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{"prolog","rootElement"},new boolean[]{false,false});
case 13:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlElement","jetbrains.mps.core.xml.structure.XmlBaseElement",false,new String[]{"jetbrains.mps.core.xml.structure.XmlBaseElement","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{"tagName","shortEmptyNotation"},new String[]{},new String[]{"attributes","content"},new boolean[]{true,true});
case 14:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlEntityRef","jetbrains.mps.core.xml.structure.XmlContent",false,new String[]{"jetbrains.mps.core.xml.structure.XmlContent"},new String[]{"entityName"},new String[]{},new String[]{},new boolean[]{});
case 15:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlEntityRefValue","jetbrains.mps.core.xml.structure.XmlValuePart",false,new String[]{"jetbrains.mps.core.xml.structure.XmlValuePart","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{"entityName"},new String[]{},new String[]{},new boolean[]{});
case 16:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlExternalId","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{"publicId","systemId","isPublic"},new String[]{},new String[]{},new boolean[]{});
case 17:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlFile","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.traceable.structure.UnitConcept"},new String[]{},new String[]{},new String[]{"document"},new boolean[]{false});
case 18:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlNoSpaceValue","jetbrains.mps.core.xml.structure.XmlValuePart",false,new String[]{"jetbrains.mps.core.xml.structure.XmlValuePart"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 19:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlPart",null,true,new String[]{},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 20:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlProcessingInstruction","jetbrains.mps.core.xml.structure.XmlContent",false,new String[]{"jetbrains.mps.core.xml.structure.XmlContent","jetbrains.mps.core.xml.structure.XmlPrologElement"},new String[]{"target","rawData"},new String[]{},new String[]{},new boolean[]{});
case 21:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlProlog","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{"elements"},new boolean[]{true});
case 22:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlPrologElement",null,true,new String[]{"jetbrains.mps.core.xml.structure.XmlPart"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 23:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlText","jetbrains.mps.core.xml.structure.XmlContent",false,new String[]{"jetbrains.mps.core.xml.structure.XmlContent","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{"value"},new String[]{},new String[]{},new boolean[]{});
case 24:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlTextValue","jetbrains.mps.core.xml.structure.XmlValuePart",false,new String[]{"jetbrains.mps.core.xml.structure.XmlValuePart","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{"text"},new String[]{},new String[]{},new boolean[]{});
case 25:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlValuePart","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 26:
return new CompiledConceptDescriptor("jetbrains.mps.core.xml.structure.XmlWhitespace","jetbrains.mps.core.xml.structure.XmlBasePrologElement",false,new String[]{"jetbrains.mps.core.xml.structure.XmlBasePrologElement","jetbrains.mps.core.xml.structure.XmlPrologElement","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{"value"},new String[]{},new String[]{},new boolean[]{});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
