{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_1htk8d_a0fb.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return myConceptXmlAttribute;
      }
    break;
case 1:
  if (true) {
    return myConceptXmlBaseAttribute;
  }
break;
case 2:
if (true) {
return myConceptXmlBaseElement;
}
break;
case 3:
if (true) {
return myConceptXmlBasePrologElement;
}
break;
case 4:
if (true) {
return myConceptXmlCDATA;
}
break;
case 5:
if (true) {
return myConceptXmlCharRef;
}
break;
case 6:
if (true) {
return myConceptXmlCharRefValue;
}
break;
case 7:
if (true) {
return myConceptXmlComment;
}
break;
case 8:
if (true) {
return myConceptXmlCommentLine;
}
break;
case 9:
if (true) {
return myConceptXmlContent;
}
break;
case 10:
if (true) {
return myConceptXmlDeclaration;
}
break;
case 11:
if (true) {
return myConceptXmlDoctypeDeclaration;
}
break;
case 12:
if (true) {
return myConceptXmlDocument;
}
break;
case 13:
if (true) {
return myConceptXmlElement;
}
break;
case 14:
if (true) {
return myConceptXmlEntityRef;
}
break;
case 15:
if (true) {
return myConceptXmlEntityRefValue;
}
break;
case 16:
if (true) {
return myConceptXmlExternalId;
}
break;
case 17:
if (true) {
return myConceptXmlFile;
}
break;
case 18:
if (true) {
return myConceptXmlNoSpaceValue;
}
break;
case 19:
if (true) {
return myConceptXmlPart;
}
break;
case 20:
if (true) {
return myConceptXmlProcessingInstruction;
}
break;
case 21:
if (true) {
return myConceptXmlProlog;
}
break;
case 22:
if (true) {
return myConceptXmlPrologElement;
}
break;
case 23:
if (true) {
return myConceptXmlText;
}
break;
case 24:
if (true) {
return myConceptXmlTextValue;
}
break;
case 25:
if (true) {
return myConceptXmlValuePart;
}
break;
case 26:
if (true) {
return myConceptXmlWhitespace;
}
break;
default :
}
}
return null;
}
