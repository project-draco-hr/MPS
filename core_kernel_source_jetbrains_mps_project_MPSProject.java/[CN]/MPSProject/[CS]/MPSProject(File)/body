{
  myContext.register(MPSProject.class,this);
  myContext.register(GeneratorManager.class,new GeneratorManager(this));
  myContext.register(GenerationTracer.class,new GenerationTracer(this));
  myContext.register(ProjectVCSManager.class);
  Highlighter hilghlighter=new Highlighter();
  myContext.register(Highlighter.class,hilghlighter);
  hilghlighter.setProjects(MPSProjects.instance());
  CommandProcessor.instance().executeCommand(new Runnable(){
    public void run(){
      myProjectFile=projectFile;
      SModel model=ProjectModels.createDescriptorFor(MPSProject.this).getSModel();
      model.setLoading(true);
      myProjectDescriptor=DescriptorsPersistence.loadProjectDescriptor(new File(FileUtil.getCanonicalPath(projectFile)),model);
      MPSProjects projects=myContext.get(MPSProjects.class);
      projects.addProject(MPSProject.this);
      LOG.assertLog(myProjectDescriptor.isRoot(),"Project descriptor has to be root");
      readModules();
      for (      IModule m : getModules()) {
        m.onModuleLoad();
      }
      model.setLoading(false);
      myContext.init();
      addComponent(TransientModelsModule.class,new TransientModelsModule(MPSProject.this));
    }
  }
);
}
