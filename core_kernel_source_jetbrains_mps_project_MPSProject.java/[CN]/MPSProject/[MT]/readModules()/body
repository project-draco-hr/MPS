{
  myErrors=null;
  mySolutions=new LinkedList<Solution>();
  for (  SolutionPath solutionPath : CollectionUtil.iteratorAsIterable(myProjectDescriptor.projectSolutions())) {
    String path=solutionPath.getPath();
    IFile descriptorFile=FileSystem.getFile(path);
    if (descriptorFile.exists()) {
      mySolutions.add((Solution)MPSModuleRepository.getInstance().registerSolution(descriptorFile,this));
    }
 else {
      error("Can't load solution from " + descriptorFile.getCanonicalPath() + " File doesn't exist.");
    }
  }
  myLanguages=new LinkedList<Language>();
  for (  LanguagePath languagePath : CollectionUtil.iteratorAsIterable(myProjectDescriptor.projectLanguages())) {
    String path=languagePath.getPath();
    IFile descriptorFile=FileSystem.getFile(path);
    if (descriptorFile.exists()) {
      myLanguages.add(MPSModuleRepository.getInstance().registerLanguage(descriptorFile,this));
    }
 else {
      error("Can't load language from " + descriptorFile.getCanonicalPath() + " File doesn't exist.");
    }
  }
  myDevKits=new LinkedList<DevKit>();
  for (  DevKitPath dk : myProjectDescriptor.getProjectDevkits()) {
    String path=dk.getPath();
    IFile devKit=FileSystem.getFile(path);
    if (devKit.exists()) {
      myDevKits.add(MPSModuleRepository.getInstance().registerDevKit(devKit,this));
    }
 else {
      error("Can't load devkit from " + devKit.getCanonicalPath() + " File doesn't exist");
    }
  }
  for (  Library l : myProjectDescriptor.getLibraries()) {
    String name=l.getName();
    jetbrains.mps.library.Library lib=LibraryManager.getInstance().get(name);
    if (lib != null) {
      MPSModuleRepository.getInstance().readModuleDescriptors(FileSystem.getFile(lib.getPath()),this);
    }
 else {
      error("Can't find a global library " + name);
    }
  }
}
