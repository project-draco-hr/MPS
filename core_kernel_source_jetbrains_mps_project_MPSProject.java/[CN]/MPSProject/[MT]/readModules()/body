{
  mySolutions=new LinkedList<Solution>();
  for (  SolutionPath solutionPath : CollectionUtil.iteratorAsIterable(myProjectDescriptor.projectSolutions())) {
    String path=solutionPath.getPath();
    if (path == null) {
      LOG.error("Solution path is null");
      continue;
    }
    IFile descriptorFile=FileSystem.getFile(path);
    if (!descriptorFile.getName().endsWith(MPSExtentions.DOT_SOLUTION)) {
      LOG.error("Couldn't load solution from: " + descriptorFile.getPath() + " : '*"+ MPSExtentions.DOT_SOLUTION+ "' file expected");
    }
 else     if (descriptorFile.exists()) {
      mySolutions.add((Solution)MPSModuleRepository.getInstance().registerSolution(descriptorFile,this));
    }
  }
  myLanguages=new LinkedList<Language>();
  for (  LanguagePath languagePath : CollectionUtil.iteratorAsIterable(myProjectDescriptor.projectLanguages())) {
    String path=languagePath.getPath();
    IFile descriptorFile=FileSystem.getFile(path);
    if (!descriptorFile.getName().endsWith(MPSExtentions.DOT_LANGUAGE)) {
      LOG.error("Couldn't load language from: " + descriptorFile.getPath() + " : '*"+ MPSExtentions.DOT_LANGUAGE+ "' file expected");
    }
 else     if (descriptorFile.exists()) {
      myLanguages.add(MPSModuleRepository.getInstance().registerLanguage(descriptorFile,this));
    }
    FileSystem.getFile(path);
  }
  myDevKits=new LinkedList<DevKit>();
  for (  DevKitPath dk : myProjectDescriptor.getProjectDevkits()) {
    String path=dk.getPath();
    IFile devKit=FileSystem.getFile(path);
    if (!devKit.getName().endsWith(MPSExtentions.DOT_DEVKIT)) {
      LOG.error("Couldn't load devkit from: " + devKit.getPath() + " : '*."+ MPSExtentions.DOT_DEVKIT+ "' file expected");
    }
 else     if (devKit.exists()) {
      myDevKits.add(MPSModuleRepository.getInstance().registerDevKit(devKit,this));
    }
  }
  for (  Library l : myProjectDescriptor.getLibraries()) {
    String name=l.getName();
    jetbrains.mps.library.Library lib=LibraryManager.getInstance().get(name);
    if (lib != null) {
      MPSModuleRepository.getInstance().readModuleDescriptors(FileSystem.getFile(lib.getPath()),this);
    }
 else {
      LOG.error("Can't find a global library " + name);
    }
  }
}
