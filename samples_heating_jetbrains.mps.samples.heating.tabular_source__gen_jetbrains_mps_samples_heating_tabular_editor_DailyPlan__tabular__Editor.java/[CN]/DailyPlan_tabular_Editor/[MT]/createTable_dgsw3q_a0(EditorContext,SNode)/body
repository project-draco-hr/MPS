{
  TableModelFactory creator=new TableModelFactory(){
    public TableModel createTableModel(    final SNode node,    final EditorContext editorContext){
      return new AbstractTableModel(){
        @Override public int getColumnCount(){
          return 2;
        }
        @Override public int getRowCount(){
          return 1 + ListSequence.fromList(SLinkOperations.getTargets(node,"items",true)).count();
        }
        @Override public SNode getValueAt(        int row,        int column){
          if (row == 0 && column > 0) {
            return SLinkOperations.getTarget(node,"applicability",true);
          }
          if (column == 0 && row > 0) {
            return ListSequence.fromList(SLinkOperations.getTargets(node,"items",true)).getElement(row - 1);
          }
          if (row > 0 && column > 0) {
            SNode item=SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(node,"items",true)).getElement(row - 1),"event",true);
            return item;
          }
          return null;
        }
        @Override public void createElement(        int row,        int column){
          if (row > 0 && column > 0) {
            SNode slot=DailyPlan_Behavior.call_planItemByStartTime_3409470686615450426(node,row - 1);
            if (slot == null) {
              SNode item=SNodeFactoryOperations.addNewChild(node,"items","jetbrains.mps.samples.heating.structure.Slot");
              SPropertyOperations.set(item,"start","" + (row - 1));
              SPropertyOperations.set(SLinkOperations.getTarget(item,"event",true),"temperature","" + (20));
            }
          }
        }
        @Override public void insertColumn(        int columnNumber){
          return;
        }
        @Override public void insertRow(        int rowNumber){
          System.out.println("AAAAAA " + rowNumber);
          if (rowNumber <= 0) {
            return;
          }
          SNode slot=SNodeFactoryOperations.createNewNode("jetbrains.mps.samples.heating.structure.Slot",null);
          SPropertyOperations.set(SLinkOperations.getTarget(slot,"event",true),"temperature","" + (20));
          SNode prevSlot=(rowNumber == 1 ? null : ((ListSequence.fromList(SLinkOperations.getTargets(node,"items",true)).count() > rowNumber - 2 ? ListSequence.fromList(SLinkOperations.getTargets(node,"items",true)).getElement(rowNumber - 2) : ListSequence.fromList(SLinkOperations.getTargets(node,"items",true)).last())));
          if (prevSlot != null) {
            SPropertyOperations.set(slot,"start","" + (SPropertyOperations.getInteger(prevSlot,"start") + 1));
          }
 else {
            SPropertyOperations.set(slot,"start","" + (0));
          }
          ListSequence.fromList(SLinkOperations.getTargets(node,"items",true)).insertElement(rowNumber - 1,slot);
          return;
        }
        @Override public void deleteColumn(        int columnNumber){
          return;
        }
        @Override public void deleteRow(        int rowNumber){
          if (rowNumber <= 0) {
            return;
          }
          ListSequence.fromList(SLinkOperations.getTargets(node,"items",true)).removeElementAt(rowNumber - 1);
          return;
        }
      }
;
    }
  }
;
  jetbrains.mps.openapi.editor.cells.EditorCell_Collection editorCell=EditorCell_Table.createTable(editorContext,node,creator.createTableModel(node,editorContext),"Table_dgsw3q_a0");
  editorCell.setCellId("Table_dgsw3q_a0_0");
  return editorCell;
}
