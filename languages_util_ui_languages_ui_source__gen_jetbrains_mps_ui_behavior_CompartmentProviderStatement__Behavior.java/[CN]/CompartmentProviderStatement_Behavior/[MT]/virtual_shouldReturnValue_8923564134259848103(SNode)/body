{
  SNode anc=SNodeOperations.getAncestorWhereConceptInList(thisNode,new String[]{"jetbrains.mps.baseLanguage.structure.IStatementListContainer","jetbrains.mps.ui.structure.UIObjectStatement"},false,false);
  if (!(SNodeOperations.isInstanceOf(anc,"jetbrains.mps.baseLanguage.structure.IStatementListContainer"))) {
    return false;
  }
  if (BehaviorReflection.invokeVirtual(Boolean.TYPE,SNodeOperations.as(anc,"jetbrains.mps.baseLanguage.structure.IStatementListContainer"),"virtual_isExecuteSynchronous_1230212745736",new Object[]{})) {
    return false;
  }
  SNode expRT=BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),SNodeOperations.as(anc,"jetbrains.mps.baseLanguage.structure.IMethodLike"),"virtual_getExpectedRetType_1239354342632",new Object[]{});
  return (expRT != null) && BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),SNodeOperations.as(anc,"jetbrains.mps.baseLanguage.structure.IMethodLike"),"virtual_getLastStatement_1239354409446",new Object[]{}) == thisNode && !(SNodeOperations.isInstanceOf(expRT,"jetbrains.mps.baseLanguage.structure.VoidType"));
}
