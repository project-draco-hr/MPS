{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0xb401a68083254110L,0x8fd384331ff25befL,0x10fd54746dbL,0x10fd54746ddL,"template"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xb401a68083254110L,0x8fd384331ff25befL,0x10fd54746dbL,0x10fd54746ddL),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return new MappingRuleTemplateNodeSearchScope(_context.getModel());
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_6wzx82_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
