{
  PersistenceFacade facade=PersistenceFacade.getInstance();
  SNode quotedNode_1=null;
  SNode quotedNode_2=null;
  SNode quotedNode_3=null;
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  quotedNode_1=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IfStatement",null,null,GlobalScope.getInstance(),false);
  quotedNode_2=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StatementList",null,null,GlobalScope.getInstance(),false);
  quotedNode_4=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.Statement",null,null,GlobalScope.getInstance(),false);
  quotedNode_2.addChild("statement",quotedNode_4);
  quotedNode_1.addChild("ifTrue",quotedNode_2);
  quotedNode_3=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NotEqualsExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_5=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.NullLiteral",null,null,GlobalScope.getInstance(),false);
  quotedNode_3.addChild("leftExpression",quotedNode_5);
  quotedNode_6=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierClassExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_6.setReference("classifier",SReference.create("classifier",quotedNode_6,facade.createModelReference("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.io(JDK/java.io@java_stub)"),facade.createNodeId("~BufferedOutputStream")));
  quotedNode_3.addChild("rightExpression",quotedNode_6);
  quotedNode_1.addChild("condition",quotedNode_3);
  return quotedNode_1;
}
