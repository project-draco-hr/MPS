{
  ClassLoaderManager.getInstance().removeReloadHandler(myReloadListener);
  GlobalSModelEventsManager.getInstance().removeGlobalModelListener(myGlobalModelListener);
  ChangeListManager.getInstance(myProject).removeChangeListListener(myChangeListListener);
  SModelRepository.getInstance().removeModelRepositoryListener(myModelRepositoryListener);
  myCommandQueue.addTask(new Runnable(){
    public void run(){
      for (      ModelChangesManager modelChangesManager : Sequence.fromIterable(MapSequence.fromMap(myModelChanges).values())) {
        modelChangesManager.dispose();
      }
      MapSequence.fromMap(myModelChanges).clear();
    }
  }
);
}
