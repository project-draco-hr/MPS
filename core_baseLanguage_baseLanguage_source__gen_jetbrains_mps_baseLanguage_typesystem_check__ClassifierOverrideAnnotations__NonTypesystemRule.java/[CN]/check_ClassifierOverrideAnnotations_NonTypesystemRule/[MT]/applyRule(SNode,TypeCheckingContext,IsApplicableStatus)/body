{
  OverridingMethodsFinder finder=new OverridingMethodsFinder(classifier);
  Set<SNode> overridingMethods=finder.getOverridingMethods();
  for (  SNode method : SLinkOperations.getTargets(classifier,"method",true)) {
    for (    SNode annotationInstance : SLinkOperations.getTargets(method,"annotation",true)) {
      if (SLinkOperations.getTarget(annotationInstance,"annotation",false) == SNodeOperations.getNode("f:java_stub#java.lang(java.lang@java_stub)","~Override") && !(SetSequence.fromSet(overridingMethods).contains(method))) {
{
          BaseQuickFixProvider intentionProvider=null;
          MessageTarget errorTarget=new NodeMessageTarget();
          IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(annotationInstance,"Method does not override method from its superclass","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","4540477783368646804",intentionProvider,errorTarget);
        }
        break;
      }
    }
  }
}
