{
  final SModuleReference moduleToImport=ModelAccess.instance().runReadAction(new Computable<SModuleReference>(){
    @Override public SModuleReference compute(){
      SModel md=SModelRepository.getInstance().getModelDescriptor(getModelReference());
      final SModuleReference moduleReference=md.getModule().getModuleReference();
      if (((AbstractModule)myModule).getScope().getModelDescriptor(getModelReference()) == null) {
        return moduleReference;
      }
      return null;
    }
  }
);
  if (moduleToImport != null) {
    int res=JOptionPane.showConfirmDialog(getFrame(),"<html>Model <b>" + getModelReference().getModelName() + "</b> is owned by module <b>"+ moduleToImport.getModuleName()+ "</b> which is not imported.</html>\n\n"+ "Importing the module will take some time.\n"+ "Do you want to automatically import the module?","Module import",JOptionPane.YES_NO_OPTION);
    if (res == JOptionPane.YES_OPTION) {
      ModelAccess.instance().runWriteActionInCommand(new Runnable(){
        @Override public void run(){
          ((AbstractModule)myModule).addDependency(moduleToImport,false);
          ClassLoaderManager.getInstance().reloadAll(new EmptyProgressMonitor());
        }
      }
);
    }
  }
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    @Override public void run(){
      ((jetbrains.mps.smodel.SModelInternal)myModel).addModelImport(getModelReference(),false);
    }
  }
);
}
