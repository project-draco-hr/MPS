{
  BaseLanguageModel goToLanguageModel=new BaseLanguageModel(project){
    @Override public NavigationItem doGetNavigationItem(    SModuleReference ref){
      return new AddLanguageItem(project,ref,contextModule,model);
    }
    @Override public SModuleReference[] find(    IScope scope){
      ArrayList<SModuleReference> res=new ArrayList<SModuleReference>();
      for (      Language l : scope.getVisibleLanguages()) {
        res.add(l.getModuleReference());
      }
      return res.toArray(new SModuleReference[res.size()]);
    }
    @Nullable @Override public String getPromptText(){
      return "Import language:";
    }
  }
;
  ChooseByNamePopup popup=MpsPopupFactory.createPackagePopup(project,goToLanguageModel,parentAction);
  popup.invoke(new ChooseByNamePopupComponent.Callback(){
    @Override public void onClose(){
      if (onClose != null) {
        onClose.run();
      }
    }
    @Override public void elementChosen(    Object element){
      ((NavigationItem)element).navigate(true);
    }
  }
,ModalityState.current(),true);
}
