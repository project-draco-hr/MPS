{
  manager.register("jetbrains.mps.baseLanguage.regexp.structure.MatchVariableReference",new MatchVariableReference_DataFlow());
  manager.register("jetbrains.mps.baseLanguage.regexp.structure.MatchParensRegexp",new MatchParensRegexp_DataFlow());
  manager.register("jetbrains.mps.baseLanguage.regexp.structure.Regexp",new Regexp_DataFlow());
  manager.register("jetbrains.mps.baseLanguage.regexp.structure.MatchVariableReferenceRegexp",new MatchVariableReferenceRegexp_DataFlow());
  manager.register("jetbrains.mps.baseLanguage.regexp.structure.MatchRegexpStatement",new MatchRegexpStatement_DataFlow());
  manager.register("jetbrains.mps.baseLanguage.regexp.structure.FindMatchStatement",new FindMatchStatement_DataFlow());
  manager.register("jetbrains.mps.baseLanguage.regexp.structure.ForEachMatchStatement",new ForEachMatchStatement_DataFlow());
  manager.register("jetbrains.mps.baseLanguage.regexp.structure.MatchRegexpOperation",new MatchRegexpOperation_DataFlow());
  manager.register("jetbrains.mps.baseLanguage.regexp.structure.InlineRegexpExpression",new InlineRegexpExpression_DataFlow());
  manager.register("jetbrains.mps.baseLanguage.regexp.structure.ReplaceWithRegexpOperation",new ReplaceWithRegexpOperation_DataFlow());
  manager.register("jetbrains.mps.baseLanguage.regexp.structure.SplitOperation",new SplitOperation_DataFlow());
  manager.register("jetbrains.mps.baseLanguage.regexp.structure.Regexps",new Regexps_DataFlow());
  manager.register("jetbrains.mps.baseLanguage.regexp.structure.RegexpExpression",new RegexpExpression_DataFlow());
  manager.register("jetbrains.mps.baseLanguage.regexp.structure.RegexpDeclaration",new RegexpDeclaration_DataFlow());
  manager.register("jetbrains.mps.baseLanguage.regexp.structure.UnaryRegexp",new UnaryRegexp_DataFlow());
  manager.register("jetbrains.mps.baseLanguage.regexp.structure.SymbolClassRegexp",new SymbolClassRegexp_DataFlow());
  manager.register("jetbrains.mps.baseLanguage.regexp.structure.RegexpDeclarationReferenceRegexp",new RegexpDeclarationReferenceRegexp_DataFlow());
  manager.register("jetbrains.mps.baseLanguage.regexp.structure.LookRegexp",new LookRegexp_DataFlow());
  manager.register("jetbrains.mps.baseLanguage.regexp.structure.ParensRegexp",new ParensRegexp_DataFlow());
  manager.register("jetbrains.mps.baseLanguage.regexp.structure.BinaryRegexp",new BinaryRegexp_DataFlow());
}
