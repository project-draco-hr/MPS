{
  SNode classifierType=new RuntimeUtils.QuotationClass_hadnfw_a0a0a0().createNode();
  SNode node=SLinkOperations.getTarget(classifierType,"classifier",false);
  if ((node != null)) {
    return SNodeOperations.getModel(node);
  }
 else {
    final SReference oldRef=SNodeOperations.getReference(classifierType,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType","classifier"));
    List<SModelDescriptor> ownModelDescriptors=MPSModuleRepository.getInstance().getModuleById(ModuleId.fromString("6ed54515-acc8-4d1e-a16c-9fd6cfe951ea")).getOwnModelDescriptors();
    SModelDescriptor modelDescriptor=ListSequence.fromList(ownModelDescriptors).findFirst(new IWhereFilter<SModelDescriptor>(){
      public boolean accept(      SModelDescriptor it){
        return eq_hadnfw_a0a0a0a0a0a2a0c0a(it.getLongName(),oldRef.getTargetSModelReference().getLongName());
      }
    }
);
    if (modelDescriptor != null) {
      return modelDescriptor.getSModel();
    }
  }
  return null;
}
