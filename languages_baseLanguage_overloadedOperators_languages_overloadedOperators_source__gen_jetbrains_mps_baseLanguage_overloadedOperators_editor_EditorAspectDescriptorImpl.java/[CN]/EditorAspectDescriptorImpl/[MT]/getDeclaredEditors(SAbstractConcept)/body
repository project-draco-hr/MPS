{
{
    SAbstractConcept cncpt=((SAbstractConcept)concept);
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt),MetaAdapterFactory.getConcept(0xfc8d557e5de64dd8L,0xb749aab2fb23aefcL,0x2764eda929d23eb4L,"jetbrains.mps.baseLanguage.overloadedOperators.structure.BinaryOperationReference"))) {
      return Collections.<ConceptEditor>singletonList(new BinaryOperationReference_Editor());
    }
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt),MetaAdapterFactory.getConcept(0xfc8d557e5de64dd8L,0xb749aab2fb23aefcL,0x66302c3c8df72c49L,"jetbrains.mps.baseLanguage.overloadedOperators.structure.ContainerImport"))) {
      return Collections.<ConceptEditor>singletonList(new ContainerImport_Editor());
    }
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt),MetaAdapterFactory.getConcept(0xfc8d557e5de64dd8L,0xb749aab2fb23aefcL,0x2764eda929d60237L,"jetbrains.mps.baseLanguage.overloadedOperators.structure.CustomOperator"))) {
      return Collections.<ConceptEditor>singletonList(new CustomOperator_Editor());
    }
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt),MetaAdapterFactory.getConcept(0xfc8d557e5de64dd8L,0xb749aab2fb23aefcL,0x15c86fdc60940541L,"jetbrains.mps.baseLanguage.overloadedOperators.structure.CustomOperatorDeclaration"))) {
      return Collections.<ConceptEditor>singletonList(new CustomOperatorDeclaration_Editor());
    }
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt),MetaAdapterFactory.getConcept(0xfc8d557e5de64dd8L,0xb749aab2fb23aefcL,0x15c86fdc6084766fL,"jetbrains.mps.baseLanguage.overloadedOperators.structure.CustomOperatorUsage"))) {
      return Collections.<ConceptEditor>singletonList(new CustomOperatorUsage_Editor());
    }
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt),MetaAdapterFactory.getConcept(0xfc8d557e5de64dd8L,0xb749aab2fb23aefcL,0x6b6f5c41300f84dL,"jetbrains.mps.baseLanguage.overloadedOperators.structure.OverloadedBinaryOperator"))) {
      return Collections.<ConceptEditor>singletonList(new OverloadedBinaryOperator_Editor());
    }
    if (SConceptOperations.isExactly(SNodeOperations.asSConcept(cncpt),MetaAdapterFactory.getConcept(0xfc8d557e5de64dd8L,0xb749aab2fb23aefcL,0x6b6f5c413011207L,"jetbrains.mps.baseLanguage.overloadedOperators.structure.OverloadedOperatorContainer"))) {
      return Collections.<ConceptEditor>singletonList(new OverloadedOperatorContainer_Editor());
    }
  }
  return Collections.<ConceptEditor>emptyList();
}
