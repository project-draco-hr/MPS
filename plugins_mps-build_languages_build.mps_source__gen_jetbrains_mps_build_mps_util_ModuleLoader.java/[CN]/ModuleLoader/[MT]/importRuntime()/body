{
  LanguageDescriptor descriptor=((LanguageDescriptor)myModuleDescriptor);
  List<SNode> previous=ListSequence.fromListWithValues(new ArrayList<SNode>(),SLinkOperations.getTargets(SNodeOperations.cast(myModule,"jetbrains.mps.build.mps.structure.BuildMps_Language"),"runtime",true));
  for (  ModuleReference module : descriptor.getRuntimeModules()) {
    final SNode resolved=SNodeOperations.as(visible.resolve(module.getModuleName(),module.getModuleId().toString()),"jetbrains.mps.build.mps.structure.BuildMps_Solution");
    if (resolved == null) {
      report("cannot find runtime solution in dependencies: " + module.getModuleName(),myModule);
      continue;
    }
    SNode ul=SNodeOperations.as(ListSequence.fromList(previous).findFirst(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.mps.structure.BuildMps_ModuleSolutionRuntime") && SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.build.mps.structure.BuildMps_ModuleSolutionRuntime"),"solution",false) == resolved;
      }
    }
),"jetbrains.mps.build.mps.structure.BuildMps_ModuleSolutionRuntime");
    if (ul == null) {
      ul=SConceptOperations.createNewNode("jetbrains.mps.build.mps.structure.BuildMps_ModuleSolutionRuntime",null);
      SLinkOperations.setTarget(ul,"solution",resolved,false);
      ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(myModule,"jetbrains.mps.build.mps.structure.BuildMps_Language"),"runtime",true)).addElement(ul);
    }
 else {
      ListSequence.fromList(previous).removeElement(ul);
    }
  }
}
