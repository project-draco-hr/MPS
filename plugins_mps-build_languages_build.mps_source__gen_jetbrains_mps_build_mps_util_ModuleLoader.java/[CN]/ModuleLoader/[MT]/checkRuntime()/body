{
  LanguageDescriptor descriptor=((LanguageDescriptor)myModuleDescriptor);
  for (  SModuleReference module : descriptor.getRuntimeModules()) {
    final SNode resolved=SNodeOperations.as(visible.resolve(module.getModuleName(),module.getModuleId().toString()),"jetbrains.mps.build.mps.structure.BuildMps_Solution");
    if (resolved == null) {
      report("cannot find runtime solution in dependencies: " + module.getModuleName(),myModule);
      continue;
    }
    if (!(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(myModule,"jetbrains.mps.build.mps.structure.BuildMps_Language"),"runtime",true)).any(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.mps.structure.BuildMps_ModuleSolutionRuntime") && asOriginal(SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.build.mps.structure.BuildMps_ModuleSolutionRuntime"),"solution",false)) == resolved;
      }
    }
))) {
      report("runtime solution should be extracted into build script: " + module.toString(),myOriginalModule);
    }
  }
}
