{
  if (path == null) {
    return null;
  }
  if (moduleFile != null && (path.startsWith(MacrosFactory.LANGUAGE_DESCRIPTOR) || path.startsWith(MacrosFactory.DEVKIT_DESCRIPTOR) || path.startsWith(MacrosFactory.SOLUTION_DESCRIPTOR))) {
    String relPath=path.substring(path.indexOf('}') + 1);
    return IFileUtils.getCanonicalPath(moduleFile.getParent().getDescendant(relPath));
  }
  if (path.startsWith("${")) {
    int index=path.indexOf("}");
    if (index == -1) {
      report("invalid macro in `" + path + "'",null);
      return path;
    }
    String macroName=path.substring(2,index);
    SNode found=null;
    for (    SNode macro : SLinkOperations.getTargets(SNodeOperations.getAncestor(myOriginalModule,"jetbrains.mps.build.structure.BuildProject",false,false),"macros",true)) {
      if (!(SNodeOperations.isInstanceOf(macro,"jetbrains.mps.build.structure.BuildFolderMacro"))) {
        continue;
      }
      if (eq_a6ewnz_a0c0f0d0a1(SPropertyOperations.getString(macro,"name"),macroName)) {
        found=SNodeOperations.cast(macro,"jetbrains.mps.build.structure.BuildFolderMacro");
        break;
      }
    }
    if (found == null) {
      report("macro is not declared in build script: " + path,null);
      return path;
    }
    String localPath=BuildSourcePath_Behavior.call_getLocalPath_5481553824944787364(SLinkOperations.getTarget(found,"defaultPath",true),(genContext != null ? Context.defaultContext(genContext) : Context.defaultContext()));
    if (localPath == null) {
      if (genContext != null) {
        genContext.showWarningMessage(found,"cannot resolve local path: " + path + ", macro has no default value");
      }
      return path;
    }
    String relPath=path.substring(index + 1);
    return IFileUtils.getCanonicalPath(FileSystem.getInstance().getFileByPath(localPath).getDescendant(relPath));
  }
  return path;
}
