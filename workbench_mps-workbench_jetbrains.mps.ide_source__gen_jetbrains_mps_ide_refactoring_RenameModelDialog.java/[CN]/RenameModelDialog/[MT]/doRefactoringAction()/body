{
  final String newModelName=getCurrentValue();
  if (!((SourceVersion.isName(SModelStereotype.withoutStereotype(newModelName))))) {
    setErrorText("Model name should be valid Java package");
    return;
  }
  if (!((newModelName.equals(myModelDescriptor.getModelName())))) {
    ApplicationManager.getApplication().runWriteAction(new Runnable(){
      @Override public void run(){
        DeleteModelHelper.deleteGeneratedFiles(myModelDescriptor);
      }
    }
);
    final ModelRenamer renamer=new ModelRenamer(myModelDescriptor,newModelName,!(myUpdateAllReferences.getModel().isSelected()));
    ModelAccess.instance().runWriteActionInCommand(new Runnable(){
      @Override public void run(){
        renamer.rename();
      }
    }
);
    ProgressManager.getInstance().run(new Task.Modal(myProject,"Updating model usages...",false){
      @Override public void run(      @NotNull ProgressIndicator indicator){
        indicator.pushState();
        indicator.setIndeterminate(true);
        try {
          ModelAccess.instance().runWriteAction(new Runnable(){
            @Override public void run(){
              renamer.updateReferencesIfNeeded(myMpsProject);
            }
          }
);
        }
  finally {
          indicator.popState();
        }
      }
    }
);
  }
  super.doRefactoringAction();
}
