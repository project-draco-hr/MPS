{
  FileSystemTreeImpl fileSystemTree=new FileSystemTreeImpl(null,FileChooserDescriptorFactory.createSingleFolderDescriptor());
  AbstractTreeUi ui=fileSystemTree.getTreeBuilder().getUi();
  String path=myModelRoot.getPath() == null ? "" : myModelRoot.getPath();
  VirtualFile virtualFile=VirtualFileManager.getInstance().findFileByUrl(VirtualFileManager.constructUrl("file",path));
  if (myModelRoot.getModule() != null && (virtualFile == null || path.isEmpty()))   virtualFile=VirtualFileManager.getInstance().findFileByUrl(VirtualFileManager.constructUrl("file",MPSModuleRepository.getInstance().getModuleById(myModelRoot.getModule().getModuleId()).getBundleHome().getPath()));
  if (virtualFile != null)   fileSystemTree.select(virtualFile,null);
  fileSystemTree.addListener(new Listener(){
    @Override public void selectionChanged(    List<VirtualFile> selection){
      if (selection.size() > 0) {
        SModelRootEntry.this.getModelRoot().setPath(selection.get(0).getPath());
        SModelRootEntry.this.reset();
      }
    }
  }
,new Disposable(){
    @Override public void dispose(){
    }
  }
);
  myTreePanel.removeAll();
  myTreePanel.add(ui.getTree(),BorderLayout.CENTER);
  ui.scrollSelectionToVisible(null,true);
}
