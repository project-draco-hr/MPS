{
  final MPSProject project=myContainer.getProject(Macros.mpsHomeMacros().expandPath(projectName,((IFile)null)));
  final BaseTransformationTest test=this;
  SwingUtilities.invokeAndWait(new Runnable(){
    public void run(){
      ModelAccess.instance().runWriteActionInCommand(new Runnable(){
        public void run(){
          IdeMain.setTestMode(true);
          test.myModel=SModelRepository.getInstance().getModelDescriptor(SModelReference.fromString(model));
          ModuleContext context=ModuleContext.create(test.myModel,project,false);
          TransientModelsModule module=context.getComponent(TransientModelsModule.class);
          test.myTransidentModel=module.createTransientModel("testTransidentModel","testTransidentModel");
          CloneUtil.cloneModel(test.myModel.getSModel(),test.myTransidentModel.getSModel());
          test.myTransidentModel.getSModel().validateLanguagesAndImports();
        }
      }
);
    }
  }
);
}
