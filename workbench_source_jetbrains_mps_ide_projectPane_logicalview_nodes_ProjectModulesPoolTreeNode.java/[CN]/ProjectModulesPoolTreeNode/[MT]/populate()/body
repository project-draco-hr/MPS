{
  List<IModule> modules=collectModules();
{
    ModulePoolNamespaceBuilder builder=new ModulePoolNamespaceBuilder();
    TextTreeNode solutions=new TextTreeNode("Solutions");
    for (    IModule s : modules) {
      if (s instanceof Solution || s instanceof ProjectStructureModule) {
        builder.addNode(new ProjectSolutionTreeNode((AbstractModule)s,myProject,true));
      }
    }
    builder.fillNode(solutions);
    add(solutions);
  }
{
    ModulePoolNamespaceBuilder builder=new ModulePoolNamespaceBuilder();
    TextTreeNode languages=new TextTreeNode("Languages");
    for (    Language l : CollectionUtil.filter(Language.class,modules)) {
      builder.addNode(new ProjectLanguageTreeNode(l,myProject,true));
    }
    builder.fillNode(languages);
    add(languages);
  }
{
    ModulePoolNamespaceBuilder builder=new ModulePoolNamespaceBuilder();
    TextTreeNode devkits=new TextTreeNode("DevKits");
    for (    DevKit devKit : CollectionUtil.filter(DevKit.class,modules)) {
      builder.addNode(new ProjectDevKitTreeNode(devKit,myProject,true));
    }
    builder.fillNode(devkits);
    add(devkits);
  }
}
