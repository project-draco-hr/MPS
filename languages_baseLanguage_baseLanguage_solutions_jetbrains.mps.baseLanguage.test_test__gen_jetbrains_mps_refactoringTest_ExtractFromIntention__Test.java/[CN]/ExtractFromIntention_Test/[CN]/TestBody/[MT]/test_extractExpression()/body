{
  this.addNodeById("1230052684510");
  this.addNodeById("1230052684520");
  this.addNodeById("1230052684528");
  this.addNodeById("1230052684538");
  SLinkOperations.setTarget(SNodeOperations.cast(this.getNodeById("1230052684533"),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1081236700937l,"jetbrains.mps.baseLanguage.structure.StaticMethodCall")),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1081236700937l,1144433194310l,"classConcept"),SNodeOperations.cast(this.getNodeById("1230052684539"),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept")));
  SLinkOperations.setTarget(SNodeOperations.cast(this.getNodeById("1230052684533"),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1081236700937l,"jetbrains.mps.baseLanguage.structure.StaticMethodCall")),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141037l,"baseMethodDeclaration"),SNodeOperations.cast(this.getNodeById("1230052684540"),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1081236700938l,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration")));
  ExtractMethodRefactoringParameters params=ExtractMethodFactory.createParameters(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230052684515"),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1070475926800l,"jetbrains.mps.baseLanguage.structure.StringLiteral"))));
  params.setName("foo");
  params.setVisibilityLevel(VisibilityLevel.PUBLIC);
  ExtractMethodRefactoring ref=ExtractMethodFactory.createRefactoring(params);
  ref.setStaticContainer(SNodeOperations.cast(this.getNodeById("1230052684521"),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept")));
  ref.doRefactor();
{
    List<SNode> nodesBefore=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230052684511"),MetaAdapterFactory.getConcept(new UUID(-2906742361791184688l,-8921219390863794400l),1192794744107l,"jetbrains.mps.lang.intentions.structure.IntentionDeclaration")),SNodeOperations.cast(this.getNodeById("1230052684521"),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept")));
    List<SNode> nodesAfter=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230052684529"),MetaAdapterFactory.getConcept(new UUID(-2906742361791184688l,-8921219390863794400l),1192794744107l,"jetbrains.mps.lang.intentions.structure.IntentionDeclaration")),SNodeOperations.cast(this.getNodeById("1230052684539"),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept")));
    Assert.assertNull("nodes '" + nodesBefore + "' and '"+ nodesAfter+ "' do not match!",NodesMatcher.matchNodes(nodesBefore,nodesAfter));
  }
}
