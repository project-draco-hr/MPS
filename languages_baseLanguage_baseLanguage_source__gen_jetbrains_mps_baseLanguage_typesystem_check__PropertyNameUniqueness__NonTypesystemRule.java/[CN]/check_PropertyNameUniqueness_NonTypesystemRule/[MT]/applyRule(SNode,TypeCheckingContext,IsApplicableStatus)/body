{
  Iterable<SNode> visibleMembers=Sequence.fromIterable(IClassifierType_Behavior.call_getVisibleMembers_6145907390641297279(check_5f44vd_a0a0a0b(SNodeOperations.getAncestor(property,"jetbrains.mps.baseLanguage.structure.Classifier",false,false)),property)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return neq_5f44vd_a0a0a0a0a0a0a1(it,property);
    }
  }
);
  SNode duplicate=Sequence.fromIterable(visibleMembers).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.baseLanguage.structure.Property");
    }
  }
).findFirst(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return eq_5f44vd_a0a0a0a0a0a2a1(SPropertyOperations.getString(SNodeOperations.cast(it,"jetbrains.mps.baseLanguage.structure.Property"),"name"),SPropertyOperations.getString(property,"name"));
    }
  }
);
  if ((duplicate != null)) {
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(property,"Duplicate property name with " + BehaviorReflection.invokeVirtual(String.class,SNodeOperations.getAncestor(duplicate,"jetbrains.mps.baseLanguage.structure.Classifier",false,false),"virtual_getFqName_1213877404258",new Object[]{}) + "."+ SPropertyOperations.getString(SNodeOperations.cast(duplicate,"jetbrains.mps.baseLanguage.structure.Property"),"name"),"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1472285356915365475",null,errorTarget);
    }
  }
  Iterable<SNode> visibleMethods=Sequence.fromIterable(visibleMembers).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration");
    }
  }
);
  duplicate=Sequence.fromIterable(visibleMethods).findFirst(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      SNode method=SNodeOperations.cast(it,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration");
      return eq_5f44vd_a0a1a0a0a0a0h0b(SPropertyOperations.getString(method,"name"),Property_Behavior.call_getGetterMethodName_1213877383170(property)) && ListSequence.fromList(SLinkOperations.getTargets(method,"parameter",true)).isEmpty();
    }
  }
);
  if ((duplicate != null)) {
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(property,"The property getter is hiding a method of the same name: " + BehaviorReflection.invokeVirtual(String.class,SNodeOperations.getAncestor(duplicate,"jetbrains.mps.baseLanguage.structure.Classifier",false,false),"virtual_getFqName_1213877404258",new Object[]{}) + "."+ SPropertyOperations.getString(SNodeOperations.cast(duplicate,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"),"name")+ "()","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1472285356915474315",null,errorTarget);
    }
  }
  if (Property_Behavior.call_hasSetter_1213877383224(property)) {
    duplicate=Sequence.fromIterable(visibleMethods).findFirst(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        SNode method=SNodeOperations.cast(it,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration");
        return eq_5f44vd_a0a0b0a0a0a0a0a01a1(SPropertyOperations.getString(method,"name"),Property_Behavior.call_getSetterMethodName_1213877383179(property)) && ListSequence.fromList(SLinkOperations.getTargets(method,"parameter",true)).count() == 1 && (TypeChecker.getInstance().getSubtypingManager().isSubtype(SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(method,"parameter",true)).first(),"type",true),SLinkOperations.getTarget(property,"type",true)) || TypeChecker.getInstance().getSubtypingManager().isSubtype(SLinkOperations.getTarget(property,"type",true),SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(method,"parameter",true)).first(),"type",true)));
      }
    }
);
    if ((duplicate != null)) {
{
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(property,"The property setter is hiding a method of the same name: " + BehaviorReflection.invokeVirtual(String.class,SNodeOperations.getAncestor(duplicate,"jetbrains.mps.baseLanguage.structure.Classifier",false,false),"virtual_getFqName_1213877404258",new Object[]{}) + "."+ SPropertyOperations.getString(SNodeOperations.cast(duplicate,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"),"name")+ "("+ BaseMethodDeclaration_Behavior.call_getErasureSignature_2830572026628006618(SNodeOperations.cast(duplicate,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"))+ ")","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1472285356915680442",null,errorTarget);
      }
    }
  }
}
