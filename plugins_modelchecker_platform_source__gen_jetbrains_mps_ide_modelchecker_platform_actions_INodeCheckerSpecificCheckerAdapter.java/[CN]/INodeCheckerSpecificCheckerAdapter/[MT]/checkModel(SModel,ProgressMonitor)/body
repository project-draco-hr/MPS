{
  final List<SearchResult<ModelCheckerIssue>> results=ListSequence.fromList(new ArrayList<SearchResult<ModelCheckerIssue>>());
  monitor.start(myCategory,1);
  for (  final SNode rootNode : SModelOperations.roots(model,null)) {
    SRepository repository=(myRepository != null ? myRepository : model.getRepository());
    for (    final IErrorReporter errorReporter : SetSequence.fromSet(myChecker.getErrors(rootNode,repository))) {
      final QuickFix_Runtime quickFix=check_m7souj_a0a0b0d0h(check_m7souj_a0a0a1a3a7(errorReporter));
      IModelCheckerFix fix=null;
      if (quickFix != null) {
        fix=new IModelCheckerFix(){
          public boolean doFix(){
            quickFix.execute(errorReporter.getSNode());
            return true;
          }
        }
;
      }
      SpecificChecker.addIssue(results,errorReporter.getSNode(),errorReporter.reportError(),SpecificChecker.getResultCategory(errorReporter.getMessageStatus()),"typesystem",fix);
    }
  }
  monitor.done();
  return results;
}
