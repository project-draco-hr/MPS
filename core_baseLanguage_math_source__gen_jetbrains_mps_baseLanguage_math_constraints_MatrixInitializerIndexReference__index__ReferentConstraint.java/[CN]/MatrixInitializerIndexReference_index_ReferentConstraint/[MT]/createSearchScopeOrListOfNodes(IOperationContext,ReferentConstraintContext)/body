{
  SNode n=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.math.structure.MatrixOrVectorInitializer",true,false);
  List<SNode> indices=new ArrayList<SNode>();
  while (n != null) {
    do {
      SNode matchedNode_4513_1b959jxl1wwun=n;
{
        boolean matches_4513_1b959jxl1wwup=false;
{
          SNode matchingNode_4513_1b959jxl1wwup=n;
          if (matchingNode_4513_1b959jxl1wwup != null) {
            matches_4513_1b959jxl1wwup=SModelUtil_new.isAssignableConcept(matchingNode_4513_1b959jxl1wwup.getConceptFqName(),"jetbrains.mps.baseLanguage.math.structure.MatrixInitializer");
          }
        }
        if (matches_4513_1b959jxl1wwup) {
          ListSequence.fromList(indices).addElement(SLinkOperations.getTarget(matchedNode_4513_1b959jxl1wwun,"colIndex",true));
          ListSequence.fromList(indices).addElement(SLinkOperations.getTarget(matchedNode_4513_1b959jxl1wwun,"rowIndex",true));
          break;
        }
      }
{
        boolean matches_4513_1b959jxl1wwuu=false;
{
          SNode matchingNode_4513_1b959jxl1wwuu=n;
          if (matchingNode_4513_1b959jxl1wwuu != null) {
            matches_4513_1b959jxl1wwuu=SModelUtil_new.isAssignableConcept(matchingNode_4513_1b959jxl1wwuu.getConceptFqName(),"jetbrains.mps.baseLanguage.math.structure.VectorInitializer");
          }
        }
        if (matches_4513_1b959jxl1wwuu) {
          ListSequence.fromList(indices).addElement(SLinkOperations.getTarget(matchedNode_4513_1b959jxl1wwun,"rowIndex",true));
          break;
        }
      }
    }
 while (false);
    n=SNodeOperations.getAncestor(n,"jetbrains.mps.baseLanguage.math.structure.MatrixOrVectorInitializer",false,false);
  }
  return indices;
}
