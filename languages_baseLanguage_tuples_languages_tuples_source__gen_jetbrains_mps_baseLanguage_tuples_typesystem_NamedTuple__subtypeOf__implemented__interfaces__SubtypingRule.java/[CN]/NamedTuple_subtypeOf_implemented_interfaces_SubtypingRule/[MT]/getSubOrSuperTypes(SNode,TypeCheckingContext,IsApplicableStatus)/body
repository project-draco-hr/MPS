{
  List<SNode> ifs=new ArrayList<SNode>();
  for (  SNode i : SLinkOperations.getChildren(SLinkOperations.getTarget(ntt,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")),MetaAdapterFactory.getContainmentLink(0xa247e09e243545baL,0xb8d207e93feba96aL,0x1208fa48aa5L,0x21a3c1a0d8708ce4L,"implements"))) {
    SNode ct=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType"));
    SLinkOperations.setTarget(ct,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier"),SLinkOperations.getTarget(i,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")));
    ListSequence.fromList(ifs).addElement(ct);
  }
  return ifs;
}
