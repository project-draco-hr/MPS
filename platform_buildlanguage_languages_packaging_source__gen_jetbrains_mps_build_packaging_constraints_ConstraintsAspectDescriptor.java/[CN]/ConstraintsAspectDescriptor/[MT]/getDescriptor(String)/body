{
  if ("jetbrains.mps.build.packaging.structure.Layout".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.Layout"));
  }
  if ("jetbrains.mps.build.packaging.structure.ILayoutComponent".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.ILayoutComponent"));
  }
  if ("jetbrains.mps.build.packaging.structure.AbstractProjectComponent".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AbstractProjectComponent_Constraints());
  }
  if ("jetbrains.mps.build.packaging.structure.File".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new File_Constraints());
  }
  if ("jetbrains.mps.build.packaging.structure.Jar".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Jar_Constraints());
  }
  if ("jetbrains.mps.build.packaging.structure.Folder".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Folder_Constraints());
  }
  if ("jetbrains.mps.build.packaging.structure.Module".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Module_Constraints());
  }
  if ("jetbrains.mps.build.packaging.structure.ICompositeComponent".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.ICompositeComponent"));
  }
  if ("jetbrains.mps.build.packaging.structure.Copy".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.Copy"));
  }
  if ("jetbrains.mps.build.packaging.structure.Zip".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.Zip"));
  }
  if ("jetbrains.mps.build.packaging.structure.Configuration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Configuration_Constraints());
  }
  if ("jetbrains.mps.build.packaging.structure.ConfigurationReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.ConfigurationReference"));
  }
  if ("jetbrains.mps.build.packaging.structure.Delete".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Delete_Constraints());
  }
  if ("jetbrains.mps.build.packaging.structure.PostProcessingTask".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.PostProcessingTask"));
  }
  if ("jetbrains.mps.build.packaging.structure.PathHolder".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.PathHolder"));
  }
  if ("jetbrains.mps.build.packaging.structure.Echo".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Echo_Constraints());
  }
  if ("jetbrains.mps.build.packaging.structure.Variable".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Variable_Constraints());
  }
  if ("jetbrains.mps.build.packaging.structure.SimpleString".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.SimpleString"));
  }
  if ("jetbrains.mps.build.packaging.structure.IStringExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.IStringExpression"));
  }
  if ("jetbrains.mps.build.packaging.structure.VariableReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.VariableReference"));
  }
  if ("jetbrains.mps.build.packaging.structure.CompositeString".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.CompositeString"));
  }
  if ("jetbrains.mps.build.packaging.structure.Antcall".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Antcall_Constraints());
  }
  if ("jetbrains.mps.build.packaging.structure.BuildLanguageTargetReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.BuildLanguageTargetReference"));
  }
  if ("jetbrains.mps.build.packaging.structure.Replace".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.Replace"));
  }
  if ("jetbrains.mps.build.packaging.structure.Pair".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.Pair"));
  }
  if ("jetbrains.mps.build.packaging.structure.ModuleCycle".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.ModuleCycle"));
  }
  if ("jetbrains.mps.build.packaging.structure.NewModuleReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.NewModuleReference"));
  }
  if ("jetbrains.mps.build.packaging.structure.Macro".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.Macro"));
  }
  if ("jetbrains.mps.build.packaging.structure.Path".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.Path"));
  }
  if ("jetbrains.mps.build.packaging.structure.PathComponent".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.PathComponent"));
  }
  if ("jetbrains.mps.build.packaging.structure.CompositePathComponent".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.CompositePathComponent"));
  }
  if ("jetbrains.mps.build.packaging.structure.MacroReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new MacroReference_Constraints());
  }
  if ("jetbrains.mps.build.packaging.structure.BaseDirPath".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new BaseDirPath_Constraints());
  }
  if ("jetbrains.mps.build.packaging.structure.MPSLayoutConfigurationReferencePropertyValueExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.MPSLayoutConfigurationReferencePropertyValueExpression"));
  }
  if ("jetbrains.mps.build.packaging.structure.ICondition".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.ICondition"));
  }
  if ("jetbrains.mps.build.packaging.structure.FileExistsCondition".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.FileExistsCondition"));
  }
  if ("jetbrains.mps.build.packaging.structure.NotCondition".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.NotCondition"));
  }
  if ("jetbrains.mps.build.packaging.structure.NonExistingPath".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.NonExistingPath"));
  }
  if ("jetbrains.mps.build.packaging.structure.IPath".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.IPath"));
  }
  if ("jetbrains.mps.build.packaging.structure.Space".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.Space"));
  }
  if ("jetbrains.mps.build.packaging.structure.IVariableHolder".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.IVariableHolder"));
  }
  if ("jetbrains.mps.build.packaging.structure.IMacroHolder".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.IMacroHolder"));
  }
  if ("jetbrains.mps.build.packaging.structure.IAbstractCompositeComponent".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.IAbstractCompositeComponent"));
  }
  if ("jetbrains.mps.build.packaging.structure.Manifest".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.Manifest"));
  }
  if ("jetbrains.mps.build.packaging.structure.ManifestAttribute".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.ManifestAttribute"));
  }
  if ("jetbrains.mps.build.packaging.structure.ComponentsList".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.ComponentsList"));
  }
  if ("jetbrains.mps.build.packaging.structure.ITransparentProjectComponent".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.ITransparentProjectComponent"));
  }
  if ("jetbrains.mps.build.packaging.structure.INotBuildableComponent".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.INotBuildableComponent"));
  }
  if ("jetbrains.mps.build.packaging.structure.PropertiesImport".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.PropertiesImport"));
  }
  if ("jetbrains.mps.build.packaging.structure.PropertyNodeImport".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.PropertyNodeImport"));
  }
  if ("jetbrains.mps.build.packaging.structure.PropertyFileImport".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.PropertyFileImport"));
  }
  if ("jetbrains.mps.build.packaging.structure.BlockReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.BlockReference"));
  }
  if ("jetbrains.mps.build.packaging.structure.Block".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.Block"));
  }
  if ("jetbrains.mps.build.packaging.structure.ModuleCycleReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.build.packaging.structure.ModuleCycleReference"));
  }
  if ("jetbrains.mps.build.packaging.structure.Plugin".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Plugin_Constraints());
  }
  return null;
}
