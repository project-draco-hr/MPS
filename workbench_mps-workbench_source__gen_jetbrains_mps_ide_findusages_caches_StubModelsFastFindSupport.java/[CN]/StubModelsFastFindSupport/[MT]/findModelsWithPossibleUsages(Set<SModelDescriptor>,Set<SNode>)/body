{
  nodes=SetSequence.fromSetWithValues(new HashSet<SNode>(),SetSequence.fromSet(nodes).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return it.getSNodeId() instanceof SNodeId.Foreign;
    }
  }
));
  MultiMap<SModelDescriptor,SNode> result=findModels(models,nodes,new Mapper<SNode,String>(){
    public String value(    SNode key){
      return key.getId();
    }
  }
);
  for (  SNode node : SetSequence.fromSet(nodes)) {
    if (!(SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.structure.TypeVariableDeclaration"))) {
      continue;
    }
    result.putValue(SNodeOperations.getModel(node).getModelDescriptor(),node);
  }
  return result;
}
