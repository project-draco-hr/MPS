{
  Project project=myEnvironment.getProject();
  final Wrappers._T<IFile> file=new Wrappers._T<IFile>();
  final Wrappers._T<String> mainTaskName=new Wrappers._T<String>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      SNode node=SNodeOperations.cast(myRunConfiguration.getNode().getNode(),"jetbrains.mps.build.structure.BuildProject");
      file.value=FileSystem.getInstance().getFileByPath(BuildProject_Behavior.call_getScriptsPath_4796668409958419284(node,Context.defaultContext()));
      file.value=file.value.getDescendant(SPropertyOperations.getString(node,"name") + ".xml");
      mainTaskName.value=SPropertyOperations.getString(SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.getNode("r:14f06230-41df-42af-9a25-81de46539bf1(jetbrains.mps.build.workflow.accessories)","7306485738221408315"),"parts",true)).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.workflow.structure.BwfTask");
        }
      }
),"jetbrains.mps.build.workflow.structure.BwfTask"),"name");
    }
  }
);
{
    ProcessHandler _processHandler=new Ant_Command().setTargetName_String(mainTaskName.value).setAntLocation_String((myRunConfiguration.getSettings().getUseOtherAntLocation() ? myRunConfiguration.getSettings().getOtherAntLocation() : null)).setOptions_String(myRunConfiguration.getSettings().getAntOptions()).createProcess(file.value.getPath());
    final ConsoleView _consoleView=ConsoleCreator.createConsoleView(project,false);
    _processHandler.addProcessListener(new ConsoleProcessListener(_consoleView));
    return new DefaultExecutionResult(_processHandler,new DefaultExecutionConsole(_consoleView.getComponent(),new _FunctionTypes._void_P0_E0(){
      public void invoke(){
        _consoleView.dispose();
      }
    }
));
  }
}
