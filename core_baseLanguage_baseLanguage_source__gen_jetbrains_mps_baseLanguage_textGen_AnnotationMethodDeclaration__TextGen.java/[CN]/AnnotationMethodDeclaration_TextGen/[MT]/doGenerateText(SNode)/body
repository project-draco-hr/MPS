{
  if (getBuffer().hasPositionsSupport()) {
    TraceInfoGenerationUtil.createPositionInfo(this,node);
    TraceInfoGenerationUtil.createScopeInfo(this,node);
  }
  if ((AttributeOperations.getAttribute(node,new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment"))) != null)) {
    TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),AttributeOperations.getAttribute(node,new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.javadoc.structure.MethodDocComment"))),this.getSNode());
  }
  this.appendNewLine();
  this.indentBuffer();
  TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),SLinkOperations.getTarget(node,"returnType",true),this.getSNode());
  this.append(" ");
  this.append(SPropertyOperations.getString(node,"name"));
  this.append("()");
  if ((SLinkOperations.getTarget(node,"defaultValue",true) != null)) {
    this.append(" default ");
    TextGenManager.instance().appendNodeText(this.getContext(),this.getBuffer(),SLinkOperations.getTarget(node,"defaultValue",true),this.getSNode());
  }
  this.append(";");
  if (getBuffer().hasPositionsSupport()) {
    TraceInfoGenerationUtil.fillPositionInfo(this,node,TraceableConcept_Behavior.call_getTraceableProperty_3822000666564591088(SNodeOperations.cast(node,"jetbrains.mps.lang.textGen.structure.TraceableConcept")));
    TraceInfoGenerationUtil.fillScopeInfo(this,node,ScopeConcept_Behavior.call_getScopeVariables_3822000666564591100(SNodeOperations.cast(node,"jetbrains.mps.lang.textGen.structure.ScopeConcept")));
  }
}
