{
  for (  final Solution solution : ListSequence.fromList(myProject.getProjectModules(Solution.class))) {
    if (solution.getModuleFqName().endsWith(SOLUTION_NAME)) {
      List<SModel> models=solution.getOwnModelDescriptors();
      SModel m=ListSequence.fromList(models).first().getSModel();
      ListSequence.fromList(SModelOperations.getNodes(m,"jetbrains.mps.lang.resources.structure.IconResource")).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return (it != null) && isNotEmpty_qerz9l_a0a0a0a0a0a0a2a0a0a4(SPropertyOperations.getString(it,"path")) && !(isValid(it));
        }
      }
).visitAll(new IVisitor<SNode>(){
        public void visit(        SNode it){
          String langName=NameUtil.namespaceFromLongName(solution.getModuleFqName());
          Language lang=ModuleRepositoryFacade.getInstance().getModule(langName,Language.class);
          if (lang == null) {
            return;
          }
          String iconPath=MacrosFactory.forModuleFile(lang.getDescriptorFile()).expandPath(SPropertyOperations.getString(it,"path"));
          String newIconMacro=SPropertyOperations.getString(it,"path").replace("${language_descriptor}","${solution_descriptor}");
          String newIconPath=MacrosFactory.forModuleFile(solution.getDescriptorFile()).expandPath(newIconMacro);
          SPropertyOperations.set(it,"path",newIconMacro);
          IFile file=FileSystem.getInstance().getFile(iconPath);
          if (!(file.exists())) {
            return;
          }
          IFile parent=FileSystem.getInstance().getFile(newIconPath).getParent();
          parent.mkdirs();
          file.move(parent);
        }
      }
);
    }
  }
}
