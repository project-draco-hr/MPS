{
  this.addNodeById("6791439617122308113");
  this.addNodeById("6791439617122308116");
  this.addNodeById("6791439617122315466");
  new ConvertAnonymousRefactoring(SNodeOperations.cast(this.getNodeById("6791439617122308134"),"jetbrains.mps.baseLanguage.structure.AnonymousClass"),"MyI").doRefactor();
{
    List<SNode> nodesBefore=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("6791439617122308117"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    List<SNode> nodesAfter=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("6791439617122315467"),"jetbrains.mps.baseLanguage.structure.ClassConcept"));
    Assert.assertNull("nodes '" + nodesBefore + "' and '"+ nodesAfter+ "' do not match!",NodesMatcher.matchNodes(nodesBefore,nodesAfter));
  }
}
