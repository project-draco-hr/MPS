{
  SNode term=(SNode)query.getObjectHolder().getObject();
  List<SearchResult<SNode>> rules=new ArrayList<SearchResult<SNode>>();
  NodeTypesComponent component=NodeTypesComponentsRepository.getInstance().getNodeTypesComponent(term.getContainingRoot());
  if (component != null) {
    Set<Pair<String,String>> rulesIds=component.getRulesWhichAffectNodeType(term);
    if (rulesIds != null) {
      for (      Pair<String,String> ruleId : rulesIds) {
        SModelDescriptor modelDescriptor=SModelRepository.getInstance().getModelDescriptor(SModelReference.fromString(ruleId.o1));
        if (modelDescriptor == null) {
          continue;
        }
        SNode rule=modelDescriptor.getSModel().getNodeById(ruleId.o2);
        if (rule != null) {
          rules.add(new SearchResult<SNode>(rule,"rules which affect node's type"));
        }
      }
    }
  }
  return new SearchResults<SNode>(CollectionUtil.set(term),rules);
}
