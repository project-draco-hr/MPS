{
  Set<String> classpathItems=SetSequence.fromSet(new LinkedHashSet<String>());
  final Wrappers._T<String> mpsCorePath=new Wrappers._T<String>(PathManager.getLibPath());
  File mpsCore=new File(mpsCorePath.value + File.separator + "mps-core.jar");
  if (mpsCore.exists()) {
    SetSequence.fromSet(classpathItems).addSequence(Sequence.fromIterable(mpsLibJars).select(new ISelector<String,String>(){
      public String select(      String it){
        return mpsCorePath.value + File.separator + it;
      }
    }
));
    SetSequence.fromSet(classpathItems).addSequence(Sequence.fromIterable(mpsAddJars).select(new ISelector<String,String>(){
      public String select(      String it){
        return mpsCorePath.value + File.separator + it;
      }
    }
));
    SetSequence.fromSet(classpathItems).addElement(PathManager.getHomePath() + File.separator + "plugins"+ File.separator+ "vcs"+ File.separator+ "lib"+ File.separator+ "mps-vcs-core.jar");
  }
 else {
    mpsCorePath.value=PathManager.getPluginsPath() + File.separator + "mps-core"+ File.separator+ "lib";
    mpsCore=new File(mpsCorePath.value + File.separator + "mps-core.jar");
    if (mpsCore.exists()) {
      SetSequence.fromSet(classpathItems).addSequence(Sequence.fromIterable(mpsLibJars).select(new ISelector<String,String>(){
        public String select(        String it){
          return mpsCorePath.value + File.separator + it;
        }
      }
));
      SetSequence.fromSet(classpathItems).addSequence(Sequence.fromIterable(mpsAddJars).select(new ISelector<String,String>(){
        public String select(        String it){
          return mpsCorePath.value + File.separator + it;
        }
      }
));
      SetSequence.fromSet(classpathItems).addElement(PathManager.getPluginsPath() + File.separator + "mps-vcs"+ File.separator+ "lib"+ File.separator+ "mps-vcs-core.jar");
    }
 else {
      SetSequence.fromSet(classpathItems).addSequence(SetSequence.fromSet(getClasspathInternal()));
    }
  }
  SetSequence.fromSet(classpathItems).addSequence(Sequence.fromIterable(ideaLibJars).select(new ISelector<String,String>(){
    public String select(    String it){
      return PathManager.getLibPath() + File.separator + it;
    }
  }
));
  if (withSvnkit) {
    SetSequence.fromSet(classpathItems).addElement(getSvnkitJar());
  }
  SetSequence.fromSet(classpathItems).addElement(getTextMergerJar());
  return classpathItems;
}
