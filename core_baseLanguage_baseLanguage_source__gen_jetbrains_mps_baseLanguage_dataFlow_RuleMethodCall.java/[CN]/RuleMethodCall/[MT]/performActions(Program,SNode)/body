{
  SNode m=node;
  if (SLinkOperations.getTargets(SLinkOperations.getTarget(m,"baseMethodDeclaration",false),"annotation",true) != null) {
    for (    SNode annotation : SLinkOperations.getTargets(SLinkOperations.getTarget(m,"baseMethodDeclaration",false),"annotation",true)) {
      if (SLinkOperations.getTarget(annotation,"annotation",false) == SNodeOperations.getNode("f:java_stub#37a3367b-1fb2-44d8-aa6b-18075e74e003#org.jetbrains.annotations(MPS.Classpath/org.jetbrains.annotations@java_stub)","~Nullable")) {
{
          Object object=node;
          if (((Program)o).contains(object)) {
            boolean before=false;
            int position=((Program)(o)).getEnd(object);
            Instruction instruction=new nullableInstruction(node);
            instruction.setSource(node);
            ((Program)(o)).insert(instruction,position,true,before);
          }
        }
      }
      if (SLinkOperations.getTarget(annotation,"annotation",false) == SNodeOperations.getNode("f:java_stub#37a3367b-1fb2-44d8-aa6b-18075e74e003#org.jetbrains.annotations(MPS.Classpath/org.jetbrains.annotations@java_stub)","~NotNull")) {
{
          Object object=node;
          if (((Program)o).contains(object)) {
            boolean before=false;
            int position=((Program)(o)).getEnd(object);
            Instruction instruction=new notNullInstruction(node);
            instruction.setSource(node);
            ((Program)(o)).insert(instruction,position,true,before);
          }
        }
      }
    }
  }
}
