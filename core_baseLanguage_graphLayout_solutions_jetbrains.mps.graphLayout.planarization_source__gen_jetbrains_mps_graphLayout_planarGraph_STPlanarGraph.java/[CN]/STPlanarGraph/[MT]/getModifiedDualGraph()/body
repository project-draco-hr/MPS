{
  DualGraph dualGraph=new DualGraph(myEmbeddedGraph);
  for (  Edge edge : ListSequence.fromList(dualGraph.getEdges())) {
    Face sourceFace=MapSequence.fromMap(dualGraph.getFacesMap()).get(edge.getSource());
    if (sourceFace != MapSequence.fromMap(myLeftFaceForEdge).get(MapSequence.fromMap(dualGraph.getEdgesMap()).get(edge))) {
      edge.revert();
    }
  }
  Face outerFace=myEmbeddedGraph.getOuterFace();
  Node rightOuterFace=dualGraph.addDummyNode();
  MapSequence.fromMap(dualGraph.getFacesMap()).put(rightOuterFace,outerFace);
  Node outerFaceNode=MapSequence.fromMap(dualGraph.getNodesMap()).get(outerFace);
  for (  Edge edge : ListSequence.fromList(outerFaceNode.getEdges(Edge.Direction.BOTH))) {
    Edge realEdge=MapSequence.fromMap(dualGraph.getEdgesMap()).get(edge);
    if (MapSequence.fromMap(myRightFaceForEdge).get(realEdge) == outerFace) {
      dualGraph.removeFromGraph(edge);
      dualGraph.addEdge(edge.getOpposite(outerFaceNode),rightOuterFace,realEdge);
    }
  }
  return dualGraph;
}
