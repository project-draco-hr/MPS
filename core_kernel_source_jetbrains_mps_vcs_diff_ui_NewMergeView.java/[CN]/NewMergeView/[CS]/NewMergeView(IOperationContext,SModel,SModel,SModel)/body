{
  setLayout(new BorderLayout());
  myContext=context;
  JPanel controlsPanel=createControlsPanel();
  final JPanel panel=new JPanel(new GridLayout(1,2));
  ModelAccess.instance().runWriteAction(new Runnable(){
    public void run(){
      myMerger=new Merger(baseModel,mine,repo);
      myMerger.doRebuild(new Runnable(){
        public void run(){
        }
      }
);
      myMineChangesTree=new MyChangesTree(context);
      myMineChangesTree.showDifference(baseModel,mine,myMerger.getBaseMyneChange(),myMerger);
      panel.add(new HeaderWrapper("Mine Changes",new JScrollPane(myMineChangesTree)));
      panel.add(new HeaderWrapper("Merge Result",new MergeResultView(context,baseModel,mine,repo)));
      myRepoChangesTree=new MyChangesTree(context);
      myRepoChangesTree.showDifference(baseModel,repo,myMerger.getBaseRepoChange(),myMerger);
      panel.add(new HeaderWrapper("Repository Changes",new JScrollPane(myRepoChangesTree)));
      updateView();
    }
  }
);
  add(panel);
  add(controlsPanel,BorderLayout.PAGE_END);
}
