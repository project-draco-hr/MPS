{
  setLayout(new BorderLayout());
  myContext=context;
  myStatusPanel=new JLabel();
  final JPanel panel=new JPanel(new GridLayout(1,2));
  ModelAccess.instance().runWriteAction(new Runnable(){
    public void run(){
      myMerger=new Merger(baseModel,mine,repo);
      myMerger.doRebuild(new Runnable(){
        public void run(){
        }
      }
);
      myMineChangesTree=new MyChangesTree(context);
      myMineChangesTree.showDifference(baseModel,mine,myMerger.getBaseMyneChange());
      panel.add(new HeaderWrapper("Mine Changes",new JScrollPane(myMineChangesTree)));
      myRepoChangesTree=new MyChangesTree(context);
      myRepoChangesTree.showDifference(baseModel,repo,myMerger.getBaseRepoChange());
      panel.add(new HeaderWrapper("Repository Changes",new JScrollPane(myRepoChangesTree)));
      updateView();
    }
  }
);
  SModel resultModel=myMerger.getResultModel();
  SNode node=resultModel.getRoots().get(0);
  myEditorComponent=new DiffEditorComponent(context,node,resultModel);
  JSplitPane splitPane=new JSplitPane(JSplitPane.VERTICAL_SPLIT,panel,myEditorComponent.getExternalComponent());
  add(splitPane);
  add(myStatusPanel,BorderLayout.PAGE_END);
}
