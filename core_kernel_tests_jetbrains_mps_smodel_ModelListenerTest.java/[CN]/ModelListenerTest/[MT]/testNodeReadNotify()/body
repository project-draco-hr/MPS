{
  final TestModelFactory m1f=new TestModelFactory();
  SModel m1=m1f.createModel(3,5,2,3);
  final int actualNodes=m1f.countModelNodes();
  AccessCountListener1 cl1=new AccessCountListener1();
  AccessCountListener2 cl2=new AccessCountListener2();
  AccessCountListener3 cl3=new AccessCountListener3();
  m1f.attachAccessListeners(cl1,cl2,cl3);
  readTreeNodes(m1.getRootNodes());
  Assert.assertEquals(actualNodes * 3,cl1.myVisitedNodes);
  Assert.assertEquals(actualNodes * 2,cl1.myPropertiesRead);
  Assert.assertEquals(0,cl1.myReferencesRead);
  Assert.assertEquals(0,cl2.myVisitedNodes);
  Assert.assertEquals(0,cl2.myPropertiesRead);
  Assert.assertEquals(0,cl2.myReferencesRead);
  Assert.assertEquals(0,cl2.myChildrenRead);
  Assert.assertEquals(0,cl3.myVisitedNodes);
  Assert.assertEquals(0,cl3.myPropertiesRead);
  Assert.assertEquals(0,cl3.myReferencesRead);
  cl1.reset();
  cl2.reset();
  cl3.reset();
  myTestModelAccess.enableRead();
  m1f.attachTo(myTestRepo);
  readTreeNodes(m1.getRootNodes());
  final int expectedNodeReadCount=actualNodes * 3;
  myErrors.checkThat(cl1.myVisitedNodes,equalTo(expectedNodeReadCount));
  myErrors.checkThat(cl1.myPropertiesRead,equalTo(actualNodes * 2));
  myErrors.checkThat(cl1.myReferencesRead,equalTo(0));
  myErrors.checkThat(cl2.myVisitedNodes,equalTo(expectedNodeReadCount));
  myErrors.checkThat(cl2.myVisitedNodes,equalTo(cl1.myVisitedNodes));
  myErrors.checkThat(cl2.myPropertiesRead,equalTo(actualNodes * 2));
  myErrors.checkThat(cl2.myReferencesRead,equalTo(0));
  myErrors.checkThat("NodeReadEventsCaster.fireNodeChildReadAccess is never used",cl2.myChildrenRead,equalTo(0));
  myErrors.checkThat(cl3.myVisitedNodes,equalTo(expectedNodeReadCount));
  myErrors.checkThat(cl3.myVisitedNodes,equalTo(cl1.myVisitedNodes));
  myErrors.checkThat(cl3.myPropertiesRead,equalTo(actualNodes * 2));
  myErrors.checkThat(cl3.myReferencesRead,equalTo(0));
  m1f.detachAccessListeners(cl1,cl2,cl3);
}
