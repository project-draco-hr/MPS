{
  final TestModelFactory m1f=new TestModelFactory();
  SModel m1=m1f.createModel(3,2);
  final SNode r1=m1f.getRoot(1);
  final SNode r2c1=m1f.getRoot(2).getFirstChild();
  final SNode r3c2=m1f.getRoot(3).getFirstChild().getNextSibling();
  myTestModelAccess.enableWrite();
  m1f.attachTo(myTestRepo);
  ChangeListener1 cl1=new ChangeListener1();
  ChangeListener2 cl2=new ChangeListener2();
  m1f.attachChangeListeners(cl1,cl2);
  r1.setReferenceTarget(ourRef,r2c1);
  myErrors.checkThat(cl1.myAddedRef.size(),equalTo(1));
  myErrors.checkThat(cl1.myRemovedRef.size(),equalTo(0));
  myErrors.checkThat(cl2.myChangedReferences.size(),equalTo(1));
  myErrors.checkThat(cl2.myChangedReferences.contains(ourRef.getRoleName()),equalTo(true));
  cl1.reset();
  cl2.reset();
  r2c1.setReference(ourRef,jetbrains.mps.smodel.SReference.create(ourRef,r2c1,r3c2));
  myErrors.checkThat(cl1.myAddedRef.size(),equalTo(1));
  myErrors.checkThat(cl1.myRemovedRef.size(),equalTo(0));
  myErrors.checkThat(cl2.myChangedReferences.size(),equalTo(1));
  myErrors.checkThat(cl2.myChangedReferences.contains(ourRef.getRoleName()),equalTo(true));
  cl1.reset();
  cl2.reset();
  r1.setReference(ourRef,jetbrains.mps.smodel.SReference.create(ourRef,r1,r3c2));
  myErrors.checkThat(cl1.myAddedRef.size(),equalTo(1));
  myErrors.checkThat(cl1.myRemovedRef.size(),equalTo(1));
  myErrors.checkThat(cl2.myChangedReferences.size(),equalTo(1));
  myErrors.checkThat(cl2.myChangedReferences.contains(ourRef.getRoleName()),equalTo(true));
  cl1.reset();
  cl2.reset();
  r2c1.setReferenceTarget(ourRef,r1);
  myErrors.checkThat(cl1.myAddedRef.size(),equalTo(1));
  myErrors.checkThat(cl1.myRemovedRef.size(),equalTo(1));
  myErrors.checkThat(cl2.myChangedReferences.size(),equalTo(1));
  myErrors.checkThat(cl2.myChangedReferences.contains(ourRef.getRoleName()),equalTo(true));
  cl1.reset();
  cl2.reset();
  r2c1.setReference(ourRef,null);
  myErrors.checkThat(cl1.myAddedRef.size(),equalTo(0));
  myErrors.checkThat(cl1.myRemovedRef.size(),equalTo(1));
  myErrors.checkThat(cl2.myChangedReferences.size(),equalTo(1));
  myErrors.checkThat(cl2.myChangedReferences.contains(ourRef.getRoleName()),equalTo(true));
  cl1.reset();
  cl2.reset();
  r1.setReferenceTarget(ourRef,null);
  myErrors.checkThat(cl1.myAddedRef.size(),equalTo(0));
  myErrors.checkThat(cl1.myRemovedRef.size(),equalTo(1));
  myErrors.checkThat(cl2.myChangedReferences.size(),equalTo(1));
  myErrors.checkThat(cl2.myChangedReferences.contains(ourRef.getRoleName()),equalTo(true));
  m1f.detachChangeListeners(cl1,cl2);
}
