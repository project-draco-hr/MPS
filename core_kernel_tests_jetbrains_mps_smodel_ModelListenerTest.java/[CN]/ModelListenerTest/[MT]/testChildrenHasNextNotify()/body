{
  final TestModelFactory m1f=new TestModelFactory();
  final TestModelFactory m2f=new TestModelFactory();
  final SModel m1=m1f.createModel(1,1);
  final SModel m2=m2f.createModel(1,3);
  myTestModelAccess.enableRead();
  m1f.attachTo(myTestRepo);
  m2f.attachTo(myTestRepo);
  AccessCountListener1 cl1=new AccessCountListener1();
  AccessCountListener2 cl2=new AccessCountListener2();
  AccessCountListener3 cl3=new AccessCountListener3();
  final SNode r1=m1f.getRoot(1);
  m1f.attachAccessListeners(cl1,cl2,cl3);
  Assert.assertTrue(r1.getChildren().iterator().hasNext());
  myErrors.checkThat(cl1.myVisitedNodes,equalTo(0));
  myErrors.checkThat(cl2.myVisitedNodes,equalTo(0));
  myErrors.checkThat(cl3.myVisitedNodes,equalTo(0));
  cl1.reset();
  cl2.reset();
  cl3.reset();
  Assert.assertTrue(r1.getChildren(ourRole).iterator().hasNext());
  myErrors.checkThat(cl1.myVisitedNodes,equalTo(0));
  myErrors.checkThat(cl2.myVisitedNodes,equalTo(0));
  myErrors.checkThat(cl3.myVisitedNodes,equalTo(0));
  m1f.detachAccessListeners(cl1,cl2,cl3);
  cl1.reset();
  cl2.reset();
  cl3.reset();
  final SNode r2=m2f.getRoot(1);
  m2f.attachAccessListeners(cl1,cl2,cl3);
  Assert.assertTrue(r2.getChildren().iterator().hasNext());
  myErrors.checkThat(cl1.myVisitedNodes,equalTo(0));
  myErrors.checkThat(cl2.myVisitedNodes,equalTo(0));
  myErrors.checkThat(cl3.myVisitedNodes,equalTo(0));
  cl1.reset();
  cl2.reset();
  cl3.reset();
  Assert.assertTrue(r2.getChildren(ourRole).iterator().hasNext());
  myErrors.checkThat(cl1.myVisitedNodes,equalTo(0));
  myErrors.checkThat(cl2.myVisitedNodes,equalTo(0));
  myErrors.checkThat(cl3.myVisitedNodes,equalTo(0));
  m2f.detachAccessListeners(cl1,cl2,cl3);
  cl1.reset();
  cl2.reset();
  cl3.reset();
  final SNode n1=r1.getChildren(ourRole).iterator().next();
  m1f.attachAccessListeners(cl1,cl2,cl3);
  Assert.assertFalse(n1.getChildren().iterator().hasNext());
  myErrors.checkThat(cl1.myVisitedNodes,equalTo(0));
  myErrors.checkThat(cl2.myVisitedNodes,equalTo(0));
  myErrors.checkThat(cl3.myVisitedNodes,equalTo(0));
  cl1.reset();
  cl2.reset();
  cl3.reset();
  Assert.assertFalse(n1.getChildren(ourRole).iterator().hasNext());
  myErrors.checkThat(cl1.myVisitedNodes,equalTo(0));
  myErrors.checkThat(cl2.myVisitedNodes,equalTo(0));
  myErrors.checkThat(cl3.myVisitedNodes,equalTo(0));
  m1f.detachAccessListeners(cl1,cl2,cl3);
}
