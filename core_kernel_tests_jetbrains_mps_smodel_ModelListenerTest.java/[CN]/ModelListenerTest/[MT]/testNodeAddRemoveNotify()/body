{
  final TestModelFactory m1f=new TestModelFactory();
  SModel m1=m1f.createModel(3,2);
  myTestModelAccess.enableWrite();
  m1f.attachTo(myTestRepo);
  final SNode r1=m1f.getRoot(1);
  final SNode c=m1f.createNode();
  ChangeListener1 cl1=new ChangeListener1();
  ChangeListener2 cl2=new ChangeListener2();
  m1f.attachChangeListeners(cl1,cl2);
  r1.addChild(ourRole,c);
  myErrors.checkThat(cl1.myAdded.size(),equalTo(1));
  myErrors.checkThat(cl2.myAdded.size(),equalTo(1));
  myErrors.checkThat(cl1.myAdded.contains(c),equalTo(true));
  myErrors.checkThat(cl2.myAdded.contains(c),equalTo(true));
  myErrors.checkThat(m1f.isEditableChanged(),equalTo(true));
  cl1.reset();
  cl2.reset();
  m1f.clearEditableChanged();
  r1.removeChild(c);
  myErrors.checkThat(cl1.myRemoved.size(),equalTo(1));
  myErrors.checkThat(cl1.myBeforeRemoved.size(),equalTo(1));
  myErrors.checkThat(cl2.myRemoved.size(),equalTo(1));
  myErrors.checkThat(cl1.myRemoved.contains(c),equalTo(true));
  myErrors.checkThat(cl1.myBeforeRemoved.contains(c),equalTo(true));
  myErrors.checkThat(cl2.myRemoved.contains(c),equalTo(true));
  myErrors.checkThat(m1f.isEditableChanged(),equalTo(true));
  cl1.reset();
  cl2.reset();
  final SNode anchor=r1.getFirstChild();
  m1f.clearEditableChanged();
  r1.insertChildBefore(ourRole,c,anchor);
  myErrors.checkThat(c.getNextSibling(),equalTo(anchor));
  myErrors.checkThat(cl1.myAdded.size(),equalTo(1));
  myErrors.checkThat(cl2.myAdded.size(),equalTo(1));
  myErrors.checkThat(cl1.myAdded.contains(c),equalTo(true));
  myErrors.checkThat(cl2.myAdded.contains(c),equalTo(true));
  myErrors.checkThat(m1f.isEditableChanged(),equalTo(true));
  m1f.detachChangeListeners(cl1,cl2);
}
