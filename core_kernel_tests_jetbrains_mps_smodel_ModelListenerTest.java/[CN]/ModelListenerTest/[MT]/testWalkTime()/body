{
  SModel m1=new TestModelFactory().createModel(10,25,15,5,4);
  final int actualNodes=countTreeNodes(m1.getRootNodes());
  final long baselineMillis=100;
  final int testRuns=5;
  long elapsed=0;
  for (int i=0; i < testRuns; i++) {
    final long start=System.nanoTime();
    readTreeNodes(m1.getRootNodes());
    elapsed+=System.nanoTime() - start;
  }
  long averageMillis=elapsed / 1000000 / testRuns;
  if (averageMillis > baselineMillis) {
    final String fmt="Walking model of %d nodes was expected to take less than %d ms. Actual average time for %d runs was %d ms";
    Assert.fail(String.format(fmt,actualNodes,baselineMillis,testRuns,averageMillis));
  }
  if (averageMillis < baselineMillis / 4) {
    final String fmt="Walking model of %d nodes took less than 25%% of baseline. Actual average time for %d runs was %d ms, while baseline is %d ms. Re-consider baseline value";
    Assert.fail(String.format(fmt,actualNodes,testRuns,averageMillis,baselineMillis));
  }
}
