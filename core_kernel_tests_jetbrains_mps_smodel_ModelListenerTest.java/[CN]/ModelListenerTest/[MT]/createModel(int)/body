{
  ArrayDeque<SNode> thisLevel=new ArrayDeque<SNode>();
  ArrayDeque<SNode> nextLevel=new ArrayDeque<SNode>();
  final SNode top=new SNode(ourConcept);
  thisLevel.add(top);
  for (  int count : nodesAtLevel) {
    while (!thisLevel.isEmpty()) {
      SNode parent=thisLevel.removeFirst();
      for (int i=0; i < count; i++) {
        SNode c=new SNode(ourConcept);
        final String v=Integer.toString(i + 1);
        c.setProperty(SNodeUtil.property_INamedConcept_name,v);
        c.setProperty(SNodeUtil.property_BaseConcept_alias,v);
        parent.addChild(ourRole,c);
        nextLevel.add(c);
      }
    }
    ArrayDeque<SNode> t=thisLevel;
    thisLevel=nextLevel;
    nextLevel=t;
  }
  final SModel modelData=new SModel(new SModelReference(new ModuleReference("M",ModuleId.regular()),SModelId.generate(),"m"));
  for (  SNode c : top.getChildren(ourRole)) {
    modelData.addRootNode(c);
  }
  return new TestModelBase(modelData);
}
