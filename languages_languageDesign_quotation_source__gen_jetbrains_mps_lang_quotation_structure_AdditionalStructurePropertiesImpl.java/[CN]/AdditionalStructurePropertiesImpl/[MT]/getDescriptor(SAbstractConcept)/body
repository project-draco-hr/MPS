{
{
    SAbstractConcept cncpt=c;
    Integer preIndex=indices_4qogsf_a0s.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return props_AbstractAntiquotation;
      }
    break;
case 1:
  if (true) {
    return props_Antiquotation;
  }
break;
case 2:
if (true) {
return props_GeneratorInternal_InternalReferenceHolder;
}
break;
case 3:
if (true) {
return props_GeneratorInternal_PropertyDescriptor;
}
break;
case 4:
if (true) {
return props_GeneratorInternal_ReferenceDescriptor;
}
break;
case 5:
if (true) {
return props_ListAntiquotation;
}
break;
case 6:
if (true) {
return props_NodeBuilder;
}
break;
case 7:
if (true) {
return props_NodeBuilderExpression;
}
break;
case 8:
if (true) {
return props_NodeBuilderInitLink;
}
break;
case 9:
if (true) {
return props_NodeBuilderInitPart;
}
break;
case 10:
if (true) {
return props_NodeBuilderInitProperty;
}
break;
case 11:
if (true) {
return props_NodeBuilderList;
}
break;
case 12:
if (true) {
return props_NodeBuilderNode;
}
break;
case 13:
if (true) {
return props_NodeBuilderRef;
}
break;
case 14:
if (true) {
return props_PropertyAntiquotation;
}
break;
case 15:
if (true) {
return props_Quotation;
}
break;
case 16:
if (true) {
return props_ReferenceAntiquotation;
}
break;
default :
}
}
throw new IllegalStateException();
}
