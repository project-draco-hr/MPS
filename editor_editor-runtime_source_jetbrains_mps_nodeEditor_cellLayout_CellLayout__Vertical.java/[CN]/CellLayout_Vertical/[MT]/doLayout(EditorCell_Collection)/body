{
  Iterable<EditorCell> cells=editorCells.getContentCells();
  EditorCell closingBrace=editorCells.getClosingBrace();
  EditorCell openingBrace=editorCells.getOpeningBrace();
  boolean usesBraces=editorCells.usesBraces();
  if (usesBraces) {
    closingBrace.relayout();
    openingBrace.moveTo(editorCells.getX(),editorCells.getY());
    openingBrace.relayout();
  }
  final int x=usesBraces ? editorCells.getX() + openingBrace.getWidth() : editorCells.getX();
  final int y=editorCells.getY();
  int lastCellWidth;
  int braceIndent=0;
  int width=0;
  int height=0;
  for (  EditorCell editorCell : cells) {
    editorCell.moveTo(x,y + height + editorCell.getTopInset());
    editorCell.relayout();
    int cellHeight=editorCell.getHeight();
    int indent=getBracesIndent(editorCell);
    braceIndent=Math.max(indent,braceIndent);
    height+=cellHeight;
  }
  for (  EditorCell editorCell : cells) {
    lastCellWidth=editorCell.getWidth();
    int indent=getBracesIndent(editorCell);
    int delta=braceIndent - indent;
    width=Math.max(width,lastCellWidth + delta);
  }
  for (  EditorCell editorCell : cells) {
    int cellX=editorCell.getX();
    int cellY=editorCell.getY();
    int newCellX=cellX;
    CellAlign cellAlign=editorCell.getStyle().get(StyleAttributes.HORIZONTAL_ALIGN);
    if (cellAlign == CellAlign.CENTER && !myGridLayout) {
      newCellX=cellX + (width - editorCell.getWidth()) / 2;
    }
 else     if (cellAlign == CellAlign.RIGHT && !myGridLayout) {
      newCellX=cellX + width - editorCell.getWidth();
    }
    if (newCellX != cellX) {
      editorCell.moveTo(newCellX,cellY);
      editorCell.relayout();
    }
  }
  editorCells.setArtificialBracesIndent(braceIndent);
  for (  EditorCell editorCell : cells) {
    int cellX=editorCell.getX();
    int cellY=editorCell.getY();
    int indent=getBracesIndent(editorCell);
    int newCellX=cellX - indent + braceIndent;
    if (newCellX != cellX) {
      editorCell.moveTo(newCellX,cellY);
      editorCell.relayout();
    }
  }
  if (myGridLayout) {
    TIntArrayList columnWidths=new TIntArrayList();
    for (    EditorCell editorCell : cells) {
      if (editorCell instanceof EditorCell_Collection && ((EditorCell_Collection)editorCell).getCellLayout() instanceof CellLayout_Horizontal) {
        EditorCell_Collection collectionCell=(EditorCell_Collection)editorCell;
        int columnNumber=0;
        for (        EditorCell columnCell : collectionCell) {
          if (columnNumber < columnWidths.size()) {
            columnWidths.set(columnNumber,Math.max(columnWidths.get(columnNumber),columnCell.getWidth()));
          }
 else {
            columnWidths.add(columnCell.getWidth());
          }
          columnNumber++;
        }
      }
    }
    for (    EditorCell editorCell : cells) {
      if (editorCell instanceof EditorCell_Collection && ((EditorCell_Collection)editorCell).getCellLayout() instanceof CellLayout_Horizontal) {
        EditorCell_Collection collectionCell=(EditorCell_Collection)editorCell;
        int lineWidth=0;
        int columnNumber=0;
        for (        EditorCell columnCell : collectionCell) {
          setX(columnCell,x + lineWidth);
          int columnWidth=columnWidths.get(columnNumber);
          columnCell.setWidth(columnWidth);
          lineWidth+=columnWidth;
          columnNumber++;
        }
        editorCell.setWidth(lineWidth);
        width=Math.max(width,lineWidth);
      }
    }
  }
  if (usesBraces) {
    closingBrace.setY(y + height - closingBrace.getHeight());
    if (myGridLayout) {
      closingBrace.setX(x + width);
      width+=closingBrace.getWidth();
    }
 else {
      EditorCell lastCell=editorCells.lastContentCell();
      while ((lastCell instanceof EditorCell_Collection) && !((EditorCell_Collection)lastCell).isFolded()) {
        lastCell=((EditorCell_Collection)lastCell).lastCell();
      }
      if (lastCell == null) {
        lastCell=editorCells.lastContentCell() != null ? editorCells.lastContentCell() : openingBrace;
      }
      closingBrace.setX(lastCell.getX() + lastCell.getWidth());
      width=Math.max(width,(closingBrace.getX() - x) + closingBrace.getWidth());
    }
    width+=openingBrace.getWidth();
  }
  editorCells.setWidth(width);
  editorCells.setHeight(height);
}
