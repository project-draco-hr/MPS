{
  final Wrappers._T<List<SModel>> models=new Wrappers._T<List<SModel>>();
  event.getData(MPSCommonDataKeys.MPS_PROJECT).getModelAccess().runReadAction(new Runnable(){
    public void run(){
      Iterable<? extends SModule> projectModules=event.getData(MPSCommonDataKeys.MPS_PROJECT).getModulesWithGenerators();
      final ModelGenerationStatusManager mgsm=ModelGenerationStatusManager.getInstance();
      models.value=ListSequence.fromListWithValues(new ArrayList<SModel>(),Sequence.fromIterable(projectModules).translate(new ITranslator2<SModule,SModel>(){
        public Iterable<SModel> translate(        SModule it){
          return (Iterable<SModel>)it.getModels();
        }
      }
).where(new IWhereFilter<SModel>(){
        public boolean accept(        SModel it){
          return mgsm.generationRequired(it);
        }
      }
));
    }
  }
);
  new MakeActionImpl(new MakeActionParameters(event.getData(MPSCommonDataKeys.MPS_PROJECT)).models(models.value).cleanMake(true)).executeAction();
}
