{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.constructors.structure.CustomArgumentClause");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      SNode wrappedConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Type");
      IChildNodeSetter setter=new AbstractChildNodeSetter(){
        private SNode wrapNode(        SNode nodeToWrap,        SModel model,        @Nullable EditorContext editorContext){
          SNode result=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xae47ad35abd486cL,0xac0f298884f39393L,0x4aa85872b742b6baL,"jetbrains.mps.baseLanguage.constructors.structure.CustomArgumentClause")),null);
          SNode parameter=SNodeFactoryOperations.addNewChild(result,MetaAdapterFactory.getContainmentLink(0xae47ad35abd486cL,0xac0f298884f39393L,0x4aa85872b742b6baL,0x4aa85872b7431821L,"parameter"),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xae47ad35abd486cL,0xac0f298884f39393L,0x4aa85872b7431819L,"jetbrains.mps.baseLanguage.constructors.structure.CustomConstructorParameter")));
          SLinkOperations.setTarget(parameter,MetaAdapterFactory.getContainmentLink(0xae47ad35abd486cL,0xac0f298884f39393L,0x4aa85872b7431819L,0x4aa85872b7433028L,"type"),nodeToWrap);
          return result;
        }
        public boolean returnSmallPart(        SNode nodeToWrap){
          return false;
        }
        @Override public SNode doExecute(        SNode pn,        SNode oc,        SNode nc,        @Nullable EditorContext editorContext){
          SNode wrappedNode=wrapNode(nc,nc.getModel(),editorContext);
          _context.getChildSetter().execute(_context.getParentNode(),_context.getCurrentTargetNode(),wrappedNode,editorContext);
          return (returnSmallPart(nc) ? nc : wrappedNode);
        }
      }
;
      ListSequence.fromList(result).addSequence(ListSequence.fromList(ModelActions.createChildNodeSubstituteActions(_context.getParentNode(),_context.getCurrentTargetNode(),wrappedConcept,setter,operationContext)));
    }
  }
  return result;
}
