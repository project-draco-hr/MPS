{
{
    SAbstractConcept cncpt=c;
    Integer preIndex=indices_4qogsf_a0lb.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return props_GenerationContextOp_Base;
      }
    break;
case 1:
  if (true) {
    return props_GenerationContextOp_ContextVarRef;
  }
break;
case 2:
if (true) {
return props_GenerationContextOp_CopyWithTrace;
}
break;
case 3:
if (true) {
return props_GenerationContextOp_CreateUniqueName;
}
break;
case 4:
if (true) {
return props_GenerationContextOp_DirtyNode;
}
break;
case 5:
if (true) {
return props_GenerationContextOp_GenParameterRef;
}
break;
case 6:
if (true) {
return props_GenerationContextOp_GetCopiedOutputByInput;
}
break;
case 7:
if (true) {
return props_GenerationContextOp_GetExport;
}
break;
case 8:
if (true) {
return props_GenerationContextOp_GetInputModel;
}
break;
case 9:
if (true) {
return props_GenerationContextOp_GetInvocationContext;
}
break;
case 10:
if (true) {
return props_GenerationContextOp_GetOriginalCopiedInputByOutput;
}
break;
case 11:
if (true) {
return props_GenerationContextOp_GetOriginalInputModel;
}
break;
case 12:
if (true) {
return props_GenerationContextOp_GetOutputByLabel;
}
break;
case 13:
if (true) {
return props_GenerationContextOp_GetOutputByLabelAndInput;
}
break;
case 14:
if (true) {
return props_GenerationContextOp_GetOutputByLabelAndInputAndReferenceScope;
}
break;
case 15:
if (true) {
return props_GenerationContextOp_GetOutputListByLabelAndInput;
}
break;
case 16:
if (true) {
return props_GenerationContextOp_GetOutputModel;
}
break;
case 17:
if (true) {
return props_GenerationContextOp_GetPrevInputByLabel;
}
break;
case 18:
if (true) {
return props_GenerationContextOp_GetTemplateNode;
}
break;
case 19:
if (true) {
return props_GenerationContextOp_LinkPatternRef;
}
break;
case 20:
if (true) {
return props_GenerationContextOp_NodePatternRef;
}
break;
case 21:
if (true) {
return props_GenerationContextOp_ParameterRef;
}
break;
case 22:
if (true) {
return props_GenerationContextOp_PatternRef;
}
break;
case 23:
if (true) {
return props_GenerationContextOp_PropertyPatternRef;
}
break;
case 24:
if (true) {
return props_GenerationContextOp_RegisterLabel;
}
break;
case 25:
if (true) {
return props_GenerationContextOp_SessionObjectAccess;
}
break;
case 26:
if (true) {
return props_GenerationContextOp_ShowErrorMessage;
}
break;
case 27:
if (true) {
return props_GenerationContextOp_ShowInfoMessage;
}
break;
case 28:
if (true) {
return props_GenerationContextOp_ShowMessageBase;
}
break;
case 29:
if (true) {
return props_GenerationContextOp_ShowWarningMessage;
}
break;
case 30:
if (true) {
return props_GenerationContextOp_StepObjectAccess;
}
break;
case 31:
if (true) {
return props_GenerationContextOp_TransientObjectAccess;
}
break;
case 32:
if (true) {
return props_GenerationContextOp_UserObjectAccessBase;
}
break;
case 33:
if (true) {
return props_GenerationContextOp_VarRef;
}
break;
case 34:
if (true) {
return props_GenerationContextType;
}
break;
case 35:
if (true) {
return props_TemplateFunctionParameter_generationContext;
}
break;
default :
}
}
throw new IllegalStateException();
}
