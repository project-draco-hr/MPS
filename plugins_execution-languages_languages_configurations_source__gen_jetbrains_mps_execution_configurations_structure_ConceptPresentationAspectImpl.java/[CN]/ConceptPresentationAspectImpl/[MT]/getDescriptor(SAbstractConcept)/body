{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case 0:
    return props_AbstractRunConfigurationExecutor;
case 1:
  return props_BeforeTask;
case 2:
return props_BeforeTaskCall;
case 3:
return props_BeforeTaskParameter;
case 4:
return props_BeforeTaskParameterReference;
case 5:
return props_ConfigurationFromExecutorReference;
case 6:
return props_ConsoleCreator;
case 7:
return props_ConsoleType;
case 8:
return props_ContextExpression;
case 9:
return props_Create_ConceptFunction;
case 10:
return props_DebuggerSettings_Parameter;
case 11:
return props_EnvironmentExpression;
case 12:
return props_ExecuteBeforeTask_ConceptFunction;
case 13:
return props_ExecuteConfiguration_Function;
case 14:
return props_Executor_Parameter;
case 15:
return props_GetProjectOperation;
case 16:
return props_ModelSource;
case 17:
return props_ModuleSource;
case 18:
return props_NodeListSource;
case 19:
return props_NodeSource;
case 20:
return props_ProjectSource;
case 21:
return props_Project_Parameter;
case 22:
return props_RunConfiguration;
case 23:
return props_RunConfigurationCreator;
case 24:
return props_RunConfigurationExecutor;
case 25:
return props_RunConfigurationKind;
case 26:
return props_RunConfigurationProducer;
case 27:
return props_RunConfigurationProducerPart;
case 28:
return props_RunConfigurationSource;
case 29:
return props_SModelSource;
case 30:
return props_SModuleSource;
case 31:
return props_Source_ConceptFunctionParameter;
case 32:
return props_StartProcessHandlerStatement;
}
throw new IllegalStateException("Unknown concept " + c);
}
