{
  List<Set<M>> result=new LinkedList<Set<M>>();
  Graph<ModuleDecorator<M>> g=new Graph<ModuleDecorator<M>>();
  Map<IModule,ModuleDecorator<M>> map=new LinkedHashMap<IModule,ModuleDecorator<M>>();
  for (  M m : modules) {
    ModuleDecorator<M> dec=new ModuleDecorator<M>(m);
    map.put(m,dec);
    g.add(dec);
  }
  for (  ModuleDecorator<M> m : g.getData()) {
    m.fill(map);
  }
  List<Set<ModuleDecorator<M>>> sets=Graphs.getInstance().findStronglyConnectedComponents(g);
  for (  Set<ModuleDecorator<M>> set : sets) {
    Set<M> mset=new LinkedHashSet<M>();
    result.add(mset);
    for (    ModuleDecorator<M> md : set) {
      mset.add(md.getModule());
    }
  }
  Collections.reverse(result);
  return result;
}
