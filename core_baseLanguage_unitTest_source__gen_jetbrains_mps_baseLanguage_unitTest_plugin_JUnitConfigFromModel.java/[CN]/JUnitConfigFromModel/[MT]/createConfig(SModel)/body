{
  if (Sequence.fromIterable(TestUtils.getModelTests(parameter)).isEmpty()) {
    return;
  }
  final String name=SModelOperations.getModelName(parameter);
  JUnitConfigFromModel.this.setSourceElement(new MPSPsiElement(parameter));
{
    JUnit_ConfigurationType configType=ContainerUtil.findInstance(Extensions.getExtensions(ConfigurationType.CONFIGURATION_TYPE_EP),JUnit_ConfigurationType.class);
    DefaultJUnit_Configuration _config=new DefaultJUnit_Configuration(JUnitConfigFromModel.this.getContext().getProject(),findFactory(configType,"jetbrains.mps.baseLanguage.unitTest.plugin.DefaultJUnit_Factory"),"NewConfig"){
      @Override public String suggestedName(){
        return "Tests in '" + name + "'";
      }
    }
;
    _config.setName(name);
    _config.getStateObject().type=JUnitRunTypes.MODEL;
    _config.getStateObject().model=parameter.getSModelFqName().toString();
    JUnitConfigFromModel.this.myConfig=_config;
  }
}
