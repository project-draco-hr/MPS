{
  if (ListSequence.fromList(TestRunUtil.getModelTests(parameter)).isEmpty()) {
    return;
  }
  final String name=SModelOperations.getModelName(parameter);
  JUnitConfigFromModel.this.setSourceElement(new MPSPsiElement(parameter));
  boolean isCompileInMPS=parameter.getModelDescriptor().getModule().isCompileInMPS();
{
    JUnit_ConfigurationType configType=ContainerUtil.findInstance(Extensions.getExtensions(JUnit_ConfigurationType.CONFIGURATION_TYPE_EP),JUnit_ConfigurationType.class);
    DefaultJUnit_Configuration _config=new DefaultJUnit_Configuration(JUnitConfigFromModel.this.getContext().getProject(),configType.getConfigurationFactories()[0],"NewConfig"){
      @Override public String suggestedName(){
        return "Tests in '" + name + "'";
      }
    }
;
    _config.setName(name);
    _config.getStateObject().type=JUnitRunTypes.MODEL;
    _config.getStateObject().model=parameter.getSModelFqName().toString();
    _config.getStateObject().compileInMPS=isCompileInMPS;
    JUnitConfigFromModel.this.myConfig=_config;
  }
}
