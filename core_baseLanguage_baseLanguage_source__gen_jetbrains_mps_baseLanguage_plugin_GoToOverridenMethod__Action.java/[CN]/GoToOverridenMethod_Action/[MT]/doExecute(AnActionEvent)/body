{
  try {
    final Wrappers._T<Set<Tuples._2<SNode,SNode>>> overridenMethods=new Wrappers._T<Set<Tuples._2<SNode,SNode>>>();
    final String[] methodName=new String[1];
    ProgressManager.getInstance().run(new Task.Modal(GoToOverridenMethod_Action.this.project,"Searchig...",true){
      public void run(      @NotNull ProgressIndicator p0){
        ModelAccess.instance().runReadAction(new Runnable(){
          public void run(){
            overridenMethods.value=GoToOverridenMethod_Action.this.getOverridenMethod();
            methodName[0]=SPropertyOperations.getString(GoToOverridenMethod_Action.this.getInstanceMethodDeclaration(),"name");
          }
        }
);
      }
    }
);
    RelativePoint relativePoint;
    if (event.getInputEvent() instanceof MouseEvent) {
      relativePoint=new RelativePoint((MouseEvent)event.getInputEvent());
    }
 else {
      Rectangle cellBounds=GoToOverridenMethod_Action.this.editorContext.getSelectedCell().getBounds();
      Point point=new Point(((int)cellBounds.getMinX()),((int)cellBounds.getMaxY()));
      relativePoint=new RelativePoint(GoToOverridenMethod_Action.this.editorComponent,point);
    }
    GoToHelper.showOverridenMethodsMenu(SetSequence.fromSet(overridenMethods.value).select(new ISelector<Tuples._2<SNode,SNode>,SNode>(){
      public SNode select(      Tuples._2<SNode,SNode> it){
        return it._0();
      }
    }
).toListSequence(),relativePoint,GoToOverridenMethod_Action.this.project,methodName[0]);
  }
 catch (  Throwable t) {
    LOG.error("User's action execute method failed. Action:" + "GoToOverridenMethod",t);
  }
}
