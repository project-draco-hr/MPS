{
  SContainmentLink containmentLink=node.getContainmentLink();
  SNode parent=SNodeOperations.getParent(node);
  SNode newComment=CommentUtil.getCommentAttribute(parent,containmentLink);
  if (newComment == null) {
    newComment=AttributeOperations.createAndAddAttribute(parent,new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x3dcc194340c24debL,"jetbrains.mps.lang.core.structure.BaseCommentAttribute")),"jetbrains.mps.lang.core.structure.BaseCommentAttribute");
    BehaviorReflection.invokeNonVirtual(Void.class,newComment,"jetbrains.mps.lang.core.structure.BaseCommentAttribute","call_setLink_3078666699043525922",new Object[]{containmentLink});
  }
  ListSequence.fromList(SLinkOperations.getChildren(newComment,MetaAdapterFactory.getContainmentLink(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x3dcc194340c24debL,0x2ab99f0d2248e89dL,"commentedNodes"))).addElement(node);
  if (!(containmentLink.isOptional()) && containmentLink.getTargetConcept() instanceof SConcept) {
    parent.addChild(containmentLink,new jetbrains.mps.smodel.SNode(((SConcept)containmentLink.getTargetConcept())));
  }
}
