{
  checkInitialized();
  @NotNull Object[] parametersArray=getParametersArray(parameters);
  if (node != null)   checkForConcept(node.getConcept());
  checkForNPE(node,method);
  checkParameters(method,parametersArray);
  if (method.getModifiers().isPrivate()) {
    return invokeOwn(node,method,parametersArray);
  }
  Iterable<SAbstractConcept> ancestors=myAncestorCache.getAncestorsVirtualInvocationOrder();
  for (  SAbstractConcept ancestor : ancestors) {
    BHDescriptor bhDescriptor=getBHDescriptor(ancestor);
    if (bhDescriptor instanceof BaseBHDescriptor) {
      BaseBHDescriptor bhDescriptor1=(BaseBHDescriptor)bhDescriptor;
      if (bhDescriptor1.hasDeclaredMethod(method)) {
        return bhDescriptor1.invokeOwn(node,method,parametersArray);
      }
    }
 else {
      throw new IllegalStateException("Unknown behavior descriptor in the '" + getConcept() + "' ancestor tree : '"+ bhDescriptor+ "'");
    }
  }
  throw new BHMethodNotFoundException(this,method);
}
