{
  ApplicationManager.getApplication().executeOnPooledThread(new Runnable(){
    public void run(){
      final SModel model=((BaseConsoleTab)context.getOutputWindow()).getConsoleModel();
      boolean result=ConsoleUtil.make(context.getProject(),model);
      if (!(result)) {
        return;
      }
      SwingUtilities.invokeLater(new Runnable(){
        public void run(){
          try {
            SModule module=model.getModule();
            String name=model.getModelName() + ".Main";
            Class<?> aClass=ClassLoaderManager.getInstance().getClass(module,name);
            if (aClass == null) {
              throw new ClassNotFoundException("No class " + name + " for module "+ module);
            }
            Method[] methods=aClass.getMethods();
            for (            final Method method : methods) {
              if (method.getName().equals("execute")) {
                beforeCallback.run();
                ModelAccess.instance().runWriteActionInCommand(new Runnable(){
                  public void run(){
                    try {
                      method.invoke(null,new Object[]{context,console});
                    }
 catch (                    IllegalAccessException ignore) {
                      if (LOG.isEnabledFor(Level.ERROR)) {
                        LOG.error("Exception on query loading",ignore);
                      }
                    }
catch (                    InvocationTargetException ignore) {
                      if (LOG.isEnabledFor(Level.ERROR)) {
                        LOG.error("Exception on query loading",ignore);
                      }
                    }
                  }
                }
);
                afterCallback.run();
              }
            }
          }
 catch (          ClassNotFoundException ignore) {
            if (LOG.isEnabledFor(Level.ERROR)) {
              LOG.error("Exception on query loading",ignore);
            }
          }
        }
      }
);
    }
  }
);
}
