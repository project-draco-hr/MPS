{
  SAbstractConcept concept=SNodeOperations.getConcept(node);
  for (  SContainmentLink link : CollectionSequence.fromCollection(concept.getContainmentLinks())) {
    List<SNode> children=SNodeOperations.getChildren(node,link);
    if (!(link.isOptional()) && ListSequence.fromList(children).isEmpty()) {
      if (link.equals(MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1fdL,"returnType")) && concept.equals(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b204L,"jetbrains.mps.baseLanguage.structure.ConstructorDeclaration"))) {
        continue;
      }
      component.addError(node,"No children in obligatory role \"" + link.getRoleName(),null);
    }
    if (!(link.isMultiple()) && ListSequence.fromList(children).count() > 1) {
      component.addError(node,ListSequence.fromList(children).count() + " children in role \"" + link.getRoleName()+ ", which has single-cardinality",null);
    }
  }
  for (  SReferenceLink link : CollectionSequence.fromCollection(concept.getReferenceLinks())) {
    if (!(link.isOptional())) {
      if (SNodeOperations.getReference(node,link) == null) {
        component.addError(node,"No reference in obligatory role \"" + link.getRoleName(),null,new ReferenceMessageTarget(link.getRoleName()));
      }
    }
  }
}
