{
synchronized (LOCK) {
    if (myCache.containsKey(path))     return myCache.get(path);
    IFile iFile=FileSystem.getInstance().getFileByPath(path);
    path=iFile.getPath();
    boolean isPackaged=FileSystem.getInstance().isPackaged(iFile) || path.endsWith(".jar") || path.endsWith(".zip");
    boolean isDirectory=iFile.isDirectory();
    File file=new File(path);
    boolean exists=iFile.exists() || file.exists();
    RealClassPathItem item;
    if (!exists) {
      String moduleString=requestor == null ? "" : " in " + requestor;
      LOG.debug(String.format("Can't load class path item %s%s.%s",path,moduleString,isDirectory ? " Execute make in IDEA." : ""));
      item=new NonExistingClassPathItem(path);
    }
 else     if (isPackaged) {
      item=new JarFileClassPathItem(path);
    }
 else {
      if (!isDirectory) {
        throw new IllegalArgumentException("Path variable must point to a directory or to a jar/zip location");
      }
      item=new FileClassPathItem(path);
    }
    myCache.put(path,item);
    return item;
  }
}
