{
  if (SConceptOperations.isSubConceptOf(kind,"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration")) {
    Scope nextScope=Scope.getScope(SNodeOperations.getParent(thisNode),child,kind);
    List<SNode> result=new ArrayList<SNode>();
    for (    SNode childPart : AbstractLoopStatement_Behavior.call_getOrderedParts_1955452033143960289(thisNode)) {
      if (ListSequence.fromList(SNodeOperations.getAncestors(child,null,false)).contains(childPart)) {
        break;
      }
      if (SNodeOperations.isInstanceOf(childPart,"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration")) {
        ListSequence.fromList(result).addElement(SNodeOperations.cast(childPart,"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration"));
      }
    }
    Scope currentScope=new ISearchScope.Adapter(new SimpleSearchScope(ListSequence.fromListWithValues(new ArrayList<SNode>(),ListSequence.fromList(result).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return (it != null);
      }
    }
))));
    return (nextScope == null ? currentScope : new CompositeScope(currentScope,nextScope));
  }
  return null;
}
