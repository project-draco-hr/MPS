{
  SNode statement;
  SNode ifFalseStatement=SLinkOperations.getTarget(node,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b217L,0xfc092b6b76L,"ifFalseStatement"));
  List<SNode> statements=SLinkOperations.getChildren(SLinkOperations.getTarget(SNodeOperations.cast(ifFalseStatement,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc092b6b77L,"jetbrains.mps.baseLanguage.structure.BlockStatement")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc092b6b77L,0xfc092b6b78L,"statements")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b200L,0xf8cc6bf961L,"statement"));
  if (ListSequence.fromList(statements).isEmpty()) {
    statement=SNodeFactoryOperations.createNewNode(SNodeOperations.getModel(node),SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b215L,"jetbrains.mps.baseLanguage.structure.Statement")),null);
  }
 else {
    statement=ListSequence.fromList(statements).first();
  }
  SNodeOperations.replaceWithAnother(ifFalseStatement,statement);
}
