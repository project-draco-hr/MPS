{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)LanguageRegistry.getInstance().getLanguage(MetaAdapterFactory.getLanguage(SLanguageId.deserialize("fa8aeae9-4df9-4e13-bfb1-9b04c67ddb77"),"jetbrains.mps.debugger.java.customViewers")).getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case 0:
    return props_CanWrapHighLevelValue_ConceptFunction;
case 1:
  return props_CustomWatchable;
case 2:
return props_CustomWatchablesContainer;
case 3:
return props_GetHighLevelValuePresentation_ConceptFunction;
case 4:
return props_GetHighLevelWatchablesBlock_ConceptFunction;
case 5:
return props_HighLevelCustomViewer;
case 6:
return props_HighLevelValue_ConceptFunctionParameter;
case 7:
return props_HighLevelWatchableCreator;
case 8:
return props_ToProcessMethod;
case 9:
return props_WatchableListType;
case 10:
return props_WatchableType;
case 11:
return props_WatchablesListCreator;
}
throw new IllegalStateException();
}
