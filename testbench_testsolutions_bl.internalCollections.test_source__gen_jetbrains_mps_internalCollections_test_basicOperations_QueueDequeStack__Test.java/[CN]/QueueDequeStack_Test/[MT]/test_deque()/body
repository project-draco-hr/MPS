{
  Deque<Integer> d=DequeSequence.fromDequeNew(new LinkedList<Integer>());
  DequeSequence.fromDequeNew(d).addFirstElement(1);
  DequeSequence.fromDequeNew(d).addFirstElement(2);
  DequeSequence.fromDequeNew(d).addFirstElement(3);
  Assert.assertSame(3,DequeSequence.fromDequeNew(d).first());
  Assert.assertSame(3,DequeSequence.fromDequeNew(d).removeFirstElement());
  DequeSequence.fromDequeNew(d).addLastElement(4);
  DequeSequence.fromDequeNew(d).addLastElement(5);
  DequeSequence.fromDequeNew(d).addLastElement(6);
  Assert.assertSame(2,DequeSequence.fromDequeNew(d).first());
  Assert.assertSame(2,DequeSequence.fromDequeNew(d).peekElement());
  Assert.assertSame(6,DequeSequence.fromDequeNew(d).last());
  Assert.assertSame(6,DequeSequence.fromDequeNew(d).removeLastElement());
  Assert.assertSame(2,DequeSequence.fromDequeNew(d).removeFirstElement());
  Assert.assertSame(1,DequeSequence.fromDequeNew(d).first());
  Assert.assertSame(1,DequeSequence.fromDequeNew(d).peekElement());
  Assert.assertSame(1,DequeSequence.fromDequeNew(d).removeFirstElement());
  Assert.assertSame(4,DequeSequence.fromDequeNew(d).first());
  Assert.assertSame(4,DequeSequence.fromDequeNew(d).peekElement());
  Assert.assertSame(4,DequeSequence.fromDequeNew(d).removeFirstElement());
  Assert.assertSame(5,DequeSequence.fromDequeNew(d).last());
  Assert.assertSame(5,DequeSequence.fromDequeNew(d).removeLastElement());
  Assert.assertTrue(DequeSequence.fromDequeNew(d).isEmpty());
}
