{
  removeBadMessages();
  Graphics2D g=(Graphics2D)graphics;
  List<EditorMessage> editorMessages=new ArrayList<EditorMessage>(myMessages);
  Collections.sort(editorMessages,new Comparator<EditorMessage>(){
    public int compare(    EditorMessage o1,    EditorMessage o2){
      if (o1 == o2)       return 0;
      if (o1 == null)       return -1;
      if (o2 == null)       return 1;
      if (o1.getStatus() == o2.getStatus()) {
        return getMessageStart(o1) - getMessageStart(o2);
      }
 else {
        return o1.getStatus().ordinal() - o2.getStatus().ordinal();
      }
    }
  }
);
  for (  EditorMessage msg : editorMessages) {
    if (msg == null || !msg.isValid(myEditorComponent)) {
      continue;
    }
    int messageY=getMessageStart(msg);
    int messageHeight=Math.max(getMessageHeight(msg),3);
    Color color=msg.getColor();
    if (color == null)     return;
    g.setColor(color);
    g.fillRect(x + 1,messageY,width - 2,messageHeight);
    Color brighter=color.brighter();
    g.setColor(brighter);
    UIUtil.drawLine(g,x,messageY,x,messageY + messageHeight);
    UIUtil.drawLine(g,x + 1,messageY,x + width - 2,messageY);
    Color darker=ColorUtil.shift(color,0.75);
    g.setColor(darker);
    UIUtil.drawLine(g,x + 1,messageY + messageHeight,x + width - 2,messageY + messageHeight);
    UIUtil.drawLine(g,x + width - 2,messageY,x + width - 2,messageY + messageHeight - 1);
  }
}
