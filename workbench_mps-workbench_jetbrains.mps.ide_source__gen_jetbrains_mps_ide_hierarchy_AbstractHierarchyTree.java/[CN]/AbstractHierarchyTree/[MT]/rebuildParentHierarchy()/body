{
  ArrayList<SNode> parentHierarchy=new ArrayList<SNode>();
  SNode parentDeclaration=myHierarchyNode;
  while (parentDeclaration != null) {
    parentHierarchy.add(parentDeclaration);
    parentDeclaration=getAbstractParent(parentDeclaration);
  }
  HierarchyTreeNode parentTreeNode=null;
  HierarchyTreeNode hierarchyTreeNode=null;
  HierarchyTreeNode rootNode=null;
  Set<SNode> visited=new HashSet<SNode>();
  for (int i=parentHierarchy.size() - 1; i >= 0; i--) {
    hierarchyTreeNode=(i > 0 ? (new HierarchyTreeNode(parentHierarchy.get(i),this)) : new ChildHierarchyTreeNode(parentHierarchy.get(i),this,visited));
    if (i == parentHierarchy.size() - 1) {
      rootNode=hierarchyTreeNode;
    }
    visited.add(parentHierarchy.get(i));
    if (parentTreeNode != null) {
      parentTreeNode.add(hierarchyTreeNode);
    }
    parentTreeNode=hierarchyTreeNode;
  }
  myTreeNode=hierarchyTreeNode;
  MPSTreeNode topRootNode=new TextTreeNode("Hierarchy");
  topRootNode.add(rootNode);
  return topRootNode;
}
