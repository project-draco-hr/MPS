{
  SNode methodCall=this.createMethodCall(match,methodDeclaration);
  SNode ifNode=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b217L,"jetbrains.mps.baseLanguage.structure.IfStatement"));
  SLinkOperations.setTarget(ifNode,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b217L,0xf8cc56b218L,"condition"),methodCall);
  SLinkOperations.setTarget(ifNode,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b217L,0xf8cc56b219L,"ifTrue"),SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b200L,"jetbrains.mps.baseLanguage.structure.StatementList")));
  ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(ifNode,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b217L,0xf8cc56b219L,"ifTrue")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b200L,0xf8cc6bf961L,"statement"))).addElement(ListSequence.fromList(this.myAnalyzer.getIntenalExitPoints()).first());
  SNodeOperations.insertPrevSiblingChild(ListSequence.fromList(this.myStatements).first(),ifNode);
  for (  SNode statement : ListSequence.fromList(this.myStatements)) {
    SNodeOperations.deleteNode(statement);
  }
}
