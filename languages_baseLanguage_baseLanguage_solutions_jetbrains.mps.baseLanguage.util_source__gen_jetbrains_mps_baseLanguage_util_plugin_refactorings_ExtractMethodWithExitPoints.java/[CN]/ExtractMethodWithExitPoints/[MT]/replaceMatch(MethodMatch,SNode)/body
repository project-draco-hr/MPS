{
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      SNode methodCall=ExtractMethodWithExitPoints.this.createMethodCall(match,methodDeclaration);
      SNode ifNode=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123159l,"jetbrains.mps.baseLanguage.structure.IfStatement")));
      SLinkOperations.setTarget(ifNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123159l,1068580123160l,"condition"),methodCall);
      SLinkOperations.setTarget(ifNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123159l,1068580123161l,"ifTrue"),SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123136l,"jetbrains.mps.baseLanguage.structure.StatementList"))));
      ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(ifNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123159l,1068580123161l,"ifTrue")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1068580123136l,1068581517665l,"statement"))).addElement(ListSequence.fromList(ExtractMethodWithExitPoints.this.myAnalyzer.getIntenalExitPoints()).first());
      SNodeOperations.insertPrevSiblingChild(ListSequence.fromList(ExtractMethodWithExitPoints.this.myStatements).first(),ifNode);
      for (      SNode statement : ListSequence.fromList(ExtractMethodWithExitPoints.this.myStatements)) {
        SNodeOperations.deleteNode(statement);
      }
    }
  }
);
}
