{
  Set<String> files=SetSequence.fromSetWithValues(new HashSet<String>(),unchangedFiles);
  for (  DebugInfoRoot cachedRoot : Sequence.fromIterable(cachedDebugInfo.getRoots())) {
    DebugInfoRoot generatedRoot=generatedDebugInfo.getRootInfo(cachedRoot.getNodeRef());
    boolean newFromCache=false;
    if (generatedRoot == null) {
      generatedRoot=new DebugInfoRoot(cachedRoot.getNodeRef());
      newFromCache=true;
    }
    for (    TraceablePositionInfo position : SetSequence.fromSet(cachedRoot.getPositions())) {
      if (SetSequence.fromSet(files).contains(position.getFileName())) {
        generatedRoot.addPosition(position);
      }
    }
    for (    ScopePositionInfo position : SetSequence.fromSet(cachedRoot.getScopePositions())) {
      if (SetSequence.fromSet(files).contains(position.getFileName())) {
        generatedRoot.addScopePosition(position);
      }
    }
    for (    UnitPositionInfo position : SetSequence.fromSet(cachedRoot.getUnitPositions())) {
      if (SetSequence.fromSet(files).contains(position.getFileName())) {
        generatedRoot.addUnitPosition(position);
      }
    }
    if (newFromCache) {
      final boolean gotCachedData=SetSequence.fromSet(generatedRoot.getPositions()).isNotEmpty() || SetSequence.fromSet(generatedRoot.getScopePositions()).isNotEmpty() || SetSequence.fromSet(generatedRoot.getUnitPositions()).isNotEmpty();
      if (gotCachedData) {
        generatedDebugInfo.putRootInfo(generatedRoot);
      }
    }
  }
}
