{
  if (positions == null && scopePositions == null && unitPositions == null) {
    return;
  }
  if (positions != null) {
    for (    SNode out : MapSequence.fromMap(positions).keySet()) {
      SNode input=getOriginalInputNodeForNearestParent(out);
      if (input != null && SNodeUtil.isAccessible(input,MPSModuleRepository.getInstance())) {
        addTraceablePosition(input,originalInputModel,fileName,MapSequence.fromMap(positions).get(out));
      }
    }
  }
  if (scopePositions != null) {
    for (    SNode out : MapSequence.fromMap(scopePositions).keySet()) {
      SNode input=getOriginalInputNodeForNearestParent(out);
      if (input != null && SNodeUtil.isAccessible(input,MPSModuleRepository.getInstance())) {
        addScopePosition(input,originalInputModel,fileName,MapSequence.fromMap(scopePositions).get(out));
      }
    }
  }
  if (unitPositions != null) {
    for (    SNode out : MapSequence.fromMap(unitPositions).keySet()) {
      SNode input=getOriginalInputNodeForNearestParent(out);
      addUnitPosition(input,originalInputModel,fileName,MapSequence.fromMap(unitPositions).get(out));
    }
  }
}
