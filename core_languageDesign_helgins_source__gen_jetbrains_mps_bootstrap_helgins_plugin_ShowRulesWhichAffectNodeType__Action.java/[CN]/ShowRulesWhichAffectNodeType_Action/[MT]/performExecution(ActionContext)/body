{
  NodeTypesComponent component=NodeTypesComponentsRepository.getInstance().getNodeTypesComponent(SNodeOperations.getContainingRoot(this.node));
  if (component == null) {
    return;
  }
  Set<Pair<String,String>> rulesIds=component.getRulesWhichAffectNodeType(this.node);
  if (rulesIds == null) {
    return;
  }
  List<SNode> rules=new ArrayList<SNode>();
  for (  Pair<String,String> ruleId : rulesIds) {
    SModelDescriptor modelDescriptor=SModelRepository.getInstance().getModelDescriptor(SModelUID.fromString(ruleId.o1));
    if (modelDescriptor == null) {
      continue;
    }
    SNode rule=modelDescriptor.getSModel().getNodeById(ruleId.o2);
    if (rule != null) {
      rules.add(rule);
    }
  }
  if (rules.size() == 1) {
    this.operationContext.getComponent(MPSEditorOpener.class).openNode(rules.get(0));
    return;
  }
  MyMenu m=new MyMenu(rules,this.operationContext);
  int x=0;
  int y=0;
  EditorCell cell=context.get(EditorCell.class);
  if (cell != null) {
    x=cell.getX();
    y=cell.getY();
  }
  m.show(context.getFrame(),x,y);
}
