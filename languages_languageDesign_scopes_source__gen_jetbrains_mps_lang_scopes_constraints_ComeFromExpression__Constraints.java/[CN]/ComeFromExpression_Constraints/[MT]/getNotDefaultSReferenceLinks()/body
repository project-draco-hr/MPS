{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(-2813181948124050702l,-6948304455871741958l),8077936094962944991l,8077936094962945822l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(-2813181948124050702l,-6948304455871741958l),8077936094962944991l,8077936094962945822l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_t1q7r2_a0a0a0a0a1a0b0a1a1;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
{
            SNode concept=SLinkOperations.getTarget(SNodeOperations.getNodeAncestor(_context.getContextNode(),MetaAdapterFactory.getConcept(new UUID(-5808042798135555774l,-8657779246725685839l),1225194240794l,"jetbrains.mps.lang.behavior.structure.ConceptBehavior"),false,false),MetaAdapterFactory.getReferenceLink(new UUID(-5808042798135555774l,-8657779246725685839l),1225194240794l,1225194240799l,"concept"));
            return new SimpleScope(AbstractConceptDeclaration_Behavior.call_getLinkDeclarations_1213877394480(concept)){
              @Nullable @Override public String getReferenceText(              @NotNull SNode target){
                return SPropertyOperations.getString(SNodeOperations.cast(target,MetaAdapterFactory.getConcept(new UUID(-4094437568663370681l,-8968368868337559369l),1071489288298l,"jetbrains.mps.lang.structure.structure.LinkDeclaration")),MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1071489288298l,1071599776563l,"role"));
              }
            }
;
          }
        }
      }
;
    }
  }
);
  return references;
}
