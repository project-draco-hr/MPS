{
  TabbedPaneWrapper tabbedPane=new TabbedPaneWrapper(myParentDisposable);
  MPSFacetSourcesTab mpsFacetSourcesTab=new MPSFacetSourcesTab(myContext,myParentDisposable);
  MPSFacetPathsTab mpsFacetPathsTab=new MPSFacetPathsTab(myContext);
  UsedLanguagesTable usedLanguagesTable=new UsedLanguagesTable(){
    @Override protected void doAddElements(    Set<ModuleReference> elementsToAdd){
      super.doAddElements(elementsToAdd);
      new ModuleRuntimeLibrariesManager(myContext,elementsToAdd).addMissingLibraries();
    }
  }
;
  ImportedSolutionsTable importedSolutionsTable=new ImportedSolutionsTable(){
    @Override protected void doAddElements(    Set<Dependency> elementsToAdd){
      super.doAddElements(elementsToAdd);
      Collection<ModuleReference> referencesToAdd=new ArrayList<ModuleReference>();
      for (      Dependency dependency : elementsToAdd) {
        referencesToAdd.add(dependency.getModuleRef());
      }
      new ModuleRuntimeLibrariesManager(myContext,referencesToAdd).addMissingLibraries();
    }
  }
;
  myTabs=new ArrayList<IModuleConfigurationTab>();
  myTabs.add(mpsFacetSourcesTab);
  myTabs.add(mpsFacetPathsTab);
  myTabs.add(usedLanguagesTable);
  myTabs.add(importedSolutionsTable);
  tabbedPane.addTab(MPSBundle.message("facet.sources.tab.name"),MPSIcons.SOURCES_TAB_ICON,mpsFacetSourcesTab.getRootPanel(),null);
  tabbedPane.addTab(MPSBundle.message("facet.paths.tab.name"),MPSIcons.PATHS_TAB_ICON,mpsFacetPathsTab.getRootPanel(),null);
  tabbedPane.addTab(MPSBundle.message("facet.languages.tab.name"),MPSIcons.LANGUAGES_TAB_ICON,usedLanguagesTable.getRootPanel(),null);
  tabbedPane.addTab(MPSBundle.message("facet.solutions.tab.name"),MPSIcons.SOLUTION_ICON,importedSolutionsTable.getRootPanel(),null);
  tabbedPane.addTab(MPSBundle.message("facet.devkits.tab.name"),MPSIcons.DEVKITS_TAB_ICON,new JPanel(),null);
  myCentralComponent=tabbedPane.getComponent();
}
