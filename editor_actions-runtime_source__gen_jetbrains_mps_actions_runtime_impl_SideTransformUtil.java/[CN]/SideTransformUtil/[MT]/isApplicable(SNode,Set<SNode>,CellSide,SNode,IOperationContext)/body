{
  if (!(SetSequence.fromSet(tags).contains(SEnumOperations.enumMemberForValue(SEnumOperations.getEnum("r:00000000-0000-4000-0000-011c895902a8(jetbrains.mps.lang.actions.structure)","SideTransformTag"),SPropertyOperations.getString_def(actionsBuilder,"transformTag","default_RTransform"))))) {
    return false;
  }
  if ((cellSide == CellSide.LEFT ? SPropertyOperations.hasValue(actionsBuilder,"side",null,null) : SPropertyOperations.hasValue(actionsBuilder,"side","left",null))) {
    return false;
  }
  if (!(SConceptOperations.isSubConceptOf(SNodeOperations.getConceptDeclaration(node),NameUtil.nodeFQName(SLinkOperations.getTarget(actionsBuilder,"applicableConcept",false))))) {
    return false;
  }
  SNode precondition=SLinkOperations.getTarget(actionsBuilder,"precondition",true);
  if (precondition != null) {
    try {
      return (Boolean)QueryMethodGenerated.invoke(BehaviorReflection.invokeNonVirtual(String.class,actionsBuilder,"jetbrains.mps.lang.actions.structure.SideTransformHintSubstituteActionsBuilder","call_getPreconditionQueryMethodName_1220279571415",new Object[]{}),context,new SideTransformPreconditionContext(node),SNodeOperations.getModel(actionsBuilder));
    }
 catch (    Exception e) {
      LOG.error(null,e);
    }
  }
  return true;
}
