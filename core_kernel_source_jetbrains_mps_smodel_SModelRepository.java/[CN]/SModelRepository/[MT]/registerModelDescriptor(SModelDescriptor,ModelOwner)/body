{
  SModelUID modelUID=modelDescriptor.getModelUID();
  SModelDescriptor registeredModel=getModelDescriptor(modelUID);
  LOG.assertLog(registeredModel == null || registeredModel == modelDescriptor,"Another model \"" + modelUID + "\" is already registered!");
  SModelDescriptor modelDescByName=myFqNameToModelDescriptorMap.get(modelUID.getSModelFqName());
  if (modelDescByName != null && modelDescByName != modelDescriptor) {
    LOG.error("can't register model descriptor " + modelUID + "model with the same fq name but different id is already registered: id = "+ modelDescByName.getModelUID().getSModelId());
    registerModelDescriptor(modelDescByName,owner);
  }
  Set<ModelOwner> owners=myModelsToOwners.getByFirst(modelDescriptor);
  LOG.assertLog(owners == null || !owners.contains(owner),"Another model \"" + modelUID + "\" is already registered!");
  myModelsToOwners.addLink(modelDescriptor,owner);
  if (modelUID.getSModelId() != null) {
    myIdToModelDescriptorMap.put(modelUID.getSModelId(),modelDescriptor);
  }
  myFqNameToModelDescriptorMap.put(modelUID.getSModelFqName(),modelDescriptor);
  myModelDescriptors.add(modelDescriptor);
  addModelToFileCache(modelDescriptor);
  myModelsWithNoOwners.remove(modelDescriptor);
  addListeners(modelDescriptor);
  fireModelAdded(modelDescriptor);
}
