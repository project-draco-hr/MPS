{
  myRuleNode=rule;
  myApplicableConcept=GeneratorUtil.getConceptQualifiedName(RuleUtil.getBaseRuleApplicableConcept(rule));
  myConsequenceNode=RuleUtil.getWeaving_Consequence(rule);
  myApplyToInheritors=RuleUtil.getBaseRuleApplyToConceptInheritors(rule);
  if (myConsequenceNode == null) {
    myConsequence=null;
    myTemplate=null;
  }
 else {
    String consequenceConceptFQName=myConsequenceNode.getConcept().getQualifiedName();
    if (consequenceConceptFQName.equals(RuleUtil.concept_TemplateDeclarationReference)) {
      myConsequence=new TemplateDeclarationConsequence();
      myTemplate=RuleUtil.getTemplateDeclarationReference_Template(myConsequenceNode);
    }
 else     if (consequenceConceptFQName.equals(RuleUtil.concept_WeaveEach_RuleConsequence)) {
      myConsequence=new ForeachConsequence(myConsequenceNode);
      myTemplate=RuleUtil.getWeaveEach_Template(myConsequenceNode);
    }
 else {
      myConsequence=new InvalidConsequence();
      myTemplate=null;
    }
  }
  myMappingName=RuleUtil.getBaseRuleLabel(myRuleNode);
}
