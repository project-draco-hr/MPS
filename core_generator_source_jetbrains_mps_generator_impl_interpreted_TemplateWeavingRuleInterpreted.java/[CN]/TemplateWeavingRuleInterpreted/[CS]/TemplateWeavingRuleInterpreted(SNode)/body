{
  super(rule.getReference(),MetaAdapterByDeclaration.getConcept(RuleUtil.getBaseRuleApplicableConcept(rule)),RuleUtil.getBaseRuleApplyToConceptInheritors(rule));
  myRuleNode=rule;
  myConsequenceNode=RuleUtil.getWeaving_Consequence(rule);
  if (myConsequenceNode == null) {
    myConsequence=null;
    myTemplate=null;
  }
 else {
    SConcept consequenceConcept=myConsequenceNode.getConcept();
    if (RuleUtil.concept_TemplateDeclarationReference.equals(consequenceConcept)) {
      myConsequence=new TemplateDeclarationConsequence();
      myTemplate=RuleUtil.getTemplateDeclarationReference_Template(myConsequenceNode);
    }
 else     if (RuleUtil.concept_WeaveEach_RuleConsequence.equals(consequenceConcept)) {
      myConsequence=new ForeachConsequence(myConsequenceNode);
      myTemplate=RuleUtil.getWeaveEach_Template(myConsequenceNode);
    }
 else {
      myConsequence=new InvalidConsequence();
      myTemplate=null;
    }
  }
  myMappingName=RuleUtil.getBaseRuleLabel(myRuleNode);
}
