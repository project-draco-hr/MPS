{
  Set<SNode> result=SetSequence.fromSet(new HashSet<SNode>());
  Iterable<SNode> implementList;
  if (SNodeOperations.isInstanceOf(((SNode)SConceptOperations.findConceptDeclaration(thisConcept.getQualifiedName())),MetaAdapterFactory.getConcept(new UUID(-4094437568663370681l,-8968368868337559369l),1071489090640l,"jetbrains.mps.lang.structure.structure.ConceptDeclaration"))) {
    implementList=ListSequence.fromList(SLinkOperations.getChildren(((SNode)SNodeOperations.asNode(SConceptOperations.findConceptDeclaration(thisConcept.getQualifiedName()))),MetaAdapterFactory.getContainmentLink(new UUID(-4094437568663370681l,-8968368868337559369l),1071489090640l,1169129564478l,"implements"))).select(new ISelector<SNode,SNode>(){
      public SNode select(      SNode it){
        return SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(new UUID(-4094437568663370681l,-8968368868337559369l),1169127622168l,1169127628841l,"intfc"));
      }
    }
).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return IApplicableToNothing_Behavior.call_hasApplicableTypes_2142237368811537351(SNodeOperations.asSConcept(((SNode)SConceptOperations.findConceptDeclaration(thisConcept.getQualifiedName()))),((SNode)it));
      }
    }
);
  }
 else {
    SetSequence.fromSet(result).addSequence(ListSequence.fromList(BehaviorReflection.invokeVirtualStatic((Class<List<SNode>>)((Class)Object.class),SNodeOperations.asSConcept(((SNode)SConceptOperations.findConceptDeclaration(thisConcept.getQualifiedName()))),"virtual_getApplicableTypes_5994574781955586127",new Object[]{})));
    implementList=ListSequence.fromList(SLinkOperations.getChildren(((SNode)SNodeOperations.asNode(SConceptOperations.findConceptDeclaration(thisConcept.getQualifiedName()))),MetaAdapterFactory.getContainmentLink(new UUID(-4094437568663370681l,-8968368868337559369l),1169125989551l,1169127546356l,"extends"))).select(new ISelector<SNode,SNode>(){
      public SNode select(      SNode it){
        return SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(new UUID(-4094437568663370681l,-8968368868337559369l),1169127622168l,1169127628841l,"intfc"));
      }
    }
).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return IApplicableToNothing_Behavior.call_hasApplicableTypes_2142237368811537351(SNodeOperations.asSConcept(((SNode)SConceptOperations.findConceptDeclaration(thisConcept.getQualifiedName()))),((SNode)it));
      }
    }
);
  }
  for (  SNode impl : Sequence.fromIterable(implementList)) {
    SetSequence.fromSet(result).addSequence(ListSequence.fromList(BehaviorReflection.invokeVirtualStatic((Class<List<SNode>>)((Class)Object.class),SNodeOperations.asSConcept(((SNode)impl)),"virtual_getApplicableTypes_5994574781955586127",new Object[]{})));
  }
  return result;
}
