{
  UsageViewManager viewManager=UsageViewManager.getInstance(project);
  Set<UsageTarget> usageTargets=new LinkedHashSet<UsageTarget>();
  for (  Object searchedNode : searchResults.getAliveNodes()) {
    if (searchedNode instanceof SNode) {
      usageTargets.add(new NodeUsageTarget((SNode)searchedNode,project));
    }
  }
  Set<Usage> usages=new LinkedHashSet<Usage>();
  for (  SearchResult searchResult : (List<SearchResult>)searchResults.getAliveResults()) {
    Object usage=searchResult.getObject();
    if (usage instanceof SNode) {
      usages.add(new NodeUsage((SNode)usage,project));
    }
  }
  final UsageViewPresentation presentation=createPresentation(usages.toArray(new Usage[usages.size()]));
  usageView=viewManager.showUsages(usageTargets.toArray(new UsageTarget[usageTargets.size()]),usages.toArray(new Usage[usages.size()]),presentation);
  usageView.addPerformOperationAction(new Runnable(){
    @Override public void run(){
      callback.performAction(RefactoringViewItemImpl.this);
    }
  }
,name,"",RefactoringBundle.message("usageView.doAction"));
}
