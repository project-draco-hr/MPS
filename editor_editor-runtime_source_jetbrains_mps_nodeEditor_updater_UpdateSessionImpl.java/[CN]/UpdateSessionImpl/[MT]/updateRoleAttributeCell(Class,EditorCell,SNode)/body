{
  if (attributeKind != AttributeKind.Reference.class && getCurrentContext().hasRoles()) {
    return cellWithRole;
  }
  final EditorContext editorContext=getUpdater().getEditorContext();
  editorContext.getCellFactory().pushCellContext();
  editorContext.getCellFactory().removeCellContextHints(EditorCellFactoryImpl.BASE_REFLECTIVE_EDITOR_HINT);
  UpdateInfoNode attributeUpdateInfoNode=new UpdateInfoNode(ReferencedNodeContext.createNodeAttributeContext(roleAttribute));
  myCurrentUpdateInfo.insertNewParent(attributeUpdateInfoNode);
  myCurrentUpdateInfo=attributeUpdateInfoNode;
  try {
    return runWithExplicitEditorHints(editorContext,roleAttribute,new Computable<EditorCell>(){
      @Override public EditorCell compute(){
        return EditorManager.getInstanceFromContext(editorContext).doCreateRoleAttributeCell(attributeKind,cellWithRole,getCurrentContext(),myModelModifications);
      }
    }
);
  }
  finally {
    editorContext.getCellFactory().popCellContext();
  }
}
