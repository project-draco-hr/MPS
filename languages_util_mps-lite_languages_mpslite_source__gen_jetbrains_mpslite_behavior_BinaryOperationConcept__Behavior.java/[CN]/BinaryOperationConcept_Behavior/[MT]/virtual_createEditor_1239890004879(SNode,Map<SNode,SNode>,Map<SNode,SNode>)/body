{
  SNode contentCell=SConceptOperations.createNewNode("jetbrains.mps.lang.editor.structure.CellModel_Collection",null);
  SLinkOperations.setNewChild(contentCell,"cellLayout","jetbrains.mps.lang.editor.structure.CellLayout_Indent");
  SNode leftCell=SLinkOperations.addNewChild(contentCell,"childCellModel","jetbrains.mps.lang.editor.structure.CellModel_RefNode");
  SLinkOperations.setTarget(leftCell,"relationDeclaration",SNodeOperations.cast(MapSequence.<SNode,SNode>fromMap(partsToLinks).get(SLinkOperations.getTarget(thisNode,"leftTarget",true)),"jetbrains.mps.lang.structure.structure.LinkDeclaration"),false);
  SNode signCell=SLinkOperations.addNewChild(contentCell,"childCellModel","jetbrains.mps.lang.editor.structure.CellModel_Constant");
  SPropertyOperations.set(signCell,"text",SPropertyOperations.getString(thisNode,"sign"));
  SNode rightCell=SLinkOperations.addNewChild(contentCell,"childCellModel","jetbrains.mps.lang.editor.structure.CellModel_RefNode");
  SLinkOperations.setTarget(rightCell,"relationDeclaration",SNodeOperations.cast(MapSequence.<SNode,SNode>fromMap(partsToLinks).get(SLinkOperations.getTarget(thisNode,"rightTarget",true)),"jetbrains.mps.lang.structure.structure.LinkDeclaration"),false);
  SNode result=SConceptOperations.createNewNode("jetbrains.mps.lang.editor.structure.ConceptEditorDeclaration",null);
  SLinkOperations.setTarget(result,"cellModel",contentCell,true);
  return result;
}
