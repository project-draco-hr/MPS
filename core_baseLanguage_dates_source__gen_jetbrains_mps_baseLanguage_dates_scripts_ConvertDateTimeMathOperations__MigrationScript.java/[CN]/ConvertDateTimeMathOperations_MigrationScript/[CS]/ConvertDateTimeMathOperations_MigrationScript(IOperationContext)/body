{
  super("convert datetime math operations");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "datetime minus period convert";
    }
    public String getAdditionalInfo(){
      return "datetime minus period convert";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.Expression";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.dates.structure.DateTimeMinusPeriodOperation");
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode minusExpression=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.MinusExpression",null);
      SLinkOperations.setTarget(minusExpression,"leftExpression",SNodeOperations.copyNode(SLinkOperations.getTarget(SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.dates.structure.DateTimeMinusPeriodOperation"),"leftValue",true)),true);
      SLinkOperations.setTarget(minusExpression,"rightExpression",SNodeOperations.copyNode(SLinkOperations.getTarget(SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.dates.structure.DateTimeMinusPeriodOperation"),"rightValue",true)),true);
      SNodeOperations.replaceWithAnother(node,minusExpression);
    }
    public boolean isShowAsIntention(){
      return true;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "datetime plus period convert";
    }
    public String getAdditionalInfo(){
      return "datetime plus period convert";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.Expression";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.dates.structure.DateTimePlusPeriodOperation");
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode plusExpression=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.PlusExpression",null);
      SLinkOperations.setTarget(plusExpression,"leftExpression",SNodeOperations.copyNode(SLinkOperations.getTarget(SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.dates.structure.DateTimePlusPeriodOperation"),"leftValue",true)),true);
      SLinkOperations.setTarget(plusExpression,"rightExpression",SNodeOperations.copyNode(SLinkOperations.getTarget(SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.dates.structure.DateTimePlusPeriodOperation"),"rightValue",true)),true);
      SNodeOperations.replaceWithAnother(node,plusExpression);
    }
    public boolean isShowAsIntention(){
      return true;
    }
  }
);
}
