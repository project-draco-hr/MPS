{
  this.appendNewLine();
  if (isEmptyString(SPropertyOperations.getString(node,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")))) {
    this.foundError("enum constant without name");
    this.appendWithIndent("???");
  }
 else {
    this.appendWithIndent(SPropertyOperations.getString(node,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")));
  }
  this.append("(");
{
    Iterable<SNode> collection=SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,1068499141038l,"actualArgument"));
    final SNode lastItem=Sequence.fromIterable(collection).last();
    for (    SNode item : collection) {
      appendNode(item);
      if (item != lastItem) {
        append(", ");
      }
    }
  }
  this.append(")");
  if (ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1083245299891l,492581319488141108l,"method"))).isNotEmpty()) {
    this.append(" {");
    this.appendNewLine();
    this.increaseDepth();
    for (    SNode imd : SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1083245299891l,492581319488141108l,"method"))) {
      appendNode(imd);
    }
    this.decreaseDepth();
    this.appendNewLine();
    this.appendWithIndent("}");
  }
}
