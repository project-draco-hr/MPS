{
  this.addNodeById("1230053040768");
  this.addNodeById("1230053040816");
  this.addNodeById("1230053040864");
  this.addNodeById("1230053040868");
  InlineMethodRefactoring ref=new InlineMethodRefactoring(SNodeOperations.cast(this.getNodeById("1230053040785"),"jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall"));
  ref.doRefactor();
{
    List<SNode> nodesBefore=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230053040769"),"jetbrains.mps.lang.behavior.structure.ConceptBehavior"));
    List<SNode> nodesAfter=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230053040817"),"jetbrains.mps.lang.behavior.structure.ConceptBehavior"));
    Assert.assertNull("nodes '" + nodesBefore + "' and '"+ nodesAfter+ "' do not match!",NodesMatcher.matchNodes(nodesBefore,nodesAfter));
  }
}
