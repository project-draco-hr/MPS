{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case LanguageConceptSwitch.AfterPosition:
    return props_AfterPosition;
case LanguageConceptSwitch.BaseEmitJumpStatement:
  return props_BaseEmitJumpStatement;
case LanguageConceptSwitch.BaseEmitVariableStatement:
return props_BaseEmitVariableStatement;
case LanguageConceptSwitch.BaseInstructionOperation:
return props_BaseInstructionOperation;
case LanguageConceptSwitch.BeforePosition:
return props_BeforePosition;
case LanguageConceptSwitch.BooleanInstructionOperation:
return props_BooleanInstructionOperation;
case LanguageConceptSwitch.BuilderBlock:
return props_BuilderBlock;
case LanguageConceptSwitch.DataFlowBuilderDeclaration:
return props_DataFlowBuilderDeclaration;
case LanguageConceptSwitch.EmitCodeForStatement:
return props_EmitCodeForStatement;
case LanguageConceptSwitch.EmitIfJumpStatement:
return props_EmitIfJumpStatement;
case LanguageConceptSwitch.EmitJumpStatement:
return props_EmitJumpStatement;
case LanguageConceptSwitch.EmitLabelStatement:
return props_EmitLabelStatement;
case LanguageConceptSwitch.EmitMayBeUnreachable:
return props_EmitMayBeUnreachable;
case LanguageConceptSwitch.EmitNopStatement:
return props_EmitNopStatement;
case LanguageConceptSwitch.EmitReadStatement:
return props_EmitReadStatement;
case LanguageConceptSwitch.EmitRetStatement:
return props_EmitRetStatement;
case LanguageConceptSwitch.EmitStatement:
return props_EmitStatement;
case LanguageConceptSwitch.EmitTryFinallyStatement:
return props_EmitTryFinallyStatement;
case LanguageConceptSwitch.EmitWriteStatement:
return props_EmitWriteStatement;
case LanguageConceptSwitch.GetCodeForExpression:
return props_GetCodeForExpression;
case LanguageConceptSwitch.IBuilderMode:
return props_IBuilderMode;
case LanguageConceptSwitch.InsertAfter:
return props_InsertAfter;
case LanguageConceptSwitch.InsertBefore:
return props_InsertBefore;
case LanguageConceptSwitch.InsertPosition:
return props_InsertPosition;
case LanguageConceptSwitch.InstructionGetSourceOperation:
return props_InstructionGetSourceOperation;
case LanguageConceptSwitch.InstructionIsJump:
return props_InstructionIsJump;
case LanguageConceptSwitch.InstructionIsNop:
return props_InstructionIsNop;
case LanguageConceptSwitch.InstructionIsRet:
return props_InstructionIsRet;
case LanguageConceptSwitch.InstructionType:
return props_InstructionType;
case LanguageConceptSwitch.IntraProcedural_BuilderMode:
return props_IntraProcedural_BuilderMode;
case LanguageConceptSwitch.LabelPosition:
return props_LabelPosition;
case LanguageConceptSwitch.NodeParameter:
return props_NodeParameter;
case LanguageConceptSwitch.Position:
return props_Position;
case LanguageConceptSwitch.RelativePosition:
return props_RelativePosition;
}
return null;
}
