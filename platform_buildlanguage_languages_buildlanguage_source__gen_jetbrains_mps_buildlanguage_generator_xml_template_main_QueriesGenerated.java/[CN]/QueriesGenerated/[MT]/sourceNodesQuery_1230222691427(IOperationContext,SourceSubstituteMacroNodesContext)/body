{
  final Set<String> existing=SetSequence.<String>fromArray();
  for (  SNode importProject : ListSequence.fromList(SNodeOperations.getDescendants(_context.getNode(),"jetbrains.mps.buildlanguage.structure.ImportProject",false))) {
    SetSequence.fromSet(existing).addElement(SPropertyOperations.getString(SLinkOperations.getTarget(importProject,"project",false),"name"));
  }
  return ListSequence.fromList(SNodeOperations.getDescendants(_context.getNode(),"jetbrains.mps.buildlanguage.structure.ITargetReference",false)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return !(SetSequence.fromSet(existing).contains(ITargetReference_Behavior.call_getProjectFileName_1230222765831(it)));
    }
  }
).distinct();
}
