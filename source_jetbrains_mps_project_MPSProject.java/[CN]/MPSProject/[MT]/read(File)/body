{
  if (!myProjectFile.exists()) {
    return;
  }
  Document document;
  try {
    document=JDOMUtil.loadDocument(myProjectFile);
  }
 catch (  JDOMException e) {
    e.printStackTrace();
    return;
  }
catch (  IOException e) {
    e.printStackTrace();
    return;
  }
  Element rootElement=document.getRootElement();
  Element modelElement=rootElement.getChild(SEMANTIC_MODELS);
  if (modelElement != null) {
    Iterator models=modelElement.getChildren(SEMANTIC_MODEL).iterator();
    while (models.hasNext()) {
      Element element=(Element)models.next();
      Element modelFileElement=element.getChild(FILE);
      String modelFileName=modelFileElement.getAttributeValue(NAME);
      String modelAbsolutePath=null;
      if (modelFileName.startsWith(PATH_MACRO_MODELS_ROOT)) {
        String modelRelativePath=modelFileName.substring(PATH_MACRO_MODELS_ROOT.length());
        modelAbsolutePath=PathManager.getAbsolutePathByRelational(new File(PathManager.getModelPath()),modelRelativePath);
      }
 else       if (modelFileName.startsWith(PATH_MACRO_PROJECT)) {
        String modelRelativePath=modelFileName.substring(PATH_MACRO_PROJECT.length());
        modelAbsolutePath=PathManager.getAbsolutePathByRelational(myProjectFile,modelRelativePath);
      }
 else {
        modelAbsolutePath=PathManager.getAbsolutePathByRelational(myProjectFile,modelFileName);
      }
      if ((new File(modelAbsolutePath)).exists()) {
        System.out.println("MPSProject addNewModel from: " + modelAbsolutePath);
        mySemanticModels.loadModel(modelAbsolutePath);
      }
 else {
        throw new RuntimeException("Couldn't load model from " + modelFileName + "\nFile doesn't exist: "+ modelAbsolutePath);
      }
    }
    SemanticModel[] semanticModels=mySemanticModels.semanticModels();
    for (int i=0; i < semanticModels.length; i++) {
      SemanticModel semanticModel=semanticModels[i];
      try {
        ContextUtil.initGlobalContext(semanticModel,this);
        ContextUtil.initLocalContext(semanticModel,this);
      }
 catch (      Exception e) {
        System.out.println("No context for model: " + semanticModel.getNamespace() + "."+ semanticModel.getName());
        e.printStackTrace();
      }
    }
    mySemanticModels.flushModelInfos();
  }
}
