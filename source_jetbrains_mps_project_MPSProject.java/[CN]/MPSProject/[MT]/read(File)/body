{
  if (!myProjectFile.exists()) {
    return;
  }
  Document document;
  try {
    document=JDOMUtil.loadDocument(myProjectFile);
  }
 catch (  JDOMException e) {
    e.printStackTrace();
    return;
  }
catch (  IOException e) {
    e.printStackTrace();
    return;
  }
  Element rootElement=document.getRootElement();
  Element languageRootsElement=rootElement.getChild(LANGUAGES);
  if (languageRootsElement != null) {
    Iterator languageRootElements=languageRootsElement.getChildren(LANGUAGE_ROOT).iterator();
    while (languageRootElements.hasNext()) {
      Element element=(Element)languageRootElements.next();
      String rootFileName=element.getAttributeValue(ROOT_PATH);
      String rootAbsolutePath=null;
      if (rootFileName.startsWith(PATH_MACRO_PROJECT)) {
        String modelRelativePath=rootFileName.substring(PATH_MACRO_PROJECT.length());
        rootAbsolutePath=PathManager.getAbsolutePathByRelational(myProjectFile,modelRelativePath);
      }
 else {
        rootAbsolutePath=PathManager.getAbsolutePathByRelational(myProjectFile,rootFileName);
      }
      File dir=new File(rootAbsolutePath);
      myLanguageRoots.add(dir);
      if (dir.exists()) {
        readLanguageDescriptors(dir);
      }
 else {
        throw new RuntimeException("Couldn't load languages from " + rootAbsolutePath + "\nDirectory doesn't exist: "+ rootAbsolutePath);
      }
    }
  }
  Element libraryModelsElement=rootElement.getChild(LIBRARY_MODELS);
  readModelRoots(myLibraryModelRoots,libraryModelsElement);
  Element projectModelsElement=rootElement.getChild(PROJECT_MODELS);
  readModelRoots(myProjectModelRoots,projectModelsElement);
  readModels(myProjectModelRoots,myProjectModels);
  mySemanticModels.flushModelInfos();
}
