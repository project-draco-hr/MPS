{
  mySolutions=new LinkedList<Solution>();
  for (  SolutionPath solutionPath : CollectionUtil.iteratorAsIterable(myProjectDescriptor.projectSolutions())) {
    String path=solutionPath.getPath();
    if (path == null) {
      LOG.error("Solution path is null");
      continue;
    }
    File descriptorFile=new File(path);
    if (!descriptorFile.getName().endsWith(".msd")) {
      LOG.error("Couldn't load solution from: " + descriptorFile.getAbsolutePath() + " : '*.msd' file expected");
    }
 else     if (descriptorFile.exists()) {
      mySolutions.add((Solution)MPSModuleRepository.getInstance().registerSolution(descriptorFile,this));
    }
 else {
      LOG.error("Couldn't load solution from: " + descriptorFile.getAbsolutePath() + " : file doesn't exist");
    }
  }
  myLanguages=new LinkedList<Language>();
  for (  LanguagePath languagePath : CollectionUtil.iteratorAsIterable(myProjectDescriptor.projectLanguages())) {
    File descriptorFile=new File(languagePath.getPath());
    if (!descriptorFile.getName().endsWith(".mpl")) {
      LOG.error("Couldn't load language from: " + descriptorFile.getAbsolutePath() + " : '*.mpl' file expected");
    }
 else     if (descriptorFile.exists()) {
      myLanguages.add(MPSModuleRepository.getInstance().registerLanguage(descriptorFile,this));
    }
 else {
      LOG.error("Couldn't load language from: " + descriptorFile.getAbsolutePath() + " : file doesn't exist");
    }
  }
  myDevKits=new LinkedList<DevKit>();
  for (  DevKitPath dk : myProjectDescriptor.getProjectDevkits()) {
    File devKit=new File(dk.getPath());
    if (!devKit.getName().endsWith(".devkit")) {
      LOG.error("Couldn't load devkit from: " + devKit.getAbsolutePath() + " : '*.devkit' file expected");
    }
 else     if (devKit.exists()) {
      myDevKits.add(MPSModuleRepository.getInstance().registerDevKit(devKit,this));
    }
 else {
      LOG.error("Couldn't load devkit from: " + devKit.getAbsolutePath() + " : file doesn't exist");
    }
  }
  for (  Library l : myProjectDescriptor.getLibrarys()) {
    String name=l.getName();
    jetbrains.mps.library.Library lib=ApplicationComponents.getInstance().getComponentSafe(LibraryManager.class).get(name);
    if (lib != null) {
      MPSModuleRepository.getInstance().readModuleDescriptors(new File(lib.getPath()),this);
    }
 else {
      LOG.error("Can't find a global library " + name);
    }
  }
}
