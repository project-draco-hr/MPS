{
  super("Create runtime classes in the tuples runtime");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "TupleInterface";
    }
    public String getAdditionalInfo(){
      return "TupleInterface";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassConcept";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return "jetbrains.mps.baseLanguage.tuples.runtime.Tuples".equals(BehaviorReflection.invokeVirtual(String.class,node,"virtual_getFqName_1213877404258",new Object[]{})) && !(ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SPropertyOperations.getString(it,"name").matches("_[0-9]+");
        }
      }
));
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode ifc=null;
      for (int i=0; i < 10; i++) {
        List<SNode> typedecls=new ArrayList<SNode>();
        for (int j=0; j < i; j++) {
          ListSequence.fromList(typedecls).addElement(new UpdateTuplesRuntime_MigrationScript.QuotationClass_qkk7tb_a0a0a0b0b0e0a0a0a0b0a().createNode("T" + j));
        }
        List<SNode> typerefs=new ArrayList<SNode>();
        for (int j=0; j < i; j++) {
          ListSequence.fromList(typerefs).addElement(new UpdateTuplesRuntime_MigrationScript.QuotationClass_qkk7tb_a0a0a0e0b0e0a0a0a0b0a().createNode(ListSequence.fromList(typedecls).getElement(j)));
        }
        List<SNode> methods=new ArrayList<SNode>();
        for (int j=0; j < i; j++) {
          ListSequence.fromList(methods).addElement(new UpdateTuplesRuntime_MigrationScript.QuotationClass_qkk7tb_a0a0a0h0b0e0a0a0a0b0a().createNode(SNodeOperations.copyNode(ListSequence.fromList(typerefs).getElement(j)),"_" + j,SNodeOperations.copyNode(ListSequence.fromList(typerefs).getElement(j))));
        }
        for (int j=0; j < i; j++) {
          ListSequence.fromList(methods).addElement(new UpdateTuplesRuntime_MigrationScript.QuotationClass_qkk7tb_a0a0a0i0b0e0a0a0a0b0a().createNode("_" + j,SNodeOperations.copyNode(ListSequence.fromList(typerefs).getElement(j))));
        }
        SNode extendIfc=null;
        if (ifc != null) {
          extendIfc=new UpdateTuplesRuntime_MigrationScript.QuotationClass_qkk7tb_a0a0a11a1a4a0a0a0a1a0().createNode(ListSequence.fromList(typerefs).cut(1).toListSequence(),ifc);
        }
        ifc=new UpdateTuplesRuntime_MigrationScript.QuotationClass_qkk7tb_a0a31a1a4a0a0a0a1a0().createNode(extendIfc,methods,typedecls,"_" + i);
        List<SNode> extParams=ListSequence.fromList(typerefs).select(new ISelector<SNode,SNode>(){
          public SNode select(          SNode tr){
            return new UpdateTuplesRuntime_MigrationScript.QuotationClass_qkk7tb_a0a0a0a0a0a0p0b0e0a0a0a0b0a().createNode(SNodeOperations.copyNode(tr));
          }
        }
).toListSequence();
        ListSequence.fromList(SLinkOperations.getTargets(ifc,"method",true)).addElement(new UpdateTuplesRuntime_MigrationScript.QuotationClass_qkk7tb_a0a0q0b0e0a0a0a0b0a().createNode(extParams,ifc,ListSequence.fromList(typerefs).select(new ISelector<SNode,SNode>(){
          public SNode select(          SNode it){
            return SNodeOperations.copyNode(it);
          }
        }
).toListSequence(),ifc));
        ListSequence.fromList(SLinkOperations.getTargets(node,"staticInnerClassifiers",true)).addElement(ifc);
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
