{
  final Wrappers._boolean isApplicable=new Wrappers._boolean();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      isApplicable.value=!(ListSequence.fromList(SNodeOperations.getDescendants(parameter,"jetbrains.mps.build.packaging.structure.INotBuildableComponent",false,new String[]{})).isNotEmpty());
    }
  }
);
  if (!(isApplicable.value)) {
    return;
  }
  final Wrappers._T<String> id=new Wrappers._T<String>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      id.value=ListSequence.fromList(SLinkOperations.getTargets(parameter,"configuration",true)).first().getId();
    }
  }
);
  DefaultPackagingLanguageConfigurationFromMPSLayout.this.setSourceElement(new MPSPsiElement(parameter));
{
    ConfigurationType configType=ContainerUtil.findInstance(Extensions.getExtensions(ConfigurationType.CONFIGURATION_TYPE_EP),new _FunctionTypes._return_P0_E0<Class<ConfigurationType>>(){
      public Class<ConfigurationType> invoke(){
        try {
          return (Class<ConfigurationType>)getClass().getClassLoader().loadClass("jetbrains.mps.buildlanguage.plugin.BuildLanguage_ConfigurationType");
        }
 catch (        ClassNotFoundException cl) {
          return (Class<ConfigurationType>)null;
        }
      }
    }
.invoke());
    DefaultPackagingLanguageApplication_Configuration _config=new DefaultPackagingLanguageApplication_Configuration(DefaultPackagingLanguageConfigurationFromMPSLayout.this.getContext().getProject(),findFactory(configType,"jetbrains.mps.build.packaging.plugin.DefaultPackagingLanguageApplication_Factory"),"NewConfig");
    _config.setName(SPropertyOperations.getString(parameter,"name"));
    _config.getStateObject().nodeId=parameter.getId();
    _config.getStateObject().modelId=parameter.getModel().getModelDescriptor().getSModelReference().toString();
    _config.getStateObject().configurationId=id.value;
    DefaultPackagingLanguageConfigurationFromMPSLayout.this.myConfig=_config;
  }
}
