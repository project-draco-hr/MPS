{
  final jetbrains.mps.openapi.editor.cells.EditorCell selectedCell=getSelectedCell();
  if (selectedCell != null) {
    ModelAccess.instance().runReadAction(new Runnable(){
      @Override public void run(){
        final HighlighterMessage message=getHighlighterMessageFor(selectedCell);
        if (message == null)         return;
        final IErrorReporter herror=message.getErrorReporter();
        SwingUtilities.invokeLater(new Runnable(){
          @Override public void run(){
            String s=message.getMessage();
            final MPSErrorDialog dialog=new MPSErrorDialog(myEditorContext.getMainFrame(),s,message.getStatus().getPresentation(),false);
            if (herror.getRuleModel() != null && herror.getRuleId() != null) {
              final boolean hasAdditionalRuleIds=!herror.getAdditionalRulesIds().isEmpty();
              final JButton button=new JButton();
              AbstractAction action=new AbstractAction("Go To Rule"){
                @Override public void actionPerformed(                ActionEvent e){
                  if (hasAdditionalRuleIds) {
                    JPopupMenu popupMenu=new JPopupMenu();
                    for (                    final Pair<String,String> id : herror.getAdditionalRulesIds()) {
                      popupMenu.add(new AbstractAction("Go To Rule " + id.o2){
                        @Override public void actionPerformed(                        ActionEvent e){
                          ModelAccess.instance().runWriteInEDT(new Runnable(){
                            @Override public void run(){
                              GoToTypeErrorRuleUtil.goToRuleById(myOperationContext,id);
                              dialog.dispose();
                            }
                          }
);
                        }
                      }
);
                    }
                    popupMenu.add(new AbstractAction("Go To Immediate Rule"){
                      @Override public void actionPerformed(                      ActionEvent e){
                        ModelAccess.instance().runWriteInEDT(new Runnable(){
                          @Override public void run(){
                            GoToTypeErrorRuleUtil.goToRuleById(myOperationContext,new Pair<String,String>(herror.getRuleModel(),herror.getRuleId()));
                            dialog.dispose();
                          }
                        }
);
                      }
                    }
);
                    popupMenu.show(dialog,button.getX(),button.getY() + button.getHeight());
                  }
 else {
                    ModelAccess.instance().runWriteInEDT(new Runnable(){
                      @Override public void run(){
                        GoToTypeErrorRuleUtil.goToRuleById(myOperationContext,new Pair<String,String>(herror.getRuleModel(),herror.getRuleId()));
                        dialog.dispose();
                      }
                    }
);
                  }
                }
              }
;
              button.setAction(action);
              dialog.addButton(button);
            }
            dialog.initializeUI();
            dialog.setVisible(true);
          }
        }
);
        return;
      }
    }
);
  }
}
