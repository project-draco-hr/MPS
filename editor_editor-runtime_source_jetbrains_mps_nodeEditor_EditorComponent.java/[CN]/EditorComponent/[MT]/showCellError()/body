{
  final jetbrains.mps.openapi.editor.cells.EditorCell selectedCell=getSelectedCell();
  if (selectedCell != null) {
    getModelAccess().runReadAction(new Runnable(){
      @Override public void run(){
        final HighlighterMessage message=getHighlighterMessageFor(selectedCell);
        if (message == null || message.getErrorReporter() == null) {
          return;
        }
        final IErrorReporter herror=message.getErrorReporter();
        SwingUtilities.invokeLater(new Runnable(){
          @Override public void run(){
            String s=message.getMessage();
            final MPSErrorDialog dialog=new MPSErrorDialog(myEditorContext.getMainFrame(),s,message.getStatus().getPresentation(),false);
            if (herror.getRuleNode() != null) {
              final boolean hasAdditionalRuleIds=!herror.getAdditionalRulesIds().isEmpty();
              final JButton button=new JButton();
class ToRuleAction extends AbstractAction {
                private final SNodeReference myRule;
                private final JDialog myToDispose;
                public ToRuleAction(                String title,                SNodeReference rule,                JDialog toDispose){
                  super(title);
                  myRule=rule;
                  myToDispose=toDispose;
                }
                @Override public void actionPerformed(                ActionEvent e){
                  new EditorNavigator(getCurrentProject()).shallSelect(true).open(myRule);
                  myToDispose.dispose();
                }
              }
              ;
              AbstractAction action=new ToRuleAction("Go To Rule",herror.getRuleNode(),dialog){
                @Override public void actionPerformed(                ActionEvent e){
                  if (hasAdditionalRuleIds) {
                    JPopupMenu popupMenu=new JPopupMenu();
                    for (                    final SNodeReference id : herror.getAdditionalRulesIds()) {
                      popupMenu.add(new ToRuleAction("Go To Rule " + id.getNodeId(),id,dialog));
                    }
                    popupMenu.add(new ToRuleAction("Go To Immediate Rule",herror.getRuleNode(),dialog));
                    popupMenu.show(button,0,button.getHeight());
                  }
 else {
                    super.actionPerformed(e);
                    ;
                  }
                }
              }
;
              button.setAction(action);
              dialog.addButton(button);
            }
            dialog.initializeUI();
            dialog.setVisible(true);
          }
        }
);
        return;
      }
    }
);
  }
}
