{
  if (isDisposed())   return;
  clearModelDisposedTrace();
  if (myNode != null && notifiesCreation()) {
    notifyDisposal();
  }
  ModelAccess.instance().runReadAction(new Runnable(){
    @Override public void run(){
      setReadOnly(node == null || node.getModel() == null || SModelOperations.isReadOnly(node.getModel()));
      disposeTypeCheckingContext();
      myNode=node;
      if (myNode != null) {
        myNodePointer=new jetbrains.mps.smodel.SNodePointer(myNode);
        myVirtualFile=!myNoVirtualFile ? MPSNodesVirtualFileSystem.getInstance().getFileFor(node) : null;
        setOperationContext(operationContext);
        setEditorContext(new EditorContext(EditorComponent.this,node.getModel(),operationContext));
      }
 else {
        myNodePointer=null;
        myVirtualFile=null;
        setOperationContext(null);
        setEditorContext(new EditorContext(EditorComponent.this,null,null));
      }
      getTypeCheckingContext();
      rebuildEditorContent();
    }
  }
);
  if (myNode != null && notifiesCreation()) {
    notifyCreation();
  }
}
