{
  return TypeContextManager.getInstance().runTypeCheckingComputation(this,myNode,new Computation<List<INodeSubstituteAction>>(){
    @Override public List<INodeSubstituteAction> compute(    TypeCheckingContext context){
      return isSmart ? substituteInfo.getSmartMatchingActions(pattern,false,editorCell) : substituteInfo.getMatchingActions(pattern,false);
    }
  }
);
}
