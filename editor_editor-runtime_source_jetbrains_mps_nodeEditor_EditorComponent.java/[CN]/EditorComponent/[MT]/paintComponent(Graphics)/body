{
  Graphics2D g=(Graphics2D)gg;
  turnOnAliasingIfPossible(g);
  g.setColor(getBackground());
  Rectangle bounds=g.getClipBounds();
  g.fillRect(bounds.x,bounds.y,bounds.width,bounds.height);
  EditorCell deepestCell=getDeepestSelectedCell();
  if (deepestCell instanceof EditorCell_Label && g.hitClip(deepestCell.getX(),deepestCell.getY(),deepestCell.getWidth(),deepestCell.getHeight())) {
    EditorCell_Label label=(EditorCell_Label)deepestCell;
    g.setColor(CARET_ROW_COLOR);
    g.fillRect(0,deepestCell.getY(),getWidth(),deepestCell.getHeight() - deepestCell.getTopInset() - deepestCell.getBottomInset());
    g.setColor(EditorColorsManager.getInstance().getGlobalScheme().getAttributes(EditorColors.IDENTIFIER_UNDER_CARET_ATTRIBUTES).getBackgroundColor());
    g.fillRect(deepestCell.getX() + label.getLeftInset(),deepestCell.getY(),deepestCell.getWidth() - label.getLeftInset() - label.getRightInset(),deepestCell.getHeight() - deepestCell.getTopInset() - deepestCell.getBottomInset());
  }
  List<AdditionalPainter> additionalPainters=getAdditionalPainters();
  for (  AdditionalPainter additionalPainter : additionalPainters) {
    if (additionalPainter.paintsBackground()) {
      additionalPainter.paintBackground(g,this);
    }
  }
  if (myRootCell != null && g.hitClip(myRootCell.getX(),myRootCell.getY(),myRootCell.getWidth(),myRootCell.getHeight())) {
    EditorSettings setting=EditorSettings.getInstance();
    g.setColor(EditorColorsManager.getInstance().getGlobalScheme().getColor(EditorColors.RIGHT_MARGIN_COLOR));
    int boundPosition=myRootCell.getX() + setting.getVerticalBoundWidth();
    g.drawLine(boundPosition,0,boundPosition,getHeight());
    myRootCell.paint(g,ParentSettings.createDefaultSetting());
  }
  for (  AdditionalPainter additionalPainter : additionalPainters) {
    if (additionalPainter.paintsAbove()) {
      additionalPainter.paint(g,this);
    }
  }
}
