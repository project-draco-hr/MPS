{
  EditorSettings setting=EditorSettings.getInstance();
  Graphics2D g=(Graphics2D)gg;
  turnOnAliasingIfPossible(g);
  g.setColor(getBackground());
  Rectangle bounds=g.getClipBounds();
  g.fillRect(bounds.x,bounds.y,bounds.width,bounds.height);
  jetbrains.mps.openapi.editor.cells.EditorCell deepestCell=getDeepestSelectedCell();
  if (deepestCell instanceof EditorCell_Label && ((EditorCell)deepestCell).isInClipRegion(g)) {
    EditorCell_Label label=(EditorCell_Label)deepestCell;
    g.setColor(setting.getCaretRowColor());
    g.fillRect(0,deepestCell.getY(),getWidth(),deepestCell.getHeight() - deepestCell.getTopInset() - deepestCell.getBottomInset());
    g.setColor(EditorColorsManager.getInstance().getGlobalScheme().getAttributes(EditorColors.IDENTIFIER_UNDER_CARET_ATTRIBUTES).getBackgroundColor());
    g.fillRect(deepestCell.getX() + label.getLeftInset(),deepestCell.getY(),deepestCell.getWidth() - label.getLeftInset() - label.getRightInset(),deepestCell.getHeight() - deepestCell.getTopInset() - deepestCell.getBottomInset());
  }
  List<AdditionalPainter> additionalPainters=getAdditionalPainters();
  for (  AdditionalPainter additionalPainter : additionalPainters) {
    if (additionalPainter.paintsBackground()) {
      additionalPainter.paintBackground(g,this);
    }
  }
  if (isDisposed()) {
    return;
  }
  myRootCell.relayout();
  if (myRootCell.isInClipRegion(g)) {
    g.setColor(EditorColorsManager.getInstance().getGlobalScheme().getColor(EditorColors.RIGHT_MARGIN_COLOR));
    int boundPosition=myRootCell.getX() + setting.getVerticalBoundWidth();
    g.drawLine(boundPosition,0,boundPosition,getHeight());
    myRootCell.paint(g);
  }
  for (  AdditionalPainter additionalPainter : additionalPainters) {
    if (additionalPainter.paintsAbove()) {
      additionalPainter.paint(g,this);
    }
  }
}
