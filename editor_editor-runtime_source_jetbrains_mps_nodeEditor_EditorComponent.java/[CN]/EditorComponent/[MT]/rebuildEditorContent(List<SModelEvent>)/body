{
  if (getEditorContext() == null) {
    return;
  }
  getEditorContext().pushTracerTask("Rebuilding Editor Content",true);
  getModelAccess().runReadAction(new Runnable(){
    @Override public void run(){
      if (getComponents().length > 0) {
        removeAll();
      }
      if (events != null) {
        revertErrorCells(events);
      }
      getEditorContext().pushTracerTask("Running swap editor cell action",true);
      boolean pushContext=!myUseDefaultsHints && myEnabledHints != null;
      if (pushContext) {
        getEditorContext().getCellFactory().pushCellContext();
        Object[] hints=myEnabledHints.toArray();
        getEditorContext().getCellFactory().addCellContextHints(Arrays.copyOf(hints,hints.length,String[].class));
      }
      runSwapCellsActions(new Runnable(){
        @Override public void run(){
          setRootCell(createRootCell(events));
        }
      }
);
      if (pushContext) {
        getEditorContext().getCellFactory().popCellContext();
      }
      getEditorContext().popTracerTask();
      for (      EditorCell_Component component : getCellTracker().getComponentCells()) {
        EditorComponent.this.add(component.getComponent());
      }
      getEditorContext().pushTracerTask("Executing rebuild liteners",true);
      for (      RebuildListener listener : myRebuildListeners) {
        listener.editorRebuilt(EditorComponent.this);
      }
      getEditorContext().popTracerTask();
      updateMessages();
    }
  }
);
  getEditorContext().popTracerTask();
}
