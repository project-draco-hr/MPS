{
  Map<Node,Integer> components=ConnectivityComponents.getComponents(graph);
  int maxComponent=0;
  for (  Node node : ListSequence.fromList(graph.getNodes())) {
    maxComponent=Math.max(maxComponent,MapSequence.fromMap(components).get(node));
  }
  Map<Node,Node> newNodes=new NodeMap<Node>(graph);
  List<Graph> subgraphs=ListSequence.fromList(new ArrayList<Graph>());
  for (int i=0; i <= maxComponent; i++) {
    ListSequence.fromList(subgraphs).addElement(new Graph());
  }
  for (  Node node : ListSequence.fromList(graph.getNodes())) {
    Graph subgraph=ListSequence.fromList(subgraphs).getElement(MapSequence.fromMap(components).get(node));
    MapSequence.fromMap(newNodes).put(node,subgraph.addNode());
  }
  for (  Edge edge : ListSequence.fromList(graph.getEdges())) {
    MapSequence.fromMap(newNodes).get(edge.getSource()).addEdgeTo(MapSequence.fromMap(newNodes).get(edge.getTarget()));
  }
  return findSTLayout(ListSequence.fromList(subgraphs).getElement(0));
}
