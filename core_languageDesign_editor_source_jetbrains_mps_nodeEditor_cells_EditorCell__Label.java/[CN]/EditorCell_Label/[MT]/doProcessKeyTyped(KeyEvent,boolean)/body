{
  int wasPosition=getCaretPosition();
  CellSide side;
  if (wasPosition == 0) {
    side=CellSide.LEFT;
  }
 else {
    side=CellSide.RIGHT;
  }
  myCaretIsVisible=true;
  if (isEditable()) {
    final boolean result[]=new boolean[1];
    getEditorContext().executeCommand(new Runnable(){
      public void run(){
        result[0]=processMutableKeyTyped(keyEvent,allowErrors);
      }
    }
);
    if (result[0]) {
      getEditorContext().flushEvents();
      getEditor().relayout();
      if (isErrorState()) {
        if (allowsIntelligentInputKeyStroke(keyEvent)) {
          String pattern=this.getRenderedText();
          IntelligentInputUtil.processCell(this,getEditorContext(),pattern,side);
        }
      }
      return true;
    }
 else     if (isErrorState() && wasPosition == 0 && keyEvent.getKeyChar() == ' ') {
      return true;
    }
  }
  if (!isEditable() && allowsIntelligentInputKeyStroke(keyEvent)) {
    String pattern=getRenderedTextOn(keyEvent);
    if (!pattern.equals(getRenderedText())) {
      return IntelligentInputUtil.processCell(this,getEditorContext(),pattern,side);
    }
  }
  return false;
}
