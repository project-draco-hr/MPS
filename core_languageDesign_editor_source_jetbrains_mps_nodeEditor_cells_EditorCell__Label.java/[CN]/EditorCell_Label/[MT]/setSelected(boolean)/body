{
  super.setSelected(selected);
  final String label=getStyle().get(StyleAttributes.MATCHING_LABEL);
  if (label != null) {
    final SNode matchingNode;
    if (getStyle().get(StyleAttributes.MATCHING_NODE) != null) {
      matchingNode=getStyle().get(StyleAttributes.MATCHING_NODE);
    }
 else {
      matchingNode=this.getSNode();
    }
    EditorCell validCellForNode=getEditor().getBigValidCellForNode(matchingNode);
    if (validCellForNode != null) {
      EditorCell editorCell=validCellForNode.getFirstDescendant(new Condition<EditorCell>(){
        public boolean met(        EditorCell cell){
          return cell != EditorCell_Label.this && cell.getSNode() == matchingNode && label.equals(cell.getStyle().get(StyleAttributes.MATCHING_LABEL));
        }
      }
);
      if (editorCell != null) {
        this.getTextLine().setBraceSelected(selected);
        ((EditorCell_Label)editorCell).getTextLine().setBraceSelected(selected);
      }
    }
  }
  if (!selected && !getEditor().selectionStackContains(this)) {
    myTextLine.resetSelection();
  }
  myCaretIsVisible=true;
}
