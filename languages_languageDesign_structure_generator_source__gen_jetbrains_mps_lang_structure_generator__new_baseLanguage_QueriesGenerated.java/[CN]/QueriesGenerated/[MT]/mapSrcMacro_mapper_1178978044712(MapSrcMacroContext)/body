{
  SNode enumDataType=SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()),"jetbrains.mps.lang.structure.structure.EnumerationDataTypeDeclaration");
  String internalValue=SPropertyOperations.getString(_context.getNode(),"internalValue");
  SNode memberDataType=SLinkOperations.getTarget(enumDataType,"memberDataType",false);
  SNode targetInternalValueExpression=null;
  SModel targetModel=_context.getOutputModel();
  if (SPropertyOperations.hasValue(memberDataType,"name","string")) {
    if (internalValue == null) {
      targetInternalValueExpression=SModelOperations.createNewNode(targetModel,null,"jetbrains.mps.baseLanguage.structure.NullLiteral");
    }
 else {
      targetInternalValueExpression=SModelOperations.createNewNode(targetModel,null,"jetbrains.mps.baseLanguage.structure.StringLiteral");
      SPropertyOperations.set(SNodeOperations.cast(targetInternalValueExpression,"jetbrains.mps.baseLanguage.structure.StringLiteral"),"value",internalValue);
    }
  }
 else   if (SPropertyOperations.hasValue(memberDataType,"name","boolean")) {
    targetInternalValueExpression=SModelOperations.createNewNode(targetModel,null,"jetbrains.mps.baseLanguage.structure.BooleanConstant");
    if (internalValue == null) {
      SPropertyOperations.set(SNodeOperations.cast(targetInternalValueExpression,"jetbrains.mps.baseLanguage.structure.BooleanConstant"),"value","" + (true));
    }
 else {
      SPropertyOperations.set(SNodeOperations.cast(targetInternalValueExpression,"jetbrains.mps.baseLanguage.structure.BooleanConstant"),"value","" + (Boolean.parseBoolean(internalValue)));
    }
  }
 else   if (SPropertyOperations.hasValue(memberDataType,"name","integer")) {
    targetInternalValueExpression=SModelOperations.createNewNode(targetModel,null,"jetbrains.mps.baseLanguage.structure.IntegerConstant");
    if (internalValue == null) {
      SPropertyOperations.set(SNodeOperations.cast(targetInternalValueExpression,"jetbrains.mps.baseLanguage.structure.IntegerConstant"),"value","" + (0));
    }
 else {
      if (internalValue.startsWith("0x")) {
        SPropertyOperations.set(SNodeOperations.cast(targetInternalValueExpression,"jetbrains.mps.baseLanguage.structure.IntegerConstant"),"value","" + (Integer.parseInt(internalValue.substring(2),16)));
      }
 else {
        SPropertyOperations.set(SNodeOperations.cast(targetInternalValueExpression,"jetbrains.mps.baseLanguage.structure.IntegerConstant"),"value","" + (Integer.parseInt(internalValue)));
      }
    }
  }
  if ((targetInternalValueExpression == null)) {
    _context.showErrorMessage(enumDataType,"Can't generate value for type " + SPropertyOperations.getString(memberDataType,"name"));
  }
  return targetInternalValueExpression;
}
