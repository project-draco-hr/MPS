{
switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0a,fqName)) {
case 143:
    return new SNodeType_BehaviorDescriptor();
case 145:
  return new SPropertyAccess_BehaviorDescriptor();
case 135:
return new SLinkAccess_BehaviorDescriptor();
case 137:
return new SLinkListAccess_BehaviorDescriptor();
case 142:
return null;
case 117:
return new Property_SetOperation_BehaviorDescriptor();
case 21:
return new EnumMemberReference_BehaviorDescriptor();
case 51:
return new Link_SetNewChildOperation_BehaviorDescriptor();
case 42:
return new LinkList_AddNewChildOperation_BehaviorDescriptor();
case 84:
return new Node_GetParentOperation_BehaviorDescriptor();
case 95:
return new Node_IsInstanceOfOperation_BehaviorDescriptor();
case 90:
return new Node_InsertNewNextSiblingOperation_BehaviorDescriptor();
case 100:
return new Node_ReplaceWithNewOperation_BehaviorDescriptor();
case 41:
return new LinkList_AddChildOperation_BehaviorDescriptor();
case 44:
return new LinkList_InsertChildFirstOperation_BehaviorDescriptor();
case 50:
return new Link_DeleteChildOperation_BehaviorDescriptor();
case 99:
return new Node_ReplaceWithAnotherOperation_BehaviorDescriptor();
case 68:
return new Node_DeleteOperation_BehaviorDescriptor();
case 144:
return new SNodeTypeCastExpression_BehaviorDescriptor();
case 52:
return new Link_SetTargetOperation_BehaviorDescriptor();
case 91:
return new Node_InsertNewPrevSiblingOperation_BehaviorDescriptor();
case 92:
return new Node_InsertNextSiblingOperation_BehaviorDescriptor();
case 93:
return new Node_InsertPrevSiblingOperation_BehaviorDescriptor();
case 138:
return new SModelType_BehaviorDescriptor();
case 81:
return new Node_GetModelOperation_BehaviorDescriptor();
case 54:
return new Model_CreateNewNodeOperation_BehaviorDescriptor();
case 85:
return new Node_GetPrevSiblingOperation_BehaviorDescriptor();
case 82:
return new Node_GetNextSiblingOperation_BehaviorDescriptor();
case 0:
return null;
case 103:
return new OperationParm_Inclusion_BehaviorDescriptor();
case 105:
return new OperationParm_Root_BehaviorDescriptor();
case 101:
return new OperationParm_Concept_BehaviorDescriptor();
case 67:
return new Node_CopyOperation_BehaviorDescriptor();
case 98:
return new Node_IsRoleOperation_BehaviorDescriptor();
case 141:
return new SNodeListType_BehaviorDescriptor();
case 149:
return new SemanticDowncastExpression_BehaviorDescriptor();
case 43:
return new LinkList_GetCountOperation_BehaviorDescriptor();
case 140:
return new SNodeListCreator_BehaviorDescriptor();
case 83:
return new Node_GetNextSiblingsOperation_BehaviorDescriptor();
case 86:
return new Node_GetPrevSiblingsOperation_BehaviorDescriptor();
case 71:
return new Node_GetAllSiblingsOperation_BehaviorDescriptor();
case 125:
return new SConceptPropertyAccess_BehaviorDescriptor();
case 114:
return new Property_HasValue_Enum_BehaviorDescriptor();
case 115:
return new Property_HasValue_Simple_BehaviorDescriptor();
case 102:
return new OperationParm_ConceptList_BehaviorDescriptor();
case 11:
return new ConceptReference_BehaviorDescriptor();
case 55:
return new Model_CreateNewRootNodeOperation_BehaviorDescriptor();
case 70:
return new Node_GetAdapterOperation_BehaviorDescriptor();
case 79:
return new Node_GetDescendantsOperation_BehaviorDescriptor();
case 78:
return new Node_GetContainingRootOperation_BehaviorDescriptor();
case 61:
return new Model_RootsOperation_BehaviorDescriptor();
case 59:
return new Model_NodesOperation_BehaviorDescriptor();
case 72:
return new Node_GetAncestorOperation_BehaviorDescriptor();
case 74:
return new Node_GetChildrenOperation_BehaviorDescriptor();
case 97:
return new Node_IsNullOperation_BehaviorDescriptor();
case 96:
return new Node_IsNotNullOperation_BehaviorDescriptor();
case 40:
return new LinkList_AddAllOperation_BehaviorDescriptor();
case 75:
return new Node_GetConceptOperation_BehaviorDescriptor();
case 17:
return new Concept_IsExactlyOperation_BehaviorDescriptor();
case 126:
return new SConceptType_BehaviorDescriptor();
case 10:
return new ConceptRefExpression_BehaviorDescriptor();
case 73:
return new Node_GetAncestorsOperation_BehaviorDescriptor();
case 124:
return new SConceptLinkAccess_BehaviorDescriptor();
case 60:
return new Model_RootsIncludingImportedOperation_BehaviorDescriptor();
case 119:
return new RefConcept_Reference_BehaviorDescriptor();
case 80:
return new Node_GetIndexInParentOperation_BehaviorDescriptor();
case 15:
return new Concept_GetDirectSuperConcepts_BehaviorDescriptor();
case 66:
return new Node_ConceptMethodCall_BehaviorDescriptor();
case 19:
return new Concept_IsSuperConceptOfOperation_BehaviorDescriptor();
case 18:
return new Concept_IsSubConceptOfOperation_BehaviorDescriptor();
case 14:
return new Concept_GetAllSuperConcepts_BehaviorDescriptor();
case 16:
return new Concept_GetHierarchy_BehaviorDescriptor();
case 139:
return new SNodeCreator_BehaviorDescriptor();
case 20:
return new Concept_NewInstance_BehaviorDescriptor();
case 13:
return new Concept_GetAllSubConcepts_BehaviorDescriptor();
case 12:
return new Concept_FindInstances_BehaviorDescriptor();
case 58:
return new Model_NodesIncludingImportedOperation_BehaviorDescriptor();
case 25:
return null;
case 63:
return new NodeAttributeAccessQualifier_BehaviorDescriptor();
case 109:
return new PropertyAttributeAccessQualifier_BehaviorDescriptor();
case 30:
return null;
case 108:
return new PoundExpression_BehaviorDescriptor();
case 113:
return new PropertyRefQualifier_BehaviorDescriptor();
case 27:
return null;
case 38:
return new LinkAttributeAccessQualifier_BehaviorDescriptor();
case 49:
return new LinkRefQualifier_BehaviorDescriptor();
case 151:
return new _LinkAccessT_BehaviorDescriptor();
case 2:
return new AllAttributesQualifier_BehaviorDescriptor();
case 4:
return new AttributeAccessOperation_BehaviorDescriptor();
case 94:
return new Node_IsAttributeOperation_BehaviorDescriptor();
case 150:
return new StaticConceptMethodCall_BehaviorDescriptor();
case 53:
return new Model_AddRootOperation_BehaviorDescriptor();
case 32:
return null;
case 56:
return new Model_GetLongNameOperation_BehaviorDescriptor();
case 45:
return new LinkList_RemoveAllChildrenOperation_BehaviorDescriptor();
case 116:
return new Property_RemoveOperation_BehaviorDescriptor();
case 65:
return new NodeRefExpression_BehaviorDescriptor();
case 147:
return new SearchScopeType_BehaviorDescriptor();
case 89:
return new Node_GetReferentSearchScopeOperation_BehaviorDescriptor();
case 148:
return new SearchScope_ContainsOperation_BehaviorDescriptor();
case 48:
return new LinkRefExpression_BehaviorDescriptor();
case 24:
return new EqualsStructurallyExpression_BehaviorDescriptor();
case 69:
return new Node_DetachOperation_BehaviorDescriptor();
case 128:
return new SEnumMemberType_BehaviorDescriptor();
case 23:
return new EnumMember_ValueOperation_BehaviorDescriptor();
case 22:
return new EnumMember_NameOperation_BehaviorDescriptor();
case 130:
return new SEnumOperationInvocation_BehaviorDescriptor();
case 129:
return null;
case 131:
return new SEnum_MemberForNameOperation_BehaviorDescriptor();
case 132:
return new SEnum_MemberForValueOperation_BehaviorDescriptor();
case 133:
return new SEnum_MemberOperation_BehaviorDescriptor();
case 134:
return new SEnum_MembersOperation_BehaviorDescriptor();
case 127:
return null;
case 107:
return new OperationParm_StopConceptList_BehaviorDescriptor();
case 9:
return new ConceptProperty_SetOperation_BehaviorDescriptor();
case 26:
return null;
case 136:
return new SLinkImplicitSelect_BehaviorDescriptor();
case 88:
return new Node_GetReferencesOperation_BehaviorDescriptor();
case 146:
return new SReferenceType_BehaviorDescriptor();
case 123:
return new Reference_GetTargetOperation_BehaviorDescriptor();
case 120:
return new Reference_GetLinkDeclarationOperation_BehaviorDescriptor();
case 33:
return null;
case 122:
return new Reference_GetRoleOperation_BehaviorDescriptor();
case 76:
return new Node_GetContainingLinkOperation_BehaviorDescriptor();
case 77:
return new Node_GetContainingRoleOperation_BehaviorDescriptor();
case 87:
return new Node_GetReferenceOperation_BehaviorDescriptor();
case 28:
return null;
case 104:
return new OperationParm_LinkQualifier_BehaviorDescriptor();
case 121:
return new Reference_GetResolveInfo_BehaviorDescriptor();
case 6:
return new CheckedModuleReference_BehaviorDescriptor();
case 106:
return new OperationParm_SameMetaLevel_BehaviorDescriptor();
case 7:
return new ConceptFqNameRefExpression_BehaviorDescriptor();
case 34:
return new IfInstanceOfStatement_BehaviorDescriptor();
case 36:
return new IfInstanceOfVariable_BehaviorDescriptor();
case 35:
return new IfInstanceOfVarReference_BehaviorDescriptor();
case 46:
return new LinkNameRefExpression_BehaviorDescriptor();
case 111:
return new PropertyNameRefExpression_BehaviorDescriptor();
case 3:
return new AttributeAccess_BehaviorDescriptor();
case 5:
return null;
case 64:
return new NodeAttributeQualifier_BehaviorDescriptor();
case 39:
return new LinkAttributeQualifier_BehaviorDescriptor();
case 1:
return new AllAttributeQualifier_BehaviorDescriptor();
case 110:
return new PropertyAttributeQualifier_BehaviorDescriptor();
case 29:
return null;
case 31:
return null;
case 47:
return new LinkQualifier_BehaviorDescriptor();
case 112:
return new PropertyQualifier_BehaviorDescriptor();
case 8:
return new ConceptPropertyNameRefExpression_BehaviorDescriptor();
case 57:
return new Model_GetModule_BehaviorDescriptor();
case 62:
return new ModuleReferenceExpression_BehaviorDescriptor();
case 37:
return new LanguageReferenceExpression_BehaviorDescriptor();
case 118:
return new ReadConceptReferenceExpression_BehaviorDescriptor();
default :
return null;
}
}
