{
  MPSProject mpsProject=project.getComponent(MPSProject.class);
  String oldName=node.getName();
  PsiMethod psiMethod=(PsiMethod)MPSPsiProvider.getInstance(project).getPsi(node);
  boolean thereAreMpsOverrides=!MethodRefactoringUtils.findOverridingMethods(node,new EmptyProgressMonitor()).isEmpty();
  boolean thereArePsiOverrides=OverridingMethodsSearch.search(psiMethod,false).iterator().hasNext();
  boolean overridden=thereAreMpsOverrides || thereArePsiOverrides;
  final RenameMethodDialog d=new RenameMethodDialog(project,oldName,overridden);
  d.show();
  final String newName=d.getName();
  if (newName == null) {
    return;
  }
  if (!(node.getModel() != null) || jetbrains.mps.util.SNodeOperations.isDisposed(node)) {
    return;
  }
  IRefactoring psiAwareRefactoring=new PsiMethodRenameRefactoringWrapper(d.getOverriding());
  RefactoringAccess.getInstance().getRefactoringFacade().execute(RefactoringContext.createRefactoringContext(psiAwareRefactoring,Arrays.asList("newName","refactorOverriding"),Arrays.asList(newName,d.getOverriding()),node,mpsProject));
}
