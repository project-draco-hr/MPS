{
  try {
    GenerateFavorites_ActionGroup.this.removeAll();
    Project project=event.getData(MPSDataKeys.PROJECT);
    if (!(FavoritesUtil.isActiveFavorites(project))) {
      return;
    }
    TreeNode treeNode=event.getData(MPSDataKeys.LOGICAL_VIEW_NODE);
    if (treeNode instanceof SNodeTreeNode) {
      GenerateFavorites_ActionGroup.this.addParameterizedAction(new GenerateFilesFromModel_Action(new GenerateFilesFromModelsAction(false)),PluginId.getId("jetbrains.mps.ide.make"),new GenerateFilesFromModelsAction(false));
      GenerateFavorites_ActionGroup.this.addParameterizedAction(new RegenerateFilesFromModel_Action(new GenerateFilesFromModelsAction(true)),PluginId.getId("jetbrains.mps.ide.make"),new GenerateFilesFromModelsAction(true));
      GenerateFavorites_ActionGroup.this.addParameterizedAction(new GenerateTextFromModel_Action(new GenerateTextFromModelsAction()),PluginId.getId("jetbrains.mps.ide.make"),new GenerateTextFromModelsAction());
    }
  }
 catch (  Throwable t) {
    LOG.error("User group error",t);
  }
  for (  Pair<ActionPlace,Condition<BaseAction>> p : this.myPlaces) {
    this.addPlace(p.first,p.second);
  }
}
