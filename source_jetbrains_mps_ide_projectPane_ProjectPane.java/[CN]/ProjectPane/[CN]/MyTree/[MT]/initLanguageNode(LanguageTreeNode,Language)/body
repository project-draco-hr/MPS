{
  addNodeIfModelNotNull(node,language.getEditorModelDescriptor(),"Editor");
  addNodeIfModelNotNull(node,language.getStructureModelDescriptor(),"Structure");
  addNodeIfModelNotNull(node,language.getTypesystemModelDescriptor(),"Typesystem");
  addNodeIfModelNotNull(node,language.getActionsModelDescriptor(),"Actions");
  TextTreeNode libraries=new TextTreeNode("<html><b>Library Models</b>"){
    public Icon getIcon(    boolean expanded){
      return Icons.LIB_ICON;
    }
  }
;
  List<SModelDescriptor> models=new ArrayList<SModelDescriptor>();
  models.addAll(language.getLibraryModels());
  Collections.sort(models,new Comparator<SModelDescriptor>(){
    public int compare(    SModelDescriptor o1,    SModelDescriptor o2){
      return o1.getModelUID().toString().compareTo(o2.getModelUID().toString());
    }
  }
);
  for (  SModelDescriptor model : models) {
    addNodeIfModelNotNull(libraries,model,null);
  }
  node.add(libraries);
}
