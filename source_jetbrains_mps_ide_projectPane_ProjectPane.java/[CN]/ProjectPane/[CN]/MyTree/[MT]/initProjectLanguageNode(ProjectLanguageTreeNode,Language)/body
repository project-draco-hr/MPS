{
  addNodeIfModelNotNull(node,language.getStructureModelDescriptor(),"Structure");
  Iterator<SModelDescriptor> editorDescriptors=language.getEditorDescriptors().iterator();
  while (editorDescriptors.hasNext()) {
    SModelDescriptor editor=editorDescriptors.next();
    String stereotypeName=language.getEditorStereotype(editor);
    TextTreeNode stereotype=new LanguageEditorsTreeNode("<html><b>Editor " + ((stereotypeName != null) ? stereotypeName : "") + "</b>");
    addNodeIfModelNotNull(stereotype,language.getEditorModelDescriptor(stereotypeName),"<html><b>Editor</b>");
    node.add(stereotype);
  }
  Iterator<Generator> generators=language.getGenerators().iterator();
  while (generators.hasNext()) {
    Generator generator=generators.next();
    TextTreeNode generatorNode=new GeneratorsTreeNode("<html><b>Generator " + generator.getName() + "</b>");
    SModelDescriptor templatesModel=null;
    if (generator.getTemplatesModelFqName() != null && generator.getTemplatesModelFqName() != null) {
      templatesModel=SModelRepository.getInstance().getModelDescriptor(generator.getTemplatesModelFqName());
    }
    addNodeIfModelNotNull(generatorNode,templatesModel,"Templates Model");
    node.add(generatorNode);
  }
  SModelDescriptor typesystemModelDescriptor=language.getTypesystemModelDescriptor();
  if (typesystemModelDescriptor != null) {
    addNodeIfModelNotNull(node,typesystemModelDescriptor,"Typesystem");
  }
  SModelDescriptor actionsModelDescriptor=language.getActionsModelDescriptor();
  if (actionsModelDescriptor != null) {
    addNodeIfModelNotNull(node,actionsModelDescriptor,"Actions");
  }
  TextTreeNode libraries=new TextTreeNode("<html><b>Library Models</b>"){
    public Icon getIcon(    boolean expanded){
      return Icons.LIB_ICON;
    }
  }
;
  List<SModelDescriptor> models=new ArrayList<SModelDescriptor>();
  models.addAll(language.getLibraryModels());
  Collections.sort(models,new Comparator<SModelDescriptor>(){
    public int compare(    SModelDescriptor o1,    SModelDescriptor o2){
      return o1.getFQName().compareTo(o2.getFQName());
    }
  }
);
  for (  SModelDescriptor model : models) {
    libraries.add(createSModelTreeNode(model,null));
  }
  node.add(libraries);
}
