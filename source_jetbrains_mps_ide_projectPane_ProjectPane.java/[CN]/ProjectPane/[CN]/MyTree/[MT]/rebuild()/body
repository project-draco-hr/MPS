{
  mySModelTreeNodes.clear();
  IOperationContext operationContext=myIDE.getProjectOperationContext();
  if (myProject == null) {
    return new TextTreeNode("Empty");
  }
  ProjectTreeNode root=new ProjectTreeNode(operationContext);
  ProjectModelsTreeNode projectModelsNode=new ProjectModelsTreeNode(operationContext);
  root.add(projectModelsNode);
  HashMap<String,ArrayList<SModelDescriptor>> stereotypes=new HashMap<String,ArrayList<SModelDescriptor>>();
  for (  SModelDescriptor modelDescriptor : sortSemanticModels(new ArrayList<SModelDescriptor>(operationContext.getModelDescriptors()))) {
    String stereotype=modelDescriptor.getStereotype();
    if (stereotype == null || stereotype.length() == 0) {
      projectModelsNode.add(createSModelTreeNode(modelDescriptor,null,operationContext));
    }
 else {
      ArrayList<SModelDescriptor> sModelDescriptors=stereotypes.get(stereotype);
      if (sModelDescriptors == null) {
        sModelDescriptors=new ArrayList<SModelDescriptor>();
        stereotypes.put(stereotype,sModelDescriptors);
      }
      sModelDescriptors.add(modelDescriptor);
    }
  }
  for (  String stereotype : stereotypes.keySet()) {
    ArrayList<SModelDescriptor> sModelDescriptors=stereotypes.get(stereotype);
    ProjectModelsTreeNode stereotypedModelsNode=new ProjectModelsTreeNode(operationContext,stereotype);
    root.add(stereotypedModelsNode);
    for (    SModelDescriptor sModelDescr : sModelDescriptors) {
      stereotypedModelsNode.add(createSModelTreeNode(sModelDescr,null,operationContext));
    }
  }
  DefaultMutableTreeNode projectLanguagesNode=new ProjectLanguagesTreeNode(operationContext);
  for (  Language language : myProject.getProjectLanguages()) {
    ProjectLanguageTreeNode node=new ProjectLanguageTreeNode(language);
    projectLanguagesNode.add(node);
    initProjectLanguageNode(node,language);
  }
  DefaultMutableTreeNode languagesNode=new LanguagesTreeNode(operationContext);
  for (  Language language : operationContext.getLanguages()) {
    LanguageTreeNode node=new LanguageTreeNode(language);
    languagesNode.add(node);
    initLanguageNode(node,language);
  }
  root.add(projectLanguagesNode);
  root.add(languagesNode);
  return root;
}
