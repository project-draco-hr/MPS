{
  JMenu rootPopupMenu=new JMenu("Create Root Node");
  rootPopupMenu.setIcon(MPSAction.EMPTY_ICON);
  if (semanticModel.getLanguages().size() == 0) {
    rootPopupMenu.add(new AbstractActionWithEmptyIcon("<NO LANGUAGES>"){
{
        setEnabled(false);
      }
      public void actionPerformed(      ActionEvent e){
      }
    }
);
  }
  for (  Language language : semanticModel.getLanguages()) {
    String languageName=language.getNamespace();
    JMenu langRootsMenu=new JMenu(languageName);
    langRootsMenu.setIcon(IconManager.getIconFor(language.getNamespace()));
    rootPopupMenu.add(langRootsMenu);
    Iterator<ConceptDeclaration> iterator=language.semanticTypes();
    while (iterator.hasNext()) {
      final ConceptDeclaration typeDeclaration=iterator.next();
      if (typeDeclaration.getRootable()) {
        String className=SModelUtil.getClassNameFor(typeDeclaration);
        Class cls=null;
        try {
          cls=Class.forName(className,true,ClassLoaderManager.getInstance().getClassLoader());
        }
 catch (        ClassNotFoundException e) {
        }
        if (cls != null) {
          langRootsMenu.add(new AbstractAction(typeDeclaration.getName()){
{
              CommandProcessor.instance().executeCommand(new Runnable(){
                public void run(){
                  SemanticNode node=SModelUtil.instantiateConceptDeclaration(typeDeclaration,ApplicationComponents.getInstance().getComponent(ProjectModel.class).getSModel());
                  LOG.assertLog(node != null,"Node isn't null");
                  putValue(Action.SMALL_ICON,IconManager.getIconFor(node));
                }
              }
,"find icon for " + typeDeclaration.getName());
            }
            public void actionPerformed(            ActionEvent e){
              CommandProcessor.instance().executeCommand(new Runnable(){
                public void run(){
                  SemanticNode node=SModelUtil.instantiateConceptDeclaration(typeDeclaration,semanticModel);
                  node.getModel().addRoot(node);
                  selectNode(node);
                  openEditor();
                }
              }
,"add root node " + typeDeclaration.getName());
            }
          }
);
        }
 else {
          langRootsMenu.add(new AbstractActionWithEmptyIcon(typeDeclaration.getName() + " (Structure Isn't Generated)"){
{
              setEnabled(false);
            }
            public void actionPerformed(            ActionEvent e){
            }
          }
);
        }
      }
    }
    if (langRootsMenu.getItemCount() == 0) {
      JMenuItem emptyItem=new JMenuItem("empty");
      emptyItem.setIcon(MPSAction.EMPTY_ICON);
      emptyItem.setEnabled(false);
      langRootsMenu.add(emptyItem);
    }
  }
  return rootPopupMenu;
}
