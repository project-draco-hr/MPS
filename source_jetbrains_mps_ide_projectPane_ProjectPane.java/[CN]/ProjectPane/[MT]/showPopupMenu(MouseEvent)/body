{
  JPopupMenu popupMenu=new JPopupMenu();
  TreePath selectionPath=myTree.getSelectionPath();
  final Object lastPathComponent=selectionPath.getLastPathComponent();
  MPSTreeNodeEx selectedTreeNode=null;
  SModel semanticModel=null;
  if (lastPathComponent instanceof MPSTreeNodeEx) {
    selectedTreeNode=(MPSTreeNodeEx)selectionPath.getLastPathComponent();
    if (selectedTreeNode != null) {
      semanticModel=((MPSTreeNodeEx)selectedTreeNode).getSModel();
    }
  }
  if (semanticModel != null) {
    JMenu rootPopupMenu=createRootPopupMenu(semanticModel);
    popupMenu.add(rootPopupMenu);
  }
  if (selectedTreeNode != null && selectedTreeNode.getSNode() != null) {
    popupMenu.addSeparator();
    addSemanticNodePopupActions(popupMenu,selectedTreeNode.getSNode(),semanticModel);
  }
  if (selectionPath.getLastPathComponent() == myTree.getModel().getRoot()) {
    popupMenu.add(createGenerateMenu(null));
    popupMenu.add(createGenerateTextMenu(null));
    popupMenu.addSeparator();
    popupMenu.add(new AbstractAction("Project Properties",Icons.PROJECT_PROPERTIES_ICON){
      public void actionPerformed(      ActionEvent e){
        new ProjectPropertiesDialog(myIDE.getMainFrame(),myProject).showDialog();
      }
    }
);
  }
  if (selectionPath.getLastPathComponent() instanceof ProjectModelsTreeNode) {
    ActionManager.instance().getGroup(PROJECT_PANE_MODELS_ACTIONS).add(popupMenu,new ActionContext(myIDE));
  }
  if (selectionPath.getLastPathComponent() instanceof ProjectLanguagesTreeNode) {
    popupMenu.add(new AbstractActionWithEmptyIcon("New Language"){
      public void actionPerformed(      ActionEvent e){
        NewLanguageDialog dialog=new NewLanguageDialog(myIDE.getMainFrame(),myProject);
        dialog.showDialog();
      }
    }
);
  }
  if (getSelectedModel() != null) {
    if (selectionPath.getLastPathComponent() instanceof SModelTreeNode) {
      SModelDescriptor model=((SModelTreeNode)selectionPath.getLastPathComponent()).getModelDescriptor();
      ActionContext context=new ActionContext(myIDE);
      context.put(SModelDescriptor.class,model);
      ActionManager.instance().getGroup(PROJECT_PANE_MODEL_ACTIONS).add(popupMenu,context);
      popupMenu.addSeparator();
      popupMenu.add(createGenerateMenu(getSelectedModel()));
      popupMenu.add(createGenerateTextMenu(getSelectedModel()));
      SModelDescriptor selectedModelDescriptor=getSelectedModel();
      if (selectedModelDescriptor != null) {
        SModel selectedModel=selectedModelDescriptor.getSModel();
        for (        Language language : selectedModel.getLanguages()) {
          if (language.getNamespace().equals("jetbrains.mps.bootstrap.editorLanguage")) {
            popupMenu.addSeparator();
            popupMenu.add(EditorLanguageUtil.createTurnCellBordersOnOffAction(selectedModel,true,myProject));
            popupMenu.add(EditorLanguageUtil.createTurnCellBordersOnOffAction(selectedModel,false,myProject));
            break;
          }
        }
      }
    }
  }
  if (lastPathComponent instanceof ProjectLanguageTreeNode) {
    final ProjectLanguageTreeNode languageTreeNode=((ProjectLanguageTreeNode)lastPathComponent);
    popupMenu.add(new AbstractActionWithEmptyIcon("Generate Language"){
      public void actionPerformed(      ActionEvent e){
        myProject.getComponent(GeneratorManager.class).generate(languageTreeNode.getLanguage());
      }
    }
);
    popupMenu.addSeparator();
    popupMenu.add(new AbstractAction("Language Properties",Icons.LANGUAGE_PROPERTIES_ICON){
      public void actionPerformed(      ActionEvent e){
        new LanguagePropertiesDialog(myIDE.getMainFrame(),myProject,languageTreeNode.getLanguage()).showDialog();
      }
    }
);
  }
  if (getSelectedModel() != null) {
    popupMenu.addSeparator();
    addVCSMenu(popupMenu,getSelectedModel());
    popupMenu.addSeparator();
    popupMenu.add(new AbstractAction("Model Properties",Icons.MODEL_PROPERTIES_ICON){
      public void actionPerformed(      ActionEvent e){
        DialogUtils.editModelProperties(myIDE);
      }
    }
);
  }
  if (popupMenu.getComponentCount() == 0)   return;
  popupMenu.show(myTree,e.getX(),e.getY());
}
