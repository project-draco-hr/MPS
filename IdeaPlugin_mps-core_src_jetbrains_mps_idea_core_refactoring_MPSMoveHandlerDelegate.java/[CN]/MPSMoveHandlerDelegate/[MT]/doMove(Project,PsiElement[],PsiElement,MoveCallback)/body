{
  final MPSProject mpsProject=project.getComponent(MPSProject.class);
  mpsProject.getRepository().getModelAccess().runReadInEDT(new Runnable(){
    @Override public void run(){
      MoveRefactoringContributor theContributor=null;
      List<SNode> nodes=new ArrayList<SNode>(elements.length);
      for (int i=0; i < elements.length; i++) {
        nodes.add(((MPSPsiRealNode)elements[i]).getSNodeReference().resolve(mpsProject.getRepository()));
      }
      for (      MoveRefactoringContributorEP ep : MoveRefactoringContributorEP.EP_NAME.getExtensions()) {
        MoveRefactoringContributor c=ep.getContribitor();
        if (c.isAvailableFor(nodes)) {
          theContributor=c;
          break;
        }
      }
      if (theContributor != null) {
        theContributor.invoke(project,nodes);
      }
    }
  }
);
}
