{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("property",new BaseReferenceConstraintsDescriptor("property",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          SNode createStatement=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.execution.configurations.deprecated.structure.CreateRunConfigStatement",true,false);
          if ((createStatement == null)) {
            return new ArrayList<SNode>();
          }
          SNode runConfig=SLinkOperations.getTarget(createStatement,"runConfig",false);
          if ((runConfig == null)) {
            return new ArrayList<SNode>();
          }
          return SLinkOperations.getTargets(runConfig,"property",true);
        }
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_dpzxjb_a0a1a0a0a1a0b0a1a2;
        }
      }
;
    }
  }
);
  return references;
}
