{
  this.addNodeById("2906110183022090592");
  this.addNodeById("2906110183022122665");
  this.addNodeById("2906110183022122679");
  SNode rootLinkDeclaration=SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.smodelTests.structure.ReferenceContainer","root");
  SReference rootContainerReference=SNodeOperations.getReference(SNodeOperations.cast(this.getNodeById("2906110183022122680"),"jetbrains.mps.lang.smodelTests.structure.ReferenceContainerSubConcept"),rootLinkDeclaration);
  Assert.assertEquals(SNodeOperations.cast(this.getNodeById("2906110183022122666"),"jetbrains.mps.lang.smodelTests.structure.Root"),SLinkOperations.getTargetNode(rootContainerReference));
  Assert.assertEquals(rootLinkDeclaration,SLinkOperations.findLinkDeclaration(rootContainerReference));
  Assert.assertEquals(SPropertyOperations.getString(rootLinkDeclaration,"role"),SLinkOperations.getRole(rootContainerReference));
  Assert.assertNotNull(SLinkOperations.getResolveInfo(rootContainerReference));
  SReference leftChildReference=SNodeOperations.getReference(SNodeOperations.cast(this.getNodeById("2906110183022122680"),"jetbrains.mps.lang.smodelTests.structure.ReferenceContainerSubConcept"),SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.smodelTests.structure.ReferenceContainer","leftChild"));
  Assert.assertEquals(SNodeOperations.cast(this.getNodeById("2906110183022122667"),"jetbrains.mps.lang.smodelTests.structure.Child"),SLinkOperations.getTargetNode(leftChildReference));
  Assert.assertEquals(SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.smodelTests.structure.ReferenceContainer","leftChild"),SLinkOperations.findLinkDeclaration(leftChildReference));
  Assert.assertEquals(SPropertyOperations.getString(SLinkOperations.findLinkDeclaration("jetbrains.mps.lang.smodelTests.structure.ReferenceContainer","leftChild"),"role"),SLinkOperations.getRole(leftChildReference));
  Assert.assertNotNull(SLinkOperations.getResolveInfo(leftChildReference));
}
