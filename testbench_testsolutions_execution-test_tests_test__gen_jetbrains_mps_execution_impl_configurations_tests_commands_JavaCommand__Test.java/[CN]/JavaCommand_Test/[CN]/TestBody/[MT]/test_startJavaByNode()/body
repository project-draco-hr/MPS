{
  final Wrappers._T<SNodeReference> pointer=new Wrappers._T<SNodeReference>();
  this.myProject.getModelAccess().runReadAction(new Runnable(){
    public void run(){
      SModel model=new ModuleRepositoryFacade(TestBody.this.myProject.getRepository()).getModelByName("jetbrains.mps.execution.impl.configurations.tests.commands.sandbox@tests");
      SNode mainNode=ListSequence.fromList(SModelOperations.roots(model,MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,"jetbrains.mps.lang.core.structure.INamedConcept"))).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return eq_849b2c_a0a0a0a0a0a1a0a0a0a1a0b(SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")),Main.class.getSimpleName());
        }
      }
);
      pointer.value=new SNodePointer(mainNode);
    }
  }
);
  this.checkProcess(new Java_Command().createProcess(pointer.value),Main.MESSAGE + "\n");
}
