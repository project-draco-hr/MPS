{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.lang.intentions.structure.BaseIntentionDeclaration","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.lang.checkedName.structure.ICheckedNamePolicy","jetbrains.mps.lang.structure.structure.IConceptAspect"},new String[]{"isErrorIntention","isAvailableInChildNodes"},new String[]{"forConcept"},new String[]{"descriptionFunction","childFilterFunction","isApplicableFunction","executeFunction"},new boolean[]{false,false,false,false});
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.lang.intentions.structure.ChildFilterBlock",null,true,new String[]{},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.lang.intentions.structure.ChildFilterFunction","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction","jetbrains.mps.lang.intentions.structure.ChildFilterBlock"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.lang.intentions.structure.ConceptFunctionParameter_childNode","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.lang.intentions.structure.ConceptFunctionParameter_node","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.lang.intentions.structure.DescriptionBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.lang.intentions.structure.ExecuteBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.lang.intentions.structure.IntentionDeclaration","jetbrains.mps.lang.intentions.structure.BaseIntentionDeclaration",false,new String[]{"jetbrains.mps.lang.intentions.structure.BaseIntentionDeclaration"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.lang.intentions.structure.IntentionParameter","jetbrains.mps.baseLanguage.structure.Expression",false,new String[]{"jetbrains.mps.baseLanguage.structure.Expression","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.lang.intentions.structure.IsApplicableBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.lang.intentions.structure.ParameterizedDescriptionBlock","jetbrains.mps.lang.intentions.structure.DescriptionBlock",false,new String[]{"jetbrains.mps.lang.intentions.structure.DescriptionBlock"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 11:
return new CompiledConceptDescriptor("jetbrains.mps.lang.intentions.structure.ParameterizedExecuteBlock","jetbrains.mps.lang.intentions.structure.ExecuteBlock",false,new String[]{"jetbrains.mps.lang.intentions.structure.ExecuteBlock"},new String[]{},new String[]{},new String[]{},new boolean[]{});
case 12:
return new CompiledConceptDescriptor("jetbrains.mps.lang.intentions.structure.ParameterizedIntentionDeclaration","jetbrains.mps.lang.intentions.structure.IntentionDeclaration",false,new String[]{"jetbrains.mps.lang.intentions.structure.IntentionDeclaration"},new String[]{},new String[]{},new String[]{"queryBlock","descriptionBlock","executeBlock"},new boolean[]{false,false,false});
case 13:
return new CompiledConceptDescriptor("jetbrains.mps.lang.intentions.structure.QueryBlock","jetbrains.mps.baseLanguage.structure.ConceptFunction",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunction"},new String[]{},new String[]{},new String[]{"paramType"},new boolean[]{false});
case 14:
return new CompiledConceptDescriptor("jetbrains.mps.lang.intentions.structure.SurroundWithIntentionDeclaration","jetbrains.mps.lang.intentions.structure.BaseIntentionDeclaration",false,new String[]{"jetbrains.mps.lang.intentions.structure.BaseIntentionDeclaration"},new String[]{},new String[]{},new String[]{},new boolean[]{});
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
