{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_1htk8d_a0y.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return myConceptBaseIntentionDeclaration;
      }
    break;
case 1:
  if (true) {
    return myConceptChildFilterBlock;
  }
break;
case 2:
if (true) {
return myConceptChildFilterFunction;
}
break;
case 3:
if (true) {
return myConceptConceptFunctionParameter_childNode;
}
break;
case 4:
if (true) {
return myConceptConceptFunctionParameter_node;
}
break;
case 5:
if (true) {
return myConceptDescriptionBlock;
}
break;
case 6:
if (true) {
return myConceptErrorIntentionPriority;
}
break;
case 7:
if (true) {
return myConceptExecuteBlock;
}
break;
case 8:
if (true) {
return myConceptForConceptMethodParameter;
}
break;
case 9:
if (true) {
return myConceptIntention;
}
break;
case 10:
if (true) {
return myConceptIntentionDeclaration;
}
break;
case 11:
if (true) {
return myConceptIntentionParameter;
}
break;
case 12:
if (true) {
return myConceptIntentionPriority;
}
break;
case 13:
if (true) {
return myConceptIsApplicableBlock;
}
break;
case 14:
if (true) {
return myConceptParameter;
}
break;
case 15:
if (true) {
return myConceptParameterizedDescriptionBlock;
}
break;
case 16:
if (true) {
return myConceptParameterizedExecuteBlock;
}
break;
case 17:
if (true) {
return myConceptParameterizedIntentionDeclaration;
}
break;
case 18:
if (true) {
return myConceptQueryBlock;
}
break;
case 19:
if (true) {
return myConceptSurroundWithIntentionDeclaration;
}
break;
default :
}
}
return null;
}
