{
  final Wrappers._T<List<SpecificChecker>> specificCheckers=new Wrappers._T<List<SpecificChecker>>(mySpecificCheckers);
  if (specificCheckers.value == null) {
    specificCheckers.value=ModelCheckerSettings.getInstance().getSpecificCheckers();
  }
  monitor.start("Checking " + modelDescriptor.getLongName(),ListSequence.fromList(specificCheckers.value).count());
  try {
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        IModule module=modelDescriptor.getModule();
        Project project=myOperationContext.getProject();
        if (module == null) {
          if (log.isWarnEnabled()) {
            log.warn("Module is null for " + modelDescriptor.getLongName() + " model");
          }
        }
        if (project == null) {
          if (log.isWarnEnabled()) {
            log.warn("Project is null for IOperationContext in " + modelDescriptor.getLongName() + " model");
          }
        }
        if (module != null && project != null) {
          IOperationContext operationContext=new ModelChecker.ModelCheckerOperationContext(project,module);
          SModel model=modelDescriptor.getSModel();
          for (          SpecificChecker specificChecker : ListSequence.fromList(specificCheckers.value)) {
            try {
              List<SearchResult<ModelCheckerIssue>> specificCheckerResults=specificChecker.checkModel(model,monitor.subTask(1),operationContext);
              myResults.getSearchResults().addAll(specificCheckerResults);
            }
 catch (            Throwable t) {
              if (log.isErrorEnabled()) {
                log.error("Error while " + model.getModelDescriptor().getLongName() + " model checking",t);
              }
            }
            if (monitor.isCanceled()) {
              break;
            }
          }
        }
      }
    }
);
  }
  finally {
    monitor.done();
  }
}
