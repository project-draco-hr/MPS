{
  myProject.getModelAccess().runReadAction(new Runnable(){
    public void run(){
      SModel m=null;
      SNode project1=SModelOperations.createNewNode(m,null,MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,"jetbrains.mps.build.structure.BuildProject"));
      SNode l1=SModelOperations.createNewNode(m,null,MetaAdapterFactory.getConcept(0xcf935df46994e9cL,0xa132fa109541cba3L,0x2c446791464290f8L,"jetbrains.mps.build.mps.structure.BuildMps_Language"));
      SNode g1=SModelOperations.createNewNode(m,null,MetaAdapterFactory.getConcept(0xcf935df46994e9cL,0xa132fa109541cba3L,0x4c6db07d2e56a8b4L,"jetbrains.mps.build.mps.structure.BuildMps_Generator"));
      SNode l2=SModelOperations.createNewNode(m,null,MetaAdapterFactory.getConcept(0xcf935df46994e9cL,0xa132fa109541cba3L,0x2c446791464290f8L,"jetbrains.mps.build.mps.structure.BuildMps_Language"));
      SNode g2=SModelOperations.createNewNode(m,null,MetaAdapterFactory.getConcept(0xcf935df46994e9cL,0xa132fa109541cba3L,0x4c6db07d2e56a8b4L,"jetbrains.mps.build.mps.structure.BuildMps_Generator"));
      SLinkOperations.setTarget(SLinkOperations.setNewChild(SLinkOperations.addNewChild(l2,MetaAdapterFactory.getContainmentLink(0xcf935df46994e9cL,0xa132fa109541cba3L,0x48e82d508331930cL,0x48e82d5083341cb8L,"dependencies"),MetaAdapterFactory.getConcept(0xcf935df46994e9cL,0xa132fa109541cba3L,0x64bd442e1cf7aaeeL,"jetbrains.mps.build.mps.structure.BuildMps_ExtractedModuleDependency")),MetaAdapterFactory.getContainmentLink(0xcf935df46994e9cL,0xa132fa109541cba3L,0x64bd442e1cf7aaeeL,0x64bd442e1cf7aaefL,"dependency"),MetaAdapterFactory.getConcept(0xcf935df46994e9cL,0xa132fa109541cba3L,0x3b60c4a45c19032eL,"jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyExtendLanguage")),MetaAdapterFactory.getReferenceLink(0xcf935df46994e9cL,0xa132fa109541cba3L,0x3b60c4a45c19032eL,0x3b60c4a45c190330L,"language"),l1);
      SLinkOperations.setTarget(l1,MetaAdapterFactory.getContainmentLink(0xcf935df46994e9cL,0xa132fa109541cba3L,0x2c446791464290f8L,0x7fae147806433827L,"generator"),g1);
      SLinkOperations.setTarget(l2,MetaAdapterFactory.getContainmentLink(0xcf935df46994e9cL,0xa132fa109541cba3L,0x2c446791464290f8L,0x7fae147806433827L,"generator"),g2);
      ListSequence.fromList(SLinkOperations.getChildren(project1,MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,0x668c6cfbafacf6f2L,"parts"))).addElement(l1);
      ListSequence.fromList(SLinkOperations.getChildren(project1,MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,0x668c6cfbafacf6f2L,"parts"))).addElement(l2);
      SNode project2=SModelOperations.createNewNode(m,null,MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,"jetbrains.mps.build.structure.BuildProject"));
      SNode s2=SModelOperations.createNewNode(m,null,MetaAdapterFactory.getConcept(0xcf935df46994e9cL,0xa132fa109541cba3L,0x2c446791464290f7L,"jetbrains.mps.build.mps.structure.BuildMps_Solution"));
      ListSequence.fromList(SLinkOperations.getChildren(project2,MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,0x668c6cfbafacf6f2L,"parts"))).addElement(s2);
      SLinkOperations.setTarget(SLinkOperations.addNewChild(project2,MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x4df58c6f18f84a13L,0x4df58c6f18f84a25L,"dependencies"),MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x454b730dd908c220L,"jetbrains.mps.build.structure.BuildProjectDependency")),MetaAdapterFactory.getReferenceLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x454b730dd908c220L,0x4df58c6f18f84a24L,"script"),project1);
      SLinkOperations.setTarget(SLinkOperations.addNewChild(s2,MetaAdapterFactory.getContainmentLink(0xcf935df46994e9cL,0xa132fa109541cba3L,0x48e82d508331930cL,0x48e82d5083341cb8L,"dependencies"),MetaAdapterFactory.getConcept(0xcf935df46994e9cL,0xa132fa109541cba3L,0x2c4467914643d2d2L,"jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyUseLanguage")),MetaAdapterFactory.getReferenceLink(0xcf935df46994e9cL,0xa132fa109541cba3L,0x2c4467914643d2d2L,0x2c4467914643d2d3L,"language"),l2);
      Set<SNode> clAsSet=SetSequence.fromSet(new HashSet<SNode>());
      MPSModulesPartitioner p=new MPSModulesPartitioner(project2);
      p.buildChunks();
      p.buildExternalDependencies();
      SetSequence.fromSet(clAsSet).addSequence(Sequence.fromIterable(p.getExternal()));
      Assert.assertTrue(SetSequence.fromSet(clAsSet).contains(l2));
      Assert.assertTrue(SetSequence.fromSet(clAsSet).contains(l1));
    }
  }
);
}
