{
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      Iterable<SReference> brokenReferences=Sequence.fromIterable(BehaviorReflection.invokeVirtual((Class<Iterable<SNode>>)((Class)Object.class),SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getContainmentLink(new UUID(-6492820313512655654l,-6146453626538471728l),2087237500458009228l,2087237500458009229l,"target")),"virtual_getNodes_5207260697411458163",new Object[]{context})).translate(new ITranslator2<SNode,SReference>(){
        public Iterable<SReference> translate(        SNode it){
          return SNodeOperations.getReferences(it);
        }
      }
).where(new IWhereFilter<SReference>(){
        public boolean accept(        SReference it){
          return jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(it) == null;
        }
      }
);
      for (      SReference ref : Sequence.fromIterable(brokenReferences)) {
        console.addText("model id = " + ref.getTargetSModelReference());
        console.addText("\n");
        console.addText("node  id = " + ref.getTargetNodeId());
        SNode targetNode=ref.getSourceNode();
        console.addText("\n");
        SNode clickableNode=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(new UUID(-2442401883381282302l,-5546511894809623691l),2348043250036118117l,"jetbrains.mps.console.base.structure.NodeReferenceString")));
        SPropertyOperations.set(clickableNode,MetaAdapterFactory.getProperty(new UUID(-2442401883381282302l,-5546511894809623691l),3939645998855102389l,328850564588102084l,"referencePresentation"),"Go to enclosing node");
        SLinkOperations.setTarget(clickableNode,MetaAdapterFactory.getReferenceLink(new UUID(-2442401883381282302l,-5546511894809623691l),3939645998855102389l,328850564588043375l,"target"),targetNode);
        console.addNode(clickableNode);
        console.addText("\n");
        console.addText("\n");
      }
    }
  }
);
}
