{
  Iterable<SReference> brokenReferences=Sequence.fromIterable(BehaviorReflection.invokeVirtual((Class<Iterable<SNode>>)((Class)Object.class),SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getContainmentLink(0xa5e4de5346a344daL,0xaab368fdf1c34ed0L,0x1cf75b72b0ac828cL,0x1cf75b72b0ac828dL,"target")),"virtual_getNodes_5207260697411458163",new Object[]{context})).translate(new ITranslator2<SNode,SReference>(){
    public Iterable<SReference> translate(    SNode it){
      return SNodeOperations.getReferences(it);
    }
  }
).where(new IWhereFilter<SReference>(){
    public boolean accept(    SReference it){
      return jetbrains.mps.util.SNodeOperations.getTargetNodeSilently(it) == null;
    }
  }
);
  for (  SReference ref : Sequence.fromIterable(brokenReferences)) {
    console.addText("model id = " + ref.getTargetSModelReference());
    console.addText("\n");
    console.addText("node  id = " + ref.getTargetNodeId());
    SNode targetNode=ref.getSourceNode();
    console.addText("\n");
    SNode clickableNode=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xde1ad86d6e504a02L,0xb306d4d17f64c375L,0x2095ece53ba81265L,"jetbrains.mps.console.base.structure.NodeReferenceString")));
    SPropertyOperations.set(clickableNode,MetaAdapterFactory.getProperty(0xde1ad86d6e504a02L,0xb306d4d17f64c375L,0x36ac6f29ae8c1fb5L,0x4904fd89e75e1c4L,"referencePresentation"),"Go to enclosing node");
    SLinkOperations.setTarget(clickableNode,MetaAdapterFactory.getReferenceLink(0xde1ad86d6e504a02L,0xb306d4d17f64c375L,0x36ac6f29ae8c1fb5L,0x4904fd89e74fc6fL,"target"),targetNode);
    console.addNode(clickableNode);
    console.addText("\n");
    console.addText("\n");
  }
}
