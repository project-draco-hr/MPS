{
  if (appliedChanges.contains(changeToApply)) {
    return;
  }
  appliedChanges.add(changeToApply);
  notAppliedNodes.remove(changeToApply.getAffectedNodeId());
  changeToApply.apply(myNewModel);
  if (dependenciesMap.containsKey(changeToApply.getAffectedNodeId())) {
    for (    OldChange dependant : dependenciesMap.get(changeToApply.getAffectedNodeId())) {
      boolean dependenciesResolved=true;
      for (      SNodeId dependency : dependant.getDependencies()) {
        if (notAppliedNodes.contains(dependency)) {
          dependenciesResolved=false;
          break;
        }
      }
      if (dependenciesResolved) {
        applyChange(dependenciesMap,appliedChanges,notAppliedNodes,dependant);
      }
    }
  }
  if (changeToApply instanceof OldAddRootChange) {
    myNewEditorComponent.editNode(myNewModel.getNodeById(changeToApply.getAffectedNodeId()),myNewEditorComponent.getOperationContext());
  }
}
