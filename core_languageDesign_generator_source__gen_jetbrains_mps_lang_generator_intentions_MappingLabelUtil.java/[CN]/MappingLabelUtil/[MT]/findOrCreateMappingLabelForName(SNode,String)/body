{
  SNode mappingLabel=null;
  List<SNode> mappingConfigurations=SModelOperations.getRootsIncludingImported(SNodeOperations.getModel(templateNode),GlobalScope.getInstance(),"jetbrains.mps.lang.generator.structure.MappingConfiguration");
  for (  SNode mc : Sequence.fromIterable(mappingConfigurations)) {
    for (    SNode ml : Sequence.fromIterable(SLinkOperations.getTargets(mc,"mappingLabel",true))) {
      if (labelName.equals(SPropertyOperations.getString(ml,"name"))) {
        mappingLabel=ml;
        break;
      }
    }
  }
  if (mappingLabel == null) {
    SNode mc;
    List<SNode> localMCs=SModelOperations.getRoots(SNodeOperations.getModel(templateNode),"jetbrains.mps.lang.generator.structure.MappingConfiguration");
    if (ListSequence.fromList(localMCs).isNotEmpty()) {
      mc=ListSequence.fromList(localMCs).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return ListSequence.fromList(SLinkOperations.getTargets(it,"mappingLabel",true)).isNotEmpty();
        }
      }
).first();
      if (mc == null) {
        mc=ListSequence.fromList(localMCs).first();
      }
    }
 else {
      mc=SModelOperations.createNewRootNode(SNodeOperations.getModel(templateNode),"jetbrains.mps.lang.generator.structure.MappingConfiguration",null);
      SPropertyOperations.set(mc,"name","MappingLabels");
    }
    SNode newLabel=SLinkOperations.addNewChild(mc,"mappingLabel","jetbrains.mps.lang.generator.structure.MappingLabelDeclaration");
    SPropertyOperations.set(newLabel,"name",labelName);
    mappingLabel=newLabel;
  }
  return mappingLabel;
}
