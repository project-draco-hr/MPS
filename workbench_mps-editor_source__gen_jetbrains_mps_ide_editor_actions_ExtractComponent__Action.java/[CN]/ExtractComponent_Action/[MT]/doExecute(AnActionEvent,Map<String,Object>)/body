{
  final String componentName=Messages.showInputDialog(((Project)MapSequence.fromMap(_params).get("ideaProject")),"Enter a component name:","",null);
  if (componentName == null) {
    return;
  }
  final SNode ecm=((SNode)MapSequence.fromMap(_params).get("node"));
  ((EditorContext)MapSequence.fromMap(_params).get("editorContext")).getRepository().getModelAccess().executeCommand(new Runnable(){
    public void run(){
      SModel model=SNodeOperations.getModel(ecm);
      SNode component=SModelOperations.createNewRootNode(model,SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0xfb35c2bb47L,"jetbrains.mps.lang.editor.structure.EditorComponentDeclaration")));
      SPropertyOperations.set(component,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),componentName);
      SNode container=SNodeOperations.getNodeAncestor(ecm,MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0xfba0eb7c50L,"jetbrains.mps.lang.editor.structure.BaseEditorComponent"),false,false);
      SLinkOperations.setTarget(component,MetaAdapterFactory.getReferenceLink(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x10f7df344a9L,0x10f7df451aeL,"conceptDeclaration"),((SNode)BHReflection.invoke(container,SMethodTrimmedId.create("getConceptDeclaration",null,"67EYkym$wx3"))));
      SLinkOperations.setTarget(component,MetaAdapterFactory.getContainmentLink(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0xfba0eb7c50L,0xfba0ec5415L,"cellModel"),SNodeOperations.copyNode(ecm));
      SNode toReplace=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0xfb35c96896L,"jetbrains.mps.lang.editor.structure.CellModel_Component")));
      SLinkOperations.setTarget(toReplace,MetaAdapterFactory.getReferenceLink(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0xfb35c96896L,0xfb35c96897L,"editorComponent"),component);
      SNodeOperations.replaceWithAnother(ecm,toReplace);
    }
  }
);
}
