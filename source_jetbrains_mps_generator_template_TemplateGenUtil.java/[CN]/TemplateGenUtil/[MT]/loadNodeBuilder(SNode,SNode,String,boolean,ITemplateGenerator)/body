{
  Language targetLanguage=generator.getTargetLanguage();
  String conceptName=templateNode.getConceptName();
  if (targetLanguage.findConceptDeclaration(conceptName) == null) {
    return null;
  }
  String buildersPackageName=targetLanguage.getNamespace() + ".builder";
  String builderClassName=buildersPackageName + "." + conceptName+ "_NodeBuilder";
  try {
    Class builderClass=Class.forName(builderClassName,true,ClassLoaderManager.getInstance().getClassLoader());
    Constructor[] constructors=builderClass.getDeclaredConstructors();
    return (INodeBuilder)constructors[0].newInstance(sourceNode,templateNode,mappingName,isCopying,generator);
  }
 catch (  ClassNotFoundException e) {
  }
catch (  IllegalAccessException e) {
    LOG.error(builderClassName);
    throw new RuntimeException(e);
  }
catch (  InvocationTargetException e) {
    LOG.error(builderClassName);
    throw new RuntimeException(e);
  }
catch (  InstantiationException e) {
    LOG.error(builderClassName);
    throw new RuntimeException(e);
  }
catch (  Error e) {
    LOG.error(builderClassName);
    throw e;
  }
catch (  RuntimeException e) {
    LOG.error(builderClassName);
    throw e;
  }
  return null;
}
