{
  Class aspectsClass=null;
  String javaPackageName=JavaNameUtil.packageNameForModelFqName(templatesModel.getFQName());
  String aspectsClassName="Aspects";
  if (javaPackageName.length() > 0) {
    aspectsClassName=javaPackageName + "." + aspectsClassName;
  }
  try {
    aspectsClass=Class.forName(aspectsClassName);
  }
 catch (  ClassNotFoundException e) {
    throw new RuntimeException(e);
  }
  Method[] declaredMethods=aspectsClass.getDeclaredMethods();
  for (int i=0; i < declaredMethods.length; i++) {
    Method declaredMethod=declaredMethods[i];
    if (declaredMethod.getName().equals(methodName)) {
      try {
        return declaredMethod.invoke(null,arguments);
      }
 catch (      IllegalAccessException e) {
        throw new RuntimeException(e);
      }
catch (      InvocationTargetException e) {
        throw new RuntimeException(e);
      }
    }
  }
  throw new RuntimeException("Couldn't find method \"" + methodName + "\" in "+ aspectsClass.getPackage().getName()+ "."+ aspectsClass.getName());
}
