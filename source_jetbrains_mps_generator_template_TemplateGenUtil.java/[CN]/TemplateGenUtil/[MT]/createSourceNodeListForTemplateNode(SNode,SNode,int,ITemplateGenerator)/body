{
  try {
    List<NodeMacro> nodeMacros=NodeMacro_AnnotationLink.getNodeMacros((BaseConcept)templateNode.getAdapter());
    NodeMacro nodeMacro=null;
    if (nodeMacros.size() > currentMacroIndex) {
      nodeMacro=nodeMacros.get(currentMacroIndex);
    }
    if (nodeMacro instanceof CopySrcNodeMacro) {
      return getSourceNodesForMacroWithSourceNodeQuery(parentSourceNode,(SourceSubstituteMacro)nodeMacro,((CopySrcNodeMacro)nodeMacro).getSourceNodeQuery(),false,generator);
    }
 else     if (nodeMacro instanceof MapSrcNodeMacro) {
      return getSourceNodesForMacroWithSourceNodeQuery(parentSourceNode,(SourceSubstituteMacro)nodeMacro,((MapSrcNodeMacro)nodeMacro).getSourceNodeQuery(),true,generator);
    }
 else     if (nodeMacro instanceof LoopMacro) {
      return getSourceNodesForMacroWithSourceNodesQuery(parentSourceNode,(SourceSubstituteMacro)nodeMacro,((LoopMacro)nodeMacro).getSourceNodesQuery(),generator);
    }
 else     if (nodeMacro instanceof CopySrcListMacro) {
      return getSourceNodesForMacroWithSourceNodesQuery(parentSourceNode,(SourceSubstituteMacro)nodeMacro,((CopySrcListMacro)nodeMacro).getSourceNodesQuery(),generator);
    }
 else     if (nodeMacro instanceof MapSrcListMacro) {
      return getSourceNodesForMacroWithSourceNodesQuery(parentSourceNode,(SourceSubstituteMacro)nodeMacro,((MapSrcListMacro)nodeMacro).getSourceNodesQuery(),generator);
    }
 else     if (nodeMacro instanceof SwitchMacro) {
      return getSourceNodesForSwitchMacro(parentSourceNode,(SwitchMacro)nodeMacro,generator);
    }
 else     if (nodeMacro instanceof IncludeMacro) {
      return getSourceNodesForMacroWithSourceNodeQuery(parentSourceNode,(SourceSubstituteMacro)nodeMacro,((IncludeMacro)nodeMacro).getSourceNodeQuery(),true,generator);
    }
    if (nodeMacro != null) {
      String sourceQueryAspectMethodName=nodeMacro.getSourceQueryAspectMethodName();
      if (sourceQueryAspectMethodName != null) {
        String methodName="templateSourceQuery_" + sourceQueryAspectMethodName;
        Object[] args=new Object[]{parentSourceNode,generator};
        List<SNode> sourceNodes=(List<SNode>)QueryMethod.invoke(methodName,args,nodeMacro.getModel());
        return sourceNodes;
      }
    }
    List<SNode> list=new ArrayList<SNode>(1);
    list.add(parentSourceNode);
    return list;
  }
 catch (  GenerationFailedException gfe) {
    throw gfe;
  }
catch (  Throwable t) {
    throw new GenerationFailedException(new GenerationFailueInfo(t.toString(),parentSourceNode,templateNode,null,generator.getGeneratorSessionContext()),t);
  }
}
