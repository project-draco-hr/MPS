{
  if (template == null) {
    generator.showErrorMessage(sourceNode,BaseAdapter.fromAdapter(template),ruleNode,"couldn't evaluate weaving rule: no template");
    return;
  }
  List<TemplateFragment> templateFragments=getTemplateFragments(template);
  if (templateFragments.isEmpty()) {
    generator.showErrorMessage(sourceNode,BaseAdapter.fromAdapter(template),ruleNode,"nothing to weave: no template fragments found in template");
    return;
  }
  boolean allFragmentsWhichUseDefaultContextHaveSameParent=true;
  SNode defaultContext=null;
  for (  TemplateFragment templateFragment : templateFragments) {
    if (templateFragment.getContextProviderAspectId() == null) {
      SNode contextNode=BaseAdapter.fromAdapter(templateFragment.getParent().getParent());
      if (defaultContext == null) {
        defaultContext=contextNode;
      }
 else       if (defaultContext != contextNode) {
        allFragmentsWhichUseDefaultContextHaveSameParent=false;
        break;
      }
    }
  }
  if (!allFragmentsWhichUseDefaultContextHaveSameParent) {
    for (    TemplateFragment templateFragment : templateFragments) {
      if (templateFragment.getContextProviderAspectId() == null) {
        generator.showErrorMessage(null,BaseAdapter.fromAdapter(templateFragment),null,"template fragment uses <default context>: conflicts with other fragments which use <default context>");
      }
    }
  }
  String ruleMappingName=ruleNode.getName();
  for (  TemplateFragment templateFragment : templateFragments) {
    SNode templateFragmentNode=BaseAdapter.fromAdapter(templateFragment.getParent());
    String mappingName=templateFragment.getName();
    if (mappingName == null) {
      mappingName=ruleMappingName;
    }
    List<INodeBuilder> fragmentNodeBuilders=createNodeBuildersForTemplateNode(sourceNode,templateFragmentNode,mappingName,0,generator);
    for (    INodeBuilder fragmentBuilder : fragmentNodeBuilders) {
      fragmentBuilder.setRuleNode(ruleNode);
      INodeBuilder fragmentContextBuilder=getContextBuilderForTemplateFragment(templateFragmentNode,contextBuilder,generator);
      if (fragmentContextBuilder != null) {
        fragmentContextBuilder.addChildBuilder(fragmentBuilder);
      }
 else {
        generator.showErrorMessage(sourceNode,BaseAdapter.fromAdapter(templateFragment),ruleNode,"couldn't define 'context' for template fragment");
      }
    }
  }
}
