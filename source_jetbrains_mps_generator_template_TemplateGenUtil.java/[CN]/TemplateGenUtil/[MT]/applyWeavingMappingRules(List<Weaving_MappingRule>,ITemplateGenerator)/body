{
  if (weavingRules.isEmpty())   return;
  for (  final Weaving_MappingRule weavingRule : weavingRules) {
    Condition<SNode> condition=new Condition<SNode>(){
      public boolean met(      SNode sourceNode){
        ConceptDeclaration nodeConcept=sourceNode.getConceptDeclaration(generator.getScope());
        if (checkPremiseForBaseMappingRule(sourceNode,nodeConcept,weavingRule,generator)) {
          TemplateDeclaration templateDeclaration=weavingRule.getTemplate();
          if (templateDeclaration == null) {
            generator.showErrorMessage(sourceNode,null,weavingRule,"weaving rule has no template");
            return false;
          }
          List<INodeBuilder> contextBuilders=getContextNodeBuilderForWeavingingRule(sourceNode,weavingRule,generator);
          if (contextBuilders == null) {
            generator.showErrorMessage(sourceNode,weavingRule,"couldn't create context node builder");
            return false;
          }
          for (          INodeBuilder b : contextBuilders) {
            weaveTemplateDeclaration(sourceNode,templateDeclaration,b,generator,weavingRule);
          }
        }
        return false;
      }
    }
;
    if (weavingRule.getSearchImportedModels()) {
      generator.getSourceModel().allNodesIncludingImported(generator.getScope(),condition);
    }
 else {
      generator.getSourceModel().allNodes(condition);
    }
  }
}
