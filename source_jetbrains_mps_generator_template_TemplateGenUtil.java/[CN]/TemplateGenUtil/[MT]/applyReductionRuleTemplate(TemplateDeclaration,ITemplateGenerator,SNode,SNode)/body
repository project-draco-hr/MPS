{
  if (template == null) {
    generator.showErrorMessage(sourceNode,null,reductionRule,"couldn't apply reduction: no template declaration");
    throw new RuntimeException("no template declaration");
  }
  List<TemplateFragment> templateFragments=getTemplateFragments(template);
  if (templateFragments.size() != 1) {
    generator.showErrorMessage(sourceNode,template,reductionRule,"reduction template must have exactly one template fragment");
    throw new RuntimeException("reduction template must have exactly one template fragment");
  }
  TemplateFragment fragment=templateFragments.get(0);
  String mappingName=fragment.getName();
  if (mappingName == null) {
    mappingName=reductionRule.getName();
  }
  SNode fragmentNode=fragment.getParent();
  List<INodeBuilder> buildersForRule=createNodeBuildersForTemplateNode(sourceNode,fragmentNode,mappingName,0,generator);
  INodeBuilder builderForRule;
  if (buildersForRule.size() == 1) {
    builderForRule=buildersForRule.get(0);
  }
 else   if (buildersForRule.size() > 1) {
    builderForRule=new DefaultNodeBuilderList(buildersForRule);
  }
 else {
    return null;
  }
  builderForRule.setRuleNode(reductionRule);
  return builderForRule;
}
