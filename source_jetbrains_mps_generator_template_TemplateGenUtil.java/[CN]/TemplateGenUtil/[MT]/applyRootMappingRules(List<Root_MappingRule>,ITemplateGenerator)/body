{
  final List<INodeBuilder> builders=new LinkedList<INodeBuilder>();
  if (mappingRules.isEmpty())   return builders;
  SModelUtil.allNodes(generator.getSourceModel(),new Condition<SNode>(){
    public boolean met(    SNode sourceNode){
      ConceptDeclaration nodeConcept=sourceNode.getConceptDeclaration(generator.getScope());
      for (      Root_MappingRule mappingRule : mappingRules) {
        if (checkPremiseForBaseMappingRule(sourceNode,nodeConcept,mappingRule,generator)) {
          NamedConcept template=mappingRule.getTemplate();
          if (template == null) {
            generator.showErrorMessage(sourceNode,null,mappingRule,"root mapping rule has no template");
            continue;
          }
          String mappingName=mappingRule.getName();
          INodeBuilder nodeBuilder=createNodeBuilder(sourceNode,template,mappingName,0,generator);
          nodeBuilder.setRuleNode(mappingRule);
          builders.add(nodeBuilder);
        }
      }
      return false;
    }
  }
);
  return builders;
}
