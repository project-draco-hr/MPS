{
  ConceptDeclaration typeDeclaration=Language.getTypeDeclaration(templateNode);
  String modelPackageName=JavaNameUtil.packageNameForModelFqName(typeDeclaration.getModel().getFQName());
  String buildersPackageName=modelPackageName + ".builder";
  String builderClassName=buildersPackageName + "." + typeDeclaration.getName()+ "_NodeBuilder";
  try {
    Class builderClass=Class.forName(builderClassName,true,ClassLoaderManager.getInstance().getClassLoader());
    Constructor[] constructors=builderClass.getDeclaredConstructors();
    INodeBuilder nodeBuilder=(INodeBuilder)constructors[0].newInstance(new Object[]{sourceNode,templateNode,mappingName,generator});
    return nodeBuilder;
  }
 catch (  ClassNotFoundException e) {
  }
catch (  IllegalAccessException e) {
    throw new RuntimeException(e);
  }
catch (  InvocationTargetException e) {
    throw new RuntimeException(e);
  }
catch (  InstantiationException e) {
    throw new RuntimeException(e);
  }
  return null;
}
