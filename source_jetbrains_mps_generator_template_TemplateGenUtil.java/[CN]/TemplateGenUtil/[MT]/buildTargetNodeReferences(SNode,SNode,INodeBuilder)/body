{
  ITemplateGenerator generator=nodeBuilder.getGenerator();
  Iterator<SReference> iterator=templateNode.getReferences().iterator();
  while (iterator.hasNext()) {
    SReference templateReference=iterator.next();
    SNode templateReferentNode=templateReference.getTargetNode();
    if (templateReferentNode == null) {
      generator.showErrorMessage(templateNode,"Invalid reference \"" + templateReference.getRole() + "\" in templates model "+ templateNode.getModel().getUID());
      continue;
    }
    if (templateReferentNode instanceof NodeMacro || templateReferentNode instanceof ReferenceMacro || templateReferentNode instanceof PropertyMacro) {
      continue;
    }
    String macroReferenceRole=ITemplateGenerator.ROLE_PREFIX_REFEENCE_MAKRO + templateReference.getRole();
    if (templateNode.getChild(macroReferenceRole) != null) {
      continue;
    }
{
      SNode targetReferentNode=nodeBuilder.resolveReference(templateReference);
      if (targetReferentNode != null) {
        if (checkResolvedReference(nodeBuilder.getSourceNode(),targetNode,templateNode,templateReference.getRole(),targetReferentNode,generator)) {
          targetNode.addReferent(templateReference.getRole(),targetReferentNode);
        }
        continue;
      }
    }
    if (templateReferentNode.getModel() != templateNode.getModel() && templateReferentNode.getModel() != generator.getSourceModel()) {
      targetNode.addReferent(templateReference.getRole(),templateReferentNode);
      continue;
    }
    IScope scope=generator.getScope();
    IReferenceResolver referenceResolver=createReferenceResolver(templateNode,scope);
    SNode targetReferentNode=referenceResolver.resolveTarget(templateReference,nodeBuilder);
    if (targetReferentNode != null) {
      if (checkResolvedReference(nodeBuilder.getSourceNode(),targetNode,templateNode,templateReference.getRole(),targetReferentNode,generator)) {
        targetNode.addReferent(templateReference.getRole(),targetReferentNode);
      }
      continue;
    }
    generator.showErrorMessage(nodeBuilder.getSourceNode(),templateNode,nodeBuilder.getRuleNode(),"Couldn't resolve template reference \"" + templateReference.getRole() + "\"");
    LOG.error("uhhh! error. set breakpoint here, referenceResolver:" + referenceResolver);
    referenceResolver.resolveTarget(templateReference,nodeBuilder);
  }
}
