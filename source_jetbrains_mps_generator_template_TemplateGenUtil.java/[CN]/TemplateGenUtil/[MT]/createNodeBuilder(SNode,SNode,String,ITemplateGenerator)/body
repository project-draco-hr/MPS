{
  INodeBuilder builder=null;
  boolean needCreateChildBuilders=true;
  List<NodeMacro> nodeMacros=NodeMacro_AnnotationLink.getNodeMacros((BaseConcept)templateNode);
  NodeMacro nodeMacro=nodeMacros.isEmpty() ? null : nodeMacros.get(0);
  if (nodeMacro != null) {
    if (nodeMacro.getMappingId() != null) {
      mappingName=nodeMacro.getMappingId();
    }
    if (nodeMacro instanceof SwitchMacro) {
      TemplateSwitch templateSwitch=((SwitchMacro)nodeMacro).getTemplateSwitch();
      builder=createNodeBuilderForSwitch(sourceNode,templateSwitch,mappingName,generator);
      if (builder != null) {
        builder.setRoleInParent(templateNode.getRole_());
        needCreateChildBuilders=false;
      }
    }
 else     if (nodeMacro instanceof CopySrcNodeMacro) {
      builder=generator.createCopyingNodeBuilder(sourceNode,templateNode);
      needCreateChildBuilders=false;
    }
 else     if (nodeMacro instanceof CopySrcListMacro) {
      builder=generator.createCopyingNodeBuilder(sourceNode,templateNode);
      needCreateChildBuilders=false;
    }
 else     if (nodeMacro instanceof MapSrcNodeMacro) {
      MapSrcNodeMacro mapSrcNodeMacro=(MapSrcNodeMacro)nodeMacro;
      String sourceNodeMapperId=mapSrcNodeMacro.getSourceNodeMapperId();
      if (sourceNodeMapperId != null) {
        builder=new QueryMethodMapperNodeBuilder(sourceNode,templateNode,mapSrcNodeMacro,generator);
        needCreateChildBuilders=false;
      }
    }
 else     if (nodeMacro instanceof MapSrcListMacro) {
      MapSrcListMacro mapSrcListMacro=(MapSrcListMacro)nodeMacro;
      String sourceNodeMapperId=mapSrcListMacro.getSourceNodeMapperId();
      if (sourceNodeMapperId != null) {
        builder=new QueryMethodMapperNodeBuilder(sourceNode,templateNode,mapSrcListMacro,generator);
        needCreateChildBuilders=false;
      }
    }
 else {
      String targetBuilderAspectMethodName=nodeMacro.getTargetBuilderAspectMethodName();
      if (targetBuilderAspectMethodName != null) {
        String methodName="templateTargetBuilder_" + targetBuilderAspectMethodName;
        Object[] args=new Object[]{sourceNode,templateNode,mappingName,generator};
        builder=(INodeBuilder)QueryMethod.invoke(methodName,args,nodeMacro.getModel());
      }
    }
  }
  if (builder == null) {
    builder=createDefaultNodeBuilder(sourceNode,templateNode,mappingName,false,generator);
  }
  if (needCreateChildBuilders) {
    createChildBuilders(builder);
  }
  return builder;
}
