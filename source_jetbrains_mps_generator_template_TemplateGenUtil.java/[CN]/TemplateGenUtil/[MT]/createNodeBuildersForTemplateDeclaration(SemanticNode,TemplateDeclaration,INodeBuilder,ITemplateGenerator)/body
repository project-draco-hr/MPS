{
  List<TemplateFragment> templateFragments=getTemplateFragments(templateDeclaration);
  if (templateFragments.isEmpty()) {
    System.err.println("WARN: no template fragments found in " + templateDeclaration.getDebugText());
    return;
  }
  for (  TemplateFragment templateFragment : templateFragments) {
    SemanticNode templateFragmentNode=templateFragment.getParent();
    String mappingName=templateFragment.getName();
    List<INodeBuilder> fragmentNodeBuilders=createNodeBuildersForTemplateNode(sourceNode,templateFragmentNode,mappingName,generator);
    for (    INodeBuilder fragmentBuilder : fragmentNodeBuilders) {
      TemplateTag templateFragmentTag=templateFragment.getTag();
      if (templateFragmentTag != null) {
        INodeBuilder toReplaceBuilder=findTemplateTagReference(sourceNode,templateFragmentTag,contextBuilder,generator);
        if (toReplaceBuilder == null) {
          String message="Could't find reference on tagged template fragment." + "\nTag                    : " + templateFragmentTag.getName() + "\nSource node            : "+ sourceNode.getDebugText()+ "\nTemplate fragment      : "+ templateFragmentNode.getDebugText()+ "\nTemplate declaration   : "+ SModelUtil.getRootParent(templateFragmentNode).getDebugText()+ "\nContext source node    : "+ contextBuilder.getSourceNode().getDebugText()+ "\nContext template node  : "+ contextBuilder.getTemplateNode().getDebugText()+ "\nContext template parent: "+ SModelUtil.getRootParent(contextBuilder.getTemplateNode()).getDebugText();
          (new RuntimeException(message)).printStackTrace();
          System.err.println("Source node trace:");
          SModelUtil.dumpNodePath(sourceNode,0,System.err);
        }
 else {
          toReplaceBuilder.getParent().replaceChildBuilder(toReplaceBuilder,fragmentBuilder);
          fragmentBuilder.setRoleInParent(toReplaceBuilder.getRoleInParent());
        }
      }
 else {
        INodeBuilder fragmentContextBuilder=getContextBuilderForTemplateFragment(templateFragmentNode,contextBuilder,generator);
        fragmentContextBuilder.addChildBuilder(fragmentBuilder);
      }
    }
  }
}
