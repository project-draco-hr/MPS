{
  return Sequence.fromIterable(new ModelPlusImportedScope(model,false,scope,INamedConcept_Behavior.call_getFqName_1213877404258(concreteConcept)){
    @Override public String getReferenceText(    SNode contextNode,    SNode node){
      if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.baseLanguage.structure.AnonymousClass")) {
        return null;
      }
      return SPropertyOperations.getString(SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.Classifier"),"name");
    }
    @Override public Collection<SModelDescriptor> getModels(){
      return Collections.singletonList(model.getModelDescriptor());
    }
  }
.getAvailableElements(prefix)).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(it,"jetbrains.mps.baseLanguage.structure.Classifier");
    }
  }
);
}
