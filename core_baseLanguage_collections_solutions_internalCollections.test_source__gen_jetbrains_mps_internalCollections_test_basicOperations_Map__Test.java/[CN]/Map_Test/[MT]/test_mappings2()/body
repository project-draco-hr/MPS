{
  Map<Integer,String> mis=MapSequence.<Integer,String>fromMapAndKeysArray(new HashMap<Integer,String>(),1,2,3).withValues("a","b","c");
  SetSequence.fromSet(MapSequence.fromMap(mis).mappingsSet()).toListSequence().visitAll(new _Adapters._return_P1_E0_to_IVisitor_adapter<IMapping<Integer,String>>(new _FunctionTypes._return_P1_E0<String,IMapping<Integer,String>>(){
    public String invoke(    IMapping<Integer,String> m){
      return m.value(String.valueOf((char)('A' - 1 + m.key())));
    }
  }
));
  this.assertIterableEqualsIgnoreOrder(Sequence.fromIterable(ArrayUtils.fromCharacterArray("ABC".toCharArray())).select(new ISelector<Character,String>(){
    public String select(    Character c){
      return String.valueOf(c);
    }
  }
),MapSequence.fromMap(mis).values());
}
