{
  compileContext.processMessage(new CompilerMessage(MPSCompilerUtil.BUILDER_ID,Kind.INFO," ### dirty " + file.getName()));
  JpsModule module=target.getModule();
  JpsMPSModuleExtension extension=JpsMPSExtensionService.getInstance().getExtension(module);
  if (extension == null)   return false;
  compileContext.processMessage(new CompilerMessage(MPSCompilerUtil.BUILDER_ID,Kind.INFO," ### 1"));
  String suffix=FileUtil.getExtension(file.getName());
  if (suffix == null)   return false;
  compileContext.processMessage(new CompilerMessage(MPSCompilerUtil.BUILDER_ID,Kind.INFO," ### 2 suffix=" + suffix));
  ModelFactory modelFactory=PersistenceFacade.getInstance().getModelFactory(suffix);
  if (modelFactory == null)   return false;
  compileContext.processMessage(new CompilerMessage(MPSCompilerUtil.BUILDER_ID,Kind.INFO," ### 3"));
  IFile ifile=FileSystem.getInstance().getFileByPath(file.getPath());
  FileDataSource source=new FileDataSource(ifile,null);
  SModel model=modelFactory.load(source);
  if (model == null)   return false;
  compileContext.processMessage(new CompilerMessage(MPSCompilerUtil.BUILDER_ID,Kind.INFO," ### 4"));
  SModel repoModel=SModelRepository.getInstance().getModelDescriptor(model.getModelReference());
  compileContext.processMessage(new CompilerMessage(MPSCompilerUtil.BUILDER_ID,Kind.INFO," ### compare " + (repoModel == model)));
  myModels.add(model);
  return true;
}
