{
  Result result=new Result();
  for (  SNode node : modelDescriptor.getSModel().nodes()) {
    result.myUsedLanguages.add(node.getLanguage(GlobalScope.getInstance()));
    for (    SReference ref : node.getReferences()) {
      SModelReference mr=ref.getTargetSModelReference();
      if (!modelDescriptor.getSModelReference().equals(mr)) {
        result.myUsedModels.add(mr);
      }
    }
  }
  Set<ModuleReference> unusedLanguages=new HashSet<ModuleReference>();
  for (  ModuleReference languageRef : modelDescriptor.getSModel().importedLanguages()) {
    ModuleReference ref=getUnusedLanguageRef(result,languageRef);
    if (ref != null)     unusedLanguages.add(ref);
  }
  Set<ModuleReference> unusedDevkits=new HashSet<ModuleReference>();
  Set<SModelReference> unusedModels=new HashSet<SModelReference>();
  for (  SModelReference model : SModelOperations.getImportedModelUIDs(modelDescriptor.getSModel())) {
    if (!result.myUsedModels.contains(model)) {
      unusedModels.add(model);
    }
  }
  result.myReport=removeFromImports(modelDescriptor,unusedModels,unusedLanguages,unusedDevkits);
  return result;
}
