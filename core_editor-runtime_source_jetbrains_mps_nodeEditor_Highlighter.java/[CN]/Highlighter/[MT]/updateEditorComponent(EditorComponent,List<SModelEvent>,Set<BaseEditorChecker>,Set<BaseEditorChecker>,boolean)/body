{
  return runUpdateMessagesAction(new Computable<Boolean>(){
    public Boolean compute(){
      final SNode editedNode=component.getEditedNode();
      if (editedNode != null && !editedNode.isDisposed()) {
        final Set<BaseEditorChecker> checkersToRecheck=new LinkedHashSet<BaseEditorChecker>();
        boolean rootWasCheckedOnce=wasCheckedOnce(component);
        if (!rootWasCheckedOnce) {
          checkersToRecheck.addAll(checkers);
        }
 else {
          ModelAccess.instance().runReadAction(new Runnable(){
            public void run(){
              if (myStopThread) {
                return;
              }
              for (              BaseEditorChecker checker : checkers) {
                if (checker.hasDramaticalEvent(events)) {
                  checkersToRecheck.add(checker);
                }
              }
            }
          }
);
        }
        if ((checkersToRecheck.isEmpty() && checkersToRemove.isEmpty()) || myStopThread) {
          return false;
        }
        List<BaseEditorChecker> checkersToRecheckList=new ArrayList<BaseEditorChecker>(checkersToRecheck);
        Collections.sort(checkersToRecheckList,new PriorityComparator());
        boolean recreateInspectorMessages=mainEditorMessagesChanged || !myInspectorMessagesCreated;
        if (component instanceof InspectorEditorComponent) {
          myInspectorMessagesCreated=true;
        }
 else {
          myCheckedOnceEditors.add(component);
        }
        if (updateEditor(component,events,rootWasCheckedOnce,checkersToRecheckList,checkersToRemove,recreateInspectorMessages)) {
          return true;
        }
      }
      return false;
    }
  }
);
}
