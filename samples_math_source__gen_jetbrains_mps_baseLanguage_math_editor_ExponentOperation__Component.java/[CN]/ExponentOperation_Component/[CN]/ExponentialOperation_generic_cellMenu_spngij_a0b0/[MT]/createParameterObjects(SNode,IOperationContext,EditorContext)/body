{
  List<SAbstractConcept> result=ListSequence.fromList(new ArrayList<SAbstractConcept>());
  for (  SAbstractConcept a : ListSequence.fromList(SConceptOperations.getAllSubConcepts(SNodeOperations.asSConcept(ListSequence.fromList(ExponentialOperation__BehaviorDescriptor.getAllowedSubstituends_id2D1PBM_bxH0.invoke(SNodeOperations.asSConcept(SNodeOperations.getConcept(node)))).first()),SNodeOperations.getModel(node)))) {
    if (!(a.isAbstract()) && SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(a),MetaAdapterFactory.getConcept(0x3304fc6e7c6b401eL,0xa016b944934bb21fL,0x64b1e972e6443a20L,"jetbrains.mps.baseLanguage.math.structure.ExponentialOperation"))) {
      ListSequence.fromList(result).addElement((SAbstractConcept)a);
    }
  }
  return result;
}
