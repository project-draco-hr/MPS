{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(4917733117167750838l,-7710007501170303426l),1205756064662l,1205756909548l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(4917733117167750838l,-7710007501170303426l),1205756064662l,1205756909548l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          SNode operand=SLinkOperations.getTarget(SNodeOperations.cast(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.DotExpression"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1197027756228l,1197027771414l,"operand"));
          List<SNode> applicableMembers=new ArrayList<SNode>();
{
            IMatchingPattern pattern_dyvyal_c0a0=HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType");
            SNode coercedNode_dyvyal_c0a0=TypeChecker.getInstance().getRuntimeSupport().coerce_(TypeChecker.getInstance().getTypeOf(operand),pattern_dyvyal_c0a0);
            if (coercedNode_dyvyal_c0a0 != null) {
              for (              SNode member : BehaviorReflection.invokeVirtual((Class<List<SNode>>)((Class)Object.class),coercedNode_dyvyal_c0a0,"virtual_getMembers_1213877402148",new Object[]{_context.getEnclosingNode()})) {
                if (SNodeOperations.isInstanceOf(member,NameUtil.nodeFQName(_context.getLinkTarget())) && BehaviorReflection.invokeVirtual(Boolean.TYPE,member,"virtual_canBeReferent_8179323502814657526",new Object[]{_context.getLinkTarget()})) {
                  ListSequence.fromList(applicableMembers).addElement(member);
                }
              }
            }
 else {
            }
          }
          return applicableMembers;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_dyvyal_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
