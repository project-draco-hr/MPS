{
  setBackground(Color.white);
  myEditorComponent=editorComponent;
  addMouseListener(new MyMouseListener());
  addMouseMotionListener(new MyMouseEnterListener());
  editorComponent.addRebuildListener(new RebuildListener(){
    public void editorRebuilt(    EditorComponent editor){
      removeAllIconRenderers(IconRendererType.BOOKMARK);
      BookmarkManager bookmarkManager=getBookmarkManager();
      if (bookmarkManager != null) {
        bookmarkManager.removeBookmarkListener(myListener);
        SNode editedNode=myEditorComponent.getEditedNode();
        if (editedNode != null) {
          for (          Pair<SNode,Integer> bookmark : bookmarkManager.getBookmarks(editedNode.getContainingRoot())) {
            addBookmark(bookmark.o1,bookmark.o2);
          }
        }
        myListener=new BookmarkListener(){
          public void bookmarkAdded(          int number,          SNode node){
            addBookmark(node,number);
          }
          public void bookmarkRemoved(          int number,          SNode node){
            if (number == -1) {
              removeUnnumberedBookmark(node);
            }
 else {
              removeBookmark(number);
            }
          }
        }
;
        bookmarkManager.addBookmarkListener(myListener);
      }
      doUpdateCellInfos();
    }
  }
);
}
