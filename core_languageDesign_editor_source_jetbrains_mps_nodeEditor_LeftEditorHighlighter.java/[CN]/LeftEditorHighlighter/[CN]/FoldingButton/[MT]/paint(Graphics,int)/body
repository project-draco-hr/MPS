{
  if (myIsHidden)   return;
  Color borderColor=getBorderColor();
  if (!myIsFolded) {
    int xs[]={x,x - WIDTH / 2,x - WIDTH / 2,x - WIDTH * 3 / 8,x,x + WIDTH * 3 / 8,x + WIDTH / 2,x + WIDTH / 2};
    int ys[]={myY1,myY1,myY1 + WIDTH / 2,myY1 + WIDTH * 7 / 8,myY1 + WIDTH,myY1 + WIDTH * 7 / 8,myY1 + WIDTH / 2,myY1};
    g.setColor(Color.WHITE);
    g.fillPolygon(xs,ys,xs.length);
    g.setColor(borderColor);
    g.drawPolygon(xs,ys,xs.length);
    for (int i=0; i < xs.length; i++) {
      ys[i]=myY2 - (ys[i] - myY1);
    }
    g.setColor(Color.WHITE);
    g.fillPolygon(xs,ys,xs.length);
    g.setColor(borderColor);
    g.drawPolygon(xs,ys,xs.length);
    g.setColor(Color.DARK_GRAY);
    g.drawLine(x - WIDTH / 4,myY1 + WIDTH / 2,x + WIDTH / 4,myY1 + WIDTH / 2);
    g.drawLine(x - WIDTH / 4,myY2 - WIDTH / 2,x + WIDTH / 4,myY2 - WIDTH / 2);
  }
 else {
    g.setColor(Color.LIGHT_GRAY);
    g.fillOval(x - WIDTH / 2,(myY1 + myY2 - WIDTH) / 2,WIDTH,WIDTH);
    g.setColor(borderColor);
    g.drawOval(x - WIDTH / 2,(myY1 + myY2 - WIDTH) / 2,WIDTH,WIDTH);
    g.setColor(Color.WHITE);
    g.drawLine(x - WIDTH / 4,(myY1 + myY2) / 2,x + WIDTH / 4,(myY1 + myY2) / 2);
    g.drawLine(x,(myY1 + myY2) / 2 + WIDTH / 4,x,(myY1 + myY2) / 2 - WIDTH / 4);
  }
}
