{
  if (myIsHidden)   return;
  Color borderColor=getBorderColor();
  if (!myIsFolded) {
    int xs[]={x - HALF_WIDTH,x - HALF_WIDTH,x,x + HALF_WIDTH,x + HALF_WIDTH};
    int ys[]={myY1,myY1 + CANT_HEIGHT,myY1 + HEIGHT,myY1 + CANT_HEIGHT,myY1};
    g.setColor(myBackgroundColor);
    g.fillPolygon(xs,ys,xs.length);
    g.setColor(borderColor);
    g.drawPolygon(xs,ys,xs.length);
    for (int i=0; i < xs.length; i++) {
      ys[i]=myY2 - (ys[i] - myY1);
    }
    g.setColor(myBackgroundColor);
    g.fillPolygon(xs,ys,xs.length);
    g.setColor(borderColor);
    g.drawPolygon(xs,ys,xs.length);
    g.setColor(borderColor);
    g.drawLine(x - HALF_WIDTH / 2,myY1 + HALF_WIDTH,x + HALF_WIDTH / 2,myY1 + HALF_WIDTH);
    g.drawLine(x - HALF_WIDTH / 2,myY2 - HALF_WIDTH,x + HALF_WIDTH / 2,myY2 - HALF_WIDTH);
  }
 else {
    g.setColor(myBackgroundColor);
    g.fillRect(x - HALF_WIDTH,(myY1 + myY2) / 2 - HALF_WIDTH,HALF_WIDTH * 2,HALF_WIDTH * 2);
    g.setColor(borderColor);
    g.drawRect(x - HALF_WIDTH,(myY1 + myY2) / 2 - HALF_WIDTH,HALF_WIDTH * 2,HALF_WIDTH * 2);
    g.setColor(Color.black);
    g.drawLine(x - HALF_WIDTH / 2,(myY1 + myY2) / 2,x + HALF_WIDTH / 2,(myY1 + myY2) / 2);
    g.drawLine(x,(myY1 + myY2) / 2 + HALF_WIDTH / 2,x,(myY1 + myY2) / 2 - HALF_WIDTH / 2);
  }
}
