{
  SReference ref=SNodeOperations.getReference(varRef,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.VariableReference","variableDeclaration"));
  if (!(ref instanceof StaticReference)) {
    return null;
  }
  SNode target=ref.getTargetNode();
  if (!(SNodeOperations.isInstanceOf(target,"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration"))) {
    return null;
  }
  SNode thisClass=SNodeOperations.getAncestor(varRef,"jetbrains.mps.baseLanguage.structure.Classifier",false,false);
  SNode thatClass=SNodeOperations.getAncestor(target,"jetbrains.mps.baseLanguage.structure.Classifier",false,false);
  if (thisClass == thatClass) {
    return null;
  }
  SNode sfr=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StaticFieldReference",null);
  SLinkOperations.setTarget(sfr,"classifier",thatClass,false);
  SLinkOperations.setTarget(sfr,"variableDeclaration",SNodeOperations.cast(target,"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration"),false);
  return sfr;
}
