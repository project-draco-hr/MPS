{
  SModel modelDescr;
  try {
    if (myCreateInplace) {
      Tuples._2<ModelRoot,String> place=getRootContainingDir(pkgDir);
      ModelRoot modelRoot=place._0();
      String sourceRoot=place._1();
      if (modelRoot == null) {
        LOG.error("Cannot convert to MPS in-place: java sources not under proper model root");
        return null;
      }
      Map<String,String> options=MapSequence.fromMap(new HashMap<String,String>());
      String fullPath=pkgDir.getPath().replace('\\','/');
      String sr=sourceRoot.replace('\\','/');
      MapSequence.fromMap(options).put(ModelFactory.OPTION_RELPATH,FileUtil.getRelativePath(pkgDir.getPath(),sourceRoot,"/"));
      modelDescr=((DefaultModelRoot)modelRoot).createModel(pkgFqName,sourceRoot,options,PersistenceRegistry.getInstance().getFolderModelFactory(FilePerRootModelPersistence.FACTORY_ID));
    }
 else {
      ModelRoot modelRoot=getFirstRootToCreateModel(pkgFqName);
      if (modelRoot == null) {
        LOG.error("Failed to find model root to create model in");
        return null;
      }
      modelDescr=((DefaultModelRoot)modelRoot).createModel(pkgFqName,null,null,PersistenceRegistry.getInstance().getModelFactory(MPSExtentions.MODEL));
    }
    if (modelDescr == null) {
      LOG.error("Failed to create model: createModel returned null");
      return null;
    }
  }
 catch (  IOException e) {
    LOG.error("Failed to create model",e);
    return null;
  }
  modelDescr.load();
  ((EditableSModel)modelDescr).setChanged(true);
  ((EditableSModel)modelDescr).save();
  return modelDescr;
}
