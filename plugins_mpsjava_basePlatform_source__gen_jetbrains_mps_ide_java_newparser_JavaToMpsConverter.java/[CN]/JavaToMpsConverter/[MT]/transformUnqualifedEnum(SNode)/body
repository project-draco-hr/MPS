{
  if (!(SConceptOperations.isExactly(SNodeOperations.getConceptDeclaration(varRef),"jetbrains.mps.baseLanguage.structure.VariableReference"))) {
    return null;
  }
  SReference ref=SNodeOperations.getReference(varRef,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.VariableReference","variableDeclaration"));
  if (!(ref instanceof DynamicReference)) {
    return null;
  }
  if (ref.getTargetNode() != null) {
    return null;
  }
  SNode root=SNodeOperations.getContainingRoot(varRef);
  if (!(SNodeOperations.isInstanceOf(root,"jetbrains.mps.baseLanguage.structure.Classifier"))) {
    return null;
  }
  SNode javaImports=AttributeOperations.getAttribute(SNodeOperations.cast(root,"jetbrains.mps.baseLanguage.structure.Classifier"),new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.JavaImports")));
  if ((javaImports == null)) {
    return null;
  }
  SNode gateway=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.IYetUnresolved",null);
  final String enumConstName=((DynamicReference)ref).getResolveInfo();
  for (  SNode singleNameImport : Sequence.fromIterable(BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),javaImports,"jetbrains.mps.baseLanguage.structure.JavaImports","call_staticSingleName_5230012391903395274",new Object[]{}))) {
    if (!(enumConstName.equals(BehaviorReflection.invokeNonVirtual(String.class,singleNameImport,"jetbrains.mps.baseLanguage.structure.Tokens","call_lastToken_1296023605440030462",new Object[]{})))) {
      continue;
    }
    String enumClassCandidateName=BehaviorReflection.invokeNonVirtual(String.class,singleNameImport,"jetbrains.mps.baseLanguage.structure.Tokens","call_withoutLastToken_6148840541591441572",new Object[]{});
    SNode enumClassCandidate=BehaviorReflection.invokeNonVirtual((Class<SNode>)((Class)Object.class),gateway,"jetbrains.mps.baseLanguage.structure.IYetUnresolved","call_findClass_5230012391932867419",new Object[]{varRef,enumClassCandidateName});
    if ((enumClassCandidate == null)) {
      return null;
    }
    if (!(SNodeOperations.isInstanceOf(enumClassCandidate,"jetbrains.mps.baseLanguage.structure.EnumClass"))) {
      return null;
    }
    SNode enumConst=ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(enumClassCandidate,"jetbrains.mps.baseLanguage.structure.EnumClass"),"enumConstant",true)).findFirst(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return enumConstName.equals(SPropertyOperations.getString(it,"name"));
      }
    }
);
    if ((enumConst == null)) {
      return null;
    }
    SNode result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.EnumConstantReference",null);
    SLinkOperations.setTarget(result,"enumClass",SNodeOperations.cast(enumClassCandidate,"jetbrains.mps.baseLanguage.structure.EnumClass"),false);
    SLinkOperations.setTarget(result,"enumConstantDeclaration",enumConst,false);
    return result;
  }
  for (  SNode onDemandImport : Sequence.fromIterable(BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),javaImports,"jetbrains.mps.baseLanguage.structure.JavaImports","call_staticOnDemand_5230012391903366883",new Object[]{}))) {
    SNode claz=BehaviorReflection.invokeNonVirtual((Class<SNode>)((Class)Object.class),gateway,"jetbrains.mps.baseLanguage.structure.IYetUnresolved","call_findClass_5230012391932867419",new Object[]{varRef,SPropertyOperations.getString(onDemandImport,"tokens")});
    if ((claz == null)) {
      continue;
    }
    if (!(SNodeOperations.isInstanceOf(claz,"jetbrains.mps.baseLanguage.structure.EnumClass"))) {
      continue;
    }
    SNode enumConst=ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(claz,"jetbrains.mps.baseLanguage.structure.EnumClass"),"enumConstant",true)).findFirst(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return enumConstName.equals(SPropertyOperations.getString(it,"name"));
      }
    }
);
    if ((enumConst == null)) {
      continue;
    }
    SNode result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.EnumConstantReference",null);
    SLinkOperations.setTarget(result,"enumClass",SNodeOperations.cast(claz,"jetbrains.mps.baseLanguage.structure.EnumClass"),false);
    SLinkOperations.setTarget(result,"enumConstantDeclaration",enumConst,false);
    return result;
  }
  return null;
}
