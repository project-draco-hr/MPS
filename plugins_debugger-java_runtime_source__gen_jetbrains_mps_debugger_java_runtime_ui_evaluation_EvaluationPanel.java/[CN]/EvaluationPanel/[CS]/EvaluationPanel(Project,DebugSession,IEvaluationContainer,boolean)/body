{
  super(session,autoUpdate);
  myHighlighter=project.getComponent(Highlighter.class);
  myEvaluationModel=evaluationModel;
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      SNode node=myEvaluationModel.getNode();
      myEditor=new EmbeddableEditor(myEvaluationModel.getContext().getProject(),true);
      myEditor.editNode(node);
    }
  }
);
  myTree.addModel(myEvaluationModel);
  if (myDebugSession.isPaused()) {
    myTree.updateLocation(myDebugSession.getUiState().getThread().getThread());
  }
  JSplitPane splitPane=new JSplitPane(JSplitPane.VERTICAL_SPLIT);
  splitPane.setResizeWeight(0.8);
  splitPane.setTopComponent(myEditor);
  splitPane.setBottomComponent(new JBScrollPane(myTree));
  if (Properties.IS_DEVELOPER_MODE) {
    myTabbedPane.addTab("Main",splitPane);
    add(myTabbedPane);
  }
 else {
    add(splitPane);
  }
  myEditor.registerKeyboardAction(new AbstractAction(){
    @Override public void actionPerformed(    ActionEvent p0){
      evaluate();
    }
  }
,KeyStroke.getKeyStroke("ctrl ENTER"),JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  myHighlighter.addAdditionalEditor(myEditor.getEditor());
}
