{
  ArrayList<Object> l;
  if (input instanceof Collection) {
    l=new ArrayList((Collection)input);
  }
 else {
    l=new ArrayList();
    for (    Object i : input) {
      l.add(i);
    }
  }
  final Map<Object,Object> cache=new HashMap<Object,Object>();
  Collections.<Object>sort(l,new Comparator<Object>(){
    public int compare(    Object o1,    Object o2){
      Comparable left=MqlCollectionSelector_Behavior.call_sortEvaluate_1495482807929828370(thisNode,o1,cache,env,context);
      Comparable right=MqlCollectionSelector_Behavior.call_sortEvaluate_1495482807929828370(thisNode,o2,cache,env,context);
      if (left == null) {
        return (right == null ? 0 : -1);
      }
      if (right == null) {
        return 1;
      }
      return left.compareTo(right);
    }
  }
);
  return l;
}
