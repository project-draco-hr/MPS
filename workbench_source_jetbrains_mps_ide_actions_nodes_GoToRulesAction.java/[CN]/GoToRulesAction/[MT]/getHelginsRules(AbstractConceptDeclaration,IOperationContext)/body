{
  Language language=SModelUtil_new.getDeclaringLanguage(conceptDeclaration,operationContext.getScope());
  List<SNode> rules=new ArrayList<SNode>();
  if (language != null && language.getHelginsTypesystemModelDescriptor() != null) {
    SModelDescriptor helginsDescriptor=language.getHelginsTypesystemModelDescriptor();
    if (helginsDescriptor != null) {
      rules.addAll(helginsDescriptor.getSModel().getRoots(new Condition<SNode>(){
        public boolean met(        SNode n){
          INodeAdapter object=BaseAdapter.fromNode(n);
          if (object instanceof AbstractRule) {
            AbstractRule rule=(AbstractRule)object;
            return (maybeApplicable_new(conceptDeclaration,rule.getApplicableNode(),operationContext.getScope()));
          }
          return false;
        }
      }
));
    }
  }
  return rules;
}
