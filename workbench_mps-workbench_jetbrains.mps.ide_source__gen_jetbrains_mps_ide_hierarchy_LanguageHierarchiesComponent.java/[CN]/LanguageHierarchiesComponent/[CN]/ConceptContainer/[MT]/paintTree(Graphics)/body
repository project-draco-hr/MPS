{
  paint(g);
  if (myChildren.isEmpty()) {
    return;
  }
  int outX=getOutPoint().x;
  int outY=getOutPoint().y;
  int y=outY;
  int firstX=outX;
  int lastX=outX;
  for (  LanguageHierarchiesComponent.ConceptContainer child : myChildren) {
    Point childEntryPoint=child.getEntryPoint();
    int x=childEntryPoint.x;
    if (x < firstX) {
      firstX=x;
    }
    if (x > lastX) {
      lastX=x;
    }
    y=childEntryPoint.y;
  }
  y=(y + outY) / 2;
  g.setColor(Color.BLACK);
  g.drawLine(firstX,y,lastX,y);
  g.drawLine(outX,outY,outX,y);
  for (  LanguageHierarchiesComponent.ConceptContainer child : myChildren) {
    g.setColor(Color.BLACK);
    Point childEntryPoint=child.getEntryPoint();
    g.drawLine(childEntryPoint.x,y,childEntryPoint.x,childEntryPoint.y);
    child.paintTree(g);
  }
}
