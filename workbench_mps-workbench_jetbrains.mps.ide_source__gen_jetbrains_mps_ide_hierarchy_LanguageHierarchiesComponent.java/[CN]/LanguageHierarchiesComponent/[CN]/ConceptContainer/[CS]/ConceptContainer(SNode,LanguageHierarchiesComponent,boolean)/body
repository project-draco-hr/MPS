{
  myComponent=component;
  myIsOtherLanguage=otherLanguage;
  if (myIsOtherLanguage) {
    myColor=ColorAndGraphicsUtil.saturateColor(Color.ORANGE,0.5f);
  }
  myOperationContext=myComponent.myOperationContext;
  myRootable=SPropertyOperations.getBoolean(conceptDeclaration,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979ba0450L,0xff49c1d648L,"rootable"));
  myIsAbstract=SPropertyOperations.getBoolean(conceptDeclaration,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0x403a32c5772c7ec2L,"abstract"));
  myNamespace=SModelUtil.getDeclaringLanguage(conceptDeclaration).getModuleName();
  myNodePointer=new SNodePointer(conceptDeclaration);
  addMouseListener(new MouseAdapter(){
    @Override public void mousePressed(    final MouseEvent e){
      Project project=myOperationContext.getProject();
      final ProjectPane projectPane=ProjectPane.getInstance(ProjectHelper.toIdeaProject(project));
      myComponent.select(ConceptContainer.this);
      if (e.isPopupTrigger()) {
        myComponent.processPopupMenu(e);
      }
 else {
        ModelAccess.instance().runWriteInEDT(new Runnable(){
          @Override public void run(){
            SNode node=getNode();
            if (node == null) {
              return;
            }
            projectPane.selectNode(node,false);
            if (e.getClickCount() == 2) {
              NavigationSupport.getInstance().openNode(myOperationContext,node,true,true);
            }
          }
        }
);
      }
    }
    @Override public void mouseReleased(    MouseEvent e){
      if (e.isPopupTrigger()) {
        myComponent.processPopupMenu(e);
      }
    }
  }
);
}
