{
  if (wrapper1 == null || wrapper2 == null) {
    return new HashSet<Pair<SNode,SNode>>();
  }
  if (wrapper1.isCondition() || wrapper2.isCondition()) {
    return new HashSet<Pair<SNode,SNode>>();
  }
  final SNode node1=wrapper1.getNode();
  final SNode node2=wrapper2.getNode();
  final Set<Pair<SNode,SNode>> result=new HashSet<Pair<SNode,SNode>>();
  Set<String> allChildRoles=node1.getChildRoles();
  node2.addChildRoles(allChildRoles);
  for (  String childRole : allChildRoles) {
    List<SNode> childrenInNode1=node1.getChildren(childRole);
    List<SNode> childrenInNode2=node2.getChildren(childRole);
    Iterator<SNode> childrenIterator2=childrenInNode2.iterator();
    for (    SNode child1 : childrenInNode1) {
      SNode child2=childrenIterator2.hasNext() ? childrenIterator2.next() : null;
      result.add(new Pair<SNode,SNode>(child1,child2));
    }
    for (; childrenIterator2.hasNext(); ) {
      SNode child2=childrenIterator2.next();
      result.add(new Pair<SNode,SNode>(null,child2));
    }
  }
  return result;
}
