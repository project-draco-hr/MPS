{
  for (  SNode key : slave.mySubtypesToSupertypesMap.keySet()) {
    Map<SNode,ErrorInfo> map=mySubtypesToSupertypesMap.get(key);
    if (map == null) {
      map=new HashMap<SNode,ErrorInfo>();
      mySubtypesToSupertypesMap.put(key,map);
    }
    map.putAll(slave.mySubtypesToSupertypesMap.get(key));
  }
  for (  SNode key : slave.mySupertypesToSubtypesMap.keySet()) {
    Map<SNode,ErrorInfo> map=mySupertypesToSubtypesMap.get(key);
    if (map == null) {
      map=new HashMap<SNode,ErrorInfo>();
      mySupertypesToSubtypesMap.put(key,map);
    }
    map.putAll(slave.mySupertypesToSubtypesMap.get(key));
  }
  for (  SNode key : slave.mySubtypesToSupertypesMapStrong.keySet()) {
    Map<SNode,ErrorInfo> map=mySubtypesToSupertypesMapStrong.get(key);
    if (map == null) {
      map=new HashMap<SNode,ErrorInfo>();
      mySubtypesToSupertypesMapStrong.put(key,map);
    }
    map.putAll(slave.mySubtypesToSupertypesMapStrong.get(key));
  }
  for (  SNode key : slave.mySupertypesToSubtypesMapStrong.keySet()) {
    Map<SNode,ErrorInfo> map=mySupertypesToSubtypesMapStrong.get(key);
    if (map == null) {
      map=new HashMap<SNode,ErrorInfo>();
      mySupertypesToSubtypesMapStrong.put(key,map);
    }
    map.putAll(slave.mySupertypesToSubtypesMapStrong.get(key));
  }
  for (  SNode key : slave.myComparableTypesMap.keySet()) {
    Map<SNode,ErrorInfo> map=myComparableTypesMap.get(key);
    if (map == null) {
      map=new HashMap<SNode,ErrorInfo>();
      myComparableTypesMap.put(key,map);
    }
    map.putAll(slave.myComparableTypesMap.get(key));
  }
  for (  SNode key : slave.myComparableTypesMapStrong.keySet()) {
    Map<SNode,ErrorInfo> map=myComparableTypesMapStrong.get(key);
    if (map == null) {
      map=new HashMap<SNode,ErrorInfo>();
      myComparableTypesMapStrong.put(key,map);
    }
    map.putAll(slave.myComparableTypesMapStrong.get(key));
  }
  for (  SNode type : slave.myEquations.keySet()) {
    SNode parentType=slave.myEquations.get(type);
    if (parentType != null) {
      processEquation(type,parentType,null);
    }
  }
}
