{
  if (mySubtypesToSupertypesMap.containsKey(var)) {
    Map<SNode,SNode> supertypes=mySubtypesToSupertypesMap.get(var);
    mySubtypesToSupertypesMap.remove(var);
    for (    SNode supertype : supertypes.keySet()) {
      mySupertypesToSubtypesMap.get(supertype).remove(var);
    }
    for (    SNode supertype : supertypes.keySet()) {
      addInequation(type,supertype,supertypes.get(supertype));
    }
  }
  if (mySupertypesToSubtypesMap.containsKey(var)) {
    Map<SNode,SNode> subtypes=mySupertypesToSubtypesMap.get(var);
    mySupertypesToSubtypesMap.remove(var);
    for (    SNode subtype : subtypes.keySet()) {
      mySubtypesToSupertypesMap.get(subtype).remove(var);
    }
    for (    SNode subtype : subtypes.keySet()) {
      addInequation(subtype,type,subtypes.get(subtype));
    }
  }
}
