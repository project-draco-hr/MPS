{
  Set<SNode> types=subtypingGraphVertices();
  for (  SNode type : types) {
    if (BaseAdapter.isInstance(type,RuntimeTypeVariable.class)) {
      varLessThanType(type);
      typeLessThanVar(type);
    }
  }
  Set<SNode> oldTypes=types;
  types=subtypingGraphVertices();
  for (  SNode type : types) {
    if (!(BaseAdapter.isInstance(type,RuntimeTypeVariable.class))) {
      System.err.println("oy vey");
      continue;
    }
    Map<SNode,SNode> supertypes=mySubtypesToSupertypesMap.get(type);
    if (supertypes != null) {
      mySubtypesToSupertypesMap.remove(type);
      for (      SNode supertype : supertypes.keySet()) {
        mySupertypesToSubtypesMap.get(supertype).remove(type);
        addEquation(type,supertype,supertypes.get(supertype));
      }
    }
    Map<SNode,SNode> subtypes=mySupertypesToSubtypesMap.get(type);
    if (subtypes != null) {
      mySupertypesToSubtypesMap.remove(type);
      for (      SNode subtype : subtypes.keySet()) {
        mySubtypesToSupertypesMap.get(subtype).remove(type);
        addEquation(type,subtype,subtypes.get(subtype));
      }
    }
  }
}
