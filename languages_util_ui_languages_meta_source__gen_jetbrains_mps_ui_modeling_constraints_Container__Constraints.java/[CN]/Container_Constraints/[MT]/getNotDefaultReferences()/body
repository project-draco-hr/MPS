{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("specializes",new BaseReferenceConstraintsDescriptor("specializes",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return (Iterable<SNode>)(Sequence.fromIterable(UIObject_Behavior.call_allExtends_8115675450774407592(SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.ui.modeling.structure.UIObject",true,false))).translate(new ITranslator2<SNode,SNode>(){
            public Iterable<SNode> translate(            SNode uio){
              return SLinkOperations.getTargets(uio,"compartment",true);
            }
          }
).subtract(Sequence.fromIterable(Sequence.<SNode>singleton(_context.getReferenceNode()))));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_24ye1o_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
