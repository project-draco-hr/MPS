{
  assertCanWrite();
  if (refreshFiles) {
    FileSystem.getInstance().refresh(dir);
  }
  List<IModule> result=new ArrayList<IModule>();
  String dirName=dir.getName();
  if (FileTypeManager.getInstance().isFileIgnored(dirName))   return result;
  List<IFile> files=dir.list();
  if (files == null) {
    return result;
  }
  for (  IFile file : files) {
    if (hasModuleExtension(file.getName())) {
      IModule module=readModuleDescriptor_internal(file,owner,getModuleExtension(file.getName()),excludes);
      if (module != null) {
        result.add(module);
      }
    }
  }
  for (  IFile childDir : files) {
    if (FileTypeManager.getInstance().isFileIgnored(childDir.getName()))     continue;
    if (hasModuleExtension(childDir.getName()))     continue;
    if (excludes.contains(childDir))     continue;
    if (childDir.getName().endsWith(MPSExtentions.MPS_ARCH)) {
      IFile dirInJar=FileSystem.getInstance().getFileByPath(childDir.getAbsolutePath() + "!/" + AbstractModule.MODULE_DIR);
      result.addAll(readModuleDescriptors(dirInJar,owner,excludes,refreshFiles));
    }
    result.addAll(readModuleDescriptors(childDir,owner,excludes,refreshFiles));
  }
  return result;
}
