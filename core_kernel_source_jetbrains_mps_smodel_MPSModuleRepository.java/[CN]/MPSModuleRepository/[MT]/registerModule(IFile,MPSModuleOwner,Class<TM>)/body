{
  ModelAccess.assertLegalWrite();
  myDirtyFlag=true;
  String canonicalPath=IFileUtils.getCanonicalPath(file);
  IModule module=myCanonicalFileToModuleMap.get(canonicalPath);
  if (module == null) {
    if (cls == Language.class) {
      module=Language.createLanguage(null,file,owner);
    }
 else     if (cls == Solution.class) {
      module=Solution.newInstance(file,owner);
    }
 else {
      module=DevKit.newInstance(file,owner);
    }
  }
 else {
    if (!cls.isInstance(module)) {
      LOG.error("can't register module " + module + " : module of another kind with the same name already exists",module);
    }
    if (owner == module) {
      LOG.warning("module " + module + " wants to owe itself: will be collected very quickly",module);
    }
    myModuleToOwners.addLink(module,owner);
    myModules.add(module);
  }
  invalidateCaches();
  fireModuleAdded(module);
  return (TM)module;
}
