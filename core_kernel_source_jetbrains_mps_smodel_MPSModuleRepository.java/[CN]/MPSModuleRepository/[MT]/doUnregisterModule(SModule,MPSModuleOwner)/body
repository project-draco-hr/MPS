{
  getModelAccess().checkWriteAccess();
  if (!myModules.contains(module)) {
    throw new IllegalArgumentException("Trying to unregister non-registered module: " + module);
  }
  myModuleToOwners.removeLink(module,owner);
  boolean remove=myModuleToOwners.getByFirst(module).isEmpty();
  if (remove) {
    fireBeforeModuleRemoved(module);
    myModules.remove(module);
    myIdToModuleMap.remove(module.getModuleReference().getModuleId());
    if (module.getModuleName() != null) {
      myFqNameToModulesMap.remove(module.getModuleName());
    }
    return true;
  }
  return false;
}
