{
  Set<MPSModuleOwner> rootOwners=new HashSet<MPSModuleOwner>();
  for (  IModule m : myModules) {
    for (    MPSModuleOwner owner : myModuleToOwners.getByFirst(m)) {
      if (!(owner instanceof IModule)) {
        rootOwners.add(owner);
      }
    }
  }
  rootOwners.removeAll(willBeReleased);
  Set<IModule> visibleModules=new HashSet<IModule>();
  for (  IModule m : myModules) {
    if (m instanceof Solution && ((Solution)m).isStub()) {
      visibleModules.add(m);
      continue;
    }
    for (    MPSModuleOwner r : rootOwners) {
      if (myModuleToOwners.contains(m,r)) {
        visibleModules.add(m);
      }
    }
  }
  boolean hasModulesToProcess=true;
  while (hasModulesToProcess) {
    Set<IModule> toAdd=new HashSet<IModule>();
    for (    IModule m : myModules) {
      if (visibleModules.contains(m))       continue;
      for (      IModule v : visibleModules) {
        if (myModuleToOwners.contains(m,v)) {
          toAdd.add(m);
        }
      }
    }
    hasModulesToProcess=!toAdd.isEmpty();
    visibleModules.addAll(toAdd);
  }
  Set<IModule> toBeRemoved=new HashSet<IModule>(myModules);
  toBeRemoved.removeAll(visibleModules);
  return toBeRemoved;
}
