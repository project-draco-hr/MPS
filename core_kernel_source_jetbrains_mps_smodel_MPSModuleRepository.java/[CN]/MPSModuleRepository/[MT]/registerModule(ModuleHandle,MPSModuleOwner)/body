{
  ModelAccess.assertLegalWrite();
  myDirtyFlag=true;
  String canonicalPath=IFileUtils.getCanonicalPath(handle.getFile());
  IModule module=myCanonicalFileToModuleMap.get(canonicalPath);
  if (module == null) {
    if (handle.getDescriptor() instanceof LanguageDescriptor) {
      module=Language.createLanguage(null,handle,owner);
    }
 else     if (handle.getDescriptor() instanceof SolutionDescriptor) {
      module=Solution.newInstance(handle,owner);
    }
 else     if (handle.getDescriptor() instanceof DevkitDescriptor) {
      module=DevKit.newInstance(handle,owner);
    }
 else {
      throw new IllegalArgumentException("Unknown module " + handle.getFile().getName());
    }
  }
 else {
    if (owner == module) {
      LOG.warning("module " + module + " wants to owe itself: will be collected very quickly",module);
    }
    myModuleToOwners.addLink(module,owner);
    myModules.add(module);
  }
  invalidateCaches();
  fireModuleAdded(module);
  return (TM)module;
}
