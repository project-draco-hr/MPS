{
  List<AbstractMigrationRefactoring> refactorings=ListSequence.fromList(new ArrayList<AbstractMigrationRefactoring>());
  ListSequence.fromList(refactorings).addElement(new SimpleMigration(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeType")){
    public String getName(){
      return "Migrate all SNodeTypes with " + SPropertyOperations.getString(referenceConcept,"name");
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"concept",false) == referenceConcept;
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"concept",SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)","1068498886296"),false);
    }
  }
);
  ListSequence.fromList(refactorings).addElement(new SimpleMigration(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeListType")){
    public String getName(){
      return "Migrate all SNodeListTypes with " + SPropertyOperations.getString(referenceConcept,"name");
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"elementConcept",false) == referenceConcept;
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"elementConcept",SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)","1068498886296"),false);
    }
  }
);
  return refactorings;
}
