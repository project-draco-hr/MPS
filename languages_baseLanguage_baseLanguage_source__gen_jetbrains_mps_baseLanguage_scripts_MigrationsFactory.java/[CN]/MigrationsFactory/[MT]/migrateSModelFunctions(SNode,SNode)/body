{
  List<AbstractMigrationRefactoring> refactorings=ListSequence.fromList(new ArrayList<AbstractMigrationRefactoring>());
  ListSequence.fromList(refactorings).addElement(new MigrationsFactory.SModelMethodMigration(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.smodel.structure.Node_GetDescendantsOperation"),referenceConcept,targetConcept){
    public boolean isApplicableInstanceNode(    SNode node){
      return ListSequence.fromList(SLinkOperations.getTargets(node,"parameter",true)).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SNodeOperations.isInstanceOf(it,"jetbrains.mps.lang.smodel.structure.OperationParm_Concept");
        }
      }
).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          SNode conceptArg=SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.lang.smodel.structure.OperationParm_Concept"),"conceptArgument",true);
          return SNodeOperations.isInstanceOf(conceptArg,"jetbrains.mps.lang.smodel.structure.RefConcept_Reference") && SLinkOperations.getTarget(SNodeOperations.cast(conceptArg,"jetbrains.mps.lang.smodel.structure.RefConcept_Reference"),"conceptDeclaration",false) == referenceConcept;
        }
      }
);
    }
    public void doUpdateInstanceNode(    SNode node){
      Iterable<SNode> parameters=ListSequence.fromList(SLinkOperations.getTargets(node,"parameter",true)).select(new ISelector<SNode,SNode>(){
        public SNode select(        SNode it){
          if (SNodeOperations.isInstanceOf(it,"jetbrains.mps.lang.smodel.structure.OperationParm_Concept")) {
            return new MigrationsFactory.QuotationClass_uzzzvm_a0a0a0a0a0a0a0a1a0a0a2a4().createNode();
          }
 else {
            return it;
          }
        }
      }
);
      SNode result=new MigrationsFactory.QuotationClass_uzzzvm_a0a1a1a0a0a2a4().createNode(IOperation_Behavior.call_getOperand_1213877410070(node),Sequence.fromIterable(parameters).toListSequence(),targetConcept);
      SNodeOperations.replaceWithAnother(SNodeOperations.getParent(node),result);
    }
  }
);
  ListSequence.fromList(refactorings).addElement(new MigrationsFactory.SModelMethodMigration(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.smodel.structure.Node_IsInstanceOfOperation"),referenceConcept,targetConcept){
    public boolean isApplicableInstanceNode(    SNode node){
      return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node,"conceptArgument",true),"jetbrains.mps.lang.smodel.structure.RefConcept_Reference") && SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(node,"conceptArgument",true),"jetbrains.mps.lang.smodel.structure.RefConcept_Reference"),"conceptDeclaration",false) == referenceConcept;
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode result=new MigrationsFactory.QuotationClass_uzzzvm_a0a0a1a0a0a3a4().createNode(IOperation_Behavior.call_getOperand_1213877410070(node),targetConcept,IOperation_Behavior.call_getOperand_1213877410070(node));
      SNodeOperations.replaceWithAnother(SNodeOperations.getParent(node),result);
    }
  }
);
  ListSequence.fromList(refactorings).addElement(new MigrationsFactory.SModelMethodMigration(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.smodel.structure.Node_ReplaceWithNewOperation"),referenceConcept,targetConcept){
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"concept",false) == referenceConcept;
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"concept",SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)","1068498886296"),false);
    }
  }
);
  ListSequence.fromList(refactorings).addElement(new MigrationsFactory.SModelMethodMigration(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.smodel.structure.Model_CreateNewNodeOperation"),referenceConcept,targetConcept){
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"concept",false) == referenceConcept;
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"concept",SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)","1068498886296"),false);
    }
  }
);
  ListSequence.fromList(refactorings).addElement(new MigrationsFactory.SModelMethodMigration(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.smodel.structure.LinkList_AddNewChildOperation"),referenceConcept,targetConcept){
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"concept",false) == referenceConcept;
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"concept",SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)","1068498886296"),false);
    }
  }
);
  ListSequence.fromList(refactorings).addElement(new MigrationsFactory.SModelMethodMigration(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeTypeCastExpression"),referenceConcept,targetConcept){
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"concept",false) == referenceConcept;
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"concept",SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)","1068498886296"),false);
    }
  }
);
  return refactorings;
}
