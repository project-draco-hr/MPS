{
  List<AbstractMigrationRefactoring> refactorings=ListSequence.fromList(new ArrayList<AbstractMigrationRefactoring>());
  ListSequence.fromList(refactorings).addSequence(ListSequence.fromList(Migrations.migrateConcept(MigrationConfigs.variableUnifyingMigration(referenceConcept,targetConcept))));
  ListSequence.fromList(refactorings).addElement(new SModelMethodMigration(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.smodel.structure.Node_ReplaceWithNewOperation"),referenceConcept){
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"concept",false) == referenceConcept;
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"concept",SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)","1068498886296"),false);
    }
  }
);
  ListSequence.fromList(refactorings).addElement(new SModelMethodMigration(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.smodel.structure.Model_CreateNewNodeOperation"),referenceConcept){
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"concept",false) == referenceConcept;
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"concept",SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)","1068498886296"),false);
    }
  }
);
  ListSequence.fromList(refactorings).addElement(new SModelMethodMigration(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.smodel.structure.LinkList_AddNewChildOperation"),referenceConcept){
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"concept",false) == referenceConcept;
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"concept",SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)","1068498886296"),false);
    }
  }
);
  ListSequence.fromList(refactorings).addElement(new SModelMethodMigration(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.smodel.structure.SNodeTypeCastExpression"),referenceConcept){
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"concept",false) == referenceConcept;
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"concept",SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)","1068498886296"),false);
    }
  }
);
  return refactorings;
}
