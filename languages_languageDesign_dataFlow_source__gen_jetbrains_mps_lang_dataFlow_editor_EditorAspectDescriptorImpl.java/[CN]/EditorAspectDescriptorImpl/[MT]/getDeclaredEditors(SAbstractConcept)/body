{
{
    SAbstractConcept cncpt=((SAbstractConcept)concept);
    Integer preIndex=indices_xbvbvu_a0a.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      return Collections.<ConceptEditor>singletonList(new BaseEmitJumpStatement_Editor());
case 1:
    return Collections.<ConceptEditor>singletonList(new BaseEmitVariableStatement_Editor());
case 2:
  return Collections.<ConceptEditor>singletonList(new BaseInstructionOperation_Editor());
case 3:
return Collections.<ConceptEditor>singletonList(new DataFlowBuilderDeclaration_Editor());
case 4:
return Collections.<ConceptEditor>singletonList(new EmitCodeForStatement_Editor());
case 5:
return Collections.<ConceptEditor>singletonList(new EmitLabelStatement_Editor());
case 6:
return Collections.<ConceptEditor>singletonList(new EmitMayBeUnreachable_Editor());
case 7:
return Collections.<ConceptEditor>singletonList(new EmitNopStatement_Editor());
case 8:
return Collections.<ConceptEditor>singletonList(new EmitRetStatement_Editor());
case 9:
return Collections.<ConceptEditor>singletonList(new EmitTryFinallyStatement_Editor());
case 10:
return Collections.<ConceptEditor>singletonList(new EmitWriteStatement_Editor());
case 11:
return Collections.<ConceptEditor>singletonList(new GetCodeForExpression_Editor());
case 12:
return Collections.<ConceptEditor>singletonList(new InsertAfter_Editor());
case 13:
return Collections.<ConceptEditor>singletonList(new InsertBefore_Editor());
case 14:
return Collections.<ConceptEditor>singletonList(new IntraProcedural_BuilderMode_Editor());
case 15:
return Collections.<ConceptEditor>singletonList(new LabelPosition_Editor());
case 16:
return Collections.<ConceptEditor>singletonList(new RelativePosition_Editor());
default :
}
}
return Collections.<ConceptEditor>emptyList();
}
