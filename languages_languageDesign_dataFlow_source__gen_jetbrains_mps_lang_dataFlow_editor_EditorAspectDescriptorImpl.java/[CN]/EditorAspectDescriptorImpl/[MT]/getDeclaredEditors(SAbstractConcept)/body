{
{
    SAbstractConcept cncpt=((SAbstractConcept)concept);
    Integer preIndex=indices_xbvbvu_a0a.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return Collections.<ConceptEditor>singletonList(new BaseEmitJumpStatement_Editor());
      }
    break;
case 1:
  if (true) {
    return Collections.<ConceptEditor>singletonList(new BaseEmitVariableStatement_Editor());
  }
break;
case 2:
if (true) {
return Collections.<ConceptEditor>singletonList(new BaseInstructionOperation_Editor());
}
break;
case 3:
if (true) {
return Collections.<ConceptEditor>singletonList(new DataFlowBuilderDeclaration_Editor());
}
break;
case 4:
if (true) {
return Collections.<ConceptEditor>singletonList(new EmitCodeForStatement_Editor());
}
break;
case 5:
if (true) {
return Collections.<ConceptEditor>singletonList(new EmitLabelStatement_Editor());
}
break;
case 6:
if (true) {
return Collections.<ConceptEditor>singletonList(new EmitMayBeUnreachable_Editor());
}
break;
case 7:
if (true) {
return Collections.<ConceptEditor>singletonList(new EmitNopStatement_Editor());
}
break;
case 8:
if (true) {
return Collections.<ConceptEditor>singletonList(new EmitRetStatement_Editor());
}
break;
case 9:
if (true) {
return Collections.<ConceptEditor>singletonList(new EmitTryFinallyStatement_Editor());
}
break;
case 10:
if (true) {
return Collections.<ConceptEditor>singletonList(new EmitWriteStatement_Editor());
}
break;
case 11:
if (true) {
return Collections.<ConceptEditor>singletonList(new GetCodeForExpression_Editor());
}
break;
case 12:
if (true) {
return Collections.<ConceptEditor>singletonList(new InsertAfter_Editor());
}
break;
case 13:
if (true) {
return Collections.<ConceptEditor>singletonList(new InsertBefore_Editor());
}
break;
case 14:
if (true) {
return Collections.<ConceptEditor>singletonList(new LabelPosition_Editor());
}
break;
case 15:
if (true) {
return Collections.<ConceptEditor>singletonList(new RelativePosition_Editor());
}
break;
default :
}
}
return Collections.<ConceptEditor>emptyList();
}
