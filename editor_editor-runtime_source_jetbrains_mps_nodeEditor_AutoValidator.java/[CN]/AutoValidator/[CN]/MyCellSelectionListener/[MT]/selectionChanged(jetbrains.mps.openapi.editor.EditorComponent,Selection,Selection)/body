{
  if (oldSelection == newSelection) {
    return;
  }
  final EditorComponent editorComponentInternal=(EditorComponent)editorComponent;
  if (!(oldSelection instanceof SingularSelection)) {
    return;
  }
  final EditorCell editorCell=((SingularSelection)oldSelection).getEditorCell();
  if (editorComponentInternal.isCellSwapInProgress()) {
    return;
  }
  if (!editorCell.isErrorState() && !(editorCell instanceof EditorCell_STHint)) {
    return;
  }
  if (newSelection instanceof SingularSelection) {
    if (((SingularSelection)newSelection).getEditorCell() == editorCell) {
      return;
    }
  }
  final SNode node=editorCell.getSNode();
  final CellInfo cellInfo=APICellAdapter.getCellInfo(editorCell);
  SwingUtilities.invokeLater(new Runnable(){
    @Override public void run(){
      ModelAccess.instance().runWriteActionInCommand(new Runnable(){
        @Override public void run(){
          if (editorCell.isErrorState()) {
            EditorCell cell=cellInfo.findCell(editorComponentInternal);
            if (cell != null) {
              Object memento=editorComponent.getEditorContext().createMemento();
              APICellAdapter.validate(cell,true,false);
              editorComponentInternal.flushEvents();
              editorComponent.getEditorContext().setMemento(memento);
            }
          }
          if (editorCell instanceof EditorCell_STHint) {
            STHintPropertyUtil.removeTransformHints(node);
          }
        }
      }
);
    }
  }
);
}
