{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("property",new BaseReferenceConstraintsDescriptor("property",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return Sequence.fromIterable(UIObject_Behavior.call_allExtends_8115675450774407592(SLinkOperations.getTarget(SNodeOperations.as(_context.getEnclosingNode(),"jetbrains.mps.ui.structure.UIObjectStatement"),"uiObject",false))).<SNode>translate(new ITranslator2<SNode,SNode>(){
            public Iterable<SNode> translate(            SNode n){
              return SLinkOperations.getTargets(n,"property",true);
            }
          }
);
        }
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_w3orvv_a0a1a0a0a1a0b0a1a0;
        }
      }
;
    }
  }
);
  return references;
}
