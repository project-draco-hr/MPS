{
{
    SAbstractConcept cncpt=concept;
switch (index_xbvbvu_a0g.index(cncpt)) {
case 0:
      return Collections.<SubstituteMenu>singletonList(new AbstractEnumeratorOperation_SubstituteMenu());
case 1:
    return Collections.<SubstituteMenu>singletonList(new AbstractIteratorOperation_SubstituteMenu());
case 2:
  return Collections.<SubstituteMenu>singletonList(new AbstractMappingOperation_SubstituteMenu());
case 3:
return Collections.<SubstituteMenu>singletonList(new AddAllSetElementsOperation_SubstituteMenu());
case 4:
return Collections.<SubstituteMenu>singletonList(new AddSetElementOperation_SubstituteMenu());
case 5:
return Collections.<SubstituteMenu>singletonList(new AsSequenceOperation_SubstituteMenu());
case 6:
return Collections.<SubstituteMenu>singletonList(new DowncastExpression_SubstituteMenu());
case 7:
return Collections.<SubstituteMenu>singletonList(new Expression_Contribution());
case 8:
return Collections.<SubstituteMenu>singletonList(new IApplicableToDeque_SubstituteMenu());
case 9:
return Collections.<SubstituteMenu>singletonList(new IApplicableToList_SubstituteMenu());
case 10:
return Collections.<SubstituteMenu>singletonList(new IApplicableToNothing_SubstituteMenu());
case 11:
return Collections.<SubstituteMenu>singletonList(new IContainerOperation_SubstituteMenu());
case 12:
return Collections.<SubstituteMenu>singletonList(new IListOperation_SubstituteMenu());
case 13:
return Collections.<SubstituteMenu>singletonList(new IOperation_Contribution());
case 14:
return Collections.<SubstituteMenu>singletonList(new LinkedListCreator_SubstituteMenu());
case 15:
return Collections.<SubstituteMenu>singletonList(new MapElement_SubstituteMenu());
case 16:
return Collections.<SubstituteMenu>singletonList(new MapOperation_SubstituteMenu());
case 17:
return Collections.<SubstituteMenu>singletonList(new MapOperationExpression_SubstituteMenu());
case 18:
return Collections.<SubstituteMenu>singletonList(new RemoveAllSetElementsOperation_SubstituteMenu());
case 19:
return Collections.<SubstituteMenu>singletonList(new RemoveOperation_SubstituteMenu());
case 20:
return Collections.<SubstituteMenu>singletonList(new RemoveSetElementOperation_SubstituteMenu());
case 21:
return Collections.<SubstituteMenu>singletonList(new SequenceOperation_SubstituteMenu());
case 22:
return Collections.<SubstituteMenu>singletonList(new SkipStatement_SubstituteMenu());
case 23:
return Collections.<SubstituteMenu>singletonList(new SortDirection_SubstituteMenu());
case 24:
return Collections.<SubstituteMenu>singletonList(new StopStatement_SubstituteMenu());
case 25:
return Collections.<SubstituteMenu>singletonList(new ToIteratorOperation_SubstituteMenu());
default :
}
}
return Collections.<SubstituteMenu>emptyList();
}
