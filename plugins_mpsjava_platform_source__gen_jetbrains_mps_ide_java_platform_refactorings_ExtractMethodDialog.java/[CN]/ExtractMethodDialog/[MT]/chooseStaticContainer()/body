{
  final Wrappers._T<SModel> model=new Wrappers._T<SModel>();
  myContext.getRepository().getModelAccess().runReadAction(new Runnable(){
    public void run(){
      myRefactoringModel=SNodeOperations.getModel(ListSequence.fromList(ExtractMethodDialog.this.myParameters.getNodesToRefactor()).first());
      model.value=myRefactoringModel;
    }
  }
);
  final ChooseNodeDialog dialog=new ChooseNodeDialog(myMPSProject,new InstanceOfCondition(new SAbstractConcept[]{MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"),MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11c8f444674L,"jetbrains.mps.baseLanguage.structure.IStaticContainerForMethods")}),model.value,"Choose class");
  dialog.show();
  myContext.getRepository().getModelAccess().runReadAction(new Runnable(){
    public void run(){
      myStaticTarget=(dialog.getResult() != null ? dialog.getResult().resolve(myContext.getRepository()) : null);
    }
  }
);
  if (myStaticTarget == null) {
    myRefactoringModel=null;
  }
}
