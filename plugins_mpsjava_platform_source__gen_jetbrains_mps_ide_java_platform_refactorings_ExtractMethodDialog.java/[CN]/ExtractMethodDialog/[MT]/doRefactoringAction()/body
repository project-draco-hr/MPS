{
  if (!(myCanRefactor)) {
    JOptionPane.showMessageDialog(myPanel,"Can't refactor\n" + this.myErrors,"Can't perform refactoring",JOptionPane.ERROR_MESSAGE);
    return;
  }
 else {
    if (myExtractIntoOuterContainer) {
      if (myStaticTarget == null) {
        chooseStaticContainer();
      }
      if (myStaticTarget != null) {
        setStaticContainer();
      }
 else {
        return;
      }
    }
    myContext.getRepository().getModelAccess().executeCommand(new Runnable(){
      public void run(){
        SNode result=myRefactoring.doRefactor();
        myContext.select(result);
        if ((myRefactoringModel != null) && myExtractIntoOuterContainer) {
          SModelReference ref=SNodeOperations.getModel(myStaticTarget).getReference();
          ((SModelInternal)myRefactoringModel).addModelImport(ref,false);
        }
        if ((result != null)) {
          new ExtractMethodDialog.MyMethodDuplicatesProcessor(myContext,result).process(ExtractMethodDialog.this.myRefactoring.getMatches(),myProject);
        }
      }
    }
);
  }
  super.doRefactoringAction();
}
