{
  ITemplateGenerator generatorIface=myEnv.getGenerator();
  TemplateGenerator generator=myEnv.getGenerator();
  if (contextNode == null) {
    generatorIface.showErrorMessage(myApplicableNode,myRule.getRuleNode().resolve(MPSModuleRepository.getInstance()),"weaving rule: cannot find context node");
    return false;
  }
  SNode contextRoot=contextNode.getContainingRoot();
  SModel model=contextRoot.getModel();
  if (model == null) {
    generator.showErrorIfStrict(myRule.getRuleNode().resolve(MPSModuleRepository.getInstance()),"bad context for weaving rule: no root for context " + contextNode);
    return !generatorIface.isStrict();
  }
  SNode originalContextRoot=generator.getOriginalRootByGenerated(contextRoot);
  if (originalContextRoot == null) {
    generator.showErrorIfStrict(myRule.getRuleNode().resolve(MPSModuleRepository.getInstance()),"bad context for weaving rule: " + contextRoot + " is generated by 'create root' rule");
    return !generatorIface.isStrict();
  }
  if (myApplicableNode.getModel() == null)   return true;
  SNode inputRoot=myApplicableNode.getContainingRoot();
  if (originalContextRoot != inputRoot) {
    generator.showErrorIfStrict(myRule.getRuleNode().resolve(MPSModuleRepository.getInstance()),"bad context for weaving rule: " + contextRoot.toString() + " is generated from "+ originalContextRoot.toString()+ ", while input node is from "+ inputRoot.toString());
    return !generatorIface.isStrict();
  }
  return true;
}
