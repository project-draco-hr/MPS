{
  Set<IModule> reqModules=SetSequence.fromSet(new HashSet<IModule>());
  Set<Language> usedLanguages=SetSequence.fromSet(new HashSet<Language>());
  for (  IModule module : ListSequence.fromList(myModules)) {
    DependenciesManager depManager=module.getDependenciesManager();
    SetSequence.fromSet(reqModules).addSequence(SetSequence.fromSet(depManager.getAllVisibleModules()));
    SetSequence.fromSet(usedLanguages).addSequence(SetSequence.fromSet(depManager.getAllUsedLanguages()));
  }
  MPSTreeNode dependencies=new TextMPSTreeNode("Dependencies",getOperationContext());
  MPSTreeNode usedlanguages=new TextMPSTreeNode("Used languages",getOperationContext());
  for (  IModule m : SetSequence.fromSet(reqModules).sort(new ISelector<IModule,Comparable<?>>(){
    public Comparable<?> select(    IModule it){
      return it.getModuleFqName();
    }
  }
,true)) {
    dependencies.add(new ModuleDependencyNode(m,getOperationContext()));
  }
  for (  Language l : SetSequence.fromSet(usedLanguages).sort(new ISelector<Language,Comparable<?>>(){
    public Comparable<?> select(    Language it){
      return it.getModuleFqName();
    }
  }
,true)) {
    usedlanguages.add(new ModuleDependencyNode(l,getOperationContext()));
  }
  add(dependencies);
  add(usedlanguages);
  myInitialized=true;
}
