{
  if (this.myClassifierType != null) {
    if (SModelUtil.isAssignableConcept(targetConcept,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration"))) {
      SNode classifier=SLinkOperations.getTarget(this.myClassifierType,"classifier",false);
      if (SNodeOperations.isInstanceOf(classifier,"jetbrains.mps.baseLanguage.structure.ClassConcept") && SNodeOperations.isInstanceOf(referenceNode,"jetbrains.mps.baseLanguage.structure.IMethodCall")) {
        return new StaticMethodReferenceInfoResolver(this.myClassifierScope,(ClassConcept)((Classifier)SNodeOperations.getAdapter(classifier)),((IMethodCall)((BaseConcept)SNodeOperations.getAdapter(referenceNode))).getActualArguments());
      }
    }
 else     if (SModelUtil.isAssignableConcept(targetConcept,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration"))) {
      if (((BaseConcept)SNodeOperations.getAdapter(referenceNode)) instanceof IMethodCall) {
        return new InstanceMethodReferenceInfoResolver(this.myClassifierScope,((ClassifierType)SNodeOperations.getAdapter(this.myClassifierType)),((IMethodCall)((BaseConcept)SNodeOperations.getAdapter(referenceNode))).getActualArguments());
      }
    }
  }
  return this.myClassifierScope.getReferenceInfoResolver(referenceNode,targetConcept);
}
