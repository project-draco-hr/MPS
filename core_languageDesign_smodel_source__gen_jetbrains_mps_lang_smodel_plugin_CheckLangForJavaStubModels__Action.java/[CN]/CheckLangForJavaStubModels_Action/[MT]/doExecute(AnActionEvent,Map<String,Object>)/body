{
  try {
    Language language=((Language)((IModule)MapSequence.<String,Object>fromMap(_params).get("module")));
    Set<String> langStubModels=SetSequence.<String>fromSet(new HashSet<String>());
    Set<String> otherStubModels=SetSequence.<String>fromSet(new HashSet<String>());
    for (    EditableSModelDescriptor md : SetSequence.<EditableSModelDescriptor>fromSet(language.getAspectModelDescriptors())) {
      for (      SModelReference model : ListSequence.<SModelReference>fromList(SModelOperations.getImportedModelUIDs(md.getSModel()))) {
        if (model.getStereotype().equals(SModelStereotype.getStubStereotypeForId(LanguageID.JAVA))) {
          SModelDescriptor langModelForStub=SModelRepository.getInstance().getModelDescriptor(SModelReference.fromString(model.getLongName()));
          String modelName=model.getSModelFqName().toString();
          if (langModelForStub != null && language.getAspectForModel(langModelForStub) != null) {
            SetSequence.fromSet(langStubModels).addElement(modelName);
          }
 else {
            SetSequence.fromSet(otherStubModels).addElement(modelName);
          }
        }
      }
    }
    String langStubsMsg="";
    for (    String modelName : SetSequence.<String>fromSet(langStubModels)) {
      langStubsMsg+="  " + modelName + "\n";
    }
    String otherStubsMsg="";
    for (    String modelName : SetSequence.<String>fromSet(otherStubModels)) {
      otherStubsMsg+="  " + modelName + "\n";
    }
    String message=((SetSequence.<String>fromSet(langStubModels).isEmpty() ? "No language stub models" : "Language stub models: \n" + langStubsMsg)) + "\n" + ((SetSequence.<String>fromSet(otherStubModels).isEmpty() ? "No other stub models" : "Other stub models: \n" + otherStubsMsg));
    JOptionPane.showMessageDialog(((Frame)MapSequence.<String,Object>fromMap(_params).get("frame")),message);
  }
 catch (  Throwable t) {
    LOG.error("User's action execute method failed. Action:" + "CheckLangForJavaStubModels",t);
  }
}
