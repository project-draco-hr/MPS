{
  try {
    monitor.start("Overriding methods",10);
    List<SNode> nodes=FindUtils.executeFinder("jetbrains.mps.lang.structure.findUsages.NodeUsages_Finder",node,scope,monitor.subTask(2));
    ProgressMonitor sm=monitor.subTask(8);
    final SNode n=node;
    sm.start("",ListSequence.fromList(nodes).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(new UUID(-5808042798135555774l,-8657779246725685839l),1225194472830l,"jetbrains.mps.lang.behavior.structure.ConceptMethodDeclaration")) && SLinkOperations.getTarget(SNodeOperations.cast(it,MetaAdapterFactory.getConcept(new UUID(-5808042798135555774l,-8657779246725685839l),1225194472830l,"jetbrains.mps.lang.behavior.structure.ConceptMethodDeclaration")),MetaAdapterFactory.getReferenceLink(new UUID(-5808042798135555774l,-8657779246725685839l),1225194472830l,1225194472831l,"overriddenMethod")) == n;
      }
    }
).count());
    for (    SNode nodeUsage : ListSequence.fromList(nodes)) {
      if (SNodeOperations.isInstanceOf(nodeUsage,MetaAdapterFactory.getConcept(new UUID(-5808042798135555774l,-8657779246725685839l),1225194472830l,"jetbrains.mps.lang.behavior.structure.ConceptMethodDeclaration")) && SLinkOperations.getTarget(SNodeOperations.cast(nodeUsage,MetaAdapterFactory.getConcept(new UUID(-5808042798135555774l,-8657779246725685839l),1225194472830l,"jetbrains.mps.lang.behavior.structure.ConceptMethodDeclaration")),MetaAdapterFactory.getReferenceLink(new UUID(-5808042798135555774l,-8657779246725685839l),1225194472830l,1225194472831l,"overriddenMethod")) == node) {
        ListSequence.fromList(_results).addElement(nodeUsage);
        for (        SNode overriding : ListSequence.fromList(FindUtils.executeFinder("jetbrains.mps.lang.behavior.findUsages.OverridingMethods_Finder",nodeUsage,scope,sm.subTask(1)))) {
          ListSequence.fromList(_results).addElement(overriding);
        }
      }
    }
    sm.done();
  }
  finally {
    monitor.done();
  }
}
