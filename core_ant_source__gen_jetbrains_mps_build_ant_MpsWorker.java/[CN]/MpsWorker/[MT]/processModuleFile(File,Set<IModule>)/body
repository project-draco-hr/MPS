{
  if (DescriptorIOFacade.getInstance().fromFileType(FileSystem.getInstance().getFileByPath(moduleFile.getPath())) == null) {
    return;
  }
  List<IModule> tmpmodules;
  IModule moduleByFile=ModelAccess.instance().runReadAction(new Computable<IModule>(){
    public IModule compute(){
      return ModuleFileTracker.getInstance().getModuleByFile(FileSystem.getInstance().getFileByPath(moduleFile.getAbsolutePath()));
    }
  }
);
  if (moduleByFile != null) {
    tmpmodules=Collections.singletonList(moduleByFile);
  }
 else {
    tmpmodules=ModelAccess.instance().runWriteAction(new Computable<List<IModule>>(){
      public List<IModule> compute(){
        IFile file=FileSystem.getInstance().getFileByPath(moduleFile.getPath());
        BaseMPSModuleOwner owner=new BaseMPSModuleOwner();
        List<IModule> modules=new ArrayList<IModule>();
        for (        ModulesMiner.ModuleHandle moduleHandle : ModulesMiner.getInstance().collectModules(file,false)) {
          IModule module=ModuleRepositoryFacade.createModule(moduleHandle,owner);
          if (module != null) {
            modules.add(module);
          }
        }
        return modules;
      }
    }
);
  }
  modules.addAll(tmpmodules);
  for (  IModule module : tmpmodules) {
    info("Loaded module " + module);
    if (module.isPackaged()) {
      continue;
    }
    if (module instanceof Language) {
      Language language=(Language)module;
      for (      Generator gen : language.getGenerators()) {
        modules.add(gen);
      }
    }
  }
}
