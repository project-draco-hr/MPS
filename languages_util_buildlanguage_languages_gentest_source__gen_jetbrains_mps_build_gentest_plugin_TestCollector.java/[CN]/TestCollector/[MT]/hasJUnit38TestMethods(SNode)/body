{
  return ListSequence.fromList(SLinkOperations.getTargets(maybetest,"method",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode meth){
      return SLinkOperations.getTarget(meth,"visibility",true) == getPublicVisibility() && SPropertyOperations.getString(meth,"name").startsWith("test");
    }
  }
).any(new IWhereFilter<SNode>(){
    public boolean accept(    SNode meth){
      return !(hasAnnotation(meth,getIgnoreAnnotation()));
    }
  }
);
}
