{
  super("Update RuntimeUtil with references to function interfaces");
  this.addRefactoring(new AbstractMigrationRefactoring(){
    @Override public String getName(){
      return "_FunctionTypes";
    }
    @Override public String getAdditionalInfo(){
      return "_FunctionTypes";
    }
    @Override public SAbstractConcept getApplicableConcept(){
      return MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbbebabf0aL,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration");
    }
    @Override public boolean isApplicableInstanceNode(    SNode node){
      return "jetbrains.mps.baseLanguage.closures.util.RuntimeUtil".equals(NameUtil.nodeFQName(SNodeOperations.getParent(node))) && "function".equals(SPropertyOperations.getString(node,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")));
    }
    @Override public void doUpdateInstanceNode(    SNode node){
      SNode smd=node;
      SNode ssw=Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(SLinkOperations.getTarget(smd,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1ffL,"body")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b200L,0xf8cc6bf961L,"statement")),MetaAdapterFactory.getConcept(0x96ee7a94411d4cf8L,0x9b9496cad7e52411L,0x58f5e8197ce2129L,"jetbrains.mps.baseLanguage.jdk7.structure.StringSwitchStatement"))).first();
      if ((ssw == null)) {
        if (LOG.isEnabledFor(Level.WARN)) {
          LOG.warn("broken code in RuntimeUtil: not found StringSwitchStatement in function");
        }
        return;
      }
      ListSequence.fromList(SLinkOperations.getChildren(ssw,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10ef02a8c6aL,0x10ef02edcafL,"case"))).clear();
      SNode fncls=RuntimeUtil.functionClassifierContainer();
      SModelReference modelRef=SNodeOperations.getModel(fncls).getReference();
      for (      SNode ifc : SNodeOperations.ofConcept(SLinkOperations.getChildren(fncls,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x4a9a46de59132803L,"member")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface"))) {
        ListSequence.fromList(SLinkOperations.getChildren(ssw,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10ef02a8c6aL,0x10ef02edcafL,"case"))).addElement(_quotation_createNode_tdy3l4_a0a0a21a0a(SPropertyOperations.getString(ifc,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")),modelRef.toString(),ifc.getNodeId().toString()));
      }
    }
    @Override public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(){
    @Override public String getName(){
      return "_UnrestrictedFunctionTypes";
    }
    @Override public String getAdditionalInfo(){
      return "_UnrestrictedFunctionTypes";
    }
    @Override public SAbstractConcept getApplicableConcept(){
      return MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbbebabf0aL,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration");
    }
    @Override public boolean isApplicableInstanceNode(    SNode node){
      return "jetbrains.mps.baseLanguage.closures.util.RuntimeUtil".equals(NameUtil.nodeFQName(SNodeOperations.getParent(node))) && "ufunction".equals(SPropertyOperations.getString(node,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")));
    }
    @Override public void doUpdateInstanceNode(    SNode node){
      SNode smd=node;
      SNode ssw=Sequence.fromIterable(SNodeOperations.ofConcept(SLinkOperations.getChildren(SLinkOperations.getTarget(smd,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1ffL,"body")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b200L,0xf8cc6bf961L,"statement")),MetaAdapterFactory.getConcept(0x96ee7a94411d4cf8L,0x9b9496cad7e52411L,0x58f5e8197ce2129L,"jetbrains.mps.baseLanguage.jdk7.structure.StringSwitchStatement"))).first();
      if ((ssw == null)) {
        if (LOG.isEnabledFor(Level.WARN)) {
          LOG.warn("broken code in RuntimeUtil: not found StringSwitchStatement in ufunction");
        }
        return;
      }
      ListSequence.fromList(SLinkOperations.getChildren(ssw,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10ef02a8c6aL,0x10ef02edcafL,"case"))).clear();
      SNode fncls=RuntimeUtil.ufunctionClassifierContainer();
      SModelReference modelRef=SNodeOperations.getModel(fncls).getReference();
      for (      SNode ifc : SNodeOperations.ofConcept(SLinkOperations.getChildren(fncls,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x4a9a46de59132803L,"member")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface"))) {
        ListSequence.fromList(SLinkOperations.getChildren(ssw,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10ef02a8c6aL,0x10ef02edcafL,"case"))).addElement(_quotation_createNode_tdy3l4_a0a0a21a0b(SPropertyOperations.getString(ifc,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")),modelRef.toString(),ifc.getNodeId().toString()));
      }
    }
    @Override public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
