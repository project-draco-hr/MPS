{
  if (SNodeOperations.isInstanceOf(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.IMethodCall")) {
    int idx=ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.IMethodCall"),"actualArgument",true)).indexOf(_context.getNewNode());
    if (idx >= 0) {
      List<SNode> params=SLinkOperations.getTargets(SLinkOperations.getTarget(SNodeOperations.cast(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.IMethodCall"),"baseMethodDeclaration",false),"parameter",true);
      if (idx < ListSequence.fromList(params).count()) {
        SNode pdtype=SLinkOperations.getTarget(ListSequence.fromList(params).getElement(idx),"type",true);
        if (SNodeOperations.isInstanceOf(pdtype,"jetbrains.mps.baseLanguage.structure.ClassifierType")) {
          List<SNode> methods=SLinkOperations.getTargets(SLinkOperations.getTarget(SNodeOperations.cast(pdtype,"jetbrains.mps.baseLanguage.structure.ClassifierType"),"classifier",false),"method",true);
          if (ListSequence.fromList(methods).count() == 1) {
            SNode adaptTo=ListSequence.fromList(methods).getElement(0);
            for (            SNode adaptToPD : SLinkOperations.getTargets(adaptTo,"parameter",true)) {
              SNode pd=SLinkOperations.addChild(_context.getNewNode(),"parameter",SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ParameterDeclaration",null));
              SPropertyOperations.set(pd,"name",SPropertyOperations.getString(adaptToPD,"name"));
              SLinkOperations.setTarget(pd,"type",SLinkOperations.getTarget(adaptToPD,"type",true),true);
            }
          }
        }
      }
    }
  }
}
