{
  MPSProject project=MPSDataKeys.MPS_PROJECT.getData(DataManager.getInstance().getDataContext());
  assertNotNull("Main project not found",project);
  final NewLanguageDialog dialog=new NewLanguageDialog(project,null);
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      dialog.show();
    }
  }
);
  flushAWT();
  JTextField nameField=findTextField("Name");
  getHelper().sendString(new StringEventData(this,nameField,"myLang"));
  flushAWT();
  PathField pathField=findPathField("Path");
  boolean correctSuffix=pathField.getPath().endsWith(nameField.getText());
  assertTrue("Language suffix is not added to path",correctSuffix);
  pressButton(dialog,"OK");
  final boolean[] loaded=new boolean[1];
  ClassLoaderManager.getInstance().addClassesHandler(new MPSClassesListenerAdapter(){
    @Override public void afterClassesLoaded(    Set<? extends ReloadableModuleBase> modules){
      loaded[0]=true;
      ClassLoaderManager.getInstance().removeClassesHandler(this);
    }
  }
);
  TestUtil.conditionalWaitAndFlush(this,new Computable<Boolean>(){
    public Boolean compute(){
      return loaded[0];
    }
  }
);
  final Language l=dialog.getLangauge();
  assertNotNull("Language is not created",l);
  boolean isImported=myCreatedProject.getProjectModules(Language.class).contains(l);
  assertTrue("Language is not imported into project",isImported);
}
