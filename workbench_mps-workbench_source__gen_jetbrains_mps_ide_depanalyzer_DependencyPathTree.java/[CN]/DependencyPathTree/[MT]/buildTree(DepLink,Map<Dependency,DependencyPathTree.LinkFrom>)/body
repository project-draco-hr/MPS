{
  List<DepLink> dependencyPath=ListSequence.fromList(new LinkedList<DepLink>());
  while (depNode != null) {
    ListSequence.fromList(dependencyPath).insertElement(0,depNode);
    depNode=depNode.parent();
  }
  DependencyPathTree.LinkFrom parent=null;
  while (ListSequence.fromList(dependencyPath).isNotEmpty()) {
    DepLink n=ListSequence.fromList(dependencyPath).removeElementAt(0);
    Dependency key=n.getRoleModuleKey();
    DependencyPathTree.LinkFrom e=MapSequence.fromMap(visited).get(key);
    if (e == null || e.parent != parent) {
      DependencyPathTree.LinkFrom f=new DependencyPathTree.LinkFrom(n,parent);
      MapSequence.fromMap(visited).put(key,f);
      parent=f;
    }
 else {
      parent=e;
    }
  }
  if (parent != null) {
    parent.node.setDepLeaf();
  }
}
