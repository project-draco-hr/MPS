{
  Set<Intention> result=new HashSet<Intention>();
  assert(context != null);
  for (  String conceptFQName : myIntentions.keySet()) {
    if (node.isInstanceOfConcept(conceptFQName)) {
      for (      final Intention intention : Collections.unmodifiableSet(myIntentions.get(conceptFQName))) {
        try {
          boolean isApplicable=ModelAccess.instance().runReadAction(new Computable<Boolean>(){
            public Boolean compute(){
              return intention.isApplicable(node,context);
            }
          }
);
          if (isApplicable) {
            result.add(intention);
          }
        }
 catch (        Throwable t) {
          LOG.error("Intention's isApplicable method failed " + t.getMessage(),t);
        }
      }
    }
  }
  List<IEditorMessage> messages=context.getNodeEditorComponent().getHighlightManager().getMessagesFor(node);
  for (  IEditorMessage message : messages) {
    IntentionProvider intentionProvider=message.getIntentionProvider();
    if (intentionProvider != null) {
      Intention intention=intentionProvider.getIntention(node,context);
      if (intention != null) {
        result.add(intention);
      }
    }
  }
  return Collections.unmodifiableSet(result);
}
