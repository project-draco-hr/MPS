{
  Set<Intention> result=new HashSet<Intention>();
  if (context == null)   return Collections.unmodifiableSet(result);
  for (  String conceptFQName : myIntentions.keySet()) {
    if (node.isInstanceOfConcept(conceptFQName)) {
      for (      final Intention intention : Collections.unmodifiableSet(myIntentions.get(conceptFQName))) {
        try {
          boolean isApplicable=CommandProcessor.instance().executeLightweightCommand(new Calculable<Boolean>(){
            public Boolean calculate(){
              return intention.isApplicable(node,context);
            }
          }
);
          if (isApplicable) {
            result.add(intention);
          }
        }
 catch (        Throwable t) {
          LOG.error("Intention's isApplicable method failed " + t.getMessage(),t);
        }
      }
    }
  }
  return Collections.unmodifiableSet(result);
}
