{
  if (module == null)   return false;
  Set<MPSModuleOwner> moduleOwners=ModelAccess.instance().runReadAction(new Computable<Set<MPSModuleOwner>>(){
    @Override public Set<MPSModuleOwner> compute(){
      return ModuleRepositoryFacade.getInstance().getModuleOwners(module);
    }
  }
);
  for (  MPSModuleOwner owner : moduleOwners) {
    if (owner instanceof Language) {
      return isVisible((Language)owner);
    }
    if (!owner.isHidden())     return true;
  }
  VisibleModuleMask[] extensions=VisibleModuleMask.EP_VISIBLE_MODULES.getExtensions();
  for (  VisibleModuleMask e : extensions) {
    if (module.getModuleFqName().startsWith(e.mask)) {
      return true;
    }
  }
  return false;
}
