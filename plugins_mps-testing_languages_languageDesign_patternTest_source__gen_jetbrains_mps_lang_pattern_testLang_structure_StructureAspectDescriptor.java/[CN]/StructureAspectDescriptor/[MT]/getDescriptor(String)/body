{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.lang.pattern.testLang.structure.ListValue").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"variable","value"},new boolean[]{false,true}).create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.lang.pattern.testLang.structure.PatternTest").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.baseLanguage.unitTest.structure.ITestCase","jetbrains.mps.baseLanguage.unitTest.structure.ITestMethod").children(new String[]{"nodeToMatch","pattern","matches","variable","property","list"},new boolean[]{false,false,false,true,true,true}).create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.pattern.testLang.structure.PropertyValue").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"variable","value"},new boolean[]{false,false}).create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.pattern.testLang.structure.TestListReference").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("listPattern").create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.pattern.testLang.structure.TestPropertyVariableReference").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("declaration").create();
case 5:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.pattern.testLang.structure.TestVariableReference").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("declaration").create();
case 6:
return new ConceptDescriptorBuilder("jetbrains.mps.lang.pattern.testLang.structure.VariableValue").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"value","variable"},new boolean[]{false,false}).create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
