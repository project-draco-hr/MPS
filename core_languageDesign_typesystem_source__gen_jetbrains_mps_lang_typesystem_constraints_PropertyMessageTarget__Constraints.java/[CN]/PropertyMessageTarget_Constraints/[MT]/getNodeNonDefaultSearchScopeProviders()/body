{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("propertyDeclaration",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      SNode messageStatement=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.lang.typesystem.structure.MessageStatement",true,false);
      if (messageStatement == null) {
        return Sequence.fromIterable(Collections.<SNode>emptyList());
      }
      SNode nodetype=TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(messageStatement,"nodeToReport",true));
{
        IMatchingPattern pattern_hhynfx_d0a0=HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.lang.smodel.structure.SNodeType");
        SNode coercedNode_hhynfx_d0a0=TypeChecker.getInstance().getRuntimeSupport().coerce_(nodetype,pattern_hhynfx_d0a0);
        if (coercedNode_hhynfx_d0a0 != null) {
          return AbstractConceptDeclaration_Behavior.call_getPropertyDeclarations_1213877394546(SLinkOperations.getTarget(coercedNode_hhynfx_d0a0,"concept",false));
        }
 else {
          return Sequence.fromIterable(Collections.<SNode>emptyList());
        }
      }
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c895902ae(jetbrains.mps.lang.typesystem.constraints)","1227098350409");
    }
  }
);
  return result;
}
