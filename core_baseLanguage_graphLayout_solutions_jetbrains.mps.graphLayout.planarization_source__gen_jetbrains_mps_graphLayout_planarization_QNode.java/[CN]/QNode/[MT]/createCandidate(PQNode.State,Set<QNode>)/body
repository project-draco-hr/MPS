{
  PQNode.State curState=initialState;
  QNode candidate=new QNode();
  for (  PQNode child : ListSequence.fromList(getChildren())) {
    if (child.getState() != PQNode.State.PARTIAL) {
      candidate.addLastChild(child);
      curState=child.getState();
    }
 else {
      Iterator<PQNode> partialChildIrt;
      if (curState == PQNode.State.EMPTY) {
        partialChildIrt=ListSequence.fromList(child.getChildren()).iterator();
      }
 else {
        SetSequence.fromSet(nodesToRevert).addElement(((QNode)child));
        partialChildIrt=ListSequence.fromList(child.getChildren()).reversedList().iterator();
      }
      while (partialChildIrt.hasNext()) {
        candidate.addLastChild(partialChildIrt.next());
      }
      curState=ListSequence.fromList(candidate.getChildren()).last().getState();
    }
  }
  return candidate;
}
