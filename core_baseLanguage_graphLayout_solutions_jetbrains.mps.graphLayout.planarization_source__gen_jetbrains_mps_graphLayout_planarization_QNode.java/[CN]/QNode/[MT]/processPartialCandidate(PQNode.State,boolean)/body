{
  Set<QNode> nodesToRevert=SetSequence.fromSet(new HashSet<QNode>());
  QNode candidate=createCandidate(initialState,nodesToRevert);
  if (checkCandidate(candidate,isPertinentRoot)) {
    candidate.setParent(this.getParent());
    SetSequence.fromSet(candidate.getGraphNodes()).addSequence(SetSequence.fromSet(this.getGraphNodes()));
    for (    QNode node : SetSequence.fromSet(nodesToRevert)) {
      node.reverse();
    }
    if (ListSequence.fromList(candidate.getChildren()).first().getState() == PQNode.State.FULL) {
      candidate.reverse();
    }
    candidate.setState(PQNode.State.PARTIAL);
    return candidate;
  }
 else {
    return null;
  }
}
