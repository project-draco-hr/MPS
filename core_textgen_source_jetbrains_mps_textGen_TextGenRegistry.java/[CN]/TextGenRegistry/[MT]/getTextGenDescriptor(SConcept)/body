{
  final String fqName=concept.getQualifiedName();
  TextGenDescriptor descriptor=textGenDescriptors.get(fqName);
  if (descriptor != null) {
    return descriptor;
  }
  for (  SConcept next : new ImmediateParentConceptIterator(concept,SNodeUtil.concept_BaseConcept)) {
    TextGenAspectDescriptor textGenAspectDescriptor=getAspect(next);
    if (textGenAspectDescriptor == null) {
      continue;
    }
    descriptor=textGenAspectDescriptor.getDescriptor(MetaIdHelper.getConcept(next));
    if (descriptor != null) {
      break;
    }
  }
  if (descriptor == null) {
    final Class<? extends SNodeTextGen> legacyTextGenClass=getLegacyTextGenClass(concept);
    if (legacyTextGenClass != null) {
      return new LegacyTextGenAdapter(legacyTextGenClass);
    }
    descriptor=new MissingTextGenDescriptor();
  }
  textGenDescriptors.put(fqName,descriptor);
  return descriptor;
}
