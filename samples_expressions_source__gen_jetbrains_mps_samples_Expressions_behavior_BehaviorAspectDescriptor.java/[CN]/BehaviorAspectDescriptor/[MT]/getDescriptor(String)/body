{
switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0b,fqName)) {
case 2:
    return new NotSimpleMathExpression_BehaviorDescriptor();
case 5:
  return new SimpleMathBooleanType_BehaviorDescriptor();
case 14:
return new SimpleMathWrapper_BehaviorDescriptor();
case 0:
return new AndSimpleMathExpression_BehaviorDescriptor();
case 3:
return new OrSimpleMathExpression_BehaviorDescriptor();
case 4:
return new SimpleMathBooleanConstant_BehaviorDescriptor();
case 7:
return new SimpleMathIntegerConstant_BehaviorDescriptor();
case 8:
return new SimpleMathIntegerType_BehaviorDescriptor();
case 1:
return new ArithmeticSimpleMathExpression_BehaviorDescriptor();
case 12:
return new SimpleMathVarDeclaration_BehaviorDescriptor();
case 13:
return new SimpleMathVarReference_BehaviorDescriptor();
case 6:
return new SimpleMathElementType_BehaviorDescriptor();
case 11:
return new SimpleMathNumberType_BehaviorDescriptor();
case 10:
return new SimpleMathLongType_BehaviorDescriptor();
case 9:
return new SimpleMathLongConstant_BehaviorDescriptor();
default :
return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
}
}
