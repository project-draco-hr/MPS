{
  TypeChecker typeChecker=myState.getTypeCheckingContext().getTypeChecker();
  for (  jetbrains.mps.util.Pair<InequationReplacementRule_Runtime,IsApplicable2Status> inequalityReplacementRule : typeChecker.getRulesManager().getReplacementRules(subType,superType)) {
    final InequationReplacementRule_Runtime rule=inequalityReplacementRule.o1;
    final IsApplicable2Status status=inequalityReplacementRule.o2;
    myState.executeOperation(new ProcessReplacementRuleOperation(subType,superType,new Runnable(){
      public void run(){
        ((AbstractInequationReplacementRule_Runtime)rule).processInequation(subType,superType,myEquationInfo,myState.getTypeCheckingContext(),status,myRelationKind.isWeak(),lessThan);
      }
    }
));
    return true;
  }
  return false;
}
