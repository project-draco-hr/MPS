{
  final List<SNode> methodsToOverride=ClassConcept__BehaviorDescriptor.getMethodsToOverride_id4GM03FJm3zL.invokeSpecial(__thisNode__);
  Iterable<SNode> ownMethods=ListSequence.fromList(Classifier__BehaviorDescriptor.getOwnMethods_id1DPgsAlM_WC.invoke(SNodeOperations.getNode("6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.lang(JDK/)","~Enum"))).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration")) || SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b204L,"jetbrains.mps.baseLanguage.structure.ConstructorDeclaration"));
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      SNode v=SLinkOperations.getTarget(SNodeOperations.cast(it,MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,"jetbrains.mps.baseLanguage.structure.IVisible")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,0x112670d886aL,"visibility"));
      return (v != null) && !(SNodeOperations.isInstanceOf(v,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10af9586f0cL,"jetbrains.mps.baseLanguage.structure.PrivateVisibility"))) && !(SPropertyOperations.getBoolean(SNodeOperations.as(it,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b21dL,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration")),MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0x113294bffd2L,"isFinal")));
    }
  }
);
  Iterable<SNode> allToBeAdded=Sequence.fromIterable(ownMethods).where(new IWhereFilter<SNode>(){
    public boolean accept(    final SNode own){
      return !(ListSequence.fromList(methodsToOverride).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode toBeOverriden){
          return BaseMethodDeclaration__BehaviorDescriptor.hasSameSignature_idhEwIB0z.invoke(own,toBeOverriden);
        }
      }
));
    }
  }
);
  return ListSequence.fromList(methodsToOverride).addSequence(Sequence.fromIterable(allToBeAdded));
}
