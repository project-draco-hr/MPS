{
  List<INodeSubstituteAction> list=new LinkedList<INodeSubstituteAction>();
  list.add(new AbstractNodeSubstituteAction(myNode){
    public String getMatchingText(    String pattern){
      return "true";
    }
    public SNode doSubstitute(    String pattern){
      myNode.setProperty(myPropertyName,"true");
      return null;
    }
  }
);
  list.add(new AbstractNodeSubstituteAction(myNode){
    public String getMatchingText(    String pattern){
      return "false";
    }
    public SNode doSubstitute(    String pattern){
      myNode.setProperty(myPropertyName,"false");
      return null;
    }
  }
);
  return (List)list;
}
