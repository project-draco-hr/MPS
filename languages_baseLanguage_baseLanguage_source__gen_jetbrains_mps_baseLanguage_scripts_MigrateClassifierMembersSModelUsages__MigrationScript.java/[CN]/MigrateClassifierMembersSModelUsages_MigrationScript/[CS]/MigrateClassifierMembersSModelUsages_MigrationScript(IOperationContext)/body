{
  super("Use member role for classifier members (smodel usages)");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Migrate .field.add usages (use member role instead of field role)";
    }
    public String getAdditionalInfo(){
      return "Migrate .field.add usages (use member role instead of field role)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.smodel.structure.SLinkListAccess";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      if (!(SetSequence.fromSet(MapSequence.fromMap(MembersMigrationUtil.OLD_LINK_TO_NEW_BEHAVIOR_METHOD).keySet()).contains(SLinkOperations.getTarget(node,MetaAdapterFactory.getReferenceLink(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x108f970c119L,0x108f974c962L,"link"))))) {
        return false;
      }
      if (NonMigratableUsagesFinder.isExcluded(node)) {
        return false;
      }
      return NonMigratableUsagesFinder.isThisForSimpleAddOperation(node);
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,MetaAdapterFactory.getReferenceLink(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x108f970c119L,0x108f974c962L,"link"),SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x4a9a46de59132803L,"member")));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Migrate LinkList_AddNewChildOperation";
    }
    public String getAdditionalInfo(){
      return "Migrate LinkList_AddNewChildOperation";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.smodel.structure.SLinkListAccess";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      if (!(SetSequence.fromSet(MapSequence.fromMap(MembersMigrationUtil.OLD_LINK_TO_NEW_BEHAVIOR_METHOD).keySet()).contains(SLinkOperations.getTarget(node,MetaAdapterFactory.getReferenceLink(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x108f970c119L,0x108f974c962L,"link"))))) {
        return false;
      }
      if (NonMigratableUsagesFinder.isExcluded(node)) {
        return false;
      }
      return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.as(SNodeOperations.getParent((SNodeOperations.as(SNodeOperations.getParent(node),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,"jetbrains.mps.baseLanguage.structure.DotExpression")))),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,"jetbrains.mps.baseLanguage.structure.DotExpression")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,0x116b46b36c4L,"operation")),MetaAdapterFactory.getConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x1093caead54L,"jetbrains.mps.lang.smodel.structure.LinkList_AddNewChildOperation"));
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode operation=SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.as(SNodeOperations.getParent((SNodeOperations.as(SNodeOperations.getParent(node),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,"jetbrains.mps.baseLanguage.structure.DotExpression")))),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,"jetbrains.mps.baseLanguage.structure.DotExpression")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,0x116b46b36c4L,"operation")),MetaAdapterFactory.getConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x1093caead54L,"jetbrains.mps.lang.smodel.structure.LinkList_AddNewChildOperation"));
      if ((SLinkOperations.getTarget(operation,MetaAdapterFactory.getReferenceLink(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x1093caead54L,0x1096601f97fL,"concept")) == null)) {
        SLinkOperations.setTarget(operation,MetaAdapterFactory.getReferenceLink(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x1093caead54L,0x1096601f97fL,"concept"),SLinkOperations.getTarget(SLinkOperations.getTarget(node,MetaAdapterFactory.getReferenceLink(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x108f970c119L,0x108f974c962L,"link")),MetaAdapterFactory.getReferenceLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086aL,0xf98055fef0L,"target")));
      }
      SLinkOperations.setTarget(node,MetaAdapterFactory.getReferenceLink(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x108f970c119L,0x108f974c962L,"link"),SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x4a9a46de59132803L,"member")));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Use .fields() etc operation where it possible (replace for sequence access)";
    }
    public String getAdditionalInfo(){
      return "Use .fields() etc operation where it possible (replace for sequence access)";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.smodel.structure.SLinkListAccess";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      if (!(SetSequence.fromSet(MapSequence.fromMap(MembersMigrationUtil.OLD_LINK_TO_NEW_BEHAVIOR_METHOD).keySet()).contains(SLinkOperations.getTarget(node,MetaAdapterFactory.getReferenceLink(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x108f970c119L,0x108f974c962L,"link"))))) {
        return false;
      }
      if (NonMigratableUsagesFinder.isExcluded(node)) {
        return false;
      }
      return ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x10802efe25aL,0x47bf8397520e5942L,"smodelAttribute"))).isEmpty();
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode methodCall=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x1129a43046bL,"jetbrains.mps.lang.smodel.structure.Node_ConceptMethodCall")));
      SLinkOperations.setTarget(methodCall,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration"),MapSequence.fromMap(MembersMigrationUtil.OLD_LINK_TO_NEW_BEHAVIOR_METHOD).get(SLinkOperations.getTarget(node,MetaAdapterFactory.getReferenceLink(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x108f970c119L,0x108f974c962L,"link"))));
      SNodeOperations.replaceWithAnother(node,methodCall);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
