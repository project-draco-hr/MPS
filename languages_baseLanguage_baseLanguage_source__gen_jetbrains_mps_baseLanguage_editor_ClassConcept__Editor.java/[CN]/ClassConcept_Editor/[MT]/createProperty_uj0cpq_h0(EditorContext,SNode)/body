{
  CellProviderWithRole provider=new PropertyCellProvider(node,editorContext);
  provider.setRole("name");
  provider.setNoTargetText("<no name>");
  EditorCell editorCell;
  editorCell=provider.createEditorCell(editorContext);
  editorCell.setCellId("property_name");
  Style style=new StyleImpl();
  style.set(StyleAttributes.SELECTABLE,0,true);
  editorCell.getStyle().putAll(style);
  if (renderingCondition_uj0cpq_a7a(node,editorContext)) {
    editorCell.getStyle().set(StyleAttributes.FOCUS_POLICY,FocusPolicy.ATTRACTS_FOCUS);
  }
  editorCell.setTransformationMenuLookup(new NamedTransformationMenuLookup(LanguageRegistry.getInstance(editorContext.getRepository()),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"),"jetbrains.mps.baseLanguage.editor.ClassConcept_ApplySideTransforms"));
  editorCell.setSubstituteInfo(provider.createDefaultSubstituteInfo());
  SNode attributeConcept=provider.getRoleAttribute();
  Class attributeKind=provider.getRoleAttributeClass();
  if (attributeConcept != null) {
    EditorManager manager=EditorManager.getInstanceFromContext(editorContext);
    return manager.createNodeRoleAttributeCell(attributeConcept,attributeKind,editorCell);
  }
 else   return editorCell;
}
