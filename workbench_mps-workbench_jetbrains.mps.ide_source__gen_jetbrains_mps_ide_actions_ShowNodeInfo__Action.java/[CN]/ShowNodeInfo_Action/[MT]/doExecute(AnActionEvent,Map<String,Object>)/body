{
  final Point point=new Point(((EditorCell)MapSequence.fromMap(_params).get("cell")).getX() + ((EditorCell)MapSequence.fromMap(_params).get("cell")).getWidth(),((EditorCell)MapSequence.fromMap(_params).get("cell")).getY());
  SwingUtilities.convertPointToScreen(point,((EditorComponent)MapSequence.fromMap(_params).get("editor")));
  final Frame frame=((Frame)MapSequence.fromMap(_params).get("frame"));
  final SNode node=((SNode)MapSequence.fromMap(_params).get("node"));
  final String text=new ModelAccessHelper(((EditorComponent)MapSequence.fromMap(_params).get("editor")).getEditorContext().getRepository()).runReadAction(new Computable<String>(){
    public String compute(){
      return NodeInformationDialog.createNodeInfo(node);
    }
  }
);
  ApplicationManager.getApplication().invokeLater(new Runnable(){
    @Override public void run(){
      new NodeInformationDialog(((EditorComponent)MapSequence.fromMap(_params).get("editor")),frame,point,text).setVisible(true);
    }
  }
);
}
