{
  String message=NewModuleUtil.check(MPSExtentions.DOT_LANGUAGE,myThis.getLanguageNamespace(),myThis.getLanguagePath());
  if (message != null) {
    myThis.getDialog().setErrorText(message);
    return;
  }
  myThis.getDialog().dispose();
  NewModuleUtil.runModuleCreation(myThis.getProject().getProject(),new _FunctionTypes._void_P0_E0(){
    public void invoke(){
      Language language=myThis.createNewLanguage();
      if (!(language.getSModelRoots().isEmpty())) {
        LanguageAspect.STRUCTURE.createNew(language,false);
        LanguageAspect.EDITOR.createNew(language,false);
        LanguageAspect.CONSTRAINTS.createNew(language,false);
        LanguageAspect.BEHAVIOR.createNew(language,false);
        LanguageAspect.TYPESYSTEM.createNew(language,false);
      }
      if (myThis.myNeedRuntime_hneum8_f0.isSelected()) {
        Solution runtime=myThis.createRuntimeSolution();
        runtime.createModel(SModelFqName.fromString(myThis.getLanguageNamespace() + ".runtime"),runtime.getSModelRoots().iterator().next(),null);
      }
      if (myThis.myNeedSandbox_hneum8_g0.isSelected()) {
        Solution sandbox=myThis.createSandboxSolution();
        SModel createdModel=sandbox.createModel(SModelFqName.fromString(myThis.getLanguageNamespace() + ".sandbox"),sandbox.getSModelRoots().iterator().next(),null).getSModel();
        createdModel.addLanguage(myThis.getResult().getModuleReference());
        for (        ModuleReference extendedLanguage : myThis.getResult().getExtendedLanguageRefs()) {
          createdModel.addLanguage(extendedLanguage);
        }
        for (        ModuleReference addedLanguage : createdModel.importedLanguages()) {
          if (sandbox.getScope().getLanguage(addedLanguage) == null) {
            sandbox.addUsedLanguage(addedLanguage);
          }
        }
      }
    }
  }
);
}
