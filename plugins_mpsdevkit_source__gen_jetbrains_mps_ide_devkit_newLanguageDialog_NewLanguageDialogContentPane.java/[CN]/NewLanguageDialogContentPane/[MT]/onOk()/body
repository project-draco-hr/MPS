{
  String message=NewModuleUtil.check(MPSExtentions.DOT_LANGUAGE,myThis.getLanguageNamespace(),myThis.getLanguagePath());
  if (message != null) {
    myThis.getDialog().setError(message);
    return;
  }
  myThis.getDialog().dispose();
  NewModuleUtil.runModuleCreation(myThis.getProject().getProject(),new _FunctionTypes._void_P0_E0(){
    public void invoke(){
      Language language=NewModuleUtil.createLanguage(myThis.getLanguageNamespace(),myThis.getLanguagePath(),myThis.getProject());
      if (myThis.myNeedRuntime_hneum8_f0.isSelected()) {
        Solution runtime=myThis.createRuntimeSolution();
        SModuleOperations.createModelWithAdjustments(myThis.getLanguageNamespace() + ".runtime",runtime.getModelRoots().iterator().next());
      }
      if (myThis.myNeedSandbox_hneum8_g0.isSelected()) {
        Solution sandbox=myThis.createSandboxSolution();
        SModel createdModel=SModuleOperations.createModelWithAdjustments(myThis.getLanguageNamespace() + ".sandbox",sandbox.getModelRoots().iterator().next()).getSModel();
        ((SModelInternal)createdModel).addLanguage(language.getModuleReference());
        for (        ModuleReference extendedLanguage : language.getExtendedLanguageRefs()) {
          ((SModelInternal)createdModel).addLanguage(extendedLanguage);
        }
        for (        ModuleReference addedLanguage : ((SModelInternal)createdModel).importedLanguages()) {
          if (ScopeOperations.resolveModule(sandbox.getScope(),addedLanguage,Language.class) == null) {
            sandbox.addUsedLanguage(addedLanguage);
          }
        }
      }
      myThis.setResult(language);
    }
  }
);
}
