{
  String message=NewModuleUtil.check(MPSExtentions.DOT_LANGUAGE,myThis.getLanguageNamespace(),myThis.getLanguagePath());
  if (message != null) {
    myThis.getDialog().setError(message);
    return;
  }
  myThis.getDialog().dispose();
  NewModuleUtil.runModuleCreation(myThis.getProject().getProject(),new _FunctionTypes._void_P0_E0(){
    public void invoke(){
      Language language=NewModuleUtil.createLanguage(myThis.getLanguageNamespace(),myThis.getLanguagePath(),myThis.getProject());
      try {
        if (myThis.myNeedRuntime_hneum8_f0.isSelected()) {
          NewModuleUtil.createRuntimeSolution(language,myThis.getLanguagePath(),myThis.getProject());
        }
        if (myThis.myNeedSandbox_hneum8_g0.isSelected()) {
          NewModuleUtil.createSandboxSolution(language,myThis.getLanguagePath(),myThis.getProject());
        }
      }
 catch (      IOException e) {
        if (LOG.isEnabledFor(Priority.ERROR)) {
          LOG.error("Cannot create runtime / sandbox module",e);
        }
      }
      myThis.setResult(language);
    }
  }
);
}
