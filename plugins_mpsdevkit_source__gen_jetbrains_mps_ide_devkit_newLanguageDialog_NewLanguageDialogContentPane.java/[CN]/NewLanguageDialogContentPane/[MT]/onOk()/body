{
  File dir=new File(myThis.getLanguagePath());
  String message=NewModuleCheckUtil.checkModuleDirectory(dir,MPSExtentions.DOT_LANGUAGE,"Language");
  if (message != null) {
    myThis.getDialog().setErrorText(message);
    return;
  }
  if (myThis.getLanguageNamespace().length() == 0) {
    myThis.getDialog().setErrorText("Enter namespace");
    return;
  }
  if (MPSModuleRepository.getInstance().getModuleByUID(myThis.getLanguageNamespace()) != null) {
    myThis.getDialog().setErrorText("Language namespace already exists");
    return;
  }
  if (NameUtil.shortNameFromLongName(myThis.getLanguageNamespace()).length() == 0) {
    myThis.getDialog().setErrorText("Enter valid namespace");
    return;
  }
  myThis.getDialog().dispose();
  final Language language=null;
  Project project=myThis.getProject().getProject();
  ModelAccess.instance().runWriteActionWithProgressSynchronously(new Progressive(){
    public void run(    ProgressIndicator indicator){
      indicator.setIndeterminate(true);
    }
  }
,"Creating",false,project);
  ModelAccess.instance().runWriteActionInCommandAsync(new Runnable(){
    public void run(){
      if (!(language.getSModelRoots().isEmpty())) {
        LanguageAspect.STRUCTURE.createNew(language,false);
        LanguageAspect.EDITOR.createNew(language,false);
        LanguageAspect.CONSTRAINTS.createNew(language,false);
        LanguageAspect.TYPESYSTEM.createNew(language,false);
      }
      if (myThis.myNeedRuntime_f0.isSelected()) {
        Solution runtime=myThis.createRuntimeSolution();
        runtime.createModel(SModelFqName.fromString(myThis.getLanguageNamespace() + ".runtime"),runtime.getSModelRoots().get(0));
      }
      if (myThis.myNeedSandbox_g0.isSelected()) {
        Solution sandbox=myThis.createSandboxSolution();
        SModel createdModel=sandbox.createModel(SModelFqName.fromString(myThis.getLanguageNamespace() + ".sandbox"),sandbox.getSModelRoots().get(0)).getSModel();
        createdModel.addLanguage(myThis.getResult().getModuleReference());
        for (        Language extendedLanguage : myThis.getResult().getExtendedLanguages()) {
          createdModel.addLanguage(extendedLanguage.getModuleReference());
        }
        for (        ModuleReference addedLanguage : createdModel.importedLanguages()) {
          if (sandbox.getScope().getLanguage(addedLanguage) == null) {
            sandbox.addUsedLanguage(addedLanguage);
          }
        }
      }
    }
  }
,project);
}
