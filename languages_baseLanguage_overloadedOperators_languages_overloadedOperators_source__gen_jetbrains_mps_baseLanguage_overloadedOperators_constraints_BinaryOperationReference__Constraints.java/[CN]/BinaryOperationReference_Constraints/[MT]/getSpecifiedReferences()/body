{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0xfc8d557e5de64dd8L,0xb749aab2fb23aefcL,0x2764eda929d23eb4L,0x2764eda929d23eb5L,"binaryOperation"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xfc8d557e5de64dd8L,0xb749aab2fb23aefcL,0x2764eda929d23eb4L,0x2764eda929d23eb5L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          List<SNode> result=new ArrayList<SNode>();
          SModule sourceModule=SNodeOperations.getModel(_context.getEnclosingNode()).getModule();
          Collection<Language> langs=new GlobalModuleDependenciesManager(sourceModule).getUsedLanguages();
          for (          Language language : langs) {
            SModel sm=SModuleOperations.getAspect(language,"structure");
            ListSequence.fromList(result).addSequence(ListSequence.fromList(SModelOperations.roots(sm,MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979ba0450L,"jetbrains.mps.lang.structure.structure.ConceptDeclaration"))).where(new IWhereFilter<SNode>(){
              public boolean accept(              SNode it){
                return (boolean)AbstractConceptDeclaration__BehaviorDescriptor.isSubconceptOf_id73yVtVlWOga.invoke(it,SNodeOperations.getNode("r:00000000-0000-4000-0000-011c895902ca(jetbrains.mps.baseLanguage.structure)","1081773326031")) && !(SPropertyOperations.getBoolean(it,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0x403a32c5772c7ec2L,"abstract")));
              }
            }
));
          }
          return result;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_4xi24e_a0a1a0a0a1a0b0a1a2;
        }
      }
;
    }
  }
);
  return references;
}
