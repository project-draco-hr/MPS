{
  RulesUtil.checkAppliedCorrectly_generic(op);
  RulesUtil.checkOpParameters_generic(op);
{
    SNode _nodeToCheck_1029348928467=op;
    BaseIntentionProvider intentionProvider=null;
    TypeChecker.getInstance().getRuntimeSupport().createLessThanInequation(TypeChecker.getInstance().getRuntimeSupport().typeOf(op,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1210625778386",true),new QuotationClass_91().createNode(),_nodeToCheck_1029348928467,null,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1210625806639",false,0,intentionProvider);
  }
  SNode operand=SLinkOperations.getTarget(SNodeOperations.getParent(op),"operand",true);
{
    final SNode operandType=TypeChecker.getInstance().getRuntimeSupport().typeOf(operand,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1210625639214",false);
    TypeChecker.getInstance().getRuntimeSupport().whenConcrete(operandType,new Runnable(){
      public void run(){
{
          IMatchingPattern pattern_3=HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.bootstrap.smodelLanguage.structure.SNodeType");
          SNode coercedNode_3=TypeChecker.getInstance().getRuntimeSupport().coerce(TypeChecker.getInstance().getEquationManager().getRepresentator(operandType),pattern_3);
          if (coercedNode_3 != null) {
            if (SLinkOperations.getTarget(coercedNode_3,"concept",false) != null) {
{
                SNode _nodeToCheck_1029348928467=null;
                BaseIntentionProvider intentionProvider=null;
                TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(op,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1210625860175",true),new QuotationClass_92().createNode(SLinkOperations.getTarget(coercedNode_3,"concept",false)),_nodeToCheck_1029348928467,null,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1210625868819",intentionProvider);
              }
            }
          }
        }
      }
    }
,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1210625578392");
  }
}
