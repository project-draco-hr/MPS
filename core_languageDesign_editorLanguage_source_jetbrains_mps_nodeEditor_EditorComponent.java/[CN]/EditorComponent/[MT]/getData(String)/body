{
  if (dataId.equals(PlatformDataKeys.PROJECT.getName())) {
    IOperationContext context=getOperationContext();
    if (context == null)     return null;
    return context.getProject();
  }
 else   if (dataId.equals(MPSDataKeys.MPS_PROJECT.getName())) {
    return getOperationContext().getMPSProject();
  }
 else   if (dataId.equals(MPSDataKeys.EDITOR_CONTEXT.getName())) {
    return createEditorContextForActions();
  }
 else   if (dataId.equals(MPSDataKeys.SNODE.getName())) {
    EditorCell selectedCell=getSelectedCell();
    if (selectedCell != null) {
      return selectedCell.getSNode();
    }
 else {
      return getRootCell().getSNode();
    }
  }
 else   if (dataId.equals(MPSDataKeys.EDITOR_CELL.getName())) {
    return getSelectedCell();
  }
 else   if (dataId.equals(MPSDataKeys.SNODES.getName())) {
    return getSelectedNodes();
  }
 else   if (dataId.equals(MPSDataKeys.MODEL_DESCRIPTOR.getName())) {
    return ModelAccess.instance().runReadAction(new Computable(){
      public Object compute(){
        SModel model=getRootCell().getSNode().getModel();
        if (model == null)         return null;
        return model.getModelDescriptor();
      }
    }
);
  }
 else   if (dataId.equals(MPSDataKeys.OPERATION_CONTEXT.getName())) {
    return getOperationContext();
  }
 else   if (dataId.equals(PlatformDataKeys.CUT_PROVIDER.getName())) {
    return new MyCutProvider();
  }
 else   if (dataId.equals(PlatformDataKeys.COPY_PROVIDER.getName())) {
    return new MyCopyProvider();
  }
 else   if (dataId.equals(PlatformDataKeys.PASTE_PROVIDER.getName())) {
    return new MyPasteProvider();
  }
 else   if (dataId.equals(MPSDataKeys.EDITOR_COMPONENT.getName())) {
    return this;
  }
 else   if (dataId.equals(MPSDataKeys.MODULES.getName()) && getEditedNode() != null) {
    return Arrays.asList(getEditedNode().getModel().getModelDescriptor().getModule());
  }
 else   if (dataId.equals(MPSDataKeys.FRAME.getName())) {
    DataContext dataContext=DataManager.getInstance().getDataContext(this);
    Project project=MPSDataKeys.PROJECT.getData(dataContext);
    return WindowManager.getInstance().getFrame(project);
  }
 else   if (dataId.equals(MPSDataKeys.SCOPE.getName())) {
    return getOperationContext().getScope();
  }
 else   if (dataId.equals(MPSDataKeys.MODULE.getName())) {
    return getOperationContext().getModule();
  }
  return null;
}
