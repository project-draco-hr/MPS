{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL,0xadf0aaee45eb2895L,0x37d11ba7d7ee2dc8L,"jetbrains.mps.samples.lambdaCalculus.structure.StringConstant").getDeclarationNode();
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          String smallPattern=pattern.substring(1);
          if (smallPattern.endsWith("\"")) {
            smallPattern=smallPattern.substring(0,smallPattern.length() - 1);
          }
          SNode result=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x7c9e280794ad4afcL,0xadf0aaee45eb2895L,0x37d11ba7d7ee2dc8L,"jetbrains.mps.samples.lambdaCalculus.structure.StringConstant")),null);
          SPropertyOperations.set(result,MetaAdapterFactory.getProperty(0x7c9e280794ad4afcL,0xadf0aaee45eb2895L,0x37d11ba7d7ee2dc8L,0x37d11ba7d7ee2dc9L,"value"),smallPattern);
          return result;
        }
        public String getMatchingText(        String pattern){
          if (pattern.startsWith("\"")) {
            return pattern;
          }
          return "\"";
        }
        public String getVisibleMatchingText(        String pattern){
          return getMatchingText(pattern);
        }
      }
);
    }
  }
  return result;
}
