{
  List<DailyStockPrice> pricesToUse=retrievePricesWithin(prices);
  BigDecimal sum=ListSequence.fromList(pricesToUse).select(new ISelector<DailyStockPrice,BigDecimal>(){
    public BigDecimal select(    DailyStockPrice it){
      return it.getAdjustedClose();
    }
  }
).reduceLeft(new ILeftCombinator<BigDecimal,BigDecimal>(){
    public BigDecimal combine(    BigDecimal a,    BigDecimal b){
      return a.add(b);
    }
  }
);
  BigDecimal divided=sum.divide(BigDecimal.valueOf(ListSequence.fromList(pricesToUse).count()));
  return null;
}
