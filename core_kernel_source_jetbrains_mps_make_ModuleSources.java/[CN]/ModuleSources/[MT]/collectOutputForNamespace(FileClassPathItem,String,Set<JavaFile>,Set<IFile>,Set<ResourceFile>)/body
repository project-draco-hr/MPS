{
  Set<String> classes=item.getAvailableClasses(namespace);
  for (  String clazz : classes) {
    String clazzName=namespace + "." + clazz;
    int index=clazzName.indexOf("$");
    if (index >= 0) {
      clazzName=clazzName.substring(0,index);
    }
    JavaFile javaFile=myJavaFiles.get(clazzName);
    if (javaFile == null) {
      IFile classFile=FileSystem.getFile(item.getModelDir(namespace + "." + clazz) + MPSExtentions.DOT_CLASSFILE);
      if (!classFile.exists())       continue;
      toDelete.add(classFile);
    }
 else {
      Long classLastModified=item.getClassLastModified(namespace,clazz);
      if (classLastModified == null) {
        IFile classFile=FileSystem.getFile(item.getModelDir(namespace + "." + clazz) + MPSExtentions.DOT_CLASSFILE);
        classLastModified=classFile.lastModified();
      }
      if (isFileUpToDate(javaFile,classLastModified)) {
        toCompile.remove(javaFile);
      }
    }
  }
  Set<String> subpackages=item.getSubpackages(namespace);
  for (  String subpackage : subpackages) {
    collectOutputForNamespace(item,subpackage,toCompile,toDelete,resourcesToCopy);
  }
}
