{
  String[] files=outputDir.list();
  if (files == null)   return;
  for (  String fileName : files) {
    if (isIgnoredFileName(fileName))     continue;
    File file=new File(outputDir,fileName);
    if (fileName.endsWith(MPSExtentions.DOT_CLASSFILE)) {
      boolean isInnerClass=false;
      String containerName=fileName.substring(0,fileName.length() - MPSExtentions.DOT_CLASSFILE.length());
      int indexOfDollar=containerName.indexOf("$");
      if (indexOfDollar > 0) {
        containerName=containerName.substring(0,indexOfDollar);
        isInnerClass=true;
      }
      String fqName=toPack(addSubPath(path,containerName));
      JavaFile javaFile=myJavaFiles.get(fqName);
      if (javaFile == null) {
        myFilesToDelete.add(file);
      }
 else       if (!isInnerClass && isFileUpToDate(javaFile,file.lastModified())) {
        myFilesToCompile.remove(javaFile);
      }
      continue;
    }
    if (!file.isDirectory() && isResourceFileName(fileName)) {
      String childPath=addSubPath(path,fileName);
      ResourceFile resourceFile=myResourceFiles.get(childPath);
      if (resourceFile == null) {
        myFilesToDelete.add(file);
      }
 else       if (resourceFile.getFile().lastModified() < file.lastModified()) {
        myResourcesToCopy.remove(resourceFile);
      }
      continue;
    }
    collectOutput(file,addSubPath(path,fileName));
  }
}
