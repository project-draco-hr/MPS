{
  String classname=referenceInfo;
  int dotIndex=classname.lastIndexOf(".");
  if (dotIndex >= 0 && targetModelReference == null) {
    List<SNode> localClassifiers=ClassifiersCache.getInstance(myModel.getModelDescriptor()).getClassifiersByRefName(classname);
    if (ListSequence.fromList(localClassifiers).count() >= 1) {
      return ListSequence.fromList(localClassifiers).first();
    }
    String package_=classname.substring(0,dotIndex);
    classname=classname.substring(dotIndex + 1);
    if (classname.indexOf('$') >= 0) {
      classname=classname.replace('$','.');
    }
    return resolveClass(package_,null,classname);
  }
  if (targetModelReference == null) {
    targetModelReference=myModel.getSModelReference();
  }
  if (targetModelReference.getSModelId() != null) {
    SModelDescriptor targetModel=this.myScope.getModelDescriptor(targetModelReference);
    if (targetModel == null) {
      return null;
    }
    return ListSequence.fromList(ClassifiersCache.getInstance(targetModel).getClassifiersByRefName(classname)).first();
  }
  SModelFqName modelname=targetModelReference.getSModelFqName();
  return resolveClass(modelname.getLongName(),modelname.getStereotype(),classname);
}
