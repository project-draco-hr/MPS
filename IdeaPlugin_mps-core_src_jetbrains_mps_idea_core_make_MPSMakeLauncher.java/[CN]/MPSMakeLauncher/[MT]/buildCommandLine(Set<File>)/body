{
  List<String> commandLine=new ArrayList<String>();
  final Sdk jdk=ProjectRootManager.getInstance(myProject).getProjectSdk();
  if (jdk == null || !(jdk.getSdkType() instanceof JavaSdkType)) {
    throw new IllegalArgumentException("Project JDK not configured");
  }
  final JavaSdkType sdkType=(JavaSdkType)jdk.getSdkType();
  commandLine.add(sdkType.getVMExecutablePath(jdk));
  StringBuilder sb=new StringBuilder();
  String pathSeparator="";
  for (  File cp : classPaths) {
    sb.append(pathSeparator);
    pathSeparator=System.getProperty("path.separator");
    sb.append(cp.getAbsolutePath());
  }
  commandLine.add("-classpath");
  commandLine.add(sb.toString());
  if ("true".equalsIgnoreCase(System.getProperty("mps.make.debug"))) {
    commandLine.add("-Xdebug");
    commandLine.add("-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5006");
  }
 else   if ("true".equalsIgnoreCase(System.getProperty("mps.make.profile"))) {
    commandLine.add("-agentpath:/Applications/YourKit_Java_Profiler_10.0.5.app/bin/mac/libyjpagent.jnilib=onexit=snapshot,sampling,disableall");
  }
  commandLine.add(AntBootstrap.class.getCanonicalName());
  commandLine.add(getWorkerClass().getCanonicalName());
  try {
    File cfgFile=myMakeConfiguration.dumpToFile();
    commandLine.add(cfgFile.getAbsolutePath());
  }
 catch (  FileNotFoundException e) {
    LOG.error("Unable to write configuration",e);
    throw new Exception(e);
  }
  return commandLine;
}
