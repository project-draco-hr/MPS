{
  File mpsPluginHome=null;
  String mpsCoreRes=getResource(MPSMakeLauncher.class);
  if (mpsCoreRes.endsWith(".jar")) {
    mpsPluginHome=new File(mpsCoreRes).getParentFile().getParentFile();
  }
 else   if (mpsCoreRes.endsWith("classes")) {
    mpsPluginHome=new File(mpsCoreRes).getParentFile();
  }
  if (mpsPluginHome == null || !mpsPluginHome.exists()) {
    LOG.error("MPS plugin home not found: " + mpsPluginHome);
    throw new Exception();
  }
  String ideaJar=getResource(Project.class);
  File ideaHome=new File(ideaJar).getParentFile().getParentFile();
  if (ideaHome == null || !ideaHome.exists()) {
    LOG.error("IDEA home not found: " + ideaHome);
    throw new Exception();
  }
  File[] pathsToLook=new File[]{new File(mpsPluginHome,"lib"),new File(ideaHome,"lib")};
  Set<File> classPaths=new LinkedHashSet<File>();
  for (  File path : pathsToLook) {
    if (!(path.exists()) || (!(path.isDirectory()) && !(path.getAbsolutePath().endsWith(".jar")))) {
      throw new Exception(mpsPluginHome + " is invalid MPS home path: path " + path+ " does not exist or is not a directory or a jar file.");
    }
 else     if (!(path.isDirectory())) {
      classPaths.add(path.getAbsoluteFile());
    }
 else {
      gatherAllClassesAndJarsUnder(path,classPaths);
    }
  }
  File classes=new File(mpsPluginHome,"classes");
  if (classes.exists()) {
    classPaths.add(classes);
  }
  return classPaths;
}
