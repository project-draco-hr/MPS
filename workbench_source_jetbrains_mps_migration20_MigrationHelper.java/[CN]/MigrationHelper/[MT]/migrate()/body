{
  MigrationState msComponent=myProject.getComponent(MigrationState.class);
  MPSProject mpsProject=myProject.getComponent(MPSProject.class);
  if (msComponent.getMigrationState() == MState.INITIAL) {
    stage_1_1_invalidateCaches();
    msComponent.setMigrationState(MState.CACHES_INVALIDATED);
    ApplicationManager.getApplication().restart();
  }
  if (msComponent.getMigrationState() == MState.CACHES_INVALIDATED) {
    stage_2_1_addLanguageDesingDevKitToLanguages(mpsProject);
    stage_2_2_addGeneralPurposeDevKitToLanguageModels(mpsProject);
    stage_2_3_removeLanguageDesignDevKitFromModels(mpsProject);
    stage_2_4_removeBootstrapLanguagesDevKitFromLanguageModels(mpsProject);
    stage_2_5_fixDependenciesEverywhere(mpsProject);
    msComponent.setMigrationState(MState.LANGUAGES_DEPS_CORRECTED);
    ApplicationManager.getApplication().restart();
  }
  if (msComponent.getMigrationState() == MState.LANGUAGES_DEPS_CORRECTED) {
    stage_3_1_updateLanguageAccessories(mpsProject);
    stage_3_2_reResolveStubRefs(mpsProject);
    stage_3_3_optimizeImports(mpsProject);
    msComponent.setMigrationState(MState.STUBS_CONVERTED);
    ApplicationManager.getApplication().restart();
  }
  if (msComponent.getMigrationState() == MState.STUBS_CONVERTED) {
    stage_4_1_convertAttributes(mpsProject);
    msComponent.setMigrationState(MState.ATTRIBUTES_CONVERTED);
    ApplicationManager.getApplication().restart();
  }
  if (msComponent.getMigrationState() == MState.ATTRIBUTES_CONVERTED) {
    msComponent.setMigrationState(MState.LANGUAGES_MIGRATION);
    ApplicationManager.getApplication().restart();
  }
  if (msComponent.getMigrationState() == MState.LANGUAGES_MIGRATION) {
    msComponent.setMigrationState(MState.REGENERATION);
    ApplicationManager.getApplication().restart();
  }
  if (msComponent.getMigrationState() == MState.REGENERATION) {
    msComponent.setMigrationState(MState.DONE);
    ApplicationManager.getApplication().restart();
  }
}
