{
  ModelAccessor modelAccessor=new ModelAccessor(){
    public String getText(){
      DateTimeZone zone=DateTimeZone.forOffsetMillis(SPropertyOperations.getInteger(node,"offsetmillis"));
      return DateTimeFormat.forPattern("ZZ").print(new DateTime(zone));
    }
    public void setText(    String text){
      try {
        DateTime dt=DateTimeFormat.forPattern("Z").withOffsetParsed().parseDateTime(text);
        if (dt.withZoneRetainFields(DateTimeZone.UTC).getMillis() == 0L) {
          SPropertyOperations.set(node,"offsetmillis","" + (dt.getZone().getStandardOffset(0L)));
        }
      }
 catch (      RuntimeException ignored) {
      }
    }
    public boolean isValidText(    String text){
      try {
        DateTime dt=DateTimeFormat.forPattern("Z").withOffsetParsed().parseDateTime(text);
        if (dt.withZoneRetainFields(DateTimeZone.UTC).getMillis() == 0L) {
          return true;
        }
      }
 catch (      RuntimeException ignored) {
      }
      return false;
    }
  }
;
  EditorCell_Property editorCell=EditorCell_Property.create(editorContext,modelAccessor,node);
  editorCell.setAction(CellActionType.DELETE,new CellAction_Empty());
  editorCell.setCellId("ModelAccess_5208_15l45z2enenwi");
  editorCell.setDefaultText("");
  return editorCell;
}
