{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0x3066bc0924384300L,0xa9365bd59917ae9bL,0x565e1976381b71a0L,0x565e1976381b7654L,"to"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x3066bc0924384300L,0xa9365bd59917ae9bL,0x565e1976381b71a0L,0x565e1976381b7654L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_p94dcx_a0a0a0a0a1a0b0a1a1;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return new ListScope(SLinkOperations.getChildren(SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(0x3066bc0924384300L,0xa9365bd59917ae9bL,0x565e19763814242bL,"jetbrains.mps.samples.componentDependencies.structure.ComponentSet"),true,false),MetaAdapterFactory.getContainmentLink(0x3066bc0924384300L,0xa9365bd59917ae9bL,0x565e19763814242bL,0x565e197638146fa8L,"component"))){
            public String getName(            SNode child){
              return SPropertyOperations.getString(SNodeOperations.cast(child,MetaAdapterFactory.getConcept(0x3066bc0924384300L,0xa9365bd59917ae9bL,0x565e19763814f144L,"jetbrains.mps.samples.componentDependencies.structure.Component")),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
            }
          }
;
        }
      }
;
    }
  }
);
  return references;
}
