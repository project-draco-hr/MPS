{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case LanguageConceptSwitch.BaseIntentionDeclaration:
    return props_BaseIntentionDeclaration;
case LanguageConceptSwitch.ChildFilterBlock:
  return props_ChildFilterBlock;
case LanguageConceptSwitch.ChildFilterFunction:
return props_ChildFilterFunction;
case LanguageConceptSwitch.ConceptFunctionParameter_childNode:
return props_ConceptFunctionParameter_childNode;
case LanguageConceptSwitch.ConceptFunctionParameter_node:
return props_ConceptFunctionParameter_node;
case LanguageConceptSwitch.DescriptionBlock:
return props_DescriptionBlock;
case LanguageConceptSwitch.ErrorIntentionPriority:
return props_ErrorIntentionPriority;
case LanguageConceptSwitch.ExecuteBlock:
return props_ExecuteBlock;
case LanguageConceptSwitch.ForConceptMethodParameter:
return props_ForConceptMethodParameter;
case LanguageConceptSwitch.Intention:
return props_Intention;
case LanguageConceptSwitch.IntentionDeclaration:
return props_IntentionDeclaration;
case LanguageConceptSwitch.IntentionParameter:
return props_IntentionParameter;
case LanguageConceptSwitch.IntentionPriority:
return props_IntentionPriority;
case LanguageConceptSwitch.IsApplicableBlock:
return props_IsApplicableBlock;
case LanguageConceptSwitch.Parameter:
return props_Parameter;
case LanguageConceptSwitch.ParameterizedDescriptionBlock:
return props_ParameterizedDescriptionBlock;
case LanguageConceptSwitch.ParameterizedExecuteBlock:
return props_ParameterizedExecuteBlock;
case LanguageConceptSwitch.ParameterizedIntentionDeclaration:
return props_ParameterizedIntentionDeclaration;
case LanguageConceptSwitch.QueryBlock:
return props_QueryBlock;
case LanguageConceptSwitch.SurroundWithIntentionDeclaration:
return props_SurroundWithIntentionDeclaration;
}
return null;
}
