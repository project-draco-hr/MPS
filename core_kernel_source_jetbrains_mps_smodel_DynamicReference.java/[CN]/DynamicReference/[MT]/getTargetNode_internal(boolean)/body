{
synchronized (this) {
    if (!mature()) {
      return myImmatureTargetNode;
    }
  }
  if (getResolveInfo() == null) {
    if (!silently) {
      error("no resolve info");
    }
    return null;
  }
  SNode referenceNode=getSourceNode();
  AbstractConceptDeclaration referenceNodeConcept=referenceNode.getConceptDeclarationAdapter();
  SNode enclosingNode=getSourceNode().getParent();
  SearchScopeStatus status=ModelConstraintsUtil.getSearchScope(enclosingNode,referenceNode,referenceNodeConcept,getRole(),new GlobalOperationContext());
  if (status.isError()) {
    if (!silently) {
      error("can't obtain search scope: " + status.getMessage());
    }
    return null;
  }
  LinkDeclaration mostSpecificForRole=new ConceptAndSuperConceptsScope(referenceNodeConcept).getMostSpecificLinkDeclarationByRole(getRole());
  if (mostSpecificForRole == null) {
    if (!silently) {
      error("couldn't find link declaration '" + getRole() + "' in concept '"+ referenceNode.getConceptFqName()+ "'");
    }
    return null;
  }
  ISearchScope searchScope=status.getSearchScope();
  IReferenceInfoResolver infoResolver=searchScope.getReferenceInfoResolver(referenceNode,mostSpecificForRole.getTarget());
  if (infoResolver == null) {
    if (!silently) {
      error("can't obtain resolve info resolver: '" + getRole() + "'");
    }
    return null;
  }
  SNode targetNode=infoResolver.resolve(getResolveInfo(),getTargetSModelReference());
  if (targetNode == null) {
    if (!silently) {
      error("can't find target by resolve info: '" + getResolveInfo() + "'");
    }
  }
  return targetNode;
}
