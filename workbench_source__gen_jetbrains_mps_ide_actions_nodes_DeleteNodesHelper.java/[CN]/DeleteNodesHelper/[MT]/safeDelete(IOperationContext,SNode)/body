{
  String refactoringClass;
  if ((node == null)) {
    return;
  }
 else   if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.lang.structure.structure.ConceptDeclaration")) {
    refactoringClass="jetbrains.mps.lang.structure.refactorings.SafeDeleteConcept";
  }
 else   if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.lang.structure.structure.LinkDeclaration")) {
    refactoringClass="jetbrains.mps.lang.structure.refactorings.SafeDeleteLink";
  }
 else {
    refactoringClass="jetbrains.mps.lang.core.refactorings.SafeDelete";
  }
  final IRefactoring refactoring=RefactoringUtil.getRefactoringByClassName(refactoringClass);
  final RefactoringContext refactoringContext=new RefactoringContext(refactoring);
  refactoringContext.setCurrentOperationContext(context);
  refactoringContext.setSelectedNode(node);
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      refactoringContext.setSelectedModel(SNodeOperations.getModel(node).getModelDescriptor());
    }
  }
);
  refactoringContext.setSelectedModule(context.getModule());
  refactoringContext.setSelectedProject(context.getProject());
  new Thread(){
    public void run(){
      refactoringContext.setRefactoring(refactoring);
      new RefactoringFacade().execute(refactoringContext);
    }
  }
.start();
}
