{
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0a,descriptor.getConceptFqName())) {
case 0:
    return new FromOperation_Editor();
case 1:
  return new GenericFeature_Editor();
case 2:
return new GenericParamFeature_Editor();
case 3:
return new IterateOperation_Editor();
case 4:
return new LambdaMethod_Editor();
case 5:
return new LambdaMethodParameter_Editor();
case 6:
return new ListFeature_Editor();
case 7:
return new MatchDefaultPropertyOperation_Editor();
case 8:
return new MatchKindOperation_Editor();
case 9:
return new MatchPropertyOperation_Editor();
case 10:
return new NodeKindCase_Editor();
case 11:
return new NodeKindDefaultCase_Editor();
case 12:
return new NodeKindSpecificCase_Editor();
case 13:
return new ParamListFeature_Editor();
case 14:
return new ParamSequenceFeature_Editor();
case 15:
return new ParameterWrapper_Editor();
case 16:
return new SequenceFeature_Editor();
case 17:
return new SwitchNodeKindStatement_Editor();
case 18:
return new TreeNodeKind_Editor();
case 19:
return new TreeNodeKindOccurrence_Editor();
case 20:
return new TreeNodeKindProperty_Editor();
case 21:
return new TreeNodeKindReference_Editor();
case 22:
return new TreePathAdapterExpression_Editor();
case 23:
return new TreePathAspect_Editor();
case 24:
return new TreePathCreator_Editor();
case 25:
return new TreePathOperationExpression_Editor();
case 26:
return new TreePathType_Editor();
case 27:
return new VisitBlock_Editor();
case 28:
return new VisitChildrenExpression_Editor();
case 29:
return new VisitNodesStatement_Editor();
case 30:
return new VisitParameterDeclaration_Editor();
case 31:
return new VisitParameterDeclarationList_Editor();
case 32:
return new WhereOperation_Editor();
default :
}
return null;
}
