{
  SReference reference=mySNode.getReference(referenceLink);
  if (reference == null) {
    addLabel("<no target>");
    return;
  }
  final SNode referentNode=reference.getTargetNode();
  if (referentNode == null) {
    String resolveInfo=((jetbrains.mps.smodel.SReference)reference).getResolveInfo();
    String myErrorText=resolveInfo != null ? resolveInfo : "?" + referenceLink.getName() + "?";
    EditorCell_Error errorCell=new EditorCell_Error(myEditorContext,mySNode,myErrorText);
    errorCell.setCellId("error_" + referenceLink.getName());
    addCell(errorCell);
    return;
  }
  if (referentNode.getModel() == null) {
    LOG.error("Reference to node which is not inside model. Node: " + referentNode,referentNode);
  }
  EditorCell cell=myEditorContext.getEditorComponent().getUpdater().getCurrentUpdateSession().updateReferencedNodeCell(new Computable<EditorCell>(){
    @Override public EditorCell compute(){
      return createReferentEditorCell(myEditorContext,referenceLink,referentNode);
    }
  }
,referentNode,referenceLink.getName());
  setSemanticNodeToCells(cell,mySNode);
  cell.setCellId("reference_" + referenceLink.getName());
  addCell(cell);
}
