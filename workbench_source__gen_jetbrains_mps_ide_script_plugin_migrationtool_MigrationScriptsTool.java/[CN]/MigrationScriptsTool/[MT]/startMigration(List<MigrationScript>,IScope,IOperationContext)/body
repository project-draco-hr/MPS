{
  if (!(ThreadUtils.isEventDispatchThread())) {
    throw new IllegalStateException("Can't use this outside of EDT");
  }
  myScripts=new ArrayList<SNodePointer>();
  for (  MigrationScript scriptNode : scriptNodes) {
    myScripts.add(new SNodePointer(scriptNode));
  }
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      ProgressManager.getInstance().run(new Task.Modal(getProject(),"Searching",true){
        public void run(        @NotNull final ProgressIndicator indicator){
          indicator.setIndeterminate(true);
          final MigrationScriptFinder finder=new MigrationScriptFinder(myScripts,context);
          final IResultProvider provider=FindUtils.makeProvider(finder);
          final SearchQuery query=new SearchQuery(scope);
          final SearchResults results=FindUtils.getSearchResults(indicator,query,provider);
          SwingUtilities.invokeLater(new Runnable(){
            public void run(){
              if (results.getSearchResults().isEmpty()) {
                JOptionPane.showMessageDialog(getContentManager().getComponent(),"No applicable nodes found","Migration Scripts",JOptionPane.INFORMATION_MESSAGE);
              }
 else {
                int count=myViews.size();
                for (int i=0; i < count; i++) {
                  closeTab(0);
                }
                addTab(finder,provider,query);
                openTool(true);
              }
            }
          }
);
        }
      }
);
    }
  }
);
}
