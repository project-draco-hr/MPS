{
  if (ListSequence.fromList(nodesToMove).count() != 1) {
    throw new IllegalArgumentException();
  }
  MoveNodesUtil.NodeCopyTracker copyMap=MoveNodesUtil.NodeCopyTracker.get(refactoringSession);
  MapSequence.fromMap(copyMap.getCopyMap()).put(ListSequence.fromList(nodesToMove).first(),myTarget.resolve(myProject.getRepository()));
  for (  SNode oldNode : SetSequence.fromSet(MapSequence.fromMap(ifKeepOldNodes).keySet())) {
    if (MapSequence.fromMap(ifKeepOldNodes).get(oldNode) == RefactoringParticipant.KeepOldNodes.REMOVE) {
      SNodeOperations.detachNode(oldNode);
    }
  }
}
