{
  List<ScopePositionInfo> resultList=getInfoForPosition(file,line,new _FunctionTypes._return_P1_E0<Set<ScopePositionInfo>,DebugInfoRoot>(){
    public Set<ScopePositionInfo> invoke(    DebugInfoRoot root){
      return root.getScopePositions();
    }
  }
);
  if (ListSequence.fromList(resultList).isEmpty()) {
    return null;
  }
  Iterable<ScopePositionInfo> sorted=ListSequence.fromList(resultList).sort(new ISelector<ScopePositionInfo,Comparable<?>>(){
    public Comparable<?> select(    ScopePositionInfo it){
      return it;
    }
  }
,true);
  for (  ScopePositionInfo info : sorted) {
    SNode var=info.getVarNode(varName);
    if (var != null) {
      return var;
    }
  }
  return null;
}
