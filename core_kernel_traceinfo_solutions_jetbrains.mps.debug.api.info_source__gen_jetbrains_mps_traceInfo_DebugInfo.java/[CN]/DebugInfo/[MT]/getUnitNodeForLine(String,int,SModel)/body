{
  List<UnitPositionInfo> resultList=ListSequence.fromList(new ArrayList<UnitPositionInfo>());
  for (  UnitPositionInfo element : Sequence.fromIterable(MapSequence.fromMap(myRoots).values()).<UnitPositionInfo>translate(new ITranslator2<DebugInfoRoot,UnitPositionInfo>(){
    public Iterable<UnitPositionInfo> translate(    DebugInfoRoot it){
      return it.getUnitPositions();
    }
  }
)) {
    if (eq_exfyrk_a0a0a0c0m(element.getFileName(),file) && element.getStartLine() <= line && line <= element.getEndLine()) {
      ListSequence.fromList(resultList).addElement(element);
    }
  }
  if (ListSequence.fromList(resultList).isEmpty()) {
    return null;
  }
  Iterable<UnitPositionInfo> sorted=ListSequence.fromList(resultList).sort(new ISelector<UnitPositionInfo,Comparable<?>>(){
    public Comparable<?> select(    UnitPositionInfo it){
      return it;
    }
  }
,false);
  UnitPositionInfo firstPositionInfo=Sequence.fromIterable(sorted).first();
  String id=firstPositionInfo.getNodeId();
  if (id == null) {
    return null;
  }
  return model.getNodeById(id);
}
