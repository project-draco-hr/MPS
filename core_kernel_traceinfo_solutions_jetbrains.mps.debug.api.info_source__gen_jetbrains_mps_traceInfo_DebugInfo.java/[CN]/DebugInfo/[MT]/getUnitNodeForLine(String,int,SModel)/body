{
  List<UnitPositionInfo> resultList=getInfoForPosition(file,line,new _FunctionTypes._return_P1_E0<Set<UnitPositionInfo>,DebugInfoRoot>(){
    public Set<UnitPositionInfo> invoke(    DebugInfoRoot root){
      return root.getUnitPositions();
    }
  }
);
  if (ListSequence.fromList(resultList).isEmpty()) {
    return null;
  }
  Iterable<UnitPositionInfo> sorted=ListSequence.fromList(resultList).sort(new ISelector<UnitPositionInfo,Comparable<?>>(){
    public Comparable<?> select(    UnitPositionInfo it){
      return it;
    }
  }
,false);
  UnitPositionInfo firstPositionInfo=Sequence.fromIterable(sorted).first();
  String id=firstPositionInfo.getNodeId();
  if (id == null) {
    return null;
  }
  return model.getNodeById(id);
}
