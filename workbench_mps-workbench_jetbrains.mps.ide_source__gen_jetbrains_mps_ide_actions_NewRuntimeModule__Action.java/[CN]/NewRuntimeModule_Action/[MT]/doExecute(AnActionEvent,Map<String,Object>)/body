{
  final ModelAccess modelAccess=((MPSProject)MapSequence.fromMap(_params).get("project")).getRepository().getModelAccess();
  final Language language=(Language)((SModule)MapSequence.fromMap(_params).get("contextModule"));
  final MPSTree mpsTree=((MPSTreeNode)((TreeNode)MapSequence.fromMap(_params).get("treeNode"))).getTree();
  final BaseModuleModel baseSolutionModel=new BaseModuleModel(((MPSProject)MapSequence.fromMap(_params).get("project")),"runtime module");
  ChooseByNamePopup popup=MpsPopupFactory.createPackagePopup(((Project)MapSequence.fromMap(_params).get("ideaProject")),baseSolutionModel,NewRuntimeModule_Action.this);
  popup.invoke(new ChooseByNamePopupComponent.Callback(){
    @Override public void elementChosen(    Object p0){
      SModuleReference module=baseSolutionModel.getModelObject(p0);
      if (module == null) {
        return;
      }
      language.getModuleDescriptor().getRuntimeModules().add((ModuleReference)module);
      modelAccess.runWriteInEDT(new Runnable(){
        public void run(){
          language.save();
          mpsTree.rebuildLater();
        }
      }
);
    }
  }
,ModalityState.current(),true);
}
