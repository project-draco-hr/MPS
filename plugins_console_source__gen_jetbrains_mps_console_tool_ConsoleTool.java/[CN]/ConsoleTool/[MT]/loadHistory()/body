{
  SModel loadedModel=null;
  if (loadedState != null) {
    try {
      loadedModel=PersistenceUtil.loadModel(loadedState.state,MPSExtentions.MODEL);
    }
 catch (    Exception e) {
      if (LOG.isEnabledFor(Priority.ERROR)) {
        LOG.error("Error on loading console history. Maybe this project was opened in other MPS version?",e);
      }
    }
  }
  myRoot=SModelOperations.createNewRootNode(myModel,"jetbrains.mps.console.base.structure.ConsoleRoot",null);
  if (loadedModel == null || ListSequence.fromList(SModelOperations.getRoots(loadedModel,"jetbrains.mps.console.base.structure.ConsoleRoot")).isEmpty()) {
    if (loadedState != null) {
      if (LOG.isEnabledFor(Priority.WARN)) {
        LOG.warn("Error on loading history: invalid saved data");
      }
    }
    SLinkOperations.setTarget(myRoot,"history",SConceptOperations.createNewNode("jetbrains.mps.console.base.structure.History",null),true);
  }
 else {
    SLinkOperations.setTarget(myRoot,"history",SLinkOperations.getTarget(ListSequence.fromList(SModelOperations.getRoots(loadedModel,"jetbrains.mps.console.base.structure.ConsoleRoot")).first(),"history",true),true);
  }
  SLinkOperations.setTarget(myRoot,"commandHolder",SConceptOperations.createNewNode("jetbrains.mps.console.base.structure.CommandHolder",null),true);
  TemporaryModels.getInstance().addMissingImports(myModel);
  loadedState=null;
}
