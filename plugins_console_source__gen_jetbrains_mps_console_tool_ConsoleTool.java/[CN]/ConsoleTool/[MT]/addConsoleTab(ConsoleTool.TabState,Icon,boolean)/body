{
  String title=check_xg3v07_a0a0t(tabState);
  final Wrappers._T<Element> history=new Wrappers._T<Element>(check_xg3v07_a0b0t(check_xg3v07_a0a1a91(check_xg3v07_a0a0b0t(check_xg3v07_a0a0a1a91(tabState)))));
  if (check_xg3v07_a0c0t(tabState) != null) {
    myProject.getRepository().getModelAccess().runReadAction(new Runnable(){
      public void run(){
        history.value=PersistenceUtil.saveModelToXml(PersistenceUtil.loadBinaryModel(Base64Converter.decode(tabState.history.getBytes())));
      }
    }
);
  }
  if (icon == null) {
    icon=MPSIcons.ToolWindows.OpenTerminal_13x13;
  }
  if (title == null) {
    title="Console";
  }
  BaseConsoleTab tab;
  if (check_xg3v07_a6a91(tabState)) {
    tab=new OutputConsoleTab(myProject,this,title,history.value);
  }
 else {
    tab=new DialogConsoleTab(myProject,this,title,history.value);
  }
  ListSequence.fromList(myTabs).addElement(tab);
  addTab(tab,title,icon,new IComponentDisposer<BaseConsoleTab>(){
    public void disposeComponent(    BaseConsoleTab ct){
      ListSequence.fromList(myTabs).removeElement(ct);
    }
  }
,openTool);
  return tab;
}
