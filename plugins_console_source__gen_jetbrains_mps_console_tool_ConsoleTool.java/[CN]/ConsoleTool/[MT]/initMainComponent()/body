{
  final jetbrains.mps.project.Project project=ProjectHelper.toMPSProject(getProject());
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      ConsoleTool.this.myHistEditor=new UIEditorComponent(ProjectHelper.toMPSProject(getProject()).getRepository(),null){
        @Override public boolean isReadOnly(){
          return true;
        }
      }
;
      ConsoleTool.this.myCommandEditor=new UIEditorComponent(ProjectHelper.toMPSProject(getProject()).getRepository(),null);
      Language[] langs=new Language[]{ModuleRepositoryFacade.getInstance().getModule(PersistenceFacade.getInstance().createModuleReference("de1ad86d-6e50-4a02-b306-d4d17f64c375(jetbrains.mps.console.base)"),Language.class),ModuleRepositoryFacade.getInstance().getModule(PersistenceFacade.getInstance().createModuleReference("1a8554c4-eb84-43ba-8c34-6f0d90c6e75a(jetbrains.mps.console.blCommand)"),Language.class),ModuleRepositoryFacade.getInstance().getModule(PersistenceFacade.getInstance().createModuleReference("f3061a53-9226-4cc5-a443-f952ceaf5816(jetbrains.mps.baseLanguage)"),Language.class),ModuleRepositoryFacade.getInstance().getModule(PersistenceFacade.getInstance().createModuleReference("a5e4de53-46a3-44da-aab3-68fdf1c34ed0(jetbrains.mps.console.ideCommands)"),Language.class)};
      for (      Language l : langs) {
        ((SModelInternal)myModel).addLanguage(l.getModuleReference());
        ((AbstractModule)myModel.getModule()).addUsedLanguage(l.getModuleReference());
      }
      ConsoleTool.this.myContext=new ModuleContext(myModel.getModule(),project);
      ConsoleTool.this.myHistRoot=SModelOperations.createNewRootNode(myModel,"jetbrains.mps.console.base.structure.History",null);
      myHistEditor.editNode(myHistRoot,myContext);
      ConsoleTool.this.myCommandRoot=SModelOperations.createNewRootNode(myModel,"jetbrains.mps.console.base.structure.CommandHolder",null);
      myCommandEditor.editNode(myCommandRoot,myContext);
    }
  }
);
  DefaultActionGroup group=new DefaultActionGroup();
  group.add(registerShortcut(new ConsoleTool.ExecuteAction(project),KeyEvent.VK_ENTER,KeyEvent.CTRL_MASK));
  group.add(registerShortcut(new ConsoleTool.PrevCmdAction(),KeyEvent.VK_UP,KeyEvent.CTRL_MASK));
  group.add(registerShortcut(new ConsoleTool.NextCmdAction(),KeyEvent.VK_DOWN,KeyEvent.CTRL_MASK));
  group.add(registerShortcut(new ConsoleTool.ClearAction(),KeyEvent.VK_BACK_SPACE,KeyEvent.CTRL_MASK));
  ActionToolbar toolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,group,false);
  myMainComponent=new JPanel();
  myMainComponent.setLayout(new GridBagLayout());
  GridBagConstraints c=new GridBagConstraints(0,0,0,0,0.0,0.0,GridBagConstraints.CENTER,GridBagConstraints.NONE,new Insets(0,0,0,0),0,0);
  c.gridx=0;
  c.gridy=1;
  c.gridwidth=2;
  c.gridheight=1;
  c.weightx=1.0;
  c.weighty=0.0;
  c.anchor=GridBagConstraints.EAST;
  c.fill=GridBagConstraints.NONE;
  myMainComponent.add(createScopeComponent(),c);
  c.gridx=0;
  c.gridy=0;
  c.gridwidth=1;
  c.gridheight=1;
  c.weightx=0.0;
  c.weighty=1.0;
  c.anchor=GridBagConstraints.NORTH;
  c.fill=GridBagConstraints.VERTICAL;
  myMainComponent.add(toolbar.getComponent(),c);
  c.gridx=1;
  c.gridy=0;
  c.gridwidth=1;
  c.gridheight=1;
  c.weightx=1.0;
  c.weighty=1.0;
  c.anchor=GridBagConstraints.CENTER;
  c.fill=GridBagConstraints.BOTH;
  myMainComponent.add(createEditorsComponent(),c);
}
