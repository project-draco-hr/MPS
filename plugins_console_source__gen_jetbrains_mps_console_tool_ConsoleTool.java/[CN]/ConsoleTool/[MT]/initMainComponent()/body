{
  jetbrains.mps.project.Project project=ProjectHelper.toMPSProject(getProject());
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      if (myModel == null) {
        if (LOG.isEnabledFor(Priority.ERROR)) {
          LOG.error("Error on loading history: model does not exist");
        }
        return;
      }
      loadHistory();
      ConsoleTool.this.myHistEditor=new UIEditorComponent(ProjectHelper.toMPSProject(getProject()).getRepository(),null){
        @Override public boolean isReadOnly(){
          return true;
        }
      }
;
      myHistEditor.setFocusable(false);
      ConsoleTool.this.myCommandEditor=new UIEditorComponent(ProjectHelper.toMPSProject(getProject()).getRepository(),null){
        @Nullable @Override public Object getData(        @NonNls String key){
          if (PlatformDataKeys.FILE_EDITOR.is(key)) {
            return myCommandFileEditor;
          }
          if (PlatformDataKeys.PASTE_PROVIDER.is(key)) {
            return new ConsoleTool.MyPasteProvider((PasteProvider)super.getData(key));
          }
          return super.getData(key);
        }
      }
;
      myCommandFileEditor=new ConsoleFileEditor(myCommandEditor);
      addBuiltInImports();
      myHistEditor.editNode(myHistRoot);
      myCommandEditor.editNode(myCommandRoot);
    }
  }
);
  myMainComponent=new JPanel();
  myMainComponent.setLayout(new BorderLayout());
  myMainComponent.add(getToolbarComponent(project),BorderLayout.WEST);
  myMainComponent.add(createEditorsComponent(),BorderLayout.CENTER);
  myHighlighter=check_xg3v07_a0i0z(getProject(),this);
  myHighlighter.addAdditionalEditorComponent(myCommandEditor);
}
