{
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      SNodeReferenceTransferable paste=null;
      try {
        for (        Transferable trf : CopyPasteManagerEx.getInstanceEx().getAllContents()) {
          if (trf != null && trf.isDataFlavorSupported(SModelDataFlavor.sNodeReference)) {
            paste=(SNodeReferenceTransferable)trf.getTransferData(SModelDataFlavor.sNodeReference);
            break;
          }
        }
      }
 catch (      UnsupportedFlavorException ignored) {
      }
catch (      IOException ignored) {
      }
      EditorCell currentCell=myCommandEditor.getSelectedCell();
      if (paste != null && currentCell != null) {
        String role=currentCell.getRole();
        if (role != null) {
          SNode current=currentCell.getSNode();
          SNode parent=currentCell.getParent().getSNode();
          SNode refContainer=SConceptOperations.createNewNode("jetbrains.mps.console.blCommand.structure.NodeReference",null);
          SLinkOperations.setTarget(refContainer,"target",paste.getReference(),false);
          if (SPropertyOperations.getBoolean(SNodeOperations.getConceptDeclaration(((SNode)current)),"abstract")) {
            SNodeOperations.replaceWithAnother(((SNode)currentCell.getSNode()),refContainer);
          }
 else {
            parent.addChild(role,refContainer);
          }
        }
      }
    }
  }
);
}
