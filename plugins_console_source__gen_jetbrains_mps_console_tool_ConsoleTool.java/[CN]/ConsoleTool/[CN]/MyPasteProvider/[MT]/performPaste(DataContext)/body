{
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      SNodeReference pastingNodeReference=null;
      try {
        for (        Transferable trf : CopyPasteManagerEx.getInstanceEx().getAllContents()) {
          if (trf != null && trf.isDataFlavorSupported(SModelDataFlavor.sNodeReference)) {
            pastingNodeReference=(SNodeReference)trf.getTransferData(SModelDataFlavor.sNodeReference);
          }
          break;
        }
      }
 catch (      UnsupportedFlavorException ignored) {
      }
catch (      IOException ignored) {
      }
      EditorCell currentCell=myCommandEditor.getSelectedCell();
      if (pastingNodeReference != null && currentCell != null) {
        SNode referenceTarget=pastingNodeReference.resolve(MPSModuleRepository.getInstance());
        if (referenceTarget != null) {
          SNode refContainer=SConceptOperations.createNewNode("jetbrains.mps.console.blCommand.structure.InsertedNodeReference",null);
          SLinkOperations.setTarget(refContainer,"target",referenceTarget,false);
          NodePaster paster=new NodePaster(ListSequence.fromListAndArray(new ArrayList<SNode>(),refContainer));
          paster.paste(currentCell);
        }
      }
    }
  }
);
}
