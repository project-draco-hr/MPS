{
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      SNodeReference pastingNodeReference=null;
      try {
        for (        Transferable trf : CopyPasteManagerEx.getInstanceEx().getAllContents()) {
          if (trf != null && trf.isDataFlavorSupported(SModelDataFlavor.sNodeReference)) {
            pastingNodeReference=(SNodeReference)trf.getTransferData(SModelDataFlavor.sNodeReference);
          }
          break;
        }
      }
 catch (      UnsupportedFlavorException ignored) {
      }
catch (      IOException ignored) {
      }
      jetbrains.mps.openapi.editor.cells.EditorCell currentCell=myEditor.getSelectedCell();
      SNode referenceTarget=check_xg3v07_a0d0a0a5ic(pastingNodeReference);
      if (referenceTarget != null && currentCell != null && !(check_xg3v07_a0a4a0a0f06(check_xg3v07_a0a0e0a0a5ic(pastingNodeReference),myModel))) {
        SNode refContainer=SConceptOperations.createNewNode("jetbrains.mps.console.base.structure.PastedNodeReference",null);
        SLinkOperations.setTarget(refContainer,"target",referenceTarget,false);
        NodePaster paster=new NodePaster(ListSequence.fromListAndArray(new ArrayList<SNode>(),refContainer));
        paster.paste(currentCell);
        TemporaryModels.getInstance().addMissingImports(myModel);
      }
 else {
        myDefaultPasteProvider.performPaste(context);
      }
    }
  }
);
}
