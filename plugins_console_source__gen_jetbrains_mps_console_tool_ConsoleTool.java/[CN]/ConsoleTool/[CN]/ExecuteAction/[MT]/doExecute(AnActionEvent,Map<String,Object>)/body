{
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      myCursor=null;
      TemporaryModels.getInstance().addMissingImports(myModel);
      final SNode lastCmd=SLinkOperations.getTarget(myCommandRoot,"command",true);
      if ((lastCmd == null)) {
        return;
      }
      final SNode willBeLastHist=SNodeOperations.copyNode(myCommandRoot);
      final SNode res=_quotation_createNode_xg3v07_a0g0a0a2cc();
      final SearchScope scope=(myScopeCombo.getSelectedItem() == ConsoleTool.PROJECT_SCOPE ? new ProjectScope(myProject) : GlobalScope.getInstance());
      BehaviorReflection.invokeVirtual(Void.class,SNodeOperations.cast(lastCmd,"jetbrains.mps.console.base.structure.Command"),"virtual_execute_757553790980855637",new Object[]{new ConsoleContext(){
        public jetbrains.mps.project.Project getProject(){
          return myProject;
        }
        public SearchScope getScope(){
          return scope;
        }
      }
,new ConsoleStream(){
        public void addText(        String text){
          checkResultAvailable();
          ListSequence.fromList(SLinkOperations.getTargets(ListSequence.fromList(SLinkOperations.getTargets(res,"line",true)).last(),"part",true)).addElement(_quotation_createNode_xg3v07_a0a1a0a0b0a8a0a0c45(text));
        }
        public void addNode(        SNode node){
          checkResultAvailable();
          SLinkOperations.setTarget(SLinkOperations.addNewChild(ListSequence.fromList(SLinkOperations.getTargets(res,"line",true)).last(),"part","jetbrains.mps.console.base.structure.NodeResultPart"),"target",((SNode)node),false);
        }
        public void addAction(        Runnable action){
          checkResultAvailable();
          int id=closureCounter.incrementAndGet();
          closureMap.put(id,action);
          SPropertyOperations.set(SLinkOperations.addNewChild(ListSequence.fromList(SLinkOperations.getTargets(res,"line",true)).last(),"part","jetbrains.mps.console.base.structure.ActionsResultPart"),"closureId","" + (id));
        }
        public void addNewLine(){
          checkResultAvailable();
          SLinkOperations.addNewChild(res,"line","jetbrains.mps.console.base.structure.CommandResultLine");
        }
        private void checkResultAvailable(){
          if ((SNodeOperations.getNextSibling(willBeLastHist) == null)) {
            SNodeOperations.insertNextSiblingChild(willBeLastHist,res);
          }
        }
      }
,new Runnable(){
        public void run(){
          ListSequence.fromList(SLinkOperations.getTargets(myHistRoot,"item",true)).addElement(willBeLastHist);
          SLinkOperations.setTarget(myCommandRoot,"command",null,true);
          myCursor=null;
          myNewCommand=null;
        }
      }
});
    }
  }
);
}
