{
  ModelAccess.instance().runWriteActionInCommand(new Runnable(){
    public void run(){
      myCursor=null;
      TemporaryModels.getInstance().addMissingModuleImports(myModel);
      final SNode lastCmd=ListSequence.fromList(SLinkOperations.getTargets(myRoot,"item",true)).last();
      if (!(SNodeOperations.isInstanceOf(lastCmd,"jetbrains.mps.console.base.structure.Command"))) {
        return;
      }
      final SNode res=_quotation_createNode_xg3v07_a0f0a0a2nb();
      BehaviorReflection.invokeVirtual(Void.class,SNodeOperations.cast(lastCmd,"jetbrains.mps.console.base.structure.Command"),"virtual_execute_757553790980855637",new Object[]{ExecuteAction.this.myProject,new ConsoleStream(){
        public void addText(        String text){
          checkResultAvailable();
          ListSequence.fromList(SLinkOperations.getTargets(ListSequence.fromList(SLinkOperations.getTargets(res,"line",true)).last(),"part",true)).addElement(_quotation_createNode_xg3v07_a0a1a0a0b0a6a0a0c93(text));
        }
        public void addNode(        SNode node){
          checkResultAvailable();
          SLinkOperations.setTarget(SLinkOperations.addNewChild(ListSequence.fromList(SLinkOperations.getTargets(res,"line",true)).last(),"part","jetbrains.mps.console.base.structure.NodeResultPart"),"target",node,false);
        }
        public void addNewLine(){
          checkResultAvailable();
          SLinkOperations.addNewChild(res,"line","jetbrains.mps.console.base.structure.CommandResultLine");
        }
        private void checkResultAvailable(){
          if ((SNodeOperations.getNextSibling(lastCmd) == null)) {
            SNodeOperations.insertNextSiblingChild(lastCmd,res);
          }
        }
      }
});
    }
  }
);
}
