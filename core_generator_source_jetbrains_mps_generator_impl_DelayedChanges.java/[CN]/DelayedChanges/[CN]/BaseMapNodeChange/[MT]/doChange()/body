{
  try {
    SNode child=mapNode();
    if (child == null) {
      return;
    }
    SNode templateNode=getMapSrcMacro();
    child=new TemplateExecutionEnvironmentImpl(myGenerator,myExecContext).insertNode(child,templateNode == null ? null : templateNode.getReference(),myContext);
    SNode parent=myChildToReplace.getParent();
    if (parent == null) {
      if (myChildToReplace.getModel() != null && myChildToReplace.getParent() == null) {
        myChildToReplace.getModel().addRootNode(child);
        myChildToReplace.getModel().removeRootNode(myChildToReplace);
        myGenerator.rootReplaced(myChildToReplace,child);
      }
    }
 else {
      String childRole=myChildToReplace.getRoleInParent();
      final RoleValidator roleValidator=myGenerator.getChildRoleValidator(parent,childRole);
      RoleValidationStatus status=roleValidator.validate(child);
      if (status != null) {
        status.reportProblem(false,parent,"",GeneratorUtil.describe(myContext.getInput(),"input"),GeneratorUtil.describe(getMapSrcMacro(),"template"));
      }
      org.jetbrains.mps.openapi.model.SNodeUtil.replaceWithAnother(myChildToReplace,child);
    }
    myGenerator.getGenerationTracer().replaceOutputNode(myChildToReplace,child);
    postProcess(child);
  }
 catch (  Throwable t) {
    myGenerator.showErrorMessage(myContext.getInput(),getMapSrcMacro(),"mapping failed: '" + t.getMessage() + "'");
    myLogger.handleException(t);
  }
}
