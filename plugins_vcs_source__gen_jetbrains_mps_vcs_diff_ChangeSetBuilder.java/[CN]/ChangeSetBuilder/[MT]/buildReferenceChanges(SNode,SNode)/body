{
  final Map<String,SReference> oldReferences=MapSequence.fromMap(new HashMap<String,SReference>());
  final Map<String,SReference> newReferences=MapSequence.fromMap(new HashMap<String,SReference>());
  Sequence.fromIterable(SNodeOperations.getReferences(oldNode)).visitAll(new IVisitor<SReference>(){
    public void visit(    SReference ref){
      MapSequence.fromMap(oldReferences).put(SLinkOperations.getRole(ref),ref);
    }
  }
);
  Sequence.fromIterable(SNodeOperations.getReferences(newNode)).visitAll(new IVisitor<SReference>(){
    public void visit(    SReference ref){
      MapSequence.fromMap(newReferences).put(SLinkOperations.getRole(ref),ref);
    }
  }
);
  for (  String role : SetSequence.fromSet(MapSequence.fromMap(oldReferences).keySet()).union(SetSequence.fromSet(MapSequence.fromMap(newReferences).keySet()))) {
    SReference oldReference=MapSequence.fromMap(oldReferences).get(role);
    SReference newReference=MapSequence.fromMap(newReferences).get(role);
    SNodeId oldTargetId=(oldReference instanceof DynamicReference ? null : check_nbyrtw_a0a2a4a1(oldReference));
    SNodeId newTargetId=(newReference instanceof DynamicReference ? null : check_nbyrtw_a0a3a4a1(newReference));
    SModelReference oldTargetModel=check_nbyrtw_a0e0e0b(oldReference);
    if (SNodeOperations.getModel(oldNode).getSModelReference().equals(oldTargetModel)) {
      oldTargetModel=null;
    }
    SModelReference newTargetModel=check_nbyrtw_a0g0e0b(newReference);
    if (SNodeOperations.getModel(newNode).getSModelReference().equals(newTargetModel)) {
      newTargetModel=null;
    }
    if (eq_nbyrtw_a0a0i0e0b(oldTargetId,newTargetId) && eq_nbyrtw_a0a0i0e0b_0(oldTargetModel,newTargetModel) && eq_nbyrtw_a0a8a4a1(check_nbyrtw_a0a8a4a1(oldReference),check_nbyrtw_a0a8a4a1_0(newReference))) {
    }
 else {
      myChangeSet.add(new SetReferenceChange(myChangeSet,oldNode.getSNodeId(),role,newTargetModel,newTargetId,check_nbyrtw_f0a0a0a0i0e0b(newReference)));
    }
  }
}
