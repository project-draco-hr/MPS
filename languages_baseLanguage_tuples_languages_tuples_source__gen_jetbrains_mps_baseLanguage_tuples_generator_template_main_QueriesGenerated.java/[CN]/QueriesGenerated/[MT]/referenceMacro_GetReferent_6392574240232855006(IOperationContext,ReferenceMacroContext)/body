{
  List<SNode> ifcs=SModelOperations.getNodes(SNodeOperations.getModel(SLinkOperations.getTarget(_quotation_createNode_x583g4_a0a0a0a311(),"classifier",false)),"jetbrains.mps.baseLanguage.structure.Interface");
  int idx=1 + SNodeOperations.getIndexInParent(_context.getNode()) + ListSequence.fromList(NamedTupleDeclaration_Behavior.call_allExtends_3142843783245461132(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()),"jetbrains.mps.baseLanguage.tuples.structure.NamedTupleDeclaration"),"extended",true),"classifier",false))).foldLeft(0,new ILeftCombinator<SNode,Integer>(){
    public Integer combine(    Integer s,    SNode ntd){
      return s + ListSequence.fromList(SLinkOperations.getTargets(ntd,"component",true)).count();
    }
  }
);
  for (  SNode ifc : ifcs) {
    if (SPropertyOperations.getString(ifc,"nestedName").equals("Tuples._" + idx)) {
      return ifc;
    }
  }
  return null;
}
