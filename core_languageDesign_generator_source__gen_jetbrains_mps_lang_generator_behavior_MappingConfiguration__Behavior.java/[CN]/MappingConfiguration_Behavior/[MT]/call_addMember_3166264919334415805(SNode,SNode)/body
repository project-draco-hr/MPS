{
  if ((SLinkOperations.getTarget(newMember,AttributesRolesUtil.childRoleFromAttributeRole("rootTemplateAnnotation"),true) != null)) {
    SNode ruleNode=SLinkOperations.addNewChild(thisNode,"rootMappingRule","jetbrains.mps.lang.generator.structure.Root_MappingRule");
    SLinkOperations.setTarget(ruleNode,"applicableConcept",SLinkOperations.getTarget(SLinkOperations.getTarget(newMember,AttributesRolesUtil.childRoleFromAttributeRole("rootTemplateAnnotation"),true),"applicableConcept",false),false);
    SLinkOperations.setTarget(ruleNode,"template",SNodeOperations.cast(newMember,"jetbrains.mps.lang.core.structure.INamedConcept"),false);
  }
 else   if (SNodeOperations.isInstanceOf(newMember,"jetbrains.mps.lang.generator.structure.TemplateDeclaration")) {
    SNode mappingRule=SLinkOperations.addNewChild(thisNode,"reductionMappingRule","jetbrains.mps.lang.generator.structure.Reduction_MappingRule");
    SLinkOperations.setTarget(mappingRule,"applicableConcept",SLinkOperations.getTarget(SNodeOperations.cast(newMember,"jetbrains.mps.lang.generator.structure.TemplateDeclaration"),"applicableConcept",false),false);
    SNode templateRef=SConceptOperations.createNewNode("jetbrains.mps.lang.generator.structure.TemplateDeclarationReference",null);
    SLinkOperations.setTarget(templateRef,"template",SNodeOperations.cast(newMember,"jetbrains.mps.lang.generator.structure.TemplateDeclaration"),false);
    SLinkOperations.setTarget(mappingRule,"ruleConsequence",templateRef,true);
  }
}
