{
  List<SNode> result=new ArrayList<SNode>();
  for (  LanguageAspect aspect : LanguageAspect.values()) {
    ListSequence.fromList(result).addElement(AbstractConceptDeclaration_Behavior.call_findConceptAspect_8360039740498068384(thisNode,aspect));
  }
  ListSequence.fromList(result).addSequence(ListSequence.fromList(AbstractConceptDeclaration_Behavior.call_findGeneratorFragments_6409339300305625383(thisNode)).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.getContainingRoot(it);
    }
  }
).distinct());
  while (ListSequence.fromList(result).contains(null)) {
    ListSequence.fromList(result).removeElement(null);
  }
  return result;
}
