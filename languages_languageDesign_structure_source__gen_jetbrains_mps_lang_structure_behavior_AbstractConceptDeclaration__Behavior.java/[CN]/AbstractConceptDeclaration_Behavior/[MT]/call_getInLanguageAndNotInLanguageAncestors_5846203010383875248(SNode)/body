{
  Set<SNode> inLanguageAncestors=SetSequence.fromSet(new HashSet<SNode>());
  Set<SNode> notInLanguageAncestors=SetSequence.fromSet(new HashSet<SNode>());
  for (  SNode superconcept : AbstractConceptDeclaration__BehaviorDescriptor.getImmediateSuperconcepts_idhMuxyK2.invoke(__thisNode__)) {
    if ((superconcept != null)) {
      if (SNodeOperations.getModel(superconcept) == SNodeOperations.getModel(__thisNode__)) {
        Pair<Set<SNode>,Set<SNode>> superconceptResult=AbstractConceptDeclaration__BehaviorDescriptor.getInLanguageAndNotInLanguageAncestors_id54xSEBmK0MK.invoke(superconcept);
        SetSequence.fromSet(inLanguageAncestors).addElement(superconcept);
        SetSequence.fromSet(inLanguageAncestors).addSequence(SetSequence.fromSet(superconceptResult.o1));
        SetSequence.fromSet(notInLanguageAncestors).addSequence(SetSequence.fromSet(superconceptResult.o2));
      }
 else {
        SetSequence.fromSet(notInLanguageAncestors).addElement(superconcept);
      }
    }
  }
  return new Pair(inLanguageAncestors,notInLanguageAncestors);
}
