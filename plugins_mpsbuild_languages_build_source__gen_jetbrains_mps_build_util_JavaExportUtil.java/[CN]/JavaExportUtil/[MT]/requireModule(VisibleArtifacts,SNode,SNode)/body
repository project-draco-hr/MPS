{
  if (SNodeOperations.getContainingRoot(module) == SNodeOperations.getContainingRoot(contextNode)) {
    return null;
  }
  SNode target=SNodeOperations.as(artifacts.toOriginalNode(module),"jetbrains.mps.build.structure.BuildSource_JavaModule");
  JavaModulesClosure closure=new JavaModulesClosure(artifacts.getGenContext(),target).closure(true);
  Iterable<SNode> required=Sequence.fromIterable(((Iterable<SNode>)closure.getModules())).concat(Sequence.fromIterable(((Iterable<SNode>)closure.getLibraries()))).concat(Sequence.fromIterable(((Iterable<SNode>)closure.getJars())).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SLinkOperations.getTarget(it,"path",true);
    }
  }
)).concat(Sequence.fromIterable(Sequence.<SNode>singleton(target)));
  List<SNode> result=new ArrayList<SNode>();
  for (  SNode n : Sequence.fromIterable(required)) {
    if (SNodeOperations.getContainingRoot(n) == SNodeOperations.getContainingRoot(contextNode)) {
      continue;
    }
    SNode artifact=SNodeOperations.as(artifacts.findArtifact(n),"jetbrains.mps.build.structure.BuildLayout_Node");
    if (artifact != null) {
      ListSequence.fromList(result).addElement(artifact);
    }
  }
  if (ListSequence.fromList(result).isNotEmpty()) {
    artifacts.needsFetch(contextNode);
    return result;
  }
  return null;
}
