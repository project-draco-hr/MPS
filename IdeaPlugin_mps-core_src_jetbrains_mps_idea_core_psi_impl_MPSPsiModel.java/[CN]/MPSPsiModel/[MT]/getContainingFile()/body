{
  final SRepository repository=getProjectRepository();
  return new ModelAccessHelper(repository.getModelAccess()).runReadAction(new Computable<PsiFile>(){
    @Override public PsiFile compute(){
      SModel model=myModelReference.resolve(repository);
      if (model.getSource() instanceof FileDataSource) {
        IFile iModelFile=((FileDataSource)model.getSource()).getFile();
        VirtualFile vModelFile=VirtualFileUtils.getVirtualFile(iModelFile);
        if (vModelFile == null) {
          LOG.warn("getContainingFile() -- could not get virtual file by IFile (" + iModelFile + ")");
          return null;
        }
        return PsiManager.getInstance(getProject()).findFile(vModelFile);
      }
 else {
        return null;
      }
    }
  }
);
}
