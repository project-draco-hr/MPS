{
  this.addNodeById("1230052684510");
  this.addNodeById("1230052684520");
  this.addNodeById("1230052684528");
  this.addNodeById("1230052684538");
  SLinkOperations.setTarget(SNodeOperations.cast(this.getNodeById("1230052684533"),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbbebabf09L,"jetbrains.mps.baseLanguage.structure.StaticMethodCall")),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbbebabf09L,0x10a7588b546L,"classConcept"),SNodeOperations.cast(this.getNodeById("1230052684539"),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")));
  SLinkOperations.setTarget(SNodeOperations.cast(this.getNodeById("1230052684533"),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbbebabf09L,"jetbrains.mps.baseLanguage.structure.StaticMethodCall")),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration"),SNodeOperations.cast(this.getNodeById("1230052684540"),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbbebabf0aL,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration")));
  ExtractMethodRefactoringParameters params=ExtractMethodFactory.createParameters(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230052684515"),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf93d565d10L,"jetbrains.mps.baseLanguage.structure.StringLiteral"))));
  params.setName("foo");
  params.setVisibilityLevel(VisibilityLevel.PUBLIC);
  ExtractMethodRefactoring ref=ExtractMethodFactory.createRefactoring(params);
  ref.setStaticContainer(SNodeOperations.cast(this.getNodeById("1230052684521"),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")));
  ref.doRefactor();
{
    List<SNode> nodesBefore=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230052684511"),MetaAdapterFactory.getConcept(0xd7a92d38f7db40d0L,0x8431763b0c3c9f20L,0x115b81b652bL,"jetbrains.mps.lang.intentions.structure.IntentionDeclaration")),SNodeOperations.cast(this.getNodeById("1230052684521"),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")));
    List<SNode> nodesAfter=ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230052684529"),MetaAdapterFactory.getConcept(0xd7a92d38f7db40d0L,0x8431763b0c3c9f20L,0x115b81b652bL,"jetbrains.mps.lang.intentions.structure.IntentionDeclaration")),SNodeOperations.cast(this.getNodeById("1230052684539"),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept")));
    Assert.assertNull("nodes '" + nodesBefore + "' and '"+ nodesAfter+ "' do not match!",NodesMatcher.matchNodes(nodesBefore,nodesAfter));
  }
}
