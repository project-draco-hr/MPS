{
  Collection<IModule> modules=new GlobalModuleDependenciesManager(myStart).getModules(Deptype.COMPILE);
  Set<IModule> fromGenerators=new HashSet<IModule>();
  for (  IModule m : modules) {
    if (!(m instanceof Language))     continue;
    for (    Generator generator : ((Language)m).getGenerators()) {
      if (modules.contains(generator))       continue;
      fromGenerators.addAll(new GlobalModuleDependenciesManager(generator).getModules(Deptype.COMPILE));
    }
  }
  modules.addAll(fromGenerators);
  for (  IModule module : modules) {
    addPart(module.getClassPathItem());
  }
  CompositeClassPathItem result=new CompositeClassPathItem();
  if (includeStubSolutions) {
    result.add(CommonPaths.getJDKClassPath());
    result.add(CommonPaths.getMPSClassPath());
    for (    String s : CommonPaths.getMPSPaths(ClasspathReader.ClassType.TEST)) {
      try {
        result.add(ClassPathFactory.getInstance().createFromPath(s,null));
      }
 catch (      IOException e) {
      }
    }
  }
  for (  IClassPathItem item : myResult) {
    result.add(item);
  }
  return result.optimize();
}
