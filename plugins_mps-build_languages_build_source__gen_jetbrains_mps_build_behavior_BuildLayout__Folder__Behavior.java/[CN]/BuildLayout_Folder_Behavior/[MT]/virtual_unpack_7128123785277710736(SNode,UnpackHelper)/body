{
  SNode parent=helper.parent(thisNode);
  String parentLocation=helper.contentLocations().get(parent);
  String folderLocation=parentLocation + "/" + BuildString_Behavior.call_getText_4380385936562005550(SLinkOperations.getTarget(thisNode,"containerName",true),helper.getMacroHelper());
  helper.locations().put(thisNode,folderLocation);
  helper.contentLocations().put(thisNode,folderLocation);
  for (  SNode ic : ListSequence.fromList(SLinkOperations.getTargets(thisNode,"children",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.structure.BuildLayout_ImportContent");
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(it,"jetbrains.mps.build.structure.BuildLayout_ImportContent");
    }
  }
)) {
    SNode node=SNodeOperations.as(SLinkOperations.getTarget(ic,"target",false),"jetbrains.mps.build.structure.BuildLayout_PathElement");
    if ((node != null)) {
      if (!(helper.locations().containsKey(node))) {
        helper.locations().put(node,folderLocation);
      }
      if (!(helper.contentLocations().containsKey(node))) {
        helper.contentLocations().put(node,folderLocation);
      }
    }
  }
}
