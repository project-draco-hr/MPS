{
  List<String> result=new ArrayList<String>();
  for (  SModelReference outputModel : genHandler.getOutputModelRefs()) {
    List<String> files=new ArrayList<String>();
    File dir=genHandler.getOutputDir(outputModel);
    if (dir == null || !dir.exists() || !dir.canRead()) {
      continue;
    }
    files.addAll(Arrays.asList(dir.list()));
    for (    String outputRoot : genHandler.getRoots(outputModel)) {
      String extension=genHandler.getExtension(outputRoot);
      String filename=(extension == null) ? genHandler.getName(outputRoot,outputModel) : genHandler.getName(outputRoot,outputModel) + "." + extension;
      if (filename == null) {
        continue;
      }
      final String filePath=genHandler.getOutputDir(outputModel) + File.separator + filename;
      final File testFile=new File(filePath);
      String oldContent=null;
      String newContent=genHandler.getSourceByNode(outputRoot,outputModel);
      if (testFile.exists() && testFile.canRead()) {
        oldContent=FileUtil.read(testFile);
        files.remove(filename);
      }
      final boolean created=oldContent == null && newContent != null;
      final String title=getDiffReportTitle(outputRoot,filePath,created,false);
      String[] oldTest=getContentAsArray(oldContent,"\n");
      String[] newTest=getContentAsArray(newContent,System.getProperty("line.separator"));
      addDiffReport(new TestComparator(oldTest,newTest),result,title);
    }
    for (    String fileName : files) {
      int dotPosition=fileName.indexOf(".");
      if (dotPosition == 0 || dotPosition == -1) {
        continue;
      }
      String title=getDiffReportTitle((SNode)null,fileName,false,true);
      File file=new File(genHandler.getOutputDir(outputModel) + File.separator + fileName);
      if (!file.exists() || !file.canRead() || !file.isFile()) {
        continue;
      }
      String[] test=FileUtil.read(file).split("\n");
      addDiffReport(new TestComparator(test,new String[0]),result,title);
    }
  }
  return result;
}
