{
  invokeTest(new _FunctionTypes._void_P0_E0(){
    public void invoke(){
      SNode statement=Sequence.fromIterable(BehaviorReflection.invokeNonVirtual((Class<Iterable<SNode>>)((Class)Object.class),SNodeOperations.getNode("r:fc539459-610a-408b-8472-ac3a7316412f(jetbrains.mps.traceInfo.test@tests)","8529179251482782650"),"jetbrains.mps.baseLanguage.structure.Classifier","call_methods_5292274854859311639",new Object[]{})).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SPropertyOperations.getString(it,"name").equals("internalClassTest");
        }
      }
).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return (SLinkOperations.getTarget(it,"body",true) != null);
        }
      }
).select(new ISelector<SNode,SNode>(){
        public SNode select(        SNode it){
          return SLinkOperations.getTarget(it,"body",true);
        }
      }
).translate(new ITranslator2<SNode,SNode>(){
        public Iterable<SNode> translate(        SNode it){
          return SLinkOperations.getTargets(it,"statement",true);
        }
      }
).first();
      BreakpointLocation location=new BreakpointLocation(statement);
      Assert.assertEquals("jetbrains.mps.traceInfo.test.TestClass",location.getTargetUnitName());
    }
  }
);
}
