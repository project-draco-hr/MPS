{
  if (!(projectFile.exists())) {
    throw new RuntimeException("Can't find project file " + projectFile.getAbsolutePath());
  }
  final ProjectManagerEx projectManager=ProjectManagerEx.getInstanceEx();
  final String filePath=projectFile.getAbsolutePath();
  final IdeaEnvironment.PostStartupActivitiesWaiter waiter=new IdeaEnvironment.PostStartupActivitiesWaiter();
  final Reference<com.intellij.openapi.project.Project> project=new Reference<com.intellij.openapi.project.Project>();
  final Reference<Exception> exc=new Reference<Exception>();
  ApplicationManager.getApplication().invokeAndWait(new Runnable(){
    public void run(){
      try {
        if (LOG.isInfoEnabled()) {
          LOG.info("Load and open the project with path '" + filePath + "'");
        }
        project.set(projectManager.loadAndOpenProject(filePath));
        waiter.init(project.get());
        VirtualFileManager.getInstance().syncRefresh();
      }
 catch (      Exception e) {
        exc.set(e);
      }
    }
  }
,ModalityState.NON_MODAL);
  if (!(exc.isNull())) {
    throw new RuntimeException("ProjectManager could not load project from " + projectFile.getAbsolutePath(),exc.get());
  }
  waiter.wait0();
  return project.get().getComponent(MPSProject.class);
}
