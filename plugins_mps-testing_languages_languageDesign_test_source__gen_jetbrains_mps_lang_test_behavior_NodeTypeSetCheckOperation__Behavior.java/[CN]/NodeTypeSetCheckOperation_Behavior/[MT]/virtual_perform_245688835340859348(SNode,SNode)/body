{
  try {
    final SNode operation=thisNode;
    NodeCheckerUtil.checkNodeWithCheckingAction(node,new NodeCheckerUtil.CheckingAction(operation){
      public void checkOperation(      TypeCheckingContext context){
        if (SNodeOperations.isInstanceOf(operation,"jetbrains.mps.lang.test.structure.NodeTypeSetCheckOperation")) {
          SNode type1=context.getTypeDontCheck(getNodeToCheck());
          boolean hasType=false;
          for (          SNode type2 : (SLinkOperations.getTargets(SNodeOperations.cast(operation,"jetbrains.mps.lang.test.structure.NodeTypeSetCheckOperation"),"type",true))) {
            if (MatchingUtil.matchNodes(type1,type2)) {
              hasType=true;
              break;
            }
          }
          Assert.assertTrue("node type <" + NodeCheckerUtil.nodeWithIdToString(type1) + "> is not in <"+ SLinkOperations.getTargets(SNodeOperations.cast(operation,"jetbrains.mps.lang.test.structure.NodeTypeSetCheckOperation"),"type",true)+ ">",hasType);
        }
      }
    }
);
  }
 catch (  Exception ex) {
    ex.printStackTrace();
  }
}
