{
  Map<SNode,SNode> mapping=MapSequence.<SNode,SNode>fromMap(new HashMap<SNode,SNode>());
  for (  SNode node : ListSequence.<SNode>fromList(nodes)) {
    for (    SNode reference : ListSequence.<SNode>fromList(SNodeOperations.getDescendants(node,"jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{}))) {
      if (MoveRefactoringUtils.isReference(reference)) {
        SNode target=Sequence.<SReference>fromIterable(SNodeOperations.getReferences(reference)).first().getTargetNode();
        if (MapSequence.fromMap(variableDeclarationToParameter).containsKey(target)) {
          MapSequence.<SNode,SNode>fromMap(mapping).put(reference,MapSequence.<SNode,SNode>fromMap(variableDeclarationToParameter).get(target));
        }
      }
    }
    for (    SNode parameter : ListSequence.<SNode>fromList(SNodeOperations.getDescendants(node,"jetbrains.mps.baseLanguage.structure.IParameter",false,new String[]{}))) {
      SNode declaration=IParameter_Behavior.call_getDeclaration_1225282371351(parameter);
      if (MapSequence.fromMap(variableDeclarationToParameter).containsKey(declaration)) {
        MapSequence.<SNode,SNode>fromMap(mapping).put(parameter,MapSequence.<SNode,SNode>fromMap(variableDeclarationToParameter).get(declaration));
      }
    }
  }
  return mapping;
}
