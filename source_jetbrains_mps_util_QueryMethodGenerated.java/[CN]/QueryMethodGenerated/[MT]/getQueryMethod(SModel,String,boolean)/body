{
  Pair<SModelUID,String> pair=new Pair<SModelUID,String>(sourceModel.getUID(),methodName);
  if (QueryMethodGenerated.ourMethods.containsKey(pair)) {
    return QueryMethodGenerated.ourMethods.get(pair);
  }
  String packageName=JavaNameUtil.packageNameForModelUID(sourceModel.getUID());
  String queriesClassName=packageName + ".QueriesGenerated";
  Class queriesClass=null;
  try {
    queriesClass=Class.forName(queriesClassName,true,ClassLoaderManager.getInstance().getClassLoader());
  }
 catch (  ClassNotFoundException e) {
    throw new RuntimeException(e);
  }
 finally {
    if (queriesClass == null) {
      if (!suppressErrorLogging) {
        QueryMethodGenerated.LOG.error("Couldn't find QueriesGenerated class for model " + sourceModel.getUID());
      }
    }
  }
  Method method=null;
  outer:   while (queriesClass != null) {
    Method[] declaredMethods=queriesClass.getDeclaredMethods();
    for (    Method declaredMethod : declaredMethods) {
      if (declaredMethod.getName().equals(methodName)) {
        method=declaredMethod;
        break outer;
      }
    }
    queriesClass=queriesClass.getSuperclass();
  }
  if (method == null) {
    throw new RuntimeException("Couldn't find method \"" + methodName + "\" in "+ queriesClassName+ " or in its supers");
  }
  QueryMethodGenerated.ourMethods.put(pair,method);
  return method;
}
