{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0x97a52717898f4598L,0x8150573d9fd03868L,0x449938e788f30110L,0x449938e788f30111L,"applicableNode"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x97a52717898f4598L,0x8150573d9fd03868L,0x449938e788f30110L,0x449938e788f30111L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          List<SNode> result=new ArrayList<SNode>();
          SNode rule=SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(0x97a52717898f4598L,0x8150573d9fd03868L,0x5faaa6bbd57b6c8L,"jetbrains.mps.lang.dataFlow.analyzers.structure.Rule"),true,false);
          if (rule != null && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(rule,MetaAdapterFactory.getContainmentLink(0x97a52717898f4598L,0x8150573d9fd03868L,0x5faaa6bbd57b6c8L,0x2e25b6b7919dd956L,"condition")),MetaAdapterFactory.getConcept(0x97a52717898f4598L,0x8150573d9fd03868L,0x449938e788e9b9deL,"jetbrains.mps.lang.dataFlow.analyzers.structure.ConceptCondition"))) {
            ListSequence.fromList(result).addElement(SNodeOperations.cast(SLinkOperations.getTarget(rule,MetaAdapterFactory.getContainmentLink(0x97a52717898f4598L,0x8150573d9fd03868L,0x5faaa6bbd57b6c8L,0x2e25b6b7919dd956L,"condition")),MetaAdapterFactory.getConcept(0x97a52717898f4598L,0x8150573d9fd03868L,0x449938e788e9b9deL,"jetbrains.mps.lang.dataFlow.analyzers.structure.ConceptCondition")));
          }
          return result;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_b5wqlc_a0a1a0a0a1a0b0a1a2;
        }
      }
;
    }
  }
);
  return references;
}
