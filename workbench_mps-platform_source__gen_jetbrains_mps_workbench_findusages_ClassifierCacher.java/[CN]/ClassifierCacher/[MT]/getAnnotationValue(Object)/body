{
  if (value instanceof Integer) {
    instance("jetbrains.mps.baseLanguage.structure.IntegerConstant");
  }
 else   if (value instanceof Byte) {
    instance("jetbrains.mps.baseLanguage.structure.IntegerConstant");
  }
 else   if (value instanceof Short) {
    instance("jetbrains.mps.baseLanguage.structure.IntegerConstant");
  }
 else   if (value instanceof Boolean) {
    instance("jetbrains.mps.baseLanguage.structure.BooleanConstant");
  }
 else   if (value instanceof Character) {
    instance("jetbrains.mps.baseLanguage.structure.CharConstant");
  }
 else   if (value instanceof Long) {
    instance("jetbrains.mps.baseLanguage.structure.LongLiteral");
  }
 else   if (value instanceof Float) {
    instance("jetbrains.mps.baseLanguage.structure.FloatingPointConstant");
  }
 else   if (value instanceof Double) {
    instance("jetbrains.mps.baseLanguage.structure.FloatingPointConstant");
  }
 else   if (value instanceof String) {
    instance("jetbrains.mps.baseLanguage.structure.StringLiteral");
  }
 else   if (value instanceof ASMAnnotation) {
    createAnnotation((ASMAnnotation)value);
    instance("jetbrains.mps.baseLanguage.structure.AnnotationInstance");
  }
 else   if (value instanceof ASMPrimitiveType) {
    getTypeByASMType((ASMPrimitiveType)value);
    instance("jetbrains.mps.baseLanguage.structure.PrimitiveClassExpression");
  }
 else   if (value instanceof List) {
    List<Object> list=(List<Object>)value;
    instance("jetbrains.mps.baseLanguage.structure.ArrayLiteral");
    ListSequence.fromList(list).visitAll(new IVisitor<Object>(){
      public void visit(      Object it){
        getAnnotationValue(it);
      }
    }
);
  }
 else   if (value instanceof ASMEnumValue) {
    ASMEnumValue enumValue=(ASMEnumValue)value;
    ASMClassType c=(ASMClassType)enumValue.getType();
    instance("jetbrains.mps.baseLanguage.structure.EnumConstantReference");
    addClassifierReference(c);
    addEnumConstReference(enumValue);
  }
 else   if (value instanceof ASMClassType) {
    instance("jetbrains.mps.baseLanguage.structure.ClassifierClassExpression");
    addClassifierReference((ASMClassType)value);
  }
}
