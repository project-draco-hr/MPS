{
  try {
    NamespaceInternalActions_ActionGroup.this.removeAll();
    DataContext dataContext=DataManager.getInstance().getDataContext();
    Project project=MPSDataKeys.PROJECT.getData(dataContext);
    List<TreeNode> selectedNodes=MPSDataKeys.LOGICAL_VIEW_NODES.getData(dataContext);
    DefaultMutableTreeNode selectedNode=ProjectPane.getInstance(project).getSelectedNode();
    if (!(selectedNode instanceof NamespaceTextNode)) {
      return;
    }
    NamespaceTextNode node=(NamespaceTextNode)selectedNode;
    DefaultActionGroup newGroup=node.createNewGroup();
    if (newGroup != null) {
      NamespaceInternalActions_ActionGroup.this.add(newGroup);
      NamespaceInternalActions_ActionGroup.this.addSeparator();
    }
    NamespaceInternalActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.GenerateFiles_Action","jetbrains.mps.ide");
    NamespaceInternalActions_ActionGroup.this.addSeparator();
    NamespaceInternalActions_ActionGroup.this.addAction("jetbrains.mps.ide.actions.RenameNamespace_Action","jetbrains.mps.ide");
  }
 catch (  Throwable t) {
    LOG.error("User group error",t);
  }
  for (  Pair<ActionPlace,Condition<BaseAction>> p : this.myPlaces) {
    this.addPlace(p.first,p.second);
  }
}
