{
  try {
    final SNode targetConcept=MoveLinkUpDialog.getConcept(((MPSProject)MapSequence.fromMap(_params).get("project")).getProject(),((SNode)MapSequence.fromMap(_params).get("target")));
    if (targetConcept == null) {
      return;
    }
    final Wrappers._T<SNode> linkToReplace=new Wrappers._T<SNode>();
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        linkToReplace.value=RefUtil.findLinkToMerge(targetConcept,((SNode)MapSequence.fromMap(_params).get("target")));
      }
    }
);
    Boolean mergeLinks=false;
    if ((linkToReplace.value != null)) {
      String title="Merge to link with the same name";
switch (OptionDialog.showDialog(((MPSProject)MapSequence.fromMap(_params).get("project")),title,title + "?",true)) {
case 0:
        mergeLinks=true;
      break;
case 1:
    mergeLinks=false;
  break;
case 2:
return;
default :
}
}
new RefactoringFacade().execute(RefactoringContext.createRefactoringContextByName("jetbrains.mps.lang.structure.refactorings.MoveLinkUp",Arrays.asList("targetConcept","mergeLinks"),Arrays.asList(targetConcept,mergeLinks),((SNode)MapSequence.fromMap(_params).get("target")),((MPSProject)MapSequence.fromMap(_params).get("project"))));
}
 catch (Throwable t) {
LOG.error("User's action execute method failed. Action:" + "MoveLinkUp",t);
}
}
