{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
  ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(SConceptOperations.findConceptDeclaration("jetbrains.mps.core.syntax.structure.SSymbolRef"),_context.getSourceNode()){
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      Matcher _matcher_x583g4_a0a0a0a0a0a1a01;
      if ((_matcher_x583g4_a0a0a0a0a0a1a01=REGEXP_x583g4_a0a0a1a0a0a0a0a1a01.matcher(pattern)).find()) {
        SPropertyOperations.set(_context.getSourceNode(),"refalias",_matcher_x583g4_a0a0a0a0a0a1a01.group(1));
      }
 else {
        SPropertyOperations.set(_context.getSourceNode(),"refalias","");
      }
      return _context.getSourceNode();
    }
    public String getMatchingText(    String pattern){
      Matcher _matcher_x583g4_a1a1a0a0a0a1a01;
      if (pattern.equals("=")) {
        return "=";
      }
      if ((_matcher_x583g4_a1a1a0a0a0a1a01=REGEXP_x583g4_a0a0a2a1a0a0a0a1a01.matcher(pattern)).find()) {
        return (pattern.endsWith("=") ? pattern : pattern + "=");
      }
      return "alias=";
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
  }
);
  return result;
}
