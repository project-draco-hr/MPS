{
  List<INodeSubstituteAction> result=ListSequence.fromList(new ArrayList<INodeSubstituteAction>());
{
    SNode concept=SConceptOperations.findConceptDeclaration("jetbrains.mps.core.syntax.structure.SSymbolRef");
    ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(concept,_context.getSourceNode()){
      public SNode doSubstitute(      String pattern){
        Matcher _matcher_x583g4_a0a0a0a0a1a0a1a21;
        if ((_matcher_x583g4_a0a0a0a0a1a0a1a21=REGEXP_x583g4_a0a0a1a0a0a0a1a0a1a21.matcher(pattern)).find()) {
          SPropertyOperations.set(_context.getSourceNode(),"refalias",_matcher_x583g4_a0a0a0a0a1a0a1a21.group(1));
        }
 else {
          SPropertyOperations.set(_context.getSourceNode(),"refalias","");
        }
        return _context.getSourceNode();
      }
      public String getMatchingText(      String pattern){
        Matcher _matcher_x583g4_a1a1a0a0a1a0a1a21;
        if (pattern.equals("=")) {
          return "=";
        }
        if ((_matcher_x583g4_a1a1a0a0a1a0a1a21=REGEXP_x583g4_a0a0a2a1a0a0a1a0a1a21.matcher(pattern)).find()) {
          return (pattern.endsWith("=") ? pattern : pattern + "=");
        }
        return "alias=";
      }
      public String getVisibleMatchingText(      String pattern){
        return this.getMatchingText(pattern);
      }
    }
);
  }
  return result;
}
