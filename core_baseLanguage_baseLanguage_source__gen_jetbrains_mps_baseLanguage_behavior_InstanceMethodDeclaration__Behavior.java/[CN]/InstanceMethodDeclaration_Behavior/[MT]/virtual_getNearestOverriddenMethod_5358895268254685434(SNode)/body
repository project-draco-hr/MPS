{
  SNode superclass=null;
  if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(thisNode),"jetbrains.mps.baseLanguage.structure.ClassConcept")) {
    superclass=SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(thisNode),"jetbrains.mps.baseLanguage.structure.ClassConcept"),"superclass",true);
  }
  while (superclass != null) {
    for (    SNode methodCandidate : ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(superclass,"classifier",false),"method",true))) {
      if (SPropertyOperations.getString(methodCandidate,"name").equals(SPropertyOperations.getString(thisNode,"name")) && SLinkOperations.getCount(methodCandidate,"parameter") == SLinkOperations.getCount(thisNode,"parameter")) {
        if (BaseMethodDeclaration_Behavior.call_hasSameSignature_1213877350435(methodCandidate,thisNode)) {
          return methodCandidate;
        }
      }
    }
    superclass=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(superclass,"classifier",false),"jetbrains.mps.baseLanguage.structure.ClassConcept"),"superclass",true);
  }
  return null;
}
