{
  IScope scope=context.getScope();
  String behaviorClass=behaviorClassByConceptFqName(fqName);
  String namespace=NameUtil.namespaceFromConceptFQName(fqName);
  Language language=scope.getLanguage(namespace);
  if (language != null) {
    Class cls=language.getClass(behaviorClass);
    if (cls != null) {
      try {
        Method m;
        if (myCanBeAChildMethods.containsKey(fqName)) {
          m=myCanBeAChildMethods.get(fqName);
        }
 else {
          m=cls.getMethod(BehaviorConstants.CAN_BE_A_CHILD_METHOD_NAME,IOperationContext.class,CanBeAChildContext.class);
          myCanBeAChildMethods.put(fqName,m);
        }
        try {
          if (m != null) {
            return (Boolean)m.invoke(null,context,new CanBeAChildContext(parentNode,link));
          }
        }
 catch (        IllegalAccessException e) {
          LOG.error(e);
        }
catch (        InvocationTargetException e) {
          LOG.error(e);
        }
      }
 catch (      NoSuchMethodException e) {
        myCanBeAChildMethods.put(fqName,null);
      }
    }
  }
  return true;
}
