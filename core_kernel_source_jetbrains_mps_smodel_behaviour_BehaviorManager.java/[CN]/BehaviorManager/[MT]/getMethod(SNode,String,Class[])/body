{
  return NodeReadAccessCasterInEditor.runReadTransparentAction(new Computable<Method>(){
    public Method compute(){
      Language l=SModelUtil.getDeclaringLanguage(concept,GlobalScope.getInstance());
      Method method=null;
      String fqName=NameUtil.nodeFQName(concept);
      MethodInfo mi=new MethodInfo(fqName,methodName,parameterTypes);
synchronized (myMethods) {
        if (myMethods.containsKey(mi)) {
          return myMethods.get(mi);
        }
        String behaviorClass=behaviorClassByConceptFqName(fqName);
        try {
          Class cls=l.getClass(behaviorClass);
          if (cls != null) {
            method=cls.getMethod(methodName,parameterTypes);
          }
        }
 catch (        NoSuchMethodException e) {
        }
        if (method != null) {
          method.setAccessible(true);
        }
        myMethods.put(mi,method);
      }
      return method;
    }
  }
);
}
