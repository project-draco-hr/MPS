{
  return NodeReadAccessCasterInEditor.runReadTransparentAction(new Computable<Method>(){
    public Method compute(){
      Language l=SModelUtil.getDeclaringLanguage(concept);
      Method method=null;
      String fqName=InternUtil.intern(NameUtil.nodeFQName(concept));
      String behaviorClass=behaviorClassByConceptFqName(fqName);
      try {
        Class cls=l.getClass(behaviorClass);
        if (cls != null) {
          method=cls.getMethod(methodName,parameterTypes);
        }
      }
 catch (      NoSuchMethodException e) {
      }
      if (method != null) {
        method.setAccessible(true);
      }
      return method;
    }
  }
);
}
