{
  return NodeReadAccessCasterInEditor.runReadTransparentAction(new Computable<Method>(){
    public Method compute(){
      Language l=SModelUtil.getDeclaringLanguage(concept,GlobalScope.getInstance());
      Method method=null;
      String fqName=NameUtil.nodeFQName(concept);
      MethodInfo mi=new MethodInfo(fqName,methodName,parameterTypes);
      Method mm=myMethods.get(mi);
      if (mm != null)       return mm;
      String behaviorClass=behaviorClassByConceptFqName(fqName);
      try {
        Class cls=l.getClass(behaviorClass);
        if (cls != null) {
          method=cls.getMethod(methodName,parameterTypes);
        }
      }
 catch (      NoSuchMethodException e) {
      }
      if (method != null) {
        method.setAccessible(true);
      }
      mm=myMethods.putIfAbsent(mi,method);
      return mm != null ? mm : method;
    }
  }
);
}
