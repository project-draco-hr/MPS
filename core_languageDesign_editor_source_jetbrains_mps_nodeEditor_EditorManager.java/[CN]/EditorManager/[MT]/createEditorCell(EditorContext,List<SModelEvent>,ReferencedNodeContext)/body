{
  SNode node=refContext.getNode();
  if (areAttributesShown()) {
    for (    SNode attribute : node.getNodeAttributes()) {
      if (attribute != null) {
        if (!myAttributesStack.contains(attribute)) {
          myAttributesStack.push(attribute);
          EditorCell nodeCell=createEditorCell(context,events,refContext.contextWithOneMoreAttribute(attribute));
          SNode poppedAttribute=myAttributesStack.pop();
          LOG.assertLog(poppedAttribute == attribute);
          return createNodeAttributeCell(context,attribute,nodeCell);
        }
      }
    }
  }
  EditorComponent nodeEditorComponent=context.getNodeEditorComponent();
  EditorCell oldCell=nodeEditorComponent.getBigCellForRefContext(refContext.contextWihtNoAttributes());
  if (events != null) {
    boolean nodeChanged=false;
    for (    SModelEvent event : events) {
      SNode eventNode;
      if (event instanceof SModelChildEvent) {
        eventNode=((SModelChildEvent)event).getParent();
      }
 else       if (event instanceof SModelReferenceEvent) {
        eventNode=((SModelReferenceEvent)event).getReference().getSourceNode();
      }
 else       if (event instanceof SModelPropertyEvent) {
        eventNode=((SModelPropertyEvent)event).getNode();
      }
 else       continue;
      if (nodeEditorComponent.doesCellDependOnNode(oldCell,eventNode)) {
        nodeChanged=true;
        break;
      }
    }
    if (!nodeChanged) {
      if (myMap.containsKey(refContext)) {
        EditorCell editorCell=myMap.get(refContext);
        final Set<SNode> nodesOldCellDependsOn=nodeEditorComponent.getCopyOfNodesCellDependsOn(editorCell);
        final Set<SNodePointer> refTargetsOldCellDependsOn=nodeEditorComponent.getCopyOfRefTargetsCellDependsOn(editorCell);
        if (nodesOldCellDependsOn != null || refTargetsOldCellDependsOn != null) {
          CellBuildNodeAccessListener listensNothingListener=new CellBuildNodeAccessListener(nodeEditorComponent);
          NodeReadAccessCaster.setCellBuildNodeReadAccessListener(listensNothingListener);
          if (nodesOldCellDependsOn != null)           listensNothingListener.addNodesToDependOn(nodesOldCellDependsOn);
          if (refTargetsOldCellDependsOn != null)           listensNothingListener.addRefTargetsToDependOn(refTargetsOldCellDependsOn);
          NodeReadAccessCaster.removeCellBuildNodeAccessListener();
        }
        return editorCell;
      }
    }
 else {
      myMap.putAll(findBigDescendantCellsAndTheirNodes(oldCell));
    }
  }
  nodeEditorComponent.clearNodesCellDependsOn(oldCell,this);
  return createEditorCell_internal(context,myCreatingInspectedCell,refContext);
}
