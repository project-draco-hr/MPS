{
  if (SLinkOperations.getTarget(tvr,"typeVariableDeclaration",false) == SLinkOperations.getTarget(SNodeOperations.as(SLinkOperations.getTarget(adapterFunType,"resultType",true),"jetbrains.mps.baseLanguage.structure.TypeVariableReference"),"typeVariableDeclaration",false)) {
    SNodeOperations.replaceWithAnother(tvr,ClassifierTypeUtil.getTypeCoercedToClassifierType(SNodeOperations.copyNode(SLinkOperations.getTarget(targetFunType,"resultType",true))));
  }
 else {
    Iterator<SNode> adapterParamIt=ListSequence.fromList(SLinkOperations.getTargets(adapterFunType,"parameterType",true)).iterator();
    Iterator<SNode> targetParamIt=ListSequence.fromList(SLinkOperations.getTargets(targetFunType,"parameterType",true)).iterator();
    while (adapterParamIt.hasNext() && targetParamIt.hasNext()) {
      SNode targetParam=targetParamIt.next();
      if (SLinkOperations.getTarget(tvr,"typeVariableDeclaration",false) == SLinkOperations.getTarget(SNodeOperations.as(adapterParamIt.next(),"jetbrains.mps.baseLanguage.structure.TypeVariableReference"),"typeVariableDeclaration",false)) {
        SNodeOperations.replaceWithAnother(tvr,ClassifierTypeUtil.getTypeCoercedToClassifierType(SNodeOperations.copyNode(targetParam)));
        break;
      }
    }
  }
}
