{
  SNode annInst=lookupAdapterClassAnnotation(literal);
  SNode adapterClass=findAdapterClassDeclaration(literal,annInst);
  SNode adapterClassFunctionType=getAdapterClassFunctionType(adapterClass);
  SNode result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ClassifierType",null);
  SLinkOperations.setTarget(result,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1107535924139l,"classifier"),adapterClass);
  for (  SNode tvd : SLinkOperations.getChildren(adapterClass,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1109279851642l,1109279881614l,"typeVariableDeclaration"))) {
    SNode tvr=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.TypeVariableReference",null);
    SLinkOperations.setTarget(tvr,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1109283449304l,1109283546497l,"typeVariableDeclaration"),tvd);
    ListSequence.fromList(SLinkOperations.getChildren(result,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1109201940907l,"parameter"))).addElement(tvr);
    replaceWithTarget(tvr,adapterClassFunctionType,targetFunType);
  }
  return result;
}
