{
  SNode annInst=lookupAdapterClassAnnotation(literal);
  SNode adapterClass=findAdapterClassDeclaration(literal,annInst);
  SNode adapterClassFunctionType=getAdapterClassFunctionType(adapterClass);
  SNode result=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType"));
  SLinkOperations.setTarget(result,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier"),adapterClass);
  for (  SNode tvd : SLinkOperations.getChildren(adapterClass,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102463b447aL,0x102463bb98eL,"typeVariableDeclaration"))) {
    SNode tvr=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102467229d8L,"jetbrains.mps.baseLanguage.structure.TypeVariableReference"));
    SLinkOperations.setTarget(tvr,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102467229d8L,0x1024673a581L,"typeVariableDeclaration"),tvd);
    ListSequence.fromList(SLinkOperations.getChildren(result,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x102419671abL,"parameter"))).addElement(tvr);
    replaceWithTarget(tvr,adapterClassFunctionType,targetFunType);
  }
  return result;
}
