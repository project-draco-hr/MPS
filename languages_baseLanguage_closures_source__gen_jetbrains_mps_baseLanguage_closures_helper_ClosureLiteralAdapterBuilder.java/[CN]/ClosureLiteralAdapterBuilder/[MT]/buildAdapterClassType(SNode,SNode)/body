{
  SNode annInst=lookupAdapterClassAnnotation(literal);
  SNode adapterClass=findAdapterClassDeclaration(literal,annInst);
  SNode adapterClassFunctionType=getAdapterClassFunctionType(adapterClass);
  SNode result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ClassifierType",null);
  SLinkOperations.setTarget(result,"classifier",adapterClass,false);
  for (  SNode tvd : SLinkOperations.getTargets(adapterClass,"typeVariableDeclaration",true)) {
    SNode tvr=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.TypeVariableReference",null);
    SLinkOperations.setTarget(tvr,"typeVariableDeclaration",tvd,false);
    ListSequence.fromList(SLinkOperations.getTargets(result,"parameter",true)).addElement(tvr);
    replaceWithTarget(tvr,adapterClassFunctionType,targetFunType);
  }
  return result;
}
