{
  return FindUsagesFacade.getInstance().findUsages(project.getScope(),SetSequence.fromSetWithValues(new HashSet<SNode>(),ListSequence.fromList(node).translate(new ITranslator2<SNode,SNode>(){
    public Iterable<SNode> translate(    SNode it){
      return SNodeOperations.getNodeDescendants(it,null,true,new SAbstractConcept[]{});
    }
  }
)),new EmptyProgressMonitor());
}
