{
  final TemplateExecutionEnvironment environment=context.getEnvironment();
  Collection<SNode> tlist1=null;
  final SNode copySrcInput1=QueriesGenerated.sourceNodeQuery_1473665232107485240(new SourceSubstituteMacroNodeContext(context,copySrcMacro_417xrn_b0a0d0c81));
  tlist1=environment.copyNodes(TemplateUtil.singletonList(copySrcInput1),copySrcMacro_417xrn_b0a0d0c81,"tpl/r:00000000-0000-4000-0000-011c89590606/8900764248744322651",context.subContext("sd"));
  TemplateContext context2=context.subContext("sd");
  final SNode tnode3=environment.createOutputNode("jetbrains.mps.baseLanguage.structure.VariableReference");
  try {
    environment.nodeCopied(context2,tnode3,"tpl/r:00000000-0000-4000-0000-011c89590606/4265636116363090086");
    environment.resolve(new ReferenceResolver(){
      public Object resolve(      SNode outputNode,      TemplateContext context){
        return QueriesGenerated.referenceMacro_GetReferent_1473665232107455264(new ReferenceMacroContext(context,tnode3,referenceMacro_417xrn_c0a0a0a0a0a0b0g0c81,"variableDeclaration"));
      }
      public String getDefaultResolveInfo(){
        return "i";
      }
      public SNodeReference getTemplateNode(){
        return referenceMacro_417xrn_c0a0a0a0a0a0b0g0c81;
      }
    }
,tnode3,"variableDeclaration",context2);
  }
  finally {
  }
  environment.registerLabel(context.getInput(),tnode3,"sd");
  Collection<SNode> tlist4=TemplateUtil.asList(tlist1,tnode3);
  return tlist4;
}
