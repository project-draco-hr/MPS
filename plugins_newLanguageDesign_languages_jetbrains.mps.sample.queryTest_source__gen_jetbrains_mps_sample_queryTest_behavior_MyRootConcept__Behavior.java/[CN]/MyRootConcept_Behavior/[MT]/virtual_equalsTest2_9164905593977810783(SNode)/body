{
  return new _FunctionTypes._return_P2_E0<Boolean,Iterable<String>,Iterable<String>>(){
    public Boolean invoke(    Iterable<String> leftSequence,    Iterable<String> rightSequence){
      if (Sequence.fromIterable(leftSequence).count() != Sequence.fromIterable(rightSequence).count()) {
        return false;
      }
      Iterator<? extends String> leftIter=Sequence.fromIterable(leftSequence).iterator();
      Iterator<? extends String> rightIter=Sequence.fromIterable(rightSequence).iterator();
      while (leftIter.hasNext()) {
        String l=leftIter.next();
        String r=rightIter.next();
        if (!(new _FunctionTypes._return_P2_E0<Boolean,String,String>(){
          public Boolean invoke(          String a,          String b){
            if (a == null) {
              return b == null;
            }
 else {
              return a.equals(b);
            }
          }
        }
.invoke(l,r))) {
          return false;
        }
      }
      return true;
    }
  }
.invoke(ListSequence.fromListAndArray(new ArrayList<String>(),"one","two"),ListSequence.fromListAndArray(new ArrayList<String>(),"one","two"));
}
