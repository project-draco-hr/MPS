{
  outer:   for (  SNode resource : SLinkOperations.getTargets(usingStatement,"resource",true)) {
    SNode type=TypeChecker.getInstance().getTypeOf(resource);
    if (TypeChecker.getInstance().getSubtypingManager().isSubtype(type,new check_UsingStatement_NonTypesystemRule.QuotationClass_o2kqy_a1a0b0a0a().createNode(typeCheckingContext))) {
      continue;
    }
    SNode classifierType=TypeChecker.getInstance().getRuntimeSupport().coerce_(type,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.structure.ClassifierType"),false,typeCheckingContext);
    if (classifierType == null || SLinkOperations.getTarget(classifierType,"classifier",false) == null) {
{
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(resource,"resource should be Closeable or should have method dispose()","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","3073231036166011751",null,errorTarget);
      }
      continue;
    }
    ClassifierAndSuperClassifiersScope scope=new ClassifierAndSuperClassifiersScope(SLinkOperations.getTarget(classifierType,"classifier",false),ClassifierAndSuperClassifiersScope.INSTANCE_METHOD);
    List<SNode> methodsByName=scope.getMethodsByName("dispose");
    for (    SNode bmd : methodsByName) {
      if (ListSequence.fromList(SLinkOperations.getTargets(bmd,"parameter",true)).isEmpty()) {
        continue outer;
      }
    }
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(resource,"resource should be Closeable or should have method dispose()","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","3073231036166011889",null,errorTarget);
    }
  }
}
