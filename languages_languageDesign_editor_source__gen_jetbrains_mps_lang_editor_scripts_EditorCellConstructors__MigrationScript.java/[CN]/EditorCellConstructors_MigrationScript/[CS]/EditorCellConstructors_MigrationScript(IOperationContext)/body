{
  super("Update editor cell constructors");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Constructor Updater";
    }
    public String getAdditionalInfo(){
      return "Constructor Updater";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.baseLanguage.structure.ClassCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=SNodeOperations.getReference(node,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.ClassCreator","constructorDeclaration"));
      if (reference.getTargetNodeSilently() == null) {
        reference.getTargetNodeId();
        System.out.println("Target Node: " + reference.getTargetNodeId());
        System.out.println("Target Model: " + reference.getTargetSModelReference());
      }
      return false;
    }
    public void doUpdateInstanceNode(    SNode node){
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
