{
  this.addNodeById("1230052509259");
  this.addNodeById("1230052509277");
  this.addNodeById("1230052509301");
  ExtractMethodRefactoringParameters params=ExtractMethodFactory.createParameters(ListSequence.<SNode>fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230052509271"),"jetbrains.mps.baseLanguage.structure.ExpressionStatement")));
  params.setName("boo");
  ExtractMethodRefactoring ref=ExtractMethodFactory.createRefactoring(params);
  ref.doRefactor();
  Assert.assertEquals(null,NodesMatcher.matchNodes(ListSequence.<SNode>fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230052509260"),"jetbrains.mps.lang.plugin.structure.ActionDeclaration")),ListSequence.<SNode>fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("1230052509302"),"jetbrains.mps.lang.plugin.structure.ActionDeclaration"))));
}
