{
  super("Migration to Indent Layout");
  this.addRefactoring(new AbstractMigrationRefactoring(){
    @Override public String getName(){
      return "MoveEditor to indent Layout";
    }
    @Override public String getAdditionalInfo(){
      return "MoveEditor to indent Layout";
    }
    @Override public SAbstractConcept getApplicableConcept(){
      return MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0xf9eaff2517L,"jetbrains.mps.lang.editor.structure.CellModel_Collection");
    }
    @Override public boolean isApplicableInstanceNode(    SNode node){
      return !(SNodeOperations.isInstanceOf(SNodeOperations.getParent(node),MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0xf9eaff2517L,"jetbrains.mps.lang.editor.structure.CellModel_Collection"))) && !(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(node,MetaAdapterFactory.getContainmentLink(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0xf9eaff2517L,0x10192e0d3baL,"cellLayout")),MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x120150bb441L,"jetbrains.mps.lang.editor.structure.CellLayout_Indent")));
    }
    @Override public void doUpdateInstanceNode(    SNode node){
      IndentLayoutUtil.moveToIndentLayout(node);
    }
    @Override public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(){
    @Override public String getName(){
      return "CellModel_RefNodeList migration";
    }
    @Override public String getAdditionalInfo(){
      return "CellModel_RefNodeList migration";
    }
    @Override public SAbstractConcept getApplicableConcept(){
      return MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0xf9eb0ad38eL,"jetbrains.mps.lang.editor.structure.CellModel_RefNodeList");
    }
    @Override public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,MetaAdapterFactory.getContainmentLink(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x1098c8cf48aL,0x1098c8e38e8L,"cellLayout")) == null;
    }
    @Override public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,MetaAdapterFactory.getContainmentLink(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x1098c8cf48aL,0x1098c8e38e8L,"cellLayout"),SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x120150bb441L,"jetbrains.mps.lang.editor.structure.CellLayout_Indent"))));
      if (SPropertyOperations.getBoolean(node,MetaAdapterFactory.getProperty(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x1098c8cf48aL,0x1098c8e02faL,"vertical"))) {
        SPropertyOperations.set(node,MetaAdapterFactory.getProperty(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x1098c8cf48aL,0x1098c8e02faL,"vertical"),"" + (false));
        SNode indentStyle=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x120194c6bfdL,"jetbrains.mps.lang.editor.structure.IndentLayoutNewLineChildrenStyleClassItem")));
        SPropertyOperations.set(indentStyle,MetaAdapterFactory.getProperty(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x1143bd1283bL,0x1143bd161dbL,"flag"),"" + (true));
        ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0x11beb039542L,0x11beb040d06L,"styleItem"))).addElement(indentStyle);
      }
    }
    @Override public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
