{
  try {
    final SNode targetConcept=MoveUpDialog.getConcept(((MPSProject)MapSequence.fromMap(_params).get("mpsProject")).getProject(),((SNode)MapSequence.fromMap(_params).get("target")),"property");
    ModelAccess modelAccess=((MPSProject)MapSequence.fromMap(_params).get("mpsProject")).getRepository().getModelAccess();
    if (targetConcept == null) {
      return;
    }
    final Wrappers._T<SNode> currentConcept=new Wrappers._T<SNode>();
    final Wrappers._T<Language> currentLanguage=new Wrappers._T<Language>();
    modelAccess.executeCommandInEDT(new Runnable(){
      public void run(){
        currentConcept.value=SNodeOperations.getNodeAncestor(((SNode)MapSequence.fromMap(_params).get("target")),MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"),false,false);
        if (currentConcept.value == null) {
          return;
        }
        if (!(SNodeUtil.isAccessible(((SNode)MapSequence.fromMap(_params).get("target")),((MPSProject)MapSequence.fromMap(_params).get("mpsProject")).getRepository()))) {
          return;
        }
        if (!(SNodeUtil.isAccessible(targetConcept,((MPSProject)MapSequence.fromMap(_params).get("mpsProject")).getRepository()))) {
          return;
        }
        currentLanguage.value=Language.getLanguageFor(SNodeOperations.getModel(currentConcept.value));
      }
    }
);
    int result=Messages.showYesNoCancelDialog(((Project)MapSequence.fromMap(_params).get("project")),"Do you want to run the refactoring locally?","Execute refactoring","Run locally","Write migration","Cancel",null);
    if (result == Messages.CANCEL) {
      return;
    }
    if (result == Messages.YES) {
      modelAccess.executeCommandInEDT(new Runnable(){
        public void run(){
          Set<SReference> usages=FindUsagesManager.getInstance().findUsages(GlobalScope.getInstance(),Collections.singleton(((SNode)MapSequence.fromMap(_params).get("target"))),new EmptyProgressMonitor());
          final Set<SNode> instances=FindUsagesManager.getInstance().findInstances(GlobalScope.getInstance(),Collections.singleton(SNodeOperations.asSConcept(currentConcept.value)),false,new EmptyProgressMonitor());
          RefactoringUtil.changeReferences(((MPSProject)MapSequence.fromMap(_params).get("mpsProject")),((Project)MapSequence.fromMap(_params).get("project")),usages,((SNode)MapSequence.fromMap(_params).get("target")),new _FunctionTypes._void_P0_E0(){
            public void invoke(){
              final SProperty oldProp=MetaAdapterByDeclaration.getProperty(((SNode)MapSequence.fromMap(_params).get("target")));
              ListSequence.fromList(SLinkOperations.getChildren(targetConcept,MetaAdapterFactory.getContainmentLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0xf979c3ba6cL,"propertyDeclaration"))).addElement(((SNode)MapSequence.fromMap(_params).get("target")));
              final SProperty newProp=MetaAdapterByDeclaration.getProperty(((SNode)MapSequence.fromMap(_params).get("target")));
              for (              SNode node : SetSequence.fromSet(instances)) {
                Iterable<? extends SNode> children=node.getChildren(MetaAdapterFactory.getContainmentLink(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x10802efe25aL,0x47bf8397520e5942L,"smodelAttribute"));
                Sequence.fromIterable(SNodeOperations.ofConcept(Sequence.fromIterable(children).ofType(SNode.class),MetaAdapterFactory.getConcept(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x2eb1ad060897da56L,"jetbrains.mps.lang.core.structure.PropertyAttribute"))).where(new IWhereFilter<SNode>(){
                  public boolean accept(                  SNode it){
                    return PropertyAttribute_Behavior.call_getProperty_1341860900488756504(it).equals(oldProp);
                  }
                }
).visitAll(new IVisitor<SNode>(){
                  public void visit(                  SNode it){
                    PropertyAttribute_Behavior.call_setProperty_7714691473529670203(it,newProp);
                  }
                }
);
                String value=node.getProperty(oldProp);
                node.setProperty(newProp,value);
                node.setProperty(oldProp,null);
              }
            }
          }
,"Move property " + SPropertyOperations.getString(((SNode)MapSequence.fromMap(_params).get("target")),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")));
        }
      }
);
    }
 else {
      modelAccess.executeCommandInEDT(new _Adapters._return_P0_E0_to_Runnable_adapter(new _FunctionTypes._return_P0_E0<MigrationScriptBuilder>(){
        public MigrationScriptBuilder invoke(){
          SNode newProperty=SNodeOperations.copyNode(((SNode)MapSequence.fromMap(_params).get("target")));
          ListSequence.fromList(SLinkOperations.getChildren(targetConcept,MetaAdapterFactory.getContainmentLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,0xf979c3ba6cL,"propertyDeclaration"))).addElement(newProperty);
          AttributeOperations.setAttribute(((SNode)MapSequence.fromMap(_params).get("target")),new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x11d0a70ae54L,"jetbrains.mps.lang.structure.structure.DeprecatedNodeAnnotation")),createDeprecatedNodeAnnotation_vnzymo_a0c0a0a0a0n0a("The property was moved to superconcept \"" + BehaviorReflection.invokeVirtual(String.class,targetConcept,"virtual_getFqName_1213877404258",new Object[]{}) + "\""));
          String propName=SPropertyOperations.getString(((SNode)MapSequence.fromMap(_params).get("target")),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
          SPropertyOperations.set(((SNode)MapSequence.fromMap(_params).get("target")),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),propName + "_old");
          SNode refactorInstances;
          refactorInstances=_quotation_createNode_vnzymo_a0h0a0a0a0n0a(newProperty,((SNode)MapSequence.fromMap(_params).get("target")),targetConcept,((SNode)MapSequence.fromMap(_params).get("target")));
          SNode executeMethod=_quotation_createNode_vnzymo_a0i0a0a0a0n0a(currentConcept.value,currentConcept.value,refactorInstances,targetConcept,((SNode)MapSequence.fromMap(_params).get("target")),targetConcept,newProperty);
          return MigrationScriptBuilder.createMigrationScript(currentLanguage.value).setName("Move_property_" + propName).setExecuteMethod(executeMethod);
        }
      }
));
    }
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "MovePropertyUp",t);
    }
  }
}
