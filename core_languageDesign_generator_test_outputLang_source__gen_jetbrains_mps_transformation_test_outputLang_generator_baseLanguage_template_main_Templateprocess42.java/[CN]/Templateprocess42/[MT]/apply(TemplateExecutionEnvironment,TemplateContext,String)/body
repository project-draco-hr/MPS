{
  SNode tnode1=new SNode(null,"jetbrains.mps.baseLanguage.structure.PlusExpression",false);
{
    SNode tnode2=new SNode(null,"jetbrains.mps.baseLanguage.structure.IntegerConstant",false);
    tnode2.setProperty("value","58");
    tnode1.addChild("leftExpression",tnode2);
  }
{
    SNode tnode3=new SNode(null,"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression",false);
{
      SNode tnode4=new SNode(null,"jetbrains.mps.baseLanguage.structure.DotExpression",false);
{
        SNode tnode5=new SNode(null,"jetbrains.mps.baseLanguage.structure.StringLiteral",false);
        tnode5.setProperty("value",(String)QueriesGenerated.propertyMacro_GetPropertyValue_5857536350883039219(null,new PropertyMacroContext(context.getInput(),null,null,context,null)));
        tnode4.addChild("operand",tnode5);
      }
{
        SNode tnode6=new SNode(null,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation",false);
        tnode6.addReference(SReference.create("baseMethodDeclaration",tnode6,SModelReference.fromString("f:java_stub#java.lang(java.lang@java_stub)"),SNodeId.fromString("~String.length():int")));
        tnode4.addChild("operation",tnode6);
      }
      tnode3.addChild("expression",tnode4);
    }
    tnode1.addChild("rightExpression",tnode3);
  }
  return TemplateUtil.singletonList(tnode1);
}
