{
  super("Check Root Concepts' Internal Naming Policy");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Fix Root Concepts' Aliases";
    }
    public String getAdditionalInfo(){
      return "Fix Root Concepts' Aliases";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.structure.structure.ConceptDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      if (SPropertyOperations.getBoolean(node,MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1169125787135l,4628067390765956802l,"abstract"))) {
        return false;
      }
      if (!(SPropertyOperations.getBoolean(node,MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1071489090640l,1096454100552l,"rootable")))) {
        return false;
      }
      if (isEmptyString(SPropertyOperations.getString(node,MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1169125787135l,5092175715804935370l,"conceptAlias")))) {
        return false;
      }
      return !(SPropertyOperations.getString(node,MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1169125787135l,5092175715804935370l,"conceptAlias")).equals(NameUtil.multiWordDecapitalize(SPropertyOperations.getString(node,MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1169125787135l,5092175715804935370l,"conceptAlias")))));
    }
    public void doUpdateInstanceNode(    SNode node){
      SPropertyOperations.set(node,MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1169125787135l,5092175715804935370l,"conceptAlias"),NameUtil.multiWordDecapitalize(SPropertyOperations.getString(node,MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1169125787135l,5092175715804935370l,"conceptAlias"))));
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Add Alias to Root Concepts";
    }
    public String getAdditionalInfo(){
      return "Add Alias to Root Concepts";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.structure.structure.ConceptDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      if (SPropertyOperations.getBoolean(node,MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1169125787135l,4628067390765956802l,"abstract"))) {
        return false;
      }
      if (!(SPropertyOperations.getBoolean(node,MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1071489090640l,1096454100552l,"rootable")))) {
        return false;
      }
      return isEmptyString(SPropertyOperations.getString(node,MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1169125787135l,5092175715804935370l,"conceptAlias")));
    }
    public void doUpdateInstanceNode(    SNode node){
      StringBuilder sb=new StringBuilder();
      for (      String word : NameUtil.splitByCamels(SPropertyOperations.getString(node,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")))) {
        sb.append(NameUtil.decapitalize(word)).append(" ");
      }
      SPropertyOperations.set(node,MetaAdapterFactory.getProperty(new UUID(-4094437568663370681l,-8968368868337559369l),1169125787135l,5092175715804935370l,"conceptAlias"),sb.toString().trim());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
