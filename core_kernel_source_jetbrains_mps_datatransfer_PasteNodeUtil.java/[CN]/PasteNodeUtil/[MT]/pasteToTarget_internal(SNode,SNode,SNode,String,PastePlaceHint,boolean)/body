{
  AbstractConceptDeclaration pasteTargetType=pasteTarget.getConceptDeclarationAdapter();
  AbstractConceptDeclaration pasteNodeType=pasteNode.getConceptDeclarationAdapter();
  final LinkDeclaration linkDeclaration=findMetalink(pasteTargetType,pasteNodeType,role);
  if (linkDeclaration == null) {
    return false;
  }
  if (reallyPaste) {
    ModelAccess.instance().runWriteActionInCommand(new Runnable(){
      public void run(){
        if (linkDeclaration.getMetaClass() == LinkMetaclass.reference) {
          pasteTarget.setReferent(linkDeclaration.getRole(),pasteNode);
          return;
        }
        SNode _anchorNode=anchorNode;
        if (_anchorNode == null) {
          List<SNode> children=pasteTarget.getChildren(linkDeclaration.getRole());
          if (children.isEmpty()) {
            pasteTarget.setChild(linkDeclaration.getRole(),pasteNode);
            return;
          }
          _anchorNode=children.get(0);
        }
        Cardinality cardinality=linkDeclaration.getSourceCardinality();
        boolean uniqueChild=(cardinality == Cardinality._0__1 || cardinality == Cardinality._1);
        boolean deleteOldChild=uniqueChild || (placeHint == PastePlaceHint.DEFAULT && _anchorNode.getConceptDeclarationAdapter().hasConceptProperty(AbstractConceptDeclaration.CPR_Abstract));
        pasteTarget.insertChild(_anchorNode,linkDeclaration.getRole(),pasteNode,placeHint == PastePlaceHint.BEFORE_ANCHOR);
        if (deleteOldChild) {
          _anchorNode.delete();
        }
      }
    }
);
  }
  return true;
}
