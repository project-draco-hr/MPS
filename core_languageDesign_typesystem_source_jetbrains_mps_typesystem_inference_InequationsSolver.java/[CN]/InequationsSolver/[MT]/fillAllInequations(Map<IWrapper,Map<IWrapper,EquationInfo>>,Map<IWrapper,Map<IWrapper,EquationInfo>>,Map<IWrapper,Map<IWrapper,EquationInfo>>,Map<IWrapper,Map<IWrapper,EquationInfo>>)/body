{
  for (  IWrapper subWrapper : subtypesToSupertypesMap.keySet()) {
    Map<IWrapper,EquationInfo> supers=subtypesToSupertypesMap.get(subWrapper);
    if (supers != null) {
      for (      IWrapper superWrapper : supers.keySet()) {
        EquationInfo info=supers.get(superWrapper);
        if (info != null) {
          myAllInequations.put(info,new Pair<IWrapper,IWrapper>(subWrapper,superWrapper));
        }
      }
    }
  }
  for (  IWrapper subWrapper : subtypesToSupertypesMapStrong.keySet()) {
    Map<IWrapper,EquationInfo> supers=subtypesToSupertypesMapStrong.get(subWrapper);
    if (supers != null) {
      for (      IWrapper superWrapper : supers.keySet()) {
        EquationInfo info=supers.get(superWrapper);
        if (info != null) {
          info.setStrong();
          myAllInequations.put(info,new Pair<IWrapper,IWrapper>(subWrapper,superWrapper));
        }
      }
    }
  }
  for (  IWrapper superWrapper : supertypesToSubtypesMap.keySet()) {
    Map<IWrapper,EquationInfo> subs=supertypesToSubtypesMap.get(superWrapper);
    if (subs != null) {
      for (      IWrapper subWrapper : subs.keySet()) {
        EquationInfo info=subs.get(subWrapper);
        if (info != null) {
          myAllInequations.put(info,new Pair<IWrapper,IWrapper>(subWrapper,superWrapper));
        }
      }
    }
  }
  for (  IWrapper superWrapper : supertypesToSubtypesMapStrong.keySet()) {
    Map<IWrapper,EquationInfo> subs=supertypesToSubtypesMapStrong.get(superWrapper);
    if (subs != null) {
      for (      IWrapper subWrapper : subs.keySet()) {
        EquationInfo info=subs.get(subWrapper);
        if (info != null) {
          info.setStrong();
          myAllInequations.put(info,new Pair<IWrapper,IWrapper>(subWrapper,superWrapper));
        }
      }
    }
  }
}
