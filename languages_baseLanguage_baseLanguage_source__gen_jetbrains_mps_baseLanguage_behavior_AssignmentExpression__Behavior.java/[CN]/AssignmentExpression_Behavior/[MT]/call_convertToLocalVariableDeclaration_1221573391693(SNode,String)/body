{
  SNode exprStatement=SNodeOperations.cast(SNodeOperations.getParent(thisNode),"jetbrains.mps.baseLanguage.structure.ExpressionStatement");
  SNode valueType=TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(thisNode,"rValue",true));
  if (SNodeOperations.isInstanceOf(valueType,"jetbrains.mps.baseLanguage.structure.NullType")) {
    valueType=_quotation_createNode_4cbll2_a0a0c0d();
  }
  SNode varType=TypeChecker.getInstance().getRuntimeSupport().coerce_(valueType,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.structure.Type"),true);
  SNode varDeclStmnt=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement",null);
  SLinkOperations.setNewChild(varDeclStmnt,"localVariableDeclaration","jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration");
  SNode ref=SNodeOperations.cast(SLinkOperations.getTarget(thisNode,"lValue",true),"jetbrains.mps.baseLanguage.structure.VariableReference");
  String name=(varName == null ? ((SLinkOperations.getTarget(ref,"variableDeclaration",false) == null) ? SNodeOperations.getReference(ref,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.VariableReference","variableDeclaration")).getResolveInfo() : SPropertyOperations.getString(SLinkOperations.getTarget(ref,"variableDeclaration",false),"name")) : varName);
  SPropertyOperations.set(SLinkOperations.getTarget(varDeclStmnt,"localVariableDeclaration",true),"name",name);
  SLinkOperations.setTarget(SLinkOperations.getTarget(varDeclStmnt,"localVariableDeclaration",true),"type",SNodeOperations.copyNode(varType),true);
  SLinkOperations.setTarget(SLinkOperations.getTarget(varDeclStmnt,"localVariableDeclaration",true),"initializer",SNodeOperations.copyNode(SLinkOperations.getTarget(thisNode,"rValue",true)),true);
  SNodeOperations.replaceWithAnother(exprStatement,varDeclStmnt);
  return varDeclStmnt;
}
