{
  ModelAccess.instance().runReadAction(new Runnable(){
    @Override public void run(){
      String fontName=myFontsComboBox.getSelectedItem().toString();
      int fontSize=Integer.parseInt(myFontSizesComboBox.getSelectedItem().toString());
      Font newFont=new Font(fontName,Font.PLAIN,fontSize);
      mySettings.setDefaultEditorFont(newFont);
      mySettings.setVerticalBound(Integer.parseInt(myVerticalBoundComboBox.getSelectedItem().toString()));
      mySettings.setIndentSize(Integer.parseInt(myIndentSizeComboBox.getSelectedItem().toString()));
      int blinkingPeriod=getBlinkingPeriod();
      CaretBlinker.getInstance().setCaretBlinkingRateTimeMillis(blinkingPeriod);
      mySettings.setUseAntialiasing(myAntialiasingCheckBox.isSelected());
      mySettings.setUseBraces(myUseBraces.isSelected());
      mySettings.setPowerSaveMode(myPowerSaveModeCheckBox.isSelected());
      try {
        mySettings.getState().setLineSpacing(Double.parseDouble(myLineSpacingField.getText()));
      }
 catch (      NumberFormatException e) {
        mySettings.getState().setLineSpacing(1.0);
      }
      mySettings.getState().setShow(myTabPerAspect.isSelected() || myTabPerNode.isSelected() || myAllTabs.isSelected());
      mySettings.getState().setShowPlain(myTabPerNode.isSelected() || myAllTabs.isSelected());
      mySettings.getState().setShowGrayed(myAllTabs.isSelected());
      applyState();
      mySettings.updateCachedValue();
      mySettings.fireEditorSettingsChanged();
    }
  }
);
}
