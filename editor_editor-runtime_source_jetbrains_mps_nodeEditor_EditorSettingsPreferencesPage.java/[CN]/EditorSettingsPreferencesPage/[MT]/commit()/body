{
  String fontName=myFontsComboBox.getFontName();
  int fontSize=mySettings.getState().getFontSize();
  try {
    fontSize=Integer.parseInt(myFontSizesComboBox.getSelectedItem().toString());
  }
 catch (  NumberFormatException e) {
    myFontSizesComboBox.setSelectedItem(Integer.toString(fontSize));
  }
  Font newFont=new Font(fontName,Font.PLAIN,fontSize);
  mySettings.setDefaultEditorFont(newFont);
  mySettings.setVerticalBound((Integer)myRightMargin.getModel().getValue());
  mySettings.setIndentSize((Integer)myIndentSize.getModel().getValue());
  mySettings.setCaretBlinkPeriod((Integer)myCaretBlinkPeriod.getModel().getValue());
  mySettings.setUseAntialiasing(myAntialiasingCheckBox.isSelected());
  mySettings.setUseBraces(myUseBraces.isSelected());
  mySettings.setShowContextAssistant(myShowContextAssistant.isSelected());
  mySettings.setPowerSaveMode(myPowerSaveModeCheckBox.isSelected());
  mySettings.setAutoQuickFix(myAutoQuickFixCheckBox.isSelected());
  mySettings.getState().setLineSpacing((Double)myLineSpacing.getModel().getValue());
  mySettings.getState().setShow(myTabPerAspect.isSelected() || myTabPerNode.isSelected() || myAllTabs.isSelected());
  mySettings.getState().setShowPlain(myTabPerNode.isSelected() || myAllTabs.isSelected());
  mySettings.getState().setShowGrayed(myAllTabs.isSelected());
  applyState();
  mySettings.updateCachedValue();
  mySettings.updateGlobalScheme();
  mySettings.fireEditorSettingsChanged();
}
