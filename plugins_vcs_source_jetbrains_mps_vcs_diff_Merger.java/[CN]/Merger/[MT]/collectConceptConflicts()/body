{
  List<ChangeConceptChange> conceptChanges=getChanges(ChangeConceptChange.class);
  Map<SNodeId,List<ChangeConceptChange>> map=new jetbrains.mps.util.misc.hash.LinkedHashMap<SNodeId,List<ChangeConceptChange>>();
  for (  ChangeConceptChange ch : conceptChanges) {
    List<ChangeConceptChange> changeList=map.get(ch.getAffectedNodeId());
    if (changeList == null) {
      changeList=new LinkedList<ChangeConceptChange>();
      map.put(ch.getAffectedNodeId(),changeList);
    }
    changeList.add(ch);
  }
  for (  SNodeId id : map.keySet()) {
    List<ChangeConceptChange> changeList=map.get(id);
    if (changeList.size() == 2) {
      ChangeConceptChange first=changeList.get(0);
      ChangeConceptChange last=changeList.get(1);
      if (!first.equals(last)) {
        myConflicts.add(new Conflict(first,last));
        myConflictingChanges.add(first);
        myConflictingChanges.add(last);
      }
    }
  }
}
