{
  SModel model=modelDescriptor.getSModel();
  boolean wasLoading=model.isLoading();
  try {
    model.setLoading(true);
    boolean modified=false;
    for (    AbstractEquationStatement equationStatement : model.allAdapters(AbstractEquationStatement.class)) {
      INodeAdapter left=equationStatement.getChild(AbstractEquationStatement.LEFT_EXPRESSION);
      INodeAdapter right=equationStatement.getChild(AbstractEquationStatement.RIGHT_EXPRESSION);
      if (left instanceof Expression) {
        NormalTypeClause normalTypeClause=NormalTypeClause.newInstance(model);
        equationStatement.replaceChild(left,normalTypeClause);
        normalTypeClause.setNormalType((Expression)left);
        modified=true;
      }
      if (right instanceof Expression) {
        NormalTypeClause normalTypeClause=NormalTypeClause.newInstance(model);
        equationStatement.replaceChild(right,normalTypeClause);
        normalTypeClause.setNormalType((Expression)right);
        modified=true;
      }
    }
    if (modified) {
      ((EditableSModelDescriptor)modelDescriptor).save();
    }
  }
  finally {
    model.setLoading(wasLoading);
  }
}
