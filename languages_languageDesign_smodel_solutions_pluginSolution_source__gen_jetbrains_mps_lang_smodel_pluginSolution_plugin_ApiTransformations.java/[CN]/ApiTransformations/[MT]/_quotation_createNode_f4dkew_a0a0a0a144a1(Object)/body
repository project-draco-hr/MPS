{
  SNode quotedNode_2=null;
  SNode quotedNode_3=null;
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  SNode quotedNode_7=null;
  quotedNode_2=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceOfExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_3=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",null,null,GlobalScope.getInstance(),false);
  quotedNode_3.setReference("classifier",SReference.create("classifier",quotedNode_3,SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.generator(MPS.Core/jetbrains.mps.generator@java_stub)"),SNodeId.fromString("~TransientSModel")));
  quotedNode_2.addChild("classType",quotedNode_3);
  quotedNode_4=(SNode)parameter_1;
  if (quotedNode_4 != null) {
    quotedNode_2.addChild("leftExpression",HUtil.copyIfNecessary(quotedNode_4));
  }
  return quotedNode_2;
}
