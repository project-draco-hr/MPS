{
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  SNode quotedNode_7=null;
  SNode quotedNode_8=null;
  SNode quotedNode_9=null;
  SNode quotedNode_10=null;
  SNode quotedNode_11=null;
  SNode quotedNode_12=null;
  SNode quotedNode_13=null;
  SNode quotedNode_14=null;
  SNode quotedNode_15=null;
  quotedNode_4=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_5=(SNode)parameter_1;
  if (quotedNode_5 != null) {
    quotedNode_4.addChild("operand",HUtil.copyIfNecessary(quotedNode_5));
  }
  quotedNode_6=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation",null,null,GlobalScope.getInstance(),false);
  quotedNode_6.setReference("baseMethodDeclaration",SReference.create("baseMethodDeclaration",quotedNode_6,SModelReference.fromString("f:java_stub#8865b7a8-5271-43d3-884c-6fd1d9cfdd34#org.jetbrains.mps.openapi.model(MPS.OpenAPI/org.jetbrains.mps.openapi.model@java_stub)"),SNodeId.fromString("~SNode.setReference(java.lang.String,org.jetbrains.mps.openapi.model.SReference):void")));
  quotedNode_8=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_12=(SNode)parameter_2;
  if (quotedNode_12 != null) {
    quotedNode_8.addChild("operand",HUtil.copyIfNecessary(quotedNode_12));
  }
  quotedNode_13=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation",null,null,GlobalScope.getInstance(),false);
  quotedNode_13.setReference("baseMethodDeclaration",SReference.create("baseMethodDeclaration",quotedNode_13,SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)"),SNodeId.fromString("~SReference.getRole():java.lang.String")));
  quotedNode_8.addChild("operation",quotedNode_13);
  quotedNode_6.addChild("actualArgument",quotedNode_8);
  quotedNode_9=(SNode)parameter_3;
  if (quotedNode_9 != null) {
    quotedNode_6.addChild("actualArgument",HUtil.copyIfNecessary(quotedNode_9));
  }
  quotedNode_4.addChild("operation",quotedNode_6);
  return quotedNode_4;
}
