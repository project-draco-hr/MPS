{
  SNode quotedNode_3=null;
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  SNode quotedNode_7=null;
  SNode quotedNode_8=null;
  SNode quotedNode_9=null;
  SNode quotedNode_10=null;
  SNode quotedNode_11=null;
  SNode quotedNode_12=null;
  quotedNode_3=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_4=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation",null,null,GlobalScope.getInstance(),false);
  quotedNode_4.setReference("baseMethodDeclaration",SReference.create("baseMethodDeclaration",quotedNode_4,SModelReference.fromString("f:java_stub#8865b7a8-5271-43d3-884c-6fd1d9cfdd34#org.jetbrains.mps.openapi.language(MPS.OpenAPI/org.jetbrains.mps.openapi.language@java_stub)"),SNodeId.fromString("~SAbstractConcept.isSubConceptOf(org.jetbrains.mps.openapi.language.SAbstractConcept):boolean")));
  quotedNode_6=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_9=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation",null,null,GlobalScope.getInstance(),false);
  quotedNode_9.setReference("baseMethodDeclaration",SReference.create("baseMethodDeclaration",quotedNode_9,SModelReference.fromString("f:java_stub#8865b7a8-5271-43d3-884c-6fd1d9cfdd34#org.jetbrains.mps.openapi.language(MPS.OpenAPI/org.jetbrains.mps.openapi.language@java_stub)"),SNodeId.fromString("~SConceptRepository.getConcept(java.lang.String):org.jetbrains.mps.openapi.language.SConcept")));
  quotedNode_12=(SNode)parameter_1;
  if (quotedNode_12 != null) {
    quotedNode_9.addChild("actualArgument",HUtil.copyIfNecessary(quotedNode_12));
  }
  quotedNode_6.addChild("operation",quotedNode_9);
  quotedNode_10=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall",null,null,GlobalScope.getInstance(),false);
  quotedNode_10.setReference("baseMethodDeclaration",SReference.create("baseMethodDeclaration",quotedNode_10,SModelReference.fromString("f:java_stub#8865b7a8-5271-43d3-884c-6fd1d9cfdd34#org.jetbrains.mps.openapi.language(MPS.OpenAPI/org.jetbrains.mps.openapi.language@java_stub)"),SNodeId.fromString("~SConceptRepository.getInstance():org.jetbrains.mps.openapi.language.SConceptRepository")));
  quotedNode_10.setReference("classConcept",SReference.create("classConcept",quotedNode_10,SModelReference.fromString("f:java_stub#8865b7a8-5271-43d3-884c-6fd1d9cfdd34#org.jetbrains.mps.openapi.language(MPS.OpenAPI/org.jetbrains.mps.openapi.language@java_stub)"),SNodeId.fromString("~SConceptRepository")));
  quotedNode_6.addChild("operand",quotedNode_10);
  quotedNode_4.addChild("actualArgument",quotedNode_6);
  quotedNode_3.addChild("operation",quotedNode_4);
  quotedNode_5=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_7=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation",null,null,GlobalScope.getInstance(),false);
  quotedNode_7.setReference("baseMethodDeclaration",SReference.create("baseMethodDeclaration",quotedNode_7,SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)"),SNodeId.fromString("~SNode.getConcept():org.jetbrains.mps.openapi.language.SConcept")));
  quotedNode_5.addChild("operation",quotedNode_7);
  quotedNode_8=(SNode)parameter_2;
  if (quotedNode_8 != null) {
    quotedNode_5.addChild("operand",HUtil.copyIfNecessary(quotedNode_8));
  }
  quotedNode_3.addChild("operand",quotedNode_5);
  return quotedNode_3;
}
