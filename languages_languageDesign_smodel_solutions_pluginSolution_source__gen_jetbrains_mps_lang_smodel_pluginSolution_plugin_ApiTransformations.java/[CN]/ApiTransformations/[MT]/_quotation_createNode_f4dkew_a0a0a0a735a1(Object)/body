{
  SNode quotedNode_2=null;
  SNode quotedNode_3=null;
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  SNode quotedNode_7=null;
  SNode quotedNode_8=null;
  SNode quotedNode_9=null;
  SNode quotedNode_10=null;
  quotedNode_2=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_3=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceOfExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_4=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",null,null,GlobalScope.getInstance(),false);
  quotedNode_4.setReference("classifier",SReference.create("classifier",quotedNode_4,SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.generator(MPS.Core/jetbrains.mps.generator@java_stub)"),SNodeId.fromString("~TransientModelsModule")));
  quotedNode_3.addChild("classType",quotedNode_4);
  quotedNode_5=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression",null,null,GlobalScope.getInstance(),false);
  quotedNode_6=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation",null,null,GlobalScope.getInstance(),false);
  quotedNode_6.setReference("baseMethodDeclaration",SReference.create("baseMethodDeclaration",quotedNode_6,SModelReference.fromString("f:java_stub#6ed54515-acc8-4d1e-a16c-9fd6cfe951ea#jetbrains.mps.smodel(MPS.Core/jetbrains.mps.smodel@java_stub)"),SNodeId.fromString("~SModel.getModule():org.jetbrains.mps.openapi.module.SModule")));
  quotedNode_5.addChild("operation",quotedNode_6);
  quotedNode_7=(SNode)parameter_1;
  if (quotedNode_7 != null) {
    quotedNode_5.addChild("operand",HUtil.copyIfNecessary(quotedNode_7));
  }
  quotedNode_3.addChild("leftExpression",quotedNode_5);
  quotedNode_2.addChild("expression",quotedNode_3);
  return quotedNode_2;
}
