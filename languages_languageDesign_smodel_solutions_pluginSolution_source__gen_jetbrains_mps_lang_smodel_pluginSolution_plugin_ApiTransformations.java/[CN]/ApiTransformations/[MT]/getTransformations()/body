{
  List<Tuples._3<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>> transformations=ListSequence.fromList(new ArrayList<Tuples._3<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>>());
  String cat="getConceptFqName()->getConcept().getConceptId()";
  SNode md=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a5a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a6a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat,md,transformer));
  String cat3="setReferent()->setReferenceTarget()";
  SNode md3=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a31a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer3=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a41a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat3,md3,transformer3));
  String cat4="isAncestor()->SNodeOperations.isAncestor()";
  SNode md4=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a12a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer4=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a22a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat4,md4,transformer4));
  String cat5="getId()->getNodeId().toString()";
  SNode md5=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a92a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer5=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a03a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat5,md5,transformer5));
  String cat7="addReference()->setReference()";
  SNode md7=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a73a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer7=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      SNode replacer=ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first();
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a1a0a83a1(replacer,replacer,SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat7,md7,transformer7));
  String cat8="getRole_()->getRoleInParent()";
  SNode md8=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a54a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier8=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer8=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a74a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat8,md8,transformer8));
  String cat9="isRegistered()->getModel()!=null";
  SNode md9=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a45a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer9=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a55a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat9,md9,transformer9));
  String cat10="isDisposed()->SNodeOperations.isDisposed()";
  SNode md10=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a26a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer10=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a36a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat10,md10,transformer10));
  String cat12="getTopmostAncestor()->getContainingRoot()";
  SNode md12=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a07a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer12=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a17a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat12,md12,transformer12));
  String cat13="isRoot()->SNodeOperation.isRoot()";
  SNode md13=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a87a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer13=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a97a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat13,md13,transformer13));
  String cat14="getConceptShortName()->getConcept().getShortName()";
  SNode md14=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a68a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer14=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a78a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat14,md14,transformer14));
  String cat15="getChildren(boolean)->SNodeOperations.getChildren()";
  SNode md15=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a49a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer15=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a59a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat15,md15,transformer15));
  String cat16="findParent(condition)->SNodeOperations.findParent(condition)";
  SNode md16=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a201a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer16=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a301a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat16,md16,transformer16));
  String cat17="getDescendants()->.descendants";
  SNode md17=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a111a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer17=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      SNode rep;
      if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),"jetbrains.mps.lang.smodel.structure.SemanticDowncastExpression")) {
        rep=_quotation_createNode_f4dkew_a0a0b0a0ie0b(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),"jetbrains.mps.lang.smodel.structure.SemanticDowncastExpression"),"leftExpression",true));
      }
 else {
        rep=_quotation_createNode_f4dkew_a0a0a1a0a211a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true));
      }
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),rep);
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat17,md17,transformer17));
  String cat18="getDescendants(condition)->SNodeOperations.getDescendants(condition)";
  SNode md18=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a911a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer18=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a021a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat18,md18,transformer18));
  String cat19="replaceChild(n1,n2)->n1.replace with(n2)";
  SNode md19=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a721a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer19=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a821a1(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).getElement(0),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).getElement(1)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat19,md19,transformer19));
  String cat20="getProperties()->SNodeOperations.getProperties()";
  SNode md20=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a531a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer20=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a631a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat20,md20,transformer20));
  String cat22="n.isInstanceOfConcept(c)->n.getConcept().isSubConceptOf(c)";
  SNode md22=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a341a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer22=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a441a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat22,md22,transformer22));
  String cat23="n.isInstanceOfConcept(string)->SNodeUtil.isInstanceOf(node,SNodeOperations.getConcept(string))";
  SNode md23=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a151a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer23=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a251a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat23,md23,transformer23));
  String cat24="toString()->getPresentation()";
  SNode md24=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a951a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer24=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a061a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat24,md24,transformer24));
  String cat25="getChildrenIterable()->getChildren()";
  SNode md25=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a761a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer25=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a861a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat25,md25,transformer25));
  String cat26="getConceptLanguage()->getConcept.getLanguage.getModule.?getModuleReference()";
  SNode md26=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a571a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer26=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a671a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat26,md26,transformer26));
  String cat27="getLanguageNamespace()->getConcept.getLanguage.getPresentation()";
  SNode md27=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a381a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer27=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a481a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat27,md27,transformer27));
  String cat28="getLanguage()->(Language)getConcept.getLanguage.getModule()";
  SNode md28=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a191a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer28=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a291a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat28,md28,transformer28));
  String cat30="getNodeLanguage()->(Language)((node<>)n).concept/.getModel.?getModule()";
  SNode md30=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a991a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer30=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a002a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat30,md30,transformer30));
  String cat31="getConceptProperty()->(Language)((node<>)n).concept/.getModel.?getModule()";
  SNode md31=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a702a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer31=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a802a1(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first(),SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat31,md31,transformer31));
  String cat32="getDescendantsIterable()->SNodeOperations.getDescendants()";
  SNode md32=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a512a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer32=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a612a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).getElement(0),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).getElement(1)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat32,md32,transformer32));
  String cat33="getReferencesIterable()->SNodeOperations.getReferences()";
  SNode md33=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a322a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer33=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a422a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat33,md33,transformer33));
  String cat34="getDebugText()->SNodeOperations.getDebugText()";
  SNode md34=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a132a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer34=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a232a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat34,md34,transformer34));
  String cat35="getChildRoles()->SNodeOperations.getChildRoles()";
  SNode md35=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a932a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer35=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a042a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat35,md35,transformer35));
  String cat38="n.getReferenceRoles()->SNodeOperations.getReferenceRoles()";
  SNode md38=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a742a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer38=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a842a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat38,md38,transformer38));
  String cat39="insertChild(a,r,c)->insertChild()";
  SNode md39=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a552a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer39=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      List<SNode> arg=SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true);
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a1a0a652a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(arg).getElement(1),ListSequence.fromList(arg).getElement(2),ListSequence.fromList(arg).getElement(0)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat39,md39,transformer39));
  String cat40="insertChild(a,r,c,b)->SNodeOperations.insertChild()";
  SNode md40=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a362a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer40=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      List<SNode> arg=SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true);
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a1a0a462a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(arg).getElement(1),ListSequence.fromList(arg).getElement(2),ListSequence.fromList(arg).getElement(0),ListSequence.fromList(arg).getElement(3)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat40,md40,transformer40));
  String cat41="removeReferent()->setReferenceTarget(null)";
  SNode md41=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a172a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._return_P1_E0<? extends Boolean,? super SNode> transVerifier41=new _FunctionTypes._return_P1_E0<Boolean,SNode>(){
    public Boolean invoke(    SNode n){
      return SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation") && SNodeOperations.isInstanceOf(SNodeOperations.getParent(n),"jetbrains.mps.baseLanguage.structure.DotExpression") && (SNodeOperations.getAncestor(n,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null);
    }
  }
;
  _FunctionTypes._void_P1_E0<? super SNode> transformer41=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a372a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true),ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first()));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat41,md41,transformer41));
  String cat42="isDeleted()->getModel()==null";
  SNode md42=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a082a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer42=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a182a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat42,md42,transformer42));
  String cat43="n.getResolveInfo()->SNodeOperations.getResolveInfo()";
  SNode md43=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a882a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer43=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a982a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat43,md43,transformer43));
  String cat44="n.getDebugText()->SNodeUtil.getDebugText()";
  SNode md44=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a692a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer44=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a792a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat44,md44,transformer44));
  String cat45="new SNode(model,concept)->new SNode(InternUtil.intern(concept))";
  SNode md45=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a403a1(),"creator",true),"jetbrains.mps.baseLanguage.structure.ClassCreator"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer45=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(usage,_quotation_createNode_f4dkew_a0a0a0a503a1(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.ClassCreator"),"actualArgument",true)).getElement(1)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat45,md45,transformer45));
  String cat46="new SNode(model,concept,true-false)->new SNode(InternUtil.intern(concept))";
  SNode md46=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a213a1(),"creator",true),"jetbrains.mps.baseLanguage.structure.ClassCreator"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer46=new _FunctionTypes._void_P1_E0<SNode>(){
    public void invoke(    SNode usage){
      SNode intern=ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.ClassCreator"),"actualArgument",true)).getElement(2);
      if (SNodeOperations.isInstanceOf(intern,"jetbrains.mps.baseLanguage.structure.BooleanConstant")) {
        if (SPropertyOperations.getBoolean(SNodeOperations.cast(intern,"jetbrains.mps.baseLanguage.structure.BooleanConstant"),"value")) {
          SNodeOperations.replaceWithAnother(usage,_quotation_createNode_f4dkew_a0a0a0a1a0a313a1(intern));
        }
 else {
          SNodeOperations.replaceWithAnother(usage,_quotation_createNode_f4dkew_a0a0a0a0b0a0bm0b(intern));
        }
      }
 else {
      }
    }
  }
;
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat46,md46,transformer46));
  String cat47="getSNodeId()->getNodeId()";
  SNode md47=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a023a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer47=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(usage,SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a0a0jm0b(),"operation",true));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat47,md47,transformer47));
  String cat48="SNodePointer: getNode()->resolve(MPSModuleRepository.getInstance())";
  SNode md48=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a823a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer48=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(usage,SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a0a0rm0b(),"operation",true));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat48,md48,transformer48));
  String cat49="SNodePointer: getDebugText()->toString()";
  SNode md49=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a633a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer49=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(usage,SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a0a0zm0b(),"operation",true));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat49,md49,transformer49));
  String cat50="SNodePointer: getModel()->SNodeOperations.getModelFromNodeReference()";
  SNode md50=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a443a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer50=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a543a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat50,md50,transformer50));
  String cat51="SReference: getTargetNodeSilently()->SNodeOperations.getTargetNodeSilently()";
  SNode md51=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a253a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer51=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a353a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat51,md51,transformer51));
  String cat52="SModel: getNodeById(string)->getNode(SNodeId.fromString(id))";
  SNode md52=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a063a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer52=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a163a1(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first(),SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat52,md52,transformer52));
  String cat53="SModel: getNodeById(id)->getNode(id)";
  SNode md53=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a863a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer53=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a963a1(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first(),SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat53,md53,transformer53));
  String cat54="SModel: registeredNodesCount()->SNodeOperations.nodesCount()";
  SNode md54=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a673a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer54=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a773a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat54,md54,transformer54));
  String cat55="SModel: rootsCount()->IterableUtil.asCollection(getRootNodes).size()";
  SNode md55=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a483a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer55=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a583a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat55,md55,transformer55));
  String cat56="SModel: nodes()->new NodesIterable(model)";
  SNode md56=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a293a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer56=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a393a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat56,md56,transformer56));
  String cat57="SModel: nodesIterator()->new NodesIterable(model).iterator()";
  SNode md57=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a004a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer57=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a104a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat57,md57,transformer57));
  String cat58="SModel: removeRoot->removeRootNode";
  SNode md58=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a804a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer58=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a904a1(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first(),SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat58,md58,transformer58));
  String cat59="SModel: addRoot->addRootNode";
  SNode md59=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a614a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer59=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a714a1(ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(usage,"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"actualArgument",true)).first(),SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat59,md59,transformer59));
  String cat60="SModel: rootsIterator->getRootNodes().iterator()";
  SNode md60=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a424a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer60=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a524a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat60,md60,transformer60));
  String cat61="SModel: roots->getRootNodes";
  SNode md61=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a234a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer61=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a334a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat61,md61,transformer61));
  String cat62="SModel: isNotEditable->isReadOnly";
  SNode md62=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a044a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer62=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a144a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat62,md62,transformer62));
  String cat63="SModel: isTransient->instanceof TransientSModel";
  SNode md63=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a844a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer63=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a944a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat63,md63,transformer63));
  String cat64="SModel: getLongName->SNodeOperations.getModelLongName";
  SNode md64=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a654a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer64=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a754a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat64,md64,transformer64));
  String cat65="SModel: getStereotype->SNodeOperations.getModelStereotype";
  SNode md65=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a464a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer65=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a564a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat65,md65,transformer65));
  String cat66="SModel: getSModelFqName->((SModelRefernce)getReference()).getModelFqName";
  SNode md66=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a274a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer66=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a374a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat66,md66,transformer66));
  String cat67="SModel: getSModelId->getModelId";
  SNode md67=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a084a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer67=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a184a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat67,md67,transformer67));
  String cat68="SModel: getSModelReference->getReference";
  SNode md68=SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_f4dkew_a0a0a884a1(),"operation",true),"jetbrains.mps.baseLanguage.structure.InstanceMethodCallOperation"),"baseMethodDeclaration",false);
  _FunctionTypes._void_P1_E0<? super SNode> transformer68=new _Adapters._return_P1_E0_to__void_P1_E0_adapter<SNode>(new _FunctionTypes._return_P1_E0<SNode,SNode>(){
    public SNode invoke(    SNode usage){
      return SNodeOperations.replaceWithAnother(SNodeOperations.getParent(usage),_quotation_createNode_f4dkew_a0a0a0a984a1(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(usage),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true)));
    }
  }
);
  ListSequence.fromList(transformations).addElement(MultiTuple.<String,SNode,_FunctionTypes._void_P1_E0<? super SNode>>from(cat68,md68,transformer68));
  return transformations;
}
