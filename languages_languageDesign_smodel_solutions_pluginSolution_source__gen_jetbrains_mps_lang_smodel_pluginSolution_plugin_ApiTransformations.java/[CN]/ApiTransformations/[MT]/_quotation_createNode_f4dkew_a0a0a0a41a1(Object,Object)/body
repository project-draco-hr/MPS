{
  SNode quotedNode_3=null;
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  quotedNode_3=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall",null,null,GlobalScope.getInstance(),false);
  quotedNode_3.setReference("classConcept",SReference.create("classConcept",quotedNode_3,SModelReference.fromString("f:java_stub#8865b7a8-5271-43d3-884c-6fd1d9cfdd34#org.jetbrains.mps.openapi.model(MPS.OpenAPI/org.jetbrains.mps.openapi.model@java_stub)"),jetbrains.mps.smodel.SNodeId.fromString("~SNodeAccessUtil")));
  quotedNode_3.setReference("baseMethodDeclaration",SReference.create("baseMethodDeclaration",quotedNode_3,SModelReference.fromString("f:java_stub#8865b7a8-5271-43d3-884c-6fd1d9cfdd34#org.jetbrains.mps.openapi.model(MPS.OpenAPI/org.jetbrains.mps.openapi.model@java_stub)"),jetbrains.mps.smodel.SNodeId.fromString("~SNodeAccessUtil.setReferenceTarget(org.jetbrains.mps.openapi.model.SNode,java.lang.String,org.jetbrains.mps.openapi.model.SNode):void")));
  quotedNode_4=(SNode)parameter_1;
  if (quotedNode_4 != null) {
    quotedNode_3.addChild("actualArgument",HUtil.copyIfNecessary(quotedNode_4));
  }
{
    List<SNode> nodes=(List<SNode>)parameter_2;
    for (    SNode child : nodes) {
      quotedNode_3.addChild("actualArgument",HUtil.copyIfNecessary(child));
    }
  }
  return quotedNode_3;
}
