{
  SNode quotedNode_2=null;
  SNode quotedNode_3=null;
  quotedNode_2=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall",null,null,GlobalScope.getInstance(),false);
  quotedNode_2.setReference("baseMethodDeclaration",jetbrains.mps.smodel.SReference.create("baseMethodDeclaration",quotedNode_2,SModelReference.fromString("f:java_stub#8865b7a8-5271-43d3-884c-6fd1d9cfdd34#org.jetbrains.mps.openapi.model(MPS.OpenAPI/org.jetbrains.mps.openapi.model@java_stub)"),SNodeId.fromString("~SNodeUtil.getDebugText(org.jetbrains.mps.openapi.model.SNode):java.lang.String")));
  quotedNode_2.setReference("classConcept",jetbrains.mps.smodel.SReference.create("classConcept",quotedNode_2,SModelReference.fromString("f:java_stub#8865b7a8-5271-43d3-884c-6fd1d9cfdd34#org.jetbrains.mps.openapi.model(MPS.OpenAPI/org.jetbrains.mps.openapi.model@java_stub)"),SNodeId.fromString("~SNodeUtil")));
  quotedNode_3=(SNode)parameter_1;
  if (quotedNode_3 != null) {
    quotedNode_2.addChild("actualArgument",HUtil.copyIfNecessary(quotedNode_3));
  }
  return quotedNode_2;
}
