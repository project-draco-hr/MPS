{
  return new IJob(){
    public IResult execute(    final Iterable<IResource> input,    final IJobMonitor monitor,    final IParametersPool pool){
      Iterable<IResource> _output_wf1ya0_a0a=null;
switch (0) {
case 0:
        for (        IResource resource : Sequence.fromIterable(input)) {
          TResource tres=new TResource().assignFrom((TResource)resource);
          if (tres.module() == null) {
            return new IResult.FAILURE(_output_wf1ya0_a0a);
          }
          if (!(tres.module().isCompileInMPS())) {
            continue;
          }
          CompilationResult compilationResult;
          compilationResult=new ModuleMaker().make(CollectionUtil.set(tres.module()),new EmptyProgressIndicator());
          if (compilationResult != null && compilationResult.getErrors() > 0) {
            return new IResult.FAILURE(_output_wf1ya0_a0a);
          }
          if (tres.module().reloadClassesAfterGeneration()) {
            _output_wf1ya0_a0a=Sequence.fromIterable(_output_wf1ya0_a0a).concat(Sequence.fromIterable(Sequence.<IResource>singleton(tres)));
          }
        }
default :
      return new IResult.SUCCESS(_output_wf1ya0_a0a);
  }
}
}
;
}
