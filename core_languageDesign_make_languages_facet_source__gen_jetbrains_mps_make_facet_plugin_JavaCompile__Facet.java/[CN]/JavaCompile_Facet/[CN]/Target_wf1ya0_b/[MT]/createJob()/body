{
  return new IJob(){
    public IResult execute(    final Iterable<IResource> input,    final IJobMonitor monitor,    final IParametersPool pool){
      Iterable<IResource> _output_wf1ya0_a0b=null;
switch (0) {
case 0:
        boolean refreshed=false;
      for (      IResource resource : Sequence.fromIterable(input)) {
        TResource tres=new TResource().assignFrom((TResource)resource);
        if (tres.module() == null) {
          return new IResult.FAILURE(_output_wf1ya0_a0b);
        }
        if (tres.module().isCompileInMPS()) {
          continue;
        }
        if (MPSCore.getInstance().isTestMode()) {
          return new IResult.FAILURE(_output_wf1ya0_a0b);
        }
        IAuxProjectPeer peer=pool.parameters(new ITarget.Name("checkParameters"),Generate_Facet.Target_fi61u2_a.Variables.class).project().getComponent(IAuxProjectPeer.class);
        if (peer == null) {
          return new IResult.FAILURE(_output_wf1ya0_a0b);
        }
        if (!(refreshed)) {
          peer.getJavaCompiler().refreshFiles();
          refreshed=true;
        }
        peer.getJavaCompiler().compileModule(tres.module());
        if (!(peer.getJavaCompiler().compileModule(tres.module()))) {
          return new IResult.FAILURE(_output_wf1ya0_a0b);
        }
        if (tres.module().reloadClassesAfterGeneration()) {
          _output_wf1ya0_a0b=Sequence.fromIterable(_output_wf1ya0_a0b).concat(Sequence.fromIterable(Sequence.<IResource>singleton(tres)));
        }
      }
default :
    return new IResult.SUCCESS(_output_wf1ya0_a0b);
}
}
}
;
}
