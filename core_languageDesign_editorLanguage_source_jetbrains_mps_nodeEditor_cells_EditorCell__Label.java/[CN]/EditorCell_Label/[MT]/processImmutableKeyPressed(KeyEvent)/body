{
  if (isNotApplicableKeyEvent(keyEvent))   return false;
  myCaretIsVisible=true;
  String myText=myTextLine.getText();
  int caretPosition=myTextLine.getCaretPosition();
  EditorComponent editor=getEditorContext().getNodeEditorComponent();
  if ((keyEvent.isControlDown() && keyEvent.getKeyCode() == KeyEvent.VK_LEFT)) {
    if (caretPosition <= 0) {
      return false;
    }
    int position=0;
    if (!isFirstPositionAllowed()) {
      position++;
    }
    if (!isCaretPositionAllowed(position)) {
      return false;
    }
    if (position == getCaretPosition()) {
      return false;
    }
    setCaretPosition(position,keyEvent.isShiftDown());
    editor.resetLastCaretX();
    ensureCaretVisible();
    return true;
  }
  if (keyEvent.isControlDown() && keyEvent.getKeyCode() == KeyEvent.VK_RIGHT) {
    if (caretPosition >= myText.length()) {
      return false;
    }
    int position=myText.length();
    if (!isLastPositionAllowed()) {
      position--;
    }
    if (!isCaretPositionAllowed(position)) {
      return false;
    }
    if (position == getCaretPosition()) {
      return false;
    }
    setCaretPosition(position,keyEvent.isShiftDown());
    editor.resetLastCaretX();
    ensureCaretVisible();
    return true;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_HOME && keyEvent.isShiftDown()) {
    if (caretPosition <= 0)     return false;
    if (!isCaretPositionAllowed(0))     return false;
    setCaretPosition(0,true);
    editor.resetLastCaretX();
    ensureCaretVisible();
    return true;
  }
  if (keyEvent.getKeyCode() == KeyEvent.VK_END && keyEvent.isShiftDown()) {
    if (caretPosition >= myText.length())     return false;
    if (!isCaretPositionAllowed(myText.length()))     return false;
    setCaretPosition(myText.length(),true);
    editor.resetLastCaretX();
    ensureCaretVisible();
    return true;
  }
  return false;
}
