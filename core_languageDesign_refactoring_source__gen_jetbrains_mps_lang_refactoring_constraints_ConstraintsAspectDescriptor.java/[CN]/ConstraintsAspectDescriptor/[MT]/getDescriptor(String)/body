{
  if ("jetbrains.mps.lang.refactoring.structure.OldRefactoring".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.OldRefactoring"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.RequiredAdditionalArgument".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.RequiredAdditionalArgument"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.IsApplicableClause".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.IsApplicableClause"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.DoRefactorClause".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.DoRefactorClause"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.RequiredAdditionalArgumentReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new RequiredAdditionalArgumentReference_Constraints());
  }
  if ("jetbrains.mps.lang.refactoring.structure.UpdateModelClause".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new UpdateModelClause_Constraints());
  }
  if ("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_SModel".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_SModel"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.GetModelsToGenerateClause".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.GetModelsToGenerateClause"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.RequiredUserEnteredArgument".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.RequiredUserEnteredArgument"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.FilterArgumentClause".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.FilterArgumentClause"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_UserArgument".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_UserArgument"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.UpdateModelByDefaultOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new UpdateModelByDefaultOperation_Constraints());
  }
  if ("jetbrains.mps.lang.refactoring.structure.ChangeFeatureNameOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ChangeFeatureNameOperation_Constraints());
  }
  if ("jetbrains.mps.lang.refactoring.structure.ChooseComponentClause".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ChooseComponentClause"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.UpdateModelProcedure".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.UpdateModelProcedure"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.InitialValueClause".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.InitialValueClause"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.AbstractMoveExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.AbstractMoveExpression"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodeExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodeExpression"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodesExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.AbstractMoveNodesExpression"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.MoveNodeToModelExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.MoveNodeToModelExpression"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.MoveNodeToNodeExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.MoveNodeToNodeExpression"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.MoveNodesToModelExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.MoveNodesToModelExpression"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.MoveNodesToNodeExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.MoveNodesToNodeExpression"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.AffectedNodesClause".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.AffectedNodesClause"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.DeleteFeatureOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new DeleteFeatureOperation_Constraints());
  }
  if ("jetbrains.mps.lang.refactoring.structure.IsApplicableToModelClause".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.IsApplicableToModelClause"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_Model".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_Model"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.GetModelsToUpdateClause".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.GetModelsToUpdateClause"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.ExecuteFindersExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ExecuteFindersExpression_Constraints());
  }
  if ("jetbrains.mps.lang.refactoring.structure.FinderReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.FinderReference"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.NodesToOpenClause".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.NodesToOpenClause"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.NodesExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.NodesExpression"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.NodeExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.NodeExpression"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.ModelDescriptorExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ModelDescriptorExpression"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.ModuleExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ModuleExpression"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.ProjectExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ProjectExpression"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.ScopeExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ScopeExpression"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.OperationContextExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.OperationContextExpression"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.RefactoringAction".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new RefactoringAction_Constraints());
  }
  if ("jetbrains.mps.lang.refactoring.structure.MergeNodeWithAnotherNodeExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.MergeNodeWithAnotherNodeExpression"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.RefactoringTarget".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.RefactoringTarget"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.ModelTarget".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ModelTarget"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.ModuleTarget".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ModuleTarget"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.NodeTarget".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.NodeTarget"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.IsApplicableToModuleClause".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.IsApplicableToModuleClause"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_Module".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_Module"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.IsApplicableToNodeClause".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.IsApplicableToNodeClause"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_SNode".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_SNode"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.RefactoringField".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.RefactoringField"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.RefactoringParameter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.RefactoringParameter"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.AskExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AskExpression_Constraints());
  }
  if ("jetbrains.mps.lang.refactoring.structure.RefactoringParameterReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new RefactoringParameterReference_Constraints());
  }
  if ("jetbrains.mps.lang.refactoring.structure.RefactoringFieldReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new RefactoringFieldReference_Constraints());
  }
  if ("jetbrains.mps.lang.refactoring.structure.InitClause".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.InitClause"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.MPSParameterChooser".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.MPSParameterChooser"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.FilterParameterClause".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.FilterParameterClause"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_RefactoringParameter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ConceptFunctionParameter_RefactoringParameter"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.CustomParameterChooser".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.CustomParameterChooser"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.CommitClause".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.CommitClause"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.Refactoring".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.Refactoring"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.DoWhenDoneClause".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.DoWhenDoneClause"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.RefactoringArgument".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.RefactoringArgument"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.RefactoringArgumentReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.RefactoringArgumentReference"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.RefactoringParameterChooser".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.RefactoringParameterChooser"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.InitialPropertyValueClause".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.InitialPropertyValueClause"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.ContextMemberOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ContextMemberOperation_Constraints());
  }
  if ("jetbrains.mps.lang.refactoring.structure.ModelDescriptorOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ModelDescriptorOperation"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.ModuleOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ModuleOperation"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.NodeOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.NodeOperation"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.NodesOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.NodesOperation"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.OperationContextOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.OperationContextOperation"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.ProjectOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ProjectOperation"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.ScopeOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ScopeOperation"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.RefactoringContext_ConceptFunctionParameter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.RefactoringContext_ConceptFunctionParameter"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.ContextType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ContextType"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.ModelsToGenerateClause".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ModelsToGenerateClause"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.SettingsRefactoringContext_ConceptFunctionParameter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.SettingsRefactoringContext_ConceptFunctionParameter"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.ChooserRefactoringContext_ConceptFunctionParameter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ChooserRefactoringContext_ConceptFunctionParameter"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.SetValueStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new SetValueStatement_Constraints());
  }
  if ("jetbrains.mps.lang.refactoring.structure.ErrorStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ErrorStatement_Constraints());
  }
  if ("jetbrains.mps.lang.refactoring.structure.ComponentExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ComponentExpression_Constraints());
  }
  if ("jetbrains.mps.lang.refactoring.structure.RefactoringContextExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new RefactoringContextExpression_Constraints());
  }
  if ("jetbrains.mps.lang.refactoring.structure.ChangeFeatureNameExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ChangeFeatureNameExpression"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.DeleteFeatureExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.DeleteFeatureExpression"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.AbstractUIArgumentExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AbstractUIArgumentExpression_Constraints());
  }
  if ("jetbrains.mps.lang.refactoring.structure.MPSParameterType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.MPSParameterType"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.ModelMPSParameterType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ModelMPSParameterType"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.ModuleMPSParameterType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.ModuleMPSParameterType"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.NodeMPSParameterType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.NodeMPSParameterType"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.StringMPSParameterType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.StringMPSParameterType"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.BooleanMPSParameterType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.BooleanMPSParameterType"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.IntMPSParameterType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.IntMPSParameterType"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.AskBooleanExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AskBooleanExpression_Constraints());
  }
  if ("jetbrains.mps.lang.refactoring.structure.MainProjectOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.refactoring.structure.MainProjectOperation"));
  }
  if ("jetbrains.mps.lang.refactoring.structure.ModelsToGenerateByDefault".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ModelsToGenerateByDefault_Constraints());
  }
  return null;
}
