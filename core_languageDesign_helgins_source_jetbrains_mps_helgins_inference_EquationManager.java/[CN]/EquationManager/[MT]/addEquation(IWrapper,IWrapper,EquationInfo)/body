{
  IWrapper lhsRepresentator=getRepresentatorWrapper(lhs);
  IWrapper rhsRepresentator=getRepresentatorWrapper(rhs);
  if ((lhsRepresentator != null && lhsRepresentator.getNode() != null && "jetbrains.mps.baseLanguage.blTypes.structure.PrimitiveTypeDescriptor".equals(lhsRepresentator.getNode().getConceptFqName())) || (rhsRepresentator != null && rhsRepresentator.getNode() != null && "jetbrains.mps.baseLanguage.blTypes.structure.PrimitiveTypeDescriptor".equals(rhsRepresentator.getNode().getConceptFqName()))) {
    System.err.println("oy vey");
  }
  if (EqualUtil.equals(rhsRepresentator,lhsRepresentator))   return;
  if (rhsRepresentator == null || lhsRepresentator == null)   return;
  RuntimeTypeVariable varRhs=rhsRepresentator.getVariable();
  RuntimeTypeVariable varLhs=lhsRepresentator.getVariable();
  if (varRhs != null) {
    processEquation(rhsRepresentator,lhsRepresentator,errorInfo);
    return;
  }
 else {
    if (varLhs != null) {
      processEquation(lhsRepresentator,rhsRepresentator,errorInfo);
      return;
    }
  }
  if (!compareWrappers(rhsRepresentator,lhsRepresentator,errorInfo)) {
    IErrorReporter errorReporter;
    SNode nodeWithError=errorInfo == null ? null : errorInfo.getNodeWithError();
    if (errorInfo != null && errorInfo.getErrorString() != null) {
      errorReporter=new SimpleErrorReporter(errorInfo.getErrorString(),errorInfo.getRuleModel(),errorInfo.getRuleId());
    }
 else {
      String ruleModel=errorInfo == null ? null : errorInfo.getRuleModel();
      String ruleId=errorInfo == null ? null : errorInfo.getRuleId();
      errorReporter=new EquationErrorReporter(this,"incompatible types: ",rhsRepresentator," and ",lhsRepresentator,"",ruleModel,ruleId);
    }
    if (errorInfo != null) {
      errorReporter.setIntentionProvider(errorInfo.getIntentionProvider());
    }
    processErrorEquation(lhsRepresentator,rhsRepresentator,errorReporter,nodeWithError);
    return;
  }
}
