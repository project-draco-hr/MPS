{
  SNode variable=myTypeChecker.getRulesManager().provideVariable(node);
  if (variable != null) {
    return variable;
  }
 else {
    for (    SNode child : new ArrayList<SNode>(node.getChildren())) {
      SNode newChild=prepareType_internal(child);
      if (newChild != child) {
        if (newChild.getParent() != null) {
          SNode newVariable=myTypeChecker.getRuntimeSupport().createNewRuntimeTypesVariable(false);
          addEquation(newChild,newVariable,(SNode)null);
          node.replaceChild(child,newVariable);
        }
 else {
          node.replaceChild(child,newChild);
        }
      }
    }
    return node;
  }
}
