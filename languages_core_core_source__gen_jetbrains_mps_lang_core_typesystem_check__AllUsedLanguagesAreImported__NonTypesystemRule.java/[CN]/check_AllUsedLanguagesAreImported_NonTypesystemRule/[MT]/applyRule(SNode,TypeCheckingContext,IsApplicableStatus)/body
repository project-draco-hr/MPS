{
  if (SNodeOperations.getContainingRoot(root) != root) {
    return;
  }
  if (SNodeOperations.getModel(root) == null) {
    return;
  }
  Set<SLanguage> importedLanguages=new HashSet<SLanguage>();
  importedLanguages.addAll(SModelOperations.getAllImportedLanguageIds(SNodeOperations.getModel(root)));
  for (  SNode node : ListSequence.fromList(SNodeOperations.getNodeDescendants(root,MetaAdapterFactory.getConcept(new UUID(-3554657779850784990l,-7236703803128771572l),1133920641626l,"jetbrains.mps.lang.core.structure.BaseConcept"),true,new SAbstractConcept[]{}))) {
    if (!(importedLanguages.contains(node.getConcept().getLanguage()))) {
{
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(node,node.getConcept().getLanguage().getQualifiedName() + " is not imported","r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)","6268689888338468534",null,errorTarget);
{
          BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.lang.core.typesystem.ImportUsedLanguage_QuickFix",false);
          _reporter_2309309498.addIntentionProvider(intentionProvider);
        }
      }
    }
  }
}
