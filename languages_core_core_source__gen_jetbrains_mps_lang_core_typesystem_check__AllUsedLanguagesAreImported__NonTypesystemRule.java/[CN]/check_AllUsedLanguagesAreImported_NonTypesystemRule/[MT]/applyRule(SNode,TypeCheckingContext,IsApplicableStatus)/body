{
  if (SNodeOperations.getContainingRoot(root) != root) {
    return;
  }
  if (SNodeOperations.getModel(root) == null) {
    return;
  }
  Set<SLanguage> importedLanguages=new HashSet<SLanguage>();
  importedLanguages.addAll(SModelOperations.getAllImportedLanguageIds(SNodeOperations.getModel(root)));
  final SAbstractConcept C=MetaAdapterFactory.getConcept(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0xad0053c7ae9194dL,"jetbrains.mps.lang.core.structure.SideTransformInfo");
  final SContainmentLink L=MetaAdapterFactory.getContainmentLink(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x10802efe25aL,0x47bf8397520e5942L,"smodelAttribute");
  HashSet<SLanguage> reported=new HashSet<SLanguage>();
  for (  SNode node : ListSequence.fromList(SNodeOperations.getNodeDescendants(root,null,true,new SAbstractConcept[]{}))) {
    SConcept concept=node.getConcept();
    if (concept.equals(C) && L.equals(node.getContainmentLink())) {
      continue;
    }
    SLanguage language=concept.getLanguage();
    if (!(importedLanguages.contains(language)) && reported.add(language)) {
{
        MessageTarget errorTarget=new NodeMessageTarget();
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(node,language.getQualifiedName() + " is not imported","r:cec599e3-51d2-48a7-af31-989e3cbd593c(jetbrains.mps.lang.core.typesystem)","6268689888338468534",null,errorTarget);
{
          BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.lang.core.typesystem.ImportUsedLanguage_QuickFix",false);
          _reporter_2309309498.addIntentionProvider(intentionProvider);
        }
      }
    }
  }
}
