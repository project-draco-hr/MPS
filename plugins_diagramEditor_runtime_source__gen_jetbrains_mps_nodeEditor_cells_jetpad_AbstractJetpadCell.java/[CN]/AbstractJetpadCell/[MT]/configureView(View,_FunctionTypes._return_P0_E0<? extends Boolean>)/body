{
  view.focusable().set(true);
  view.prop(RootTrait.DELETE_HANDLER).set(new DeleteHandler(){
    public boolean canDelete(){
      return canDelete.invoke();
    }
    public void delete(){
      getEditorComponent().getSelectionManager().getSelection().executeAction(CellActionType.DELETE);
    }
  }
);
  view.addTrait(new ViewTraitBuilder().on(ViewEvents.KEY_PRESSED,new ViewEventHandler<KeyEvent>(){
    @Override public void handle(    View view,    KeyEvent e){
      if (!(view.focused().get())) {
        return;
      }
      MPSToolTipManager.getInstance().hideToolTip();
      if (e.is(Key.F1,ModifierKey.CONTROL)) {
        getEditorComponent().getSelectionManager().getSelection().executeAction(CellActionType.SHOW_MESSAGE);
      }
    }
  }
).build());
}
