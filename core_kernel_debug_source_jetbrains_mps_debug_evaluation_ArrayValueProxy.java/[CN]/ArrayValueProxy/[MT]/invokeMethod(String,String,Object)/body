{
  ReferenceType objectType=myThreadReference.virtualMachine().classesByName("java.lang.Object").get(0);
  List<Method> methods=objectType.methodsByName(name,jniSignature);
  if (methods.size() == 0) {
    LOG.error("method with " + name + " signature "+ jniSignature+ " not found in class "+ objectType);
    return null;
  }
  Method method=methods.get(0);
  List<Value> argValues=MirrorUtil.getValues(myThreadReference,args);
  Value result;
  try {
    result=getObjectValue().invokeMethod(myThreadReference,method,argValues,0);
  }
 catch (  Throwable t) {
    LOG.error("method invocation failed",t);
    return null;
  }
  return MirrorUtil.getValueProxy(result,myThreadReference);
}
