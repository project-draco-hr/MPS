{
  Set<SNode> set=SetSequence.fromSet(new LinkedHashSet<SNode>());
  ClassifierAndSuperClassifiersCache.ClassifiersDataSet.collectImplementedAndExtended(classifier,set,null,typeByTypeVar);
  List<SNode> result=new ArrayList<SNode>();
  ListSequence.fromList(result).addSequence(SetSequence.fromSet(set));
  SNode objectClass=SNodeOperations.getNode("6354ebe7-c22a-4a0f-ac54-50b52ab9b065/f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)","~Object");
  if (objectClass != null && !(SetSequence.fromSet(set).contains(objectClass))) {
    int indexOfFirstInterface=0;
    for (    SNode classifierInResult : set) {
      if (SNodeOperations.isInstanceOf(classifierInResult,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107796713796l,"jetbrains.mps.baseLanguage.structure.Interface"))) {
        break;
      }
      indexOfFirstInterface++;
    }
    if (indexOfFirstInterface == 0) {
      result.add(objectClass);
    }
 else {
      result.add(indexOfFirstInterface,objectClass);
    }
  }
  return result;
}
