{
  String langName=NameUtil.namespaceFromConceptFQName(name);
  final String conceptName=NameUtil.shortNameFromLongName(name);
  Language lang=ModuleRepositoryFacade.getInstance().getModule(langName,Language.class);
  if (lang != null) {
    final SModel strucModel=LanguageAspect.STRUCTURE.get(lang);
    if (strucModel != null) {
      ConceptDescriptor cd=ModelAccess.instance().runReadAction(new Computable<ConceptDescriptor>(){
        @Override public ConceptDescriptor compute(){
          for (          SNode n : strucModel.getRootNodes()) {
            if (SNodeOperations.isInstanceOf(n,SNodeUtil.conceptName_AbstractConceptDeclaration)) {
              if (conceptName.equals(n.getProperty(SNodeUtil.property_INamedConcept_name))) {
                return new InterpretedConceptDescriptor(n);
              }
            }
          }
          return null;
        }
      }
);
      if (cd != null)       return cd;
    }
  }
  return new IllegalConceptDescriptor(name);
}
