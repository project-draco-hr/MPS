{
{
    final SNode left=typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck,"leftExpression",true),"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)","1210005562793",true);
    typeCheckingContext.whenConcrete(left,new Runnable(){
      public void run(){
{
          final SNode right=typeCheckingContext.typeOf(SLinkOperations.getTarget(nodeToCheck,"rightExpression",true),"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)","1210005567145",true);
          typeCheckingContext.whenConcrete(right,new Runnable(){
            public void run(){
              boolean done=false;
              if (TypeChecker.getInstance().getSubtypingManager().isSubtype(typeCheckingContext.getEquationManager().getRepresentator(left),new _Quotations.QuotationClass_6().createNode(typeCheckingContext))) {
{
                  IMatchingPattern pattern_0=HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.samples.matrixLanguage.structure.MatrixType");
                  SNode coercedNode_0=TypeChecker.getInstance().getRuntimeSupport().coerce_(typeCheckingContext.getEquationManager().getRepresentator(right),pattern_0,typeCheckingContext);
                  if (coercedNode_0 != null) {
{
                      SNode _nodeToCheck_1029348928467=nodeToCheck;
                      BaseIntentionProvider intentionProvider=null;
                      EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)","1210171765353",0,intentionProvider);
                      typeCheckingContext.createEquation((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)","1210171765363",true),(SNode)new _Quotations.QuotationClass_7().createNode(SLinkOperations.getTarget(coercedNode_0,"scalarType",true),typeCheckingContext),_info_12389875345);
                    }
                    done=true;
                  }
 else {
                  }
                }
                if (!(done)) {
{
                    BaseIntentionProvider intentionProvider=null;
                    IErrorTarget errorTarget=new NodeErrorTarget();
                    IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(SLinkOperations.getTarget(nodeToCheck,"rightExpression",true),"Type must be Matrix but " + SNodeOperations.getConceptDeclaration(typeCheckingContext.getEquationManager().getRepresentator(right)),"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)","1210175930104",intentionProvider,errorTarget);
                  }
                }
              }
 else               if (TypeChecker.getInstance().getSubtypingManager().isSubtype(typeCheckingContext.getEquationManager().getRepresentator(right),new _Quotations.QuotationClass_9().createNode(typeCheckingContext))) {
{
                  IMatchingPattern pattern_1=HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.samples.matrixLanguage.structure.MatrixType");
                  SNode coercedNode_1=TypeChecker.getInstance().getRuntimeSupport().coerce_(typeCheckingContext.getEquationManager().getRepresentator(left),pattern_1,typeCheckingContext);
                  if (coercedNode_1 != null) {
{
                      SNode _nodeToCheck_1029348928467=nodeToCheck;
                      BaseIntentionProvider intentionProvider=null;
                      EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)","1210174269263",0,intentionProvider);
                      typeCheckingContext.createEquation((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)","1210174269273",true),(SNode)new _Quotations.QuotationClass_8().createNode(SLinkOperations.getTarget(coercedNode_1,"scalarType",true),typeCheckingContext),_info_12389875345);
                    }
                    done=true;
                  }
 else {
                  }
                }
                if (!(done)) {
{
                    BaseIntentionProvider intentionProvider=null;
                    IErrorTarget errorTarget=new NodeErrorTarget();
                    IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(SLinkOperations.getTarget(nodeToCheck,"leftExpression",true),"Type must be Matrix but " + SNodeOperations.getConceptDeclaration(typeCheckingContext.getEquationManager().getRepresentator(left)),"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)","1210176257229",intentionProvider,errorTarget);
                  }
                }
              }
 else {
                final SNode v_typevar_1210174591724=typeCheckingContext.createNewRuntimeTypesVariable();
{
                  SNode _nodeToCheck_1029348928467=nodeToCheck;
                  BaseIntentionProvider intentionProvider=null;
                  EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)","1210174591725",0,intentionProvider);
                  typeCheckingContext.createEquation((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)","1210174591729",true),(SNode)typeCheckingContext.getEquationManager().getRepresentator(v_typevar_1210174591724),_info_12389875345);
                }
{
                  SNode _nodeToCheck_1029348928467=SLinkOperations.getTarget(nodeToCheck,"leftExpression",true);
                  BaseIntentionProvider intentionProvider=null;
                  EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)","1210174591731",0,intentionProvider);
                  typeCheckingContext.createEquation((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)","1210174591735",true),(SNode)typeCheckingContext.getEquationManager().getRepresentator(v_typevar_1210174591724),_info_12389875345);
                }
{
                  SNode _nodeToCheck_1029348928467=SLinkOperations.getTarget(nodeToCheck,"rightExpression",true);
                  BaseIntentionProvider intentionProvider=null;
                  EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)","1210174591739",0,intentionProvider);
                  typeCheckingContext.createEquation((SNode)typeCheckingContext.typeOf(_nodeToCheck_1029348928467,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)","1210174591743",true),(SNode)typeCheckingContext.getEquationManager().getRepresentator(v_typevar_1210174591724),_info_12389875345);
                }
                done=true;
              }
            }
          }
,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)","1210004912543",false,false);
        }
      }
    }
,"r:00000000-0000-4000-0000-011c89590452(jetbrains.mps.samples.matrixLanguage.typesystem)","1210004689795",false,false);
  }
}
