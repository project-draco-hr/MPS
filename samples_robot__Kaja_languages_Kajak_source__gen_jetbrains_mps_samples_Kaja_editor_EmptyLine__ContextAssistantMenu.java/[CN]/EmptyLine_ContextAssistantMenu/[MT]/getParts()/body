{
  return Arrays.<MenuPart>asList(new ActionItemMenuPart(){
    @Override protected String getText(    TransformationMenuContext context){
      final EditorContext editorContext=context.getEditorContext();
      final SNode node=context.getNode();
      return "Step forward";
    }
    @Override protected void execute(    TransformationMenuContext context){
      final EditorContext editorContext=context.getEditorContext();
      final SNode node=context.getNode();
      SNodeOperations.insertPrevSiblingChild(node,SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x2d523c5e4cc45762L,"jetbrains.mps.samples.Kaja.structure.Step")),null));
    }
  }
,new ActionItemMenuPart(){
    @Override protected String getText(    TransformationMenuContext context){
      final EditorContext editorContext=context.getEditorContext();
      final SNode node=context.getNode();
      return "Turn left";
    }
    @Override protected void execute(    TransformationMenuContext context){
      final EditorContext editorContext=context.getEditorContext();
      final SNode node=context.getNode();
      SNodeOperations.insertPrevSiblingChild(node,SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x2de971c785ec9f8bL,"jetbrains.mps.samples.Kaja.structure.LeftTurn")),null));
    }
  }
,new ConditionalMenuPart(){
    @Override protected boolean isApplicable(    TransformationMenuContext context){
      final EditorContext editorContext=context.getEditorContext();
      final SNode node=context.getNode();
      return eq_1z2qg6_a0c0a0a2a0a0(SNodeOperations.getParent(SNodeOperations.getNodeAncestor(node,MetaAdapterFactory.getConcept(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x2de971c785f06a3fL,"jetbrains.mps.samples.Kaja.structure.CommandList"),false,false)),SNodeOperations.getContainingRoot(node));
    }
    @Override protected List<MenuPart> getParts(){
      return Arrays.<MenuPart>asList(new ActionItemMenuPart(){
        @Override protected String getText(        TransformationMenuContext context){
          final EditorContext editorContext=context.getEditorContext();
          final SNode node=context.getNode();
          return "Define a routine";
        }
        @Override protected void execute(        TransformationMenuContext context){
          final EditorContext editorContext=context.getEditorContext();
          final SNode node=context.getNode();
{
            SNode inserted=SNodeOperations.insertPrevSiblingChild(node,SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x2de971c785ed6f79L,"jetbrains.mps.samples.Kaja.structure.RoutineDefinition")),null));
            editorContext.selectWRTFocusPolicy(inserted);
          }
        }
      }
);
    }
  }
,new SubMenuMenuPart(){
    @Override protected String getText(    EditorContext context,    SNode node){
      return "Control flow";
    }
    @Override protected List<MenuPart> getParts(){
      return Arrays.<MenuPart>asList(new MenuPart[]{new ActionItemMenuPart(){
        @Override protected String getText(        TransformationMenuContext context){
          final EditorContext editorContext=context.getEditorContext();
          final SNode node=context.getNode();
          return "Repeat";
        }
        @Override protected void execute(        TransformationMenuContext context){
          final EditorContext editorContext=context.getEditorContext();
          final SNode node=context.getNode();
{
            SNode inserted=SNodeOperations.insertPrevSiblingChild(node,SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x2de971c785ecd14cL,"jetbrains.mps.samples.Kaja.structure.Repeat")),null));
            editorContext.selectWRTFocusPolicy(inserted);
          }
        }
      }
,new ActionItemMenuPart(){
        @Override protected String getText(        TransformationMenuContext context){
          final EditorContext editorContext=context.getEditorContext();
          final SNode node=context.getNode();
          return "While";
        }
        @Override protected void execute(        TransformationMenuContext context){
          final EditorContext editorContext=context.getEditorContext();
          final SNode node=context.getNode();
{
            SNode inserted=SNodeOperations.insertPrevSiblingChild(node,SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x2de971c785ecece0L,"jetbrains.mps.samples.Kaja.structure.While")),null));
            editorContext.selectWRTFocusPolicy(inserted);
          }
        }
      }
,new ActionItemMenuPart(){
        @Override protected String getText(        TransformationMenuContext context){
          final EditorContext editorContext=context.getEditorContext();
          final SNode node=context.getNode();
          return "If";
        }
        @Override protected void execute(        TransformationMenuContext context){
          final EditorContext editorContext=context.getEditorContext();
          final SNode node=context.getNode();
{
            SNode inserted=SNodeOperations.insertPrevSiblingChild(node,SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x2de971c785ec9fbeL,"jetbrains.mps.samples.Kaja.structure.IfStatement")),null));
            editorContext.selectWRTFocusPolicy(inserted);
          }
        }
      }
});
    }
  }
,new SubMenuMenuPart(){
    @Override protected String getText(    EditorContext context,    SNode node){
      return "Other actions";
    }
    @Override protected List<MenuPart> getParts(){
      return Arrays.<MenuPart>asList(new MenuPart[]{new IncludeMenuMenuPart(){
        @Nullable @Override protected TransformationMenuLookup getMenuLookup(        TransformationMenuContext context){
          final SNode node=context.getNode();
          final EditorContext editorContext=context.getEditorContext();
          return new NamedMenuLookup(LanguageRegistry.getInstance(editorContext.getRepository()),MetaAdapterFactory.getConcept(0x49a08c51fe543ccL,0xbd998b46d641d7f5L,0x2de971c785ee0a16L,"jetbrains.mps.samples.Kaja.structure.EmptyLine"),"jetbrains.mps.samples.Kaja.editor.OtherCommands");
        }
      }
});
    }
  }
);
}
