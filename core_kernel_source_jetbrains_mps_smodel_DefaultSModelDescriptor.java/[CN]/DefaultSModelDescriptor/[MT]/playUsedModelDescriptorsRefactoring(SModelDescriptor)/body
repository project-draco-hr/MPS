{
  int currentVersion=modelDescriptor.getVersion();
  int usedVersion=mySModel.getUsedVersion(modelDescriptor.getSModelReference());
  if (myIsTestRefactoringMode) {
    System.err.println(this + ": current version of used model " + modelDescriptor.getLongName()+ " is "+ currentVersion+ ", used version is "+ usedVersion);
  }
  if (currentVersion > usedVersion) {
    if (myIsTestRefactoringMode) {
      System.err.println("updating a model " + this);
    }
    SModel importedModel=modelDescriptor.getSModel();
    RefactoringHistory refactoringHistory=importedModel.getRefactoringHistory();
    for (    RefactoringContext refactoringContext : refactoringHistory.getRefactoringContexts()) {
      if (refactoringContext.getModelVersion() <= usedVersion)       continue;
      refactoringContext.getRefactoring().updateModel(mySModel,refactoringContext);
    }
    mySModel.updateImportedModelUsedVersion(modelDescriptor.getSModelReference(),currentVersion);
  }
  return;
}
