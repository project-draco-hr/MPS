{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("classifier",new BaseNodeReferenceSearchScopeProvider(){
    public boolean hasPresentation(){
      return true;
    }
    public String getPresentation(    final IOperationContext operationContext,    final PresentationReferentConstraintContext _context){
      return String.valueOf(_context.getParameterNode());
    }
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      return new VisibleClassifiersScope(_context.getEnclosingNode(),AbstractClassifiersScope.INTERFACE,operationContext.getScope()).getNodes(new Condition<SNode>(){
        public boolean met(        SNode cls){
          return Classifier_Behavior.call_isDescendant_7165541881557222913(cls,SLinkOperations.getTarget(new ResourceClassifierType_Constraints.QuotationClass_ymgo28_a0a0a0a0a0a0e0a1a0b0i().createNode(),"classifier",false));
        }
      }
);
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:6df86908-c97f-4644-97f0-5eff375e8e15(jetbrains.mps.make.facet.constraints)","119022571402207416");
    }
  }
);
  return result;
}
