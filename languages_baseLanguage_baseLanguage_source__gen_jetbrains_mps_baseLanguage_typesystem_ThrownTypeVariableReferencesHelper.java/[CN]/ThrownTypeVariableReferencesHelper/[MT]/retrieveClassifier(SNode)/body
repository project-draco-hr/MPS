{
  SNode myClassifier;
  if (SNodeOperations.isInstanceOf(currentType,"jetbrains.mps.baseLanguage.structure.TypeVariableReference")) {
    Set<SNode> visited=SetSequence.fromSet(new HashSet<SNode>());
    SNode looseType=BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),SNodeOperations.as(currentType,"jetbrains.mps.baseLanguage.structure.TypeVariableReference"),"virtual_getLooseType_5744862332972792015",new Object[]{visited});
    while (looseType != null && SNodeOperations.isInstanceOf(looseType,"jetbrains.mps.baseLanguage.structure.UpperBoundType")) {
      looseType=SLinkOperations.getTarget(SNodeOperations.cast(looseType,"jetbrains.mps.baseLanguage.structure.UpperBoundType"),"bound",true);
    }
    if (looseType == null || !(SNodeOperations.isInstanceOf(looseType,"jetbrains.mps.baseLanguage.structure.ClassifierType"))) {
      return null;
    }
    myClassifier=SLinkOperations.getTarget(SNodeOperations.cast(looseType,"jetbrains.mps.baseLanguage.structure.ClassifierType"),"classifier",false);
  }
 else   if (SNodeOperations.isInstanceOf(currentType,"jetbrains.mps.baseLanguage.structure.ClassifierType")) {
    myClassifier=SLinkOperations.getTarget(SNodeOperations.cast(currentType,"jetbrains.mps.baseLanguage.structure.ClassifierType"),"classifier",false);
  }
 else {
    myClassifier=null;
  }
  return myClassifier;
}
