{
  CommandProcessor.instance().executeCommand(new Runnable(){
    public void run(){
      String role=reference.getRole();
      SemanticNode sourceNode=reference.getSourceNode();
      SModel model=sourceNode.getModel();
      String packageName=sourceNode.getClass().getPackage().getName();
      Class cls=sourceNode.getClass();
      SemanticNode oldTarget=reference.getTargetNode();
      while (cls != SemanticNode.class) {
        try {
          String className=cls.getName();
          className=className.substring(className.lastIndexOf('.') + 1);
          Class resolveClass=Class.forName(packageName + ".resolve.Resolver",true,ClassLoaderManager.getInstance().getClassLoader());
          Method m=resolveClass.getMethod("resolveForRole" + role + "In"+ className,SemanticReference.class,Class.class);
          boolean success=(Boolean)m.invoke(null,reference,cls);
          if (success) {
            sourceNode.removeReference(reference);
          }
 else {
            reference.setBad();
          }
          return;
        }
 catch (        NullPointerException e) {
          return;
        }
catch (        Exception e) {
        }
        cls=cls.getSuperclass();
      }
      reference.setGood();
      reference.setResolveInfo(null);
    }
  }
,"resolve");
}
