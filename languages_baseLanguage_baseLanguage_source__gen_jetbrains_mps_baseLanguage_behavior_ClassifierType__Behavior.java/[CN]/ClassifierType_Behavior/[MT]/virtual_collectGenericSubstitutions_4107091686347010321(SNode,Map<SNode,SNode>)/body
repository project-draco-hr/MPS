{
  if (ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(thisNode,"classifier",false),"typeVariableDeclaration",true)).any(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return MapSequence.fromMap(substitutions).containsKey(it);
    }
  }
)) {
    return;
  }
  if (ListSequence.fromList(SLinkOperations.getTargets(thisNode,"parameter",true)).isEmpty() && ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(thisNode,"classifier",false),"typeVariableDeclaration",true)).isNotEmpty()) {
    for (    SNode tvd : ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(thisNode,"classifier",false),"typeVariableDeclaration",true))) {
      MapSequence.fromMap(substitutions).put(tvd,new ClassifierType_Behavior.QuotationClass_hz3823_a1a0a0b0c0t().createNode());
    }
  }
 else {
{
      Iterator<SNode> tvd_it=ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(thisNode,"classifier",false),"typeVariableDeclaration",true)).iterator();
      Iterator<SNode> tval_it=ListSequence.fromList(SLinkOperations.getTargets(thisNode,"parameter",true)).iterator();
      SNode tvd_var;
      SNode tval_var;
      while (tvd_it.hasNext() && tval_it.hasNext()) {
        tvd_var=tvd_it.next();
        tval_var=tval_it.next();
        MapSequence.fromMap(substitutions).put(tvd_var,SNodeOperations.copyNode(tval_var));
        if (SNodeOperations.isInstanceOf(tval_var,"jetbrains.mps.baseLanguage.structure.IGenericType")) {
          IGenericType_Behavior.call_collectGenericSubstitutions_4107091686347010321(SNodeOperations.cast(tval_var,"jetbrains.mps.baseLanguage.structure.IGenericType"),substitutions);
        }
      }
    }
  }
  if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode,"classifier",false),"jetbrains.mps.baseLanguage.structure.AnonymousClass")) {
    IGenericType_Behavior.call_collectGenericSubstitutions_4107091686347010321(ClassConcept_Behavior.call_getSuperclass_1240936569950(SNodeOperations.cast(SLinkOperations.getTarget(thisNode,"classifier",false),"jetbrains.mps.baseLanguage.structure.AnonymousClass")),substitutions);
  }
 else   if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode,"classifier",false),"jetbrains.mps.baseLanguage.structure.ClassConcept")) {
    IGenericType_Behavior.call_collectGenericSubstitutions_4107091686347010321(SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(thisNode,"classifier",false),"jetbrains.mps.baseLanguage.structure.ClassConcept"),"superclass",true),substitutions);
    for (    SNode ifc : ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(thisNode,"classifier",false),"jetbrains.mps.baseLanguage.structure.ClassConcept"),"implementedInterface",true))) {
      IGenericType_Behavior.call_collectGenericSubstitutions_4107091686347010321(ifc,substitutions);
    }
  }
 else   if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode,"classifier",false),"jetbrains.mps.baseLanguage.structure.Interface")) {
    for (    SNode ifc : ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(thisNode,"classifier",false),"jetbrains.mps.baseLanguage.structure.Interface"),"extendedInterface",true))) {
      IGenericType_Behavior.call_collectGenericSubstitutions_4107091686347010321(ifc,substitutions);
    }
  }
  if (!(ClassifierMember_Behavior.call_isStatic_8986964027630462944(SLinkOperations.getTarget(thisNode,"classifier",false)))) {
    SNode enclosing=SNodeOperations.getAncestor(SLinkOperations.getTarget(thisNode,"classifier",false),"jetbrains.mps.baseLanguage.structure.Classifier",false,false);
    if ((enclosing != null)) {
      SNode etype=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ClassifierType",null);
      SLinkOperations.setTarget(etype,"classifier",enclosing,false);
      for (      SNode tvd : ListSequence.fromList(SLinkOperations.getTargets(enclosing,"typeVariableDeclaration",true))) {
        SNode tvr=SNodeFactoryOperations.addNewChild(etype,"parameter","jetbrains.mps.baseLanguage.structure.TypeVariableReference");
        SLinkOperations.setTarget(tvr,"typeVariableDeclaration",tvd,false);
      }
      IGenericType_Behavior.call_collectGenericSubstitutions_4107091686347010321(etype,substitutions);
    }
  }
}
