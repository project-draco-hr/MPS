{
  if (MapSequence.fromMap(substitutions).containsKey(SLinkOperations.getTarget(thisNode,"classifier",false))) {
    return;
  }
  MapSequence.fromMap(substitutions).put(SLinkOperations.getTarget(thisNode,"classifier",false),SLinkOperations.getTarget(thisNode,"classifier",false));
  if (ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(thisNode,"classifier",false),"typeVariableDeclaration",true)).any(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return MapSequence.fromMap(substitutions).containsKey(it);
    }
  }
)) {
    return;
  }
  final Set<SNode> tvds=SetSequence.fromSetWithValues(new HashSet<SNode>(),SLinkOperations.getTargets(SLinkOperations.getTarget(thisNode,"classifier",false),"typeVariableDeclaration",true));
  if (Sequence.fromIterable(MapSequence.fromMap(substitutions).values()).any(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SetSequence.fromSet(tvds).contains(SLinkOperations.getTarget(SNodeOperations.as(it,"jetbrains.mps.baseLanguage.structure.TypeVariableReference"),"typeVariableDeclaration",false));
    }
  }
)) {
    return;
  }
  if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode,"classifier",false),"jetbrains.mps.baseLanguage.structure.AnonymousClass")) {
    BehaviorReflection.invokeVirtual(Void.class,BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),SNodeOperations.cast(SLinkOperations.getTarget(thisNode,"classifier",false),"jetbrains.mps.baseLanguage.structure.AnonymousClass"),"virtual_getSuperclass_1240936569950",new Object[]{}),"virtual_collectGenericSubstitutions_4107091686347010321",new Object[]{substitutions});
  }
 else   if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode,"classifier",false),"jetbrains.mps.baseLanguage.structure.ClassConcept")) {
    BehaviorReflection.invokeVirtual(Void.class,SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(thisNode,"classifier",false),"jetbrains.mps.baseLanguage.structure.ClassConcept"),"superclass",true),"virtual_collectGenericSubstitutions_4107091686347010321",new Object[]{substitutions});
    for (    SNode ifc : ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(thisNode,"classifier",false),"jetbrains.mps.baseLanguage.structure.ClassConcept"),"implementedInterface",true))) {
      BehaviorReflection.invokeVirtual(Void.class,ifc,"virtual_collectGenericSubstitutions_4107091686347010321",new Object[]{substitutions});
    }
  }
 else   if (SNodeOperations.isInstanceOf(SLinkOperations.getTarget(thisNode,"classifier",false),"jetbrains.mps.baseLanguage.structure.Interface")) {
    for (    SNode ifc : ListSequence.fromList(SLinkOperations.getTargets(SNodeOperations.cast(SLinkOperations.getTarget(thisNode,"classifier",false),"jetbrains.mps.baseLanguage.structure.Interface"),"extendedInterface",true))) {
      BehaviorReflection.invokeVirtual(Void.class,ifc,"virtual_collectGenericSubstitutions_4107091686347010321",new Object[]{substitutions});
    }
  }
  if (ListSequence.fromList(SLinkOperations.getTargets(thisNode,"parameter",true)).isEmpty() && ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(thisNode,"classifier",false),"typeVariableDeclaration",true)).isNotEmpty()) {
    for (    SNode tvd : ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(thisNode,"classifier",false),"typeVariableDeclaration",true))) {
      MapSequence.fromMap(substitutions).put(tvd,((SLinkOperations.getTarget(tvd,"bound",true) == null) ? _quotation_createNode_hz3823_a0a0a1a31a91() : SNodeOperations.copyNode(SLinkOperations.getTarget(tvd,"bound",true))));
    }
  }
 else {
{
      Iterator<SNode> tvd_it=ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(thisNode,"classifier",false),"typeVariableDeclaration",true)).iterator();
      Iterator<SNode> tval_it=ListSequence.fromList(SLinkOperations.getTargets(thisNode,"parameter",true)).iterator();
      SNode tvd_var;
      SNode tval_var;
      while (tvd_it.hasNext() && tval_it.hasNext()) {
        tvd_var=tvd_it.next();
        tval_var=tval_it.next();
        MapSequence.fromMap(substitutions).put(tvd_var,SNodeOperations.copyNode(tval_var));
        if (SNodeOperations.isInstanceOf(tval_var,"jetbrains.mps.baseLanguage.structure.IGenericType")) {
          BehaviorReflection.invokeVirtual(Void.class,SNodeOperations.cast(tval_var,"jetbrains.mps.baseLanguage.structure.IGenericType"),"virtual_collectGenericSubstitutions_4107091686347010321",new Object[]{substitutions});
        }
      }
    }
  }
  if (!(BehaviorReflection.invokeVirtual(Boolean.TYPE,SLinkOperations.getTarget(thisNode,"classifier",false),"virtual_isStatic_8986964027630462944",new Object[]{}))) {
    SNode enclosing=SNodeOperations.getAncestor(SLinkOperations.getTarget(thisNode,"classifier",false),"jetbrains.mps.baseLanguage.structure.Classifier",false,false);
    if ((enclosing != null)) {
      SNode etype=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ClassifierType",null);
      SLinkOperations.setTarget(etype,"classifier",enclosing,false);
      for (      SNode tvd : ListSequence.fromList(SLinkOperations.getTargets(enclosing,"typeVariableDeclaration",true))) {
        SNode tvr=SNodeFactoryOperations.addNewChild(etype,"parameter","jetbrains.mps.baseLanguage.structure.TypeVariableReference");
        SLinkOperations.setTarget(tvr,"typeVariableDeclaration",tvd,false);
      }
      BehaviorReflection.invokeVirtual(Void.class,etype,"virtual_collectGenericSubstitutions_4107091686347010321",new Object[]{substitutions});
    }
  }
}
