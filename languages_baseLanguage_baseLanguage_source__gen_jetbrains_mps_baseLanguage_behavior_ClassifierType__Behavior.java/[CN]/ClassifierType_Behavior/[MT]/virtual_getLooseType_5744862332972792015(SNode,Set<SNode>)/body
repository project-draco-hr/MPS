{
  SNode classifierType=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,"jetbrains.mps.baseLanguage.structure.ClassifierType")));
  SLinkOperations.setTarget(classifierType,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier"),SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier")));
  for (  SNode typeParam : SLinkOperations.getChildren(thisNode,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x102419671abL,"parameter"))) {
    ListSequence.fromList(SLinkOperations.getChildren(classifierType,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x102419671abL,"parameter"))).addElement(BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),typeParam,"virtual_getLooseType_5744862332972792015",new Object[]{visitedTypes}));
  }
  return classifierType;
}
