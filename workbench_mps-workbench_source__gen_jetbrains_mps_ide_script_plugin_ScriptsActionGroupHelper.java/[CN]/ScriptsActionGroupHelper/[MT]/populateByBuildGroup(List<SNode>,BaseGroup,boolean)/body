{
  Map<String,List<SNode>> byBuild=new HashMap<String,List<SNode>>();
  for (  SNode migrationScript : migrationScripts) {
    String build=SPropertyOperations.getString(migrationScript,MetaAdapterFactory.getProperty(new UUID(1071275047162102839l,-4887287056175405968l),1177457067821l,5299416737274925397l,"toBuild"));
    if (build == null) {
      build="<unspecified>";
    }
    if (!(byBuild.containsKey(build))) {
      byBuild.put(build,new ArrayList<SNode>());
    }
    ListSequence.fromList(byBuild.get(build)).addElement(migrationScript);
  }
  Set<String> sorted=new TreeSet<String>(byBuild.keySet());
  for (  String build : sorted) {
    BaseGroup categoryGroup=new BaseGroup("migrate to " + build,"");
    for (    SNode script : byBuild.get(build)) {
      categoryGroup.add(new RunMigrationScriptAction(script,ScriptsActionGroupHelper.makeScriptActionName(SPropertyOperations.getString_def(script,MetaAdapterFactory.getProperty(new UUID(1071275047162102839l,-4887287056175405968l),1177457067821l,5299416737274925395l,"type"),"enhancement"),SPropertyOperations.getString(script,MetaAdapterFactory.getProperty(new UUID(1071275047162102839l,-4887287056175405968l),1177457067821l,1177457669450l,"title")),null),applyToSelection));
    }
    categoryGroup.setPopup(true);
    ownerGroup.add(categoryGroup);
  }
}
