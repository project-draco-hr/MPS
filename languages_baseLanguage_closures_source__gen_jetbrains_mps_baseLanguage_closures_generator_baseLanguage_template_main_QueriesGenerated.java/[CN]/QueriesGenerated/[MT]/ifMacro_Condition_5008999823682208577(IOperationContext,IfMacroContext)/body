{
  SNode adaptable=SNodeOperations.cast(SNodeOperations.getParent(_context.getNode()),"jetbrains.mps.baseLanguage.structure.Classifier");
  Map<SNode,SNode> theMap=(Map<SNode,SNode>)Values.THE_MAP.get(_context,adaptable);
  SNode parmType=ListSequence.fromList(SLinkOperations.getTargets(Sequence.fromIterable(Classifier_Behavior.call_methods_5292274854859311639(adaptable)).first(),"parameter",true)).findFirst(new IWhereFilter<SNode>(){
    public boolean accept(    SNode pd){
      return SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(pd,"type",true),"jetbrains.mps.baseLanguage.structure.TypeVariableReference"),"typeVariableDeclaration",false) == _context.getNode();
    }
  }
);
  return (parmType != null) && (MapSequence.fromMap(theMap).get(_context.getNode()) != null);
}
