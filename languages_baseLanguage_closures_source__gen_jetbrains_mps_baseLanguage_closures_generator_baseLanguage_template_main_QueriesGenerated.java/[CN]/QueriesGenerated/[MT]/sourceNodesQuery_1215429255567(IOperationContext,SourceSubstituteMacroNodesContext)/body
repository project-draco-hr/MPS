{
  SNode literal=_context.getNode();
  SNode ct=(SNode)Values.LITERAL_TARGET.get(_context,literal);
  if (ct != null) {
    Iterable<SNode> imds=SLinkOperations.getTargets(SLinkOperations.getTarget(ct,"classifier",false),"method",true);
    if (Sequence.fromIterable(imds).isNotEmpty()) {
      SNode imd=Sequence.fromIterable(imds).first();
      List<SNode> res=ListSequence.fromList(new ArrayList<SNode>());
      for (      SNode tt : SLinkOperations.getTargets(imd,"throwsItem",true)) {
        ListSequence.fromList(res).addElement(ClassifierTypeUtil.resolveType(tt,ct));
      }
      return res;
    }
  }
  return FunctionType_Behavior.call_getNormalizedThrowsTypes_3448422702164385781(SNodeOperations.cast(((SNode)_context.getVariable("var:nodeType")),"jetbrains.mps.baseLanguage.closures.structure.FunctionType"));
}
