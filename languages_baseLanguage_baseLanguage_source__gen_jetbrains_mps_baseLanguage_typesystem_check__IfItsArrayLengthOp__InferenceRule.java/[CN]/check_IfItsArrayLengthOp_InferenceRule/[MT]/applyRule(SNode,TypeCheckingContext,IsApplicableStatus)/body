{
  if (1 > 0) {
    return;
  }
  SReference ref=fieldRef.getReference("fieldDeclaration");
  boolean itsUnresolvedLength=ref instanceof DynamicReference && "length".equals(((DynamicReference)ref).getResolveInfo());
  if (!(itsUnresolvedLength)) {
    return;
  }
  if (!(SNodeOperations.isInstanceOf(SNodeOperations.getParent(fieldRef),"jetbrains.mps.baseLanguage.structure.DotExpression"))) {
    return;
  }
{
    final SNode operandType=TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(SNodeOperations.cast(SNodeOperations.getParent(fieldRef),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true));
    typeCheckingContext.whenConcrete(operandType,new Runnable(){
      public void run(){
        if (!(SNodeOperations.isInstanceOf(typeCheckingContext.getExpandedNode(operandType),"jetbrains.mps.baseLanguage.structure.ArrayType"))) {
          return;
        }
{
          MessageTarget errorTarget=new NodeMessageTarget();
          IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(fieldRef,"array length operation","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","6987217777982668493",null,errorTarget);
{
            BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.baseLanguage.typesystem.MakeArrayLengthOp_QuickFix",true);
            _reporter_2309309498.addIntentionProvider(intentionProvider);
          }
        }
      }
    }
,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","6987217777982668471",false,false);
  }
}
