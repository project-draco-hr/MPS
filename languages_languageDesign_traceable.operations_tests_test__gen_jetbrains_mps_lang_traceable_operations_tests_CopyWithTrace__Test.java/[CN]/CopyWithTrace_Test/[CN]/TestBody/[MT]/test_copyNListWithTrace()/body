{
  this.addNodeById("7327404875649026841");
  List<SNode> copy=TracingUtil.copyWithTrace(ListSequence.fromListAndArray(new ArrayList<SNode>(),SNodeOperations.cast(this.getNodeById("7327404875649026848"),"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration"),SNodeOperations.cast(this.getNodeById("7327404875649026875"),"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration")));
  SNode utilityCopy=ListSequence.fromList(copy).getElement(0);
  SNode callingCopy=ListSequence.fromList(copy).getElement(1);
  Assert.assertEquals(SNodeOperations.cast(this.getNodeById("7327404875649026848"),"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration"),TracingUtil.getInputNode(utilityCopy));
  Assert.assertEquals(SNodeOperations.cast(this.getNodeById("7327404875649026875"),"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration"),TracingUtil.getInputNode(callingCopy));
  Assert.assertEquals(SLinkOperations.getTarget(ListSequence.fromList(SNodeOperations.getDescendants(callingCopy,"jetbrains.mps.baseLanguage.structure.LocalStaticMethodCall",false,new String[]{})).first(),"baseMethodDeclaration",false),utilityCopy);
}
