{
  Set<String> sourcesIncluded=new HashSet<String>();
  for (  File imlFile : Utils.withExtension(".iml",Utils.files(new File(".")))) {
    if (imlFile.getCanonicalPath().equals(genSourcesIml.getCanonicalPath()))     continue;
    Document doc=JDOMUtil.loadDocument(imlFile);
    Element rootManager=Utils.getComponentWithName(doc,MODULE_ROOT_MANAGER);
    for (    Element cRoot : (List<Element>)rootManager.getChildren(CONTENT)) {
      for (      Element sFolder : (List<Element>)cRoot.getChildren(SOURCE_FOLDER)) {
        String imlFormattedRoot=sFolder.getAttributeValue(URL);
        sourcesIncluded.add(new File(imlFormattedRoot.replace("file://$MODULE_DIR$",imlFile.getParent())).getCanonicalPath());
      }
    }
  }
  Document doc=JDOMUtil.loadDocument(genSourcesIml);
  Element rootManager=Utils.getComponentWithName(doc,MODULE_ROOT_MANAGER);
  Set<String> contentRootUrls=new HashSet<String>();
  for (  File dir : sourceDirs) {
    contentRootUrls.add(PATH_START_MODULE + dir);
    Element contentRoot=Utils.getChildByAttribute(rootManager,CONTENT,URL,PATH_START_MODULE + dir);
    if (contentRoot == null) {
      contentRoot=new Element(CONTENT);
      contentRoot.setAttribute(URL,PATH_START_MODULE + dir);
      rootManager.addContent(contentRoot);
    }
    contentRoot.removeContent();
    List<String> sourceGenFolders=new ArrayList<String>();
    List<String> classesGenFolders=new ArrayList<String>();
    for (    Pair<String,String> module : Utils.collectMPSCompiledModulesInfo(dir)) {
      if (!sourcesIncluded.contains(new File(module.o2).getCanonicalPath())) {
        String sFolder=PATH_START_MODULE + Utils.getRelativeProjectPath(module.o2);
        sourceGenFolders.add(sFolder);
      }
      String cgFolder=PATH_START_MODULE + Utils.getRelativeProjectPath(module.o1) + "/"+ AbstractModule.CLASSES_GEN;
      classesGenFolders.add(cgFolder);
    }
    Collections.sort(sourceGenFolders);
    Collections.sort(classesGenFolders);
    for (    String sourceGenFolder : sourceGenFolders) {
      Element sourceFolder=new Element(SOURCE_FOLDER);
      sourceFolder.setAttribute(URL,sourceGenFolder);
      sourceFolder.setAttribute("isTestSource","false");
      contentRoot.addContent(sourceFolder);
    }
    for (    String classesGenFolder : classesGenFolders) {
      Element excludeFolder=new Element(EXCLUDE_FOLDER);
      excludeFolder.setAttribute(URL,classesGenFolder);
      contentRoot.addContent(excludeFolder);
    }
  }
  List<Element> toRemove=new ArrayList<Element>();
  for (  Object _contentRoot : rootManager.getChildren(CONTENT)) {
    Element contentRoot=(Element)_contentRoot;
    if (!contentRootUrls.contains(contentRoot.getAttributeValue(URL))) {
      toRemove.add(contentRoot);
    }
  }
  for (  Element element : toRemove) {
    element.detach();
  }
  JDOMUtil.writeDocument(doc,genSourcesIml);
}
