{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base","jetbrains.mps.lang.core.structure.BaseConcept",false,new String[]{"jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.structure.IOperation","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{},new boolean[]{},true,false,"","","");
case 1:
  return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_CreateUniqueName","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base"},new String[]{},new String[]{},new String[]{"baseName","contextNode"},new boolean[]{false,false},false,false,"unique name","generate unique name ","");
case 2:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_DirtyNode","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base"},new String[]{},new String[]{},new String[]{"nodeToCheck"},new boolean[]{false},false,false,"is dirty","checks if node is not ignored by generator","");
case 3:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GenParameterRef","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base"},new String[]{"name_intern"},new String[]{"importClause"},new String[]{},new boolean[]{},false,false,"","","");
case 4:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetCopiedOutputByInput","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base"},new String[]{},new String[]{},new String[]{"inputNode"},new boolean[]{false},false,false,"get copied output by input","search output node","");
case 5:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetInputModel","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"inputModel","current input model","");
case 6:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetInvocationContext","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"invocation context","generator invocation context (IOperationContext)","");
case 7:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOriginalCopiedInputByOutput","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base"},new String[]{},new String[]{},new String[]{"outputNode"},new boolean[]{false},false,false,"get original copied input by output","original input node copied to output","");
case 8:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOriginalInputModel","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"originalModel","original input model","");
case 9:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputByLabel","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base"},new String[]{"labelName_intern"},new String[]{"label"},new String[]{},new boolean[]{},false,false,"get output by label","search output node","");
case 10:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputByLabelAndInput","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base"},new String[]{"labelName_intern"},new String[]{"label"},new String[]{"inputNode"},new boolean[]{false},false,false,"get output by label and input","search output node","");
case 11:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputByLabelAndInputAndReferenceScope","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base"},new String[]{"labelName_intern"},new String[]{"label"},new String[]{"inputNode"},new boolean[]{false},false,false,"pick output by label and input using ref.scope","search output node using ref.scope","");
case 12:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputListByLabelAndInput","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base"},new String[]{"labelName_intern"},new String[]{"label"},new String[]{"inputNode"},new boolean[]{false},false,false,"get output list by label and input","search output nodes","");
case 13:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetOutputModel","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"outputModel","current output model","");
case 14:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetPrevInputByLabel","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base"},new String[]{"labelName_intern"},new String[]{"label"},new String[]{},new boolean[]{},false,false,"get prev input by label","search preceding input node","");
case 15:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetScope","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"scope","access to IScope","");
case 16:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_GetTemplateNode","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"templateNode","template node under macro","");
case 17:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_LinkPatternRef","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PatternRef",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PatternRef"},new String[]{},new String[]{"linkPatternVar"},new String[]{},new boolean[]{},false,false,"","","");
case 18:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_NodePatternRef","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PatternRef",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PatternRef"},new String[]{},new String[]{"patternVarDecl"},new String[]{},new boolean[]{},false,false,"","","");
case 19:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ParameterRef","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base"},new String[]{"name_intern"},new String[]{"parameter"},new String[]{},new boolean[]{},false,false,"","","");
case 20:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PatternRef","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base"},new String[]{"name_intern"},new String[]{},new String[]{},new boolean[]{},true,false,"","","");
case 21:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PropertyPatternRef","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PatternRef",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_PatternRef"},new String[]{},new String[]{"propertyPatternVar"},new String[]{},new boolean[]{},false,false,"","","");
case 22:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_SessionObjectAccess","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_UserObjectAccessBase",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_UserObjectAccessBase"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"session object","access to user object","");
case 23:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowErrorMessage","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowMessageBase",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowMessageBase"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"show error","logging","");
case 24:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowInfoMessage","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowMessageBase",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowMessageBase"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"show info","logging","");
case 25:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowMessageBase","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base"},new String[]{},new String[]{},new String[]{"messageText","referenceNode"},new boolean[]{false,false},true,false,"","","");
case 26:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowWarningMessage","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowMessageBase",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_ShowMessageBase"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"show warning","logging","");
case 27:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_StepObjectAccess","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_UserObjectAccessBase",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_UserObjectAccessBase"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"step object","access to user object","");
case 28:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_TransientObjectAccess","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_UserObjectAccessBase",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_UserObjectAccessBase"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"transient object","access to user object","");
case 29:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_UserObjectAccessBase","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base"},new String[]{},new String[]{},new String[]{"userKey"},new boolean[]{false},true,false,"","","");
case 30:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_VarRef","jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base",false,new String[]{"jetbrains.mps.lang.generator.generationContext.structure.GenerationContextOp_Base"},new String[]{"name_intern"},new String[]{"varmacro"},new String[]{},new boolean[]{},false,false,"","","");
case 31:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.GenerationContextType","jetbrains.mps.baseLanguage.structure.Type",false,new String[]{"jetbrains.mps.baseLanguage.structure.Type"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"gencontext","generation context type","");
case 32:
return new CompiledConceptDescriptor("jetbrains.mps.lang.generator.generationContext.structure.TemplateFunctionParameter_generationContext","jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter",false,new String[]{"jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter","jetbrains.mps.lang.core.structure.IDontSubstituteByDefault"},new String[]{},new String[]{},new String[]{},new boolean[]{},false,false,"genContext","generation context parameter","");
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
