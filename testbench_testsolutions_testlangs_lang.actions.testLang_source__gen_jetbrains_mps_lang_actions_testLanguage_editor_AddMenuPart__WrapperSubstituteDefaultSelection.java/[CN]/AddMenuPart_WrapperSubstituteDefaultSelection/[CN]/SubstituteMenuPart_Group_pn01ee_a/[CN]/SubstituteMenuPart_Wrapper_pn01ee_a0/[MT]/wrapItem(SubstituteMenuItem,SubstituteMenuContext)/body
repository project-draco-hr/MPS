{
  return new SubstituteMenuItemWrapper(item){
    private SNode myCreatedNode;
    @Override public SAbstractConcept getOutputConcept(){
      return item.getOutputConcept();
    }
    @Override public SNode createNode(    @NotNull String pattern){
      SNode nodeToWrap=super.createNode(pattern);
      SNode conceptNode=(_context.getLink() == null ? null : ((SNode)_context.getLink().getTargetConcept().getDeclarationNode()));
      boolean tmpVar=nodeToWrap != null;
      tmpVar=tmpVar && _context.getParentNode() != null;
      tmpVar=tmpVar && _context.getCurrentTargetNode() != null;
      tmpVar=tmpVar && conceptNode != null;
      tmpVar=tmpVar && _context.getModel() != null;
      tmpVar=tmpVar && _context.getEditorContext() != null;
      SNode wrapperNode=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0x737ed1fffa634ebcL,0xa834435499b23c64L,0x47ad1fca2ec9ad4dL,"jetbrains.mps.lang.actions.testLanguage.structure.ActionTestChildWrapper"));
      SLinkOperations.setTarget(wrapperNode,MetaAdapterFactory.getContainmentLink(0x737ed1fffa634ebcL,0xa834435499b23c64L,0x47ad1fca2ec9ad4dL,0x47ad1fca2ec9ad5fL,"childToWrap"),nodeToWrap);
      return wrapperNode;
    }
    @Override public void select(    @NotNull SNode createdNode,    @NotNull String pattern){
      SelectionUtil.selectLabelCellAnSetCaret(_context.getEditorContext(),createdNode,SelectionManager.FIRST_ERROR_CELL + "|" + SelectionManager.FOCUS_POLICY_CELL+ "|"+ SelectionManager.FIRST_EDITABLE_CELL+ "|"+ SelectionManager.FIRST_CELL,-1);
    }
  }
;
}
