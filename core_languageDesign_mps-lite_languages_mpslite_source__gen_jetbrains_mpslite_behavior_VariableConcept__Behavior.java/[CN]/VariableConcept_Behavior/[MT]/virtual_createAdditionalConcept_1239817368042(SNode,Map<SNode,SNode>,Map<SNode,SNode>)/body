{
  SNode additionalConcept=SConceptOperations.createNewNode("jetbrains.mps.lang.structure.structure.ConceptDeclaration",null);
  SPropertyOperations.set(additionalConcept,"name",SPropertyOperations.getString(thisNode,"name") + "Reference");
  SNode referenceDeclaration=SLinkOperations.addNewChild(additionalConcept,"linkDeclaration","jetbrains.mps.lang.structure.structure.LinkDeclaration");
  SPropertyOperations.set(referenceDeclaration,"metaClass","reference");
  SPropertyOperations.set(referenceDeclaration,"sourceCardinality","1");
  SPropertyOperations.set(referenceDeclaration,"role","declaration");
  SLinkOperations.setTarget(referenceDeclaration,"target",conceptsToTargets.get(thisNode),false);
  SLinkOperations.setTarget(additionalConcept,"extends",(SNode)conceptsToTargets.get(SLinkOperations.getTarget(SNodeOperations.getAncestor(thisNode,"jetbrains.mpslite.structure.ConceptContainer",false,false),"expressionConcept",true)),false);
  MapSequence.fromMap(partsToLinks).put(SLinkOperations.getTarget(thisNode,"reference",true),referenceDeclaration);
  return additionalConcept;
}
