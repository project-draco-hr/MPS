{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_846f5o_a0x.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return myAbstractNodeReference__BehaviorDescriptor;
      }
    break;
case 1:
  if (true) {
    return myDataDependency__BehaviorDescriptor;
  }
break;
case 2:
if (true) {
return myDataDependencyReference__BehaviorDescriptor;
}
break;
case 3:
if (true) {
return myDirectNodeReference__BehaviorDescriptor;
}
break;
case 4:
if (true) {
return myExecuteAfterDeclaration__BehaviorDescriptor;
}
break;
case 5:
if (true) {
return myIMigrationUnit__BehaviorDescriptor;
}
break;
case 6:
if (true) {
return myMigrationScript__BehaviorDescriptor;
}
break;
case 7:
if (true) {
return myMoveConcept__BehaviorDescriptor;
}
break;
case 8:
if (true) {
return myMoveConceptMember__BehaviorDescriptor;
}
break;
case 9:
if (true) {
return myMoveContainmentLink__BehaviorDescriptor;
}
break;
case 10:
if (true) {
return myMoveNode__BehaviorDescriptor;
}
break;
case 11:
if (true) {
return myMoveNodeSpecialization__BehaviorDescriptor;
}
break;
case 12:
if (true) {
return myMoveProperty__BehaviorDescriptor;
}
break;
case 13:
if (true) {
return myMoveReferenceLink__BehaviorDescriptor;
}
break;
case 14:
if (true) {
return myProducedDataDeclaration__BehaviorDescriptor;
}
break;
case 15:
if (true) {
return myPureMigrationScript__BehaviorDescriptor;
}
break;
case 16:
if (true) {
return myRefactoringLog__BehaviorDescriptor;
}
break;
case 17:
if (true) {
return myReflectionNodeReference__BehaviorDescriptor;
}
break;
case 18:
if (true) {
return myRequiredDataDeclaration__BehaviorDescriptor;
}
break;
case 19:
if (true) {
return myTransformStatement__BehaviorDescriptor;
}
break;
default :
}
}
return null;
}
