{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(1782411230332735017l,-6324602048325217350l),1078939183254l,1078939183255l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(1782411230332735017l,-6324602048325217350l),1078939183254l,1078939183255l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_pzef4u_a0a0a0a0a1a0b0a1a1;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
{
            Scope scope=Scope.getScope(_context.getContextNode(),_context.getContextRole(),_context.getPosition(),(SNode)SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.editor.structure.EditorComponentDeclaration"));
            return (scope == null ? new EmptyScope() : scope);
          }
        }
      }
;
    }
  }
);
  return references;
}
