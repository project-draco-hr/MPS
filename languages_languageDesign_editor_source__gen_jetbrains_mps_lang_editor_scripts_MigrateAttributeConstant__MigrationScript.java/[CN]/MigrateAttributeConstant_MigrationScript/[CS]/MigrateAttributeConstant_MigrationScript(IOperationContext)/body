{
  super("Migrate attributeConstant");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Migrate attributeConstant";
    }
    public String getAdditionalInfo(){
      return "Migrate attributeConstant";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return ListSequence.fromList(SLinkOperations.getTargets(node,"conceptLink",true)).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return eq_l7go3b_a0a0a0a0a0a0a3a0a0a0a1a0(SPropertyOperations.getString(SLinkOperations.getTarget(it,"conceptLinkDeclaration",false),"name"),"attributeConstant") && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it,"conceptLinkDeclaration",false),"jetbrains.mps.lang.structure.structure.AggregationConceptLinkDeclaration");
        }
      }
);
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode behavior=SNodeOperations.cast(MigrationUtil.createNewConceptAspectInstance(LanguageAspect.BEHAVIOR,node,SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.behavior.structure.ConceptBehavior")),"jetbrains.mps.lang.behavior.structure.ConceptBehavior");
      SNode link=SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(node,"conceptLink",true)).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return eq_l7go3b_a0a0a0a0a0a0a2a4a0a0a0a1a0(SPropertyOperations.getString(SLinkOperations.getTarget(it,"conceptLinkDeclaration",false),"name"),"attributeConstant") && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it,"conceptLinkDeclaration",false),"jetbrains.mps.lang.structure.structure.AggregationConceptLinkDeclaration");
        }
      }
),"jetbrains.mps.lang.structure.structure.AggregationConceptLink");
      ListSequence.fromList(SLinkOperations.getTargets(behavior,"method",true)).addElement(ListSequence.fromList(SLinkOperations.getTargets(new MigrateAttributeConstant_MigrationScript.QuotationClass_l7go3b_a0a0a0a4a4a0a0a0a1a0().createNode(SLinkOperations.getTarget(link,"target",true)),"method",true)).first());
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
