{
  final Method method=classType.concreteMethodByName(name,jniSignature);
  if (method == null) {
    throw new InvalidEvaluatedExpressionException("Concrete method " + name + " with signature "+ jniSignature+ " not found in "+ classType+ ".");
  }
  final List<Value> argValues=MirrorUtil.getValues(myThreadReference,args);
  return EvaluationUtils.handleInvocationExceptions(new EvaluationUtils.ThreadInvocatable<IValueProxy>(myThreadReference){
    @Override public IValueProxy invoke() throws InvocationException, InvalidTypeException, ClassNotLoadedException, IncompatibleThreadStateException {
      Value result=getObjectValue().invokeMethod(myThreadReference,method,argValues,options);
      return MirrorUtil.getValueProxy(result,myThreadReference);
    }
  }
);
}
