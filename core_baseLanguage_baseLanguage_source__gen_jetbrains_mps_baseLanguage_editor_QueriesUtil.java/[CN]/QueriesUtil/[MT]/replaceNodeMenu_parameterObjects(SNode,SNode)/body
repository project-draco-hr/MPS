{
  ISearchScope searchScope=new ClassifierVisibleStaticMembersScope(classifier,contextNode,IClassifiersSearchScope.STATIC_MEMBER);
  List<SNode> members=(List<SNode>)searchScope.getNodes();
  List<SNode> result=ListSequence.fromList(members).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration") || SNodeOperations.isInstanceOf(it,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration") || SNodeOperations.isInstanceOf(it,"jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration");
    }
  }
).toListSequence();
  if (SNodeOperations.isInstanceOf(classifier,"jetbrains.mps.baseLanguage.structure.EnumClass")) {
    ListSequence.fromList(result).addElement(SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.EnumValueOfExpression",null));
    ListSequence.fromList(result).addElement(SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.EnumValuesExpression",null));
  }
  return result;
}
