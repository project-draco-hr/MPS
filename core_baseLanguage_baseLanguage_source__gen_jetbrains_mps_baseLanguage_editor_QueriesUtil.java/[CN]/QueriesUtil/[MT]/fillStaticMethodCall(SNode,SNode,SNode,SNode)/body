{
  SLinkOperations.setTarget(newNode,"baseMethodDeclaration",SNodeOperations.cast(parameterObject,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration"),false);
  SLinkOperations.setTarget(newNode,"classConcept",SNodeOperations.cast(classifier,"jetbrains.mps.baseLanguage.structure.ClassConcept"),false);
  if (SNodeOperations.isInstanceOf(oldNode,"jetbrains.mps.baseLanguage.structure.StaticMethodCall")) {
    SNode call=SNodeOperations.cast(oldNode,"jetbrains.mps.baseLanguage.structure.StaticMethodCall");
    for (    SNode arg : ListSequence.<SNode>fromList(SLinkOperations.getTargets(call,"actualArgument",true))) {
      ListSequence.<SNode>fromList(SLinkOperations.getTargets(newNode,"actualArgument",true)).addElement(SNodeOperations.copyNode(arg));
    }
  }
  for (  SNode attribute : ListSequence.<SNode>fromList(AttributeOperations.getAttributeList(oldNode,new IAttributeDescriptor.AllAttributes()))) {
    String role=oldNode.getRoleOf(attribute);
    newNode.addChild(role,SNodeOperations.copyNode(attribute));
  }
  return newNode;
}
