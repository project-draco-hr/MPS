{
  SModel model=SNodeOperations.getModel(classifier);
  if (SNodeOperations.isInstanceOf(parameterObject,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration")) {
    SNode newNode=SModelOperations.createNewNode(model,"jetbrains.mps.baseLanguage.structure.StaticMethodCall",null);
    SLinkOperations.setTarget(newNode,"baseMethodDeclaration",parameterObject,false);
    SLinkOperations.setTarget(newNode,"classConcept",classifier,false);
    if (SNodeOperations.isInstanceOf(oldNode,"jetbrains.mps.baseLanguage.structure.StaticMethodCall")) {
      SNode call=oldNode;
      for (      SNode arg : ListSequence.fromList(SLinkOperations.getTargets(call,"actualArgument",true))) {
        SLinkOperations.addChild(newNode,"actualArgument",SNodeOperations.copyNode(arg));
      }
    }
    for (    SNode attrigute : ListSequence.fromList(oldNode.getAllAttributes())) {
      String role=oldNode.getRoleOf(attrigute);
      newNode.addChild(role,SNodeOperations.copyNode(((SNode)attrigute)));
    }
    return newNode;
  }
  if (SNodeOperations.isInstanceOf(parameterObject,"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration")) {
    SNode newNode=SModelOperations.createNewNode(model,"jetbrains.mps.baseLanguage.structure.StaticFieldReference",null);
    SLinkOperations.setTarget(newNode,"variableDeclaration",parameterObject,false);
    SLinkOperations.setTarget(newNode,"classifier",classifier,false);
    return newNode;
  }
  if (SNodeOperations.isInstanceOf(parameterObject,"jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration")) {
    SNode newNode=SModelOperations.createNewNode(model,"jetbrains.mps.baseLanguage.structure.EnumConstantReference",null);
    SLinkOperations.setTarget(newNode,"enumConstantDeclaration",parameterObject,false);
    SLinkOperations.setTarget(newNode,"enumClass",classifier,false);
    return newNode;
  }
  if (SNodeOperations.isInstanceOf(parameterObject,"jetbrains.mps.baseLanguage.structure.EnumValueOfExpression")) {
    SNode newNode=SModelOperations.createNewNode(model,"jetbrains.mps.baseLanguage.structure.EnumValueOfExpression",null);
    SLinkOperations.setTarget(newNode,"enumClass",classifier,false);
    return newNode;
  }
  if (SNodeOperations.isInstanceOf(parameterObject,"jetbrains.mps.baseLanguage.structure.EnumValuesExpression")) {
    SNode newNode=SModelOperations.createNewNode(model,"jetbrains.mps.baseLanguage.structure.EnumValuesExpression",null);
    SLinkOperations.setTarget(newNode,"enumClass",classifier,false);
    return newNode;
  }
  throw new RuntimeException("Bad parameter object " + parameterObject);
}
