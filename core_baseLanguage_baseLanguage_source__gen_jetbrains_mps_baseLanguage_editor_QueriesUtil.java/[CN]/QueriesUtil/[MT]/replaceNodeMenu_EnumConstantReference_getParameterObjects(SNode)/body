{
  List<SNode> result=new ArrayList<SNode>();
  SNode classifier=SLinkOperations.getTarget(node,"enumClass",false);
  if (classifier == null) {
    return result;
  }
  ISearchScope searchScope=new VisibleClassifierMembersScope(((Classifier)SNodeOperations.getAdapter(classifier)),node,IClassifiersSearchScope.STATIC_MEMBER);
  List<SNode> members=(List<SNode>)searchScope.getNodes();
  ListSequence.fromList(result).addSequence(ListSequence.fromList(members).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration") || SNodeOperations.isInstanceOf(it,"jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration");
    }
  }
));
  return result;
}
