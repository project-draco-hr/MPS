{
  myListHandler=listHandler;
  if (elementSeparator != null && elementSeparator.length() == 1) {
    EditorCellKeyMapAction insertAction=new EditorCellKeyMapAction(){
      public String getDescriptionText(){
        return "insert " + myListHandler.getElementRole();
      }
      public void execute(      KeyEvent keyEvent,      EditorContext context){
        SNode anchorNode=getAnchorNode(context);
        SNode nodeToInsert=myListHandler.createNodeToInsert(context);
        myListHandler.getOwner().insertChild(anchorNode,myListHandler.getElementRole(),nodeToInsert,true);
      }
    }
;
    insertAction.setCaretPolicy(EditorCellKeyMapAction.CARET_AT_FIRST_POSITION);
    EditorCellKeyMapAction addAction=new EditorCellKeyMapAction(){
      public String getDescriptionText(){
        return "add " + myListHandler.getElementRole();
      }
      public void execute(      KeyEvent keyEvent,      EditorContext context){
        SNode anchorNode=getAnchorNode(context);
        SNode nodeToInsert=myListHandler.createNodeToInsert(context);
        myListHandler.getOwner().insertChild(anchorNode,myListHandler.getElementRole(),nodeToInsert,false);
      }
    }
;
    addAction.setCaretPolicy(EditorCellKeyMapAction.CARET_AT_LAST_POSITION);
    if (!" ".equals(elementSeparator)) {
      putAction(EditorCellKeyMap.KEY_MODIFIERS_ANY,elementSeparator,insertAction);
      putAction(EditorCellKeyMap.KEY_MODIFIERS_ANY,elementSeparator,addAction);
    }
  }
}
