{
  Iterable<SNode> dependencies=ListSequence.fromList(SLinkOperations.getTargets(module,"dependencies",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyOnModule") && SPropertyOperations.getBoolean(SNodeOperations.cast(it,"jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyOnModule"),"reexport") == reexport;
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.build.mps.structure.BuildMps_ModuleDependencyOnModule"),"module",false);
    }
  }
);
  if (reexport) {
    return dependencies;
  }
  Iterable<SNode> solutionsFromDevkits=Sequence.fromIterable(includingExtended(usedDevkits(module))).translate(new ITranslator2<SNode,SNode>(){
    public Iterable<SNode> translate(    SNode it){
      return ListSequence.fromList(SLinkOperations.getTargets(it,"exports",true)).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode iit){
          return SNodeOperations.isInstanceOf(iit,"jetbrains.mps.build.mps.structure.BuildMps_DevKitExportSolution");
        }
      }
).select(new ISelector<SNode,SNode>(){
        public SNode select(        SNode iit){
          return SLinkOperations.getTarget(SNodeOperations.cast(iit,"jetbrains.mps.build.mps.structure.BuildMps_DevKitExportSolution"),"solution",false);
        }
      }
);
    }
  }
);
  return IterableUtil.distinct(IterableUtil.merge(dependencies,solutionsFromDevkits));
}
