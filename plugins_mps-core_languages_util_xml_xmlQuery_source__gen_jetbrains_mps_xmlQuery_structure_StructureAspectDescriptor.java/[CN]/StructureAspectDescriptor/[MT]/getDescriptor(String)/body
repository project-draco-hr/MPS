{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.xmlQuery.structure.AccessArbitraryAttributeOperation").super_("jetbrains.mps.xmlQuery.structure.XMLElementOperation").parents("jetbrains.mps.xmlQuery.structure.XMLElementOperation").children(new String[]{"attributeNameExpression"},new boolean[]{false}).alias("attribute","arbitrary attribute").create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.xmlQuery.structure.AccessArbitraryChildrenOperation").super_("jetbrains.mps.xmlQuery.structure.XMLElementOperation").parents("jetbrains.mps.xmlQuery.structure.XMLElementOperation").children(new String[]{"childNameExpression"},new boolean[]{false}).alias("child","arbitrary child").create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.xmlQuery.structure.AccessAttributeOperation").super_("jetbrains.mps.xmlQuery.structure.XMLElementOperation").parents("jetbrains.mps.xmlQuery.structure.XMLElementOperation").references("attributeDeclaration").create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.xmlQuery.structure.AccessChildrenOperation").super_("jetbrains.mps.xmlQuery.structure.XMLElementOperation").parents("jetbrains.mps.xmlQuery.structure.XMLElementOperation").references("elementDeclaration").alias("","access child operation").create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.xmlQuery.structure.AccessTextOperation").super_("jetbrains.mps.xmlQuery.structure.XMLElementOperation").parents("jetbrains.mps.xmlQuery.structure.XMLElementOperation").alias("text","access elements'text").create();
case 5:
return new ConceptDescriptorBuilder("jetbrains.mps.xmlQuery.structure.AttributeBuilder").super_("jetbrains.mps.baseLanguage.builders.structure.Builder").parents("jetbrains.mps.baseLanguage.builders.structure.Builder").references("attributeDeclaration").children(new String[]{"value"},new boolean[]{false}).create();
case 6:
return new ConceptDescriptorBuilder("jetbrains.mps.xmlQuery.structure.ElementBuilder").super_("jetbrains.mps.baseLanguage.builders.structure.Builder").parents("jetbrains.mps.baseLanguage.builders.structure.Builder").references("elementDeclaration").create();
case 7:
return new ConceptDescriptorBuilder("jetbrains.mps.xmlQuery.structure.TextBuilder").super_("jetbrains.mps.baseLanguage.builders.structure.Builder").parents("jetbrains.mps.baseLanguage.builders.structure.Builder").children(new String[]{"value"},new boolean[]{false}).alias("text :","XML element text").create();
case 8:
return new ConceptDescriptorBuilder("jetbrains.mps.xmlQuery.structure.XMLElementCreator").super_("jetbrains.mps.baseLanguage.structure.AbstractCreator").parents("jetbrains.mps.baseLanguage.structure.AbstractCreator").children(new String[]{"type"},new boolean[]{false}).alias("xml<>","create new XML element").create();
case 9:
return new ConceptDescriptorBuilder("jetbrains.mps.xmlQuery.structure.XMLElementOperation").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.structure.IOperation").abstract_().create();
case 10:
return new ConceptDescriptorBuilder("jetbrains.mps.xmlQuery.structure.XMLElementType").super_("jetbrains.mps.baseLanguage.structure.Type").parents("jetbrains.mps.baseLanguage.structure.Type").references("schema","complexType").alias("xml<>","").create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
