{
  SNode result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.GenericNewExpression",null);
  insertAt(pos,result);
  SNode create=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ClassCreator",null);
  SLinkOperations.setTarget(result,"creator",create,true);
  StringBuffer sb=new StringBuffer();
  x.type.printExpression(0,sb);
  String typeName=sb.toString();
  SNode typ=tryGetClassAt(pos,typeName);
  if ((typ == null)) {
    System.err.println("DEBUG: type not found");
    return null;
  }
 else {
    SNode cons;
    if (!(SNodeOperations.isInstanceOf(typ,"jetbrains.mps.baseLanguage.structure.ClassConcept"))) {
      return null;
    }
    SLinkOperations.setTarget(create,"baseMethodDeclaration",findConstructor(SNodeOperations.cast(typ,"jetbrains.mps.baseLanguage.structure.ClassConcept"),x.arguments),false);
  }
  if ((create != null)) {
    addCallArgs(create,x.arguments);
  }
  return result;
}
