{
  SNode result=null;
  if (expression instanceof Literal) {
    ((Literal)expression).computeConstant();
    if (expression.constant != null) {
      if (expression.constant != Constant.NotAConstant) {
        result=SNodeOperations.cast(dispatchRefl("convertConstant",pos,expression.constant),"jetbrains.mps.baseLanguage.structure.Expression");
      }
 else       if (expression instanceof NullLiteral) {
        result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.NullLiteral",null);
      }
 else {
        result=new ASTConverter.QuotationClass_rbndtb_a0a1a0a0b0b0r().createNode(NameUtil.escapeString(new String(((Literal)expression).source())));
      }
    }
  }
  if ((result == null)) {
    result=SNodeOperations.cast(dispatchRefl("convertExpression",pos,expression),"jetbrains.mps.baseLanguage.structure.Expression");
  }
  if (expression != null) {
    int parenthesisCount=(expression.bits & ASTNode.ParenthesizedMASK) >> ASTNode.ParenthesizedSHIFT;
    for (int parenthsCreated=0; parenthsCreated < parenthesisCount; parenthsCreated++) {
      SNode parenthesizedExpression=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression",null);
      SLinkOperations.setTarget(parenthesizedExpression,"expression",result,true);
      result=parenthesizedExpression;
    }
  }
  return result;
}
