{
  if (x.isImplicitSuper()) {
    return null;
  }
  SNode result=(x.isSuperAccess() ? SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.SuperConstructorInvocation",null) : SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ThisConstructorInvocation",null));
  insertAt(pos,result);
  addCallArgs(result,x.arguments);
  SNode enclosing=SNodeOperations.getAncestor(pos.current,"jetbrains.mps.baseLanguage.structure.ClassConcept",false,false);
  if ((enclosing == null)) {
    enclosing=SNodeOperations.getAncestor(myAnchorNode,"jetbrains.mps.baseLanguage.structure.ClassConcept",false,false);
  }
  SLinkOperations.setTarget(result,"baseMethodDeclaration",findConstructor(enclosing,x.arguments),false);
  return result;
}
