{
  SNode op;
switch (x.operator) {
case OperatorIds.MINUS:
    op=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.PrefixDecrementExpression",null);
  break;
case OperatorIds.PLUS:
op=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.PrefixIncrementExpression",null);
break;
default :
throw new JavaParseException("Unexpected prefix operator");
}
SLinkOperations.setTarget(op,"expression",convertExpressionRefl(x.lhs),true);
return op;
}
