{
  DefaultFileGenerator fileGenerator=new DefaultFileGenerator();
  for (  SNode outputRootNode : outputNodeContents.keySet()) {
    try {
      SNode originalInputNode=null;
      if (status.getTraceMap() != null) {
        originalInputNode=status.getTraceMap().getOriginalInputNode(outputRootNode);
      }
      File generatedFile=fileGenerator.generateFile(outputRootNode,originalInputNode,status.getInputModel(),outputNodeContents.get(outputRootNode),outputRootDirectory);
      if (generatedFile != null) {
        generatedFiles.add(generatedFile);
        directories.add(generatedFile.getParentFile());
      }
    }
 catch (    IOException e) {
      LOG.error(e);
    }
  }
  if (status.getDebugInfo() != null && status.getDebugInfo().getModel() != null) {
    IFile file=DebugInfo.getDebugFileOfModel(outputRootDirectory.getAbsolutePath(),status.getDebugInfo().getModel().getModelDescriptor());
    status.getDebugInfo().saveTo(file);
    generatedFiles.add(file.toFile());
  }
  if (isUseDependenciesChecking()) {
    if (status.getDependenciesRoot() != null && status.getDependenciesRoot().getModel() != null) {
      IFile file=DependenciesRoot.getOutputFileOfModel(outputRootDirectory.getAbsolutePath(),status.getDependenciesRoot().getModel().getModelDescriptor());
      status.getDependenciesRoot().saveTo(file);
      generatedFiles.add(file.toFile());
    }
  }
}
