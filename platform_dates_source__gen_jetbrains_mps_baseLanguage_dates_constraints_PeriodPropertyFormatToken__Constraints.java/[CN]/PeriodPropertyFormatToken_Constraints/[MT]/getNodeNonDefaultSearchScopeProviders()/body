{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("property",new BaseNodeReferenceSearchScopeProvider(){
    public boolean hasPresentation(){
      return true;
    }
    public String getPresentation(    final IOperationContext operationContext,    final PresentationReferentConstraintContext _context){
      String name=(StringUtils.isNotEmpty(SPropertyOperations.getString(_context.getParameterNode(),"pluralForm")) ? SPropertyOperations.getString(_context.getParameterNode(),"pluralForm") : SPropertyOperations.getString(_context.getParameterNode(),"name"));
      return (_context.getSmartReference() ? "{" + name + "}" : name);
    }
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      return DateFormatReferenceUtil.buildPeriodPropertySearchScope(_context.getEnclosingNode(),operationContext.getScope());
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c895903cf(jetbrains.mps.baseLanguage.dates.constraints)","5581663871699705089");
    }
  }
);
  return result;
}
