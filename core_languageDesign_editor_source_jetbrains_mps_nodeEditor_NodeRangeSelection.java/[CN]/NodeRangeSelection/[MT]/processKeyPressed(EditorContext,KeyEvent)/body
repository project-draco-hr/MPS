{
  List<SNode> nodes=ModelAccess.instance().runReadAction(new Computable<List<SNode>>(){
    public List<SNode> compute(){
      return getNodes();
    }
  }
);
  if (nodes.size() != 0) {
    EditorComponent editor=editorContext.getNodeEditorComponent();
    SNode node=nodes.get(0);
    EditorCell cell=editor.findNodeCell(node);
    List<Pair<EditorCellKeyMapAction,EditorCell>> actionsInfo=KeyMapUtil.getKeyMapActionsForEvent(cell,keyEvent,editorContext);
    if (actionsInfo.size() == 1) {
      EditorCellKeyMapAction action=actionsInfo.get(0).o1;
      EditorCell contextCell=actionsInfo.get(0).o2;
      KeyMapUtil.executeKeyMapAction(action,keyEvent,contextCell,editorContext);
      return true;
    }
 else     if (actionsInfo.size() > 1) {
      KeyMapUtil.showActionsMenu(actionsInfo,keyEvent,editorContext,cell);
      return true;
    }
  }
  CellActionType actionType=myEditorComponent.getActionType(keyEvent,editorContext);
  if (actionType == null) {
    if (keyEvent.getKeyCode() == KeyEvent.VK_DELETE || keyEvent.getKeyCode() == KeyEvent.VK_BACK_SPACE) {
      actionType=CellActionType.DELETE;
    }
  }
  if (actionType != null) {
    if (actionType == CellActionType.DELETE) {
      doDeleteNodes(editorContext);
      return true;
    }
  }
  return false;
}
