{
  List<SNode> statements=new ArrayList<SNode>();
  ListSequence.<SNode>fromList(statements).addSequence(ListSequence.<SNode>fromList(SLinkOperations.getTargets(statementList,"statement",true)));
  while (SNodeOperations.getConceptDeclaration(ListSequence.<SNode>fromList(statements).last()) == SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.Statement") || SNodeOperations.getConceptDeclaration(ListSequence.<SNode>fromList(statements).last()) == SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.RemarkStatement") || SNodeOperations.getConceptDeclaration(ListSequence.<SNode>fromList(statements).last()) == SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.SingleLineComment")) {
    ListSequence.<SNode>fromList(statements).removeLastElement();
  }
  SNode lastStatement=ListSequence.<SNode>fromList(statements).last();
  if (SNodeOperations.isInstanceOf(lastStatement,"jetbrains.mps.baseLanguage.structure.BlockStatement")) {
    SNode innerStatementList=SLinkOperations.getTarget(SNodeOperations.cast(lastStatement,"jetbrains.mps.baseLanguage.structure.BlockStatement"),"statements",true);
    if (ListSequence.<SNode>fromList(SLinkOperations.getTargets(innerStatementList,"statement",true)).isEmpty()) {
      return lastStatement;
    }
 else {
      return IMethodLike_Behavior.call_getLastStatement_2432385533253965663(thisNode,innerStatementList);
    }
  }
  return lastStatement;
}
