{
  List<SConcept> result=ListSequence.fromList(new ArrayList<SConcept>());
  for (  SAbstractConcept c : l.getConcepts()) {
    if (c.isAbstract()) {
      continue;
    }
    if (!((c instanceof SConcept))) {
      continue;
    }
    if (!(((SConcept)c).isRootable())) {
      continue;
    }
    if (!(SConceptOperations.isSubConceptOf(SNodeOperations.asSConcept(c),MetaAdapterFactory.getInterfaceConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x24614259e94f0c84L,"jetbrains.mps.lang.structure.structure.IConceptAspect")))) {
      continue;
    }
    if (((boolean)(Boolean)BHReflection.invoke(SNodeOperations.asSConcept((SNode)c.getDeclarationNode()),SMethodTrimmedId.create("canBeAppliedToNode",null,"7IH442d05tK"),node))) {
      ListSequence.fromList(result).addElement(((SConcept)c));
    }
  }
  return result;
}
