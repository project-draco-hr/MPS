{
  AbstractConceptDeclaration conceptDeclaration;
  if (this instanceof AbstractConceptDeclaration) {
    conceptDeclaration=(AbstractConceptDeclaration)this;
  }
 else {
    conceptDeclaration=getConceptDeclarationAdapter();
  }
  if (lookupHierarchy) {
    return (List)new ConceptAndSuperConceptsScope(conceptDeclaration).getAdapters(new Condition<INodeAdapter>(){
      public boolean met(      INodeAdapter n){
        if (n instanceof ConceptLink) {
          ConceptLinkDeclaration conceptLinkDeclaration=((ConceptLink)n).getConceptLinkDeclaration();
          return (conceptLinkDeclaration != null && linkName.equals(conceptLinkDeclaration.getName()));
        }
        return false;
      }
    }
);
  }
  List<ConceptLink> result=new ArrayList<ConceptLink>();
  Iterator<ConceptLink> conceptLinks=conceptDeclaration.conceptLinks();
  while (conceptLinks.hasNext()) {
    ConceptLink conceptLink=conceptLinks.next();
    ConceptLinkDeclaration conceptLinkDeclaration=conceptLink.getConceptLinkDeclaration();
    if (conceptLinkDeclaration != null && linkName.equals(conceptLinkDeclaration.getName())) {
      result.add(conceptLink);
    }
  }
  return result;
}
