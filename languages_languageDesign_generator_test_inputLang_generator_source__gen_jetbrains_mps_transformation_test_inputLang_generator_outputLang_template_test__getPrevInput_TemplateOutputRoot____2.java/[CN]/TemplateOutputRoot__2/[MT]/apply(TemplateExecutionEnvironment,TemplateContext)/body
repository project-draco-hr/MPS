{
  final SNode tnode1=environment.createOutputNode("jetbrains.mps.transformation.test.outputLang.structure.OutputRoot");
  try {
    environment.getTracer().pushTemplateNode(templateNode_ewlaka_a0a0a1a2);
    environment.nodeCopied(context,tnode1,"tpl/r:00000000-0000-4000-0000-011c895905f7/1202338159177");
    SNodeAccessUtil.setProperty(tnode1,"name","OutputRoot_2");
    SNodeAccessUtil.setProperty(tnode1,"text","'getPrevInputTest' output root (2)");
{
      final List<SNode> tlist2=new ArrayList<SNode>();
      try {
        environment.getTracer().pushMacro(loopMacroRef_ewlaka_a0a0a1a5a1a2);
        final Iterable<SNode> loopList2=QueriesGenerated.sourceNodesQuery_1202338467105(environment.getOperationContext(),new SourceSubstituteMacroNodesContext(context,loopMacroRef_ewlaka_a0a0a1a5a1a2,environment.getGenerator()));
        for (        SNode itnode2 : loopList2) {
          if (itnode2 == null) {
            continue;
          }
          boolean inputChanged2=context.getInput() != itnode2;
          try {
            if (inputChanged2) {
              environment.getTracer().pushInputNode(GenerationTracerUtil.getSNodePointer(itnode2));
            }
            TemplateContext context2=context.subContext("LEVEL 1",itnode2);
            final List<SNode> tlist3=new ArrayList<SNode>();
            try {
              environment.getTracer().pushMacro(loopMacroRef_ewlaka_a0a0a3a2a2a1a5a1a2);
              final Iterable<SNode> loopList3=QueriesGenerated.sourceNodesQuery_1202338467112(environment.getOperationContext(),new SourceSubstituteMacroNodesContext(context2,loopMacroRef_ewlaka_a0a0a3a2a2a1a5a1a2,environment.getGenerator()));
              for (              SNode itnode3 : loopList3) {
                if (itnode3 == null) {
                  continue;
                }
                boolean inputChanged3=context2.getInput() != itnode3;
                try {
                  if (inputChanged3) {
                    environment.getTracer().pushInputNode(GenerationTracerUtil.getSNodePointer(itnode3));
                  }
                  TemplateContext context3=context2.subContext("LEVEL 2",itnode3);
                  final List<SNode> tlist4=new ArrayList<SNode>();
                  try {
                    environment.getTracer().pushMacro(loopMacroRef_ewlaka_a0a0a3a2a2a3a2a2a1a5a1a2);
                    final Iterable<SNode> loopList4=QueriesGenerated.sourceNodesQuery_1202338467119(environment.getOperationContext(),new SourceSubstituteMacroNodesContext(context3,loopMacroRef_ewlaka_a0a0a3a2a2a3a2a2a1a5a1a2,environment.getGenerator()));
                    for (                    SNode itnode4 : loopList4) {
                      if (itnode4 == null) {
                        continue;
                      }
                      boolean inputChanged4=context3.getInput() != itnode4;
                      try {
                        if (inputChanged4) {
                          environment.getTracer().pushInputNode(GenerationTracerUtil.getSNodePointer(itnode4));
                        }
                        TemplateContext context4=context3.subContext(null,itnode4);
                        final SNode tnode5=environment.createOutputNode("jetbrains.mps.transformation.test.outputLang.structure.OutputNode");
                        try {
                          environment.getTracer().pushTemplateNode(templateNode_ewlaka_a0a0a3a2a2a3a2a2a3a2a2a1a5a1a2);
                          environment.nodeCopied(context4,tnode5,"tpl/r:00000000-0000-4000-0000-011c895905f7/1202338467041");
                          SNodeAccessUtil.setProperty(tnode5,"text",TemplateUtil.asString(QueriesGenerated.propertyMacro_GetPropertyValue_1202338467126(environment.getOperationContext(),new PropertyMacroContext(context4,"_text_",propertyMacro_ewlaka_c0b0c0c0d0c0c0d0c0c0d0c0c0b0f0b0c,environment.getGenerator()))));
{
                            final List<SNode> tlist6=new ArrayList<SNode>();
                            try {
                              environment.getTracer().pushMacro(mapsrcMacroRef_ewlaka_a0a0a1a4a3a2a2a3a2a2a3a2a2a1a5a1a2);
                              tlist6.add(environment.insertLater(new NodeMapper(){
                                public SNode map(                                SNode outputNode,                                TemplateContext mapContext){
                                  return QueriesGenerated.mapSrcMacro_mapper_1202338546473(environment.getOperationContext(),new MapSrcMacroContext(mapContext,outputNode.getParent(),mapsrcMacroRef_ewlaka_c0b0a0a0a0a0a0b0b0e0d0c0c0d0c0c0d0c0c0b0f0b0c,environment.getGenerator()));
                                }
                                public String getConceptFqName(){
                                  return "jetbrains.mps.transformation.test.outputLang.structure.OutputNode";
                                }
                                public SNodeReference getTemplateNode(){
                                  return mapsrcMacroRef_ewlaka_c0b0a0a0a0a0a0b0b0e0d0c0c0d0c0c0d0c0c0b0f0b0c;
                                }
                              }
,new PostProcessor(){
                                public void process(                                SNode outputNode,                                TemplateContext postProcessContext){
                                  QueriesGenerated.mapSrcMacro_post_mapper_1225236090395(environment.getOperationContext(),new MapSrcMacroPostProcContext(postProcessContext,outputNode,mapsrcMacroRef_ewlaka_c0b0a0a0a0a0a0b0b0e0d0c0c0d0c0c0d0c0c0b0f0b0c,environment.getGenerator()));
                                }
                              }
,context4));
                            }
  finally {
                              environment.getTracer().closeMacro(mapsrcMacroRef_ewlaka_a0a0a1a4a3a2a2a3a2a2a3a2a2a1a5a1a2);
                            }
                            for (                            SNode child7 : TemplateUtil.asNotNull(tlist6)) {
                              tnode5.addChild("outputChild",child7);
                            }
                          }
{
                            final List<SNode> tlist8=new ArrayList<SNode>();
                            try {
                              environment.getTracer().pushMacro(mapsrcMacroRef_ewlaka_a0a0a1a5a3a2a2a3a2a2a3a2a2a1a5a1a2);
                              tlist8.add(environment.insertLater(new NodeMapper(){
                                public SNode map(                                SNode outputNode,                                TemplateContext mapContext){
                                  return QueriesGenerated.mapSrcMacro_mapper_1202338683284(environment.getOperationContext(),new MapSrcMacroContext(mapContext,outputNode.getParent(),mapsrcMacroRef_ewlaka_c0b0a0a0a0a0a0b0b0f0d0c0c0d0c0c0d0c0c0b0f0b0c,environment.getGenerator()));
                                }
                                public String getConceptFqName(){
                                  return "jetbrains.mps.transformation.test.outputLang.structure.OutputNode";
                                }
                                public SNodeReference getTemplateNode(){
                                  return mapsrcMacroRef_ewlaka_c0b0a0a0a0a0a0b0b0f0d0c0c0d0c0c0d0c0c0b0f0b0c;
                                }
                              }
,null,context4));
                            }
  finally {
                              environment.getTracer().closeMacro(mapsrcMacroRef_ewlaka_a0a0a1a5a3a2a2a3a2a2a3a2a2a1a5a1a2);
                            }
                            for (                            SNode child9 : TemplateUtil.asNotNull(tlist8)) {
                              tnode5.addChild("outputChild",child9);
                            }
                          }
{
                            final List<SNode> tlist10=new ArrayList<SNode>();
                            try {
                              environment.getTracer().pushMacro(mapsrcMacroRef_ewlaka_a0a0a1a6a3a2a2a3a2a2a3a2a2a1a5a1a2);
                              tlist10.add(environment.insertLater(new NodeMapper(){
                                public SNode map(                                SNode outputNode,                                TemplateContext mapContext){
                                  return QueriesGenerated.mapSrcMacro_mapper_1202338740199(environment.getOperationContext(),new MapSrcMacroContext(mapContext,outputNode.getParent(),mapsrcMacroRef_ewlaka_c0b0a0a0a0a0a0b0b0g0d0c0c0d0c0c0d0c0c0b0f0b0c,environment.getGenerator()));
                                }
                                public String getConceptFqName(){
                                  return "jetbrains.mps.transformation.test.outputLang.structure.OutputNode";
                                }
                                public SNodeReference getTemplateNode(){
                                  return mapsrcMacroRef_ewlaka_c0b0a0a0a0a0a0b0b0g0d0c0c0d0c0c0d0c0c0b0f0b0c;
                                }
                              }
,new PostProcessor(){
                                public void process(                                SNode outputNode,                                TemplateContext postProcessContext){
                                  QueriesGenerated.mapSrcMacro_post_mapper_1225236639046(environment.getOperationContext(),new MapSrcMacroPostProcContext(postProcessContext,outputNode,mapsrcMacroRef_ewlaka_c0b0a0a0a0a0a0b0b0g0d0c0c0d0c0c0d0c0c0b0f0b0c,environment.getGenerator()));
                                }
                              }
,context4));
                            }
  finally {
                              environment.getTracer().closeMacro(mapsrcMacroRef_ewlaka_a0a0a1a6a3a2a2a3a2a2a3a2a2a1a5a1a2);
                            }
                            for (                            SNode child11 : TemplateUtil.asNotNull(tlist10)) {
                              tnode5.addChild("outputChild",child11);
                            }
                          }
                        }
  finally {
                          environment.getTracer().pushOutputNode(GenerationTracerUtil.getSNodePointer(environment.getOutputModel(),tnode5));
                          environment.getTracer().closeTemplateNode(templateNode_ewlaka_a0a0a3a2a2a3a2a2a3a2a2a1a5a1a2);
                        }
                        if (tnode5 != null) {
                          tlist4.add(tnode5);
                        }
                      }
  finally {
                        if (inputChanged4) {
                          environment.getTracer().closeInputNode(GenerationTracerUtil.getSNodePointer(itnode4));
                        }
                      }
                    }
                  }
  finally {
                    environment.getTracer().closeMacro(loopMacroRef_ewlaka_a0a0a3a2a2a3a2a2a1a5a1a2);
                  }
                  if (tlist4 != null) {
                    environment.registerLabel(itnode3,tlist4,"LEVEL 2");
                    tlist3.addAll(tlist4);
                  }
                }
  finally {
                  if (inputChanged3) {
                    environment.getTracer().closeInputNode(GenerationTracerUtil.getSNodePointer(itnode3));
                  }
                }
              }
            }
  finally {
              environment.getTracer().closeMacro(loopMacroRef_ewlaka_a0a0a3a2a2a1a5a1a2);
            }
            if (tlist3 != null) {
              environment.registerLabel(itnode2,tlist3,"LEVEL 1");
              tlist2.addAll(tlist3);
            }
          }
  finally {
            if (inputChanged2) {
              environment.getTracer().closeInputNode(GenerationTracerUtil.getSNodePointer(itnode2));
            }
          }
        }
      }
  finally {
        environment.getTracer().closeMacro(loopMacroRef_ewlaka_a0a0a1a5a1a2);
      }
      for (      SNode child12 : TemplateUtil.asNotNull(tlist2)) {
        tnode1.addChild("outputChild",child12);
      }
    }
  }
  finally {
    environment.getTracer().pushOutputNode(GenerationTracerUtil.getSNodePointer(environment.getOutputModel(),tnode1));
    environment.getTracer().closeTemplateNode(templateNode_ewlaka_a0a0a1a2);
  }
  return TemplateUtil.singletonList(tnode1);
}
