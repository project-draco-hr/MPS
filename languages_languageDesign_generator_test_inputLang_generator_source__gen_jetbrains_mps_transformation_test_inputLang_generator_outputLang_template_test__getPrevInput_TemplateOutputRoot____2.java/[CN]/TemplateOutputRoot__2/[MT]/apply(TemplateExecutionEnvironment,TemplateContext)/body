{
  final SNode tnode1=environment.createOutputNode("jetbrains.mps.transformation.test.outputLang.structure.OutputRoot");
  try {
    environment.nodeCopied(context,tnode1,"tpl/r:00000000-0000-4000-0000-011c895905f7/1202338159177");
    SNodeAccessUtil.setProperty(tnode1,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"),"OutputRoot_2");
    SNodeAccessUtil.setProperty(tnode1,MetaAdapterFactory.getProperty(new UUID(1547714798586184059l,-8557310053109408682l),1195164668463l,1195164732401l,"text"),"'getPrevInputTest' output root (2)");
{
      final List<SNode> tlist2=new ArrayList<SNode>();
      final Iterable<SNode> loopList2=QueriesGenerated.sourceNodesQuery_1202338467105(new SourceSubstituteMacroNodesContext(context,loopMacroRef_ewlaka_b0a0a1a3a1a2));
      for (      SNode itnode2 : loopList2) {
        if (itnode2 == null) {
          continue;
        }
        TemplateContext context2=context.subContext("LEVEL 1",itnode2);
        final List<SNode> tlist3=new ArrayList<SNode>();
        final Iterable<SNode> loopList3=QueriesGenerated.sourceNodesQuery_1202338467112(new SourceSubstituteMacroNodesContext(context2,loopMacroRef_ewlaka_b0a0a3a2a3a1a2));
        for (        SNode itnode3 : loopList3) {
          if (itnode3 == null) {
            continue;
          }
          TemplateContext context3=context2.subContext("LEVEL 2",itnode3);
          final List<SNode> tlist4=new ArrayList<SNode>();
          final Iterable<SNode> loopList4=QueriesGenerated.sourceNodesQuery_1202338467119(new SourceSubstituteMacroNodesContext(context3,loopMacroRef_ewlaka_b0a0a3a4a2a3a1a2));
          for (          SNode itnode4 : loopList4) {
            if (itnode4 == null) {
              continue;
            }
            TemplateContext context4=context3.subContext(null,itnode4);
            final SNode tnode5=environment.createOutputNode("jetbrains.mps.transformation.test.outputLang.structure.OutputNode");
            try {
              environment.nodeCopied(context4,tnode5,"tpl/r:00000000-0000-4000-0000-011c895905f7/1202338467041");
              SNodeAccessUtil.setProperty(tnode5,MetaAdapterFactory.getProperty(new UUID(1547714798586184059l,-8557310053109408682l),1195165132070l,1195170441111l,"text"),TemplateUtil.asString(QueriesGenerated.propertyMacro_GetPropertyValue_1202338467126(new PropertyMacroContext(context4,"_text_",propertyMacro_ewlaka_c0a0c0b0d0e0e0c0d0b0c))));
{
                final List<SNode> tlist6=new ArrayList<SNode>();
                tlist6.add(environment.insertLater(new NodeMapper(){
                  public SNode map(                  SNode outputNode,                  TemplateContext mapContext){
                    return QueriesGenerated.mapSrcMacro_mapper_1202338546473(new MapSrcMacroContext(mapContext,outputNode.getParent(),mapsrcMacroRef_ewlaka_c0a0a0a0a0a0a0b0c0d0e0e0c0d0b0c));
                  }
                  public String getConceptFqName(){
                    return "jetbrains.mps.transformation.test.outputLang.structure.OutputNode";
                  }
                  public SNodeReference getTemplateNode(){
                    return mapsrcMacroRef_ewlaka_c0a0a0a0a0a0a0b0c0d0e0e0c0d0b0c;
                  }
                }
,new PostProcessor(){
                  public void process(                  SNode outputNode,                  TemplateContext postProcessContext){
                    QueriesGenerated.mapSrcMacro_post_mapper_1225236090395(new MapSrcMacroPostProcContext(postProcessContext,outputNode,mapsrcMacroRef_ewlaka_c0a0a0a0a0a0a0b0c0d0e0e0c0d0b0c));
                  }
                }
,context4));
                for (                SNode child7 : TemplateUtil.asNotNull(tlist6)) {
                  tnode5.addChild("outputChild",child7);
                }
              }
{
                final List<SNode> tlist8=new ArrayList<SNode>();
                tlist8.add(environment.insertLater(new NodeMapper(){
                  public SNode map(                  SNode outputNode,                  TemplateContext mapContext){
                    return QueriesGenerated.mapSrcMacro_mapper_1202338683284(new MapSrcMacroContext(mapContext,outputNode.getParent(),mapsrcMacroRef_ewlaka_c0a0a0a0a0a0a0b0d0d0e0e0c0d0b0c));
                  }
                  public String getConceptFqName(){
                    return "jetbrains.mps.transformation.test.outputLang.structure.OutputNode";
                  }
                  public SNodeReference getTemplateNode(){
                    return mapsrcMacroRef_ewlaka_c0a0a0a0a0a0a0b0d0d0e0e0c0d0b0c;
                  }
                }
,null,context4));
                for (                SNode child9 : TemplateUtil.asNotNull(tlist8)) {
                  tnode5.addChild("outputChild",child9);
                }
              }
{
                final List<SNode> tlist10=new ArrayList<SNode>();
                tlist10.add(environment.insertLater(new NodeMapper(){
                  public SNode map(                  SNode outputNode,                  TemplateContext mapContext){
                    return QueriesGenerated.mapSrcMacro_mapper_1202338740199(new MapSrcMacroContext(mapContext,outputNode.getParent(),mapsrcMacroRef_ewlaka_c0a0a0a0a0a0a0b0e0d0e0e0c0d0b0c));
                  }
                  public String getConceptFqName(){
                    return "jetbrains.mps.transformation.test.outputLang.structure.OutputNode";
                  }
                  public SNodeReference getTemplateNode(){
                    return mapsrcMacroRef_ewlaka_c0a0a0a0a0a0a0b0e0d0e0e0c0d0b0c;
                  }
                }
,new PostProcessor(){
                  public void process(                  SNode outputNode,                  TemplateContext postProcessContext){
                    QueriesGenerated.mapSrcMacro_post_mapper_1225236639046(new MapSrcMacroPostProcContext(postProcessContext,outputNode,mapsrcMacroRef_ewlaka_c0a0a0a0a0a0a0b0e0d0e0e0c0d0b0c));
                  }
                }
,context4));
                for (                SNode child11 : TemplateUtil.asNotNull(tlist10)) {
                  tnode5.addChild("outputChild",child11);
                }
              }
            }
  finally {
            }
            if (tnode5 != null) {
              tlist4.add(tnode5);
            }
          }
          if (tlist4 != null) {
            environment.registerLabel(itnode3,tlist4,"LEVEL 2");
            tlist3.addAll(tlist4);
          }
        }
        if (tlist3 != null) {
          environment.registerLabel(itnode2,tlist3,"LEVEL 1");
          tlist2.addAll(tlist3);
        }
      }
      for (      SNode child12 : TemplateUtil.asNotNull(tlist2)) {
        tnode1.addChild("outputChild",child12);
      }
    }
  }
  finally {
  }
  return TemplateUtil.singletonList(tnode1);
}
