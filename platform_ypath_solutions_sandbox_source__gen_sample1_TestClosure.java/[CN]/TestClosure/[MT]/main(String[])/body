{
  _void closure;
  _int_int fib=new _FunctionTypes._int_int(){
    public int invoke(    int n){
      return (n <= 1 ? n : this.invoke(n - 1) + this.invoke(n - 2));
    }
  }
;
  System.out.println("fib(8)=" + fib.invoke(8));
  System.out.println("fib(9)=" + new _FunctionTypes._int_int(){
    public int invoke(    int n){
      return (n <= 1 ? n : this.invoke(n - 1) + this.invoke(n - 2));
    }
  }
.invoke(9));
  int calc=new _FunctionTypes._int(){
    public int invoke(){
      return 2 + 2;
    }
  }
.invoke();
  System.out.println("2+2=" + calc);
  System.out.println("fact(5)=" + new _FunctionTypes._int_int(){
    public int invoke(    int n){
      int res=1;
      while (n > 1) {
        res=res * n;
        n=n - 1;
      }
      return res;
    }
  }
.invoke(5));
}
