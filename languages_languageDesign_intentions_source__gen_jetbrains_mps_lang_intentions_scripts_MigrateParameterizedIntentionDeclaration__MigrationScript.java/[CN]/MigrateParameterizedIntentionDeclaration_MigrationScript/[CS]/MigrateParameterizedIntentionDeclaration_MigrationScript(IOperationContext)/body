{
  super("Update Execute and Description Blocks in ParameterizedIntentionDeclaration instances");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Update";
    }
    public String getAdditionalInfo(){
      return "Update";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.intentions.structure.ParameterizedIntentionDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return (SLinkOperations.getTarget(SNodeOperations.cast(node,"jetbrains.mps.lang.intentions.structure.BaseIntentionDeclaration"),"descriptionFunction",true) != null) || (SLinkOperations.getTarget(SNodeOperations.cast(node,"jetbrains.mps.lang.intentions.structure.BaseIntentionDeclaration"),"executeFunction",true) != null);
    }
    public void doUpdateInstanceNode(    SNode node){
      if ((SLinkOperations.getTarget(SNodeOperations.cast(node,"jetbrains.mps.lang.intentions.structure.BaseIntentionDeclaration"),"descriptionFunction",true) != null)) {
        jetbrains.mps.smodel.SNode descriptionBlock=SConceptOperations.createNewNode("jetbrains.mps.lang.intentions.structure.ParameterizedDescriptionBlock",null);
        SLinkOperations.setTarget(descriptionBlock,"body",SNodeOperations.copyNode(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.cast(node,"jetbrains.mps.lang.intentions.structure.BaseIntentionDeclaration"),"descriptionFunction",true),"body",true)),true);
        SLinkOperations.setTarget(node,"descriptionFunction",descriptionBlock,true);
      }
      if ((SLinkOperations.getTarget(SNodeOperations.cast(node,"jetbrains.mps.lang.intentions.structure.BaseIntentionDeclaration"),"executeFunction",true) != null)) {
        jetbrains.mps.smodel.SNode executeBlock=SConceptOperations.createNewNode("jetbrains.mps.lang.intentions.structure.ParameterizedExecuteBlock",null);
        SLinkOperations.setTarget(executeBlock,"body",SNodeOperations.copyNode(SLinkOperations.getTarget(SLinkOperations.getTarget(SNodeOperations.cast(node,"jetbrains.mps.lang.intentions.structure.BaseIntentionDeclaration"),"executeFunction",true),"body",true)),true);
        SLinkOperations.setTarget(node,"executeFunction",executeBlock,true);
      }
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
