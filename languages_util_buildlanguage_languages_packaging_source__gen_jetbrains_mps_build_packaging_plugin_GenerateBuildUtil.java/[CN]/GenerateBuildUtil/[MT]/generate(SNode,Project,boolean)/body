{
  final Wrappers._T<String> baseFolder=new Wrappers._T<String>();
  final Wrappers._T<SModelDescriptor> descriptor=new Wrappers._T<SModelDescriptor>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      baseFolder.value=Layout_Behavior.call_getFolderToGenerate_1229522949966(layout);
      descriptor.value=SNodeOperations.getModel(layout).getModelDescriptor();
    }
  }
);
  final Wrappers._boolean result=new Wrappers._boolean();
  final _FunctionTypes._void_P0_E0 generate=new _FunctionTypes._void_P0_E0(){
    public void invoke(){
      if (false && showWindow) {
        result.value=GeneratorUIFacade.getInstance().generateModels(ProjectOperationContext.get(project),ListSequence.fromListAndArray(new ArrayList<SModelDescriptor>(),descriptor.value),new BuildGenerationHandler(baseFolder.value),true,true);
      }
 else {
        result.value=GenerationFacade.generateModels(project.getComponent(MPSProject.class),ListSequence.fromListAndArray(new ArrayList<SModelDescriptor>(),descriptor.value),ProjectOperationContext.get(project),new BuildGenerationHandler(baseFolder.value),new EmptyProgressMonitor(),new DefaultMessageHandler(project),GenerationOptions.getDefaults().create());
      }
    }
  }
;
  if (ApplicationManager.getApplication().isDispatchThread()) {
    generate.invoke();
  }
 else {
    ApplicationManager.getApplication().invokeAndWait(new Runnable(){
      public void run(){
        generate.invoke();
      }
    }
,ModalityState.NON_MODAL);
  }
  return result.value;
}
