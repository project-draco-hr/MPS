{
  HashMap<String,INodeReferentSetEventHandler> result=new HashMap<String,INodeReferentSetEventHandler>();
  result.put("concept",new INodeReferenceFullSetHandler(){
    public void processReferentSetEvent(    final SNode referenceNode,    final SNode oldReferentNode,    final SNode newReferentNode,    IScope scope){
      if ((newReferentNode != null) && newReferentNode != oldReferentNode) {
        SPropertyOperations.set(referenceNode,"name",NameUtil.decapitalize(SPropertyOperations.getString(newReferentNode,"name")));
        if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(referenceNode),"jetbrains.mps.lang.typesystem.structure.InferenceRule")) {
          SPropertyOperations.set(SNodeOperations.cast(SNodeOperations.getParent(referenceNode),"jetbrains.mps.lang.typesystem.structure.InferenceRule"),"name","typeof_" + SPropertyOperations.getString(newReferentNode,"name"));
        }
      }
    }
    public boolean keepsOriginalReference(    SNode referenceNode,    SNode oldReferentNode,    final SNode newReferentNode,    IScope scope){
      return true;
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public void registerSelf(    ModelConstraintsManager manager){
    }
  }
);
  return result;
}
