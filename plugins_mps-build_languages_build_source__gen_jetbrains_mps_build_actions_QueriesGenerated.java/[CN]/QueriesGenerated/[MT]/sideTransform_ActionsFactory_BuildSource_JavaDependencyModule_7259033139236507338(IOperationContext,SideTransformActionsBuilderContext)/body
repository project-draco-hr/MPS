{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
  ListSequence.fromList(result).addElement(new AbstractSideTransformHintSubstituteAction(MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x263ae7d4319896a7L,"jetbrains.mps.build.structure.BuildSource_JavaDependencyModule").getDeclarationNode(),_context.getSourceNode()){
    public SNode doSubstitute(    @Nullable final EditorContext editorContext,    String pattern){
      SPropertyOperations.set(_context.getSourceNode(),MetaAdapterFactory.getProperty(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x263ae7d4319896a7L,0x64bd442e1cfb0eaaL,"reexport"),"" + (true));
      return _context.getSourceNode();
    }
    public String getMatchingText(    String pattern){
      return "(reexport)";
    }
    public String getVisibleMatchingText(    String pattern){
      return getMatchingText(pattern);
    }
    @Override protected boolean isEnabled(){
      SNode sourceNode=getSourceNode();
      SNode parent=SNodeOperations.getParent(sourceNode);
      SNode containingLink=SNodeOperations.getContainingLinkDeclaration(sourceNode);
      return parent == null || containingLink == null || (ModelConstraints.canBeParent(parent,MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x263ae7d4319896a7L,"jetbrains.mps.build.structure.BuildSource_JavaDependencyModule").getDeclarationNode(),containingLink,null,null) && ModelConstraints.canBeAncestor(parent,null,MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x263ae7d4319896a7L,"jetbrains.mps.build.structure.BuildSource_JavaDependencyModule").getDeclarationNode(),null));
    }
  }
);
  return result;
}
