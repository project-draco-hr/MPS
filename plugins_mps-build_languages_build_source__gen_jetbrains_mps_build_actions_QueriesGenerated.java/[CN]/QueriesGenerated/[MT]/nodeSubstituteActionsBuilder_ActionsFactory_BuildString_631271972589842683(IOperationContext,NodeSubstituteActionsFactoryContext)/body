{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x3cca41cd0fe51d4fL,"jetbrains.mps.build.structure.BuildString").getDeclarationNode();
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      SNode wrappedConcept=MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x440d7ea3b68b7cffL,"jetbrains.mps.build.structure.BuildStringPart").getDeclarationNode();
      IChildNodeSetter setter=new AbstractChildNodeSetter(){
        private SNode wrapNode(        SNode nodeToWrap,        SModel model,        @Nullable EditorContext editorContext){
          SNode res=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x3cca41cd0fe51d4fL,"jetbrains.mps.build.structure.BuildString")));
          ListSequence.fromList(SLinkOperations.getChildren(res,MetaAdapterFactory.getContainmentLink(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x3cca41cd0fe51d4fL,0x440d7ea3b68cba4bL,"parts"))).addElement(nodeToWrap);
          return res;
        }
        public boolean returnSmallPart(        SNode nodeToWrap){
          return false;
        }
        @Override public SNode doExecute(        SNode pn,        SNode oc,        SNode nc,        @Nullable EditorContext editorContext){
          SNode wrappedNode=wrapNode(nc,nc.getModel(),editorContext);
          _context.getChildSetter().execute(_context.getParentNode(),_context.getCurrentTargetNode(),wrappedNode,editorContext);
          return (returnSmallPart(nc) ? nc : wrappedNode);
        }
      }
;
      ListSequence.fromList(result).addSequence(ListSequence.fromList(ModelActions.createChildNodeSubstituteActions(_context.getParentNode(),_context.getCurrentTargetNode(),wrappedConcept,setter,operationContext)));
    }
  }
  return result;
}
