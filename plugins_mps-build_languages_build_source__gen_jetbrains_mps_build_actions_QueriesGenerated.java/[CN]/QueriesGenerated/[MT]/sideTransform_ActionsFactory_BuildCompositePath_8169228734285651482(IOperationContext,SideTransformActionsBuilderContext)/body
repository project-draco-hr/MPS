{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
  ListSequence.fromList(result).addSequence(ListSequence.fromList(ModelActions.createSideTransformHintSubstituteActions(new Computable<SNode>(){
    public SNode compute(){
      SNode curr=_context.getSourceNode();
      while (SNodeOperations.isInstanceOf(curr,MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),8618885170173601777l,"jetbrains.mps.build.structure.BuildCompositePath"))) {
        curr=SNodeOperations.getParent(curr);
      }
      return curr;
    }
  }
.compute(),_context.getSide(),_context.getTransformationTag(),operationContext)));
  return result;
}
