{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x779c6e65c01467f1L,"jetbrains.mps.build.structure.BuildCompositePath").getDeclarationNode();
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<String> queryResult=new Computable<Iterable<String>>(){
        public Iterable<String> compute(){
          return BuildCompositePath_BehaviorDescriptor.getHeadSuggestions_id4jjtc7X04td.invoke(_context.getCurrentTargetNode(),BuildRelativePath_BehaviorDescriptor.getBasePath_id4jjtc7WZMYz.invoke(SNodeOperations.getNodeAncestor(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x65997a657729f6fbL,"jetbrains.mps.build.structure.BuildRelativePath"),false,false),Context.defaultContext()));
        }
      }
.compute();
      if (queryResult != null) {
        for (        final String item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SPropertyOperations.set(_context.getCurrentTargetNode(),MetaAdapterFactory.getProperty(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x779c6e65c01467f1L,0x779c6e65c01467f3L,"head"),(item));
              return SNodeOperations.copyNode(_context.getCurrentTargetNode());
            }
            @Override protected SNode selectChildNode(            SNode createdNode,            SModel model,            String pattern,            EditorContext editorContext){
              SelectionUtil.selectLabelCellAnSetCaret(editorContext,createdNode,"*" + CellIdManager.createPropertyId("head"),-1);
              return null;
            }
          }
);
        }
      }
    }
  }
  return result;
}
