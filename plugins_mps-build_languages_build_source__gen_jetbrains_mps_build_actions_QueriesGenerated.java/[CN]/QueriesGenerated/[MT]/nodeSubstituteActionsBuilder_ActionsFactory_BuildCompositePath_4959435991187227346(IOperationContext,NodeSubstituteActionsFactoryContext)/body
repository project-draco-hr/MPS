{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.build.structure.BuildCompositePath");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(childConcept,NameUtil.nodeFQName(outputConcept))) {
      Iterable<String> queryResult=new Computable<Iterable<String>>(){
        public Iterable<String> compute(){
          return BuildCompositePath_Behavior.call_getHeadSuggestions_4959435991187212109(_context.getCurrentTargetNode(),BehaviorReflection.invokeVirtual(String.class,SNodeOperations.getNodeAncestor(_context.getCurrentTargetNode(),MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),7321017245476976379l,"jetbrains.mps.build.structure.BuildRelativePath"),false,false),"virtual_getBasePath_4959435991187140515",new Object[]{Context.defaultContext()}));
        }
      }
.compute();
      if (queryResult != null) {
        for (        final String item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SPropertyOperations.set(_context.getCurrentTargetNode(),MetaAdapterFactory.getProperty(new UUID(8755280088213897754l,-5075149991798053422l),8618885170173601777l,8618885170173601779l,"head"),(item));
              return SNodeOperations.copyNode(_context.getCurrentTargetNode());
            }
            @Override protected SNode selectChildNode(            SNode createdNode,            SModel model,            String pattern,            EditorContext editorContext){
              SelectionUtil.selectLabelCellAnSetCaret(editorContext,createdNode,"*" + CellIdManager.createPropertyId("head"),-1);
              return null;
            }
          }
);
        }
      }
    }
  }
  return result;
}
