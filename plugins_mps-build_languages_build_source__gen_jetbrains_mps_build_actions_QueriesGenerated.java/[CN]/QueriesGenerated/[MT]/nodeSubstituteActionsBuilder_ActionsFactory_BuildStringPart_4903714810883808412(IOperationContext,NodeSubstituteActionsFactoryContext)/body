{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.build.structure.BuildVarRefStringPart");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          Scope scope=Scope.getScope(((_context.getCurrentTargetNode() != null) ? _context.getCurrentTargetNode() : _context.getParentNode()),null,SConceptOperations.findConceptDeclaration("jetbrains.mps.build.structure.BuildMacro"));
          if (scope == null) {
            return null;
          }
          return Sequence.fromIterable(scope.getAvailableElements(null)).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),3767587139141066978l,"jetbrains.mps.build.structure.BuildVariableMacro"));
            }
          }
).select(new ISelector<SNode,SNode>(){
            public SNode select(            SNode it){
              return SNodeOperations.cast(it,MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),3767587139141066978l,"jetbrains.mps.build.structure.BuildVariableMacro"));
            }
          }
).toListSequence();
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SNode res=SNodeFactoryOperations.createNewNode(model,MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),4903714810883702017l,"jetbrains.mps.build.structure.BuildVarRefStringPart"),null);
              SLinkOperations.setTarget(res,MetaAdapterFactory.getReferenceLink(new UUID(8755280088213897754l,-5075149991798053422l),4903714810883702017l,4903714810883702018l,"macro"),(item));
              return res;
            }
            public String getMatchingText(            String pattern){
              return "$" + SPropertyOperations.getString((item),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"));
            }
            public String getVisibleMatchingText(            String pattern){
              return getMatchingText(pattern);
            }
          }
);
        }
      }
    }
  }
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.build.structure.BuildTextStringPart");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      ListSequence.fromList(result).addElement(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode buildText=SNodeFactoryOperations.createNewNode(model,MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),4903714810883702019l,"jetbrains.mps.build.structure.BuildTextStringPart"),null);
          SPropertyOperations.set(buildText,MetaAdapterFactory.getProperty(new UUID(8755280088213897754l,-5075149991798053422l),4903714810883702019l,4903714810883755350l,"text"),pattern);
          return buildText;
        }
        public String getMatchingText(        String pattern){
          if ((pattern == null || pattern.length() == 0)) {
            return "text";
          }
{
            Pattern _pattern_0=REGEXP_x583g4_a0a0b0b0a0a0a0c0a0c0m;
            Matcher _matcher_0=_pattern_0.matcher(pattern);
            if (_matcher_0.find()) {
              SNode container=(SNodeOperations.isInstanceOf(_context.getParentNode(),MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),4380385936562003279l,"jetbrains.mps.build.structure.BuildString")) ? SNodeOperations.getParent(_context.getParentNode()) : _context.getParentNode());
              if (SNodeOperations.isInstanceOf(container,MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),9184644532456897460l,"jetbrains.mps.build.structure.BuildStringContainer"))) {
                if (BehaviorReflection.invokeVirtual(Boolean.TYPE,SNodeOperations.cast(container,MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),9184644532456897460l,"jetbrains.mps.build.structure.BuildStringContainer")),"virtual_isValidPart_9184644532456897464",new Object[]{pattern,(SNodeOperations.isInstanceOf(_context.getParentNode(),MetaAdapterFactory.getConcept(new UUID(8755280088213897754l,-5075149991798053422l),4380385936562003279l,"jetbrains.mps.build.structure.BuildString")) ? _context.getParentNode().getRoleInParent() : _context.getCurrentTargetNode().getRoleInParent())})) {
                  return pattern;
                }
              }
 else               if (!(pattern.contains("$"))) {
                return pattern;
              }
              return "text";
            }
          }
          return null;
        }
        public String getVisibleMatchingText(        String pattern){
          return getMatchingText(pattern);
        }
      }
);
    }
  }
  return result;
}
