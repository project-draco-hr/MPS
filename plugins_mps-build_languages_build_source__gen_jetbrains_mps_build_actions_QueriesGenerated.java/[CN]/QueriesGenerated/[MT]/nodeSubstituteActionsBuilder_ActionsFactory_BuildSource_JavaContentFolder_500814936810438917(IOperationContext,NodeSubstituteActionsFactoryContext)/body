{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x263ae7d4319546c6L,"jetbrains.mps.build.structure.BuildSource_JavaContentFolder").getDeclarationNode();
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<String> queryResult=new Computable<Iterable<String>>(){
        public Iterable<String> compute(){
          return Sequence.fromIterable(Sequence.fromArray(new String[]{"source","test","excluded"})).toListSequence();
        }
      }
.compute();
      if (queryResult != null) {
        for (        final String item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SNode node=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x263ae7d4319546c6L,"jetbrains.mps.build.structure.BuildSource_JavaContentFolder")),null);
              SPropertyOperations.set(node,MetaAdapterFactory.getProperty(0x798100da4f0a421aL,0xb99171f8c50ce5d2L,0x263ae7d4319546c6L,0x48d5d03db92974fbL,"kind"),(item));
              return node;
            }
          }
);
        }
      }
    }
  }
  return result;
}
