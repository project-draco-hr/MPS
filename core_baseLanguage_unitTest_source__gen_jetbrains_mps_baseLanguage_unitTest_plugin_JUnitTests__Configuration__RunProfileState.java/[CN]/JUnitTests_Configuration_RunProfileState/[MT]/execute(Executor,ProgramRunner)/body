{
  Project project=myEnvironment.getProject();
  List<ITestNodeWrapper> nodeWrappers=ListSequence.<ITestNodeWrapper>fromList(myRunConfiguration.getTests()).toListSequence();
  final ProcessHandler process=new Junit_Command().setDebuggerSettings(myDebuggerSettings.getCommandLine(true)).createProcess(nodeWrappers,myRunConfiguration.getJavaRunParameters().getJavaRunParameters());
  TestRunState runState=new TestRunState(nodeWrappers);
  TestEventsDispatcher eventsDispatcher=new TestEventsDispatcher(runState);
  ConsoleView console=ConsoleCreator.createConsoleView(project,false);
  console.addMessageFilter(new JavaStackTraceFilter());
  final UnitTestViewComponent viewComponent=new UnitTestViewComponent(project,ProjectOperationContext.get(project),console,runState,new _FunctionTypes._void_P0_E0(){
    public void invoke(){
      if (process != null) {
        process.destroyProcess();
      }
    }
  }
);
{
    ProcessHandler _processHandler=process;
    _processHandler.addProcessListener(new UnitTestProcessListener(eventsDispatcher));
    return new DefaultExecutionResult(_processHandler,new DefaultExecutionConsole(viewComponent,new _FunctionTypes._void_P0_E0(){
      public void invoke(){
        viewComponent.dispose();
      }
    }
));
  }
}
