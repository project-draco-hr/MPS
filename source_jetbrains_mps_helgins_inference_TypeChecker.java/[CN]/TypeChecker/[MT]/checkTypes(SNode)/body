{
  clear();
  NodeTypesComponent nodeTypesComponent=NodeTypesComponentsRepository.getInstance().getNodeTypesComponent(root.getContainingRoot());
  if (nodeTypesComponent != null) {
    nodeTypesComponent.clear();
  }
  if (!loadTypesystemRules(root)) {
    return;
  }
  doCheckTypes(root);
  myEquationManagersStack.peek().solveInequations();
  Map<SNode,SNode> mainContext=getMainContext();
  for (  Map.Entry<SNode,SNode> contextEntry : mainContext.entrySet()) {
    SNode term=contextEntry.getKey();
    if (term == null)     continue;
    SNode type=expandType(contextEntry.getValue(),myHInterpreter.getRuntimeTypesModel());
    if (BaseAdapter.isInstance(type,RuntimeErrorType.class)) {
      reportTypeError(term,((RuntimeErrorType)BaseAdapter.fromNode(type)).getErrorText());
    }
    NodeTypesComponentsRepository.getInstance().getNodeTypesComponent(term.getContainingRoot()).setTypeToNode(term,type);
  }
  for (  SNode node : myNodesWithErrors.keySet()) {
    String errorString="HELGINS ERROR: " + myNodesWithErrors.get(node).reportError();
    myNodesWithErrorStrings.put(node,errorString);
    IStatus status=new Status(IStatus.Code.ERROR,errorString);
    NodeTypesComponentsRepository.getInstance().getNodeTypesComponent(node.getContainingRoot()).setErrorToNode(node,errorString);
  }
}
