{
  Set<SModel> typesModels=new HashSet<SModel>();
  for (  Language language : languages) {
    SModelDescriptor helginsModelDescriptor=language.getHelginsTypesystemModelDescriptor();
    if (helginsModelDescriptor != null) {
      typesModels.add(helginsModelDescriptor.getSModel());
    }
  }
  if (typesModels.isEmpty())   return false;
  myConceptsToRulesCache=new ConceptToRulesMap<Rule>();
  for (  SModel typesModel : typesModels) {
    for (    Rule rule : typesModel.getRootsAdapters(Rule.class)) {
      if (!rule.applicableNodes().hasNext())       continue;
      AnalyzedTermDeclaration analyzedTermDeclaration=rule.applicableNodes().next();
      AbstractConceptDeclaration ruleConcept=ConditionMatcher.getConcept(analyzedTermDeclaration.getCondition());
      myConceptsToRulesCache.putRule(ruleConcept,rule);
    }
    myConceptsToRulesCache.makeConsistent();
    mySubtypingManager.initiate(typesModel);
  }
  return true;
}
