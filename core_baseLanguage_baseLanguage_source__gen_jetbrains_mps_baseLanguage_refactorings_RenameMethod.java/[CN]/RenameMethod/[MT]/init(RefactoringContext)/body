{
  final Wrappers._T<List<SNode>> overriding=new Wrappers._T<List<SNode>>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      overriding.value=MethodRefactoringUtils.findOverridingMethods(RenameUtil.getMethodDeclaration(refactoringContext.getSelectedNode()),new EmptyProgressIndicator());
    }
  }
);
  return (ListSequence.<SNode>fromList(overriding.value).isEmpty() ? RenameMethod.this.ask(refactoringContext,MPSChooserFactory.createStringChooser(refactoringContext,"newName",new RenameMethod_newName_Settings(refactoringContext))) : RenameMethod.this.ask(refactoringContext,MPSChooserFactory.createStringChooser(refactoringContext,"newName",new RenameMethod_newName_Settings(refactoringContext)),MPSChooserFactory.createBooleanChooser(refactoringContext,"refactorOverriding",new RenameMethod_refactorOverriding_Settings(refactoringContext))));
}
