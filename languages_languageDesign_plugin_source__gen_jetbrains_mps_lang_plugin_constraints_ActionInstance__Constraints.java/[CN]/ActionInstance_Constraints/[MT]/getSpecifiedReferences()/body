{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0x28f9e4973b424291L,0xaeba0a1039153ab1L,0x1181da2ba57L,0x1181da2f27fL,"action"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x28f9e4973b424291L,0xaeba0a1039153ab1L,0x1181da2ba57L,0x1181da2f27fL),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return SModelOperations.rootsIncludingImported(_context.getModel(),MetaAdapterFactory.getConcept(0x28f9e4973b424291L,0xaeba0a1039153ab1L,0x1181ca87c38L,"jetbrains.mps.lang.plugin.structure.ActionDeclaration"));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_m7euep_a0a1a0a0a1a0b0a1a2;
        }
      }
;
    }
  }
);
  return references;
}
