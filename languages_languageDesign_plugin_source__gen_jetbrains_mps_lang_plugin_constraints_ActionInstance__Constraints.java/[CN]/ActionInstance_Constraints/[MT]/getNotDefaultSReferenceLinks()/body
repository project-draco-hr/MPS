{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(2952642368903463569l,-5856357300648461647l),1203088046679l,1203088061055l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(2952642368903463569l,-5856357300648461647l),1203088046679l,1203088061055l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return SModelOperations.rootsIncludingImported(_context.getModel(),MetaAdapterFactory.getConcept(new UUID(2952642368903463569l,-5856357300648461647l),1203071646776l,"jetbrains.mps.lang.plugin.structure.ActionDeclaration"));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_m7euep_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
