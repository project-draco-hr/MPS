{
  return new JPanel(){
    private Color foundColor=null;
    private int radius=0;
    private void initialize(){
      setOpaque(false);
      SNodeOperations.getModel(node).getRepository().getModelAccess().runReadAction(new Runnable(){
        public void run(){
          foundColor=ColorReference_Behavior.call_findColor_2097561739636344968(SLinkOperations.getTarget(node,"color",true));
          radius=SPropertyOperations.getInteger(node,"radius");
        }
      }
);
    }
    @Override protected void paintComponent(    final Graphics graphics){
      super.paintComponent(graphics);
      initialize();
      if (foundColor == null) {
        return;
      }
      graphics.setColor(foundColor);
      graphics.drawOval(10,10,radius,radius);
    }
    @Override public Dimension getPreferredSize(){
      initialize();
      return new Dimension(20 + radius,20 + radius);
    }
  }
;
}
