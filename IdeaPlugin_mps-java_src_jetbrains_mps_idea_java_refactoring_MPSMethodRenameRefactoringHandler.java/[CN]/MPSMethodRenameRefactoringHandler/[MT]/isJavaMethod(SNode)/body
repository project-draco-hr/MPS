{
  return jetbrains.mps.smodel.ModelAccess.instance().runReadAction(new Computable<Boolean>(){
    @Override public Boolean compute(){
      SConcept concept=node.getConcept();
      SConceptRepository repo=SConceptRepository.getInstance();
      return concept.isSubConceptOf(repo.getConcept("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration")) || concept.isSubConceptOf(repo.getConcept("jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration")) || concept.isSubConceptOf(repo.getConcept("jetbrains.mps.baseLanguage.structure.ConstructorDeclaration"));
    }
  }
);
}
