{
  super("Migrate components usages");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Migrate ParameterBrowser usages";
    }
    public String getAdditionalInfo(){
      return "Migrate ParameterBrowser usages";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.uiLanguage.structure.ComponentCreator";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      SReference reference=node.getReference("componentDeclaration");
      return reference != null && reference.getTargetSModelReference().equals(SModelRepository.getInstance().getModelDescriptor(new SModelReference("jetbrains.mps.execution.lib.ui","")).getReference()) && reference.getTargetNodeId().toString().contains("1240470842553500411");
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode parameterBrowserDeclaration=ListSequence.fromList(SModelOperations.getRoots(SNodeOperations.getModel(node),"jetbrains.mps.uiLanguage.structure.ComponentDeclaration")).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SPropertyOperations.getString(it,"name").equals("ParameterBrowser");
        }
      }
);
      if ((parameterBrowserDeclaration == null)) {
        parameterBrowserDeclaration=createComponentDeclaration_wft9px_a0a0b0a0();
        parameterBrowserDeclaration.setReference("mapTo",new DynamicReference("mapTo",parameterBrowserDeclaration,SModelRepository.getInstance().getModelDescriptor(new SModelReference("jetbrains.mps.execution.lib.ui","")).getReference(),"RawLineEditorComponent"));
        SModelOperations.addRootNode(SNodeOperations.getModel(node),parameterBrowserDeclaration);
        SModelOperations.addRootNode(SNodeOperations.getModel(node),createComponentController_wft9px_a0a3a1a0a(parameterBrowserDeclaration));
      }
      SNode variableDeclaration=SNodeOperations.getAncestor(node,"jetbrains.mps.baseLanguage.structure.VariableDeclaration",false,false);
      if ((variableDeclaration != null)) {
        SReference oldComponentReference=node.getReference("componentDeclaration");
{
          IMatchingPattern pattern_wft9px_b0e0a0=HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.uiLanguage.structure.ComponentType");
          SNode coercedNode_wft9px_b0e0a0=TypeChecker.getInstance().getRuntimeSupport().coerce_(SLinkOperations.getTarget(variableDeclaration,"type",true),pattern_wft9px_b0e0a0);
          if (coercedNode_wft9px_b0e0a0 != null) {
            SReference reference=coercedNode_wft9px_b0e0a0.getReference("component");
            if (reference != null && reference.getTargetSModelReference().equals(oldComponentReference.getTargetSModelReference()) && reference.getTargetNodeId().equals(oldComponentReference.getTargetNodeId())) {
              SLinkOperations.setTarget(coercedNode_wft9px_b0e0a0,"component",parameterBrowserDeclaration,false);
            }
          }
 else {
          }
        }
      }
      SLinkOperations.setTarget(node,"componentDeclaration",parameterBrowserDeclaration,false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
