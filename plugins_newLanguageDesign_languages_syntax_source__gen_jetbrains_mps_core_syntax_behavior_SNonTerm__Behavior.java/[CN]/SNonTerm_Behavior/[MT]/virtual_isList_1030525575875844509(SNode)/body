{
  return ListSequence.fromList(SLinkOperations.getTargets(thisNode,"rules",true)).count() == 2 && ListSequence.fromList(SLinkOperations.getTargets(thisNode,"rules",true)).translate(new ITranslator2<SNode,SNode>(){
    public Iterable<SNode> translate(    SNode it){
      return SLinkOperations.getTargets(it,"parts",true);
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.core.syntax.structure.SSymbolRef") && SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.core.syntax.structure.SSymbolRef"),"ref",false) == SLinkOperations.getTarget(thisNode,"sym",true);
    }
  }
).count() == 1;
}
