{
  return new _FunctionTypes._return_P2_E0<Boolean,Integer,Integer>(){
    public Boolean invoke(    Integer a,    Integer b){
      return a == b;
    }
  }
.invoke(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"rules",true)).count(),2) && new _FunctionTypes._return_P2_E0<Boolean,Integer,Integer>(){
    public Boolean invoke(    Integer a,    Integer b){
      return a == b;
    }
  }
.invoke(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"rules",true)).translate(new ITranslator2<SNode,SNode>(){
    public Iterable<SNode> translate(    SNode it){
      return SLinkOperations.getTargets(it,"parts",true);
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.core.syntax.structure.SSymbolRef") && new _FunctionTypes._return_P2_E0<Boolean,SNode,SNode>(){
        public Boolean invoke(        SNode a,        SNode b){
          return a == b;
        }
      }
.invoke(SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.core.syntax.structure.SSymbolRef"),"ref",false),SLinkOperations.getTarget(thisNode,"sym",true));
    }
  }
).count(),1);
}
