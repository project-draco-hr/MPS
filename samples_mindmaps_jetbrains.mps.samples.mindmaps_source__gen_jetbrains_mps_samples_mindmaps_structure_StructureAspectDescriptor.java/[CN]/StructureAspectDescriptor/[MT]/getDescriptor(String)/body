{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.samples.mindmaps.structure.MindMap").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"thoughts","relationships"},new boolean[]{true,true}).create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.samples.mindmaps.structure.Relationship").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("source","target").alias("relationship","").create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.samples.mindmaps.structure.Thought").super_("jetbrains.mps.samples.mindmaps.structure.VisualBox").parents("jetbrains.mps.samples.mindmaps.structure.VisualBox","jetbrains.mps.lang.core.structure.INamedConcept").alias("throught","").create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.samples.mindmaps.structure.VisualBox").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").properties("x","y","myIsClicked").abstract_().create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
