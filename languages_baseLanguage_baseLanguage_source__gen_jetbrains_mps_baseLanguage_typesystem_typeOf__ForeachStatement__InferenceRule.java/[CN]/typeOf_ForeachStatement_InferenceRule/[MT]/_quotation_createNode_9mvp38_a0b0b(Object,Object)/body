{
  PersistenceFacade facade=PersistenceFacade.getInstance();
  SNode quotedNode_3=null;
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  SNode quotedNode_7=null;
  quotedNode_3=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.lang.typesystem.structure.JoinType",null,null,GlobalScope.getInstance(),false);
  quotedNode_4=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",null,null,GlobalScope.getInstance(),false);
  quotedNode_4.setReference("classifier",SReference.create("classifier",quotedNode_4,facade.createModelReference("f:java_stub#6354ebe7-c22a-4a0f-ac54-50b52ab9b065#java.lang(JDK/java.lang@java_stub)"),facade.createNodeId("~Iterable")));
  quotedNode_6=(SNode)parameter_1;
  if (quotedNode_6 != null) {
    quotedNode_4.addChild("parameter",HUtil.copyIfNecessary(quotedNode_6));
  }
  quotedNode_3.addChild("argument",quotedNode_4);
  quotedNode_5=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ArrayType",null,null,GlobalScope.getInstance(),false);
  quotedNode_7=(SNode)parameter_2;
  if (quotedNode_7 != null) {
    quotedNode_5.addChild("componentType",HUtil.copyIfNecessary(quotedNode_7));
  }
  quotedNode_3.addChild("argument",quotedNode_5);
  return quotedNode_3;
}
