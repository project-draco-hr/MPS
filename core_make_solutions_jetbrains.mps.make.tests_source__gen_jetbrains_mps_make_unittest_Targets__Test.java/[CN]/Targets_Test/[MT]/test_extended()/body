{
  TargetRange tr=new TargetRange();
  final ITarget foo=Mockups.target(context,"foo",new ITarget.Name("foo"));
  context.checking(new Expectations(){
{
      atLeast(1).of(foo).before();
      will(returnValue(Sequence.fromArray(new ITarget.Name[]{new ITarget.Name("bar")})));
    }
  }
);
  Mockups.allowing(context,foo);
  tr.addTarget(foo);
  Assert.assertTrue(tr.hasTarget(new ITarget.Name("foo")));
  final ITarget foo2=Mockups.target(context,"foo2",new ITarget.Name("foo"));
  context.checking(new Expectations(){
{
      atLeast(1).of(foo2).before();
      will(returnValue(Sequence.fromArray(new ITarget.Name[]{new ITarget.Name("baz")})));
    }
  }
);
  Mockups.allowing(context,foo2);
  tr.addTarget(foo2);
  Assert.assertTrue(tr.hasTarget(new ITarget.Name("foo")));
  ITarget trg=tr.getTarget(new ITarget.Name("foo"));
  Assert.assertNotNull(trg);
  Assert.assertTrue(Sequence.fromIterable(Sequence.fromArray(new ITarget.Name[]{new ITarget.Name("bar"),new ITarget.Name("baz")})).disjunction(Sequence.fromIterable(trg.before())).isEmpty());
  Assert.assertFalse(tr.hasCycles());
  tr.sortedTargets();
  Assert.assertSame(trg,Sequence.fromIterable(tr.sortedTargets()).first());
}
