{
  try {
    final List<SNode> nodes=new ArrayList<SNode>();
    ProgressManager.getInstance().run(new Task.Modal(GoToOverridingMethod_Action.this.project,"Searching...",true){
      public void run(      @NotNull final ProgressIndicator p){
        ModelAccess.instance().runReadAction(new Runnable(){
          public void run(){
            ListSequence.fromList(nodes).addSequence(ListSequence.fromList(FindUtils.executeFinder("jetbrains.mps.baseLanguage.findUsages.OverridingMethods_Finder",GoToOverridingMethod_Action.this.methodNode,GoToOverridingMethod_Action.this.scope,p)));
          }
        }
);
      }
    }
);
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        Rectangle cellBounds=GoToOverridingMethod_Action.this.editorContext.getSelectedCell().getBounds();
        Point point=new Point(((int)cellBounds.getMinX()),((int)cellBounds.getMaxY()));
        RelativePoint relPpoint=new RelativePoint(GoToOverridingMethod_Action.this.editorComponent,point);
        GoToHelper.showOverridingMethodsMenu(nodes,relPpoint,GoToOverridingMethod_Action.this.project);
      }
    }
);
  }
 catch (  Throwable t) {
    LOG.error("User's action execute method failed. Action:" + "GoToOverridingMethod",t);
  }
}
