{
  FeatureUsageTracker.getInstance().triggerFeatureUsed("navigation.popup.file");
  final Project project=e.getData(PlatformDataKeys.PROJECT);
  final GotoFileModel gotoFileModel=new GotoFileModel(project);
  final ChooseByNamePopup popup=ChooseByNamePopup.createPopup(project,gotoFileModel,getPsiContext(e));
  final FilterUI filterUI=new FilterUI(popup,gotoFileModel,project);
  popup.invoke(new ChooseByNamePopupComponent.Callback(){
    public void onClose(){
      if (GotoFileAction.class.equals(myInAction))       myInAction=null;
      filterUI.close();
    }
    @Patch public void elementChosen(    Object element){
      if (!(element instanceof NavigationItem))       return;
      final NavigationItem item=(NavigationItem)element;
      ApplicationManager.getApplication().invokeLater(new Runnable(){
        @Patch public void run(){
          if (item instanceof FileNavigationItem) {
            final OpenFileDescriptor descriptor=new OpenFileDescriptor(project,((FileNavigationItem)item).getVirtualFile(),popup.getLinePosition(),popup.getColumnPosition());
            if (descriptor.canNavigate()) {
              descriptor.navigate(true);
            }
          }
        }
      }
,ModalityState.NON_MODAL);
    }
  }
,ModalityState.current(),true);
}
