{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("attributeDeclaration",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      ISearchScope searchScope;
      SNode element=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.xml.structure.Element",false,false);
      if ((element == null)) {
        searchScope=SModelSearchUtil.createModelAndImportedModelsScope(_context.getModel(),operationContext.getScope());
      }
 else {
        searchScope=new SimpleSearchScope(ElementDeclaration_Behavior.call_getAttributeDeclarations_1213877429821(SLinkOperations.getTarget(element,"elementDeclaration",false)));
      }
      return searchScope;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c89590585(jetbrains.mps.xml.constraints)","1213104860621");
    }
  }
);
  return result;
}
