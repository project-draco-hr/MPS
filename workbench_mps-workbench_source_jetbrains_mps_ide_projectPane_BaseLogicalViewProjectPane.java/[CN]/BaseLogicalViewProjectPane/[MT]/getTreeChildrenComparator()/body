{
  return new Comparator<Object>(){
    @Override public int compare(    final Object o1,    final Object o2){
      if (!(o1 instanceof SNode) || !(o2 instanceof SNode)) {
        return 0;
      }
      final SNode node1=(SNode)o1;
      final SNode node2=(SNode)o2;
      if (!isSortByType()) {
        return comparePresentations(node1,node2);
      }
      int result=compareConceptFqNames(node1,node2);
      if (result != 0) {
        return result;
      }
      return comparePresentations(node1,node2);
    }
    private int compareConceptFqNames(    SNode node1,    SNode node2){
      String concept1=node1.getConcept().getQualifiedName();
      String concept2=node2.getConcept().getQualifiedName();
      return concept1.compareTo(concept2);
    }
    private int comparePresentations(    SNode node1,    SNode node2){
      String presentation1=node1.getPresentation();
      String presentation2=node2.getPresentation();
      if (presentation1 == null) {
        return presentation2 == null ? 0 : 1;
      }
      if (presentation2 == null) {
        return -1;
      }
      return presentation1.compareTo(presentation2);
    }
  }
;
}
