{
  List<SNode> ifcs=SModelOperations.nodes(SNodeOperations.getModel(SLinkOperations.getTarget(_quotation_createNode_x583g4_a0a0a0a501(),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier"))),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101edd46144L,"jetbrains.mps.baseLanguage.structure.Interface"));
  int cmpSize=ListSequence.fromList(NamedTupleDeclaration_BehaviorDescriptor.allExtends_id2ItBWjOSZqc.invoke(_context.getNode())).foldLeft(0,new ILeftCombinator<SNode,Integer>(){
    public Integer combine(    Integer s,    SNode ntd){
      return s + ListSequence.fromList(SLinkOperations.getChildren(ntd,MetaAdapterFactory.getContainmentLink(0xa247e09e243545baL,0xb8d207e93feba96aL,0x1208fa48aa5L,0x12099b7fca9L,"component"))).count();
    }
  }
);
  for (  SNode ifc : ifcs) {
    if (SPropertyOperations.getString(ifc,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x11a134c900dL,"nestedName")).equals("Tuples._" + cmpSize)) {
      return ifc;
    }
  }
  return null;
}
