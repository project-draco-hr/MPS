{
  List<SNode> ifcs=SModelOperations.nodes(SNodeOperations.getModel(SLinkOperations.getTarget(_quotation_createNode_x583g4_a0a0a0a211(),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101de48bf9eL,0x101de490babL,"classifier"))),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"));
  int cmpSize=ListSequence.fromList(SLinkOperations.getChildren(_context.getNode(),MetaAdapterFactory.getContainmentLink(0xa247e09e243545baL,0xb8d207e93feba96aL,0x1208fa48aa5L,0x12099b7fca9L,"component"))).count();
  for (  SNode cc : ifcs) {
    if (SPropertyOperations.getString(cc,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x11a134c900dL,"nestedName")).equals("MultiTuple._" + cmpSize)) {
      return Sequence.fromIterable(ClassConcept_Behavior.call_constructors_5292274854859503373(cc)).first();
    }
  }
  return null;
}
