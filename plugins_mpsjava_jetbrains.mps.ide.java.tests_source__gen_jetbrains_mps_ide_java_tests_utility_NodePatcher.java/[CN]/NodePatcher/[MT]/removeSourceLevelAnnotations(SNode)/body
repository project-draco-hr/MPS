{
  final SNode retentionAnno=ListSequence.fromList(SModelOperations.getRoots(SModelRepository.getInstance().getModelDescriptor("java.lang.annotation@java_stub"),"jetbrains.mps.baseLanguage.structure.Annotation")).findFirst(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SPropertyOperations.getString(it,"name").equals("Retention");
    }
  }
);
  for (  SNode thisAnnoInst : ListSequence.fromList(SNodeOperations.getDescendants(node,"jetbrains.mps.baseLanguage.structure.AnnotationInstance",false,new String[]{}))) {
    SNode retensionExp=SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getTargets(ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(thisAnnoInst,"annotation",false),"annotation",true)).findFirst(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SLinkOperations.getTarget(it,"annotation",false) == retentionAnno;
      }
    }
),"value",true)).findFirst(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SPropertyOperations.getString(SLinkOperations.getTarget(it,"key",false),"name").equals("value");
      }
    }
),"value",true);
    if ((retensionExp == null) || !(SNodeOperations.isInstanceOf(retensionExp,"jetbrains.mps.baseLanguage.structure.EnumConstantReference"))) {
      continue;
    }
    SNodeId sourceConst=new jetbrains.mps.smodel.SNodeId.Foreign(jetbrains.mps.smodel.SNodeId.Foreign.ID_PREFIX + "RetentionPolicy.SOURCE");
    SNodeId nodeId=retensionExp.getReference("enumConstantDeclaration").getTargetNodeId();
    boolean isSourceRetention=sourceConst.equals(nodeId);
    if (isSourceRetention) {
      SNodeOperations.deleteNode(thisAnnoInst);
    }
  }
}
