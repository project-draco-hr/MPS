{
  final SNode retentionAnno=ListSequence.fromList(SModelOperations.getRoots(SModelRepository.getInstance().getModelDescriptor("java.lang.annotation@java_stub"),"jetbrains.mps.baseLanguage.structure.Annotation")).findFirst(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")).equals("Retention");
    }
  }
);
  for (  SNode thisAnnoInst : ListSequence.fromList(SNodeOperations.getNodeDescendants(node,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1188207840427l,"jetbrains.mps.baseLanguage.structure.AnnotationInstance"),false,new SConcept[]{}))) {
    SNode retensionExp=SLinkOperations.getTarget(ListSequence.fromList(SLinkOperations.getChildren(ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(thisAnnoInst,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1188207840427l,1188208074048l,"annotation")),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1188208481402l,1188208488637l,"annotation"))).findFirst(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1188207840427l,1188208074048l,"annotation")) == retentionAnno;
      }
    }
),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1188207840427l,1188214630783l,"value"))).findFirst(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SPropertyOperations.getString(SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1188214545140l,1188214555875l,"key")),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name")).equals("value");
      }
    }
),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1188214545140l,1188214607812l,"value"));
    if ((retensionExp == null) || !(SNodeOperations.isInstanceOf(retensionExp,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1083260308424l,"jetbrains.mps.baseLanguage.structure.EnumConstantReference")))) {
      continue;
    }
    SNodeId sourceConst=new jetbrains.mps.smodel.SNodeId.Foreign(jetbrains.mps.smodel.SNodeId.Foreign.ID_PREFIX + "RetentionPolicy.SOURCE");
    SNodeId nodeId=retensionExp.getReference("enumConstantDeclaration").getTargetNodeId();
    boolean isSourceRetention=sourceConst.equals(nodeId);
    if (isSourceRetention) {
      SNodeOperations.deleteNode(thisAnnoInst);
    }
  }
}
