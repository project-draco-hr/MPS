{
  if (SConceptOperations.isSubConceptOf(expression,"jetbrains.mps.baseLanguage.structure.BinaryOperation")) {
switch (BehaviorReflection.invokeVirtualStatic(Integer.TYPE,SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(((SNode)expression))),"virtual_getPriority_1262430001741497858",new Object[]{})) {
case 2:
      return PrecedenceUtil.Precedence.J_13;
case 3:
    return PrecedenceUtil.Precedence.J_12;
case 4:
  return PrecedenceUtil.Precedence.J_11;
case 5:
return PrecedenceUtil.Precedence.J_10;
case 6:
return PrecedenceUtil.Precedence.J_9;
case 7:
return PrecedenceUtil.Precedence.J_8;
case 8:
return PrecedenceUtil.Precedence.J_7;
case 9:
return PrecedenceUtil.Precedence.J_6;
case 10:
return PrecedenceUtil.Precedence.J_5;
case 11:
return PrecedenceUtil.Precedence.J_4;
default :
}
}
if (SConceptOperations.isSubConceptOf(expression,"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression")) {
return PrecedenceUtil.Precedence.PARENTHESES;
}
if (SConceptOperations.isSubConceptOf(expression,"jetbrains.mps.baseLanguage.structure.ArrayAccessExpression") || SConceptOperations.isSubConceptOf(expression,"jetbrains.mps.baseLanguage.structure.IMethodCall") || SConceptOperations.isSubConceptOf(expression,"jetbrains.mps.baseLanguage.structure.VariableReference")|| SConceptOperations.isSubConceptOf(expression,"jetbrains.mps.baseLanguage.collections.structure.MapElement")|| SConceptOperations.isSubConceptOf(expression,"jetbrains.mps.baseLanguage.collections.structure.ListElementAccessExpression")|| SConceptOperations.isSubConceptOf(expression,"jetbrains.mps.lang.smodel.structure.SNodeTypeCastExpression")) {
return PrecedenceUtil.Precedence.ARRAY_OPARATIONS_AND_METHOD_CALLS;
}
if (SConceptOperations.isSubConceptOf(expression,"jetbrains.mps.baseLanguage.structure.DotExpression")) {
return PrecedenceUtil.Precedence.DOT_EXPRESSION;
}
if (SConceptOperations.isSubConceptOf(expression,"jetbrains.mps.baseLanguage.structure.PostfixIncrementExpression") || SConceptOperations.isSubConceptOf(expression,"jetbrains.mps.baseLanguage.structure.PostfixDecrementExpression")) {
return PrecedenceUtil.Precedence.POSTFIX_EXPRESSIONS;
}
if (SConceptOperations.isSubConceptOf(expression,"jetbrains.mps.baseLanguage.structure.PrefixIncrementExpression") || SConceptOperations.isSubConceptOf(expression,"jetbrains.mps.baseLanguage.structure.PrefixDecrementExpression") || SConceptOperations.isSubConceptOf(expression,"jetbrains.mps.baseLanguage.structure.UnaryMinus")|| SConceptOperations.isSubConceptOf(expression,"jetbrains.mps.baseLanguage.structure.NotExpression")|| SConceptOperations.isSubConceptOf(expression,"jetbrains.mps.baseLanguage.structure.BitwiseNotExpression")) {
return PrecedenceUtil.Precedence.J_2;
}
if (SConceptOperations.isSubConceptOf(expression,"jetbrains.mps.baseLanguage.structure.CastExpression") || SConceptOperations.isSubConceptOf(expression,"jetbrains.mps.baseLanguage.structure.GenericNewExpression")) {
return PrecedenceUtil.Precedence.J_3;
}
if (SConceptOperations.isSubConceptOf(expression,"jetbrains.mps.baseLanguage.structure.InstanceOfExpression")) {
return PrecedenceUtil.Precedence.J_7;
}
if (SConceptOperations.isSubConceptOf(expression,"jetbrains.mps.baseLanguage.structure.TernaryOperatorExpression")) {
return PrecedenceUtil.Precedence.J_14;
}
if (SConceptOperations.isSubConceptOf(expression,"jetbrains.mps.baseLanguage.structure.BaseAssignmentExpression")) {
return PrecedenceUtil.Precedence.J_15;
}
return PrecedenceUtil.Precedence.DEFAULT;
}
