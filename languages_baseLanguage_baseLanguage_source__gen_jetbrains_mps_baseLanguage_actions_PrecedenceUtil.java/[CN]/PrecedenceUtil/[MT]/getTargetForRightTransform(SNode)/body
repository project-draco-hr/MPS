{
  SNode targetNode=contextNode;
  for (SNode parentNode=SNodeOperations.getParent(targetNode); parentNode != null && SNodeOperations.isInstanceOf(parentNode,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068431790191l,"jetbrains.mps.baseLanguage.structure.Expression")); parentNode=SNodeOperations.getParent(targetNode)) {
    if (SNodeOperations.isInstanceOf(parentNode,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,"jetbrains.mps.baseLanguage.structure.IMethodCall")) || SNodeOperations.isInstanceOf(parentNode,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1079359253375l,"jetbrains.mps.baseLanguage.structure.ParenthesizedExpression"))) {
      break;
    }
    SNode targetContainingLink=SNodeOperations.getContainingLinkDeclaration(targetNode);
    if (SNodeOperations.isInstanceOf(parentNode,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1081773326031l,"jetbrains.mps.baseLanguage.structure.BinaryOperation")) && targetContainingLink == SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.BinaryOperation","leftExpression")) {
      break;
    }
    if (SNodeOperations.isInstanceOf(parentNode,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1197027756228l,"jetbrains.mps.baseLanguage.structure.DotExpression")) && targetContainingLink == SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.DotExpression","operand")) {
      break;
    }
    targetNode=SNodeOperations.cast(parentNode,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068431790191l,"jetbrains.mps.baseLanguage.structure.Expression"));
  }
  return targetNode;
}
