{
  SNode nodeToProcess=PrecedenceUtil.getTargetForLeftTransform(sourceNode,result);
  if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(nodeToProcess),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbdeb6fecfL,"jetbrains.mps.baseLanguage.structure.BinaryOperation")) && SNodeOperations.getContainingLinkDeclaration(nodeToProcess) == SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbdeb6fecfL,0xfbdeb7a11bL,"rightExpression"))) {
    SNode parentBinaryOperation=SNodeOperations.cast(SNodeOperations.getParent(nodeToProcess),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbdeb6fecfL,"jetbrains.mps.baseLanguage.structure.BinaryOperation"));
    if (PrecedenceUtil.isSamePriority(parentBinaryOperation,result)) {
      SNodeOperations.replaceWithAnother(parentBinaryOperation,result);
      SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbdeb6fecfL,0xfbdeb7a11bL,"rightExpression"),nodeToProcess);
      SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbdeb6fecfL,0xfbdeb7a11cL,"leftExpression"),parentBinaryOperation);
      return result;
    }
  }
  SNodeOperations.replaceWithAnother(nodeToProcess,result);
  SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbdeb6fecfL,0xfbdeb7a11bL,"rightExpression"),nodeToProcess);
  PrecedenceUtil.parenthesiseIfNecessary(result);
  return result;
}
