{
  List<INodeSubstituteAction> result=new ArrayList<INodeSubstituteAction>();
{
    AbstractConceptDeclaration outputConcept=SModelUtil_new.findAbstractConceptDeclaration("?output concept is not specified?",operationContext.getScope());
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(childConcept,NameUtil.nodeFQName((SNode)BaseAdapter.fromAdapter(outputConcept)))) {
      result.add(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter(),operationContext.getScope()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode hld=SConceptOperations.createNewNode("jetbrains.mps.ypath.structure.GenericFeatureFunHolder",null);
          SPropertyOperations.set(hld,"byIndex","" + (true));
          return hld;
        }
        public String getMatchingText(        String pattern){
          return "by index";
        }
      }
);
    }
  }
{
    AbstractConceptDeclaration outputConcept=SModelUtil_new.findAbstractConceptDeclaration("?output concept is not specified?",operationContext.getScope());
    SNode childConcept=(SNode)_context.getChildConcept();
    if (outputConcept == null || SConceptOperations.isSuperConceptOf(childConcept,NameUtil.nodeFQName((SNode)BaseAdapter.fromAdapter(outputConcept)))) {
      result.add(new DefaultSimpleSubstituteAction(outputConcept,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter(),operationContext.getScope()){
        public SNode createChildNode(        Object parameterObject,        SModel model,        String pattern){
          SNode hld=SConceptOperations.createNewNode("jetbrains.mps.ypath.structure.GenericFeatureFunHolder",null);
          SPropertyOperations.set(hld,"byIndex","" + (false));
          return hld;
        }
        public String getMatchingText(        String pattern){
          return "byelement";
        }
      }
);
    }
  }
  return result;
}
