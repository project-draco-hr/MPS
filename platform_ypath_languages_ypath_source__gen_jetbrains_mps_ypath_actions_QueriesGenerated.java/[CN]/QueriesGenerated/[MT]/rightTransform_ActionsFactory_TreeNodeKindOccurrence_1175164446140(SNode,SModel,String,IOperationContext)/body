{
  List<INodeSubstituteAction> result=new ArrayList<INodeSubstituteAction>();
{
    ConceptDeclaration concept=SModelUtil_new.findConceptDeclaration("jetbrains.mps.ypath.structure.MatchPropertyOperation",operationContext.getScope());
    result.add(new AbstractRTransformHintSubstituteAction(BaseAdapter.fromAdapter(concept),sourceNode){
      public SNode doSubstitute(      String pattern){
        SNode tnko=sourceNode;
        SNode mko=SNodeOperations.getParent(tnko,null,false,false);
        SNode mpo=SModelOperations.createNewNode(model,"jetbrains.mps.ypath.structure.MatchPropertyOperation",null);
        SNodeOperations.replaceWithAnother(mko,mpo);
        SLinkOperations.setTarget(SLinkOperations.getTarget(mpo,"nodeKindOccurrence",true),"nodeKind",SLinkOperations.getTarget(tnko,"nodeKind",false),false);
        return mpo;
      }
      public String getMatchingText(      String pattern){
        return ".";
      }
      public String getDescriptionText(      String pattern){
        return "match property value";
      }
    }
);
  }
  return result;
}
