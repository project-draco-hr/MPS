{
  String graphString="7 15 \n 0 1  \n0 4  \n1 4  \n1 3  \n1 2  \n1 6  \n2 0  \n3 0  \n3 6  \n4 2  \n5 6  \n5 2  \n5 1  \n5 3\n  6 4\n";
  Graph graph=GraphIO.scanGraph(new Scanner(graphString));
  BiconnectAugmentation.makeBiconnected(graph);
  final int maxIndex=graph.getNumNodes();
  EmbeddedGraph embeddedGraph=new ShortestPathEmbeddingFinder(new BiconnectedInitialEmbeddingFinder()).find(graph);
  List<Node> outerNodes=ListSequence.fromList(new ArrayList<Node>());
  BiconnectivityChecker.check(graph);
  for (  Dart dart : ListSequence.fromList(embeddedGraph.getOuterFace().getDarts())) {
    ListSequence.fromList(outerNodes).addElement(dart.getTarget());
  }
  System.out.println(outerNodes);
  outerNodes=ListSequence.fromList(outerNodes).where(new IWhereFilter<Node>(){
    public boolean accept(    Node it){
      return it.getIndex() < maxIndex;
    }
  }
).toListSequence();
  Node s=ListSequence.fromList(outerNodes).getElement(0);
  Node t=ListSequence.fromList(outerNodes).getElement((ListSequence.fromList(outerNodes).count()) / 2);
  Map<Node,Integer> numbering=GraphOrientation.orientST(graph,s,t);
  System.out.println("s = " + s + ", t = "+ t);
  System.out.println(numbering);
  STNumberingChecker.check(graph,s,t,numbering);
}
