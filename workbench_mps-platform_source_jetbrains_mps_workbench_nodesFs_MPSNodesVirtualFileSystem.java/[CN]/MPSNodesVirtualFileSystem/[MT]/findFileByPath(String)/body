{
  return ModelAccess.instance().runReadAction(new Computable<VirtualFile>(){
    @Override public VirtualFile compute(){
      String modelOrNodePath=path;
      Matcher modelRef=MODEL_UID_PATTERN.matcher(modelOrNodePath);
      Matcher nodePath=NODE_PATH.matcher(modelOrNodePath);
      if (!nodePath.matches() && !modelRef.matches())       return null;
      if (nodePath.matches()) {
        return getFileFor(SNodePointer.deserialize(path).resolve(MPSModuleRepository.getInstance()));
      }
 else {
        final SModelReference modelReference=PersistenceFacade.getInstance().createModelReference(modelRef.group());
        return getFileFor(modelReference);
      }
    }
  }
);
}
