{
  return ModelAccess.instance().runReadAction(new Computable<VirtualFile>(){
    @Override public VirtualFile compute(){
      Pattern p=Pattern.compile("(.*)/(.*)");
      Matcher m=p.matcher(path);
      if (!m.matches())       return null;
      SModelReference reference=SModelReference.fromString(m.group(1));
      final String name=m.group(2);
      SModelDescriptor sm=SModelRepository.getInstance().getModelDescriptor(reference);
      if (sm == null)       return null;
      Condition<SNode> cond=new Condition<SNode>(){
        @Override public boolean met(        SNode node){
          return node.getPresentation().equals(name);
        }
      }
;
      Iterator<SNode> iter=new ConditionalIterator<SNode>(sm.getSModel().getRootNodes().iterator(),cond);
      if (!iter.hasNext())       return null;
      return getFileFor(iter.next());
    }
  }
);
}
