{
  SNode container=SNodeOperations.getAncestor(thisNode,"jetbrains.mps.baseLanguage.structure.IStatementListContainer",false,false);
{
    Iterator<SNode> ref_it=ListSequence.fromList(SNodeOperations.getDescendants(container,"jetbrains.mps.baseLanguage.structure.VariableReference",false,new String[]{})).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.baseLanguage.structure.VariableReference"),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,1068581517664l,"variableDeclaration")),"jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration");
      }
    }
).toListSequence().iterator();
    SNode ref_var;
    while (ref_it.hasNext()) {
      ref_var=ref_it.next();
      if (SLinkOperations.getTarget(ref_var,MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1068498886296l,1068581517664l,"variableDeclaration")) == thisNode) {
        SNode referenceContainer=SNodeOperations.getAncestor(ref_var,"jetbrains.mps.baseLanguage.structure.IStatementListContainer",false,false);
        if (referenceContainer != container && SNodeOperations.isInstanceOf(referenceContainer,"jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral")) {
          return true;
        }
      }
    }
  }
  return false;
}
