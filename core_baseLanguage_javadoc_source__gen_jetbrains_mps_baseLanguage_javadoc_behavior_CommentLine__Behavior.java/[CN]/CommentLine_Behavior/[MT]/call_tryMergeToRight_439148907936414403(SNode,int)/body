{
  if (index >= 0 && index + 1 < ListSequence.fromList(SLinkOperations.getTargets(thisNode,"part",true)).count() && SNodeOperations.isInstanceOf(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"part",true)).getElement(index),"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart") && SNodeOperations.isInstanceOf(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"part",true)).getElement(index + 1),"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart")) {
    SNode leftPart=SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"part",true)).getElement(index),"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart");
    SNode rightPart=SNodeOperations.cast(ListSequence.fromList(SLinkOperations.getTargets(thisNode,"part",true)).getElement(index + 1),"jetbrains.mps.baseLanguage.javadoc.structure.TextCommentLinePart");
    String text=((StringUtils.isEmpty(SPropertyOperations.getString(leftPart,"text")) ? "" : SPropertyOperations.getString(leftPart,"text"))) + ((StringUtils.isEmpty(SPropertyOperations.getString(rightPart,"text")) ? "" : SPropertyOperations.getString(rightPart,"text")));
    SPropertyOperations.set(leftPart,"text",text);
    SNodeOperations.deleteNode(rightPart);
    return true;
  }
  return false;
}
