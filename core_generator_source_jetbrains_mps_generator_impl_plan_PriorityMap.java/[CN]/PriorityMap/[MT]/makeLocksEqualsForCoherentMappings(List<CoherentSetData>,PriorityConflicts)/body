{
  for (  CoherentSetData coherentSetData : coherentMappings) {
    Set<TemplateMappingConfiguration> coherentMappingSet=coherentSetData.myMappings;
    PriorityDataMap joinedLocks=new PriorityDataMap();
    for (    TemplateMappingConfiguration coherentMapping : coherentMappingSet) {
      PriorityDataMap locks=myPriorityMap.get(coherentMapping);
      for (      TemplateMappingConfiguration lockMapping : locks.keys()) {
        PriorityData priorityData=locks.priorityData(lockMapping);
        if (coherentMappingSet.contains(lockMapping)) {
          if (priorityData.isStrict()) {
            conflicts.register(priorityData.myCauseRules);
            conflicts.register(coherentSetData.myCauseRules);
          }
          continue;
        }
        joinedLocks.update(lockMapping,priorityData);
      }
    }
    for (    TemplateMappingConfiguration coherentMapping : coherentMappingSet) {
      myPriorityMap.put(coherentMapping,joinedLocks.deepCopy());
    }
  }
}
