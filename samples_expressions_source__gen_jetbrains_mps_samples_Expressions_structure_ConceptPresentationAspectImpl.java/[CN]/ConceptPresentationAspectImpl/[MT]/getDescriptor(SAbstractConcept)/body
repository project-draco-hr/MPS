{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case LanguageConceptSwitch.AndSimpleMathExpression:
    return props_AndSimpleMathExpression;
case LanguageConceptSwitch.ArithmeticSimpleMathExpression:
  return props_ArithmeticSimpleMathExpression;
case LanguageConceptSwitch.BinarySimpleMathExpression:
return props_BinarySimpleMathExpression;
case LanguageConceptSwitch.LogicalSimpleMathExpression:
return props_LogicalSimpleMathExpression;
case LanguageConceptSwitch.NotSimpleMathExpression:
return props_NotSimpleMathExpression;
case LanguageConceptSwitch.OrSimpleMathExpression:
return props_OrSimpleMathExpression;
case LanguageConceptSwitch.SimpleMathAssignment:
return props_SimpleMathAssignment;
case LanguageConceptSwitch.SimpleMathBooleanConstant:
return props_SimpleMathBooleanConstant;
case LanguageConceptSwitch.SimpleMathBooleanType:
return props_SimpleMathBooleanType;
case LanguageConceptSwitch.SimpleMathElementType:
return props_SimpleMathElementType;
case LanguageConceptSwitch.SimpleMathExpression:
return props_SimpleMathExpression;
case LanguageConceptSwitch.SimpleMathFloatConstant:
return props_SimpleMathFloatConstant;
case LanguageConceptSwitch.SimpleMathFloatType:
return props_SimpleMathFloatType;
case LanguageConceptSwitch.SimpleMathIntegerConstant:
return props_SimpleMathIntegerConstant;
case LanguageConceptSwitch.SimpleMathIntegerType:
return props_SimpleMathIntegerType;
case LanguageConceptSwitch.SimpleMathLongConstant:
return props_SimpleMathLongConstant;
case LanguageConceptSwitch.SimpleMathLongType:
return props_SimpleMathLongType;
case LanguageConceptSwitch.SimpleMathNumberType:
return props_SimpleMathNumberType;
case LanguageConceptSwitch.SimpleMathType:
return props_SimpleMathType;
case LanguageConceptSwitch.SimpleMathTypedVarDeclaration:
return props_SimpleMathTypedVarDeclaration;
case LanguageConceptSwitch.SimpleMathVarDeclaration:
return props_SimpleMathVarDeclaration;
case LanguageConceptSwitch.SimpleMathVarReference:
return props_SimpleMathVarReference;
case LanguageConceptSwitch.SimpleMathWrapper:
return props_SimpleMathWrapper;
case LanguageConceptSwitch.UnarySimpleMathExpression:
return props_UnarySimpleMathExpression;
}
return null;
}
