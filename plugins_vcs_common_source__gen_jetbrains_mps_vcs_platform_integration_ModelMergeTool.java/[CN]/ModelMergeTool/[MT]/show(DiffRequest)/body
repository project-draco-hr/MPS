{
  MergeRequestImpl mrequest=(MergeRequestImpl)request;
  try {
    final Wrappers._T<VirtualFile> file=new Wrappers._T<VirtualFile>(check_7qvsj_a0a0b0d(mrequest.getResultContent()));
    if (file.value == null) {
      if (LOG_705910402.isEnabledFor(Level.ERROR)) {
        LOG_705910402.error("No file");
      }
      file.value=LocalFileSystem.getInstance().findFileByPath("/");
    }
    final IFile iFile=FileSystem.getInstance().getFileByPath(file.value.getPath());
    File backupFile=MergeBackupUtil.zipModel(request.getContents(),file.value);
    DiffContent[] contents=mrequest.getContents();
    final Wrappers._T<String> ext=new Wrappers._T<String>(file.value.getExtension());
    if (FilePerRootDataSource.isPerRootPersistenceFile(iFile)) {
      ext.value=MPSExtentions.MODEL;
    }
    SModel baseModel=PersistenceUtil.loadModel(contents[MergeConstants.ORIGINAL].getDocument().getText(),ext.value);
    SModel mineModel=PersistenceUtil.loadModel(new String(contents[MergeConstants.CURRENT].getBytes(),FileUtil.DEFAULT_CHARSET),ext.value);
    SModel newModel=PersistenceUtil.loadModel(new String(contents[MergeConstants.LAST_REVISION].getBytes(),FileUtil.DEFAULT_CHARSET),ext.value);
    if (baseModel == null || mineModel == null || newModel == null) {
      if (LOG_705910402.isEnabledFor(Level.WARN)) {
        LOG_705910402.warn("Couldn't read model, invoking text merge");
      }
      super.show(request);
      return;
    }
    final MergeModelsDialog dialog=new MergeModelsDialog(baseModel,mineModel,newModel,mrequest);
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        dialog.toFront();
      }
    }
);
    dialog.show();
    final SModel resultModel=dialog.getResultModelWithFixedId();
    if (resultModel != null) {
      final Wrappers._T<String> resultContent=new Wrappers._T<String>();
      ModelAccess.instance().runReadAction(new Runnable(){
        public void run(){
          if (FilePerRootDataSource.isPerRootPersistenceFile(iFile)) {
            resultContent.value=PersistenceUtil.savePerRootModel(resultModel,file.value.getExtension().equals(MPSExtentions.MODEL_HEADER));
          }
 else {
            resultContent.value=PersistenceUtil.saveModel(resultModel,ext.value);
          }
        }
      }
);
      resolved(mrequest,resultContent.value);
      MergeBackupUtil.packMergeResult(backupFile,file.value.getName(),resultContent.value);
    }
    dialog.unregisterModels();
  }
 catch (  IOException e) {
    LOG.error(null,e);
  }
}
