{
  IModifiableGenerationSettings settings=GenerationSettingsProvider.getInstance().getGenerationSettings();
  settings.setIncremental(true);
  settings.setIncrementalUseCache(false);
  final GenerationOptions.OptionsBuilder optBuilder=GenerationOptions.fromSettings(settings);
  optBuilder.rebuildAll(false);
  return new IScriptController.Stub(){
    @Override public void setup(    IPropertiesPool pp,    Iterable<ITarget> toExecute,    Iterable<? extends IResource> input){
      super.setup(pp,toExecute,input);
      Tuples._3<Project,IOperationContext,Boolean> vars=(Tuples._3<Project,IOperationContext,Boolean>)pp.properties(new ITarget.Name("jetbrains.mps.lang.core.Generate.checkParameters"),Object.class);
      vars._2(false);
      Tuples._2<Boolean,GenerationOptions.OptionsBuilder> params=(Tuples._2<Boolean,GenerationOptions.OptionsBuilder>)pp.properties(new ITarget.Name("jetbrains.mps.lang.core.Generate.configure"),Object.class);
      params._1(optBuilder);
      Tuples._1<Boolean> skipCopyTraceinfo=(Tuples._1<Boolean>)pp.properties(new ITarget.Name("jetbrains.mps.lang.traceable.CopyTraceInfo.copyTraceInfo"),Object.class);
      if (skipCopyTraceinfo != null) {
        skipCopyTraceinfo._0(true);
      }
      Tuples._2<Boolean,Boolean> compileProps=(Tuples._2<Boolean,Boolean>)pp.properties(new ITarget.Name("jetbrains.mps.baseLanguage.JavaCompile.compile"),Object.class);
      if (compileProps != null) {
        compileProps._1(true);
      }
      Tuples._2<List<String>,List<String>> report=(Tuples._2<List<String>,List<String>>)pp.properties(new ITarget.Name("jetbrains.mps.build.reduced.ReportFiles.report"),Object.class);
      report._0(writtenFiles);
      report._1(deletedFiles);
      Tuples._1<Map<String,String>> hashes=(Tuples._1<Map<String,String>>)pp.properties(new ITarget.Name("jetbrains.mps.build.reduced.CollectHashes.collect"),Object.class);
      hashes._0(fileHashes);
      Tuples._1<Boolean> skipReconcile=(Tuples._1<Boolean>)pp.properties(new ITarget.Name("jetbrains.mps.lang.core.Make.reconcile"),Object.class);
      skipReconcile._0(true);
      Tuples._1<_FunctionTypes._return_P1_E0<? extends IFile,? super String>> pathToFile=(Tuples._1<_FunctionTypes._return_P1_E0<? extends IFile,? super String>>)pp.properties(new ITarget.Name("jetbrains.mps.lang.core.Make.make"),Object.class);
      pathToFile._0(new _FunctionTypes._return_P1_E0<IFile,String>(){
        public IFile invoke(        String path){
          return myOutputRedirects.getRedirect(path);
        }
      }
);
    }
  }
;
}
