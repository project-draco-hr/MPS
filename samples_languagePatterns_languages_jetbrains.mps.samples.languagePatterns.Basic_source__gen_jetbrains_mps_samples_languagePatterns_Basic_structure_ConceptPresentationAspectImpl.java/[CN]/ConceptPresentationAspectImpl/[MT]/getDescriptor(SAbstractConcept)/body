{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case 0:
    return props_AbstractRequestDescription;
case 1:
  return props_Address;
case 2:
return props_AddressReference;
case 3:
return props_AgendaItem;
case 4:
return props_Apple;
case 5:
return props_Car;
case 6:
return props_CombinedPerformance;
case 7:
return props_Component;
case 8:
return props_ComponentUsage;
case 9:
return props_Concert;
case 10:
return props_Container;
case 11:
return props_DottedLine;
case 12:
return props_DrawCommand;
case 13:
return props_DrawLine;
case 14:
return props_DrawRect;
case 15:
return props_EmptyLine;
case 16:
return props_FormDescription;
case 17:
return props_Fruit;
case 18:
return props_FruitPlate;
case 19:
return props_IncompleteCommand;
case 20:
return props_Item;
case 21:
return props_ItemReference;
case 22:
return props_LineStyle;
case 23:
return props_ListOfDrawCommands;
case 24:
return props_OperationOnAddress;
case 25:
return props_Orange;
case 26:
return props_Participant;
case 27:
return props_Performance;
case 28:
return props_PerformanceWithTitle;
case 29:
return props_RaceParticipant;
case 30:
return props_Request;
case 31:
return props_SimplifiedFormDescription;
case 32:
return props_Singer;
case 33:
return props_SolidLine;
case 34:
return props_SomeForm;
case 35:
return props_StreetOperation;
case 36:
return props_StringDescription;
case 37:
return props_Truck;
case 38:
return props_ZipOperation;
}
throw new IllegalStateException("Unknown concept " + c);
}
