{
  final Set<String> seen=SetSequence.fromSet(new HashSet<String>());
  ListSequence.fromList(SLinkOperations.getTargets(node,"arguments",true)).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode it){
      SetSequence.fromSet(seen).addElement(SPropertyOperations.getString(it,"name"));
    }
  }
);
  SNode arg=SNodeFactoryOperations.createNewNode("jetbrains.mps.core.metadata.structure.SConceptAnnotationArgument",null);
  for (  SNode n : ListSequence.fromList(SLinkOperations.getTargets(SLinkOperations.getTarget(node,"type",false),"members",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.lang.core.structure.INamedConcept");
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(it,"jetbrains.mps.lang.core.structure.INamedConcept");
    }
  }
)) {
    if (SetSequence.fromSet(seen).contains(SPropertyOperations.getString(n,"name"))) {
      continue;
    }
    SPropertyOperations.set(arg,"name",SPropertyOperations.getString(n,"name"));
    if (eq_2h5qu1_a0c0d0b1(SPropertyOperations.getString(n,"name"),"value")) {
      break;
    }
  }
  return arg;
}
