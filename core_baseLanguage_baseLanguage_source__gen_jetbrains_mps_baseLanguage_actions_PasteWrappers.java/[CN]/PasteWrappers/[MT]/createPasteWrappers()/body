{
  List<PasteWrapper> result=ListSequence.<PasteWrapper>fromList(new ArrayList<PasteWrapper>());
  ListSequence.<PasteWrapper>fromList(result).addElement(new PasteWrapper(){
    public String getSourceConceptFqName(){
      return "jetbrains.mps.baseLanguage.structure.Expression";
    }
    public String getTargetConceptFqName(){
      return "jetbrains.mps.baseLanguage.structure.Statement";
    }
    public SNode wrap(    PasteWrapperContext _context){
      SNode result=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ExpressionStatement",null);
      SLinkOperations.setTarget(result,"expression",_context.getSourceNode(),true);
      return result;
    }
  }
);
  ListSequence.<PasteWrapper>fromList(result).addElement(new PasteWrapper(){
    public String getSourceConceptFqName(){
      return "jetbrains.mps.baseLanguage.structure.ExpressionStatement";
    }
    public String getTargetConceptFqName(){
      return "jetbrains.mps.baseLanguage.structure.Expression";
    }
    public SNode wrap(    PasteWrapperContext _context){
      return SLinkOperations.getTarget(_context.getSourceNode(),"expression",true);
    }
  }
);
  ListSequence.<PasteWrapper>fromList(result).addElement(new PasteWrapper(){
    public String getSourceConceptFqName(){
      return "jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement";
    }
    public String getTargetConceptFqName(){
      return "jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration";
    }
    public SNode wrap(    PasteWrapperContext _context){
      return SLinkOperations.getTarget(_context.getSourceNode(),"localVariableDeclaration",true);
    }
  }
);
  ListSequence.<PasteWrapper>fromList(result).addElement(new PasteWrapper(){
    public String getSourceConceptFqName(){
      return "jetbrains.mps.baseLanguage.structure.LocalVariableDeclaration";
    }
    public String getTargetConceptFqName(){
      return "jetbrains.mps.baseLanguage.structure.Statement";
    }
    public SNode wrap(    PasteWrapperContext _context){
      SNode statement=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalVariableDeclarationStatement",null);
      SLinkOperations.setTarget(statement,"localVariableDeclaration",_context.getSourceNode(),true);
      return statement;
    }
  }
);
  ListSequence.<PasteWrapper>fromList(result).addElement(new PasteWrapper(){
    public String getSourceConceptFqName(){
      return "jetbrains.mps.baseLanguage.structure.AbstractCreator";
    }
    public String getTargetConceptFqName(){
      return "jetbrains.mps.baseLanguage.structure.Expression";
    }
    public SNode wrap(    PasteWrapperContext _context){
      SNode result=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.GenericNewExpression",null);
      SLinkOperations.setTarget(result,"creator",_context.getSourceNode(),true);
      return result;
    }
  }
);
  ListSequence.<PasteWrapper>fromList(result).addElement(new PasteWrapper(){
    public String getSourceConceptFqName(){
      return "jetbrains.mps.baseLanguage.structure.AbstractCreator";
    }
    public String getTargetConceptFqName(){
      return "jetbrains.mps.baseLanguage.structure.Statement";
    }
    public SNode wrap(    PasteWrapperContext _context){
      SNode result=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ExpressionStatement",null);
      SNode newExpression=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.GenericNewExpression",null);
      SLinkOperations.setTarget(newExpression,"creator",_context.getSourceNode(),true);
      SLinkOperations.setTarget(result,"expression",newExpression,true);
      return result;
    }
  }
);
  return result;
}
