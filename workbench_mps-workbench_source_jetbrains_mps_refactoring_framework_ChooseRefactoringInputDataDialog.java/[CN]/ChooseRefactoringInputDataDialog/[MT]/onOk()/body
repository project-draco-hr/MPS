{
  try {
    for (    IChooseComponent component : myComponents) {
      myRefactoringContext.setParameter(component.getPropertyName(),component.submit());
    }
    boolean applicable=ModelAccess.instance().runReadAction(new Computable<Boolean>(){
      @Override public Boolean compute(){
        return myRefactoring.isApplicable(myRefactoringContext);
      }
    }
);
    if (applicable) {
      myIsCancelled=false;
      dispose();
    }
 else {
      myIsCancelled=true;
      myRefactoringContext.clearParameters();
      JOptionPane.showMessageDialog(this,"refactoring is not applicable");
    }
  }
 catch (  InvalidInputValueException ex) {
    myIsCancelled=true;
    JOptionPane.showMessageDialog(this,ex.getMessage());
  }
}
