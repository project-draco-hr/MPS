{
  if (SConceptOperations.isExactly(SNodeOperations.asSConcept(kind),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068431474542l,"jetbrains.mps.baseLanguage.structure.VariableDeclaration"))) {
    List<SNode> variables=new ArrayList<SNode>();
    if (!(ScopeUtils.comeFrom("variable",thisNode,child))) {
      ListSequence.fromList(variables).addElement(SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1144230876926l,1144230900587l,"variable")));
      if (ScopeUtils.comeFrom("additionalVar",thisNode,child)) {
        for (        SNode variable : SLinkOperations.getChildren(thisNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1144231330558l,1032195626824963089l,"additionalVar"))) {
          if (variable == child) {
            break;
          }
          ListSequence.fromList(variables).addElement(variable);
        }
      }
 else {
        ListSequence.fromList(variables).addSequence(ListSequence.fromList(SLinkOperations.getChildren(thisNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1144231330558l,1032195626824963089l,"additionalVar"))));
      }
    }
    return Scopes.forVariables(kind,variables,ScopeUtils.lazyParentScope(thisNode,kind));
  }
  return BehaviorReflection.invokeSuper(Scope.class,thisNode,"jetbrains.mps.baseLanguage.structure.AbstractForStatement","virtual_getScope_3734116213129936182",new Object[]{kind,child});
}
