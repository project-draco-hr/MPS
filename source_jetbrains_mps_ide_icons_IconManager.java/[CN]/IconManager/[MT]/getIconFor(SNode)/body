{
  if (node == null)   return Icons.DEFAULT_ICON;
  GlobalScope scope=GlobalScope.getInstance();
  ConceptDeclaration conceptDeclaration=SModelUtil.getConceptDeclaration(node,scope);
  if (conceptDeclaration != null) {
    Language language=SModelUtil.getDeclaringLanguage(conceptDeclaration,scope);
    if (language != null) {
      String iconPath=Macros.languageDescriptor().expandPath(conceptDeclaration.getIconPath(),language.getDescriptorFile());
      if (iconPath != null) {
        Icon icon=ourPathsToIcons.get(iconPath);
        if (icon != null)         return icon;
        File file=new File(iconPath);
        if (file.exists()) {
          icon=new ImageIcon(iconPath);
          ourPathsToIcons.put(iconPath,icon);
          return icon;
        }
      }
    }
  }
  Class<? extends SNode> cls=node.getClass();
  if (ourIcons.get(cls) != null) {
    return ourIcons.get(cls);
  }
  while (cls != SNode.class) {
    String className=cls.getName();
    className=className.substring(className.lastIndexOf('.') + 1);
    String packageName=cls.getPackage().getName();
    String iconsClass=packageName + ".icons.Icons";
    try {
      Class icons=Class.forName(iconsClass,true,ClassLoaderManager.getInstance().getClassLoader());
      try {
        return (Icon)icons.getMethod("getIconFor" + className,SNode.class).invoke(null,node);
      }
 catch (      NoSuchMethodException e) {
        try {
          Icon icon=(Icon)icons.getMethod("getIconFor" + className).invoke(null);
          if (icon != null) {
            ourIcons.put(cls,icon);
            return icon;
          }
        }
 catch (        NoSuchMethodException ex) {
        }
catch (        Exception ex) {
          e.printStackTrace();
        }
      }
    }
 catch (    ClassNotFoundException e) {
    }
catch (    Exception e) {
      e.printStackTrace();
    }
    cls=(Class<? extends SNode>)cls.getSuperclass();
  }
  ourIcons.put(cls,Icons.DEFAULT_ICON);
  return Icons.DEFAULT_ICON;
}
