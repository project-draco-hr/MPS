{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.execution.settings.structure.TemplatePersistentConfigurationType");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(childConcept,NameUtil.nodeFQName(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          return ListSequence.fromList(SModelOperations.getRootsIncludingImported(_context.getModel(),"jetbrains.mps.execution.settings.structure.PersistentConfigurationTemplate")).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return (AttributeOperations.getAttribute(it,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.execution.settings.structure.DeprecatedAnnotation")) == null);
            }
          }
).toListSequence();
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SNode node=SNodeFactoryOperations.createNewNode("jetbrains.mps.execution.settings.structure.TemplatePersistentConfigurationType",null);
              SLinkOperations.setTarget(node,"persistentConfiguration",(item),false);
              return node;
            }
            public String getDescriptionText(            String pattern){
              return "template<" + SPropertyOperations.getString((item),"name") + ">";
            }
          }
);
        }
      }
    }
  }
  return result;
}
