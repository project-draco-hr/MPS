{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.execution.settings.structure.TemplatePersistentConfigurationType");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          return ListSequence.fromList(SModelOperations.rootsIncludingImported(_context.getModel(),MetaAdapterFactory.getConcept(0x756e911c3f1f4a48L,0xbdf5a2ceb91b723cL,0xd244b712f910113L,"jetbrains.mps.execution.settings.structure.PersistentConfigurationTemplate"))).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return (AttributeOperations.getAttribute(it,new IAttributeDescriptor.NodeAttribute("jetbrains.mps.execution.settings.structure.DeprecatedAnnotation")) == null);
            }
          }
).toListSequence();
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SNode node=SNodeFactoryOperations.createNewNode(SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0x756e911c3f1f4a48L,0xbdf5a2ceb91b723cL,0xd244b712f9100fdL,"jetbrains.mps.execution.settings.structure.TemplatePersistentConfigurationType")),null);
              SLinkOperations.setTarget(node,MetaAdapterFactory.getReferenceLink(0x756e911c3f1f4a48L,0xbdf5a2ceb91b723cL,0xd244b712f91001cL,0xd244b712f91001dL,"persistentConfiguration"),(item));
              return node;
            }
            public String getDescriptionText(            String pattern){
              return "template<" + SPropertyOperations.getString((item),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")) + ">";
            }
          }
);
        }
      }
    }
  }
  return result;
}
