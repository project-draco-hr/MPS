{
  if ("jetbrains.mps.lang.plugin.structure.SingletabbedEditorTab".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.SingletabbedEditorTab"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ToolDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ToolDeclaration"));
  }
  if ("jetbrains.mps.lang.plugin.structure.DoUpdateBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.DoUpdateBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_AnActionEvent".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_AnActionEvent"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ExecuteBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ExecuteBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ActionGroupDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ActionGroupDeclaration_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.ActionInstance".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ActionInstance_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.ModificationStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ModificationStatement_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.GroupAnchor".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new GroupAnchor_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.MultitabbedEditorTab".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.MultitabbedEditorTab"));
  }
  if ("jetbrains.mps.lang.plugin.structure.AbstractEditorTab".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.AbstractEditorTab"));
  }
  if ("jetbrains.mps.lang.plugin.structure.CreateBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.CreateBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.GetNodeBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.GetNodeBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.GetNodesBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.GetNodesBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.GetInnerTabCaptionBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.GetInnerTabCaptionBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_node".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_node"));
  }
  if ("jetbrains.mps.lang.plugin.structure.TabbedEditorDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.TabbedEditorDeclaration"));
  }
  if ("jetbrains.mps.lang.plugin.structure.GetBaseNodeBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.GetBaseNodeBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_OperationContext".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_OperationContext"));
  }
  if ("jetbrains.mps.lang.plugin.structure.InterfaceGroup".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.InterfaceGroup"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ActionGroupMember".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ActionGroupMember"));
  }
  if ("jetbrains.mps.lang.plugin.structure.InterfaceExtentionPoint".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new InterfaceExtentionPoint_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.ToolInstanceExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ToolInstanceExpression_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_IModule".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_IModule"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_MPSProject".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_MPSProject"));
  }
  if ("jetbrains.mps.lang.plugin.structure.Separator".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new Separator_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.ActionParameterDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ActionParameterDeclaration_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.UpdateBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new UpdateBlock_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.IsApplicableBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.IsApplicableBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ActionType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ActionType"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ActionParameterReferenceOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ActionParameterReferenceOperation"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ProjectPluginDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ProjectPluginDeclaration"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ProjectPluginInitBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ProjectPluginInitBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ProjectPluginDisposeBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ProjectPluginDisposeBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ProjectPluginType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ProjectPluginType"));
  }
  if ("jetbrains.mps.lang.plugin.structure.GroupContents".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.GroupContents"));
  }
  if ("jetbrains.mps.lang.plugin.structure.BuildGroupBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.BuildGroupBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.AddElementStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AddElementStatement_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.ElementListContents".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ElementListContents"));
  }
  if ("jetbrains.mps.lang.plugin.structure.KeyMapKeystroke".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.KeyMapKeystroke"));
  }
  if ("jetbrains.mps.lang.plugin.structure.DoUpdateGroupBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.DoUpdateGroupBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.GroupType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.GroupType"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ToolType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ToolType"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ProjectOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ProjectOperation_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.GetToolOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.GetToolOperation"));
  }
  if ("jetbrains.mps.lang.plugin.structure.GetGroupOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.GetGroupOperation"));
  }
  if ("jetbrains.mps.lang.plugin.structure.GenerationListenerDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.GenerationListenerDeclaration"));
  }
  if ("jetbrains.mps.lang.plugin.structure.OnModelsGeneratedBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.OnModelsGeneratedBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.OnModelsGeneratedBlock_success".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.OnModelsGeneratedBlock_success"));
  }
  if ("jetbrains.mps.lang.plugin.structure.BeforeGenerationBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.BeforeGenerationBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.GenerationListener_models".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.GenerationListener_models"));
  }
  if ("jetbrains.mps.lang.plugin.structure.PreferencesComponentDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.PreferencesComponentDeclaration"));
  }
  if ("jetbrains.mps.lang.plugin.structure.PersistentPropertyDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.PersistentPropertyDeclaration"));
  }
  if ("jetbrains.mps.lang.plugin.structure.PersistentPropertyReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.PersistentPropertyReference"));
  }
  if ("jetbrains.mps.lang.plugin.structure.PreferencesComponentType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.PreferencesComponentType"));
  }
  if ("jetbrains.mps.lang.plugin.structure.GetPreferencesComponentOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.GetPreferencesComponentOperation"));
  }
  if ("jetbrains.mps.lang.plugin.structure.OnBeforeWriteBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.OnBeforeWriteBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.OnAfterReadBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.OnAfterReadBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.PreferencePage".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.PreferencePage"));
  }
  if ("jetbrains.mps.lang.plugin.structure.PreferencePageResetBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.PreferencePageResetBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.PreferencePageCommitBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.PreferencePageCommitBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_PreferencePage_component".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_PreferencePage_component"));
  }
  if ("jetbrains.mps.lang.plugin.structure.PreferencePageIsModifiedBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.PreferencePageIsModifiedBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.AfterGenerationBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.AfterGenerationBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.InitBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.InitBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.DisposeBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.DisposeBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_Project".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_Project"));
  }
  if ("jetbrains.mps.lang.plugin.structure.GetComponentBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.GetComponentBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ApplicationPluginInitBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ApplicationPluginInitBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ApplicationPluginDisposeBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ApplicationPluginDisposeBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ApplicationPluginType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ApplicationPluginType"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ApplicationPluginDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ApplicationPluginDeclaration"));
  }
  if ("jetbrains.mps.lang.plugin.structure.GeneratePlugins".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.GeneratePlugins"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ActionDataParameterDeclaration_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.ActionDataParameterReferenceOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ActionDataParameterReferenceOperation"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ActionParameter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ActionParameter"));
  }
  if ("jetbrains.mps.lang.plugin.structure.FileGeneratorDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.FileGeneratorDeclaration"));
  }
  if ("jetbrains.mps.lang.plugin.structure.GenerateFileBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.GenerateFileBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.FileGeneratorType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.FileGeneratorType"));
  }
  if ("jetbrains.mps.lang.plugin.structure.OverridesDefaultBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.OverridesDefaultBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.IsDefaultBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.IsDefaultBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_OutputRootNode".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_OutputRootNode"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_OriginalInputNode".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_OriginalInputNode"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_InputModel".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_InputModel"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_Contents".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_Contents"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_OutputRootDir".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_OutputRootDir"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_ask".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_ask"));
  }
  if ("jetbrains.mps.lang.plugin.structure.BaseExecuteCommandStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.BaseExecuteCommandStatement"));
  }
  if ("jetbrains.mps.lang.plugin.structure.CommandClosureLiteral".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.CommandClosureLiteral"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ExecuteCommandInEDTStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ExecuteCommandInEDTStatement"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ExecuteCommandStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ExecuteCommandStatement"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ExecuteEDTCommandStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ExecuteEDTCommandStatement"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ExecuteLightweightCommandStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ExecuteLightweightCommandStatement"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ExecuteWriteActionStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ExecuteWriteActionStatement"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ActionConstructionParameterDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ActionConstructionParameterDeclaration_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.ActionConstructorParameterReferenceOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ActionConstructorParameterReferenceOperation"));
  }
  if ("jetbrains.mps.lang.plugin.structure.AddStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AddStatement_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.ToStringConceptFunction".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ToStringConceptFunction"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ToStringParameter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ToStringParameter"));
  }
  if ("jetbrains.mps.lang.plugin.structure.IExecuteCommandStatementSync".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.IExecuteCommandStatementSync"));
  }
  if ("jetbrains.mps.lang.plugin.structure.BaseExecuteCommandStatementSync".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.BaseExecuteCommandStatementSync"));
  }
  if ("jetbrains.mps.lang.plugin.structure.UpdateGroupBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.UpdateGroupBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.UpdateGroupFunction".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.UpdateGroupFunction"));
  }
  if ("jetbrains.mps.lang.plugin.structure.EnumerateChildrenFunction".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.EnumerateChildrenFunction"));
  }
  if ("jetbrains.mps.lang.plugin.structure.KeymapChangesDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.KeymapChangesDeclaration"));
  }
  if ("jetbrains.mps.lang.plugin.structure.SimpleShortcutChange".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.SimpleShortcutChange"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ShortcutChange".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ShortcutChange_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.ParameterizedShortcutChange".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ParameterizedShortcutChange"));
  }
  if ("jetbrains.mps.lang.plugin.structure.RunConfigurationTypeDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.RunConfigurationTypeDeclaration"));
  }
  if ("jetbrains.mps.lang.plugin.structure.RunConfigurationDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.RunConfigurationDeclaration"));
  }
  if ("jetbrains.mps.lang.plugin.structure.GetConfigurationIconBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.GetConfigurationIconBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.CheckConfigurationBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.CheckConfigurationBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ExecuteConfigBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ExecuteConfigBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ActionsStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ActionsStatement"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ProcessHandlerStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ProcessHandlerStatement"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ExecutionConsoleStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ExecutionConsoleStatement"));
  }
  if ("jetbrains.mps.lang.plugin.structure.DisposeConsoleBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.DisposeConsoleBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ExecuteSpecific".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ExecuteSpecific_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.Executor_FunctionParameter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.Executor_FunctionParameter"));
  }
  if ("jetbrains.mps.lang.plugin.structure.Environment_FunctionParameter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.Environment_FunctionParameter"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ReportErrorStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ReportErrorStatement_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.ConfigurationEditorDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConfigurationEditorDeclaration"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ApplyEditorBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ApplyEditorBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ResetEditorBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ResetEditorBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.DisposeEditorBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.DisposeEditorBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ComponentReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ComponentReference_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.ICheckedNamePolicy".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ICheckedNamePolicy"));
  }
  if ("jetbrains.mps.lang.plugin.structure.PropertyRefExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new PropertyRefExpression_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.PropertyRefType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.PropertyRefType"));
  }
  if ("jetbrains.mps.lang.plugin.structure.SimpleActionPlace".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.SimpleActionPlace"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ActionPlaceSpecification".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ActionPlaceSpecification"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ToolActionPlace".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ToolActionPlace"));
  }
  if ("jetbrains.mps.lang.plugin.structure.EverywhereActionPlace".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.EverywhereActionPlace"));
  }
  if ("jetbrains.mps.lang.plugin.structure.InitTabBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.InitTabBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.SingletabbedEditorTabType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.SingletabbedEditorTabType"));
  }
  if ("jetbrains.mps.lang.plugin.structure.MultitabbedEditorTabType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.MultitabbedEditorTabType"));
  }
  if ("jetbrains.mps.lang.plugin.structure.RunConfigType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.RunConfigType"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ActionListStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ActionListStatement"));
  }
  if ("jetbrains.mps.lang.plugin.structure.CreateRunConfigStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new CreateRunConfigStatement_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.RunConfigPropertyInstance".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new RunConfigPropertyInstance_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.RunConfigCreator".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.RunConfigCreator"));
  }
  if ("jetbrains.mps.lang.plugin.structure.CreateNodeRunConfigBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.CreateNodeRunConfigBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.RunConfigMainNodeStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new RunConfigMainNodeStatement_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_Model".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_Model"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_CreatorType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_CreatorType"));
  }
  if ("jetbrains.mps.lang.plugin.structure.CreateModuleRunConfigBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.CreateModuleRunConfigBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.CreateModelRunConfigBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.CreateModelRunConfigBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.BaseCreateRunConfigFunction".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.BaseCreateRunConfigFunction"));
  }
  if ("jetbrains.mps.lang.plugin.structure.RunNodeConfigCreator".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.RunNodeConfigCreator"));
  }
  if ("jetbrains.mps.lang.plugin.structure.RunModuleConfigCreator".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.RunModuleConfigCreator"));
  }
  if ("jetbrains.mps.lang.plugin.structure.RunModelConfigCreator".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.RunModelConfigCreator"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ProcessStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ProcessStatement"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConsoleExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConsoleExpression"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConsoleType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConsoleType"));
  }
  if ("jetbrains.mps.lang.plugin.structure.UniversalRunConfigCreator".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.UniversalRunConfigCreator"));
  }
  if ("jetbrains.mps.lang.plugin.structure.NodeCreatorTarget".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.NodeCreatorTarget"));
  }
  if ("jetbrains.mps.lang.plugin.structure.BaseCreatorTarget".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.BaseCreatorTarget"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ModelCreatorTarget".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ModelCreatorTarget"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ModuleCreatorTarget".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ModuleCreatorTarget"));
  }
  if ("jetbrains.mps.lang.plugin.structure.CreateRunConfigBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.CreateRunConfigBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.CreateRunConfigBlockParameter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.CreateRunConfigBlockParameter"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ProjectCreatorTarget".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ProjectCreatorTarget"));
  }
  if ("jetbrains.mps.lang.plugin.structure.BaseToolDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.BaseToolDeclaration"));
  }
  if ("jetbrains.mps.lang.plugin.structure.TabbedToolDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.TabbedToolDeclaration"));
  }
  if ("jetbrains.mps.lang.plugin.structure.AddTabOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.AddTabOperation"));
  }
  if ("jetbrains.mps.lang.plugin.structure.CloseTabOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.CloseTabOperation"));
  }
  if ("jetbrains.mps.lang.plugin.structure.GetSelectedTabOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.GetSelectedTabOperation"));
  }
  if ("jetbrains.mps.lang.plugin.structure.TabbedToolOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new TabbedToolOperation_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.DebuggableNodeItem".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.DebuggableNodeItem"));
  }
  if ("jetbrains.mps.lang.plugin.structure.DebugInfoInitializer".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.DebugInfoInitializer"));
  }
  if ("jetbrains.mps.lang.plugin.structure.SmartDisposeClosureParameterDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new SmartDisposeClosureParameterDeclaration_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.NodesCreatorTarget".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.NodesCreatorTarget"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ToolTab".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ToolTab"));
  }
  if ("jetbrains.mps.lang.plugin.structure.AskBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.AskBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.AskStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AskStatement_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.GetConceptsBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.GetConceptsBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.NewCreateBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.NewCreateBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_Concept".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_Concept"));
  }
  if ("jetbrains.mps.lang.plugin.structure.VariableNodeItem".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.VariableNodeItem"));
  }
  if ("jetbrains.mps.lang.plugin.structure.VariableNodeExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new VariableNodeExpression_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.GetUserDataExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.GetUserDataExpression"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ScopeNodeItem".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ScopeNodeItem"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunction_GetVariables".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunction_GetVariables"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_ScopeNode".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_ScopeNode"));
  }
  if ("jetbrains.mps.lang.plugin.structure.RunConfigExecutionParameterDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.RunConfigExecutionParameterDeclaration"));
  }
  if ("jetbrains.mps.lang.plugin.structure.RunConfigParameterReferenceOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new RunConfigParameterReferenceOperation_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.AbstractCheckConfigBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new AbstractCheckConfigBlock_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.IExecuteConfigBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.IExecuteConfigBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ParametrizedExecuteBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ParametrizedExecuteBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ParametrizedExecuteActions".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ParametrizedExecuteActions"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ParametrizedExecuteConsole".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ParametrizedExecuteConsole"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ParametrizedExecuteProcess".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ParametrizedExecuteProcess"));
  }
  if ("jetbrains.mps.lang.plugin.structure.Console_FunctionParameter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.Console_FunctionParameter"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ExecuteParameterQuery".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ExecuteParameterQuery_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.Parameter_FunctionParameter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.Parameter_FunctionParameter"));
  }
  if ("jetbrains.mps.lang.plugin.structure.AbstractEnhancedConceptFunction".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.AbstractEnhancedConceptFunction"));
  }
  if ("jetbrains.mps.lang.plugin.structure.IEnhancedRunConfiguration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.IEnhancedRunConfiguration"));
  }
  if ("jetbrains.mps.lang.plugin.structure.RunConfigurationMethodDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.RunConfigurationMethodDeclaration"));
  }
  if ("jetbrains.mps.lang.plugin.structure.GetPreferencesComponentInProjectOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.GetPreferencesComponentInProjectOperation"));
  }
  if ("jetbrains.mps.lang.plugin.structure.BaseProjectOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new BaseProjectOperation_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.GetToolInProjectOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.GetToolInProjectOperation"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ActionsList_FunctionParameter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ActionsList_FunctionParameter"));
  }
  if ("jetbrains.mps.lang.plugin.structure.IRunConfigPropertyInstance".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.IRunConfigPropertyInstance"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunction_CreateBreakpoint".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunction_CreateBreakpoint"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_DebuggableNode".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_DebuggableNode"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_Debug_Project".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_Debug_Project"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ActionAccessOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ActionAccessOperation"));
  }
  if ("jetbrains.mps.lang.plugin.structure.GroupAccessOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.GroupAccessOperation"));
  }
  if ("jetbrains.mps.lang.plugin.structure.DebugSessionCreator".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.DebugSessionCreator"));
  }
  if ("jetbrains.mps.lang.plugin.structure.Project_ConceptFunctionParameter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.Project_ConceptFunctionParameter"));
  }
  if ("jetbrains.mps.lang.plugin.structure.UnitNodeItem".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.UnitNodeItem"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunction_GetUnitName".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunction_GetUnitName"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_UnitNode".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunctionParameter_UnitNode"));
  }
  if ("jetbrains.mps.lang.plugin.structure.PrepareConceptFunction".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.PrepareConceptFunction"));
  }
  if ("jetbrains.mps.lang.plugin.structure.PrepareReturnType_FunctionParameter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.PrepareReturnType_FunctionParameter"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ProjectExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ProjectExpression"));
  }
  if ("jetbrains.mps.lang.plugin.structure.GenerationListener_options".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.GenerationListener_options"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ConceptFunction_PropertyStringGetter".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ConceptFunction_PropertyStringGetter"));
  }
  if ("jetbrains.mps.lang.plugin.structure.IdeaInitializerDescriptor".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.IdeaInitializerDescriptor"));
  }
  if ("jetbrains.mps.lang.plugin.structure.KeyStrokeType".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.KeyStrokeType"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ActionParameterReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ActionParameterReference_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.AddKeystrokeStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.AddKeystrokeStatement"));
  }
  if ("jetbrains.mps.lang.plugin.structure.CreateNodeAspectBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.CreateNodeAspectBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.EditorTab".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.EditorTab"));
  }
  if ("jetbrains.mps.lang.plugin.structure.NodesBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.NodesBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.IsApplicableTabBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.IsApplicableTabBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.BaseNodeBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.BaseNodeBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ListenBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.ListenBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.OrderConstraints".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.OrderConstraints"));
  }
  if ("jetbrains.mps.lang.plugin.structure.Order".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.Order"));
  }
  if ("jetbrains.mps.lang.plugin.structure.EditorTabReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.EditorTabReference"));
  }
  if ("jetbrains.mps.lang.plugin.structure.OrderReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.OrderReference"));
  }
  if ("jetbrains.mps.lang.plugin.structure.ActionDeclaration".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new ActionDeclaration_Constraints());
  }
  if ("jetbrains.mps.lang.plugin.structure.IconResource".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.IconResource"));
  }
  if ("jetbrains.mps.lang.plugin.structure.Resource".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.Resource"));
  }
  if ("jetbrains.mps.lang.plugin.structure.MakeConfigBlock".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.MakeConfigBlock"));
  }
  if ("jetbrains.mps.lang.plugin.structure.IconResourceExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.plugin.structure.IconResourceExpression"));
  }
  return null;
}
