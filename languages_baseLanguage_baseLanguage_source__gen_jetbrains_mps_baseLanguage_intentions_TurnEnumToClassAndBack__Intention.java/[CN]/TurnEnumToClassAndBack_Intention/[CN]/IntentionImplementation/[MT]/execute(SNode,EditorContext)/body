{
  final SNode classNode=(!(SNodeOperations.isInstanceOf(node,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass"))) ? SNodeFactoryOperations.replaceWithNewChild(node,SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass"))) : SNodeFactoryOperations.replaceWithNewChild(node,SNodeFactoryOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"))));
  SPropertyOperations.set(classNode,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),SPropertyOperations.getString(node,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")));
  ListSequence.fromList(SLinkOperations.getChildren(classNode,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102463b447aL,0x102463bb98eL,"typeVariableDeclaration"))).addSequence(ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102463b447aL,0x102463bb98eL,"typeVariableDeclaration"))));
  SPropertyOperations.set(classNode,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x11a134c900dL,"nestedName"),SPropertyOperations.getString(node,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x11a134c900dL,"nestedName")));
  SPropertyOperations.set(classNode,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11d2ea8a339L,0x11d2ea948a4L,"isDeprecated"),"" + (SPropertyOperations.getBoolean(node,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11d2ea8a339L,0x11d2ea948a4L,"isDeprecated"))));
  SPropertyOperations.set(classNode,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x73c6d8a8c021f99L,"nonStatic"),"" + (SPropertyOperations.getBoolean(node,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x73c6d8a8c021f99L,"nonStatic"))));
  SPropertyOperations.set(classNode,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0xfa5cee6dfaL,"abstractClass"),"" + (SPropertyOperations.getBoolean(node,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0xfa5cee6dfaL,"abstractClass"))));
  SPropertyOperations.set(classNode,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x451f9e9f920b7f7dL,"isStatic"),"" + (SPropertyOperations.getBoolean(node,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x451f9e9f920b7f7dL,"isStatic"))));
  SPropertyOperations.set(classNode,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x11c6af4b284L,"isFinal"),"" + (SPropertyOperations.getBoolean(node,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x11c6af4b284L,"isFinal"))));
  SLinkOperations.setTarget(classNode,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,0x112670d886aL,"visibility"),SLinkOperations.getTarget(node,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,0x112670d886aL,"visibility")));
  SPropertyOperations.set(classNode,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x116b17c6e46L,0x116b17cd415L,"resolveInfo"),SPropertyOperations.getString(node,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x116b17c6e46L,0x116b17cd415L,"resolveInfo")));
  ListSequence.fromList(SLinkOperations.getChildren(classNode,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0xff2ac0b419L,"implementedInterface"))).addSequence(ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0xff2ac0b419L,"implementedInterface"))));
  ListSequence.fromList(SLinkOperations.getChildren(classNode,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a6be947aL,0x114a6beb0bdL,"annotation"))).addSequence(ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x114a6be947aL,0x114a6beb0bdL,"annotation"))));
  ListSequence.fromList(SLinkOperations.getChildren(classNode,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x4a9a46de59132803L,"member"))).addSequence(Sequence.fromIterable(Classifier_Behavior.call_members_1465982738252129704(node)));
  ListSequence.fromList(SNodeOperations.getNodeDescendants(classNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf9d78b55aaL,"jetbrains.mps.baseLanguage.structure.SuperMethodCall"),false,new SAbstractConcept[]{})).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode it){
      final SNode superMethodCall=it;
      SNode foundNewSuperMethod=Sequence.fromIterable(IClassifierType_Behavior.call_getMembers_7405920559687277275(BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),classNode,"virtual_getSuperclass_1240936569950",new Object[]{}))).findFirst(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration")) && BaseMethodDeclaration_Behavior.call_hasSameSignature_1213877350435(SNodeOperations.cast(it,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration")),SLinkOperations.getTarget(superMethodCall,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration")));
        }
      }
);
      if ((foundNewSuperMethod != null)) {
        SLinkOperations.setTarget(superMethodCall,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration"),foundNewSuperMethod);
      }
    }
  }
);
  ListSequence.fromList(SModelOperations.nodes(SNodeOperations.getModel(node),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbbebabf09L,"jetbrains.mps.baseLanguage.structure.StaticMethodCall"))).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return eq_ck6aau_a0a0a0a0a0a71a2o(SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbbebabf09L,0x10a7588b546L,"classConcept")),node);
    }
  }
).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode it){
      SLinkOperations.setTarget(it,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfbbebabf09L,0x10a7588b546L,"classConcept"),classNode);
    }
  }
);
  ListSequence.fromList(SModelOperations.nodes(SNodeOperations.getModel(node),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf940c80846L,"jetbrains.mps.baseLanguage.structure.StaticFieldReference"))).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return eq_ck6aau_a0a0a0a0a0a81a2o(SLinkOperations.getTarget(it,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf940c80846L,0x10a75869f9bL,"classifier")),node);
    }
  }
).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode it){
      SLinkOperations.setTarget(it,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf940c80846L,0x10a75869f9bL,"classifier"),classNode);
    }
  }
);
  editorContext.selectWRTFocusPolicy(classNode);
}
