{
switch (Arrays.binarySearch(stringSwitchCases_846f5o_a0a0b,fqName)) {
case 15:
    return new Project_BehaviorDescriptor();
case 21:
  return new TargetDeclaration_BehaviorDescriptor();
case 16:
return new PropertyDeclaration_BehaviorDescriptor();
case 22:
return new TargetReference_BehaviorDescriptor();
case 17:
return new PropertyReference_BehaviorDescriptor();
case 19:
return new StringLiteral_BehaviorDescriptor();
case 0:
return new BooleanLiteral_BehaviorDescriptor();
case 10:
return new IntLiteral_BehaviorDescriptor();
case 1:
return new BooleanType_BehaviorDescriptor();
case 20:
return new StringType_BehaviorDescriptor();
case 12:
return new IntegerType_BehaviorDescriptor();
case 14:
return new PlusOperation_BehaviorDescriptor();
case 18:
return new StringEnum_BehaviorDescriptor();
case 11:
return new IntegerEnum_BehaviorDescriptor();
case 5:
return new FileName_BehaviorDescriptor();
case 6:
return new FileType_BehaviorDescriptor();
case 9:
return new ImportPropertyNode_BehaviorDescriptor();
case 3:
return new CallReferenceType_BehaviorDescriptor();
case 2:
return new CallReference_BehaviorDescriptor();
case 23:
return new TargetReferencePropertyValueExpression_BehaviorDescriptor();
case 7:
return new ImportProject_BehaviorDescriptor();
case 13:
return new MultiLineString_BehaviorDescriptor();
case 4:
return new ExternalPropertyDeclaration_BehaviorDescriptor();
case 8:
return new ImportPropertiesFromFile_BehaviorDescriptor();
case 24:
return new XmlStringLiteral_BehaviorDescriptor();
default :
return BehaviorAspectInterpreted.getInstance().getDescriptor(fqName);
}
}
