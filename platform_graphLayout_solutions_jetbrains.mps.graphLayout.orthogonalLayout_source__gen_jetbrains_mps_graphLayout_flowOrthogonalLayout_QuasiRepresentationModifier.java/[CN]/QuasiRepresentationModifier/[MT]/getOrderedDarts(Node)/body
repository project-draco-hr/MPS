{
  List<Dart> darts=myEmbeddedGraph.getDartWithSource(node);
  List<Dart> sortedDarts=ListSequence.fromList(new LinkedList<Dart>());
  Dart curDart=ListSequence.fromList(darts).first();
  while (ListSequence.fromList(sortedDarts).count() != ListSequence.fromList(darts).count()) {
    ListSequence.fromList(sortedDarts).addElement(curDart);
    Face curFace=myEmbeddedGraph.getFace(curDart);
    for (    Dart dart : ListSequence.fromList(darts)) {
      Dart opposite=myEmbeddedGraph.getOpposite(dart);
      if (myEmbeddedGraph.getFace(opposite) == curFace) {
        curDart=dart;
        break;
      }
    }
  }
  darts=sortedDarts;
  boolean hasZeroAngles=false;
  for (  Dart dart : ListSequence.fromList(darts)) {
    if (MapSequence.fromMap(myAngles).get(dart) == 0) {
      hasZeroAngles=true;
    }
  }
  if (hasZeroAngles) {
    while (MapSequence.fromMap(myAngles).get(ListSequence.fromList(darts).first()) != 0) {
      ListSequence.fromList(darts).addElement(ListSequence.fromList(darts).removeElementAt(0));
    }
    while (MapSequence.fromMap(myAngles).get(ListSequence.fromList(darts).last()) == 0) {
      ListSequence.fromList(darts).insertElement(0,ListSequence.fromList(darts).removeLastElement());
    }
  }
  return darts;
}
