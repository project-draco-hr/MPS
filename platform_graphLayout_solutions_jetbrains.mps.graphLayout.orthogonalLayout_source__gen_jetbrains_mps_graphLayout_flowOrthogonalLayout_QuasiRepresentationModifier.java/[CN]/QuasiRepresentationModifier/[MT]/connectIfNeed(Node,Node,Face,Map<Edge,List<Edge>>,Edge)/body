{
  if (source != null && source != target) {
    Edge middleEdge=ListSequence.fromList(source.getEdges()).findFirst(new IWhereFilter<Edge>(){
      public boolean accept(      Edge it){
        return it.getOpposite(source) == target;
      }
    }
);
    if (middleEdge == null) {
      List<Edge> edges=MapSequence.fromMap(longEdges).get(oldEdge);
      Node cur=source;
      if (!(ListSequence.fromList(ListSequence.fromList(edges).first().getAdjacentNodes()).contains(source))) {
        edges=ListSequence.fromList(edges).reversedList();
      }
      for (      Edge edge : ListSequence.fromList(edges)) {
        newFace.addLast(new Dart(edge,cur));
        cur=edge.getOpposite(cur);
      }
    }
 else {
      Dart middleDart=new Dart(middleEdge,source);
      newFace.addLast(middleDart);
    }
  }
}
