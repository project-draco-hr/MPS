{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("variable",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      List<SNode> nodes=SNodeOperations.getAncestors(_context.getEnclosingNode(),"jetbrains.mps.samples.lambdaCalculus.structure.VariableOwner",true);
      List<SNode> result=new ArrayList<SNode>();
      for (      SNode node : nodes) {
        ListSequence.fromList(result).addSequence(ListSequence.fromList(VariableOwner_Behavior.call_getVariables_8981808925914841576(node)));
      }
      return result;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:3d08e5ef-3618-477b-9827-f996a0e87a53(jetbrains.mps.samples.lambdaCalculus.constraints)","7125334522320417175");
    }
  }
);
  return result;
}
