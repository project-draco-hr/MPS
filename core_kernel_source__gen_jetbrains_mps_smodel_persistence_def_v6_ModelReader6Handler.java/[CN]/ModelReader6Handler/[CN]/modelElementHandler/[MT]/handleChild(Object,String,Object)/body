{
  SModel result=(SModel)resultObject;
  if ("persistence".equals(tagName)) {
    return;
  }
  if ("language".equals(tagName)) {
    String child=(String)value;
    result.addLanguage(ModuleReference.fromString(child));
    return;
  }
  if ("language-engaged-on-generation".equals(tagName)) {
    String child=(String)value;
    result.addEngagedOnGenerationLanguage(ModuleReference.fromString(child));
    return;
  }
  if ("devkit".equals(tagName)) {
    String child=(String)value;
    result.addDevKit(ModuleReference.fromString(child));
    return;
  }
  if ("import".equals(tagName)) {
    SModel.ImportElement[] child=(SModel.ImportElement[])value;
    int ix=child[0].getReferenceID();
    boolean implicit=child[1] != null;
    fieldhelper.addImport(child[0]);
    if (ix > result.getMaxImportIndex()) {
      result.setMaxImportIndex(ix);
    }
    if (implicit) {
      result.addAdditionalModelVersion(child[0]);
    }
 else {
      result.addModelImport(child[0]);
    }
    return;
  }
  if ("node".equals(tagName)) {
    SNode child=(SNode)value;
    if (child != null) {
      result.addRoot(child);
    }
    return;
  }
  super.handleChild(resultObject,tagName,value);
}
