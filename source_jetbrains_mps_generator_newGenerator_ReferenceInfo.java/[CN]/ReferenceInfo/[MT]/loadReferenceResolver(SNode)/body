{
  ConceptDeclaration conceptDeclaration=(ConceptDeclaration)node.getConceptDeclarationAdapter();
  while (conceptDeclaration != null) {
    String modelPackageName=JavaNameUtil.packageNameForModelUID(conceptDeclaration.getModel().getUID());
    String buildersPackageName=JavaNameUtil.withoutStructure(modelPackageName) + ".builder";
    String resolverClassName=buildersPackageName + "." + conceptDeclaration.getName()+ "_ReferenceResolver";
    Language l=SModelUtil_new.getDeclaringLanguage(conceptDeclaration,GlobalScope.getInstance());
    try {
      Class resolverClass=Class.forName(resolverClassName,true,ClassLoaderManager.getInstance().getClassLoaderFor(l));
      return (IReferenceResolver)resolverClass.newInstance();
    }
 catch (    ClassNotFoundException e) {
    }
catch (    IllegalAccessException e) {
      throw new RuntimeException(e);
    }
catch (    InstantiationException e) {
      throw new RuntimeException(e);
    }
    conceptDeclaration=conceptDeclaration.getExtends();
  }
  return null;
}
