{
  List<SModel> models=Sequence.fromIterable(modules).translate(new ITranslator2<SModule,SModel>(){
    public Iterable<SModel> translate(    SModule it){
      return it.getModels();
    }
  }
).where(new IWhereFilter<SModel>(){
    public boolean accept(    SModel it){
      return eq_8z6r2b_a0a0a0a0a0a0b0e(jetbrains.mps.util.SNodeOperations.getModelLongName(it),targetModelName);
    }
  }
).toListSequence();
  return resolveClassifierByFqNameWithNonStubPriority(models,classifierFqName);
}
