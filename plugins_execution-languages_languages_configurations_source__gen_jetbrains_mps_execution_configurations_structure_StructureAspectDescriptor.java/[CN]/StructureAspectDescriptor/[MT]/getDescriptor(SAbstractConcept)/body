{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_1htk8d_a0lb.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return myConceptAbstractRunConfigurationExecutor;
      }
    break;
case 1:
  if (true) {
    return myConceptBeforeTask;
  }
break;
case 2:
if (true) {
return myConceptBeforeTaskCall;
}
break;
case 3:
if (true) {
return myConceptBeforeTaskParameter;
}
break;
case 4:
if (true) {
return myConceptBeforeTaskParameterReference;
}
break;
case 5:
if (true) {
return myConceptConfigurationFromExecutorReference;
}
break;
case 6:
if (true) {
return myConceptConsoleCreator;
}
break;
case 7:
if (true) {
return myConceptConsoleType;
}
break;
case 8:
if (true) {
return myConceptContextExpression;
}
break;
case 9:
if (true) {
return myConceptCreate_ConceptFunction;
}
break;
case 10:
if (true) {
return myConceptDebuggerSettings_Parameter;
}
break;
case 11:
if (true) {
return myConceptEnvironmentExpression;
}
break;
case 12:
if (true) {
return myConceptExecuteBeforeTask_ConceptFunction;
}
break;
case 13:
if (true) {
return myConceptExecuteConfiguration_Function;
}
break;
case 14:
if (true) {
return myConceptExecutor_Parameter;
}
break;
case 15:
if (true) {
return myConceptGetProjectOperation;
}
break;
case 16:
if (true) {
return myConceptModelSource;
}
break;
case 17:
if (true) {
return myConceptModuleSource;
}
break;
case 18:
if (true) {
return myConceptNodeListSource;
}
break;
case 19:
if (true) {
return myConceptNodeSource;
}
break;
case 20:
if (true) {
return myConceptProjectSource;
}
break;
case 21:
if (true) {
return myConceptProject_Parameter;
}
break;
case 22:
if (true) {
return myConceptRunConfiguration;
}
break;
case 23:
if (true) {
return myConceptRunConfigurationCreator;
}
break;
case 24:
if (true) {
return myConceptRunConfigurationExecutor;
}
break;
case 25:
if (true) {
return myConceptRunConfigurationKind;
}
break;
case 26:
if (true) {
return myConceptRunConfigurationProducer;
}
break;
case 27:
if (true) {
return myConceptRunConfigurationProducerPart;
}
break;
case 28:
if (true) {
return myConceptRunConfigurationSource;
}
break;
case 29:
if (true) {
return myConceptSModelSource;
}
break;
case 30:
if (true) {
return myConceptSModuleSource;
}
break;
case 31:
if (true) {
return myConceptSource_ConceptFunctionParameter;
}
break;
case 32:
if (true) {
return myConceptStartProcessHandlerStatement;
}
break;
default :
}
}
return null;
}
