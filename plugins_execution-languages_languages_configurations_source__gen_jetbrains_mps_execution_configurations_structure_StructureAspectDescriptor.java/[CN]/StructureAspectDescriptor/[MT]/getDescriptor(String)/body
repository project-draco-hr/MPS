{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0b,conceptFqName)) {
case 0:
    return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.AbstractRunConfigurationExecutor").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.execution.common.structure.IGeneratedToClass","jetbrains.mps.execution.settings.structure.PersistentConfigurationAssistent").properties("configurationName","canRun").references("runConfiguration").children(new String[]{"execute","beforeTask"},new boolean[]{false,true}).abstract_().alias("abstract executor","").create();
case 1:
  return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.BeforeTask").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.structure.structure.IStructureDeprecatable","jetbrains.mps.execution.common.structure.IGeneratedToClass").children(new String[]{"execute","parameter"},new boolean[]{false,true}).alias("before task","").create();
case 2:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.BeforeTaskCall").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").references("beforeTask").children(new String[]{"parameter"},new boolean[]{true}).create();
case 3:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.BeforeTaskParameter").super_("jetbrains.mps.baseLanguage.structure.VariableDeclaration").parents("jetbrains.mps.baseLanguage.structure.VariableDeclaration").create();
case 4:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.BeforeTaskParameterReference").super_("jetbrains.mps.baseLanguage.structure.VariableReference").parents("jetbrains.mps.baseLanguage.structure.VariableReference").references("parameterDeclaration").staticScope(StaticScope.NONE).create();
case 5:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.ConfigurationFromExecutorReference").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression","jetbrains.mps.lang.core.structure.INamedConcept").staticScope(StaticScope.NONE).create();
case 6:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.ConsoleCreator").super_("jetbrains.mps.baseLanguage.structure.AbstractCreator").parents("jetbrains.mps.baseLanguage.structure.AbstractCreator").children(new String[]{"project","viewer"},new boolean[]{false,false}).alias("console","").staticScope(StaticScope.NONE).create();
case 7:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.ConsoleType").super_("jetbrains.mps.baseLanguage.structure.Type").parents("jetbrains.mps.baseLanguage.structure.Type").alias("console","").staticScope(StaticScope.NONE).create();
case 8:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.Create_ConceptFunction").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("create","").staticScope(StaticScope.NONE).create();
case 9:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.DebuggerSettings_Parameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("debuggerSettings","").staticScope(StaticScope.NONE).create();
case 10:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.ExecuteBeforeTask_ConceptFunction").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("execute","").staticScope(StaticScope.NONE).create();
case 11:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.ExecuteConfiguration_Function").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction","jetbrains.mps.baseLanguage.structure.ILocalVariableElementList").alias("execute","").staticScope(StaticScope.NONE).create();
case 12:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.GetProjectOperation").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.baseLanguage.structure.IOperation").alias("project","").staticScope(StaticScope.NONE).create();
case 13:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.ModelSource").super_("jetbrains.mps.execution.configurations.structure.RunConfigurationSource").parents("jetbrains.mps.execution.configurations.structure.RunConfigurationSource").alias("model (deprecated)","").create();
case 14:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.ModuleSource").super_("jetbrains.mps.execution.configurations.structure.RunConfigurationSource").parents("jetbrains.mps.execution.configurations.structure.RunConfigurationSource").alias("module (deprecated)","").create();
case 15:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.NodeListSource").super_("jetbrains.mps.execution.configurations.structure.RunConfigurationSource").parents("jetbrains.mps.execution.configurations.structure.RunConfigurationSource").references("concept").alias("nlist","").create();
case 16:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.NodeSource").super_("jetbrains.mps.execution.configurations.structure.RunConfigurationSource").parents("jetbrains.mps.execution.configurations.structure.RunConfigurationSource").references("concept").alias("node","").create();
case 17:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.ProjectSource").super_("jetbrains.mps.execution.configurations.structure.RunConfigurationSource").parents("jetbrains.mps.execution.configurations.structure.RunConfigurationSource").alias("project","").create();
case 18:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.Project_Parameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("project","").staticScope(StaticScope.NONE).create();
case 19:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.RunConfiguration").super_("jetbrains.mps.execution.settings.structure.PersistentConfiguration").parents("jetbrains.mps.execution.settings.structure.PersistentConfiguration").references("configurationKind").children(new String[]{"editor","icon"},new boolean[]{false,false}).alias("run configuration","").create();
case 20:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.RunConfigurationCreator").super_("jetbrains.mps.baseLanguage.structure.AbstractCreator").parents("jetbrains.mps.baseLanguage.structure.AbstractCreator").references("configuration").children(new String[]{"configurationName"},new boolean[]{false}).staticScope(StaticScope.NONE).create();
case 21:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.RunConfigurationExecutor").super_("jetbrains.mps.execution.configurations.structure.AbstractRunConfigurationExecutor").parents("jetbrains.mps.execution.configurations.structure.AbstractRunConfigurationExecutor").properties("canDebug").children(new String[]{"debuggerConfiguration"},new boolean[]{false}).alias("executor","").create();
case 22:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.RunConfigurationKind").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.execution.common.structure.IGeneratedToClass").children(new String[]{"icon"},new boolean[]{false}).alias("run configuration kind","").create();
case 23:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.RunConfigurationProducer").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.lang.core.structure.INamedConcept","jetbrains.mps.execution.common.structure.IGeneratedToClass").children(new String[]{"configuration","produce"},new boolean[]{false,true}).alias("producer","").create();
case 24:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.RunConfigurationProducerPart").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept","jetbrains.mps.execution.common.structure.IGeneratedToClass").children(new String[]{"create","source"},new boolean[]{false,false}).alias("produce","").create();
case 25:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.RunConfigurationSource").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().alias("source","").create();
case 26:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.SModelSource").super_("jetbrains.mps.execution.configurations.structure.RunConfigurationSource").parents("jetbrains.mps.execution.configurations.structure.RunConfigurationSource").alias("model","").create();
case 27:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.SModuleSource").super_("jetbrains.mps.execution.configurations.structure.RunConfigurationSource").parents("jetbrains.mps.execution.configurations.structure.RunConfigurationSource").alias("module","").create();
case 28:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.Source_ConceptFunctionParameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("source","").staticScope(StaticScope.NONE).create();
case 29:
return new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.structure.StartProcessHandlerStatement").super_("jetbrains.mps.baseLanguage.structure.ReturnStatement").parents("jetbrains.mps.baseLanguage.structure.ReturnStatement").children(new String[]{"process","tool"},new boolean[]{false,false}).alias("start process handler","").staticScope(StaticScope.NONE).create();
default :
return StructureAspectInterpreted.getInstance().getDescriptor(conceptFqName);
}
}
