{
switch (myConceptIndex.index(id)) {
case LanguageConceptSwitch.AbstractRunConfigurationExecutor:
    return myConceptAbstractRunConfigurationExecutor;
case LanguageConceptSwitch.BeforeTask:
  return myConceptBeforeTask;
case LanguageConceptSwitch.BeforeTaskCall:
return myConceptBeforeTaskCall;
case LanguageConceptSwitch.BeforeTaskParameter:
return myConceptBeforeTaskParameter;
case LanguageConceptSwitch.BeforeTaskParameterReference:
return myConceptBeforeTaskParameterReference;
case LanguageConceptSwitch.ConfigurationFromExecutorReference:
return myConceptConfigurationFromExecutorReference;
case LanguageConceptSwitch.ConsoleCreator:
return myConceptConsoleCreator;
case LanguageConceptSwitch.ConsoleType:
return myConceptConsoleType;
case LanguageConceptSwitch.ContextExpression:
return myConceptContextExpression;
case LanguageConceptSwitch.Create_ConceptFunction:
return myConceptCreate_ConceptFunction;
case LanguageConceptSwitch.DebuggerSettings_Parameter:
return myConceptDebuggerSettings_Parameter;
case LanguageConceptSwitch.EnvironmentExpression:
return myConceptEnvironmentExpression;
case LanguageConceptSwitch.ExecuteBeforeTask_ConceptFunction:
return myConceptExecuteBeforeTask_ConceptFunction;
case LanguageConceptSwitch.ExecuteConfiguration_Function:
return myConceptExecuteConfiguration_Function;
case LanguageConceptSwitch.Executor_Parameter:
return myConceptExecutor_Parameter;
case LanguageConceptSwitch.GetProjectOperation:
return myConceptGetProjectOperation;
case LanguageConceptSwitch.ModelSource:
return myConceptModelSource;
case LanguageConceptSwitch.ModuleSource:
return myConceptModuleSource;
case LanguageConceptSwitch.NodeListSource:
return myConceptNodeListSource;
case LanguageConceptSwitch.NodeSource:
return myConceptNodeSource;
case LanguageConceptSwitch.ProjectSource:
return myConceptProjectSource;
case LanguageConceptSwitch.Project_Parameter:
return myConceptProject_Parameter;
case LanguageConceptSwitch.RunConfiguration:
return myConceptRunConfiguration;
case LanguageConceptSwitch.RunConfigurationCreator:
return myConceptRunConfigurationCreator;
case LanguageConceptSwitch.RunConfigurationExecutor:
return myConceptRunConfigurationExecutor;
case LanguageConceptSwitch.RunConfigurationKind:
return myConceptRunConfigurationKind;
case LanguageConceptSwitch.RunConfigurationProducer:
return myConceptRunConfigurationProducer;
case LanguageConceptSwitch.RunConfigurationProducerPart:
return myConceptRunConfigurationProducerPart;
case LanguageConceptSwitch.RunConfigurationSource:
return myConceptRunConfigurationSource;
case LanguageConceptSwitch.SModelSource:
return myConceptSModelSource;
case LanguageConceptSwitch.SModuleSource:
return myConceptSModuleSource;
case LanguageConceptSwitch.Source_ConceptFunctionParameter:
return myConceptSource_ConceptFunctionParameter;
case LanguageConceptSwitch.StartProcessHandlerStatement:
return myConceptStartProcessHandlerStatement;
default :
return null;
}
}
