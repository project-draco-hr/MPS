{
  try {
    final SearchQuery[] query=new SearchQuery[1];
    final IResultProvider[] provider=new IResultProvider[1];
    final SModel model=((SModel)MapSequence.fromMap(_params).get("model"));
    final SearchScope scope=((IScope)MapSequence.fromMap(_params).get("scope"));
    ((MPSProject)MapSequence.fromMap(_params).get("project")).getRepository().getModelAccess().runReadAction(new Runnable(){
      public void run(){
        query[0]=new SearchQuery(model,scope);
        provider[0]=FindUtils.makeProvider(new ModelUsagesFinder());
      }
    }
);
    ((Project)MapSequence.fromMap(_params).get("ideaProject")).getComponent(UsagesViewTool.class).findUsages(provider[0],query[0],true,true,false,"Model has no usages");
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Priority.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "FindModelUsages",t);
    }
  }
}
