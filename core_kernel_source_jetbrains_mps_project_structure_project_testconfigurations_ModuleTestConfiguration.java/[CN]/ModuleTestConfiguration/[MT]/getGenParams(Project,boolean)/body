{
  IModule module=MPSModuleRepository.getInstance().getModule(myModuleRef);
  if (module == null) {
    throw new IllegalGeneratorConfigurationException("Can't find module " + myModuleRef.getModuleFqName());
  }
  if (module instanceof Solution) {
    Solution solution=(Solution)module;
    List<SModelDescriptor> models=new ArrayList<SModelDescriptor>();
    for (    SModelDescriptor sm : solution.getOwnModelDescriptors()) {
      if (!fullRegeneration && !ModelGenerationStatusManager.getInstance().generationRequired(sm,project,NoCachesStrategy.createBuildCachesStrategy())) {
        continue;
      }
      if (GeneratorManager.isDoNotGenerate(sm)) {
        continue;
      }
      if (SModelStereotype.isUserModel(sm) && (sm instanceof EditableSModelDescriptor)) {
        models.add(sm);
      }
    }
    return new GenParameters(models,solution);
  }
 else   if (module instanceof Language) {
    Language lang=(Language)module;
    List<SModelDescriptor> inputModels=GeneratorConfigUtil.getLanguageModels(lang);
    Iterator<SModelDescriptor> it=inputModels.iterator();
    while (it.hasNext()) {
      SModelDescriptor model=it.next();
      if ((!fullRegeneration && !ModelGenerationStatusManager.getInstance().generationRequired(model,project,NoCachesStrategy.createBuildCachesStrategy())) || GeneratorManager.isDoNotGenerate(model)) {
        it.remove();
      }
    }
    return new GenParameters(inputModels,lang);
  }
  throw new IllegalGeneratorConfigurationException("Not applicable to non-language/solution module " + myModuleRef.getModuleFqName());
}
