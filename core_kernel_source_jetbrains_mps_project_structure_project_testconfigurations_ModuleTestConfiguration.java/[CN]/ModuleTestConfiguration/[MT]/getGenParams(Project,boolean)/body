{
  SModule module=MPSModuleRepository.getInstance().getModule(myModuleRef);
  if (module == null) {
    throw new IllegalGeneratorConfigurationException("Can't find module " + myModuleRef.getModuleName());
  }
  if (module instanceof Solution) {
    Solution solution=(Solution)module;
    List<SModel> models=new ArrayList<SModel>();
    for (    SModel sm : solution.getModels()) {
      if (!(sm instanceof GeneratableSModel) || !((GeneratableSModel)sm).isGeneratable())       continue;
      models.add(sm);
    }
    if (!fullRegeneration) {
      models=new ArrayList<SModel>(GenerationFacade.getModifiedModels(models,new ProjectOperationContext(project)));
    }
    return new GenParameters(models,solution);
  }
 else   if (module instanceof Language) {
    Language lang=(Language)module;
    List<SModel> inputModels=new ArrayList<SModel>();
    for (    SModel m : lang.getModels()) {
      if (m instanceof GeneratableSModel && ((GeneratableSModel)m).isGeneratable()) {
        inputModels.add(m);
      }
    }
    if (!fullRegeneration) {
      inputModels=new ArrayList<SModel>(GenerationFacade.getModifiedModels(inputModels,new ProjectOperationContext(project)));
    }
    return new GenParameters(inputModels,lang);
  }
  throw new IllegalGeneratorConfigurationException("Not applicable to non-language/solution module " + myModuleRef.getModuleName());
}
