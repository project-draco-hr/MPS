{
  SNode result=null;
  Set<SNode> _parameterValues_129834374=new HashSet<SNode>();
  SNode quotedNode_1=null;
  SNode quotedNode_2=null;
  SNode quotedNode_3=null;
  SNode quotedNode_4=null;
  SNode quotedNode_5=null;
  SNode quotedNode_6=null;
  SNode quotedNode_7=null;
  SNode quotedNode_8=null;
  SNode quotedNode_9=null;
{
    quotedNode_1=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ParenthesizedExpression",null,GlobalScope.getInstance(),false);
    SNode quotedNode1_10=quotedNode_1;
{
      quotedNode_2=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.CastExpression",null,GlobalScope.getInstance(),false);
      SNode quotedNode1_11=quotedNode_2;
{
        quotedNode_3=(SNode)parameter_19;
        SNode quotedNode1_12;
        if (_parameterValues_129834374.contains(quotedNode_3)) {
          quotedNode1_12=HUtil.copyIfNecessary(quotedNode_3);
        }
 else {
          _parameterValues_129834374.add(quotedNode_3);
          quotedNode1_12=quotedNode_3;
        }
        if (quotedNode1_12 != null) {
          quotedNode_2.addChild("type",HUtil.copyIfNecessary(quotedNode1_12));
        }
      }
{
        quotedNode_4=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.StaticMethodCall",null,GlobalScope.getInstance(),false);
        SNode quotedNode1_13=quotedNode_4;
        quotedNode1_13.addReference(SReference.create("classConcept",quotedNode1_13,SModelReference.fromString("f:java_stub#jetbrains.mps.debug.evaluation(jetbrains.mps.debug.evaluation@java_stub)"),SNodeId.fromString("~EvaluationUtils")));
        quotedNode1_13.addReference(SReference.create("baseMethodDeclaration",quotedNode1_13,SModelReference.fromString("f:java_stub#jetbrains.mps.debug.evaluation(jetbrains.mps.debug.evaluation@java_stub)"),SNodeId.fromString("~EvaluationUtils.getStaticFieldValue(java.lang.String,java.lang.String,com.sun.jdi.ThreadReference):jetbrains.mps.debug.evaluation.proxies.IValueProxy")));
{
          quotedNode_5=(SNode)parameter_20;
          SNode quotedNode1_14;
          if (_parameterValues_129834374.contains(quotedNode_5)) {
            quotedNode1_14=HUtil.copyIfNecessary(quotedNode_5);
          }
 else {
            _parameterValues_129834374.add(quotedNode_5);
            quotedNode1_14=quotedNode_5;
          }
          if (quotedNode1_14 != null) {
            quotedNode_4.addChild("actualArgument",HUtil.copyIfNecessary(quotedNode1_14));
          }
        }
{
          quotedNode_6=(SNode)parameter_21;
          SNode quotedNode1_15;
          if (_parameterValues_129834374.contains(quotedNode_6)) {
            quotedNode1_15=HUtil.copyIfNecessary(quotedNode_6);
          }
 else {
            _parameterValues_129834374.add(quotedNode_6);
            quotedNode1_15=quotedNode_6;
          }
          if (quotedNode1_15 != null) {
            quotedNode_4.addChild("actualArgument",HUtil.copyIfNecessary(quotedNode1_15));
          }
        }
{
          quotedNode_7=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguageInternal.structure.InternalPartialInstanceMethodCall",null,GlobalScope.getInstance(),false);
          SNode quotedNode1_16=quotedNode_7;
          quotedNode1_16.setProperty("methodName","getThreadReference");
{
            quotedNode_8=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.ClassifierType",null,GlobalScope.getInstance(),false);
            SNode quotedNode1_17=quotedNode_8;
            quotedNode1_17.addReference(SReference.create("classifier",quotedNode1_17,SModelReference.fromString("f:java_stub#com.sun.jdi(com.sun.jdi@java_stub)"),SNodeId.fromString("~ThreadReference")));
            quotedNode_7.addChild("returnType",quotedNode1_17);
          }
{
            quotedNode_9=SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguageInternal.structure.InternalThisExpression",null,GlobalScope.getInstance(),false);
            SNode quotedNode1_18=quotedNode_9;
            quotedNode_7.addChild("instance",quotedNode1_18);
          }
          quotedNode_4.addChild("actualArgument",quotedNode1_16);
        }
        quotedNode_2.addChild("expression",quotedNode1_13);
      }
      quotedNode_1.addChild("expression",quotedNode1_11);
    }
    result=quotedNode1_10;
  }
  return result;
}
