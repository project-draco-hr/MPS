{
  if (!ValidationUtil.validateAbstractModule(myLanguage,myProcessor)) {
    return;
  }
  for (  SModuleReference el : myLanguage.getExtendedLanguageRefs()) {
    if (el.resolve(myRepository) != null) {
      continue;
    }
    if (!myProcessor.process(new ValidationProblem(Severity.ERROR,"Can't find extended language: " + el.getModuleName()))) {
      return;
    }
  }
  for (  Language l : LanguageDependenciesManager.getAllExtendedLanguages(myLanguage)) {
    SModel descriptor=LanguageAspect.BEHAVIOR.get(l);
    if (descriptor != null)     continue;
    if (!myProcessor.process(new ValidationProblem(Severity.ERROR,myLanguage == l ? "Behavior aspect is absent" : "Cannot extend language without behavior aspect: " + l.getModuleName()))) {
      return;
    }
  }
  for (  SModuleReference mr : myLanguage.getRuntimeModulesReferences()) {
    SModule runtimeModule=mr.resolve(myRepository);
    if (runtimeModule == null) {
      continue;
    }
    if ((runtimeModule instanceof Solution)) {
      continue;
    }
    if (!myProcessor.process(new ValidationProblem(Severity.ERROR,"Runtime module " + runtimeModule + " is not a solution"))) {
      return;
    }
  }
  for (  SModelReference accessory : myLanguage.getModuleDescriptor().getAccessoryModels()) {
    org.jetbrains.mps.openapi.model.SModel accModel=accessory.resolve(MPSModuleRepository.getInstance());
    if (accModel == null) {
      continue;
    }
    if (VisibilityUtil.isVisible(myLanguage,accModel)) {
      continue;
    }
    if (!myProcessor.process(new ValidationProblem(Severity.ERROR,"Can't find accessory model: " + accessory.getModelName()))) {
      return;
    }
  }
  if (!checkCyclicInheritance(myLanguage)) {
    myProcessor.process(new ValidationProblem(Severity.WARNING,"Cyclic language hierarchy"));
  }
}
