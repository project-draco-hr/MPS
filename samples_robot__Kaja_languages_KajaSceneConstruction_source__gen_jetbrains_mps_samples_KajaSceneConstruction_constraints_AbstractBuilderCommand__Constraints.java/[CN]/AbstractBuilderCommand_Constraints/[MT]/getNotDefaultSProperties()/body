{
  Map<SPropertyId,PropertyConstraintsDescriptor> properties=new HashMap<SPropertyId,PropertyConstraintsDescriptor>();
  properties.put(MetaIdFactory.propId(new UUID(-5374744187267758800l,-5706248580699624929l),3210697320273608255l,3210697320273608257l),new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(new UUID(-5374744187267758800l,-5706248580699624929l),3210697320273608255l,3210697320273608257l),this){
    @Override public boolean hasOwnValidator(){
      return true;
    }
    @Override public boolean validateValue(    SNode node,    String propertyValue){
      String propertyName="col";
      return (SPropertyOperations.getInteger(propertyValue)) > 0 && (SPropertyOperations.getInteger(propertyValue)) < KajaFrame.WIDTH - 1;
    }
  }
);
  properties.put(MetaIdFactory.propId(new UUID(-5374744187267758800l,-5706248580699624929l),3210697320273608255l,3210697320273608256l),new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(new UUID(-5374744187267758800l,-5706248580699624929l),3210697320273608255l,3210697320273608256l),this){
    @Override public boolean hasOwnValidator(){
      return true;
    }
    @Override public boolean validateValue(    SNode node,    String propertyValue){
      String propertyName="row";
      return (SPropertyOperations.getInteger(propertyValue)) > 0 && (SPropertyOperations.getInteger(propertyValue)) < KajaFrame.HEIGHT - 1;
    }
  }
);
  return properties;
}
