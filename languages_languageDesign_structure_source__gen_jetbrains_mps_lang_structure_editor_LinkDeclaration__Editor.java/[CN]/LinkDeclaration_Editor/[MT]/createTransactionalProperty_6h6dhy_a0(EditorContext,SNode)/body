{
  CellProviderWithRole provider=new PropertyCellProvider(node,editorContext);
  provider.setRole("role");
  EditorCell_Property editorCell=null;
{
    ModelAccessor modelAccessor=new TransactionalPropertyAccessor(node,"role",false,false,editorContext){
      public void doCommit(      final String oldValue,      final String newValue){
        doCommitImpl(oldValue,newValue);
      }
      public void doCommitImpl(      final String oldValue,      final String newValue){
        if (!(Sequence.fromIterable(ExtensionPoint.<_FunctionTypes._return_P4_E0<? extends Boolean,? super EditorContext,? super SNode,? super String,? super String>>generify(new ExtensionPoint("jetbrains.mps.lang.structure.NodeRenamer",_FunctionTypes._return_P4_E0.class)).getObjects()).any(new IWhereFilter<_FunctionTypes._return_P4_E0<? extends Boolean,? super EditorContext,? super SNode,? super String,? super String>>(){
          public boolean accept(          _FunctionTypes._return_P4_E0<? extends Boolean,? super EditorContext,? super SNode,? super String,? super String> it){
            return it.invoke(editorContext,node,oldValue,newValue);
          }
        }
))) {
          editorContext.getRepository().getModelAccess().executeCommand(new Runnable(){
            public void run(){
              SPropertyOperations.set(node,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086aL,0xf98052f333L,"role"),newValue);
            }
          }
);
        }
      }
    }
;
    editorCell=EditorCell_Property.create(editorContext,modelAccessor,node);
    editorCell.setCellId("role");
    Style style=new StyleImpl();
    BaseLanguageStyle_StyleSheet.apply_Field(style,editorCell);
    editorCell.getStyle().putAll(style);
    editorCell.setDefaultText("<no role>");
    editorCell.setSubstituteInfo(new CompositeSubstituteInfo(editorContext,provider.getCellContext(),new SubstituteInfoPartExt[]{new LinkDeclaration_Editor.LinkDeclaration_null_postfixCellMenu_6h6dhy_a0a0()}));
    editorCell.setCommitInCommand(false);
  }
  SNode attributeConcept=provider.getRoleAttribute();
  Class attributeKind=provider.getRoleAttributeClass();
  if (attributeConcept != null) {
    EditorManager manager=EditorManager.getInstanceFromContext(editorContext);
    return manager.createNodeRoleAttributeCell(editorContext,attributeConcept,attributeKind,editorCell);
  }
 else   return editorCell;
}
