{
  try {
    final Wrappers._T<Language> language=new Wrappers._T<Language>();
    ModelAccess.instance().runWriteAction(new Runnable(){
      public void run(){
        language.value=SModelUtil.getDeclaringLanguage(SNodeOperations.getConceptDeclaration(ReplaceDialog.this.myNode),GlobalScope.getInstance());
      }
    }
);
    final GenerationResult result=this.myEditor.generate(Collections.singleton(language.value.getClassPathItem()));
    String fqName=result.getModelDescriptor().getLongName() + "." + QueryExecutor.GENERATED_QUERY_NAME;
    ClassLoader loader=result.getLoader(QueryExecutor.class.getClassLoader());
    final Query query=(Query)Class.forName(fqName,true,loader).newInstance();
    final IScope scope=this.myScope.getOptions().getScope(this.myContext,result.getModelDescriptor());
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        ReplaceDialog.this.execute(ReplaceDialog.this.myContext.getMPSProject(),query,SNodeOperations.cast(result.getSNode(),"jetbrains.mps.quickQueryLanguage.structure.BaseQuery"),scope);
      }
    }
);
    this.myEditor.disposeEditor();
    this.dispose();
  }
 catch (  Throwable t) {
    t.printStackTrace();
  }
}
