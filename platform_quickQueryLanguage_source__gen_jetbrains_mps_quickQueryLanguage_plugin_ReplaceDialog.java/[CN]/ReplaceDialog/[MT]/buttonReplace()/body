{
  try {
    final Wrappers._T<Language> language=new Wrappers._T<Language>();
    ModelAccess.instance().runWriteAction(new Runnable(){
      public void run(){
        language.value=SModelUtil.getDeclaringLanguage(SNodeOperations.getConceptDeclaration(ReplaceDialog.this.myNode));
      }
    }
);
    IClassesData cd=myEditor.make(Collections.singleton(language.value.getClassPathItem()));
    if (cd == null) {
      return;
    }
    final Wrappers._T<SModel> model=new Wrappers._T<SModel>();
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        model.value=SNodeOperations.getModel(myNode);
      }
    }
);
    String fqName=model.value.getModelDescriptor().getLongName() + "." + QueryExecutor.GENERATED_QUERY_NAME;
    ClassLoader loader=cd.getClassLoader(QueryExecutor.class.getClassLoader());
    final Query query=(Query)Class.forName(fqName,true,loader).newInstance();
    final IScope scope=this.myScope.getOptions().getScope(this.myContext,model.value.getModelDescriptor());
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        ReplaceDialog.this.execute(ReplaceDialog.this.myContext.getProject(),query,SNodeOperations.cast(myNode,"jetbrains.mps.quickQueryLanguage.structure.BaseQuery"),scope);
      }
    }
);
    this.myEditor.disposeEditor();
    this.dispose();
  }
 catch (  Throwable t) {
    t.printStackTrace();
  }
}
