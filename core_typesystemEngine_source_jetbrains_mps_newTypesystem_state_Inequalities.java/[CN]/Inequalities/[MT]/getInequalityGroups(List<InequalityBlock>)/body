{
  Map<SNode,Set<InequalityBlock>> nodesToGroups=new HashMap<SNode,Set<InequalityBlock>>();
  for (  InequalityBlock inequality : inequalities) {
    inequality.expand(myState);
    List<SNode> variables=TypesUtil.getVariables(inequality.getRightNode());
    variables.addAll(TypesUtil.getVariables(inequality.getLeftNode()));
    if (variables.size() == 0)     continue;
    Set<InequalityBlock> group=new HashSet<InequalityBlock>();
    group.add(inequality);
    for (    SNode var : variables) {
      var=myState.getRepresentative(var);
      Set<InequalityBlock> varGroup=nodesToGroups.get(var);
      if (varGroup != null) {
        group.addAll(varGroup);
        varGroup.clear();
      }
      nodesToGroups.put(var,group);
    }
  }
  return new HashSet<Set<InequalityBlock>>(nodesToGroups.values());
}
