{
  if (!solvingInProcess)   return;
  for (  RelationBlock block : new ArrayList<RelationBlock>(myNodesToBlocksInc.getByFirst(child))) {
    myNodesToBlocksInc.removeLink(child,block);
    if (TypesUtil.isVariable(parent)) {
      myNodesToBlocksInc.addLink(parent,block);
    }
  }
  substituteVarInSet(child,parent,myNodesInc);
  substituteVarInSet(child,parent,mySolvableLeft);
  substituteVarInSet(child,parent,mySolvableRight);
  List<SNode> variables=TypesUtil.getVariables(parent,myState);
  for (  SNode outputVar : new ArrayList<SNode>(myInputsToOutputsInc.getByFirst(child))) {
    for (    SNode inputVar : variables) {
      addVariablesLinkInc(inputVar,outputVar);
    }
    myInputsToOutputsInc.removeLink(child,outputVar);
  }
  for (  SNode inputVar : new ArrayList<SNode>(myInputsToOutputsInc.getBySecond(child))) {
    for (    SNode outputVar : variables) {
      addVariablesLinkInc(inputVar,outputVar);
    }
    myInputsToOutputsInc.removeLink(inputVar,child);
  }
}
