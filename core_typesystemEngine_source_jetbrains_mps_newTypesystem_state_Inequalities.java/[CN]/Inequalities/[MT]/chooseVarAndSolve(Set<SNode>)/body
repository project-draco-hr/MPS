{
  if (nodes.isEmpty())   return false;
  for (  Block block : myState.getBlocks(BlockKind.WHEN_CONCRETE)) {
    SNode node=myState.getRepresentative(((WhenConcreteBlock)block).getArgument());
    if (nodes.contains(node) && myInputsToOutputsInc.getBySecond(node).isEmpty()) {
      if (solveRelationsForNode(node)) {
        return true;
      }
    }
  }
  Set<SNode> usedNodes=new HashSet<SNode>();
  Set<SNode> tempNodes=new HashSet<SNode>(nodes);
  while (tempNodes.size() > 0) {
    SNode current=getNodeWithNoInput(tempNodes,usedNodes);
    if (solveRelationsForNode(current)) {
      return true;
    }
    tempNodes.remove(current);
    usedNodes.add(current);
  }
  return false;
}
