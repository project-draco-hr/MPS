{
  Queue<SNode> dependsOn=new LinkedList<SNode>();
  Set<SNode> passed=new HashSet<SNode>();
  dependsOn.addAll(myInputsToOutputsInc.getBySecond(var));
  while (!dependsOn.isEmpty()) {
    SNode node=dependsOn.remove();
    if (used.contains(node) || passed.contains(node)) {
      continue;
    }
    passed.add(node);
    if (!mySolvableLeft.contains(node) && !mySolvableRight.contains(node)) {
      dependsOn.addAll(myInputsToOutputsInc.getBySecond(node));
      continue;
    }
    return false;
  }
  return true;
}
