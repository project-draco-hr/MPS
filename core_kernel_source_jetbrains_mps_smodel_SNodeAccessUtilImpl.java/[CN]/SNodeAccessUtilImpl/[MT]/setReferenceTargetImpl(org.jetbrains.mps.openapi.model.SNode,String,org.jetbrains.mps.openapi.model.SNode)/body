{
  Set<Pair<org.jetbrains.mps.openapi.model.SNode,String>> threadSet=ourSetReferentEventHandlersInProgress.get();
  Pair<org.jetbrains.mps.openapi.model.SNode,String> pair=new Pair<org.jetbrains.mps.openapi.model.SNode,String>(node,role);
  if (threadSet.contains(pair)) {
    node.setReferenceTarget(role,target);
    return;
  }
  ReferenceConstraintsDescriptor descriptor=ConceptRegistry.getInstance().getConstraintsDescriptor(node.getConcept().getQualifiedName()).getReference(role);
  if (descriptor instanceof IllegalReferenceConstraintsDescriptor) {
    node.setReferenceTarget(role,target);
    return;
  }
  threadSet.add(pair);
  try {
    org.jetbrains.mps.openapi.model.SNode oldReferent=node.getReferenceTarget(role);
    if (descriptor.validate(node,oldReferent,target,GlobalScope.getInstance())) {
      node.setReferenceTarget(role,target);
      descriptor.onReferenceSet(node,oldReferent,target,GlobalScope.getInstance());
    }
  }
  finally {
    threadSet.remove(pair);
  }
}
