{
  SNode innerClass=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,"jetbrains.mps.baseLanguage.structure.ClassConcept"));
  ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.getNodeAncestor(this.myClassToRefactor,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"),false,false),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x4a9a46de59132803L,"member"))).addElement(innerClass);
  SPropertyOperations.set(innerClass,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"),this.myNameForInnerClass);
  SLinkOperations.setTarget(innerClass,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,0x112670d886aL,"visibility"),SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10af9586f0cL,"jetbrains.mps.baseLanguage.structure.PrivateVisibility")));
  this.chooseNonStaticForInnerClass(innerClass);
  this.copyChildren(this.myClassToRefactor,innerClass);
  this.addSuperToInnerClass(innerClass);
  this.makeInnerConstructor(innerClass);
  this.addFieldsToInnerClass(innerClass);
  this.addTypeVariablesToInnerClass(innerClass);
  return innerClass;
}
