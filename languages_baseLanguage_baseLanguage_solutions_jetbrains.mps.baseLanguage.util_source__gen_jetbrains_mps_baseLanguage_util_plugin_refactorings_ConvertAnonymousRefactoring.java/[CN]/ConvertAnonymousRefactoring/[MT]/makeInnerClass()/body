{
  SNode innerClass=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept"));
  ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.getNodeAncestor(this.myClassToRefactor,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,"jetbrains.mps.baseLanguage.structure.Classifier"),false,false),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1107461130800l,5375687026011219971l,"member"))).addElement(innerClass);
  SPropertyOperations.set(innerClass,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"),this.myNameForInnerClass);
  SLinkOperations.setTarget(innerClass,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1178549954367l,1178549979242l,"visibility"),SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1146644623116l,"jetbrains.mps.baseLanguage.structure.PrivateVisibility")));
  this.chooseNonStaticForInnerClass(innerClass);
  this.copyChildren(this.myClassToRefactor,innerClass);
  this.addSuperToInnerClass(innerClass);
  this.makeInnerConstructor(innerClass);
  this.addFieldsToInnerClass(innerClass);
  this.addTypeVariablesToInnerClass(innerClass);
  return innerClass;
}
