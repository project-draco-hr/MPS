{
  this.myInnerFields=MapSequence.fromMap(new LinkedHashMap<SNode,SNode>(16,(float)0.75,false));
  for (  SNode varReference : Sequence.fromIterable(this.getExternalReferences(this.myClassToRefactor))) {
    SNode varDeclaration=SLinkOperations.getTarget(varReference,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c77f1e98L,0xf8cc6bf960L,"variableDeclaration"));
    if (!(MapSequence.fromMap(this.myInnerFields).containsKey(varDeclaration))) {
      MapSequence.fromMap(this.myInnerFields).put(varDeclaration,_quotation_createNode_qy1soj_a0a0b0b0l(SNodeOperations.copyNode(SLinkOperations.getTarget(varDeclaration,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x450368d90ce15bc3L,0x4ed4d318133c80ceL,"type"))),"my" + NameUtil.capitalize(SPropertyOperations.getString(varDeclaration,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")))));
    }
  }
}
