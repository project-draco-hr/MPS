{
  SNode constructorInvocation=_quotation_createNode_qy1soj_a0a0x(constructor,SLinkOperations.getChildren(this.myClassToRefactor,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301aeL,"actualArgument")));
  ListSequence.fromList(SLinkOperations.getChildren(constructorInvocation,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301aeL,"actualArgument"))).addSequence(SetSequence.fromSet(MapSequence.fromMap(this.myInnerFields).keySet()).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return ((SNode)BHReflection.invoke(it,SMethodTrimmedId.create("createReference",null,"hEwJfME")));
    }
  }
));
  for (  SNode typeVaryable : MapSequence.fromMap(this.myInnerTypeVariables).select(new ISelector<IMapping<SNode,SNode>,SNode>(){
    public SNode select(    IMapping<SNode,SNode> it){
      return it.key();
    }
  }
)) {
    ListSequence.fromList(SLinkOperations.getChildren(constructorInvocation,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11a59b0fbceL,0x11a59c8ffe0L,"typeParameter"))).addElement(_quotation_createNode_qy1soj_a0a0a2a32(typeVaryable));
  }
  return constructorInvocation;
}
