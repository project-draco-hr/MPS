{
  SemanticNode node=context.getNode();
  if (!(node instanceof ConceptDeclaration))   return;
  final String editorName=node.getName() + "_Editor";
  MPSProject project=context.getProject();
  SModel languageStructure=node.getModel();
  Language language=project.getLanguageByStructureModel(languageStructure);
  if (language == null) {
    JOptionPane.showMessageDialog(null,"Couldn't find Language for structure model " + languageStructure.getFQName());
    return;
  }
  SModel languageEditor=language.getEditorModel();
  if (languageEditor != null) {
    Iterator<SemanticNode> iterator=languageEditor.roots();
    while (iterator.hasNext()) {
      SemanticNode root=iterator.next();
      if (editorName.equals(root.getName())) {
        AbstractEditorComponent editor=context.getIde().getEditorsPane().openEditor(root,EditorsPane.EditorPosition.LEFT);
        editor.selectNode(root);
        return;
      }
    }
    JOptionPane.showMessageDialog(null,"The " + editorName + " wasn't found in "+ languageEditor.getFQName());
  }
 else {
    JOptionPane.showMessageDialog(null,"Editor model for \"" + node.getModel().getFQName() + "\" is not in the project");
  }
}
