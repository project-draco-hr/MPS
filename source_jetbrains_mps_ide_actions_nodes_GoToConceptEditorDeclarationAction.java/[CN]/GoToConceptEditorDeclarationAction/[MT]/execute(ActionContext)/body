{
  SNode node=context.get(SNode.class);
  if (!(node instanceof ConceptDeclaration))   return;
  final String editorName=node.getName() + "_Editor";
  MPSProject project=context.get(MPSProject.class);
  SModel languageStructure=node.getModel();
  Language language=project.getLanguageByStructureModel(languageStructure);
  if (language == null) {
    JOptionPane.showMessageDialog(null,"Couldn't find Language for structure model " + languageStructure.getUID());
    return;
  }
  SModel languageEditor=language.getEditorModel();
  if (languageEditor != null) {
    Iterator<SNode> iterator=languageEditor.roots();
    while (iterator.hasNext()) {
      SNode root=iterator.next();
      if (editorName.equals(root.getName())) {
        AbstractEditorComponent editor=context.get(IdeMain.class).getEditorsPane().openEditor(root,context.get(OperationContext.class));
        editor.selectNode(root);
        return;
      }
    }
    JOptionPane.showMessageDialog(null,"The " + editorName + " wasn't found in "+ languageEditor.getUID());
  }
 else {
    JOptionPane.showMessageDialog(null,"Editor model for \"" + node.getModel().getUID() + "\" is not in the project");
  }
}
