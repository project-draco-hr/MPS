{
  final SAbstractConcept c=SConceptRepository.getInstance().getConcept(concept.getConceptFqName());
  String editorClassName=LanguageAspect.EDITOR.getAspectQualifiedClassName(c) + "_Editor";
  Class<? extends ConceptEditor> editorClass=DescriptorUtils.getClassFromLanguage(editorClassName,myLanguageRuntime);
  if (editorClass == null) {
    return null;
  }
  try {
    Constructor<? extends ConceptEditor> cons=editorClass.getConstructor();
    return cons.newInstance();
  }
 catch (  NoSuchMethodException e) {
    LOG.error(null,e);
  }
catch (  SecurityException e) {
    LOG.error(null,e);
  }
catch (  InstantiationException e) {
    LOG.error(null,e);
  }
catch (  IllegalAccessException e) {
    LOG.error(null,e);
  }
catch (  InvocationTargetException e) {
    LOG.error(null,e);
  }
catch (  IllegalArgumentException e) {
    LOG.error(null,e);
  }
catch (  ClassCastException e) {
    LOG.error(null,e);
  }
  return null;
}
