{
  AbstractEditorComponent component=context.getNodeEditorComponent();
  CollectionUtil.map(CollectionUtil.filter(((EditorCell_Collection)component.getRootCell()).dfsCells(),new Condition<EditorCell>(){
    public boolean met(    EditorCell object){
      return object.canBePossiblyFolded() && !object.isFolded();
    }
  }
),new Mapper<EditorCell,Void>(){
    public Void map(    EditorCell editorCell){
      ((EditorCell_Collection)editorCell).fold();
      return null;
    }
  }
);
  EditorCell selectedCell=component.getSelectedCell();
  if (selectedCell.isUnderFolded()) {
    EditorCell cell=selectedCell;
    EditorCell prevCell=null;
    while (cell != null) {
      prevCell=cell;
      cell=cell.getFoldedAbove();
    }
    component.changeSelection(prevCell);
  }
}
