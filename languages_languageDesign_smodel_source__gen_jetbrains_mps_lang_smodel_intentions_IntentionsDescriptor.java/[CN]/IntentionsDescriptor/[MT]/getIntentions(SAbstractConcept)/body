{
  if (myCached.containsKey(concept)) {
    return Arrays.asList(myCached.get(concept));
  }
  IntentionFactory[] intentions=EMPTY_ARRAY;
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_hphjzv_d0f.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        intentions=new IntentionFactory[1];
        intentions[0]=new ConvertCastToNodeCast_Intention();
      }
    break;
case 1:
  if (true) {
    intentions=new IntentionFactory[1];
    intentions[0]=new ReplaceWithUncheckedRef_Intention();
  }
break;
case 2:
if (true) {
intentions=new IntentionFactory[1];
intentions[0]=new ConceptName2Concept_Intention();
}
break;
case 3:
if (true) {
intentions=new IntentionFactory[1];
intentions[0]=new ConceptNodeType2SConceptType_Intention();
}
break;
case 4:
if (true) {
intentions=new IntentionFactory[1];
intentions[0]=new ConceptRef2Concept_Intention();
}
break;
case 5:
if (true) {
intentions=new IntentionFactory[1];
intentions[0]=new AddSNodeCastStatement_Intention();
}
break;
case 6:
if (true) {
intentions=new IntentionFactory[1];
intentions[0]=new ConvertInstanceofToNodeInstanceof_Intention();
}
break;
case 7:
if (true) {
intentions=new IntentionFactory[1];
intentions[0]=new LinkName2Link_Intention();
}
break;
case 8:
if (true) {
intentions=new IntentionFactory[1];
intentions[0]=new LinkRef2Link_Intention();
}
break;
case 9:
if (true) {
intentions=new IntentionFactory[1];
intentions[0]=new ConvertLinkSetToAssignment_Intention();
}
break;
case 10:
if (true) {
intentions=new IntentionFactory[1];
intentions[0]=new Replace_ListType_withNodeListType_Intention();
}
break;
case 11:
if (true) {
intentions=new IntentionFactory[1];
intentions[0]=new ConvertConceptNodeToSCOncept_Intention();
}
break;
case 12:
if (true) {
intentions=new IntentionFactory[1];
intentions[0]=new ReplaceConceptIsWithConceptEquals_Intention();
}
break;
case 13:
if (true) {
intentions=new IntentionFactory[1];
intentions[0]=new ConvertPropertySetToAssignment_Intention();
}
break;
case 14:
if (true) {
intentions=new IntentionFactory[1];
intentions[0]=new AddOperationParameter_Intention();
}
break;
case 15:
if (true) {
intentions=new IntentionFactory[2];
intentions[0]=new ChangeAsCast_Intention();
intentions[1]=new ConvertCastToSConceptType_Intention();
}
break;
default :
}
}
myCached.put(concept,intentions);
return Arrays.asList(intentions);
}
