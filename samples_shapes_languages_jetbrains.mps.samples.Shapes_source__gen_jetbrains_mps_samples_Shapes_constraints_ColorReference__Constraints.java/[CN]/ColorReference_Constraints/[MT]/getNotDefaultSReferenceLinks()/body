{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(0x16bafbb4c6cd4cc5L,0x83327c6de8729b3fL,0x3a2b0182df2201afL,0x3a2b0182df22029aL),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x16bafbb4c6cd4cc5L,0x83327c6de8729b3fL,0x3a2b0182df2201afL,0x3a2b0182df22029aL),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_xr9dxr_a0a0a0a0a1a0b0a1a1;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return new ListScope(Classifier_BehaviorDescriptor.staticFields_id4_LVZ3pBr7M.invoke(SNodeOperations.getNode("6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.awt(JDK/)","~Color"))){
            public String getName(            SNode child){
              return SPropertyOperations.getString(SNodeOperations.cast(child,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf93c84351fL,"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration")),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
            }
          }
;
        }
      }
;
    }
  }
);
  return references;
}
