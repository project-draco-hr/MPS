{
  SNode builder=SNodeOperations.getAncestor(nodeToCheck,"jetbrains.mps.lang.actions.structure.NodeSubstituteActionsBuilder",false,false);
  SNode substituteConcept=SLinkOperations.getTarget(builder,MetaAdapterFactory.getReferenceLink(new UUID(-5842916035344972280l,-5840605745428443715l),1112058030570l,1112058088712l,"applicableConcept"));
  SNode conceptToAdd=SLinkOperations.getTarget(nodeToCheck,MetaAdapterFactory.getReferenceLink(new UUID(-5842916035344972280l,-5840605745428443715l),1180134965967l,1180135092669l,"concept"));
  if (!(SConceptOperations.isSubConceptOf(conceptToAdd,NameUtil.nodeFQName(substituteConcept)))) {
{
      MessageTarget errorTarget=new NodeMessageTarget();
      IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(nodeToCheck,"Wrong concept to add. Use subtype of " + BehaviorReflection.invokeVirtual(String.class,substituteConcept,"virtual_getFqName_1213877404258",new Object[]{}),"r:00000000-0000-4000-0000-011c895902a6(jetbrains.mps.lang.actions.typesystem)","1197896061431",null,errorTarget);
    }
  }
}
