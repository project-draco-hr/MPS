{
  this.scope=scope;
  this.parentScope=parentScope;
  this.hidingRoot=hidingRoot;
  this.kind=kind;
  this.names=SetSequence.fromSetWithValues(new HashSet(),ListSequence.fromList(scope.getAvailableElements(null)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,NameUtil.nodeFQName(hidingRoot));
    }
  }
).select(new ISelector<SNode,String>(){
    public String select(    SNode it){
      return SPropertyOperations.getString(SNodeOperations.cast(it,"jetbrains.mps.lang.core.structure.INamedConcept"),"name");
    }
  }
));
}
