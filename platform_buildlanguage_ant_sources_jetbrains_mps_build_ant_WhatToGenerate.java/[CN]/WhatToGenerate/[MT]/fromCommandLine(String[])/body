{
  WhatToGenerate whatToGenerate=new WhatToGenerate();
  for (  String arg : args) {
    String[] argsplit=arg.split("\\s+");
    for (    String s : argsplit) {
      String[] propertyValuePair=s.split("=");
      if (propertyValuePair[0].equals(MODEL_DIR)) {
        whatToGenerate.addModelDirectory(new File(propertyValuePair[1]));
      }
 else       if (propertyValuePair[0].equals(MODULE_DIR)) {
        whatToGenerate.addModuleDirectory(new File(propertyValuePair[1]));
      }
 else       if (propertyValuePair[0].equals(MPS_LIBRARY)) {
        String[] nameValuePair=propertyValuePair[1].split("\\[|\\]");
        whatToGenerate.addLibrary(nameValuePair[0],new File(nameValuePair[1]));
      }
 else       if (propertyValuePair[0].equals(MPS_MACRO)) {
        String[] nameValuePair=propertyValuePair[1].split("\\[|\\]");
        whatToGenerate.addMacro(nameValuePair[0],nameValuePair[1]);
      }
 else       if (propertyValuePair[0].equals(MPS_PROJECT)) {
        whatToGenerate.addProjectFile(new File(propertyValuePair[1]));
      }
 else       if (propertyValuePair[0].equals(FAIL_ON_ERROR)) {
        whatToGenerate.myFailOnError=Boolean.parseBoolean(propertyValuePair[1]);
      }
 else       if (propertyValuePair[0].equals(LOG_LEVEL)) {
        whatToGenerate.myLogLevel=Integer.parseInt(propertyValuePair[1]);
      }
 else       if (propertyValuePair[0].equals(SHOW_DIFF)) {
        whatToGenerate.myShowDiff=Boolean.parseBoolean(propertyValuePair[1]);
      }
 else       if (propertyValuePair[0].equals(COMPILE)) {
        whatToGenerate.myCompile=Boolean.parseBoolean(propertyValuePair[1]);
      }
 else       if (propertyValuePair[0].equals(INVOKE_TESTS)) {
        whatToGenerate.myInvokeTests=Boolean.parseBoolean(propertyValuePair[1]);
      }
    }
  }
  return whatToGenerate;
}
