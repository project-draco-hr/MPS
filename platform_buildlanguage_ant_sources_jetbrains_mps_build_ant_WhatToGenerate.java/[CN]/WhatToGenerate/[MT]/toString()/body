{
  final StringBuffer sb=new StringBuffer();
  for (  File f : myModelDirectories) {
    sb.append(MODEL_DIR);
    sb.append("=");
    sb.append(f.getAbsolutePath());
    sb.append(" ");
  }
  for (  File f : myModuleDirectories) {
    sb.append(MODULE_DIR);
    sb.append("=");
    sb.append(f.getAbsolutePath());
    sb.append(" ");
  }
  for (  File f : myMPSProjects) {
    sb.append(MPS_PROJECT);
    sb.append("=");
    sb.append(f.getAbsolutePath());
    sb.append(" ");
  }
  for (  String libraryName : myLibraries.keySet()) {
    sb.append(MPS_LIBRARY);
    sb.append("=");
    sb.append("[");
    sb.append(libraryName);
    sb.append("]");
    sb.append(myLibraries.get(libraryName).getAbsolutePath());
    sb.append(" ");
  }
  for (  String macroName : myMacro.keySet()) {
    sb.append(MPS_MACRO);
    sb.append("=");
    sb.append("[");
    sb.append(macroName);
    sb.append("]");
    sb.append(myMacro.get(macroName));
    sb.append(" ");
  }
  sb.append(FAIL_ON_ERROR);
  sb.append("=");
  sb.append(myFailOnError);
  sb.append(" ");
  sb.append(LOG_LEVEL);
  sb.append("=");
  sb.append(myLogLevel);
  sb.append(" ");
  sb.append(SHOW_DIFF);
  sb.append("=");
  sb.append(myShowDiff);
  sb.append(" ");
  sb.append(COMPILE);
  sb.append("=");
  sb.append(myCompile);
  return sb.toString();
}
