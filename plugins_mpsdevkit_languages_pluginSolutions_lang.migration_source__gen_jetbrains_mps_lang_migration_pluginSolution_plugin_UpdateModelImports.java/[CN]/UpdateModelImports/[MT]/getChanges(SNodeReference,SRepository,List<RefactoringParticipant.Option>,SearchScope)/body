{
  if (!(ListSequence.fromList(selectedOptions).contains(myOption))) {
    return ListSequence.fromList(new ArrayList<RefactoringParticipant.Change<SNodeReference,SNodeReference>>());
  }
  return ListSequence.fromListAndArray(new ArrayList<RefactoringParticipant.Change<SNodeReference,SNodeReference>>(),new RefactoringParticipant.Change<SNodeReference,SNodeReference>(){
    public MoveNodeRefactoringParticipant<SNodeReference,SNodeReference> getParticipant(){
      return UpdateModelImports.this;
    }
    public SearchResults getSearchResults(){
      return new SearchResults();
    }
    public boolean needsToPreserveOldNode(){
      return false;
    }
    public void confirm(    final SNodeReference finalState,    final SRepository repository,    RefactoringSession refactoringSession){
      refactoringSession.registerChange(new Runnable(){
        public void run(){
          SNode node=finalState.resolve(repository);
          SModel model=node.getModel();
          SModule module=model.getModule();
          SModelInternal modelInternal=(SModelInternal)model;
          AbstractModule abstractModule=(AbstractModule)module;
          SLanguage usedLanguage=node.getConcept().getLanguage();
          if (!(modelInternal.importedLanguageIds().contains(usedLanguage))) {
            modelInternal.addLanguage(usedLanguage);
          }
          for (          SReference ref : Sequence.fromIterable(node.getReferences())) {
            SModelReference targetModelReference=ref.getTargetSModelReference();
            SModule targetModule=check_lyx41z_a0b0h0a0a0a3a0a0a1a7(check_lyx41z_a0a1a7a0a0a0d0a0a0b0h(targetModelReference,repository));
            if (targetModelReference == null || targetModule == null) {
              continue;
            }
            if (neq_lyx41z_a0d0h0a0a0a0a0d0a1a1a7(targetModelReference,model.getReference())) {
              if (!(modelInternal.importedModels().contains(targetModelReference))) {
                modelInternal.addModelImport(targetModelReference,true);
              }
            }
            if (!(new GlobalModuleDependenciesManager(module).getModules(GlobalModuleDependenciesManager.Deptype.VISIBLE).contains(targetModule))) {
              abstractModule.addDependency(targetModule.getModuleReference(),false);
            }
          }
        }
      }
);
    }
  }
);
}
