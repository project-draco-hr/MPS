{
  removeAll();
  setLayout(new GridBagLayout());
  GridBagConstraints gridBagConstraints=new GridBagConstraints();
  gridBagConstraints.gridx=0;
  gridBagConstraints.gridy=0;
  gridBagConstraints.weightx=1;
  gridBagConstraints.weighty=0;
  gridBagConstraints.anchor=GridBagConstraints.NORTH;
  gridBagConstraints.fill=GridBagConstraints.BOTH;
  JButton debugCurrentRootButton=new JButton(new AbstractAction("Debug Current Root"){
    public void actionPerformed(    ActionEvent e){
      IEditor currentEditor=myEditorsProvider.getCurrentEditor();
      if (currentEditor != null) {
        EditorComponent editorComponent=currentEditor.getCurrentEditorComponent();
        if (editorComponent != null) {
          final SNode currentRoot=editorComponent.getEditedNode();
          debugRoot(currentRoot);
        }
      }
    }
  }
);
  JPanel upperPanel=new JPanel();
  upperPanel.setLayout(new GridBagLayout());
  GridBagConstraints upperPanelConstraints=new GridBagConstraints();
  upperPanelConstraints.gridx=0;
  upperPanelConstraints.gridy=0;
  upperPanelConstraints.weightx=0;
  upperPanelConstraints.weighty=0;
  upperPanelConstraints.anchor=GridBagConstraints.NORTHWEST;
  upperPanel.add(debugCurrentRootButton,upperPanelConstraints);
  String text=mySlicer == null ? "no info collected" : "info collected for " + mySlicer.getRootInfo();
  upperPanelConstraints.gridx=1;
  upperPanel.add(new JLabel(text));
  upperPanelConstraints.weightx=1;
  upperPanelConstraints.gridx=2;
  upperPanel.add(new JPanel(),upperPanelConstraints);
  add(upperPanel,gridBagConstraints);
  JPanel innerPanel=new JPanel(new GridBagLayout());
  int y=1;
  if (myNodeToSliceWith != null) {
    JPanel nodeTypePanel=new JPanel(new GridBagLayout());
    GridBagConstraints nodeTypePanelConstraints=new GridBagConstraints();
    nodeTypePanel.setBackground(Color.WHITE);
    nodeTypePanelConstraints.gridy=0;
    nodeTypePanelConstraints.weighty=0;
    nodeTypePanelConstraints.weightx=0;
    nodeTypePanelConstraints.fill=GridBagConstraints.NONE;
    nodeTypePanelConstraints.anchor=GridBagConstraints.NORTHWEST;
    nodeTypePanelConstraints.gridx=0;
    nodeTypePanel.add(new JLabel("initial type: "),nodeTypePanelConstraints);
    nodeTypePanelConstraints.gridx=1;
    TypecheckerStateViewComponent.SNodeTree initialTypeTree=new SNodeTree(mySlicer.getInitialNodeType(myNodeToSliceWith));
    nodeTypePanel.add(initialTypeTree,nodeTypePanelConstraints);
    initialTypeTree.rebuildNow();
    innerPanel.add(nodeTypePanel,gridBagConstraints);
    for (    EquationLogItem equationLogItem : myCurrentSlice) {
      gridBagConstraints.gridy=y;
      innerPanel.add(new EquationLogItemPanel(equationLogItem),gridBagConstraints);
      y++;
    }
  }
  gridBagConstraints.gridy=y;
  gridBagConstraints.weighty=1;
  JPanel gauge=new JPanel();
  gauge.setBackground(Color.WHITE);
  innerPanel.add(gauge,gridBagConstraints);
  innerPanel.setBackground(Color.WHITE);
  JScrollPane scrollPane=new JScrollPane(innerPanel);
  scrollPane.setBackground(Color.WHITE);
  gridBagConstraints.weighty=1;
  gridBagConstraints.gridy=1;
  add(scrollPane,gridBagConstraints);
}
