{
  myOperationContext=operationContext;
  myEditorsProvider=new EditorsProvider(operationContext.getProject());
  setLayout(new GridBagLayout());
  myGridBagConstraints=new GridBagConstraints();
  myGridBagConstraints.gridx=0;
  myGridBagConstraints.gridy=0;
  myGridBagConstraints.weightx=1;
  myGridBagConstraints.weighty=0;
  myGridBagConstraints.anchor=GridBagConstraints.NORTH;
  myGridBagConstraints.fill=GridBagConstraints.BOTH;
  myDebugCurrentRootButton=new JButton(new AbstractAction("Debug Current Root"){
    public void actionPerformed(    ActionEvent e){
      IEditor currentEditor=myEditorsProvider.getCurrentEditor();
      if (currentEditor != null) {
        EditorComponent editorComponent=currentEditor.getCurrentEditorComponent();
        if (editorComponent != null) {
          final SNode currentRoot=editorComponent.getEditedNode();
          mySlicer=ModelAccess.instance().runReadAction(new Computable<ISlicer>(){
            public ISlicer compute(){
              return TypeChecker.getInstance().debugRoot(currentRoot);
            }
          }
);
        }
      }
    }
  }
);
  myUpperPanel=new JPanel();
  myUpperPanel.setLayout(new GridBagLayout());
  myUpperPanelConstraints=new GridBagConstraints();
  myUpperPanelConstraints.gridx=0;
  myUpperPanelConstraints.gridy=0;
  myUpperPanelConstraints.weightx=0;
  myUpperPanelConstraints.weighty=0;
  myUpperPanelConstraints.anchor=GridBagConstraints.NORTHWEST;
  myUpperPanel.add(myDebugCurrentRootButton,myUpperPanelConstraints);
  readdUpperGauge();
  addItem(myUpperPanel);
}
