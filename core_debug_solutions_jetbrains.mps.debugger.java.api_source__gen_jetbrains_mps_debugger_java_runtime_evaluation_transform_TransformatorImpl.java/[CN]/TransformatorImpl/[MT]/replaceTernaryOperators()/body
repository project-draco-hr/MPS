{
  boolean finished=true;
  for (  SNode ternaryOperator : ListSequence.fromList(SNodeOperations.getDescendants(myWhatToEvaluate,"jetbrains.mps.baseLanguage.structure.TernaryOperatorExpression",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return TransformationUtil.isUnprocessed(it);
    }
  }
)) {
    SNode ctype=TypeChecker.getInstance().getTypeOf(SLinkOperations.getTarget(ternaryOperator,"condition",true));
    if (TransformationUtil.isNotNullProxy(SLinkOperations.getTarget(ternaryOperator,"condition",true)) && TypeChecker.getInstance().getSubtypingManager().isSubtype(ctype,new TransformatorImpl.QuotationClass_s72qk1_a1a0a1a1a71().createNode())) {
      SLinkOperations.setTarget(ternaryOperator,"condition",new TransformatorImpl.QuotationClass_s72qk1_a0a0a0b0b0r().createNode(SLinkOperations.getTarget(ternaryOperator,"condition",true)),true);
    }
    if (TransformationUtil.isNotNullProxy(SLinkOperations.getTarget(ternaryOperator,"ifTrue",true)) && TypeChecker.getInstance().getSubtypingManager().isSubtype(ternaryOperator.getChild(TransformatorImpl.LTYPE),new TransformatorImpl.QuotationClass_s72qk1_a1a0a2a1a71().createNode())) {
      SLinkOperations.setTarget(ternaryOperator,"ifTrue",new TransformatorImpl.QuotationClass_s72qk1_a0a0a0c0b0r().createNode(SLinkOperations.getTarget(ternaryOperator,"ifTrue",true)),true);
    }
    if (TransformationUtil.isNotNullProxy(SLinkOperations.getTarget(ternaryOperator,"ifFalse",true)) && TypeChecker.getInstance().getSubtypingManager().isSubtype(ternaryOperator.getChild(TransformatorImpl.RTYPE),new TransformatorImpl.QuotationClass_s72qk1_a1a0a3a1a71().createNode())) {
      SLinkOperations.setTarget(ternaryOperator,"ifFalse",new TransformatorImpl.QuotationClass_s72qk1_a0a0a0d0b0r().createNode(SLinkOperations.getTarget(ternaryOperator,"ifFalse",true)),true);
    }
  }
  return finished;
}
