{
  boolean finished=true;
  for (  SNode staticMethodCall : ListSequence.fromList(SNodeOperations.getDescendants(myWhatToEvaluate,"jetbrains.mps.baseLanguageInternal.structure.InternalStaticMethodCall",false,new String[]{})).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return TransformationUtil.isUnprocessed(it);
    }
  }
)) {
    TransformationUtil.replaceStaticMethodCall(staticMethodCall,TransformationUtil.createStringLiteral(SPropertyOperations.getString(staticMethodCall,"fqClassName")),SPropertyOperations.getString(staticMethodCall,"methodName"),TransformationUtil.getJniSignature(ListSequence.fromList(SLinkOperations.getTargets(staticMethodCall,"actualArgument",true)).select(new ISelector<SNode,SNode>(){
      public SNode select(      SNode it){
        return SNodeOperations.cast(TypeChecker.getInstance().getTypeOf(it),"jetbrains.mps.baseLanguage.structure.Type");
      }
    }
),SLinkOperations.getTarget(staticMethodCall,"returnType",true)),SLinkOperations.getTarget(staticMethodCall,"returnType",true),SLinkOperations.getTargets(staticMethodCall,"actualArgument",true));
    finished=false;
  }
  return finished;
}
