{
  Set<SNode> toRemoveNestedReference=SetSequence.fromSet(new HashSet());
  for (  SNode nref : SLinkOperations.getTargets(decl,"nested",true)) {
    for (    SNode ref : SLinkOperations.getTargets(decl,"nested",true)) {
      if (eq_ixz87t_a0a0a0b0h(ref,nref)) {
        continue;
      }
      if (eq_ixz87t_a0b0a0b0h(SPropertyOperations.getString(SLinkOperations.getTarget(ref,"declaration",false),"classname"),SPropertyOperations.getString(SLinkOperations.getTarget(nref,"declaration",false),"classname"))) {
        SetSequence.fromSet(toRemoveNestedReference).addElement(ref);
      }
    }
  }
  SetSequence.fromSet(toRemoveNestedReference).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode it){
      ListSequence.fromList(SNodeOperations.getChildren(decl)).removeElement(it);
      ListSequence.fromList(SLinkOperations.getTargets(it,"role",true)).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode roleRef){
          return SPropertyOperations.getBoolean(SNodeOperations.cast(SLinkOperations.getTarget(roleRef,"declaration",false),"jetbrains.mps.build.generictasks.structure.BuiltInTaskDeclaration"),"fake");
        }
      }
).visitAll(new IVisitor<SNode>(){
        public void visit(        SNode child){
          ListSequence.fromList(SNodeOperations.getChildren(decl)).removeElement(SLinkOperations.getTarget(child,"declaration",false));
        }
      }
);
    }
  }
);
  ListSequence.fromList(SLinkOperations.getTargets(decl,"fakeDeclaration",true)).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode it){
      SPropertyOperations.set(it,"fake","" + (true));
    }
  }
);
  Set<SNode> toRemoveFakeDeclaration=SetSequence.fromSet(new HashSet());
  SetSequence.fromSet(toRemoveFakeDeclaration).addSequence(ListSequence.fromList(SLinkOperations.getTargets(decl,"fakeDeclaration",true)));
  for (  SNode nref : SLinkOperations.getTargets(decl,"nested",true)) {
    List<SNode> notRemove=ListSequence.fromList(SLinkOperations.getTargets(nref,"role",true)).select(new ISelector<SNode,SNode>(){
      public SNode select(      SNode it){
        return SNodeOperations.cast(SLinkOperations.getTarget(it,"declaration",false),"jetbrains.mps.build.generictasks.structure.BuiltInTaskDeclaration");
      }
    }
).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SPropertyOperations.getBoolean(it,"fake");
      }
    }
).toListSequence();
    SetSequence.fromSet(toRemoveFakeDeclaration).removeSequence(ListSequence.fromList(notRemove));
  }
  SetSequence.fromSet(toRemoveFakeDeclaration).visitAll(new IVisitor<SNode>(){
    public void visit(    SNode it){
      ListSequence.fromList(SNodeOperations.getChildren(decl)).removeElement(it);
    }
  }
);
  for (  final SNode nref : SLinkOperations.getTargets(decl,"nested",true)) {
    SNode node=ListSequence.fromList(SLinkOperations.getTargets(nref,"role",true)).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        SNode biDecl=SNodeOperations.cast(SLinkOperations.getTarget(it,"declaration",false),"jetbrains.mps.build.generictasks.structure.BuiltInTaskDeclaration");
        return SPropertyOperations.getBoolean(biDecl,"fake") && eq_ixz87t_a0a1a0a0a0a0a0a9a7(SPropertyOperations.getString(biDecl,"name"),SPropertyOperations.getString(SLinkOperations.getTarget(nref,"declaration",false),"name"));
      }
    }
).first();
    ListSequence.fromList(SNodeOperations.getChildren(nref)).removeElement(node);
    ListSequence.fromList(SNodeOperations.getChildren(decl)).removeElement(SLinkOperations.getTarget(node,"declaration",false));
  }
}
