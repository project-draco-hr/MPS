{
  if (SNodeOperations.getParent(node) == null || !(SNodeOperations.isInstanceOf(SNodeOperations.getParent(node),"jetbrains.mps.baseLanguage.structure.BinaryOperation"))) {
    return;
  }
  SNode parent=SNodeOperations.cast(SNodeOperations.getParent(node),"jetbrains.mps.baseLanguage.structure.BinaryOperation");
  boolean isRight=false;
  if (SLinkOperations.getTarget(parent,"rightExpression",true) == node) {
    isRight=true;
  }
 else   if (SLinkOperations.getTarget(parent,"leftExpression",true) == node) {
    isRight=false;
  }
  if (ParenthesisUtil.isBadPriority(node,parent,isRight)) {
    ParenthesisUtil.rotateTree(node,parent,isRight);
    checkOpeartionParentWRTPriority(node);
  }
}
