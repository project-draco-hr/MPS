{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("variableDeclaration",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      SNode builder=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.lang.actions.structure.NodeSubstituteActionsBuilder",false,false);
      List<SNode> vars=new ArrayList<SNode>();
      if (builder != null) {
        ListSequence.fromList(vars).addSequence(ListSequence.fromList(SLinkOperations.getTargets(builder,"variable",true)));
      }
      return vars;
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c895902a4(jetbrains.mps.lang.actions.constraints)","1213104855839");
    }
  }
);
  return result;
}
