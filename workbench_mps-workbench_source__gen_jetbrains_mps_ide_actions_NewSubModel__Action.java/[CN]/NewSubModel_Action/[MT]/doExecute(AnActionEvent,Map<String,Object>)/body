{
  try {
    final Wrappers._T<NewModelDialog> dialog=new Wrappers._T<NewModelDialog>();
    final IModule localModule=(((IOperationContext)MapSequence.fromMap(_params).get("context")).getModule() != null ? ((IOperationContext)MapSequence.fromMap(_params).get("context")).getModule() : ((SModelDescriptor)MapSequence.fromMap(_params).get("model")).getModule());
    final String namespace=((SModelDescriptor)MapSequence.fromMap(_params).get("model")).getLongName();
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        String stereotype=((SModelDescriptor)MapSequence.fromMap(_params).get("model")).getStereotype();
        dialog.value=new NewModelDialog(((Project)MapSequence.fromMap(_params).get("ideaProject")),localModule,namespace,((IOperationContext)MapSequence.fromMap(_params).get("context")),stereotype,true);
      }
    }
);
    dialog.value.show();
    SModelDescriptor result=dialog.value.getResult();
    if (result != null) {
      SModelDescriptor modelDescriptor=result;
      ProjectPane.getInstance(((Project)MapSequence.fromMap(_params).get("ideaProject"))).selectModel(modelDescriptor,false);
    }
  }
 catch (  Throwable t) {
    if (log.isErrorEnabled()) {
      log.error("User's action execute method failed. Action:" + "NewSubModel",t);
    }
  }
}
