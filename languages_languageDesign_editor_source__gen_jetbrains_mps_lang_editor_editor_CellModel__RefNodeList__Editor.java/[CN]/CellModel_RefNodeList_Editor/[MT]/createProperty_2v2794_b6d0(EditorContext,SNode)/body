{
  CellProviderWithRole provider=new PropertyCellProvider(node,editorContext);
  provider.setRole("separatorText");
  provider.setNoTargetText("<no separator>");
  provider.setAllowsEmptyTarget(true);
  EditorCell editorCell;
  editorCell=provider.createEditorCell(editorContext);
  editorCell.setCellId("property_separatorText");
  Style style=new StyleImpl();
  style.set(StyleAttributes.DRAW_BORDER,true);
  style.set(StyleAttributes.TEXT_BACKGROUND_COLOR,StyleRegistry.getInstance().getSimpleColor(MPSColors.yellow));
  style.set(StyleAttributes.SELECTED_TEXT_BACKGROUND_COLOR,StyleRegistry.getInstance().getSimpleColor(MPSColors.cyan));
  editorCell.getStyle().putAll(style);
  editorCell.setSubstituteInfo(new CompositeSubstituteInfo(editorContext,provider.getCellContext(),new SubstituteInfoPartExt[]{new CellModel_RefNodeList_Editor.CellModel_RefNodeList_generic_cellMenu_2v2794_a0b6d0()}));
  SNode attributeConcept=provider.getRoleAttribute();
  Class attributeKind=provider.getRoleAttributeClass();
  if (attributeConcept != null) {
    IOperationContext opContext=editorContext.getOperationContext();
    EditorManager manager=EditorManager.getInstanceFromContext(opContext);
    return manager.createRoleAttributeCell(editorContext,attributeConcept,attributeKind,editorCell);
  }
 else   return editorCell;
}
