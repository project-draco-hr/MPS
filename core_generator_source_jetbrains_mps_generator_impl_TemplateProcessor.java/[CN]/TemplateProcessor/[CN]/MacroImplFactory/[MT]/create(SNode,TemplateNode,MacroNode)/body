{
  Integer k=macroImplMap.get(macro.getConcept());
  if (k == null) {
    return new NoMacro(macro,templateNode,next,myTemplateProcessor);
  }
switch (k) {
case 0:
    return new NoMacro(macro,templateNode,next,myTemplateProcessor);
case 1:
  return new LoopMacro(macro,templateNode,next,myTemplateProcessor);
case 2:
return new CopySrcMacros(macro,templateNode,next,myTemplateProcessor,true);
case 3:
return new CopySrcMacros(macro,templateNode,next,myTemplateProcessor,false);
case 4:
return new InsertMacro(macro,templateNode,next,myTemplateProcessor);
case 5:
return new WeaveMacro(macro,templateNode,next,myTemplateProcessor);
case 6:
return new LabelMacro(macro,templateNode,next,myTemplateProcessor);
case 7:
return new VarMacro(macro,templateNode,next,myTemplateProcessor);
case 8:
return new IfMacro(macro,templateNode,next,myTemplateProcessor);
case 9:
return new MapSrcMacros(macro,templateNode,next,myTemplateProcessor,true);
case 10:
return new MapSrcMacros(macro,templateNode,next,myTemplateProcessor,false);
case 12:
return new SwitchMacro(macro,templateNode,next,myTemplateProcessor);
case 13:
return new IncludeMacro(macro,templateNode,next,myTemplateProcessor);
case 14:
return new CallMacro(macro,templateNode,next,myTemplateProcessor);
case 15:
return new TraceMacro(macro,templateNode,next,myTemplateProcessor);
case 16:
return new ExportMacro(macro,templateNode,next,myTemplateProcessor);
default :
return new NoMacro(macro,templateNode,next,myTemplateProcessor);
}
}
