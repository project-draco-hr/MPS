{
  if (getQueryExecutor().checkConditionForIfMacro(templateContext.getInput(),macro,templateContext)) {
    return myTemplateProcessor.applyTemplate(mappingName,templateNode,templateContext.subContext(mappingName),macro);
  }
 else {
    SNode altConsequence=RuleUtil.getIfMacro_AlternativeConsequence(macro);
    if (altConsequence != null) {
      ArrayList<SNode> outputNodes=new ArrayList<SNode>();
      try {
        List<Pair<SNode,String>> nodeAndMappingNamePairs=GeneratorUtilEx.getTemplateNodesFromRuleConsequence(altConsequence,templateContext,macro,myTemplateProcessor.myEnv);
        if (nodeAndMappingNamePairs == null) {
          showErrorMessage(templateContext.getInput(),null,macro,"error processing $IF$/alternative");
          throw new TemplateProcessingFailureException();
        }
        for (        Pair<SNode,String> nodeAndMappingNamePair : nodeAndMappingNamePairs) {
          SNode altTemplateNode=nodeAndMappingNamePair.o1;
          String innerMappingName=nodeAndMappingNamePair.o2 != null ? nodeAndMappingNamePair.o2 : mappingName;
          List<SNode> _outputNodes=myTemplateProcessor.applyTemplate(innerMappingName,altTemplateNode,templateContext.subContext(innerMappingName),null);
          if (_outputNodes != null) {
            outputNodes.addAll(_outputNodes);
          }
        }
      }
 catch (      AbandonRuleInputException e) {
      }
      return outputNodes;
    }
  }
  return Collections.emptyList();
}
