{
  List<SNode> newInputNodes=getNewInputNodes(macro,templateContext);
  if (newInputNodes.isEmpty()) {
    return Collections.emptyList();
  }
  ArrayList<SNode> outputNodes=new ArrayList<SNode>();
  for (  SNode newInputNode : newInputNodes) {
    boolean inputChanged=(newInputNode != templateContext.getInput());
    if (inputChanged) {
      myTracer.pushInputNode(GenerationTracerUtil.getSNodePointer(newInputNode));
    }
    try {
      List<SNode> _outputNodes=myTemplateProcessor.applyTemplate(templateNode,templateContext.subContext(newInputNode),macro);
      outputNodes.addAll(_outputNodes);
    }
  finally {
      if (inputChanged) {
        myTracer.closeInputNode(GenerationTracerUtil.getSNodePointer(newInputNode));
      }
    }
  }
  return outputNodes;
}
