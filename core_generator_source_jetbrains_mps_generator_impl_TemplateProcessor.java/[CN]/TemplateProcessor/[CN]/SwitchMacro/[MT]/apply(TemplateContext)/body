{
  SNode templateSwitch=getTemplateSwitch();
  if (templateSwitch == null) {
    throw new TemplateProcessingFailureException(macro,"error processing $SWITCH$ - bad TemplateSwitch reference",GeneratorUtil.describeInput(templateContext));
  }
  final SNodeReference switchPtr=templateSwitch.getReference();
  SNode newInputNode=getNewInputNode(templateContext);
  if (newInputNode == null) {
    TemplateSwitchMapping tswitch=myTemplateProcessor.getGenerator().getSwitch(switchPtr);
    if (tswitch != null) {
      tswitch.processNull(templateContext.getEnvironment(),switchPtr,templateContext);
    }
    return Collections.emptyList();
  }
  final TemplateContext switchContext=prepareContext(templateContext).subContext(newInputNode);
  Collection<SNode> collection=null;
  try {
    collection=templateContext.getEnvironment().trySwitch(switchPtr,switchContext);
  }
 catch (  GenerationCanceledException e) {
    throw e;
  }
catch (  GenerationFailureException e) {
    throw e;
  }
catch (  DismissTopMappingRuleException e) {
    throw e;
  }
catch (  GenerationException e) {
    getLogger().error(switchPtr,"internal error in switch: " + e.toString(),GeneratorUtil.describe(macro,"macro"));
  }
  if (collection == null) {
    collection=nextMacro(templateContext.subContext(newInputNode));
  }
  return new ArrayList<SNode>(collection);
}
