{
  macroImplMap.put(RuleUtil.concept_LoopMacro,new LoopMacro(this));
  macroImplMap.put(RuleUtil.concept_CopySrcNodeMacro,new CopySrcMacros(this,true));
  macroImplMap.put(RuleUtil.concept_CopySrcListMacro,new CopySrcMacros(this,false));
  macroImplMap.put(RuleUtil.concept_InsertMacro,new InsertMacro(this));
  macroImplMap.put(RuleUtil.concept_WeaveMacro,new WeaveMacro(this));
  macroImplMap.put(RuleUtil.concept_LabelMacro,new LabelMacro(this));
  macroImplMap.put(RuleUtil.concept_VarMacro,new VarMacro(this));
  macroImplMap.put(RuleUtil.concept_IfMacro,new IfMacro(this));
  macroImplMap.put(RuleUtil.concept_MapSrcNodeMacro,new MapSrcMacros(this,true));
  macroImplMap.put(RuleUtil.concept_MapSrcListMacro,new MapSrcMacros(this,false));
  macroImplMap.put(RuleUtil.concept_SwitchMacro,new SwitchMacro(this));
  macroImplMap.put(RuleUtil.concept_TemplateSwitchMacro,new SwitchWithArgMacro(this));
  macroImplMap.put(RuleUtil.concept_IncludeMacro,new IncludeMacro(this));
  macroImplMap.put(RuleUtil.concept_TemplateCallMacro,new CallMacro(this));
  macroImplMap.put(RuleUtil.concept_TraceMacro,new TraceMacro(this));
  macroImplMap.put(RuleUtil.concept_NodeMacro,new NoMacro(this));
}
