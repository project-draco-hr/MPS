{
  macroImplMap.put(RuleUtil.concept_LoopMacro,new LoopMacro(this));
  CopySrcMacros m1=new CopySrcMacros(this);
  macroImplMap.put(RuleUtil.concept_CopySrcNodeMacro,m1);
  macroImplMap.put(RuleUtil.concept_CopySrcListMacro,m1);
  macroImplMap.put(RuleUtil.concept_InsertMacro,new InsertMacro(this));
  macroImplMap.put(RuleUtil.concept_WeaveMacro,new WeaveMacro(this));
  macroImplMap.put(RuleUtil.concept_LabelMacro,new LabelMacro(this));
  macroImplMap.put(RuleUtil.concept_VarMacro,new VarMacro(this));
  macroImplMap.put(RuleUtil.concept_IfMacro,new IfMacro(this));
  MapSrcMacros m2=new MapSrcMacros(this);
  macroImplMap.put(RuleUtil.concept_MapSrcNodeMacro,m2);
  macroImplMap.put(RuleUtil.concept_MapSrcListMacro,m2);
  macroImplMap.put(RuleUtil.concept_SwitchMacro,new SwitchMacro(this));
  macroImplMap.put(RuleUtil.concept_TemplateSwitchMacro,new SwitchWithArgMacro(this));
  macroImplMap.put(RuleUtil.concept_IncludeMacro,new IncludeMacro(this));
  macroImplMap.put(RuleUtil.concept_TemplateCallMacro,new CallMacro(this));
  macroImplMap.put(RuleUtil.concept_TraceMacro,new TraceMacro(this));
  macroImplMap.put(RuleUtil.concept_NodeMacro,new NoMacro(this));
}
