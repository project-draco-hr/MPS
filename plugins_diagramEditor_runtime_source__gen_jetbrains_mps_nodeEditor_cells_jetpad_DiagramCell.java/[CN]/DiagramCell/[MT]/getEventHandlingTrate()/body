{
  return new ViewTraitBuilder().on(ViewEvents.MOUSE_PRESSED,new ViewEventHandler<MouseEvent>(){
    public void handle(    View view,    MouseEvent event){
      if (view.focused().get()) {
        hidePatternEditor();
      }
 else {
        view.container().focusedView().set(view);
      }
      View viewUnderMouse=view.viewAt(event.location());
      if (viewUnderMouse != getRootMapper().getTarget().root()) {
        return;
      }
      createNewDiagramElement(event.x(),event.y());
      event.consume();
    }
  }
).on(ViewEvents.KEY_PRESSED,new ViewEventHandler<KeyEvent>(){
    public void handle(    View view,    KeyEvent event){
      if (mySubstituteEditorVisible) {
        getEditor().processKeyPressed(getAWTKeyEvent(event,false));
        event.consume();
        return;
      }
      if (event.key() == Key.ESCAPE) {
        view.container().focusedView().set(null);
        event.consume();
      }
    }
  }
).on(ViewEvents.KEY_TYPED,new ViewEventHandler<KeyEvent>(){
    public void handle(    View view,    KeyEvent event){
      if (!(mySubstituteEditorVisible)) {
        return;
      }
      getEditor().processKeyTyped(getAWTKeyEvent(event,false));
      event.consume();
    }
  }
).build();
}
