{
  return new ViewTraitBuilder().on(ViewEvents.MOUSE_PRESSED,new ViewEventHandler<MouseEvent>(){
    public void handle(    View view,    MouseEvent event){
      hidePatternEditor();
      View viewUnderMouse=view.viewAt(event.location());
      if (viewUnderMouse != myComponent.container().root()) {
        return;
      }
      showPatternEditor(event.x(),event.y());
      event.consume();
    }
  }
).on(ViewEvents.KEY_PRESSED,new ViewEventHandler<KeyEvent>(){
    public void handle(    View view,    KeyEvent event){
      if (!(mySubstituteEditorVisible)) {
        return;
      }
      getEditor().processKeyPressed(getAWTKeyEvent(event,false));
      event.consume();
    }
  }
).on(ViewEvents.KEY_TYPED,new ViewEventHandler<KeyEvent>(){
    public void handle(    View view,    KeyEvent event){
      if (!(mySubstituteEditorVisible)) {
        return;
      }
      getEditor().processKeyTyped(getAWTKeyEvent(event,false));
      event.consume();
    }
  }
).build();
}
