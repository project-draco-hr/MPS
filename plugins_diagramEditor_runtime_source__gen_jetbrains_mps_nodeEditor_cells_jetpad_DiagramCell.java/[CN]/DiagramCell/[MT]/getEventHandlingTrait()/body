{
  if (myHandlingTrait == null) {
    this.myHandlingTrait=new ViewTraitBuilder().on(ViewEvents.MOUSE_PRESSED,new ViewEventHandler<MouseEvent>(){
      public void handle(      View view,      MouseEvent event){
        if (view.viewAt(event.location()) != view) {
          return;
        }
        if (!(view.focused().get())) {
          view.container().focusedView().set(view);
        }
        hidePatternEditor();
        createNewDiagramElement(event.x(),event.y());
        event.consume();
      }
    }
).on(ViewEvents.KEY_PRESSED,new ViewEventHandler<KeyEvent>(){
      public void handle(      View view,      KeyEvent event){
        if (mySubstituteEditorVisible) {
          getEditor().processKeyPressed(getAWTKeyEvent(event,false));
          event.consume();
          return;
        }
        if (event.key() == Key.ESCAPE) {
          view.container().focusedView().set(null);
          event.consume();
        }
      }
    }
).on(ViewEvents.KEY_TYPED,new ViewEventHandler<KeyEvent>(){
      public void handle(      View view,      KeyEvent event){
        if (!(mySubstituteEditorVisible)) {
          return;
        }
        getEditor().processKeyTyped(getAWTKeyEvent(event,false));
        event.consume();
      }
    }
).build();
  }
  return this.myHandlingTrait;
}
