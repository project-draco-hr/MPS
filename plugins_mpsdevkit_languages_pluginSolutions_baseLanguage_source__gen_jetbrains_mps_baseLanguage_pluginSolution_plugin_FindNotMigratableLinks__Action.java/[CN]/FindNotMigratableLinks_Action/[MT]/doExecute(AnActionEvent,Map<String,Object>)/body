{
  try {
    final List<SNodeReference> usages=ListSequence.fromList(new ArrayList<SNodeReference>());
    ((MPSProject)MapSequence.fromMap(_params).get("project")).getRepository().getModelAccess().runReadAction(new Runnable(){
      public void run(){
        for (        SNode link : Arrays.asList(SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x101f2cc410bL,"method")),SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x106c32c4395L,"staticField")),SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x1126b0986b7L,"staticInnerClassifiers")),SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0xf8c108ca69L,"constructor")),SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0xf93c860970L,"staticMethod")),SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0xf8c108ca67L,"field")),SLinkOperations.findLinkDeclaration(MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c108ca66L,0x117b77c3991L,"property")))) {
          for (          SNode node : Sequence.fromIterable(NonMigratableUsagesFinder.findNonMigratableUsages(link))) {
            ListSequence.fromList(usages).addElement(new SNodePointer(node));
          }
        }
      }
    }
);
    InternalActionsUtils.showUsagesViewForNodes(((Project)MapSequence.fromMap(_params).get("ideaProject")),usages);
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "FindNotMigratableLinks",t);
    }
  }
}
