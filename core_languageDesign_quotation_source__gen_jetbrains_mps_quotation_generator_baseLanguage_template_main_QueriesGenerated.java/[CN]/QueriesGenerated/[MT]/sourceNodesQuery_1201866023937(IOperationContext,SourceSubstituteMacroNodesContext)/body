{
  SNode root=SLinkOperations.getTarget(_context.getNode(),"quotedNode",true);
  List<SNode> result=new ArrayList<SNode>();
  List<SNode> frontier=new ArrayList<SNode>();
  SModel model=_context.getGenerator().getTargetModel();
  ListOperations.addElement(frontier,root);
  List<SNode> newFrontier=new ArrayList<SNode>();
  while (!(SequenceOperations.isEmpty(frontier))) {
    for (    SNode node : frontier) {
      for (      SNode child : SNodeOperations.getChildren(node)) {
        if (!(SNodeOperations.isInstanceOf(child,"jetbrains.mps.quotation.structure.AbstractAntiquotation"))) {
          for (          SReference reference : child.getReferences()) {
            if (ReferenceAntiquotation_AnnotationLink.getReferenceAntiquotation((BaseConcept)((INodeAdapter)SNodeOperations.getAdapter(child)),reference.getRole()) != null) {
              continue;
            }
            SNode targetNode=reference.getTargetNode();
            if (SNodeOperations.getAncestor(targetNode,"jetbrains.mps.quotation.structure.Quotation",false,false) == SNodeOperations.getAncestor(child,"jetbrains.mps.quotation.structure.Quotation",false,false)) {
              SNode referenceNode=BaseConcept.newInstance(model).getNode();
              referenceNode.setProperty("role",reference.getRole());
              referenceNode.setReferent("targetNode",targetNode);
              referenceNode.setReferent("sourceNode",child);
              ListOperations.addElement(result,referenceNode);
            }
          }
          ListOperations.addElement(newFrontier,child);
        }
      }
    }
    frontier=newFrontier;
    newFrontier=new ArrayList<SNode>();
  }
  return result;
}
