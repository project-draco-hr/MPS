{
  Set<SNodePointer> sNodePointers2Remove=SetSequence.<SNodePointer>fromSet(new HashSet<SNodePointer>());
  for (  SNodePointer sNodePointer : SetSequence.<SNodePointer>fromSetWithValues(new HashSet<SNodePointer>(),MapSequence.fromMap(myNodePointersToComponents).keySet())) {
    if (sNodePointer.getModelReference().equals(modelReference)) {
      MapSequence.<SNodePointer,LanguageErrorsComponent>fromMap(myNodePointersToComponents).get(sNodePointer).dispose();
      MapSequence.fromMap(myNodePointersToComponents).removeKey(sNodePointer);
      SetSequence.fromSet(sNodePointers2Remove).addElement(sNodePointer);
    }
  }
  for (  EditorComponent component : SetSequence.<EditorComponent>fromSetWithValues(new HashSet<EditorComponent>(),myEditorComponents)) {
    if (SetSequence.<SNodePointer>fromSet(sNodePointers2Remove).contains(component.getEditedNodePointer())) {
      component.removeDisposeListener(myDisposeListener);
      SetSequence.fromSet(myEditorComponents).removeElement(component);
    }
  }
}
