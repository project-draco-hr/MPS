{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(0xf3347d8a0e794f35L,0x8ac91574f25c986fL,0xbe3a0d5ba1a2bdcL,0xbe3a0d5ba1a2bdeL),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xf3347d8a0e794f35L,0x8ac91574f25c986fL,0xbe3a0d5ba1a2bdcL,0xbe3a0d5ba1a2bdeL),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return ExecuteCommandPart_BehaviorDescriptor.getParameters_id5keEkmeCqHW.invoke(SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(0xf3347d8a0e794f35L,0x8ac91574f25c986fL,0x550ea9458ea107acL,"jetbrains.mps.execution.commands.structure.ExecuteCommandPart"),false,false));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_m122yq_a0a1a0a0a1a0b0a1a3;
        }
      }
;
    }
  }
);
  return references;
}
