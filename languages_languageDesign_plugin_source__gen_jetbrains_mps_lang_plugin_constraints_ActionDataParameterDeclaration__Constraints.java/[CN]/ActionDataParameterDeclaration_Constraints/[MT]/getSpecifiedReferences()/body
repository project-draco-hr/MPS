{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0x28f9e4973b424291L,0xaeba0a1039153ab1L,0x11b69e025e0L,0x11b69e95df5L,"key"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x28f9e4973b424291L,0xaeba0a1039153ab1L,0x11b69e025e0L,0x11b69e95df5L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_lb7xg4_a0a0a0a0a1a0b0a1a2;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return new DataParameterKeysScope(_context.getModel());
        }
      }
;
    }
  }
);
  return references;
}
