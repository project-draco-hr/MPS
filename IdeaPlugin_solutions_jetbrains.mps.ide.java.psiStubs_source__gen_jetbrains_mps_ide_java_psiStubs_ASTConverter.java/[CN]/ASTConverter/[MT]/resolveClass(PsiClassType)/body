{
  PsiClass cls=t.resolve();
  if (cls == null) {
    return null;
  }
  System.out.println("Class resolved: " + cls.getQualifiedName());
  PsiElement e=cls;
  do {
    e=e.getParent();
    if (!(e instanceof PsiClass) && !(e instanceof PsiJavaFile)) {
      return null;
    }
  }
 while (!(e instanceof PsiJavaFile));
  PsiJavaFile file=(PsiJavaFile)e;
  String packageName=file.getPackageName();
  SModelReference modelRef=SModelReference.fromString(packageName);
  SNode clsType=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ClassifierType",null);
  clsType.setReference("classifier",new DynamicReference("classifier",clsType,modelRef,t.getClassName()));
  System.out.println("Class type: " + t.getClassName());
  return clsType;
}
