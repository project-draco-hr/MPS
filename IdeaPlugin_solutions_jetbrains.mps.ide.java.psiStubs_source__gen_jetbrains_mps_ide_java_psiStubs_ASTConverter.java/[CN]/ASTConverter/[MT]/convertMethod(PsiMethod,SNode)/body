{
  SNode method;
  if (x.isConstructor()) {
    method=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ConstructorDeclaration",null);
  }
 else   if (!(isStatic(x)) || SConceptOperations.isSubConceptOf(parentConcept,"jetbrains.mps.baseLanguage.structure.Interface")) {
    method=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration",null);
  }
 else {
    method=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StaticMethodDeclaration",null);
  }
  SPropertyOperations.set(method,"name",x.getName());
  SLinkOperations.setTarget(SNodeOperations.cast(method,"jetbrains.mps.baseLanguage.structure.ClassifierMember"),"visibility",getVisibility(x),true);
  SPropertyOperations.set(method,"isFinal","" + (isFinal(x)));
  SPropertyOperations.set(method,"isSynchronized","" + (x.hasModifierProperty(PsiModifier.SYNCHRONIZED)));
  SLinkOperations.setTarget(method,"returnType",convertType(x.getReturnType()),true);
  SLinkOperations.setTarget(method,"body",SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StubStatementList",null),true);
  return method;
}
