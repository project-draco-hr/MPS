{
  return new _FunctionTypes._void_P0_E0(){
    public void invoke(){
      ModelAccess.instance().runReadAction(new _Adapters._return_P0_E0_to_Runnable_adapter(new _FunctionTypes._return_P0_E0<ModelCheckerViewer>(){
        public ModelCheckerViewer invoke(){
          jetbrains.mps.project.Project mpsProject=ProjectHelper.toMPSProject(p);
          Iterable<SModule> modules=((Iterable<SModule>)mpsProject.getModulesWithGenerators());
          final Collection<Problem> problems=MigrationCheckUtil.getProblems(modules,100);
          return p.getComponent(ModelCheckerTool.class).checkModels(Sequence.fromIterable(modules).translate(new ITranslator2<SModule,SModel>(){
            public Iterable<SModel> translate(            SModule it){
              return it.getModels();
            }
          }
).toListSequence(),new ProjectOperationContext(ProjectHelper.toMPSProject(p)),true,new ModelCheckerIssueFinder(){
            @Override public SearchResults find(            SearchQuery searchQuery,            ProgressMonitor monitor){
              final SearchResults<ModelCheckerIssue> result=new SearchResults<ModelCheckerIssue>();
              CollectionSequence.fromCollection(problems).visitAll(new IVisitor<Problem>(){
                public void visit(                Problem it){
                  ModelCheckerIssue.NodeIssue mci=new ModelCheckerIssue.NodeIssue(it.getNode(),it.getMessage(),null);
                  result.add(new SearchResult<ModelCheckerIssue>(mci,it.getNode(),it.getCategory()));
                }
              }
);
              return result;
            }
          }
);
        }
      }
));
    }
  }
;
}
