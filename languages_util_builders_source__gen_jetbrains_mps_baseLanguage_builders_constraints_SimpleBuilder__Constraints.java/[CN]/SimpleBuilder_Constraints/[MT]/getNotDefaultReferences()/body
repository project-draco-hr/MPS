{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("declaration",new BaseReferenceConstraintsDescriptor("declaration",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          SNode contextBuilder=Builder_Behavior.getContextBuilder_7057666463730366732(_context.getEnclosingNode());
          if (SNodeOperations.isInstanceOf(contextBuilder,"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilder")) {
            return SimpleBuilder_Behavior.call_getPossibleChildren_8969040284892300232(SNodeOperations.cast(contextBuilder,"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilder"),_context.getModel(),operationContext.getScope());
          }
 else           if (contextBuilder == null && (SNodeOperations.isInstanceOf(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.GenericNewExpression") || SNodeOperations.isInstanceOf(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.builders.structure.AsBuilderStatement") || SNodeOperations.isInstanceOf(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.builders.structure.BuilderCreator"))) {
            List<SNode> result=new ArrayList<SNode>();
            for (            SNode dcl : ListSequence.fromList(SModelOperations.getRootsIncludingImported(_context.getModel(),operationContext.getScope(),"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilders")).translate(new ITranslator2<SNode,SNode>(){
              public Iterable<SNode> translate(              SNode it){
                return SLinkOperations.getTargets(it,"builder",true);
              }
            }
)) {
              if (SNodeOperations.isInstanceOf(dcl,"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderDeclaration") && SimpleBuilderDeclaration_Behavior.call_isRoot_8969040284892403078(SNodeOperations.cast(dcl,"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderDeclaration"))) {
                ListSequence.fromList(result).addElement(SNodeOperations.cast(dcl,"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderDeclaration"));
              }
            }
            return result;
          }
 else {
            return new ArrayList<SNode>();
          }
        }
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_r83cww_a0a1a0a0a1a0b0a1a0;
        }
      }
;
    }
  }
);
  return references;
}
