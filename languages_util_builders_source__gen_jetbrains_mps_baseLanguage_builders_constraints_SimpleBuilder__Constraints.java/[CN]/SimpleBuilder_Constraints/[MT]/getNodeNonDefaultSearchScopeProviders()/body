{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("declaration",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      SNode contextBuilder=Builder_Behavior.getContextBuilder_7057666463730366732(_context.getEnclosingNode());
      if (SNodeOperations.isInstanceOf(contextBuilder,"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilder")) {
        return SimpleBuilder_Behavior.call_getPossibleChildren_8969040284892300232(SNodeOperations.cast(contextBuilder,"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilder"),_context.getModel(),operationContext.getScope());
      }
 else       if (contextBuilder == null && (SNodeOperations.isInstanceOf(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.GenericNewExpression") || SNodeOperations.isInstanceOf(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.builders.structure.AsBuilderStatement") || SNodeOperations.isInstanceOf(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.builders.structure.BuilderCreator"))) {
        List<SNode> result=new ArrayList<SNode>();
        for (        SNode dcl : ListSequence.fromList(SModelOperations.getRootsIncludingImported(_context.getModel(),operationContext.getScope(),"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilders")).<SNode>translate(new ITranslator2<SNode,SNode>(){
          public Iterable<SNode> translate(          SNode it){
            return SLinkOperations.getTargets(it,"builder",true);
          }
        }
)) {
          if (SNodeOperations.isInstanceOf(dcl,"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderDeclaration") && SimpleBuilderDeclaration_Behavior.call_isRoot_8969040284892403078(SNodeOperations.cast(dcl,"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderDeclaration"))) {
            ListSequence.fromList(result).addElement(SNodeOperations.cast(dcl,"jetbrains.mps.baseLanguage.builders.structure.SimpleBuilderDeclaration"));
          }
        }
        return result;
      }
 else {
        return new ArrayList<SNode>();
      }
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:971d5c35-6139-4f76-9019-ac96d9713d41(jetbrains.mps.baseLanguage.builders.constraints)","7288041816793179321");
    }
  }
);
  return result;
}
