{
  super(project,project.getBaseDir());
  myProject=project;
  List<ModuleTreeNode> moduleNodes=new LinkedList<ModuleTreeNode>();
  MPSProject mpsProject=project.getComponent(MPSProject.class);
  if (mpsProject != null) {
    List<IModule> modules=mpsProject.getModules();
    for (    IModule m : modules) {
      if (m.getDescriptorFile().exists()) {
        moduleNodes.add(new ModuleTreeNode(project,m));
      }
    }
  }
  Collections.sort(moduleNodes,new ModuleTreeNodeComparator());
  MyNamespaceTreeBuilder builder=new MyNamespaceTreeBuilder();
  for (  ModuleTreeNode mtn : moduleNodes) {
    builder.addNode(mtn);
  }
  builder.fillNode(this);
  VirtualFile baseDir=project.getBaseDir();
  if (baseDir != null) {
    VirtualFile[] files=baseDir.getChildren();
    for (    VirtualFile f : files) {
      if (!f.isDirectory()) {
        add(new FileTreeNode(project,f));
      }
    }
  }
  updatePresentation();
}
