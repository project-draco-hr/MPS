{
  Set<SNode> result=new LinkedHashSet<SNode>();
  collectImplementedAndExtended(myTopConcept,result);
  result.add(SModelUtil.getBaseConcept());
  myConcepts=result.toArray(new SNode[result.size()]);
  myDependsOnNodes=new HashSet<SNode>(myConcepts.length * 2);
  for (  SNode concept : myConcepts) {
    myDependsOnNodes.add(concept);
    if (SNodeUtil.isInstanceOfInterfaceConceptDeclaration(concept)) {
      for (      InterfaceConceptReference i : ((InterfaceConceptDeclaration)concept.getAdapter()).getExtendses()) {
        myDependsOnNodes.add(i.getNode());
      }
    }
 else     if (SNodeUtil.isInstanceOfConceptDeclaration(concept)) {
      for (      InterfaceConceptReference i : ((ConceptDeclaration)concept.getAdapter()).getImplementses()) {
        myDependsOnNodes.add(i.getNode());
      }
    }
  }
}
