{
  Set<SModel> models=SetSequence.fromSetWithValues(new HashSet<SModel>(),ListSequence.fromList(nlist).select(new ISelector<SNode,SModel>(){
    public SModel select(    SNode n){
      return SNodeOperations.getModel(n);
    }
  }
));
  Set<String> packages=SetSequence.fromSetWithValues(new HashSet<String>(),SetSequence.fromSet(models).translate(new ITranslator2<SModel,SNode>(){
    public Iterable<SNode> translate(    SModel m){
      return jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations.getRoots(m,"jetbrains.mps.lang.core.structure.BaseConcept");
    }
  }
).select(new ISelector<SNode,String>(){
    public String select(    SNode r){
      return SPropertyOperations.getString(r,MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1133920641626l,1193676396447l,"virtualPackage"));
    }
  }
).where(new IWhereFilter<String>(){
    public boolean accept(    String p){
      return p != null;
    }
  }
));
  List<String> result=ListSequence.fromListWithValues(new ArrayList<String>(),packages);
  Collections.sort(result);
  return result;
}
