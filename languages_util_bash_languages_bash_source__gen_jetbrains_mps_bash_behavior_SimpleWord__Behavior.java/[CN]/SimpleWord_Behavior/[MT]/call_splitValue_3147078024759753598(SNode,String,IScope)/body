{
  if (StringUtils.isEmpty(value)) {
    return false;
  }
  SNode refConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.bash.structure.IConcreteWordUnit");
  for (  SNode unit : ListSequence.<SNode>fromList(SConceptOperations.getAllSubConcepts(refConcept,SNodeOperations.getModel(thisNode),scope))) {
    if (StringUtils.isNotEmpty(SConceptPropertyOperations.getString(unit,"pattern"))) {
      int index=value.indexOf(IConcreteWordUnit_Behavior.call_getPattern_3263637656469698018(unit));
      if (index != -1) {
        SNode endOfWord=SConceptOperations.createNewNode("jetbrains.mps.bash.structure.SimpleWord",null);
        String dummy=value.substring(index + IConcreteWordUnit_Behavior.call_patternLength_3147078024759753579(unit));
        if (StringUtils.isNotEmpty(dummy)) {
          SPropertyOperations.set(endOfWord,"word",dummy);
          SNodeOperations.insertNextSiblingChild(thisNode,endOfWord);
        }
        SNode newUnit=SConceptOperations.createNewNode(NameUtil.nodeFQName(unit),null);
        if (index == 0) {
          SNodeOperations.replaceWithAnother(thisNode,newUnit);
        }
 else {
          SPropertyOperations.set(thisNode,"word",value.substring(0,index));
          SNodeOperations.insertNextSiblingChild(thisNode,newUnit);
        }
        return true;
      }
    }
  }
  return false;
}
