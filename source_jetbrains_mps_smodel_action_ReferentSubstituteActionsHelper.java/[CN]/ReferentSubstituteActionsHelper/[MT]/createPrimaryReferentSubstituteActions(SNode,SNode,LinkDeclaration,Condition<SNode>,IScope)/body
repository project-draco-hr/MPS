{
  final ConceptDeclaration referentConcept=linkDeclaration.getTarget();
  if (referentConcept == null) {
    return Collections.emptyList();
  }
  ConceptDeclaration referenceNodeConcept=SModelUtil.getConceptDeclaration(sourceNode,scope);
  IStatus status=ModelConstraintsUtil.getReferentSearchScope(sourceNode.getParent(),sourceNode,referenceNodeConcept,linkDeclaration,scope);
  if (status.isError()) {
    LOG.error("Couldn't create search scope : " + status.getMessage());
    return Collections.emptyList();
  }
  ISearchScope searchScope=(ISearchScope)status.getUserObject();
  return createDefaultReferentSubstituteActions(sourceNode,currentReferent,linkDeclaration,searchScope,filterCondition,scope);
}
