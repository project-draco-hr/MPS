{
  IScope scope=context.getScope();
  ConceptDeclaration referenceNodeConcept=referenceNode.getConceptDeclaration(scope);
  Language primaryLanguage=SModelUtil.getDeclaringLanguage(referenceNodeConcept,scope);
  if (primaryLanguage == null) {
    LOG.error("Couldn't build actions : couldn't get declaring language for concept " + referenceNodeConcept.getDebugText());
    return new LinkedList<INodeSubstituteAction>();
  }
  IStatus status=ModelConstraintsUtil.getReferentSearchScope(referenceNode.getParent(),referenceNode,referenceNodeConcept,linkDeclaration,context.getScope());
  if (status.isError()) {
    LOG.error("Couldn't create referent search scope : " + status.getMessage());
    return new LinkedList<INodeSubstituteAction>();
  }
  ISearchScope searchScope=(ISearchScope)status.getUserObject();
  return createActions(referenceNode,currentReferent,linkDeclaration,searchScope,scope);
}
