{
  ReferentSubstitutePreconditionFunction precondition=actionsBuilder.getPrecondition();
  if (precondition != null) {
    String methodName=ActionQueryMethodName.referentSubstituteActionsBuilder_Precondition(actionsBuilder);
    Object[] args=new Object[]{sourceNode,context};
    SModel model=actionsBuilder.getModel();
    try {
      return (Boolean)QueryMethodGenerated.invoke(methodName,args,model,true);
    }
 catch (    Exception e) {
      return false;
    }
  }
  String preconditionQueryMethodId=actionsBuilder.getPreconditionAspectId();
  if (preconditionQueryMethodId == null) {
    return true;
  }
  Object[] args1=new Object[]{sourceNode,context};
  Object[] args2=new Object[]{sourceNode,context.getScope()};
  String methodName="referentSubstituteActionsBuilder_Precondition_" + preconditionQueryMethodId;
  SModel model=actionsBuilder.getModel();
  return (Boolean)QueryMethod.invoke_alternativeArguments(methodName,args1,args2,model);
}
