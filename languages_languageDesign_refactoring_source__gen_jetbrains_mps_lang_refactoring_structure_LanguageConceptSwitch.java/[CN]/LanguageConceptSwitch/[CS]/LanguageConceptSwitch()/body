{
  LanguageConceptIndexBuilder builder=new LanguageConceptIndexBuilder(0x3ecd7c84cde345deL,0x886c135ecc69b742L);
  builder.put(0x1174ee3c478L,AbstractMoveExpression);
  builder.put(0x1174eee67c1L,AbstractMoveNodeExpression);
  builder.put(0x1174eeedfb6L,AbstractMoveNodesExpression);
  builder.put(0x1179d272ac6L,AffectedNodesClause);
  builder.put(0x1199f5764daL,ConceptFunctionParameter_Model);
  builder.put(0x5fb04b74a77a0577L,ConceptFunctionParameter_Module);
  builder.put(0x114ff551cd5L,ConceptFunctionParameter_SModel);
  builder.put(0x5fb04b74a77a059eL,ConceptFunctionParameter_SNode);
  builder.put(0x6e6245e06b61646dL,ContextMemberOperation);
  builder.put(0x6e6245e06b65b84aL,ContextType);
  builder.put(0x335c206b02bc2de5L,CreateRefactoringContext);
  builder.put(0x114ff4a9da3L,DoRefactorClause);
  builder.put(0x1c9210c7226dbbf4L,DoWhenDoneClause);
  builder.put(0x1fe4fcef62d0186cL,ExecuteRefactoringStatement);
  builder.put(0x119f1c05cbcL,GetModelsToUpdateClause);
  builder.put(0x4c4b92003e4d77d2L,InitClause);
  builder.put(0x1199f56b378L,IsApplicableToModelClause);
  builder.put(0x5fb04b74a77a0571L,IsApplicableToModuleClause);
  builder.put(0x5fb04b74a77a0598L,IsApplicableToNodeClause);
  builder.put(0x5b9318cd86fd917dL,IsRefactoringApplicable);
  builder.put(0x709995bad7715796L,MainProjectOperation);
  builder.put(0x6e6245e06b61646fL,ModelDescriptorOperation);
  builder.put(0x5fb04b74a77a056aL,ModelTarget);
  builder.put(0x3c55f2dab56d441dL,ModelsToGenerateByDefault);
  builder.put(0x175aa0f4225aa61fL,ModelsToGenerateClause);
  builder.put(0x6e6245e06b616471L,ModuleOperation);
  builder.put(0x5fb04b74a77a056bL,ModuleTarget);
  builder.put(0x1174ef1677bL,MoveNodeToModelExpression);
  builder.put(0x1174ef58749L,MoveNodeToNodeExpression);
  builder.put(0x1174ef7a718L,MoveNodesToModelExpression);
  builder.put(0x1174efa95a1L,MoveNodesToNodeExpression);
  builder.put(0x6e6245e06b616473L,NodeOperation);
  builder.put(0x5fb04b74a77a056cL,NodeTarget);
  builder.put(0x6e6245e06b616475L,NodesOperation);
  builder.put(0x6e6245e06b616477L,OperationContextOperation);
  builder.put(0x6e6245e06b616479L,ProjectOperation);
  builder.put(0x5fb04b74a778e245L,Refactoring);
  builder.put(0x2cfffca8ff395f2fL,RefactoringAction);
  builder.put(0x6a4d729d0327d5dL,RefactoringArgument);
  builder.put(0x6a4d729d0327dc4L,RefactoringArgumentReference);
  builder.put(0x6e6245e06b61724aL,RefactoringContext_ConceptFunctionParameter);
  builder.put(0x5fb04b74a77a0662L,RefactoringField);
  builder.put(0x4c4b92003e483aaaL,RefactoringFieldReference);
  builder.put(0x5fb04b74a77a0664L,RefactoringParameter);
  builder.put(0x5fb04b74a77cda06L,RefactoringParameterReference);
  builder.put(0x5fb04b74a77a0569L,RefactoringTarget);
  builder.put(0x526920001de2794bL,RepositoryOperation);
  builder.put(0x6e6245e06b61647bL,ScopeOperation);
  builder.put(0x11710c75c77L,UpdateModelProcedure);
  myIndex=builder.seal();
}
