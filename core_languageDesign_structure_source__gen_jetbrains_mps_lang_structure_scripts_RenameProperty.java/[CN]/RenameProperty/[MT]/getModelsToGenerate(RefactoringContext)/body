{
{
    Map<IModule,List<SModel>> result=MapSequence.fromMap(new HashMap<IModule,List<SModel>>());
    SModel model=SNodeOperations.getModel(refactoringContext.getSelectedNode());
    Language language=Language.getLanguageFor(model.getModelDescriptor());
    if (language != null) {
      List<SModel> aspectList=ListSequence.fromList(((List<SModelDescriptor>)ListSequence.fromList(ListSequence.<SModelDescriptor>fromArray()).addSequence(SetSequence.fromSet(language.getAspectModelDescriptors())))).select(new ISelector<SModelDescriptor,SModel>(){
        public SModel select(        SModelDescriptor it){
          return it.getSModel();
        }
      }
).toListSequence();
      MapSequence.fromMap(result).put(language,aspectList);
    }
    return result;
  }
}
