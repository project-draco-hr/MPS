{
  List<SNode> containers=ListSequence.fromList(SNodeOperations.getAncestors(thisNode,"jetbrains.mps.baseLanguage.structure.Classifier",true)).reversedList();
  SNode contextContainer=SNodeOperations.getAncestor(context,"jetbrains.mps.baseLanguage.structure.Classifier",true,false);
  if (ListSequence.fromList(SNodeOperations.getAncestors(context,null,false)).contains(thisNode)) {
    return SPropertyOperations.getString(thisNode,"name");
  }
  int index=ListSequence.fromList(containers).indexOf(contextContainer);
  if (index != -1) {
    List<SNode> newContainers=new ArrayList<SNode>();
    for (int i=index + 1; i < ListSequence.fromList(containers).count(); i++) {
      ListSequence.fromList(newContainers).addElement(ListSequence.fromList(containers).getElement(i));
    }
    if (ListSequence.fromList(newContainers).isEmpty()) {
      ListSequence.fromList(newContainers).addElement(ListSequence.fromList(containers).last());
    }
    containers=newContainers;
  }
  StringBuilder result=new StringBuilder();
  boolean first=true;
  for (  SNode c : containers) {
    if (first) {
      first=false;
    }
 else {
      result.append(".");
    }
    result.append(SPropertyOperations.getString(c,"name"));
  }
  return result.toString();
}
