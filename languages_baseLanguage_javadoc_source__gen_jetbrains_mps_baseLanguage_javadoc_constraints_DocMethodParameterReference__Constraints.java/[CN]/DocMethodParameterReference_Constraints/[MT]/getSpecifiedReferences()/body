{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0xf280165065d5424eL,0xbb1b463a8781b786L,0x5ed0d79d7dbe86d7L,0x5ed0d79d7dbe86dcL,"param"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xf280165065d5424eL,0xbb1b463a8781b786L,0x5ed0d79d7dbe86d7L,0x5ed0d79d7dbe86dcL),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return SLinkOperations.getChildren(SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"),false,false),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1feL,"parameter"));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_ne7gs9_a0a1a0a0a1a0b0a1a2;
        }
      }
;
    }
  }
);
  return references;
}
