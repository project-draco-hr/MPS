{
  List<SearchResult<ModelCheckerIssue>> results=ListSequence.fromList(new ArrayList<SearchResult<ModelCheckerIssue>>());
  monitor.start("cardinalities and properties",1);
  for (  final SNode node : ListSequence.fromList(SModelOperations.nodes(model,null))) {
    if (monitor.isCanceled()) {
      break;
    }
    SNode concept=SNodeOperations.getConceptDeclaration(node);
    for (    final SNode link : ListSequence.fromList(BehaviorReflection.invokeNonVirtual((Class<List<SNode>>)((Class)Object.class),SNodeOperations.asNode(concept),"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration","call_getLinkDeclarations_1213877394480",new Object[]{}))) {
      if (BehaviorReflection.invokeNonVirtual(Boolean.TYPE,link,"jetbrains.mps.lang.structure.structure.LinkDeclaration","call_isAtLeastOneCardinality_3386205146660812199",new Object[]{})) {
        if (SPropertyOperations.hasValue(link,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086aL,0xf980556927L,"metaClass"),"aggregation","reference")) {
          if (ListSequence.fromList(SNodeOperations.getChildren(node,link)).isEmpty()) {
            SpecificChecker.addIssue(results,node,"No children in role \"" + SPropertyOperations.getString(link,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086aL,0xf98052f333L,"role")) + "\" (declared cardinality is "+ SPropertyOperations.getString_def(link,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086aL,0xf98054bb04L,"sourceCardinality"),"0..1")+ ")",ModelChecker.SEVERITY_ERROR,"cardinality",null);
          }
        }
 else {
          if ((SLinkOperations.getTargetNode(SNodeOperations.getReference(node,link)) == null)) {
            SpecificChecker.addIssue(results,node,"No reference in role \"" + SPropertyOperations.getString(link,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086aL,0xf98052f333L,"role")) + "\" (declared cardinality is 1)",ModelChecker.SEVERITY_ERROR,"cardinality",null);
          }
        }
      }
 else       if (BehaviorReflection.invokeNonVirtual(Boolean.TYPE,link,"jetbrains.mps.lang.structure.structure.LinkDeclaration","call_isSingular_1213877254557",new Object[]{})) {
        if (ListSequence.fromList(SNodeOperations.getChildren(node,link)).count() > 1) {
          SpecificChecker.addIssue(results,node,ListSequence.fromList(SNodeOperations.getChildren(node,link)).count() + " children in role \"" + SPropertyOperations.getString(link,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086aL,0xf98052f333L,"role"))+ "\" (declared cardinality is "+ SPropertyOperations.getString_def(link,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086aL,0xf98054bb04L,"sourceCardinality"),"0..1")+ ")",ModelChecker.SEVERITY_ERROR,"cardinality",new IModelCheckerFix(){
            public boolean doFix(){
              ListSequence.fromList(SNodeOperations.getChildren(node,link)).skip(1).toListSequence().visitAll(new IVisitor<SNode>(){
                public void visit(                SNode child){
                  SNodeOperations.deleteNode(child);
                }
              }
);
              return true;
            }
          }
);
        }
      }
    }
    for (    final SNode child : ListSequence.fromList(SNodeOperations.getChildren(node)).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return !(SNodeOperations.isAttribute(it));
      }
    }
)) {
      if (!(ModelCheckerUtils.isDeclaredLink(SNodeOperations.getContainingLinkDeclaration(child),true))) {
        SpecificChecker.addIssue(results,node,"Usage of undeclared child role \"" + SNodeOperations.getContainingLinkRole(child) + "\"",ModelChecker.SEVERITY_WARNING,"undeclared child",new IModelCheckerFix(){
          public boolean doFix(){
            ListSequence.fromList(SNodeOperations.getChildren(node,SNodeOperations.getContainingLinkDeclaration(child))).visitAll(new IVisitor<SNode>(){
              public void visit(              SNode child){
                SNodeOperations.deleteNode(child);
              }
            }
);
            return true;
          }
        }
);
      }
    }
    for (    final SReference reference : Sequence.fromIterable(SNodeOperations.getReferences(node))) {
      if (!(ModelCheckerUtils.isDeclaredLink(SLinkOperations.findLinkDeclaration(reference),false))) {
        SpecificChecker.addIssue(results,node,"Usage of undeclared reference role \"" + reference + "\"",ModelChecker.SEVERITY_WARNING,"undeclared reference",new IModelCheckerFix(){
          public boolean doFix(){
            SNodeAccessUtil.setReferenceTarget(node,SLinkOperations.getRole(reference),null);
            return true;
          }
        }
);
      }
    }
  }
  monitor.done();
  return results;
}
