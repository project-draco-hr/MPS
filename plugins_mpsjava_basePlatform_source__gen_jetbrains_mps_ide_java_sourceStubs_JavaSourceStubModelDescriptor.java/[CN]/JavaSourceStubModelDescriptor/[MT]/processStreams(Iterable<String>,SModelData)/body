{
  JavaParser parser=new JavaParser();
  for (  String fileName : names) {
    try {
      Set<SNode> oldNodes=SetSequence.fromSetWithValues(new HashSet<SNode>(),MapSequence.fromMap(myRootsPerFile).get(fileName));
      InputStream is=getSource().openInputStream(fileName);
      if (is == null) {
        SetSequence.fromSet(oldNodes).visitAll(new IVisitor<SNode>(){
          public void visit(          SNode it){
            SNodeOperations.deleteNode(it);
          }
        }
);
        MapSequence.fromMap(myRootsPerFile).removeKey(fileName);
        continue;
      }
      String code=readInputStream(is);
      try {
        is.close();
      }
 catch (      IOException e) {
        LOG.warning("failed to close file " + fileName,e);
      }
      JavaParser.JavaParseResult parseResult=parser.parse(code,FeatureKind.CLASS_STUB,null,true);
      if (ListSequence.fromList(parseResult.getNodes()).isNotEmpty()) {
        for (        SNode newNode : ListSequence.fromList(parseResult.getNodes())) {
          final SNodeId newNodeId=newNode.getNodeId();
          SNode oldNode=SetSequence.fromSet(oldNodes).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return it.getNodeId().equals(newNodeId);
            }
          }
).first();
          if (oldNode == null) {
            into.addRootNode(newNode);
            SetSequence.fromSet(oldNodes).removeElement(oldNode);
          }
 else {
            SNodeOperations.replaceWithAnother(oldNode,newNode);
          }
          MapSequence.fromMap(myRootsById).put(newNode.getNodeId(),newNode);
        }
      }
      SetSequence.fromSet(oldNodes).visitAll(new IVisitor<SNode>(){
        public void visit(        SNode it){
          SNodeOperations.deleteNode(it);
        }
      }
);
      MapSequence.fromMap(myRootsPerFile).put(fileName,SetSequence.fromSetWithValues(new HashSet<SNode>(),parseResult.getNodes()));
    }
 catch (    IOException e) {
      LOG.error("Failed to read java file. " + e.getMessage(),e);
    }
catch (    JavaParseException e) {
      LOG.error("Failed to parse java file. " + e.getMessage());
    }
  }
}
