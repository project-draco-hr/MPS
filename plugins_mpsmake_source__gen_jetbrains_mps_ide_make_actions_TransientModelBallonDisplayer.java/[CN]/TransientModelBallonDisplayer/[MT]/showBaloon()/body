{
  final Balloon balloon=JBPopupFactory.getInstance().createHtmlTextBalloonBuilder("Saving transient models is on",null,LightColors.YELLOW,null).setHideOnAction(true).setHideOnClickOutside(true).setHideOnKeyOutside(true).createBalloon();
  SwingUtilities.invokeLater(new Runnable(){
    public void run(){
      Component component=check_45eojt_a0a0a0a0a1a2(check_45eojt_a0a0a0a0a0b0c(TransientModelsWidgetInstaller.getInstaller()));
      if (component != null && component.isShowing()) {
        showForComponent(component,balloon);
      }
 else {
        component=check_45eojt_a0a0a1a0a0a0b0c(StatusBarHelper.getStatusBar(myProject));
        if (component != null && component.isShowing()) {
          showForComponent(component,balloon);
        }
 else {
          final JRootPane rootPane=SwingUtilities.getRootPane(component);
          if (rootPane != null && rootPane.isShowing()) {
            final Container contentPane=rootPane.getContentPane();
            final Rectangle bounds=contentPane.getBounds();
            final Point target=UIUtil.getCenterPoint(bounds,new Dimension(1,1));
            target.y=bounds.height - 3;
            balloon.show(new RelativePoint(contentPane,target),Balloon.Position.above);
          }
        }
      }
    }
  }
);
  Disposer.register(this,balloon);
}
