{
  Notification notification=new Notification(ID,"Saving transient models","Saving transient models is on",NotificationType.WARNING);
  boolean sticky=NotificationsConfigurationImpl.getSettings(ID).getDisplayType() == NotificationDisplayType.STICKY_BALLOON;
  BalloonBuilder builder=JBPopupFactory.getInstance().createHtmlTextBalloonBuilder("Saving transient models is on",null,LightColors.YELLOW,null).setHideOnAction(!(sticky)).setHideOnClickOutside(!(sticky)).setHideOnKeyOutside(!(sticky));
  if (!(sticky)) {
    builder.setFadeoutTime(3000);
  }
  final Balloon balloon=builder.createBalloon();
  notification.setBalloon(balloon);
  Disposer.register(this,balloon);
  Component component=check_45eojt_a0j0d(myWidget);
  if (component != null && component.isShowing()) {
    showForComponent(component,balloon);
  }
 else {
    component=check_45eojt_a0a0a01a3(WindowManager.getInstance().getStatusBar(myProject));
    if (component != null && component.isShowing()) {
      showForComponent(component,balloon);
    }
 else {
      final JRootPane rootPane=SwingUtilities.getRootPane(component);
      if (rootPane != null && rootPane.isShowing()) {
        final Container contentPane=rootPane.getContentPane();
        final Rectangle bounds=contentPane.getBounds();
        final Point target=UIUtil.getCenterPoint(bounds,new Dimension(1,1));
        target.y=bounds.height - 3;
        balloon.show(new RelativePoint(contentPane,target),Balloon.Position.above);
      }
    }
  }
}
