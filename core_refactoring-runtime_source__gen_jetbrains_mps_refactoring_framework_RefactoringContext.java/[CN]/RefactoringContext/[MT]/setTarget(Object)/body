{
  final IRefactoringTarget refTarget=myRefactoring.getRefactoringTarget();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      if (!(refTarget.allowMultipleTargets())) {
switch (myRefactoring.getRefactoringTarget().getTarget()) {
case NODE:
          SNode node=((SNode)target);
        setSelectedNode(node);
      setSelectedModel(node.getModel().getModelDescriptor());
    setSelectedModule(node.getModel().getModelDescriptor().getModule());
  break;
case MODEL:
SModelDescriptor descriptor=((SModel)target).getModelDescriptor();
setSelectedModel(descriptor);
setSelectedModule(descriptor.getModule());
break;
case MODULE:
setSelectedModule((IModule)target);
break;
default :
throw new IllegalArgumentException("Wrong refactoring type " + refTarget.getTarget().getClass().getName());
}
}
 else {
switch (myRefactoring.getRefactoringTarget().getTarget()) {
case NODE:
setSelectedNodes((List)target);
break;
case MODEL:
setSelectedModels((List)target);
break;
case MODULE:
setSelectedModules((List)target);
break;
default :
throw new IllegalArgumentException("Wrong refactoring type " + refTarget.getTarget().getClass().getName());
}
}
}
}
);
}
