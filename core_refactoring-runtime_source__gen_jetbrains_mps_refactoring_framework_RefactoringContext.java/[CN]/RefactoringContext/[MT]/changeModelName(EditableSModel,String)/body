{
  if (LanguageAspect.STRUCTURE.is(model)) {
    for (    SNode concept : ListSequence.fromList(jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations.nodes(((SModel)model),MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration")))) {
      this.changeFeatureName(concept,NameUtil.longNameFromNamespaceAndShortName(newName,SPropertyOperations.getString(concept,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"))),SPropertyOperations.getString(concept,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")));
    }
  }
  SModelReference oldModelRef=model.getReference();
  model.rename(newName,false);
  ListSequence.fromList(myLoggedData.getData()).addElement(new StructureModification.RenameModel(oldModelRef,model.getReference()));
}
