{
  if (!(myCachesAreUpToDate)) {
    computeCaches();
  }
  for (  SNode node : SNodeUtil.getDescendants(model)) {
    String conceptFQName=node.getConcept().getQualifiedName();
    Set<StructureModificationData.ConceptFeature> exactConceptFeatures=myFQNamesToConceptFeaturesCache.get(conceptFQName);
    if (exactConceptFeatures != null) {
      for (      StructureModificationData.ConceptFeature conceptFeature : exactConceptFeatures) {
        StructureModificationData.ConceptFeature newConceptFeature=myConceptFeatureMap.get(conceptFeature);
        StructureModificationData.ConceptFeatureKind kind=conceptFeature.getConceptFeatureKind();
        if (kind == StructureModificationData.ConceptFeatureKind.CONCEPT) {
          if (newConceptFeature == null) {
            node.delete();
          }
 else {
            String newConceptFQName=newConceptFeature.getConceptFQName();
            ((jetbrains.mps.smodel.SNode)node).setConceptFqName(newConceptFQName);
          }
        }
      }
    }
    Set<StructureModificationData.ConceptFeature> allConceptFeatures=new HashSet<StructureModificationData.ConceptFeature>();
    if (exactConceptFeatures != null) {
      allConceptFeatures.addAll(exactConceptFeatures);
    }
    for (    String parentConceptFQName : LanguageHierarchyCache.getAncestorsNames(conceptFQName)) {
      Set<StructureModificationData.ConceptFeature> conceptFeatures=myFQNamesToConceptFeaturesCache.get(parentConceptFQName);
      if (conceptFeatures != null) {
        allConceptFeatures.addAll(conceptFeatures);
      }
    }
    for (    StructureModificationData.ConceptFeature conceptFeature : allConceptFeatures) {
      StructureModificationData.ConceptFeature newConceptFeature=myConceptFeatureMap.get(conceptFeature);
      boolean delete=newConceptFeature == null;
      StructureModificationData.ConceptFeatureKind kind=conceptFeature.getConceptFeatureKind();
      if (kind == StructureModificationData.ConceptFeatureKind.REFERENCE) {
        String oldRole=conceptFeature.getFeatureName();
        String newRole=null;
        if (!(delete)) {
          newRole=newConceptFeature.getFeatureName();
        }
        for (        SReference reference : node.getReferences()) {
          if (reference.getRole().equals(oldRole)) {
            if (delete) {
              node.setReference(reference.getRole(),null);
            }
 else {
              ((jetbrains.mps.smodel.SReference)reference).setRole(newRole);
            }
          }
        }
        for (        SNode linkAttribute : AttributeOperations.getLinkAttributeForLinkRole(node,oldRole)) {
          if (delete) {
            linkAttribute.delete();
          }
 else {
            String linkAttributeRole=AttributesRolesUtil.getFeatureAttributeRoleFromChildRole(linkAttribute.getRoleInParent());
            ((jetbrains.mps.smodel.SNode)linkAttribute).setRoleInParent(AttributesRolesUtil.childRoleFromLinkAttributeRole(linkAttributeRole,newRole));
          }
        }
      }
      if (kind == StructureModificationData.ConceptFeatureKind.CHILD) {
        String oldRole=conceptFeature.getFeatureName();
        String newRole=null;
        if (!(delete)) {
          newRole=newConceptFeature.getFeatureName();
        }
        for (        SNode child : new ArrayList<SNode>(jetbrains.mps.util.SNodeOperations.getChildren(node))) {
          String childRole=child.getRoleInParent();
          if (childRole != null && childRole.equals(oldRole)) {
            if (delete) {
              child.delete();
            }
 else {
              ((jetbrains.mps.smodel.SNode)child).setRoleInParent(newRole);
            }
          }
        }
      }
      if (kind == StructureModificationData.ConceptFeatureKind.PROPERTY) {
        String oldName=conceptFeature.getFeatureName();
        String newName=null;
        if (!(delete)) {
          newName=newConceptFeature.getFeatureName();
          String val=node.getProperty(oldName);
          node.setProperty(oldName,null);
          node.setProperty(newName,val);
        }
 else {
          node.setProperty(oldName,null);
        }
        for (        SNode propertyAttribute : AttributeOperations.getPropertyAttributeForPropertyName(node,oldName)) {
          if (delete) {
            propertyAttribute.delete();
          }
 else {
            String propertyAttributeRole=AttributesRolesUtil.getFeatureAttributeRoleFromChildRole(propertyAttribute.getRoleInParent());
            ((jetbrains.mps.smodel.SNode)propertyAttribute).setRoleInParent(AttributesRolesUtil.childRoleFromPropertyAttributeRole(propertyAttributeRole,newName));
          }
        }
      }
    }
    for (    SReference reference : node.getReferences()) {
      if (reference instanceof StaticReference) {
        StaticReference staticReference=(StaticReference)reference;
        SNodeId id=staticReference.getTargetNodeId();
        Set<StructureModificationData.FullNodeId> ids=myNodeIdsToFullNodeIdsCache.get(id);
        if (ids != null) {
          for (          StructureModificationData.FullNodeId fullNodeId : ids) {
            StructureModificationData.FullNodeId newFullNodeId=myMoveMap.get(fullNodeId);
            if (fullNodeId.getModelUID().equals(staticReference.getTargetSModelReference())) {
              staticReference.setTargetSModelReference(newFullNodeId.getModelUID());
              staticReference.setTargetNodeId(newFullNodeId.getNodeId());
            }
          }
        }
      }
    }
  }
  SModelOperations.validateLanguagesAndImports(model,true,true);
}
