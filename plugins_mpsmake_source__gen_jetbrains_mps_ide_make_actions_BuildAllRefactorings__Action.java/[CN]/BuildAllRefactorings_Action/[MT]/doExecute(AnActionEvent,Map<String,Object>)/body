{
  try {
    final Wrappers._T<List<SModel>> models=new Wrappers._T<List<SModel>>();
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        Iterable<? extends SModule> projectModules=((MPSProject)MapSequence.fromMap(_params).get("mpsProject")).getModules();
        models.value=ListSequence.fromListWithValues(new ArrayList<SModel>(),Sequence.fromIterable(projectModules).ofType(Language.class).select(new ISelector<Language,SModel>(){
          public SModel select(          Language it){
            return LanguageAspect.REFACTORINGS.get(it);
          }
        }
).where(new IWhereFilter<SModel>(){
          public boolean accept(          SModel it){
            return it != null && SNodeOperations.isGeneratable(it);
          }
        }
));
      }
    }
);
    new MakeActionImpl(((IOperationContext)MapSequence.fromMap(_params).get("context")),new MakeActionParameters(((IOperationContext)MapSequence.fromMap(_params).get("context")),models.value,null,null,null),true).executeAction();
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "BuildAllRefactorings",t);
    }
  }
}
