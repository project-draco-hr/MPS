{
  final Wrappers._T<List<SModel>> models=new Wrappers._T<List<SModel>>();
  event.getData(MPSCommonDataKeys.MPS_PROJECT).getModelAccess().runReadAction(new Runnable(){
    public void run(){
      Iterable<? extends SModule> projectModules=event.getData(MPSCommonDataKeys.MPS_PROJECT).getModules();
      models.value=ListSequence.fromListWithValues(new ArrayList<SModel>(),Sequence.fromIterable(projectModules).ofType(Language.class).select(new ISelector<Language,SModel>(){
        public SModel select(        Language it){
          return LanguageAspect.REFACTORINGS.get(it);
        }
      }
).where(new IWhereFilter<SModel>(){
        public boolean accept(        SModel it){
          return it != null && SNodeOperations.isGeneratable(it);
        }
      }
));
    }
  }
);
  new MakeActionImpl(new MakeActionParameters(event.getData(MPSCommonDataKeys.MPS_PROJECT)).models(models.value).cleanMake(true)).executeAction();
}
