{
  List<SNode> rv=ListSequence.fromList(new ArrayList<SNode>());
  String outerName=ac.getName();
  IFile parent=file.getParent();
  for (  InnerClassNode cn : ac.getInnerClasses()) {
    String name=cn.name;
    if (name == null) {
      continue;
    }
    if (cn.innerName == null) {
      continue;
    }
    if ((cn.access & Opcodes.ACC_SYNTHETIC) != 0) {
      continue;
    }
    boolean isPrivate=(cn.access & Opcodes.ACC_PRIVATE) != 0;
    if (isPrivate && mySkipPrivate) {
      continue;
    }
    if (!(outerName.equals(cn.outerName))) {
      continue;
    }
    int index=name.lastIndexOf('/');
    if (index != -1) {
      name=name.substring(index + 1);
    }
    boolean isStatic=(cn.access & Opcodes.ACC_STATIC) != 0;
    SNode inner=getClassifier(parent.getDescendant(name + ".class"));
    SPropertyOperations.set(inner,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,0x73c6d8a8c021f99L,"nonStatic"),"" + (!(isStatic)));
    ListSequence.fromList(rv).addElement(inner);
  }
  return rv;
}
