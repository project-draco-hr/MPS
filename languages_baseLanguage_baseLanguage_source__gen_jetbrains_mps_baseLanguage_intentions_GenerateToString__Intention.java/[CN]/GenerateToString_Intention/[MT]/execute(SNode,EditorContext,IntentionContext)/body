{
  final SNode classConcept=SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.ClassConcept");
  final SNode rightmostExpression;
  SNodePointer firstField=(((SNodePointer[])intentionContext.getContextParametersMap().get("selectedFields")) != null && ((SNodePointer[])intentionContext.getContextParametersMap().get("selectedFields")).length > 0 ? ((SNodePointer[])intentionContext.getContextParametersMap().get("selectedFields"))[0] : null);
  SNode currentExpression=null;
  for (  SNodePointer fieldPtr : ((SNodePointer[])intentionContext.getContextParametersMap().get("selectedFields"))) {
    SNode field=SNodeOperations.cast(fieldPtr.getNode(),"jetbrains.mps.baseLanguage.structure.FieldDeclaration");
    SNode fieldRef=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalInstanceFieldReference",null);
    SLinkOperations.setTarget(fieldRef,"variableDeclaration",field,false);
    SNode item=new GenerateToString_Intention.QuotationClass_6enhg7_a0a3a4a7().createNode(((fieldPtr == firstField ? "" : ", ")) + SPropertyOperations.getString(field,"name") + "=");
    if (fieldPtr == firstField) {
      currentExpression=new GenerateToString_Intention.QuotationClass_6enhg7_a0a0a4a4a7().createNode(SPropertyOperations.getString(classConcept,"name") + "{",item);
      currentExpression=new GenerateToString_Intention.QuotationClass_6enhg7_a0a1a4a4a7().createNode(fieldRef,currentExpression);
    }
 else {
      currentExpression=new GenerateToString_Intention.QuotationClass_6enhg7_a0a0a0e0e0h().createNode(item,currentExpression);
      currentExpression=new GenerateToString_Intention.QuotationClass_6enhg7_a0a1a0e0e0h().createNode(fieldRef,currentExpression);
    }
  }
  if (((SNodePointer[])intentionContext.getContextParametersMap().get("selectedFields")) == null || ((SNodePointer[])intentionContext.getContextParametersMap().get("selectedFields")).length == 0) {
    rightmostExpression=new GenerateToString_Intention.QuotationClass_6enhg7_a0a0a5a7().createNode(SPropertyOperations.getString(classConcept,"name") + "{}");
  }
 else {
    rightmostExpression=new GenerateToString_Intention.QuotationClass_6enhg7_a0a0a0f0h().createNode(currentExpression);
  }
  SNode method=ListSequence.fromList(SLinkOperations.getTargets(classConcept,"method",true)).addElement(new GenerateToString_Intention.QuotationClass_6enhg7_a0a0a6a7().createNode(rightmostExpression));
  editorContext.select(method);
}
