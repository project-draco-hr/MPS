{
  StructureAspectDescriptor structureDescriptor=(StructureAspectDescriptor)myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
switch (structureDescriptor.internalIndex(c)) {
case LanguageConceptSwitch.AbstractConceptDeclaration:
    return props_AbstractConceptDeclaration;
case LanguageConceptSwitch.AggregationLinkDeclarationScopeKind:
  return props_AggregationLinkDeclarationScopeKind;
case LanguageConceptSwitch.AttributeInfo:
return props_AttributeInfo;
case LanguageConceptSwitch.AttributeInfo_AttributedConcept:
return props_AttributeInfo_AttributedConcept;
case LanguageConceptSwitch.AttributeInfo_IsMultiple:
return props_AttributeInfo_IsMultiple;
case LanguageConceptSwitch.ConceptDeclaration:
return props_ConceptDeclaration;
case LanguageConceptSwitch.ConstrainedDataTypeDeclaration:
return props_ConstrainedDataTypeDeclaration;
case LanguageConceptSwitch.DataTypeDeclaration:
return props_DataTypeDeclaration;
case LanguageConceptSwitch.DeprecatedNodeAnnotation:
return props_DeprecatedNodeAnnotation;
case LanguageConceptSwitch.EnumerationDataTypeDeclaration:
return props_EnumerationDataTypeDeclaration;
case LanguageConceptSwitch.EnumerationMemberDeclaration:
return props_EnumerationMemberDeclaration;
case LanguageConceptSwitch.IConceptAspect:
return props_IConceptAspect;
case LanguageConceptSwitch.IStructureDeprecatable:
return props_IStructureDeprecatable;
case LanguageConceptSwitch.InterfaceConceptDeclaration:
return props_InterfaceConceptDeclaration;
case LanguageConceptSwitch.InterfaceConceptReference:
return props_InterfaceConceptReference;
case LanguageConceptSwitch.LinkDeclaration:
return props_LinkDeclaration;
case LanguageConceptSwitch.PrimitiveDataTypeDeclaration:
return props_PrimitiveDataTypeDeclaration;
case LanguageConceptSwitch.PropertyDeclaration:
return props_PropertyDeclaration;
case LanguageConceptSwitch.ReferenceLinkDeclartionScopeKind:
return props_ReferenceLinkDeclartionScopeKind;
}
return null;
}
