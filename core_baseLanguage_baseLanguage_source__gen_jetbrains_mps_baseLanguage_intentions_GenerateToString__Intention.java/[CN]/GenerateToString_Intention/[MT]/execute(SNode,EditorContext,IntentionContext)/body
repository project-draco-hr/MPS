{
  final SNode classConcept=SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.ClassConcept");
  final SNode rightmostExpression;
  SNode firstField=ListSequence.fromList(((List<SNode>)intentionContext.getContextParametersMap().get("selectedFields"))).first();
  SNode currentExpression=null;
  for (  SNode field : ((List<SNode>)intentionContext.getContextParametersMap().get("selectedFields"))) {
    SNode fieldRef=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.FieldReferenceOperation",null);
    SLinkOperations.setTarget(fieldRef,"fieldDeclaration",field,false);
    SNode item=new _Quotations.QuotationClass_6().createNode(((field == firstField ? "" : ", ")) + SPropertyOperations.getString(field,"name") + "=");
    SNode dotExpression=new _Quotations.QuotationClass_36().createNode(SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ThisExpression",null),fieldRef);
    if (field == firstField) {
      currentExpression=new _Quotations.QuotationClass_33().createNode(SPropertyOperations.getString(classConcept,"name") + "{",item);
      currentExpression=new _Quotations.QuotationClass_38().createNode(dotExpression,currentExpression);
    }
 else {
      currentExpression=new _Quotations.QuotationClass_7().createNode(item,currentExpression);
      currentExpression=new _Quotations.QuotationClass_37().createNode(dotExpression,currentExpression);
    }
  }
  if (ListSequence.fromList(((List<SNode>)intentionContext.getContextParametersMap().get("selectedFields"))).isEmpty()) {
    rightmostExpression=new _Quotations.QuotationClass_18().createNode(SPropertyOperations.getString(classConcept,"name") + "{}");
  }
 else {
    rightmostExpression=new _Quotations.QuotationClass_8().createNode(currentExpression);
  }
  SNode method=SLinkOperations.addChild(classConcept,"method",new _Quotations.QuotationClass_23().createNode(rightmostExpression));
  editorContext.select(method);
}
