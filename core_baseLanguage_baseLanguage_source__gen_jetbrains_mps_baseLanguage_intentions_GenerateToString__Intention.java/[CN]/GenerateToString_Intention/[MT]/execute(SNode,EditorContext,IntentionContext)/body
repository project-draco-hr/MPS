{
  final SNode classConcept=SNodeOperations.cast(node,"jetbrains.mps.baseLanguage.structure.ClassConcept");
  final SNode rightmostExpression;
  SNode firstField=ListSequence.<SNode>fromList(((List<SNode>)intentionContext.getContextParametersMap().get("selectedFields"))).first();
  SNode currentExpression=null;
  for (  SNode field : ((List<SNode>)intentionContext.getContextParametersMap().get("selectedFields"))) {
    SNode fieldRef=SNodeFactoryOperations.createNewNode("jetbrains.mps.baseLanguage.structure.LocalInstanceFieldReference",null);
    SLinkOperations.setTarget(fieldRef,"variableDeclaration",field,false);
    SNode item=new GenerateToString_Intention.QuotationClass_6enhg7_a0a2a4a7().createNode(((field == firstField ? "" : ", ")) + SPropertyOperations.getString(field,"name") + "=");
    if (field == firstField) {
      currentExpression=new GenerateToString_Intention.QuotationClass_6enhg7_a0a0a3a4a7().createNode(SPropertyOperations.getString(classConcept,"name") + "{",item);
      currentExpression=new GenerateToString_Intention.QuotationClass_6enhg7_a0a1a3a4a7().createNode(fieldRef,currentExpression);
    }
 else {
      currentExpression=new GenerateToString_Intention.QuotationClass_6enhg7_a0a0a0d0e0h().createNode(item,currentExpression);
      currentExpression=new GenerateToString_Intention.QuotationClass_6enhg7_a0a1a0d0e0h().createNode(fieldRef,currentExpression);
    }
  }
  if (ListSequence.<SNode>fromList(((List<SNode>)intentionContext.getContextParametersMap().get("selectedFields"))).isEmpty()) {
    rightmostExpression=new GenerateToString_Intention.QuotationClass_6enhg7_a0a0a5a7().createNode(SPropertyOperations.getString(classConcept,"name") + "{}");
  }
 else {
    rightmostExpression=new GenerateToString_Intention.QuotationClass_6enhg7_a0a0a0f0h().createNode(currentExpression);
  }
  SNode method=ListSequence.<SNode>fromList(SLinkOperations.getTargets(classConcept,"method",true)).addElement(new GenerateToString_Intention.QuotationClass_6enhg7_a0a0a6a7().createNode(rightmostExpression));
  editorContext.select(method);
}
