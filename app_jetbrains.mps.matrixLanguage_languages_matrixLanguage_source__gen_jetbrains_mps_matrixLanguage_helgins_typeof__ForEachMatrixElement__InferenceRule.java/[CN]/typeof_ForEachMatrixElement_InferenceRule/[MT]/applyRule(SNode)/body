{
{
    final SNode matrix=TypeChecker.getInstance().getRuntimeSupport().typeOf(SLinkOperations.getTarget(nodeToCheck,"matrix",true),"jetbrains.mps.matrixLanguage.helgins","1210240202730",true);
    TypeChecker.getInstance().getRuntimeSupport().whenConcrete(matrix,new Runnable(){
      public void run(){
        if (!(SNodeOperations.isInstanceOf(TypeChecker.getInstance().getEquationManager().getRepresentator(matrix),"jetbrains.mps.matrixLanguage.structure.MatrixType"))) {
{
            BaseIntentionProvider intentionProvider=null;
            TypeChecker.getInstance().reportTypeError(nodeToCheck,"Should be matrix, but " + SNodeOperations.getConceptDeclaration(TypeChecker.getInstance().getEquationManager().getRepresentator(matrix)),"jetbrains.mps.matrixLanguage.helgins","1210240609365",intentionProvider);
          }
        }
        SNode t=((SNode)TypeChecker.getInstance().getEquationManager().getRepresentator(matrix));
        TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(SLinkOperations.getTarget(nodeToCheck,"element",true),"jetbrains.mps.matrixLanguage.helgins","1210241241539",true),SLinkOperations.getTarget(t,"scalarType",true),SLinkOperations.getTarget(nodeToCheck,"element",true),null,"jetbrains.mps.matrixLanguage.helgins","1210241241537");
      }
    }
,"jetbrains.mps.matrixLanguage.helgins","1210240199916");
  }
}
