{
  super(context.getMainFrame(),"Find Instances by Condition");
  this.myContext=context;
  this.setSize(new Dimension(500,500));
  this.setModal(false);
  ModelAccess.instance().runWriteAction(new Runnable(){
    public void run(){
      FindInstancesDialog.this.myNode=SConceptOperations.createNewNode("jetbrains.mps.quickQueryLanguage.structure.ModelQuery",null);
      SNode statementList=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.StatementList",null);
      SNode expressionStatement=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ExpressionStatement",null);
      SNode defaultCondition=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.BooleanConstant",null);
      SPropertyOperations.set(defaultCondition,"value","" + true);
      SLinkOperations.setTarget(expressionStatement,"expression",defaultCondition,true);
      SLinkOperations.addChild(statementList,"statement",expressionStatement);
      SLinkOperations.setTarget(SLinkOperations.getTarget(FindInstancesDialog.this.myNode,"condition",true),"body",statementList,true);
      FindInstancesDialog.this.myEditor=new EmbeddableEditor(context,new ModelOwner(){
      }
,FindInstancesDialog.this.myNode);
    }
  }
);
  final Wrappers._T<List<Language>> languageList=new Wrappers._T<List<Language>>();
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      languageList.value=language.getAllExtendedLanguages();
    }
  }
);
  for (  Language extendedLanguage : languageList.value) {
    this.myEditor.addLanguageStructureModel(extendedLanguage);
  }
  this.myPanel.add(this.myEditor.getComponenet(),BorderLayout.CENTER);
  this.myEditor.addLanguageStructureModel(language);
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      FindInstancesDialog.this.myScope=new ScopeEditor(new ScopeOptions());
      FindInstancesDialog.this.myPanel.add(FindInstancesDialog.this.myScope.getComponent(),BorderLayout.SOUTH);
    }
  }
);
}
