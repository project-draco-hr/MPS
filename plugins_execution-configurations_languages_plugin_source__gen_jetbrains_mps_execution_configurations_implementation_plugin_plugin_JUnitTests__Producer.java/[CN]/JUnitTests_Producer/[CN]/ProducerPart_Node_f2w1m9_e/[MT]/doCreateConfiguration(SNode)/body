{
  setSourceElement(new MPSPsiElement(source));
  SNode method=TestNodeWrapperFactory.findWrappableAncestor(source,false);
  if (method == null) {
    return null;
  }
  ITestNodeWrapper wrapper=TestNodeWrapperFactory.tryToWrap(method);
  if (wrapper == null || wrapper.isTestCase()) {
    return null;
  }
  JUnitTests_Configuration configuration=((JUnitTests_Configuration)getConfigurationFactory().createConfiguration("" + wrapper.getName(),(JUnitTests_Configuration)RunManagerImpl.getInstanceImpl(getContext().getProject()).getConfigurationTemplate(getConfigurationFactory()).getConfiguration()));
  configuration.getJUnitSettings().setJUnitRunType(JUnitRunTypes.METHOD);
  configuration.getJUnitSettings().setTestMethods(PointerUtils.nodeToCloneableList(method));
  SNode testNode=TestNodeWrapperFactory.findWrappableAncestor(source,true);
  if (SNodeOperations.isInstanceOf(testNode,MetaAdapterFactory.getInterfaceConcept(0xf61473f9130f42f6L,0xb98d6c438812c2f6L,0x11b2709bd56L,"jetbrains.mps.baseLanguage.unitTest.structure.ITestCase"))) {
    boolean canRunInProcess=((Boolean)BHReflection.invoke(SNodeOperations.cast(testNode,MetaAdapterFactory.getInterfaceConcept(0xf61473f9130f42f6L,0xb98d6c438812c2f6L,0x11b2709bd56L,"jetbrains.mps.baseLanguage.unitTest.structure.ITestCase")),SMethodTrimmedId.create("canRunInProcess",null,"5_jSk8paieB")));
    configuration.getJUnitSettings().setLightExec(canRunInProcess);
  }
  return configuration;
}
