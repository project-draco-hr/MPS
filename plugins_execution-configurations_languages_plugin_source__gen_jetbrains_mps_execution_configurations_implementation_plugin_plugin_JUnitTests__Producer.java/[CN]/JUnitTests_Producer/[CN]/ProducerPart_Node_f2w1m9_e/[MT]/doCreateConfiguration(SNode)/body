{
  setSourceElement(new MPSPsiElement(source));
  SNode method=TestNodeWrapperFactory.findWrappableAncestor(source,false);
  if (method != null) {
    ITestNodeWrapper wrapper=TestNodeWrapperFactory.tryToWrap(method);
    if (wrapper != null && !(wrapper.isTestCase())) {
      return null;
    }
  }
  SNode testNode=SNodeOperations.cast(TestNodeWrapperFactory.findWrappableAncestor(source,true),MetaAdapterFactory.getInterfaceConcept(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,"jetbrains.mps.lang.core.structure.INamedConcept"));
  if (testNode == null) {
    return null;
  }
  ITestNodeWrapper wrapper=TestNodeWrapperFactory.tryToWrap(testNode);
  if (wrapper == null || Sequence.fromIterable(wrapper.getTestMethods()).isEmpty()) {
    return null;
  }
  String name=SPropertyOperations.getString(testNode,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
  if (name == null) {
    return null;
  }
  JUnitTests_Configuration configuration=((JUnitTests_Configuration)getConfigurationFactory().createConfiguration("" + name,(JUnitTests_Configuration)RunManagerImpl.getInstanceImpl(getContext().getProject()).getConfigurationTemplate(getConfigurationFactory()).getConfiguration()));
  configuration.getJUnitSettings().setRunType(JUnitRunTypes.NODE);
  configuration.getJUnitSettings().setTestCases(PointerUtils.nodeToCloneableList(testNode));
  return configuration;
}
