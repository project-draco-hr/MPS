{
  setSourceElement(new MPSPsiElement(source));
  String name=source.getModelName();
  JUnitTests_Configuration configuration=((JUnitTests_Configuration)getConfigurationFactory().createConfiguration("" + "Tests in '" + NameUtil.shortNameFromLongName(name) + "'",(JUnitTests_Configuration)RunManagerImpl.getInstanceImpl(getContext().getProject()).getConfigurationTemplate(getConfigurationFactory()).getConfiguration()));
  configuration.getJUnitSettings().setJUnitRunType(JUnitRunTypes.MODEL);
  configuration.getJUnitSettings().setModel(source.getModelName());
  Project project=ProjectHelper.toMPSProject(getContext().getProject());
  if (project != null) {
    boolean canExecuteInProcess=true;
    List<ITestNodeWrapper> list=configuration.getJUnitSettings().getTests(project);
    if (ListSequence.fromList(list).isEmpty()) {
      return null;
    }
    for (    ITestNodeWrapper testNode : ListSequence.fromList(list)) {
      SNode testRoot=check_f2w1m9_a0a0d0f0a2(testNode.getNode());
      if (testRoot != null && SNodeOperations.isInstanceOf(testRoot,MetaAdapterFactory.getInterfaceConcept(0xf61473f9130f42f6L,0xb98d6c438812c2f6L,0x11b2709bd56L,"jetbrains.mps.baseLanguage.unitTest.structure.ITestCase"))) {
        if (!(((boolean)(Boolean)BHReflection.invoke(SNodeOperations.cast(testRoot,MetaAdapterFactory.getInterfaceConcept(0xf61473f9130f42f6L,0xb98d6c438812c2f6L,0x11b2709bd56L,"jetbrains.mps.baseLanguage.unitTest.structure.ITestCase")),SMethodTrimmedId.create("canRunInProcess",null,"5_jSk8paieB"))))) {
          canExecuteInProcess=false;
        }
      }
 else {
        canExecuteInProcess=false;
      }
    }
    configuration.getJUnitSettings().setLightExec(canExecuteInProcess);
  }
 else {
    configuration.getJUnitSettings().setLightExec(false);
  }
  return configuration;
}
