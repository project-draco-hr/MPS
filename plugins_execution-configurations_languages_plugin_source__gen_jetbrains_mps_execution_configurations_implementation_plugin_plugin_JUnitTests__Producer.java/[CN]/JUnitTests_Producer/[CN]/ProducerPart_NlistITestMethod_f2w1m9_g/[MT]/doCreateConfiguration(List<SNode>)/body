{
  setSourceElement(new MPSPsiElement(source));
  JUnitTests_Configuration configuration=((JUnitTests_Configuration)getConfigurationFactory().createConfiguration("" + BehaviorReflection.invokeVirtual(String.class,ListSequence.fromList(source).first(),"virtual_getTestName_1216136419751",new Object[]{}) + ",...",(JUnitTests_Configuration)RunManagerImpl.getInstanceImpl(getContext().getProject()).getConfigurationTemplate(getConfigurationFactory()).getConfiguration()));
  configuration.getJUnitSettings().setJUnitRunType(JUnitRunTypes.METHOD);
  boolean canRunInProcess=true;
  for (  SNode testMethod : source) {
    SNode testCase=BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),testMethod,"virtual_getTestCase_1216134500045",new Object[]{});
    if (testCase == null || !(BehaviorReflection.invokeVirtual(Boolean.TYPE,testCase,"virtual_canRunInProcess_6436735966448788391",new Object[]{}))) {
      canRunInProcess=false;
    }
  }
  configuration.getJUnitSettings().setTestMethods(PointerUtils.nodesToCloneableList(source));
  configuration.getJUnitSettings().setLightExec(canRunInProcess);
  return configuration;
}
