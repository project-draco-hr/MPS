{
  SNode annotationLink=SLinkOperations.getTarget(nodeToCheck,"annotationLink",false);
  if (annotationLink == null) {
    return;
  }
  SNode T=SConceptOperations.createNewNode("jetbrains.mps.bootstrap.smodelLanguage.structure._LinkAccessT",null);
  SLinkOperations.setTarget(T,"targetConcept",SLinkOperations.getTarget(annotationLink,"target",false),false);
  SPropertyOperations.set(T,"singularCradinality","" + (SPropertyOperations.hasValue(annotationLink,"sourceCardinality","0..1","0..1")));
  SPropertyOperations.set(T,"aggregation","" + (true));
{
    SNode _nodeToCheck_1029348928467=nodeToCheck;
    BaseIntentionProvider intentionProvider=null;
    TypeChecker.getInstance().getRuntimeSupport().createEquation(TypeChecker.getInstance().getRuntimeSupport().typeOf(_nodeToCheck_1029348928467,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1204926978425",true),T,_nodeToCheck_1029348928467,null,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1204926978423",intentionProvider);
  }
  if (!(SPropertyOperations.hasValue(annotationLink,"stereotype","link","node"))) {
    TypeChecker.getInstance().reportTypeError(nodeToCheck,"link annotation link is expected","jetbrains.mps.bootstrap.smodelLanguage.helgins","1204849792143");
  }
  SNode linkQualifier=SLinkOperations.getTarget(nodeToCheck,"linkQualifier",true);
  if (SNodeOperations.isInstanceOf(linkQualifier,"jetbrains.mps.bootstrap.smodelLanguage.structure.PoundExpression")) {
{
      SNode _nodeToCheck_1029348928467=SLinkOperations.getTarget(linkQualifier,"expression",true);
      BaseIntentionProvider intentionProvider=null;
      TypeChecker.getInstance().getRuntimeSupport().createLessThanInequation(TypeChecker.getInstance().getRuntimeSupport().typeOf(_nodeToCheck_1029348928467,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1204849792163",false),new QuotationClass_65().createNode(),_nodeToCheck_1029348928467,null,"jetbrains.mps.bootstrap.smodelLanguage.helgins","1204849792161",false,0,intentionProvider);
    }
  }
}
