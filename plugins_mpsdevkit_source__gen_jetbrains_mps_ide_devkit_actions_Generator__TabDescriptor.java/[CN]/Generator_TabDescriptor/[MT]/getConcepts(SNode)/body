{
  List<SNode> result=ConceptEditorHelper.getAvailableConceptAspects(SNodeOperations.getModel(MetaAdapterFactory.getConcept(0xb401a68083254110L,0x8fd384331ff25befL,0x10313ed7688L,"jetbrains.mps.lang.generator.structure.TemplateSwitch").getDeclarationNode()),node);
  ListSequence.fromList(result).addElement(MetaAdapterFactory.getConcept(0xb401a68083254110L,0x8fd384331ff25befL,0x112103dd1e8L,"jetbrains.mps.lang.generator.structure.InlineTemplate_RuleConsequence").getDeclarationNode());
  ListSequence.fromList(result).addElement(MetaAdapterFactory.getConcept(0xb401a68083254110L,0x8fd384331ff25befL,0x7b85dded0be53d6cL,"jetbrains.mps.lang.generator.structure.InlineTemplateWithContext_RuleConsequence").getDeclarationNode());
  boolean rootable=SNodeOperations.isInstanceOf(node,MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979ba0450L,"jetbrains.mps.lang.structure.structure.ConceptDeclaration")) && SPropertyOperations.getBoolean((SNodeOperations.cast(node,MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979ba0450L,"jetbrains.mps.lang.structure.structure.ConceptDeclaration"))),MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979ba0450L,0xff49c1d648L,"rootable"));
  boolean isInterface=SNodeOperations.isInstanceOf(node,MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103556dcafL,"jetbrains.mps.lang.structure.structure.InterfaceConceptDeclaration"));
  if (rootable || isInterface) {
    boolean isNeedRootTemplate=true;
    for (    SNode genFragment : ((List<SNode>)BHReflection.invoke(node,SMethodTrimmedId.create("findGeneratorFragments",MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0x1103553c5ffL,"jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"),"5zMz2aJEI4B")))) {
      if ((AttributeOperations.getAttribute(genFragment,new IAttributeDescriptor.NodeAttribute(MetaAdapterFactory.getConcept(0xb401a68083254110L,0x8fd384331ff25befL,0x11017244494L,"jetbrains.mps.lang.generator.structure.RootTemplateAnnotation"))) != null)) {
        isNeedRootTemplate=false;
        break;
      }
    }
    if (isNeedRootTemplate) {
      for (      SLanguage lang : SModelOperations.getAllLanguageImports(SNodeOperations.getModel(node))) {
        SModule language=lang.getSourceModule();
        if (!(language instanceof Language)) {
          continue;
        }
        SModel structureModel=((Language)language).getStructureModelDescriptor();
        for (        SNode nodeToAdd : jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations.roots(structureModel,MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979ba0450L,"jetbrains.mps.lang.structure.structure.ConceptDeclaration"))) {
          SNode conceptToAdd=(SNode)nodeToAdd;
          if (SPropertyOperations.getBoolean(nodeToAdd,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979ba0450L,0xff49c1d648L,"rootable"))) {
            ListSequence.fromList(result).addElement(conceptToAdd);
          }
        }
      }
    }
  }
  return result;
}
