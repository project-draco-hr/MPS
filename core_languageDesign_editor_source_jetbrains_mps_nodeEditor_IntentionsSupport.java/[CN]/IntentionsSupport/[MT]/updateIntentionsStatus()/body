{
  Thread thread=myShowIntentionsThread.get();
  if (thread != null) {
    thread.interrupt();
  }
  hideLightBulb();
  myShowIntentionsAction.setEnabled(false);
  myShowIntentionsThread.set(new Thread("Intentions"){
    public void run(){
      try {
        if (myEditor.isDisposed())         return;
        final boolean[] enabledPresent=new boolean[1];
        final boolean[] availablePresent=new boolean[1];
        ModelAccess.instance().runReadAction(new Runnable(){
          public void run(){
            enabledPresent[0]=!getEnabledIntentions().isEmpty();
            availablePresent[0]=hasIntentions();
          }
        }
);
        ModelAccess.instance().runReadInEDT(new Runnable(){
          public void run(){
            if (myEditor.isDisposed())             return;
            if (myEditor.getSelectedCell() != null) {
              adjustLightBulbLocation();
              myShowIntentionsAction.setEnabled(availablePresent[0]);
            }
 else {
              myShowIntentionsAction.setEnabled(false);
            }
          }
        }
);
        Thread.sleep(IntentionsSupport.INTENTION_SHOW_DELAY);
        ModelAccess.instance().runReadInEDT(new Runnable(){
          public void run(){
            if (myEditor.isDisposed())             return;
            if (myEditor.getSelectedCell() != null) {
              setLightBulbVisibility(enabledPresent[0]);
            }
 else {
              hideLightBulb();
            }
          }
        }
);
        myShowIntentionsThread.compareAndSet(this,null);
      }
 catch (      InterruptedException e) {
      }
catch (      RuntimeInterruptedException e) {
      }
    }
  }
);
  myShowIntentionsThread.get().start();
}
