{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("parameter",new BaseReferenceConstraintsDescriptor("parameter",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          if (SNodeOperations.isInstanceOf(SNodeOperations.getContainingRoot(_context.getEnclosingNode()),"jetbrains.mps.lang.generator.structure.TemplateDeclaration")) {
            return SLinkOperations.getTargets(SNodeOperations.cast(SNodeOperations.getContainingRoot(_context.getEnclosingNode()),"jetbrains.mps.lang.generator.structure.TemplateDeclaration"),"parameter",true);
          }
          return new ArrayList<SNode>();
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_teh60w_a0a1a0a0a1a0b0a1a3;
        }
      }
;
    }
  }
);
  return references;
}
