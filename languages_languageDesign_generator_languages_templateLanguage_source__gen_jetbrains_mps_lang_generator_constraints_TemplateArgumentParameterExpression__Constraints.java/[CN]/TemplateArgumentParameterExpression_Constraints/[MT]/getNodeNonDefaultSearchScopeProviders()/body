{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("parameter",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      if (SNodeOperations.isInstanceOf(SNodeOperations.getContainingRoot(_context.getEnclosingNode()),"jetbrains.mps.lang.generator.structure.TemplateDeclaration")) {
        return SLinkOperations.getTargets(SNodeOperations.cast(SNodeOperations.getContainingRoot(_context.getEnclosingNode()),"jetbrains.mps.lang.generator.structure.TemplateDeclaration"),"parameter",true);
      }
      return new ArrayList<SNode>();
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c895902e2(jetbrains.mps.lang.generator.constraints)","5005282049925940096");
    }
  }
);
  return result;
}
