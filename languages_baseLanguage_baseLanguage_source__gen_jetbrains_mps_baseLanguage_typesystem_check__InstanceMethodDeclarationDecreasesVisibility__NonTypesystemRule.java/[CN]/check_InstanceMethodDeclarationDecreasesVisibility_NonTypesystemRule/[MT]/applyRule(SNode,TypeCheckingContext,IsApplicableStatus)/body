{
  SNode nearestOverriddenMethod=BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),instanceMethodDeclaration,"virtual_getNearestOverriddenMethod_5358895268254685434",new Object[]{});
  if ((nearestOverriddenMethod == null)) {
    nearestOverriddenMethod=BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),instanceMethodDeclaration,"virtual_getImplementedInterfaceMethod_8302934035201331324",new Object[]{});
  }
  if ((nearestOverriddenMethod == null)) {
    return;
  }
  SNode superVisibility=SLinkOperations.getTarget(SNodeOperations.cast(nearestOverriddenMethod,"jetbrains.mps.baseLanguage.structure.IVisible"),MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1178549954367l,1178549979242l,"visibility"));
  SNode myVisibility=SLinkOperations.getTarget(instanceMethodDeclaration,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1178549954367l,1178549979242l,"visibility"));
  if (SNodeOperations.isInstanceOf(superVisibility,"jetbrains.mps.baseLanguage.structure.PrivateVisibility") || eq_68cpna_a0a7a1(SNodeOperations.getConceptDeclaration(myVisibility),SNodeOperations.getConceptDeclaration(superVisibility))) {
    return;
  }
  if (SNodeOperations.isInstanceOf(superVisibility,"jetbrains.mps.baseLanguage.structure.ProtectedVisibility") && SNodeOperations.isInstanceOf(myVisibility,"jetbrains.mps.baseLanguage.structure.PublicVisibility")) {
    return;
  }
  if ((superVisibility == null) && !(SNodeOperations.isInstanceOf(myVisibility,"jetbrains.mps.baseLanguage.structure.PrivateVisibility"))) {
    return;
  }
  String classifierName=SPropertyOperations.getString(SNodeOperations.getAncestor(nearestOverriddenMethod,"jetbrains.mps.baseLanguage.structure.Classifier",false,false),MetaAdapterFactory.getProperty(new UUID(-3554657779850784990l,-7236703803128771572l),1169194658468l,1169194664001l,"name"));
  if (classifierName == null) {
    classifierName="the super class";
  }
{
    MessageTarget errorTarget=new NodeMessageTarget();
    IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(instanceMethodDeclaration,"Cannot reduce the visibility of the inherited method from " + classifierName,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","8302934035197954391",null,errorTarget);
{
      BaseQuickFixProvider intentionProvider=new BaseQuickFixProvider("jetbrains.mps.baseLanguage.typesystem.MatchVisibility_QuickFix",false);
      intentionProvider.putArgument("visibility",superVisibility);
      _reporter_2309309498.addIntentionProvider(intentionProvider);
    }
  }
}
