{
  DefaultActionGroup group=new DefaultActionGroup();
  if (myList.getSelectedIndices().length != 0) {
    group.add(new BaseAction("Copy Text"){
{
        setExecuteOutsideCommand(true);
      }
      protected void doExecute(      AnActionEvent e){
        StringBuilder sb=new StringBuilder();
        for (        Object o : myList.getSelectedValues()) {
          sb.append(((Message)o).getText());
          sb.append("\n");
        }
        Toolkit.getDefaultToolkit().getSystemClipboard().setContents(new StringSelection(sb.toString()),null);
      }
    }
);
  }
  group.addSeparator();
  group.add(new BaseAction("Show Help for This Message"){
    @Override protected void doUpdate(    AnActionEvent e){
      boolean enabled=getHelpUrlForCurrentMessage() != null;
      setEnabledState(e.getPresentation(),enabled);
    }
    @Override protected void doExecute(    AnActionEvent e){
      showHelpForCurrentMessage();
    }
  }
);
  group.addSeparator();
  if (myList.getSelectedIndices().length >= 1) {
    final Object[] messages=myList.getSelectedValues();
    boolean containsError=false;
    for (    Object message : messages) {
      if (((Message)message).getKind() == MessageKind.ERROR) {
        containsError=true;
        break;
      }
    }
    if (containsError) {
      group.addSeparator();
      group.add(new BaseAction("Submit to Issue Tracker"){
{
          setExecuteOutsideCommand(true);
        }
        protected void doExecute(        AnActionEvent e){
          submitToTracker(messages);
        }
      }
);
    }
  }
  group.addSeparator();
  group.add(new BaseAction("Clear"){
{
      setExecuteOutsideCommand(true);
    }
    protected void doExecute(    AnActionEvent e){
      clear();
    }
  }
);
  return group;
}
