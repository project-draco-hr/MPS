{
  try {
    monitor.start("All method usages",10);
    List<SNode> methodDeclarations;
    if (SNodeOperations.getNodeAncestor(node,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept"),false,false) != null) {
      if (SNodeOperations.isInstanceOf(node,MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068580123165l,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration"))) {
        methodDeclarations=FindUtils.executeFinder("jetbrains.mps.baseLanguage.findUsages.OverridingMethods_Finder",node,scope,monitor.subTask(1));
      }
 else {
        methodDeclarations=new ArrayList<SNode>();
      }
    }
 else {
      methodDeclarations=FindUtils.executeFinder("jetbrains.mps.baseLanguage.findUsages.InterfaceMethodImplementations_Finder",node,scope,monitor.subTask(1));
    }
    ListSequence.fromList(methodDeclarations).addElement(node);
    ProgressMonitor sm=monitor.subTask(9);
    try {
      sm.start("",ListSequence.fromList(methodDeclarations).count());
      for (      SNode methodDeclaration : methodDeclarations) {
        for (        SNode nodeUsage : ListSequence.fromList(FindUtils.executeFinder("jetbrains.mps.lang.structure.findUsages.NodeUsages_Finder",methodDeclaration,scope,sm.subTask(1)))) {
          if (!(SNodeOperations.isInstanceOf(nodeUsage,MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),1204053956946l,"jetbrains.mps.baseLanguage.structure.IMethodCall")))) {
            continue;
          }
          ListSequence.fromList(_results).addElement(nodeUsage);
        }
      }
    }
  finally {
      sm.done();
    }
  }
  finally {
    monitor.done();
  }
}
