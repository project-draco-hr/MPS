{
  if (positions == null && scopePositions == null && unitPositions == null) {
    return;
  }
  final SRepository originRepo=originalInputModel.getRepository();
  if (positions != null) {
    for (    SNode out : positions.keySet()) {
      SNode input=getOriginalInputNodeForNearestParent(out,originRepo);
      if (input != null && SNodeUtil.isAccessible(input,originRepo)) {
        addTraceablePosition(input,originalInputModel,fileName,positions.get(out));
      }
    }
  }
  if (scopePositions != null) {
    for (    SNode out : scopePositions.keySet()) {
      SNode input=getOriginalInputNodeForNearestParent(out,originRepo);
      if (input != null && SNodeUtil.isAccessible(input,originRepo)) {
        addScopePosition(input,originalInputModel,fileName,scopePositions.get(out));
      }
    }
  }
  if (unitPositions != null) {
    for (    SNode out : unitPositions.keySet()) {
      SNode input=getOriginalInputNodeForNearestParent(out,originRepo);
      addUnitPosition(input,originalInputModel,fileName,unitPositions.get(out));
    }
  }
}
