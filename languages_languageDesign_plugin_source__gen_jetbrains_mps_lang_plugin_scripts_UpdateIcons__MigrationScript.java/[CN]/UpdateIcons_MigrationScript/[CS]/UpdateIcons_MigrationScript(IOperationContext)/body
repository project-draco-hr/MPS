{
  super("Update Icons");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Update Action Icons";
    }
    public String getAdditionalInfo(){
      return "Update Action Icons";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return (SPropertyOperations.getString(node,"iconPath") != null && SPropertyOperations.getString(node,"iconPath").length() > 0) && (SLinkOperations.getTarget(node,"icon",true) == null);
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode icon=SLinkOperations.setNewChild(node,"icon","jetbrains.mps.lang.resources.structure.IconResource");
      SPropertyOperations.set(icon,"path",SPropertyOperations.getString(node,"iconPath"));
      SPropertyOperations.set(node,"iconPath",null);
    }
    public boolean isShowAsIntention(){
      return true;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "Update Tool Icons";
    }
    public String getAdditionalInfo(){
      return "Update Tool Icons";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.BaseToolDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return (SPropertyOperations.getString(node,"icon") != null && SPropertyOperations.getString(node,"icon").length() > 0) && (SLinkOperations.getTarget(node,"toolIcon",true) == null);
    }
    public void doUpdateInstanceNode(    SNode node){
      SNode icon=SLinkOperations.setNewChild(node,"toolIcon","jetbrains.mps.lang.resources.structure.IconResource");
      SPropertyOperations.set(icon,"path",SPropertyOperations.getString(node,"icon"));
      SPropertyOperations.set(node,"icon",null);
    }
    public boolean isShowAsIntention(){
      return true;
    }
  }
);
}
