{
  SNode setterVisibility=Property__BehaviorDescriptor.getSetterVisibility_idhEwIJ0k.invoke(__thisNode__);
  if (SNodeOperations.isInstanceOf(setterVisibility,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10af9581ff1L,"jetbrains.mps.baseLanguage.structure.PublicVisibility"))) {
    return true;
  }
  if (SNodeOperations.isInstanceOf(setterVisibility,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10af9586f0cL,"jetbrains.mps.baseLanguage.structure.PrivateVisibility"))) {
    return ListSequence.fromList(SNodeOperations.getNodeAncestors(contextNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"),true)).last() == ListSequence.fromList(SNodeOperations.getNodeAncestors(contextClassifier,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"),true)).last();
  }
  String contextNodePackage=VisibilityUtil.packageName(contextNode);
  String contextClassifierPackage=VisibilityUtil.packageName(contextClassifier);
  if ((setterVisibility == null)) {
    return eq_49ixrf_a0a0i0hb(contextNodePackage,contextClassifierPackage);
  }
  if (SNodeOperations.isInstanceOf(setterVisibility,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10af958b686L,"jetbrains.mps.baseLanguage.structure.ProtectedVisibility"))) {
    String declarationClassifierPackage=VisibilityUtil.packageName(Classifier__BehaviorDescriptor.getContextClassifier_id5mDmeD1aaq0.invoke(SNodeOperations.asSConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier")),__thisNode__));
    if (eq_49ixrf_a0b0k0hb(contextNodePackage,declarationClassifierPackage)) {
      return true;
    }
    Iterable<SNode> possibleClassifiers=ListSequence.fromList(SNodeOperations.getNodeAncestors(contextNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"),true)).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SetSequence.fromSet(ClassifierScopeUtils.getExtendedClassifiers(it)).contains(contextClassifier);
      }
    }
);
    if (!(SNodeOperations.isInstanceOf(contextNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,"jetbrains.mps.baseLanguage.structure.DotExpression")))) {
      return Sequence.fromIterable(possibleClassifiers).isNotEmpty();
    }
 else {
      SNode leftClassifier=DotExpression__BehaviorDescriptor.getClassifier_idhEwIPI9.invoke(SNodeOperations.cast(contextNode,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x116b46a08c4L,"jetbrains.mps.baseLanguage.structure.DotExpression")));
      final Set<SNode> extendedClassifiers=SetSequence.fromSetWithValues(new HashSet<SNode>(),ClassifierScopeUtils.getExtendedClassifiers(leftClassifier));
      return Sequence.fromIterable(possibleClassifiers).any(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SetSequence.fromSet(extendedClassifiers).contains(it);
        }
      }
);
    }
  }
  return false;
}
