{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x119e85f8628L,0x11b3650a4b4L,"quickFixArgument"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x119e85f8628L,0x11b3650a4b4L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          List<SNode> nodes=new ArrayList<SNode>();
          SNode helginsIntention=SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x119e85e030eL,"jetbrains.mps.lang.typesystem.structure.TypesystemIntention"),true,false);
          if (helginsIntention != null) {
            ListSequence.fromList(nodes).addSequence(ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(helginsIntention,MetaAdapterFactory.getReferenceLink(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x119e85e030eL,0x11b3667ec7bL,"quickFix")),MetaAdapterFactory.getContainmentLink(0x7a5dda6291404668L,0xab76d5ed1746f2b2L,0x11b36163865L,0x11b361ae27eL,"quickFixArgument"))));
          }
          return nodes;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_8vu3gr_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
