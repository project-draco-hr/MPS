{
switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0ob,conceptFqName)) {
case 0:
    return myConceptAbstractArgument;
case 1:
  return myConceptAbstractDiagramCreation;
case 2:
return myConceptAbstractFigureReference;
case 3:
return myConceptActionGroup;
case 4:
return myConceptActionReference;
case 5:
return myConceptAttributedFigureReference;
case 6:
return myConceptBLQueryArgument;
case 7:
return myConceptCellModel_Diagram;
case 8:
return myConceptCellModel_DiagramConnector;
case 9:
return myConceptCellModel_DiagramNode;
case 10:
return myConceptCellModel_DiagramPort;
case 11:
return myConceptConnectionEnd;
case 12:
return myConceptConnectionEndBLQuery;
case 13:
return myConceptCreationActionReference;
case 14:
return myConceptCustomElementReference;
case 15:
return myConceptDiagramConnectorCanCreateHandler;
case 16:
return myConceptDiagramConnectorCreation;
case 17:
return myConceptDiagramConnectorCreationHandler;
case 18:
return myConceptDiagramElement;
case 19:
return myConceptDiagramElementBLQuery;
case 20:
return myConceptDiagramElementCreationHandler;
case 21:
return myConceptDiagramElementsCreation;
case 22:
return myConceptExternalFigureReference;
case 23:
return myConceptFigureParameterMapping;
case 24:
return myConceptFromIdFunctionParameter;
case 25:
return myConceptFromNodeFunctionParameter;
case 26:
return myConceptLinkArgument;
case 27:
return myConceptNodeFunctionParameter;
case 28:
return myConceptPalette;
case 29:
return myConceptPaletteElement;
case 30:
return myConceptPropertyArgument;
case 31:
return myConceptSeparator;
case 32:
return myConceptThisEditorNodeExpression;
case 33:
return myConceptToIdFunctionParameter;
case 34:
return myConceptToNodeFunctionParameter;
case 35:
return myConceptXFunctionParameter;
case 36:
return myConceptYFunctionParameter;
default :
return null;
}
}
