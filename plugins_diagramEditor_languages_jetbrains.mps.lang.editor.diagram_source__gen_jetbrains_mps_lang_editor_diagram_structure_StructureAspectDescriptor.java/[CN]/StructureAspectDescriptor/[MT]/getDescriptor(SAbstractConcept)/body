{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_1htk8d_a0tb.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return myConceptAbstractArgument;
      }
    break;
case 1:
  if (true) {
    return myConceptAbstractDiagramCreation;
  }
break;
case 2:
if (true) {
return myConceptAbstractFigureReference;
}
break;
case 3:
if (true) {
return myConceptActionGroup;
}
break;
case 4:
if (true) {
return myConceptActionReference;
}
break;
case 5:
if (true) {
return myConceptAttributedFigureReference;
}
break;
case 6:
if (true) {
return myConceptBLQueryArgument;
}
break;
case 7:
if (true) {
return myConceptCellModel_Diagram;
}
break;
case 8:
if (true) {
return myConceptCellModel_DiagramConnector;
}
break;
case 9:
if (true) {
return myConceptCellModel_DiagramNode;
}
break;
case 10:
if (true) {
return myConceptCellModel_DiagramPort;
}
break;
case 11:
if (true) {
return myConceptConnectionEnd;
}
break;
case 12:
if (true) {
return myConceptConnectionEndBLQuery;
}
break;
case 13:
if (true) {
return myConceptCreationActionReference;
}
break;
case 14:
if (true) {
return myConceptCustomElementReference;
}
break;
case 15:
if (true) {
return myConceptDiagramConnectorCanCreateHandler;
}
break;
case 16:
if (true) {
return myConceptDiagramConnectorCreation;
}
break;
case 17:
if (true) {
return myConceptDiagramConnectorCreationHandler;
}
break;
case 18:
if (true) {
return myConceptDiagramElement;
}
break;
case 19:
if (true) {
return myConceptDiagramElementBLQuery;
}
break;
case 20:
if (true) {
return myConceptDiagramElementCreationHandler;
}
break;
case 21:
if (true) {
return myConceptDiagramElementsCreation;
}
break;
case 22:
if (true) {
return myConceptExternalFigureReference;
}
break;
case 23:
if (true) {
return myConceptFigureParameterMapping;
}
break;
case 24:
if (true) {
return myConceptFromIdFunctionParameter;
}
break;
case 25:
if (true) {
return myConceptFromNodeFunctionParameter;
}
break;
case 26:
if (true) {
return myConceptLinkArgument;
}
break;
case 27:
if (true) {
return myConceptNodeFunctionParameter;
}
break;
case 28:
if (true) {
return myConceptPalette;
}
break;
case 29:
if (true) {
return myConceptPaletteElement;
}
break;
case 30:
if (true) {
return myConceptPropertyArgument;
}
break;
case 31:
if (true) {
return myConceptSeparator;
}
break;
case 32:
if (true) {
return myConceptStubCellModel_Diagram;
}
break;
case 33:
if (true) {
return myConceptStubCellModel_DiagramConnector;
}
break;
case 34:
if (true) {
return myConceptStubCellModel_DiagramNode;
}
break;
case 35:
if (true) {
return myConceptStubCellModel_DiagramPort;
}
break;
case 36:
if (true) {
return myConceptThisEditorNodeExpression;
}
break;
case 37:
if (true) {
return myConceptToIdFunctionParameter;
}
break;
case 38:
if (true) {
return myConceptToNodeFunctionParameter;
}
break;
case 39:
if (true) {
return myConceptXFunctionParameter;
}
break;
case 40:
if (true) {
return myConceptYFunctionParameter;
}
break;
default :
}
}
return null;
}
