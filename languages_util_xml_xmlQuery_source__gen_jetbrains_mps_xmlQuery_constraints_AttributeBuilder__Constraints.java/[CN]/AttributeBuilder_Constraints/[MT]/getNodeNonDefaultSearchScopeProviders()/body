{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("attributeDeclaration",new BaseNodeReferenceSearchScopeProvider(){
    public boolean hasPresentation(){
      return true;
    }
    public String getPresentation(    final IOperationContext operationContext,    final PresentationReferentConstraintContext _context){
      return SPropertyOperations.getString(_context.getParameterNode(),"attributeName");
    }
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      SNode contextBuilder=Builder_Behavior.getContextBuilder_7057666463730366732(_context.getEnclosingNode());
      if (contextBuilder == null) {
      }
 else       if (SNodeOperations.isInstanceOf(contextBuilder,"jetbrains.mps.xmlQuery.structure.ElementBuilder")) {
        return SchemaUtil.getAvailableAttributes(ElementBuilder_Behavior.call_getComplexType_1384720974900281910(SNodeOperations.cast(contextBuilder,"jetbrains.mps.xmlQuery.structure.ElementBuilder")));
      }
      return new ArrayList<SNode>();
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:e79b58b4-ea58-4c9d-b43b-c3a260addf6a(jetbrains.mps.xmlQuery.constraints)","7225751495667376052");
    }
  }
);
  return result;
}
