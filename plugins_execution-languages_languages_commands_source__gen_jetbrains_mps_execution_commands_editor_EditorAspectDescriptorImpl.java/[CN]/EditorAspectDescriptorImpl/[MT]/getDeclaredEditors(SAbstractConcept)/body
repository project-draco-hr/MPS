{
{
    SAbstractConcept cncpt=((SAbstractConcept)concept);
    Integer preIndex=indices_xbvbvu_a0a.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      return Collections.<ConceptEditor>singletonList(new CommandBuilderExpression_Editor());
case 1:
    return Collections.<ConceptEditor>singletonList(new CommandDebuggerOperation_Editor());
case 2:
  return Collections.<ConceptEditor>singletonList(new CommandDeclaration_Editor());
case 3:
return Collections.<ConceptEditor>singletonList(new CommandParameterAssignment_Editor());
case 4:
return Collections.<ConceptEditor>singletonList(new CommandParameterReference_Editor());
case 5:
return Collections.<ConceptEditor>singletonList(new CommandPartLengthOperation_Editor());
case 6:
return Collections.<ConceptEditor>singletonList(new CommandPartToListOperation_Editor());
case 7:
return Collections.<ConceptEditor>singletonList(new CommandProcessType_Editor());
case 8:
return Collections.<ConceptEditor>singletonList(new CommandReferenceExpression_Editor());
case 9:
return Collections.<ConceptEditor>singletonList(new CommandType_Editor());
case 10:
return Collections.<ConceptEditor>singletonList(new DebuggerSettingsCommandParameterDeclaration_Editor());
case 11:
return Collections.<ConceptEditor>singletonList(new ExecuteCommandPart_Editor());
case 12:
return Collections.<ConceptEditor>singletonList(new ExplicitCommandParameterDeclaration_Editor());
case 13:
return Collections.<ConceptEditor>singletonList(new KeyValueCommandPart_Editor());
case 14:
return Collections.<ConceptEditor>singletonList(new ListCommandPart_Editor());
case 15:
return Collections.<ConceptEditor>singletonList(new NewProcessBuilderExpression_Editor());
case 16:
return Collections.<ConceptEditor>singletonList(new PropertyCommandPart_Editor());
case 17:
return Collections.<ConceptEditor>singletonList(new RedirectOutputExpression_Editor());
case 18:
return Collections.<ConceptEditor>singletonList(new ReportErrorStatement_Editor());
case 19:
return Collections.<ConceptEditor>singletonList(new StartAndWaitOperation_Editor());
default :
}
}
return Collections.<ConceptEditor>emptyList();
}
