{
  try {
    final Wrappers._boolean safe=new Wrappers._boolean(false);
    final Wrappers._boolean dialogNeeded=new Wrappers._boolean(false);
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        for (        SNode node : ((List<SNode>)MapSequence.fromMap(_params).get("nodes"))) {
          if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.lang.structure.structure.ConceptDeclaration") && node.isRoot()) {
            dialogNeeded.value=true;
            break;
          }
        }
      }
    }
);
    if (dialogNeeded.value) {
      DeleteDialog dialog=new DeleteDialog(((Project)MapSequence.fromMap(_params).get("project")),"Delete Node","Are you sure you want to delete selected node?");
      dialog.setOptions(false,true,false,false);
      dialog.show();
      if (!(dialog.isOK())) {
        return;
      }
      safe.value=dialog.isSafe();
    }
    ModelAccess.instance().runWriteActionInCommand(new Runnable(){
      public void run(){
        new DeleteNodesHelper(((List<SNode>)MapSequence.fromMap(_params).get("nodes")),((IOperationContext)MapSequence.fromMap(_params).get("context")),safe.value).deleteNodes(true);
      }
    }
);
  }
 catch (  Throwable t) {
    if (log.isErrorEnabled()) {
      log.error("User's action execute method failed. Action:" + "DeleteNode",t);
    }
  }
}
