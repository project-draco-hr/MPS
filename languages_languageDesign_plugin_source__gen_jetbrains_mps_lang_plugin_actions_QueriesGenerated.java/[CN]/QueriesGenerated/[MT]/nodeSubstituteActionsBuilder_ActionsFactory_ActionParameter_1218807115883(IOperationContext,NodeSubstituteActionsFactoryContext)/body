{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.plugin.structure.ActionParameter");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          return ListSequence.fromListAndArray(new ArrayList<SNode>(),_quotation_createNode_tuayuq_a0a0a0a1a(),_quotation_createNode_tuayuq_b0a0a0a1a(),_quotation_createNode_tuayuq_c0a0a0a1a());
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SNode result=SNodeFactoryOperations.createNewNode(model,MetaAdapterFactory.getConcept(new UUID(2952642368903463569l,-5856357300648461647l),1205679047295l,"jetbrains.mps.lang.plugin.structure.ActionParameterDeclaration"),null);
              SLinkOperations.setTarget(result,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),4972933694980447171l,5680397130376446158l,"type"),(item));
              return result;
            }
            public String getDescriptionText(            String pattern){
              if (SNodeOperations.isInstanceOf((item),MetaAdapterFactory.getConcept(new UUID(8675788371017092295l,-9098312342032910879l),1138055754698l,"jetbrains.mps.lang.smodel.structure.SNodeType"))) {
                return "current node";
              }
 else               if (SNodeOperations.isInstanceOf((item),MetaAdapterFactory.getConcept(new UUID(8675788371017092295l,-9098312342032910879l),1145383075378l,"jetbrains.mps.lang.smodel.structure.SNodeListType"))) {
                return "current nodes";
              }
 else               if (SNodeOperations.isInstanceOf((item),MetaAdapterFactory.getConcept(new UUID(8675788371017092295l,-9098312342032910879l),1143226024141l,"jetbrains.mps.lang.smodel.structure.SModelType"))) {
                return "current model";
              }
              return "";
            }
          }
);
        }
      }
    }
  }
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(SNodeOperations.asSConcept(childConcept),SNodeOperations.asSConcept(outputConcept))) {
      Iterable<SNode> queryResult=new Computable<Iterable<SNode>>(){
        public Iterable<SNode> compute(){
          List<SNode> dataKeys=new ArrayList<SNode>();
          ListSequence.fromList(dataKeys).addSequence(Sequence.fromIterable(Classifier_Behavior.call_staticFields_5292274854859223538(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_tuayuq_a0a0a0b0a0c0(),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1107535924139l,"classifier")),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept")))));
          ListSequence.fromList(dataKeys).addSequence(Sequence.fromIterable(Classifier_Behavior.call_staticFields_5292274854859223538(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_tuayuq_a0a0a0c0a0c0(),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1107535924139l,"classifier")),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept")))));
          ListSequence.fromList(dataKeys).addSequence(Sequence.fromIterable(Classifier_Behavior.call_staticFields_5292274854859223538(SNodeOperations.cast(SLinkOperations.getTarget(_quotation_createNode_tuayuq_a0a0a0d0a0c0(),MetaAdapterFactory.getReferenceLink(new UUID(-935030926396207931l,-6610165693999523818l),1107535904670l,1107535924139l,"classifier")),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068390468198l,"jetbrains.mps.baseLanguage.structure.ClassConcept")))));
          return dataKeys;
        }
      }
.compute();
      if (queryResult != null) {
        for (        final SNode item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              SNode result=SNodeFactoryOperations.createNewNode(model,MetaAdapterFactory.getConcept(new UUID(2952642368903463569l,-5856357300648461647l),1217252042208l,"jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration"),null);
              SLinkOperations.setTarget(result,MetaAdapterFactory.getReferenceLink(new UUID(2952642368903463569l,-5856357300648461647l),1217252042208l,1217252646389l,"key"),(item));
              return result;
            }
            public String getDescriptionText(            String pattern){
              return ActionDataParameterDeclaration_Behavior.call_getDescription_47694270442103157(SNodeOperations.asSConcept(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration")),(item));
            }
          }
);
        }
      }
    }
  }
  return result;
}
