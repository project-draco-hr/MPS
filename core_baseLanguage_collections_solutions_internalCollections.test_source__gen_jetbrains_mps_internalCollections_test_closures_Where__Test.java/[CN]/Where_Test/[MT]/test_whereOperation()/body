{
  Iterable<Integer> seq=this.input5();
  Iterable<Integer> expected=Arrays.asList(1,3,5);
  this.assertIterableEquals(expected,Sequence.fromIterable(seq).where(new IWhereFilter<Integer>(){
    public boolean accept(    Integer it){
      return it % 2 == 1;
    }
  }
));
  _FunctionTypes._return_P1_E0<? extends Boolean,? super Integer> cl=new _FunctionTypes._return_P1_E0<Boolean,Integer>(){
    public Boolean invoke(    Integer it){
      return it % 2 == 1;
    }
  }
;
  this.assertIterableEquals(expected,Sequence.fromIterable(seq).where(cl));
}
