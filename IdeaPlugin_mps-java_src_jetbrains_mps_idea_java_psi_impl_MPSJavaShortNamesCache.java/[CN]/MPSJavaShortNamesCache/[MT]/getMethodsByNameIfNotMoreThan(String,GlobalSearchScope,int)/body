{
  ApplicationManager.getApplication().assertReadAccessAllowed();
  return new ModelAccessHelper(ProjectHelper.getModelAccess(myProject)).runReadAction(new Computable<PsiMethod[]>(){
    @Override public PsiMethod[] compute(){
      final CollectConsumer<SNode> consumer=new CollectConsumer<SNode>(new ArrayList<SNode>());
      processMPSMethods(name,new Processor<SNode>(){
        int count=0;
        @Override public boolean process(        SNode node){
          if (count++ >= maxCount)           return false;
          consumer.consume(node);
          return true;
        }
      }
,scope);
      return toPsiMethods(consumer.getResult());
    }
  }
);
}
