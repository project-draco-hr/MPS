{
  SNode expectedElementType=RulesFunctions_Collections.get_inputListType_elementType(argument);
  if (!(expectedElementType != null)) {
    TypeChecker.getInstance().reportTypeError(argument,"couldn't define input list element type");
  }
  SNode arg=SLinkOperations.getTarget(argument,"argument",true);
  if (arg != null && expectedElementType != null) {
    SNode expectedArgumentType=new QuotationClass_21().createNode(expectedElementType);
    SNode actualArgumentType=TypeChecker.getInstance().getRuntimeSupport().checkedTypeOf(arg);
    if (!(TypeChecker.getInstance().getSubtypingManager().isSubtype(actualArgumentType,expectedArgumentType))) {
      TypeChecker.getInstance().reportTypeError(arg,"" + expectedArgumentType + " is expected");
    }
  }
}
