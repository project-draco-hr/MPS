{
  final List<ITestNodeWrapper> result=ListSequence.fromList(new ArrayList<ITestNodeWrapper>());
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
      SModel model=SModelRepository.getInstance().getModelDescriptor(new jetbrains.mps.smodel.SModelReference("jetbrains.mps.execution.impl.configurations.tests.commands.sandbox","tests"));
      for (      final String name : Sequence.fromIterable(names)) {
        SNode mainNode=ListSequence.fromList(SModelOperations.getRoots(model,"jetbrains.mps.lang.core.structure.INamedConcept")).findFirst(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return eq_16es9m_a0a0a0a0a0a0a1a0a0a0a1a3c(SPropertyOperations.getString(it,"name"),name);
          }
        }
);
        ListSequence.fromList(result).addElement(TestNodeWrapperFactory.tryToWrap(mainNode));
      }
    }
  }
);
  return result;
}
