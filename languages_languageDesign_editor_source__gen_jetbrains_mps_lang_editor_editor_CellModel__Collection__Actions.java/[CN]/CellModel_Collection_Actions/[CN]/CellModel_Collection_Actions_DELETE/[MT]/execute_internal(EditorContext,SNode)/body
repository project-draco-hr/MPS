{
  if (SNodeOperations.isInstanceOf(SNodeOperations.getParent(node),MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0xf9eaff2517L,"jetbrains.mps.lang.editor.structure.CellModel_Collection"))) {
    SNode p=SNodeOperations.cast(SNodeOperations.getParent(node),MetaAdapterFactory.getConcept(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0xf9eaff2517L,"jetbrains.mps.lang.editor.structure.CellModel_Collection"));
    List<SNode> children=SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0xf9eaff2517L,0xf9eaff2518L,"childCellModel"));
    for (    SNode child : ListSequence.fromList(children)) {
      SNodeOperations.insertPrevSiblingChild(node,child);
    }
  }
 else   if (ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0xf9eaff2517L,0xf9eaff2518L,"childCellModel"))).count() == 1) {
    SNode cell=ListSequence.fromList(SLinkOperations.getChildren(node,MetaAdapterFactory.getContainmentLink(0x18bc659203a64e29L,0xa83a7ff23bde13baL,0xf9eaff2517L,0xf9eaff2518L,"childCellModel"))).first();
    SNodeOperations.replaceWithAnother(node,cell);
    return;
  }
  SNodeOperations.deleteNode(node);
}
