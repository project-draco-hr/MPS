{
  final Wrappers._T<Throwable> throwable=new Wrappers._T<Throwable>(null);
  flushEvents();
  ThreadUtils.runInUIThreadAndWait(new Runnable(){
    public void run(){
      myProject.getModelAccess().runWriteAction(new Runnable(){
        public void run(){
          if (BaseEditorTestBody.this.myResult != null) {
            try {
              SNode editedNode=myEditor.getCurrentlyEditedNode().resolve(myProject.getRepository());
              NodesMatcher nm=new NodesMatcher();
              List<NodeDifference> diff=nm.match(Collections.singletonList(editedNode),Collections.singletonList(myResult));
              Assert.assertEquals(null,diff);
              if (myFinish != null) {
                myFinish.assertEditor(myEditor,(Map<SNode,SNode>)nm.getMap());
              }
            }
 catch (            Throwable t) {
              throwable.value=t;
            }
          }
        }
      }
);
    }
  }
);
  flushEvents();
  if (throwable.value != null) {
    throw throwable.value;
  }
}
