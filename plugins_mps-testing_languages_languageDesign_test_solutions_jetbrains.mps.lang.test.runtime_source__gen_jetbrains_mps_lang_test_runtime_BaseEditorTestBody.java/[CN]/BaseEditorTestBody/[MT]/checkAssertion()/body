{
  final Wrappers._T<Throwable> throwable=new Wrappers._T<Throwable>(null);
  ModelAccess.instance().flushEventQueue();
  myProject.getModelAccess().runWriteInEDT(new Runnable(){
    public void run(){
      if (BaseEditorTestBody.this.myResult != null) {
        try {
          SNode editedNode=myEditor.getCurrentlyEditedNode().resolve(myProject.getRepository());
          NodesMatcher nm=new NodesMatcher();
          List<NodeDifference> diff=nm.match(Collections.singletonList(editedNode),Collections.singletonList(myResult));
          Assert.assertEquals(null,diff);
          if (myFinish != null) {
            myFinish.assertEditor(myEditor,(Map<SNode,SNode>)nm.getMap());
          }
        }
 catch (        Throwable t) {
          throwable.value=t;
        }
      }
    }
  }
);
  ModelAccess.instance().flushEventQueue();
  if (throwable.value != null) {
    throw throwable.value;
  }
}
