{
  this.addNodeById(before);
  if (!(after.equals(""))) {
    this.addNodeById(after);
  }
  ModelAccess.instance().runWriteAction(new Runnable(){
    public void run(){
      BaseEditorTestBody.this.myBefore=BaseEditorTestBody.this.getNodeById(before);
      BaseEditorTestBody.this.myStart=BaseEditorTestBody.this.findCellReference(BaseEditorTestBody.this.getRealNodeById(before));
      if (BaseEditorTestBody.this.myStart == null) {
        throw new IllegalStateException(BaseEditorTestBody.this.myModel.getModelName());
      }
      if (!(after.equals(""))) {
        BaseEditorTestBody.this.myResult=BaseEditorTestBody.this.getNodeById(after);
        BaseEditorTestBody.this.myFinish=BaseEditorTestBody.this.findCellReference(BaseEditorTestBody.this.getRealNodeById(after));
      }
      BaseEditorTestBody.this.myEditor=BaseEditorTestBody.openEditor(BaseEditorTestBody.this.myProject,BaseEditorTestBody.this.myModel,BaseEditorTestBody.this.myBefore);
      BaseEditorTestBody.this.myStart.setupSelection(BaseEditorTestBody.this.myEditor);
    }
  }
);
}
