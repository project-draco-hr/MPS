{
  SNode applyToNode=ListSequence.fromList(SNodeOperations.getAncestors(node,null,true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return !(SNodeOperations.isAttribute(it));
    }
  }
).first();
  if (SNodeOperations.getAncestorWhereConceptInList(applyToNode,new String[]{"jetbrains.mps.lang.generator.structure.TemplateDeclaration","jetbrains.mps.lang.generator.structure.InlineTemplateWithContext_RuleConsequence"},false,false) != null) {
    if (!(QueriesUtil.isInsideTemplateFragment(applyToNode))) {
      QueriesUtil.createTemplateFragment(applyToNode);
    }
  }
  SNode nodeMacro=SNodeFactoryOperations.createNewNode("jetbrains.mps.lang.generator.structure.NodeMacro",null);
  if (SNodeOperations.isInstanceOf(node,"jetbrains.mps.lang.generator.structure.NodeMacro") && ListSequence.fromList(SNodeOperations.getChildren(applyToNode)).contains(node)) {
    SNodeOperations.insertPrevSiblingChild(node,nodeMacro);
  }
 else {
    ListSequence.fromList(AttributeOperations.getAttributeList(applyToNode,new IAttributeDescriptor.NodeAttribute(SConceptOperations.findConceptDeclaration("jetbrains.mps.lang.generator.structure.NodeMacro")))).addElement(nodeMacro);
  }
  return nodeMacro;
}
