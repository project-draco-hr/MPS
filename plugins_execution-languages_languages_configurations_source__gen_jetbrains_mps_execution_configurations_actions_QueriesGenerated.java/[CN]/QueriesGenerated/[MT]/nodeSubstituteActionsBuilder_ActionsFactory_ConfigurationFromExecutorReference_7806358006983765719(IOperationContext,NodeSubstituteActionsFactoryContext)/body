{
  List<SubstituteAction> result=ListSequence.fromList(new ArrayList<SubstituteAction>());
{
    SNode outputConcept=SConceptOperations.findConceptDeclaration("jetbrains.mps.execution.configurations.structure.ConfigurationFromExecutorReference");
    SNode childConcept=(SNode)_context.getChildConcept();
    if (SConceptOperations.isSuperConceptOf(childConcept,NameUtil.nodeFQName(outputConcept))) {
      Computable computable=new Computable(){
        public Object compute(){
          return ListSequence.fromListAndArray(new ArrayList<String>(),SPropertyOperations.getString(SNodeOperations.cast(SNodeOperations.getContainingRoot(_context.getParentNode()),"jetbrains.mps.execution.configurations.structure.AbstractRunConfigurationExecutor"),"configurationName"));
        }
      }
;
      Iterable<String> queryResult=(Iterable)computable.compute();
      if (queryResult != null) {
        for (        final String item : queryResult) {
          ListSequence.fromList(result).addElement(new DefaultChildNodeSubstituteAction(outputConcept,item,_context.getParentNode(),_context.getCurrentTargetNode(),_context.getChildSetter(),operationContext.getScope()){
            public SNode createChildNode(            Object parameterObject,            SModel model,            String pattern){
              return SNodeFactoryOperations.createNewNode("jetbrains.mps.execution.configurations.structure.ConfigurationFromExecutorReference",null);
            }
          }
);
        }
      }
    }
  }
  return result;
}
