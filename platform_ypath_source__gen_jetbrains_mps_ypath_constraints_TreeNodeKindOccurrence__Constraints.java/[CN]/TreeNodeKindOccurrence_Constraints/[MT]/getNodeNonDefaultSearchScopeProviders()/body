{
  HashMap<String,INodeReferentSearchScopeProvider> result=new HashMap<String,INodeReferentSearchScopeProvider>();
  result.put("nodeKind",new BaseNodeReferenceSearchScopeProvider(){
    public void registerSelf(    ModelConstraintsManager manager){
    }
    public void unRegisterSelf(    ModelConstraintsManager manager){
    }
    public Object createSearchScopeOrListOfNodes(    final IOperationContext operationContext,    final ReferentConstraintContext _context){
      SNode tpoe=SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.ypath.structure.TreePathOperationExpression",false,false);
      SNode tpa=SNodeOperations.cast(ITreePathExpression_Behavior.call_getTreePath_1213877496973(tpoe),"jetbrains.mps.ypath.structure.TreePathAspect");
      return ListSequence.fromList(SNodeOperations.getDescendants(tpa,null,false,new String[]{})).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SNodeOperations.isInstanceOf(it,"jetbrains.mps.ypath.structure.TreeNodeKind");
        }
      }
).toListSequence();
    }
    public SNodePointer getSearchScopeValidatorNodePointer(){
      return new SNodePointer("r:00000000-0000-4000-0000-011c895905a8(jetbrains.mps.ypath.constraints)","1213104859283");
    }
  }
);
  return result;
}
