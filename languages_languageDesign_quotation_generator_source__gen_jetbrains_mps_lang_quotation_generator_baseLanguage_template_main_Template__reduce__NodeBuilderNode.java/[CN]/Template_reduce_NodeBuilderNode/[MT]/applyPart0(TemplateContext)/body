{
  final TemplateExecutionEnvironment environment=context.getEnvironment();
  Collection<SNode> tlist1=null;
  final Object varValue1=QueriesGenerated.insertMacro_varValue_429601079676845415(new TemplateVarContext(context,varMacroRef_98emc3_b0a0a2a4));
  TemplateContext context1=context.withVariable("var:root",varValue1);
  final SNode tnode2=environment.createOutputNode(myConcepts[0]);
  try {
    TemplateContext context2=context1.subContext();
{
      Collection<SNode> tlist3=null;
      TemplateContext context3=context2.subContext("nodeVariable");
      final SNode tnode4=environment.createOutputNode(myConcepts[1]);
      try {
        environment.nodeCopied(context3,tnode4,"tpl/r:00000000-0000-4000-0000-011c8959034c/429601079676709784");
        SNodeAccessUtil.setProperty(tnode4,myProperties[0],TemplateUtil.asString(QueriesGenerated.propertyMacro_GetPropertyValue_429601079676781980(new PropertyMacroContext(context3,"_node_",propertyMacro_98emc3_c0a0c0b0d0b0f0e))));
        TemplateContext context4=context3.subContext();
{
          final SNode tnode5=environment.createOutputNode(myConcepts[2]);
          try {
            tnode5.setReference(myAssociationLinks[0],SReference.create(myAssociationLinks[0],tnode5,PersistenceFacade.getInstance().createModelReference("6ed54515-acc8-4d1e-a16c-9fd6cfe951ea/java:jetbrains.mps.smodel(MPS.Core/)"),PersistenceFacade.getInstance().createNodeId("~SModelUtil_new.instantiateConceptDeclaration(org.jetbrains.mps.openapi.language.SAbstractConcept,org.jetbrains.mps.openapi.model.SModel,org.jetbrains.mps.openapi.model.SNodeId,boolean):jetbrains.mps.smodel.SNode")));
            tnode5.setReference(myAssociationLinks[1],SReference.create(myAssociationLinks[1],tnode5,PersistenceFacade.getInstance().createModelReference("6ed54515-acc8-4d1e-a16c-9fd6cfe951ea/java:jetbrains.mps.smodel(MPS.Core/)"),PersistenceFacade.getInstance().createNodeId("~SModelUtil_new")));
            TemplateContext context5=context4.subContext();
{
              Collection<SNode> tlist6=null;
              try {
                SNode callInputNode6=QueriesGenerated.sourceNodeQuery_5494233285271349710(new SourceSubstituteMacroNodeContext(context5,includeMacro_98emc3_b0a0a0a1a3a1a3a3a1a5a4));
                TemplateContext context6=context5.subContext(null,callInputNode6);
                if (callInputNode6 != null) {
                  try {
                    tlist6=environment.applyTemplate(new SNodePointer("r:00000000-0000-4000-0000-011c89590303(jetbrains.mps.lang.smodel.generator.baseLanguage.template.main@generator)","6506750610319308637"),new SNodePointer("r:00000000-0000-4000-0000-011c8959034c(jetbrains.mps.lang.quotation.generator.baseLanguage.template.main@generator)","5494233285271349709"),context6);
                  }
  finally {
                  }
                }
              }
  finally {
              }
              for (              SNode child7 : TemplateUtil.asNotNull(tlist6)) {
                tnode5.addChild(myAggregationLinks[0],child7);
              }
            }
{
              Collection<SNode> tlist8=null;
              if (QueriesGenerated.ifMacro_Condition_5494233285271349734(new IfMacroContext(context5,ifMacroRef_98emc3_b0a0b0e0b0d0d0b0f0e))) {
                final SNode tnode9=environment.createOutputNode(myConcepts[3]);
                try {
                  TemplateContext context7=context5.subContext();
{
                    final SNode tnode10=environment.createOutputNode(myConcepts[4]);
                    try {
                      tnode10.setReference(myAssociationLinks[2],SReference.create(myAssociationLinks[2],tnode10,PersistenceFacade.getInstance().createModelReference("8865b7a8-5271-43d3-884c-6fd1d9cfdd34/java:org.jetbrains.mps.openapi.model(MPS.OpenAPI/)"),PersistenceFacade.getInstance().createNodeId("~SModel")));
                    }
  finally {
                    }
                    tnode9.addChild(myAggregationLinks[1],tnode10);
                  }
{
                    final SNode tnode11=environment.createOutputNode(myConcepts[5]);
                    try {
                      environment.resolve((ReferenceResolver)new RefResolver(tnode11,myAssociationLinks[3],context7,new SNodePointer("r:00000000-0000-4000-0000-011c8959034c(jetbrains.mps.lang.quotation.generator.baseLanguage.template.main@generator)","5494233285271349719"),"param1"){
                        @Override public Object resolve(){
                          return QueriesGenerated.referenceMacro_GetReferent_5494233285271349720(createQueryContext());
                        }
                      }
);
                    }
  finally {
                    }
                    tnode9.addChild(myAggregationLinks[2],tnode11);
                  }
                }
  finally {
                }
                tlist8=TemplateUtil.singletonList(tnode9);
              }
 else {
                final SNode tnode12=environment.createOutputNode(myConcepts[6]);
                try {
                }
  finally {
                }
                tlist8=TemplateUtil.singletonList(tnode12);
              }
              for (              SNode child13 : TemplateUtil.asNotNull(tlist8)) {
                tnode5.addChild(myAggregationLinks[0],child13);
              }
            }
{
              final SNode tnode14=environment.createOutputNode(myConcepts[6]);
              try {
              }
  finally {
              }
              tnode5.addChild(myAggregationLinks[0],tnode14);
            }
{
              final SNode tnode15=environment.createOutputNode(myConcepts[7]);
              try {
              }
  finally {
              }
              tnode5.addChild(myAggregationLinks[0],tnode15);
            }
          }
  finally {
          }
          tnode4.addChild(myAggregationLinks[3],tnode5);
        }
{
          final SNode tnode16=environment.createOutputNode(myConcepts[8]);
          try {
          }
  finally {
          }
          tnode4.addChild(myAggregationLinks[4],tnode16);
        }
      }
  finally {
      }
      tlist3=TemplateUtil.singletonList(tnode4);
      environment.registerLabel(context2.getInput(),tnode4,"nodeVariable");
      for (      SNode child17 : TemplateUtil.asNotNull(tlist3)) {
        tnode2.addChild(myAggregationLinks[5],child17);
      }
    }
  }
  finally {
  }
  tlist1=TemplateUtil.singletonList(tnode2);
  return tlist1;
}
