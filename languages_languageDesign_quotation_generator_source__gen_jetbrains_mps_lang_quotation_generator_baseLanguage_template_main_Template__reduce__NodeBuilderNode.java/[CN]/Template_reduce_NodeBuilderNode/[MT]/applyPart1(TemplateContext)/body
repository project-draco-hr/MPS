{
  final TemplateExecutionEnvironment environment=context.getEnvironment();
  final SNode tnode1=environment.createOutputNode(myConcepts[9]);
  try {
    TemplateContext context1=context.subContext();
{
      final SNode tnode2=environment.createOutputNode(myConcepts[10]);
      try {
        TemplateContext context2=context1.subContext();
{
          final List<SNode> tlist3=new ArrayList<SNode>();
          final Iterable<SNode> loopList3=QueriesGenerated.sourceNodesQuery_429601079676785722(new SourceSubstituteMacroNodesContext(context2,loopMacroRef_98emc3_b0a0a1a1a1a1a2a5));
          for (          SNode itnode3 : loopList3) {
            if (itnode3 == null) {
              continue;
            }
            TemplateContext context3=context2.subContext(itnode3);
            Collection<SNode> tlist4=null;
            try {
              TemplateContext switchContext4;
{
                final Map<String,Object> args4=new HashMap<String,Object>();
                args4.put("nodeBuilderNode",((SNode)QueriesGenerated.templateArgumentQuery_7091594365016949043(new TemplateArgumentContext(context3,templArgCall_98emc3_b0a0a1a0b0b0d0c0b0b0b0c0f))));
                switchContext4=context3.subContext(args4);
                switchContext4=switchContext4.subContext(null,context3.getInput());
              }
              tlist4=environment.trySwitch(templateSwitchNodeNoInput_98emc3_a0a0c0d0c0b0b0b0c0f,switchContext4);
              if (tlist4 == null) {
                final SNode tnode5=environment.createOutputNode(myConcepts[11]);
                try {
                  TemplateContext context4=context3.subContext();
{
                    final SNode tnode6=environment.createOutputNode(myConcepts[12]);
                    try {
                      TemplateContext context5=context4.subContext();
{
                        final SNode tnode7=environment.createOutputNode(myConcepts[13]);
                        try {
                          tnode7.setReference(myAssociationLinks[0],SReference.create(myAssociationLinks[0],tnode7,PersistenceFacade.getInstance().createModelReference("6354ebe7-c22a-4a0f-ac54-50b52ab9b065/java:java.lang(JDK/)"),PersistenceFacade.getInstance().createNodeId("~UnsupportedOperationException.<init>()")));
                        }
  finally {
                        }
                        tnode6.addChild(myAggregationLinks[6],tnode7);
                      }
                    }
  finally {
                    }
                    tnode5.addChild(myAggregationLinks[7],tnode6);
                  }
                }
  finally {
                }
                if (tnode5 != null) {
                  tlist4=TemplateUtil.singletonList(tnode5);
                }
              }
            }
  finally {
            }
            if (tlist4 != null) {
              tlist3.addAll(tlist4);
            }
          }
          for (          SNode child8 : TemplateUtil.asNotNull(tlist3)) {
            tnode2.addChild(myAggregationLinks[8],child8);
          }
        }
      }
  finally {
      }
      tnode1.addChild(myAggregationLinks[9],tnode2);
    }
  }
  finally {
  }
  return tnode1;
}
