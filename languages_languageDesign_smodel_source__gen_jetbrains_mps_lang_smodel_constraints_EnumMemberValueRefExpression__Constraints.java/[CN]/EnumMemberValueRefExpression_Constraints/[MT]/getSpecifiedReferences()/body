{
  Map<SReferenceLink,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLink,ReferenceConstraintsDescriptor>();
  references.put(MetaAdapterFactory.getReferenceLink(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x60c7f83bafd83b5bL,0x60c7f83bafda1168L,"member"),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x60c7f83bafd83b5bL,0x60c7f83bafda1168L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseScopeProvider(){
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_ju2p9y_a0a0a0a0a1a0b0a1a1;
        }
        @Override public Scope createScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
{
            SNode enumMemberValueRef=SNodeOperations.getNodeAncestor(_context.getContextNode(),MetaAdapterFactory.getConcept(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x60c7f83bafd83b5bL,"jetbrains.mps.lang.smodel.structure.EnumMemberValueRefExpression"),true,false);
            return new SimpleScope(SLinkOperations.getChildren(SLinkOperations.getTarget(enumMemberValueRef,MetaAdapterFactory.getReferenceLink(0x7866978ea0f04cc7L,0x81bc4d213d9375e1L,0x60c7f83bafd83b5bL,0x60c7f83bafda0e39L,"enum")),MetaAdapterFactory.getContainmentLink(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xfc26875dfbL,0xfc32151efeL,"member"))){
              @Nullable @Override public String getReferenceText(              @NotNull SNode target){
                return SPropertyOperations.getString(SNodeOperations.cast(target,MetaAdapterFactory.getConcept(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xfc321331b2L,"jetbrains.mps.lang.structure.structure.EnumerationMemberDeclaration")),MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xfc321331b2L,0xfc5ee06664L,"externalValue"));
              }
            }
;
          }
        }
      }
;
    }
  }
);
  return references;
}
