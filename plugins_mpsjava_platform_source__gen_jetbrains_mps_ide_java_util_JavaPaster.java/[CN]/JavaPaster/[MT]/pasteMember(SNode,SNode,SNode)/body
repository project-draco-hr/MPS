{
  SNode parent=SNodeOperations.getAncestor(anchor,NameUtil.nodeFQName(parentConcept),true,false);
  if ((parent == null)) {
    return false;
  }
  while ((anchor != null) && SNodeOperations.getParent(anchor) != parent) {
    anchor=SNodeOperations.getParent(anchor);
  }
  int index=-1;
  if (SNodeOperations.isInstanceOf(anchor,"jetbrains.mps.baseLanguage.structure.ClassifierMember")) {
    index=ListSequence.fromList(SNodeOperations.getChildren(parent,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.Classifier","member"))).indexOf(SNodeOperations.cast(anchor,"jetbrains.mps.baseLanguage.structure.ClassifierMember"));
  }
  if (index == -1) {
    ListSequence.fromList(SLinkOperations.getTargets(parent,"member",true)).addElement(member);
  }
 else {
    ListSequence.fromList(SNodeOperations.getChildren(parent,SLinkOperations.findLinkDeclaration("jetbrains.mps.baseLanguage.structure.Classifier","member"))).insertElement(index,member);
  }
  return true;
}
