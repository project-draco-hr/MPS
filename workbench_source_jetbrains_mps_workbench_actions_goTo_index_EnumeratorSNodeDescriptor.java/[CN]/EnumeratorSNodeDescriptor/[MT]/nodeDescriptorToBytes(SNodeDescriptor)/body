{
  int conceptNameLength=node.getConceptFqName().getBytes().length;
  int nodeNameLength=node.getNodeName().getBytes().length;
  int len=mySizeOfUUID + conceptNameLength + nodeNameLength+ 5;
  byte[] result=new byte[len + 1];
  int off=0;
  result[off]=(byte)len;
  off++;
  putLong(result,off,node.getMostSignificantBits());
  off+=mySizeOfUUID / 2;
  putLong(result,off,node.getLeastSignificantBits());
  off+=mySizeOfUUID / 2;
  result[off]=(byte)node.getNumberInModel();
  off++;
  result[off]=(byte)conceptNameLength;
  off++;
  putString(result,mySizeOfUUID + 3,node.getConceptFqName());
  off+=conceptNameLength;
  result[off]=(byte)nodeNameLength;
  off++;
  putString(result,off,node.getNodeName());
  off+=nodeNameLength;
  putBoolean(result,off,node.isDependOnOtherModel());
  off++;
  putBoolean(result,off,node.isInvalid());
  return result;
}
