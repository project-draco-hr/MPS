{
  if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.TypeVariableReference") || SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.WildCardType")) {
    return type;
  }
  if (SNodeOperations.isInstanceOf(type,"jetbrains.mps.baseLanguage.structure.UpperBoundType")) {
    SNode res=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.UpperBoundType",null);
    SLinkOperations.setTarget(res,"bound",getTypeCoercedToClassifierType(SLinkOperations.getTarget(type,"bound",true)),true);
  }
  SNode ct=TypeChecker.getInstance().getRuntimeSupport().coerce(type,HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.baseLanguage.structure.ClassifierType"),true);
  if ((ct != null)) {
    List<SNode> params=SLinkOperations.getTargets(ct,"parameter",true);
    if (params != null && params.size() > 0) {
      SNode res=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ClassifierType",null);
      SLinkOperations.setTarget(res,"classifier",SLinkOperations.getTarget(ct,"classifier",false),false);
      for (      SNode p : params) {
        SLinkOperations.addChild(res,"parameter",SNodeOperations.copyNode(getTypeCoercedToClassifierType(p)));
      }
      return res;
    }
    return ct;
  }
  return type;
}
