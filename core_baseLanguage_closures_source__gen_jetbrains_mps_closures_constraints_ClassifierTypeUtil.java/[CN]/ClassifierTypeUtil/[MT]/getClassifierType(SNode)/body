{
  String rtSig="FunctionTypes." + FunctionTypeUtil.getRuntimeSignature(ft);
  for (  SNode ice : SModelOperations.getNodes(SNodeOperations.getModel(SLinkOperations.getTarget(new QuotationClass_2().createNode(),"classifier",false)),"jetbrains.mps.baseLanguage.structure.Interface")) {
    if (rtSig.equals(SPropertyOperations.getString(ice,"name"))) {
      SNode ct=new QuotationClass_1().createNode(ice);
      if ((SLinkOperations.getTarget(ft,"resultType",true) != null) && !(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(ft,"resultType",true),"jetbrains.mps.baseLanguage.structure.VoidType"))) {
        SLinkOperations.addChild(ct,"parameter",copyTypeRecursively(getTypeCoercedToClassifierType(SLinkOperations.getTarget(ft,"resultType",true)),true));
      }
      for (      SNode pt : SLinkOperations.getTargets(ft,"parameterType",true)) {
        SLinkOperations.addChild(ct,"parameter",copyTypeRecursively(getTypeCoercedToClassifierType(pt),false));
      }
      return ct;
    }
  }
  return null;
}
