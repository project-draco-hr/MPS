{
  LOG.assertLog(child != null,"Child is null");
  if (child.getParent() != null) {
    throw new RuntimeException(child.getDebugText() + " already has parent: " + child.getParent().getDebugText()+ "\n"+ "Couldn't add it to: "+ this.getDebugText());
  }
  if (child.getModel() != getModel()) {
    child.changeModel(getModel());
  }
  myChildren.add(index,child);
  child.myRoleInParent=role;
  child.myParent=this;
  incrementChildInRoleCount(role);
  if (myRegisteredInModelFlag) {
    child.registerInModel(getModel());
  }
  if (!getModel().isLoading()) {
    UndoManager.instance().undoableActionPerformed(new IUndoableAction(){
      public void undo() throws UnexpectedUndoException {
        removeChildAt(index);
      }
    }
);
  }
  getModel().fireChildAddedEvent(this,role,child,index);
}
