{
  SNode enclosingClass=SNodeOperations.getAncestor(nodeInsideClosure,"jetbrains.mps.baseLanguage.structure.ClassConcept",false,false);
  if (enclosingClass == null) {
    return SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.NullLiteral",null);
  }
  SNode enclosingMethodOrClosure=SNodeOperations.getAncestorWhereConceptInList(nodeInsideClosure,new String[]{"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration","jetbrains.mps.baseLanguage.structure.Closure"},false,false);
  if (SNodeOperations.isInstanceOf(enclosingMethodOrClosure,"jetbrains.mps.baseLanguage.structure.Closure")) {
    SNode fieldRef=_quotation_createNode_w9106s_a0a0h0d();
    SNode typeOfField=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ClassifierType",null);
    SLinkOperations.setTarget(typeOfField,"classifier",enclosingClass,false);
    SLinkOperations.setTarget(fieldRef,"fieldType",typeOfField,true);
    return fieldRef;
  }
  if (SNodeOperations.isInstanceOf(enclosingMethodOrClosure,"jetbrains.mps.baseLanguage.structure.InstanceMethodDeclaration") || SNodeOperations.isInstanceOf(enclosingMethodOrClosure,"jetbrains.mps.baseLanguage.structure.ConstructorDeclaration")) {
    SNode thisExpr=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ThisExpression",null);
    SLinkOperations.setTarget(thisExpr,"classConcept",enclosingClass,false);
    return thisExpr;
  }
  return SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.NullLiteral",null);
}
