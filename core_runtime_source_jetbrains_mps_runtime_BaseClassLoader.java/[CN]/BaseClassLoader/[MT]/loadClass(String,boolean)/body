{
  name=InternUtil.intern(name);
  Class c=myCache.get(name);
  if (myCache.containsKey(name) && c == null) {
    throw new ClassNotFoundException("Classloader: " + this + "; Class: "+ name);
  }
  if (c == null) {
    c=loadBeforeCurrent(name);
    if (c == null) {
      byte[] bytes=null;
      bytes=findClassBytes(name);
      if (bytes == null) {
        c=loadAfterCurrent(name);
        if (c == null) {
          try {
            c=getParent().loadClass(name);
          }
 catch (          ClassNotFoundException e) {
            myCache.put(name,null);
            throw e;
          }
        }
        if (resolve) {
          resolveClass(c);
        }
      }
 else {
        definePackageIfNecessary(name);
        c=defineClass(name,bytes,0,bytes.length);
      }
    }
    myCache.put(name,c);
  }
  if (resolve) {
    resolveClass(c);
  }
  return c;
}
