{
  if (myThis.getDevkitDir().length() == 0) {
    myThis.getDialog().setErrorText("Enter DevKit Directory");
    return;
  }
  if (myThis.getDevkitName().length() == 0) {
    myThis.getDialog().setErrorText("Enter DevKit Name");
    return;
  }
  final String devkitPath=myThis.getDevkitDir() + File.separator + myThis.getDevkitName()+ MPSExtentions.DOT_DEVKIT;
  if (new File(devkitPath).exists()) {
    myThis.getDialog().setErrorText("File " + devkitPath + " already exists");
    return;
  }
  if (!(new File(devkitPath).isAbsolute())) {
    myThis.getDialog().setErrorText("Path should be absolute");
    return;
  }
  File dir=new File(myThis.getDevkitDir());
  if (!(dir.exists())) {
    if (!(DirectoryUtil.askToCreateNewDirectory((Frame)myThis.getDialog().getOwner(),dir))) {
      myThis.getDialog().setErrorText("Enter correct path");
      return;
    }
  }
  Project ideaProject=myThis.getProject().getComponent(Project.class);
  ProgressManager.getInstance().run(new Task.Modal(ideaProject,"Creating",false){
    public void run(    @NotNull() ProgressIndicator indicator){
      indicator.setIndeterminate(true);
      ModelAccess.instance().runWriteAction(new Runnable(){
        public void run(){
          myThis.createNewDevKit(new File(devkitPath));
        }
      }
);
    }
  }
);
  myThis.getDialog().dispose();
}
