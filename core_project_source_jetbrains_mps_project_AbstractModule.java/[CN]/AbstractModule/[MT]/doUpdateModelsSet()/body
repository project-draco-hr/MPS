{
  assertCanChange();
  for (  SModel model : getModels()) {
    if (model instanceof EditableSModel && ((EditableSModel)model).isChanged()) {
      LOG.error("Trying to reload module " + getModuleName() + " which contains a non-saved model"+ model.getModelName()+ "To prevent data loss, MPS will not update models in this module. "+ "Please save your work and restart MPS. See MPS-18743 for details.");
      return;
    }
  }
  Set<ModelRoot> toRemove=new HashSet<ModelRoot>(mySModelRoots);
  Set<ModelRoot> toUpdate=new HashSet<ModelRoot>(mySModelRoots);
  Set<ModelRoot> toAttach=new HashSet<ModelRoot>();
  for (  ModelRoot root : loadRoots()) {
    try {
      if (mySModelRoots.contains(root)) {
        toRemove.remove(root);
      }
 else {
        toAttach.add(root);
      }
    }
 catch (    Exception e) {
      LOG.error("Error loading models from root `" + root.getPresentation() + "'. Requested by: "+ this,e);
    }
  }
  toUpdate.removeAll(toRemove);
  for (  ModelRoot modelRoot : toRemove) {
    ((ModelRootBase)modelRoot).dispose();
  }
  mySModelRoots.removeAll(toRemove);
  for (  ModelRoot modelRoot : toAttach) {
    ModelRootBase rootBase=(ModelRootBase)modelRoot;
    rootBase.setModule(this);
    mySModelRoots.add(modelRoot);
    rootBase.attach();
  }
  for (  ModelRoot modelRoot : toUpdate) {
    ((ModelRootBase)modelRoot).update();
  }
}
