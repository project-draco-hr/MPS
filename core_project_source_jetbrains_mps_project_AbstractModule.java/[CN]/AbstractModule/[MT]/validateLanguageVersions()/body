{
  ModuleDescriptor md=getModuleDescriptor();
  Map<SLanguage,Integer> oldLanguageVersions=md.getLanguageVersions();
  Map<SLanguage,Integer> newLanguageVersions=new HashMap<SLanguage,Integer>();
  if (!md.hasLanguageVersions()) {
    for (    SLanguage lang : getAllUsedLanguages()) {
      newLanguageVersions.put(lang,0);
      setChanged();
    }
    md.setHasLanguageVersions(true);
  }
 else {
    for (    SLanguage lang : getAllUsedLanguages()) {
      if (oldLanguageVersions.containsKey(lang)) {
        newLanguageVersions.put(lang,oldLanguageVersions.get(lang));
      }
 else {
        setChanged();
        newLanguageVersions.put(lang,lang.getLanguageVersion());
      }
    }
  }
  if (oldLanguageVersions.size() != newLanguageVersions.size()) {
    setChanged();
    oldLanguageVersions.clear();
    oldLanguageVersions.putAll(newLanguageVersions);
  }
}
