{
  final List<ModuleReference> availableSolutions=new ArrayList<ModuleReference>();
  ModelAccess.instance().runReadAction(new Runnable(){
    @Override public void run(){
      for (      Solution solution : ModuleRepositoryFacade.getInstance().getAllModules(Solution.class)) {
        if (solution instanceof SolutionIdea || solution instanceof StubSolution) {
          continue;
        }
        availableSolutions.add(solution.getModuleReference());
      }
    }
  }
);
  ChooseElementsDialog<ModuleReference> chooser=new ModuleReferenceChooserDialog(project,availableSolutions);
  chooser.show();
  List<ModuleReference> chosenElements=chooser.getChosenElements();
  if (chosenElements.isEmpty()) {
    return null;
  }
  String name=ModuleRuntimeLibrariesImporter.LIBRARY_PREFIX + chosenElements.get(0).getModuleFqName();
  if (chosenElements.size() > 1) {
    name+="...";
  }
  final Set<OrderRoot> roots=createRootsFor(chosenElements);
  return new NewLibraryConfiguration(name,this,createDefaultProperties()){
    @Override public void addRoots(    @NotNull LibraryEditor editor){
      editor.addRoots(roots);
    }
  }
;
}
