{
  SNode childStatement=child;
  while ((childStatement != null) && SNodeOperations.getParent(childStatement) != thisNode) {
    childStatement=SNodeOperations.getParent(childStatement);
  }
  if (SConceptOperations.isExactly(kind,"jetbrains.mps.baseLanguage.structure.VariableDeclaration")) {
    if (SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1163670490218l,1163670766145l,"expression")) == childStatement) {
      return ScopeUtils.lazyParentScope(thisNode,kind);
    }
    List<SNode> variables=new ArrayList<SNode>();
    for (    SNode caseNode : SLinkOperations.getChildren(thisNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1163670490218l,1163670772911l,"case"))) {
      if (caseNode == childStatement) {
        break;
      }
      ListSequence.fromList(variables).addSequence(ListSequence.fromList(StatementList_Behavior.call_getLocalVariableDeclarations_3986960521977638556(SLinkOperations.getTarget(caseNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1163670641947l,1163670683720l,"body")),null)));
    }
    return Scopes.forVariables(kind,variables,ScopeUtils.lazyParentScope(thisNode,kind));
  }
  if (SConceptOperations.isSubConceptOf(kind,"jetbrains.mps.baseLanguage.structure.LoopLabel")) {
    List<SNode> parameter=new ArrayList<SNode>();
    if ((SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1163670490218l,4652593672361747214l,"switchLabel")) != null)) {
      ListSequence.fromList(parameter).addElement(SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1163670490218l,4652593672361747214l,"switchLabel")));
    }
    SNode[] nodesInScope=new SNode[ListSequence.fromList(SLinkOperations.getChildren(thisNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1163670490218l,1163670772911l,"case"))).count() + 1];
    for (int i=0; i < ListSequence.fromList(SLinkOperations.getChildren(thisNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1163670490218l,1163670772911l,"case"))).count(); i++) {
      nodesInScope[i]=ListSequence.fromList(SLinkOperations.getChildren(thisNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1163670490218l,1163670772911l,"case"))).getElement(i);
    }
    nodesInScope[nodesInScope.length - 1]=SLinkOperations.getTarget(thisNode,MetaAdapterFactory.getContainmentLink(new UUID(-935030926396207931l,-6610165693999523818l),1163670490218l,1163670592366l,"defaultBlock"));
    if (Arrays.asList(nodesInScope).contains(child)) {
      return Scopes.forLoopLabels(parameter,ScopeUtils.lazyParentScope(thisNode,kind));
    }
  }
  return null;
}
