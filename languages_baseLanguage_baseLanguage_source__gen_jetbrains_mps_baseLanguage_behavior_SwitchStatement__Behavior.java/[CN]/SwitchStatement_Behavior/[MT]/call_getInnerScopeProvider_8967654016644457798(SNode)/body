{
  List<SNode> parameter=new ArrayList<SNode>();
  if ((SLinkOperations.getTarget(thisNode,"switchLabel",true) != null)) {
    ListSequence.fromList(parameter).addElement(SLinkOperations.getTarget(thisNode,"switchLabel",true));
  }
  SNode[] nodesInScope=new SNode[ListSequence.fromList(SLinkOperations.getTargets(thisNode,"case",true)).count() + 1];
  for (int i=0; i < ListSequence.fromList(SLinkOperations.getTargets(thisNode,"case",true)).count(); i++) {
    nodesInScope[i]=ListSequence.fromList(SLinkOperations.getTargets(thisNode,"case",true)).getElement(i);
  }
  nodesInScope[nodesInScope.length - 1]=SLinkOperations.getTarget(thisNode,"defaultBlock",true);
  return new HierarchyScopeProvider(SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.LoopLabel"),parameter,nodesInScope);
}
