{
  super(source,model);
  String sClass="class";
  int index=source.indexOf(sClass);
  if (index == -1) {
    sClass="interface";
    index=source.indexOf(sClass);
  }
  if (index == -1) {
    sClass="enum";
    index=source.indexOf(sClass);
  }
  if (index == -1) {
    throw new ConversionFailedException("not a class or interface");
  }
 else {
    int i=index + sClass.length();
    while (Character.isWhitespace(source.charAt(i))) {
      i++;
    }
    StringBuilder sb=new StringBuilder();
    while (!(Character.isWhitespace(source.charAt(i)) || source.charAt(i) == '{')) {
      char c=source.charAt(i);
      sb.append(c);
      i++;
    }
    myClassName=sb.toString();
    int iPackage=source.indexOf(PACKAGE_);
    if (0 <= iPackage && iPackage < i && (jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations.getModelName(model) != null && jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations.getModelName(model).length() > 0)) {
      int iPackageEnd=iPackage + PACKAGE_.length();
      while (!(Character.isWhitespace(source.charAt(iPackageEnd)) || source.charAt(iPackageEnd) == ';')) {
        iPackageEnd++;
      }
      source=source.substring(0,iPackage) + "import " + source.substring(iPackage + PACKAGE_.length(),iPackageEnd)+ ".*"+ source.substring(iPackageEnd);
    }
    if ((jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations.getModelName(model) == null || jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations.getModelName(model).length() == 0)) {
      myWrappedSource=source;
    }
 else {
      myWrappedSource=PACKAGE_ + jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations.getModelName(model) + ";\n"+ source;
    }
  }
}
