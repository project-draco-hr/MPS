{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_xbvbvu_a0d.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_childConcept_SubstituteMenu());
      }
    break;
case 1:
  if (true) {
    return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_childSetter_SubstituteMenu());
  }
break;
case 2:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_concept_SubstituteMenu());
}
break;
case 3:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_currentTargetNode_SubstituteMenu());
}
break;
case 4:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_link_SubstituteMenu());
}
break;
case 5:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_nodeToPasteWrap_SubstituteMenu());
}
break;
case 6:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_nodeToWrap_SubstituteMenu());
}
break;
case 7:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_parameterObject_SubstituteMenu());
}
break;
case 8:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_parentNode_SubstituteMenu());
}
break;
case 9:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_pattern_SubstituteMenu());
}
break;
case 10:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_result_SubstituteMenu());
}
break;
case 11:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_sourceNode_SubstituteMenu());
}
break;
case 12:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_strictly_SubstituteMenu());
}
break;
case 13:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_targetNode_SubstituteMenu());
}
break;
case 14:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ConceptFunctionParameter_wrapped_SubstituteMenu());
}
break;
case 15:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ISubstitute_String_SubstituteMenu());
}
break;
case 16:
if (true) {
return Collections.<SubstituteMenu>singletonList(new SideTransformVariableDeclaration_SubstituteMenu());
}
break;
case 17:
if (true) {
return Collections.<SubstituteMenu>singletonList(new SubstituteNodeBuilderVariableDeclaration_SubstituteMenu());
}
break;
case 18:
if (true) {
return Collections.<SubstituteMenu>singletonList(new Substitute_SimpleString_SubstituteMenu());
}
break;
default :
}
}
return Collections.<SubstituteMenu>emptyList();
}
