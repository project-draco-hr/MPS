{
  Iterable<IModule> s=Sequence.fromClosure(new ISequenceClosure<IModule>(){
    public Iterable<IModule> iterable(){
      return MPSModuleRepository.getInstance().getAllModules();
    }
  }
);
  return SetSequence.fromSetAndArray(new HashSet(),Sequence.fromIterable(s).where(new IWhereFilter<IModule>(){
    public boolean accept(    IModule it){
      return GlobalFilteredScope.this.acceptModule(it);
    }
  }
));
}
