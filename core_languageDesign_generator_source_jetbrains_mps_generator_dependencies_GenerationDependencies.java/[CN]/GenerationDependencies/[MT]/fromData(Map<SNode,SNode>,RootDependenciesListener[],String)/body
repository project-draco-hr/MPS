{
  Map<String,String> generatedToOriginalMap=new HashMap<String,String>();
  Map<String,List<String>> generatedFiles=new HashMap<String,List<String>>();
  for (  Map.Entry<SNode,SNode> entry : currentToOriginalMap.entrySet()) {
    String inputRootId=entry.getValue() != null ? entry.getValue().getId() : "";
    SNode outputRoot=entry.getKey();
    if (entry.getValue() != null) {
      generatedToOriginalMap.put(outputRoot.getId(),inputRootId);
    }
    List<String> filesList=generatedFiles.get(inputRootId);
    if (filesList == null) {
      filesList=new ArrayList<String>();
      generatedFiles.put(inputRootId,filesList);
    }
    filesList.add(getFileName(outputRoot));
  }
  List<GenerationRootDependencies> rootDependencies=new ArrayList<GenerationRootDependencies>(roots.length);
  for (  RootDependenciesListener l : roots) {
    SNode originalRoot=l.getOriginalRoot();
    List<String> files=generatedFiles.get(originalRoot != null ? originalRoot.getId() : "");
    if (files == null) {
      files=Collections.emptyList();
    }
    rootDependencies.add(GenerationRootDependencies.fromData(l,files));
  }
  return new GenerationDependencies(rootDependencies,generatedToOriginalMap,modelHash);
}
