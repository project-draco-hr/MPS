{
  Map<String,List<String>> generatedFiles=new HashMap<String,List<String>>();
  for (  Map.Entry<SNode,SNode> entry : currentToOriginalMap.entrySet()) {
    String inputRootId=entry.getValue() != null ? entry.getValue().getId() : "";
    SNode outputRoot=entry.getKey();
    List<String> filesList=generatedFiles.get(inputRootId);
    if (filesList == null) {
      filesList=new ArrayList<String>();
      generatedFiles.put(inputRootId,filesList);
    }
    filesList.add(getFileName(outputRoot));
  }
  List<GenerationRootDependencies> unchanged=null;
  List<GenerationRootDependencies> rootDependencies=new ArrayList<GenerationRootDependencies>(roots.length);
  for (  RootDependenciesBuilder l : roots) {
    SNode originalRoot=l.getOriginalRoot();
    List<String> files=generatedFiles.get(originalRoot != null ? originalRoot.getId() : "");
    if (files == null) {
      files=Collections.emptyList();
    }
    if (l.isUnchanged()) {
      GenerationRootDependencies dep=l.getSavedDependencies();
      rootDependencies.add(dep);
      if (unchanged == null) {
        unchanged=new ArrayList<GenerationRootDependencies>();
      }
      unchanged.add(dep);
    }
 else {
      rootDependencies.add(GenerationRootDependencies.fromData(l,files));
    }
  }
  return new GenerationDependencies(rootDependencies,modelHash,unchanged);
}
