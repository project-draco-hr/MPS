{
  HashMap<SLanguage,SNode> langToReport=new HashMap<SLanguage,SNode>();
  for (  SNode node : nodes) {
    SLanguage lang=node.getConcept().getLanguage();
    if (!myGenerator.getGenerationPlan().isCountedLanguage(lang)) {
      LanguageRuntime lr=LanguageRegistry.getInstance().getLanguage(lang);
      if (lr != null && !lr.getGenerators().isEmpty()) {
        langToReport.put(lang,node);
      }
    }
  }
  if (langToReport.isEmpty()) {
    return;
  }
  for (  SLanguage lang : langToReport.keySet()) {
    String hint=String.format("workaround: add the language '%s' to list of 'Languages Engaged On Generation' in model '%s'",lang.getQualifiedName(),myGenerator.getGeneratorSessionContext().getOriginalInputModel().getName());
    myGenerator.getLogger().error(templateNode,String.format("language of output node is '%s' - this language did not show up when computing generation steps!",lang.getQualifiedName()),GeneratorUtil.describeInput(templateContext),GeneratorUtil.describe(langToReport.get(lang),"output"),new ProblemDescription(hint));
  }
}
