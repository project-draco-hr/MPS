{
switch (Arrays.binarySearch(stringSwitchCases_xbvbvu_a0a0tb,descriptor.getConceptFqName())) {
case 0:
    return getAtLeastNTimesRegexpEditorAspect();
case 1:
  return getBinaryRegexpEditorAspect();
case 2:
return getCharacterSymbolClassPartEditorAspect();
case 3:
return getDotRegexpEditorAspect();
case 4:
return getFindMatchExpressionEditorAspect();
case 5:
return getFindMatchStatementEditorAspect();
case 6:
return getForEachMatchStatementEditorAspect();
case 7:
return getFromNToMTimesRegexpEditorAspect();
case 8:
return getInlineRegexpExpressionEditorAspect();
case 9:
return getIntersectionSymbolClassPartEditorAspect();
case 10:
return getIntervalSymbolClassPartEditorAspect();
case 11:
return getLineEndRegexpEditorAspect();
case 12:
return getLineStartRegexpEditorAspect();
case 13:
return getLiteralReplacementEditorAspect();
case 14:
return getLookRegexpEditorAspect();
case 15:
return getMatchParensRegexpEditorAspect();
case 16:
return getMatchRegexpExpressionEditorAspect();
case 17:
return getMatchRegexpOperationEditorAspect();
case 18:
return getMatchRegexpStatementEditorAspect();
case 19:
return getMatchVariableReferenceEditorAspect();
case 20:
return getMatchVariableReferenceRegexpEditorAspect();
case 21:
return getMatchVariableReferenceReplacementEditorAspect();
case 22:
return getNTimesRegexpEditorAspect();
case 23:
return getNegativeSymbolClassRegexpEditorAspect();
case 24:
return getOrRegexpEditorAspect();
case 25:
return getParensRegexpEditorAspect();
case 26:
return getPositiveSymbolClassRegexpEditorAspect();
case 27:
return getPredefinedSymbolClassDeclarationEditorAspect();
case 28:
return getPredefinedSymbolClassRegexpEditorAspect();
case 29:
return getPredefinedSymbolClassSymbolClassPartEditorAspect();
case 30:
return getPredefinedSymbolClassesEditorAspect();
case 31:
return getRegexpEditorAspect();
case 32:
return getRegexpDeclarationEditorAspect();
case 33:
return getRegexpDeclarationReferenceRegexpEditorAspect();
case 34:
return getRegexpsEditorAspect();
case 35:
return getReplaceBlockEditorAspect();
case 36:
return getReplaceRegexpOperationEditorAspect();
case 37:
return getReplaceWithRegexpExpressionEditorAspect();
case 38:
return getReplaceWithRegexpOperationEditorAspect();
case 39:
return getSeqRegexpEditorAspect();
case 40:
return getSplitExpressionEditorAspect();
case 41:
return getSplitOperationEditorAspect();
case 42:
return getStringLiteralRegexpEditorAspect();
case 43:
return getUnaryRegexpEditorAspect();
case 44:
return getUnicodeCharacterRegexpEditorAspect();
default :
}
return null;
}
