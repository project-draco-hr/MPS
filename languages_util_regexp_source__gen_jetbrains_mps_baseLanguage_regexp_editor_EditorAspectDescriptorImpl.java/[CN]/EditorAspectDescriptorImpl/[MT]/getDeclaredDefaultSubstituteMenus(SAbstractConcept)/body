{
{
    SAbstractConcept cncpt=concept;
    Integer preIndex=indices_xbvbvu_a0e.get(cncpt);
    int switchIndex=(preIndex == null ? -1 : preIndex);
switch (switchIndex) {
case 0:
      if (true) {
        return Collections.<SubstituteMenu>singletonList(new FindMatchExpression_SubstituteMenu());
      }
    break;
case 1:
  if (true) {
    return Collections.<SubstituteMenu>singletonList(new LiteralReplacement_SubstituteMenu());
  }
break;
case 2:
if (true) {
return Collections.<SubstituteMenu>singletonList(new MatchParensRegexp_SubstituteMenu());
}
break;
case 3:
if (true) {
return Collections.<SubstituteMenu>singletonList(new MatchRegexpExpression_SubstituteMenu());
}
break;
case 4:
if (true) {
return Collections.<SubstituteMenu>singletonList(new Regexp_SubstituteMenu());
}
break;
case 5:
if (true) {
return Collections.<SubstituteMenu>singletonList(new ReplaceWithRegexpExpression_SubstituteMenu());
}
break;
case 6:
if (true) {
return Collections.<SubstituteMenu>singletonList(new Replacement_SubstituteMenu());
}
break;
case 7:
if (true) {
return Collections.<SubstituteMenu>singletonList(new SplitExpression_SubstituteMenu());
}
break;
case 8:
if (true) {
return Collections.<SubstituteMenu>singletonList(new SplitOperation_SubstituteMenu());
}
break;
case 9:
if (true) {
return Collections.<SubstituteMenu>singletonList(new SymbolClassPart_SubstituteMenu());
}
break;
default :
}
}
return Collections.<SubstituteMenu>emptyList();
}
