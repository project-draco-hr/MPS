{
  List<SearchResult<ModelCheckerIssue>> results=ListSequence.fromList(new ArrayList<SearchResult<ModelCheckerIssue>>());
  for (  INodeChecker checker : myLanguageCheckers) {
    if (!(ModelCheckerSettings.getInstance().checkerIsOn(checker.getCategory()))) {
      continue;
    }
    if (!(progressContext.checkAndUpdateIndicator("Checking " + SModelOperations.getModelName(model) + " for "+ checker.getCategory()+ " errors"))) {
      break;
    }
    for (    SNode rootNode : ListSequence.fromList(SModelOperations.getRoots(model,null))) {
      TypeContextManager.getInstance().getOrCreateContext(rootNode,this,true);
      Set<IErrorReporter> iErrorReporters=checker.getErrors(rootNode,operationContext);
      for (      IErrorReporter errorReporter : SetSequence.fromSet(iErrorReporters)) {
        final IErrorReporter reporter=errorReporter;
        final QuickFix_Runtime quickFix=check_7763bz_a0b0c0c0b0a(check_7763bz_a0a1a2a2a1a0(errorReporter));
        IModelCheckerFix fix=null;
        if (quickFix != null) {
          fix=new IModelCheckerFix(){
            public boolean doFix(){
              quickFix.execute(reporter.getSNode());
              return true;
            }
          }
;
        }
        addIssue(results,errorReporter.getSNode(),errorReporter.reportError(),SpecificChecker.getResultCategory(errorReporter.getMessageStatus()),checker.getCategory(),fix);
      }
      TypeContextManager.getInstance().removeOwnerForRootNodeContext(rootNode,this);
    }
  }
  return results;
}
