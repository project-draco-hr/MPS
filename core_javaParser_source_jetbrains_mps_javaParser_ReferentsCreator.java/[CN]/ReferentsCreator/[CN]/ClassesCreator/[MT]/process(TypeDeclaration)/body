{
  char[][] name=typeDeclaration.binding.compoundName;
  SourceTypeBinding binding=typeDeclaration.binding;
  if (binding instanceof LocalTypeBinding) {
    char[] localName=binding.constantPoolName();
    if (localName == null) {
      return false;
    }
    for (int i=0, c=localName.length; i < c; ++i) {
      if (localName[i] == '/') {
        localName[i]='.';
      }
    }
    name=new char[1][0];
    name[0]=localName;
  }
  Classifier classifier;
  if (binding.isClass()) {
    ClassConcept classConcept=ClassConcept.newInstance(myReferentsCreator.myCurrentModel);
    classConcept.setAbstractClass(binding.isAbstract());
    classConcept.setIsFinal(binding.isFinal());
    classifier=classConcept;
  }
 else   if (binding.isInterface() && !binding.isAnnotationType()) {
    classifier=Interface.newInstance(myReferentsCreator.myCurrentModel);
  }
 else   if (binding.isAnnotationType()) {
    classifier=jetbrains.mps.baseLanguage.structure.Annotation.newInstance(myReferentsCreator.myCurrentModel);
  }
 else   if (binding.isEnum()) {
    classifier=EnumClass.newInstance(myReferentsCreator.myCurrentModel);
  }
 else {
    return false;
  }
  classifier.setName(new String(name[name.length - 1]));
  myReferentsCreator.myBindingMap.put(binding,classifier);
  return true;
}
