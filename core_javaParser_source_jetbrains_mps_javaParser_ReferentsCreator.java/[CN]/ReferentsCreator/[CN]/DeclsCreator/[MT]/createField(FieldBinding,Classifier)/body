{
  Type type=createType(binding.type);
  assert(!binding.isFinal() || !binding.isVolatile());
  VariableDeclaration field;
  if (!binding.isStatic()) {
    jetbrains.mps.baseLanguage.structure.FieldDeclaration fieldDeclaration=jetbrains.mps.baseLanguage.structure.FieldDeclaration.newInstance(myReferentsCreator.myCurrentModel);
    fieldDeclaration.setIsVolatile(binding.isVolatile());
    assert(enclosingClassifier instanceof ClassConcept);
    ((ClassConcept)enclosingClassifier).addField(fieldDeclaration);
    field=fieldDeclaration;
  }
 else {
    StaticFieldDeclaration staticFieldDeclaration=StaticFieldDeclaration.newInstance(myReferentsCreator.myCurrentModel);
    field=staticFieldDeclaration;
    enclosingClassifier.addStaticField(staticFieldDeclaration);
  }
  field.setIsFinal(binding.isFinal());
  field.setType(type);
  field.setName(new String(binding.name));
  myReferentsCreator.myBindingMap.put(binding,field);
  return field;
}
