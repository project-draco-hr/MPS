{
  SourceTypeBinding binding=typeDeclaration.binding;
  if (binding.constantPoolName() == null) {
    return false;
  }
  Classifier classifier=(Classifier)myReferentsCreator.myBindingMap.get(binding);
  try {
    ReferenceBinding superClassBinding=binding.superclass();
    if (superClassBinding != null) {
      assert(binding.superclass().isClass() || binding.superclass().isEnum());
      if (classifier instanceof ClassConcept) {
        ClassConcept classConcept=(ClassConcept)classifier;
        ClassifierType superClass=(ClassifierType)createType(superClassBinding);
        classConcept.setSuperclass(superClass);
      }
    }
    ReferenceBinding[] superInterfaces=binding.superInterfaces();
    for (    ReferenceBinding superInterfaceBinding : superInterfaces) {
      assert(superInterfaceBinding.isInterface());
      ClassifierType superInterface=(ClassifierType)createType(superInterfaceBinding);
      if (classifier instanceof ClassConcept) {
        ClassConcept classConcept=(ClassConcept)classifier;
        classConcept.addImplementedInterface(superInterface);
      }
      if (classifier instanceof Interface) {
        Interface intfc=(Interface)classifier;
        intfc.addExtendedInterface(superInterface);
      }
    }
    myReferentsCreator.myTypeDecls.add(typeDeclaration);
    return true;
  }
 catch (  Throwable e) {
    throw new JavaConverterException(e);
  }
}
