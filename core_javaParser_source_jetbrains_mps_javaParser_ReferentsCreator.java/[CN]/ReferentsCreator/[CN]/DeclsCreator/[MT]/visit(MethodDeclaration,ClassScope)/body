{
  MethodBinding b=methodDeclaration.binding;
  Classifier enclosingClassifier=(Classifier)myReferentsCreator.myBindingMap.get(scope.enclosingSourceType());
  BaseMethodDeclaration newMethod=processMethodBinding(b,enclosingClassifier,methodDeclaration instanceof AnnotationMethodDeclaration);
  SModel model=myReferentsCreator.myCurrentModel;
  TypeParameter[] typeParameters=methodDeclaration.typeParameters;
  if (typeParameters != null) {
    for (    TypeParameter typeParameter : typeParameters) {
      TypeVariableDeclaration typeVariableDeclaration=TypeVariableDeclaration.newInstance(model);
      typeVariableDeclaration.setName(new String(typeParameter.name));
      setTypeVariableBounds(typeParameter,typeVariableDeclaration);
      newMethod.addTypeVariableDeclaration(typeVariableDeclaration);
    }
  }
  newMethod.setReturnType(createType(b.returnType));
  mapParameters(newMethod,methodDeclaration);
  return true;
}
