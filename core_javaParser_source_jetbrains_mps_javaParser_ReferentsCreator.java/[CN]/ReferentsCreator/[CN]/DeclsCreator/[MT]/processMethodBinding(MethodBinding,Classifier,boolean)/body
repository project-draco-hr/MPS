{
  SModel model=myReferentsCreator.myCurrentModel;
  BaseMethodDeclaration result;
  if (b.isStatic()) {
    StaticMethodDeclaration staticMethodDeclaration=StaticMethodDeclaration.newInstance(model);
    staticMethodDeclaration.setVisibility(getMethodVisibility(b));
    result=staticMethodDeclaration;
  }
 else {
    InstanceMethodDeclaration instanceMethodDeclaration=isAnnotation ? jetbrains.mps.baseLanguage.structure.AnnotationMethodDeclaration.newInstance(model) : InstanceMethodDeclaration.newInstance(model);
    instanceMethodDeclaration.setIsAbstract(b.isAbstract());
    instanceMethodDeclaration.setVisibility(getMethodVisibility(b));
    result=instanceMethodDeclaration;
  }
  myReferentsCreator.myBindingMap.put(b,result);
  result.setName(new String(b.selector));
  result.setIsFinal(b.isFinal());
  return result;
}
