{
  final String[] result=new String[1];
  ProjectModelAccess.instance().runCommandInEDT(new Runnable(){
    @Override public void run(){
      if (SModelRepository.getInstance().getModelDescriptor(myModel.getReference()) != null) {
        try {
          final SModel modelDescriptor=myModel;
          Assert.assertNotNull(modelDescriptor);
          SNode node=modelDescriptor.getNode(SNodeId.fromString("6010389230754495469"));
          Assert.assertNotNull(node);
          if (nameToWrite == null) {
            result[0]=SNodeAccessUtil.getProperty(node,"name");
          }
 else {
            SNodeAccessUtil.setProperty(node,"name",nameToWrite);
          }
        }
 catch (        Throwable ignored) {
        }
      }
    }
  }
,myProject);
  DiskMemoryConflictsTest.waitEDT();
  return result[0];
}
