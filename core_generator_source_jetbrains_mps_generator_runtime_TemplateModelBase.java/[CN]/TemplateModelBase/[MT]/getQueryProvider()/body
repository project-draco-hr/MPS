{
  String packageName=getSModelReference().getName().getLongName();
  String queriesClassName=packageName + ".QueriesGenerated";
  try {
    Class<?> qg=getModule().loadClass(queriesClassName);
    if (GeneratorQueryProvider.class.isAssignableFrom(qg)) {
      @SuppressWarnings("unchecked") Class<GeneratorQueryProvider> providerClass=(Class<GeneratorQueryProvider>)qg;
      GeneratorQueryProvider gqp=providerClass.newInstance();
      if (((QueryProviderBase)gqp).needsReflectiveFallback()) {
        ((QueryProviderBase)gqp).useReflectiveFallback(new ReflectiveQueryProvider(qg));
      }
      return gqp;
    }
    return reflectiveProvider(qg);
  }
 catch (  ClassNotFoundException ex) {
    String msg=String.format("Failed to load class with generated queries: %s",queriesClassName);
    Logger.getLogger(TemplateModelInterpreted.class).error(msg,ex);
    return null;
  }
catch (  IllegalAccessException|InstantiationException ex) {
    String msg=String.format("Failed to instantiate class with generated queries: %s",queriesClassName);
    Logger.getLogger(TemplateModelInterpreted.class).error(msg,ex);
    return null;
  }
}
