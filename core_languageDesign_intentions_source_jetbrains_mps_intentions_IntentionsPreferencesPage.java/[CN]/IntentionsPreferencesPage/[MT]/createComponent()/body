{
  initCheckBoxes();
  JPanel panel=new JPanel();
  panel.setLayout(new BoxLayout(panel,BoxLayout.Y_AXIS));
  panel.setBackground(UIManager.getLookAndFeel().getDefaults().getColor("TextArea.background"));
  DefaultMutableTreeNode rootNode=new DefaultMutableTreeNode();
  LinkedHashMap<Language,DefaultMutableTreeNode> languagesToNodes=new LinkedHashMap<Language,DefaultMutableTreeNode>();
  for (  IntentionEnabledCheckBox checkBox : myCheckBoxes) {
    Language language=myIntentionsManager.getIntentionLanguage(checkBox.getIntention());
    if (language != null) {
      DefaultMutableTreeNode languageNode=languagesToNodes.get(language);
      if (languageNode == null) {
        languageNode=new DefaultMutableTreeNode(language,true);
        rootNode.add(languageNode);
        languagesToNodes.put(language,languageNode);
      }
      languageNode.add(new DefaultMutableTreeNode(checkBox,false));
    }
  }
  JTree tree=new JTree(rootNode);
  tree.setRootVisible(false);
  tree.setCellRenderer(new DefaultTreeCellRenderer(){
    @Override public Component getTreeCellRendererComponent(    JTree tree,    Object value,    boolean selected,    boolean expanded,    boolean leaf,    int row,    boolean hasFocus){
      System.out.println(value.getClass());
      if (value instanceof DefaultMutableTreeNode) {
        DefaultMutableTreeNode mutableTreeNode=(DefaultMutableTreeNode)value;
        Object userObject=mutableTreeNode.getUserObject();
        if (userObject instanceof IntentionEnabledCheckBox) {
          return ((IntentionEnabledCheckBox)userObject).getCheckBox();
        }
      }
      return super.getTreeCellRendererComponent(tree,value,selected,expanded,leaf,row,hasFocus);
    }
  }
);
  JScrollPane scrollPane=new JScrollPane(tree);
  return scrollPane;
}
