{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(0xf280165065d5424eL,0xbb1b463a8781b786L,0x1ec532ec2531d2d3L,0x1ec532ec2531d2d4L),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0xf280165065d5424eL,0xbb1b463a8781b786L,0x1ec532ec2531d2d3L,0x1ec532ec2531d2d4L),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return ListSequence.fromList(SModelOperations.nodesIncludingImported(_context.getModel(),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,"jetbrains.mps.baseLanguage.structure.BaseMethodDeclaration"))).removeWhere(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return SNodeOperations.isInstanceOf(it,MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,"jetbrains.mps.baseLanguage.structure.IVisible")) && SLinkOperations.getTarget(SNodeOperations.cast(it,MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,"jetbrains.mps.baseLanguage.structure.IVisible")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x112670d273fL,0x112670d886aL,"visibility")) == _quotation_createNode_8et2et_a0a0a0a0a0a0();
            }
          }
);
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_8et2et_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
