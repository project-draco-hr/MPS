{
  super("",ID);
  this.setIsInternal(false);
  this.setPopup(false);
  try {
    if (BaseGroup.class.isAssignableFrom(CreateRootNodeGroup.class)) {
      this.add(new CreateRootNodeGroup());
    }
 else {
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(CreateRootNodeGroup.class,module.getModuleFqName(),null));
    }
    if (BaseGroup.class.isAssignableFrom(PasteNodeAction.class)) {
      this.add(new PasteNodeAction());
    }
 else {
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(PasteNodeAction.class,module.getModuleFqName(),null));
    }
    this.addSeparator();
    if (BaseGroup.class.isAssignableFrom(DeleteModelsAction.class)) {
      this.add(new DeleteModelsAction());
    }
 else {
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(DeleteModelsAction.class,module.getModuleFqName(),null));
    }
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(module.getClass("jetbrains.mps.ide.actions.CloneModel_Action"),module.getModuleFqName(),null));
    }
    this.addSeparator();
    if (BaseGroup.class.isAssignableFrom(OptimizeImportsAction.class)) {
      this.add(new OptimizeImportsAction());
    }
 else {
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(OptimizeImportsAction.class,module.getModuleFqName(),null));
    }
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(module.getClass("jetbrains.mps.ide.actions.AddMissingImports_Action"),module.getModuleFqName(),null));
    }
    if (BaseGroup.class.isAssignableFrom(ShowReferencesToMissingStuffAction.class)) {
      this.add(new ShowReferencesToMissingStuffAction());
    }
 else {
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(ShowReferencesToMissingStuffAction.class,module.getModuleFqName(),null));
    }
    this.addSeparator();
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(module.getClass("jetbrains.mps.ide.actions.CheckModel_Action"),module.getModuleFqName(),null));
    }
    this.addSeparator();
    if (BaseGroup.class.isAssignableFrom(GenerateModelFilesAction.class)) {
      this.add(new GenerateModelFilesAction());
    }
 else {
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(GenerateModelFilesAction.class,module.getModuleFqName(),null));
    }
    if (BaseGroup.class.isAssignableFrom(GenerateModelTextAction.class)) {
      this.add(new GenerateModelTextAction());
    }
 else {
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(GenerateModelTextAction.class,module.getModuleFqName(),null));
    }
    if (BaseGroup.class.isAssignableFrom(ShowMappingsPartitioningAction.class)) {
      this.add(new ShowMappingsPartitioningAction());
    }
 else {
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(ShowMappingsPartitioningAction.class,module.getModuleFqName(),null));
    }
    this.addSeparator();
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(module.getClass("jetbrains.mps.ide.actions.ShowDifferencesWithModelOnDisk_Action"),module.getModuleFqName(),null));
    }
    this.addSeparator();
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(module.getClass("jetbrains.mps.ide.actions.RevertMemoryChanges_Action"),module.getModuleFqName(),null));
    }
{
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(module.getClass("jetbrains.mps.ide.actions.SaveModel_Action"),module.getModuleFqName(),null));
    }
    this.addSeparator();
    this.addAnchor(ModelActions_ActionGroup.LABEL_ID_refactoring);
    this.addSeparator();
    this.addAnchor(ModelActions_ActionGroup.LABEL_ID_vcs);
    this.addSeparator();
    if (BaseGroup.class.isAssignableFrom(ModelPropertiesAction.class)) {
      this.add(new ModelPropertiesAction());
    }
 else {
      IModule module=MPSModuleRepository.getInstance().getModule(new ModuleReference("jetbrains.mps.ide"));
      this.add(ActionFactory.getInstance().acquireRegisteredAction(ModelPropertiesAction.class,module.getModuleFqName(),null));
    }
  }
 catch (  Throwable t) {
    LOG.error("User group error",t);
  }
}
