{
  if (value == null) {
    if (myUserObjects == null)     return;
    for (int i=0; i < myUserObjects.length; i+=2) {
      if (myUserObjects[i].equals(key)) {
        Object[] newarr=new Object[myUserObjects.length - 2];
        if (i > 0) {
          System.arraycopy(myUserObjects,0,newarr,0,i);
        }
        if (i + 2 < myUserObjects.length) {
          System.arraycopy(myUserObjects,i + 2,newarr,i,newarr.length - i);
        }
        myUserObjects=newarr;
        break;
      }
    }
    if (myUserObjects.length == 0) {
      myUserObjects=null;
    }
    return;
  }
  if (myUserObjects == null) {
    myUserObjects=new Object[]{key,value};
    return;
  }
  for (int i=0; i < myUserObjects.length; i+=2) {
    if (myUserObjects[i].equals(key)) {
      myUserObjects=Arrays.copyOf(myUserObjects,myUserObjects.length,Object[].class);
      myUserObjects[i + 1]=value;
      return;
    }
  }
  Object[] newarr=new Object[myUserObjects.length + 2];
  System.arraycopy(myUserObjects,0,newarr,2,myUserObjects.length);
  newarr[0]=key;
  newarr[1]=value;
  myUserObjects=newarr;
}
