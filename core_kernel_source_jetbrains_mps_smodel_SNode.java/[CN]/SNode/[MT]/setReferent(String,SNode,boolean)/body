{
  if (ourMemberAccessModifier != null) {
    role=ourMemberAccessModifier.getNewReferentRole(myModel,myConceptFqName,role);
  }
  List<SReference> toDelete=new ArrayList<SReference>();
  if (myReferences != null) {
    for (    SReference reference : myReferences) {
      if (reference.getRole().equals(role)) {
        toDelete.add(reference);
      }
    }
  }
  SNode oldReferent=null;
  if (!toDelete.isEmpty()) {
    oldReferent=toDelete.get(0).getTargetNode();
  }
  if (toDelete.size() > 1) {
    LOG.errorWithTrace("ERROR! " + toDelete.size() + " references found for role '"+ role+ "' in "+ this.getDebugText());
  }
  SReference resultReference=null;
  boolean handlerFound=false;
  if (useHandler && !getModel().isLoading()) {
    Set<Pair<SNode,String>> threadSet=ourSetReferentEventHandlersInProgress.get();
    Pair<SNode,String> pair=new Pair<SNode,String>(this,role);
    if (!threadSet.contains(pair)) {
      INodeReferentSetEventHandler handler=CONSTRAINTS_MANAGER.getNodeReferentSetEventHandler(this,role);
      if (handler != null) {
        boolean referenceKept=true;
        handlerFound=true;
        threadSet.add(pair);
        try {
          if (handler instanceof INodeReferenceFullSetHandler) {
            if (((INodeReferenceFullSetHandler)handler).keepsOriginalReference(this,oldReferent,newReferent,GlobalScope.getInstance())) {
              resultReference=doSetReference(role,newReferent,toDelete);
            }
 else {
              referenceKept=false;
            }
          }
 else {
            resultReference=doSetReference(role,newReferent,toDelete);
          }
          handler.processReferentSetEvent(this,oldReferent,newReferent,GlobalScope.getInstance());
          if (!referenceKept) {
            if (myReferences != null) {
              for (              SReference reference : myReferences) {
                if (reference.getRole().equals(role)) {
                  resultReference=reference;
                  break;
                }
              }
            }
          }
        }
  finally {
          threadSet.remove(pair);
        }
      }
    }
  }
  if (!handlerFound) {
    resultReference=doSetReference(role,newReferent,toDelete);
  }
  return resultReference;
}
