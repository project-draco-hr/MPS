{
  final SRepository repo=myRepository;
  final SModel model=myModel;
  if (repo == null)   return;
  if (repo instanceof DisposedRepository) {
    showDisposedMessage();
    return;
  }
  org.jetbrains.mps.openapi.module.ModelAccess modelAccess=repo.getModelAccess();
  modelAccess.checkReadAccess();
  if (model != null && model.isUpdateMode())   return;
  modelAccess.checkWriteAccess();
  if (!UndoHelper.getInstance().isInsideUndoableCommand()) {
    throw new IllegalModelChangeError("registered node can only be modified inside undoable command or in 'loading' model " + org.jetbrains.mps.openapi.model.SNodeUtil.getDebugText(this));
  }
}
