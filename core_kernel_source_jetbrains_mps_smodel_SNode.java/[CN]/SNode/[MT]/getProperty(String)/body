{
  propertyRead(propertyName);
  firePropertyReadAccessInEditor(propertyName,false);
  String propertyValue=null;
  if (myProperties != null) {
    if (ourMemberAccessModifier != null) {
      String conceptName=myConceptFqName == null ? getConceptNameFromDebugInfo() : myConceptFqName;
      if (conceptName != null) {
        propertyName=ourMemberAccessModifier.getNewPropertyName(getModel(),conceptName,propertyName);
      }
    }
    int index=getPropertyIndex(propertyName);
    if (index != -1) {
      propertyValue=myProperties[index + 1];
    }
  }
 else   if (myConceptId != null) {
    SPropertyId pid=((DebugRegistryImpl)MPSModuleRepository.getInstance().getDebugRegistry()).getPropertyId(myConceptId,propertyName);
    if (pid != null) {
      propertyValue=getProperty(pid);
    }
 else {
      for (      SAbstractConcept c : SConceptUtil.getAllSuperConcepts(new SConceptAdapter(myConceptId))) {
        pid=((DebugRegistryImpl)MPSModuleRepository.getInstance().getDebugRegistry()).getPropertyId(c.getId(),propertyName);
        if (pid != null) {
          propertyValue=getProperty(pid);
          break;
        }
      }
    }
  }
  fireNodePropertyReadAccess(propertyName,propertyValue);
  return propertyValue;
}
