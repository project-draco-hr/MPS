{
  assertCanChange();
  propertyValue=InternUtil.intern(propertyValue);
  final Pair<Boolean,String> isSet;
  if (workingMode() == Mode.NAME) {
    isSet=setProperty_byName(pid2name(property),propertyValue);
  }
 else {
    isSet=setProperty_byId(property,propertyValue);
  }
  if (!isSet.o1)   return;
  final String finalPropertyValue=propertyValue;
  performUndoableAction(new Computable<SNodeUndoableAction>(){
    @Override public SNodeUndoableAction compute(){
      return new PropertyChangeUndoableAction(SNode.this,pid2name(property),isSet.o2,finalPropertyValue);
    }
  }
);
  if (needFireEvent()) {
    myModel.firePropertyChangedEvent(this,pid2name(property),isSet.o2,propertyValue);
  }
  propertyChanged(property,isSet.o2,propertyValue);
}
