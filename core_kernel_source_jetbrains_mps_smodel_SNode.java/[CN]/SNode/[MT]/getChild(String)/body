{
  ModelAccess.assertLegalRead(this);
  if (ourMemberAccessModifier != null) {
    role=ourMemberAccessModifier.getNewChildRole(myModel,myConceptFqName,role);
  }
  fireNodeReadAccess();
  int count=0;
  SNode foundChild=null;
  boolean isOldAttributeRole=AttributeOperations.isOldAttributeRole(role);
  for (SNode child=firstChild(); child != null; child=child.nextSibling()) {
    if (role.equals(child.getRole())) {
      foundChild=child;
      count++;
    }
 else     if (isOldAttributeRole && AttributeOperations.isOldRoleForNewAttribute(child,role)) {
      foundChild=child;
      count++;
    }
  }
  if (count > 1) {
    String errorMessage="ERROR: SNode.getChild() executed when there are " + count + " children for role "+ role+ " in "+ NameUtil.shortNameFromLongName(getClass().getName())+ "["+ getId()+ "] "+ getModel().getSModelReference()+ "\n";
    errorMessage+="they are : " + getChildren(role);
    LOG.error(errorMessage,new Throwable(),this);
  }
  NodeReadEventsCaster.fireNodeChildReadAccess(this,role,foundChild);
  return foundChild;
}
