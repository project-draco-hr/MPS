{
  myHeader=header;
  myShowAllOnEmptyText=showAllOnEmptyText;
  setLayout(new BorderLayout());
  if (myHeader != null) {
    myMainPanel=new JPanel(new GridLayout(2,1));
    myHeaderLabel=new JPanel(new BorderLayout(10,0));
    myHeaderLabel.add(new JLabel(myHeader),BorderLayout.WEST);
    myMainPanel.add(myHeaderLabel);
  }
 else {
    myMainPanel=new JPanel(new GridLayout(1,1));
  }
  myMainPanel.add(myTextField=new JTextField(""));
  add(myMainPanel,BorderLayout.NORTH);
  myList.setFocusable(false);
  myList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
  setListCellRenderer(new ChooseItemWindowCellRenderer<Item>(this));
  myList.addMouseListener(new MouseAdapter(){
    @Override public void mouseClicked(    MouseEvent e){
      if (e.getClickCount() == 2) {
        doComplete();
      }
    }
  }
);
  add(ScrollPaneFactory.createScrollPane(myList),BorderLayout.CENTER);
  myMainPanel.registerKeyboardAction(new AbstractAction(){
    @Override public void actionPerformed(    ActionEvent e){
      doComplete();
    }
  }
,KeyStroke.getKeyStroke("ENTER"),JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  myMainPanel.registerKeyboardAction(new AbstractAction(){
    @Override public void actionPerformed(    ActionEvent e){
      for (      String name : myNames) {
        if (name != null && name.startsWith(myTextField.getText())) {
          myTextField.setText(name.toString());
          return;
        }
      }
    }
  }
,KeyStroke.getKeyStroke("ctrl SPACE"),JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  myMainPanel.registerKeyboardAction(new AbstractAction(){
    @Override public void actionPerformed(    ActionEvent e){
      int index=myList.getSelectedIndex();
      if (index == -1)       return;
      myList.setSelectedIndex(Math.max((index - 1),0));
      myList.ensureIndexIsVisible(myList.getSelectedIndex());
    }
  }
,KeyStroke.getKeyStroke("UP"),JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  myMainPanel.registerKeyboardAction(new AbstractAction(){
    @Override public void actionPerformed(    ActionEvent e){
      int index=myList.getSelectedIndex();
      if (index == -1)       return;
      myList.setSelectedIndex(Math.min((index + 1),myList.getModel().getSize() - 1));
      myList.ensureIndexIsVisible(myList.getSelectedIndex());
    }
  }
,KeyStroke.getKeyStroke("DOWN"),JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
  myTextField.getDocument().addDocumentListener(new DocumentListener(){
    @Override public void insertUpdate(    DocumentEvent e){
      updateState();
    }
    @Override public void removeUpdate(    DocumentEvent e){
      updateState();
    }
    @Override public void changedUpdate(    DocumentEvent e){
      updateState();
    }
  }
);
}
