{
  List<SliceInfo> result=new ArrayList<SliceInfo>();
  if (myNodesToSliceWith.isEmpty())   return result;
  EquationManager equationManager=typeCheckingContext.getEquationManager();
  IWrapper representator1=equationManager.getRepresentatorWrapper(NodeWrapper.fromNode(type1,equationManager));
  IWrapper representator2=equationManager.getRepresentatorWrapper(NodeWrapper.fromNode(type2,equationManager));
  for (  SNode node : myNodesToSliceWith) {
    SNode type=typeCheckingContext.getMainContext().get(node);
    if (type != null) {
      NodeWrapper typeWrapper=NodeWrapper.fromNode(type,equationManager);
      IWrapper representatorWrapper=equationManager.getRepresentatorWrapper(typeWrapper);
      if (representatorWrapper.equals(representator1)) {
        SliceInfo sliceInfo=new SliceInfo(node,type1,equationInfo.getRuleModel(),equationInfo.getRuleId(),reason,CollectionUtil.list(equationInfo));
        mySliceInfos.add(sliceInfo);
        result.add(sliceInfo);
      }
      if (representatorWrapper.equals(representator2)) {
        SliceInfo sliceInfo=new SliceInfo(node,type2,equationInfo.getRuleModel(),equationInfo.getRuleId(),reason,CollectionUtil.list(equationInfo));
        mySliceInfos.add(sliceInfo);
        result.add(sliceInfo);
      }
    }
  }
  return result;
}
