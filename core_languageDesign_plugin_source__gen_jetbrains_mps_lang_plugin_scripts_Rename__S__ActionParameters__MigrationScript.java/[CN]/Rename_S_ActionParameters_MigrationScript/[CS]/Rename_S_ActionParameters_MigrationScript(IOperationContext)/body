{
  super("rename \"S...\" action parameters");
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "rename \"SNODE\" action parameters";
    }
    public String getAdditionalInfo(){
      return "rename \"SNODE\" action parameters";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"key",false) == SLinkOperations.getTarget(new Rename_S_ActionParameters_MigrationScript.QuotationClass_obtej7_a0a0a0d0a0a0b0a().createNode(),"variableDeclaration",false);
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"key",SLinkOperations.getTarget(new Rename_S_ActionParameters_MigrationScript.QuotationClass_obtej7_a0a0a0a4a0a0a1a0().createNode(),"variableDeclaration",false),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
  this.addRefactoring(new AbstractMigrationRefactoring(operationContext){
    public String getName(){
      return "rename \"SNODES\" action parameters";
    }
    public String getAdditionalInfo(){
      return "rename \"SNODES\" action parameters";
    }
    public String getFqNameOfConceptToSearchInstances(){
      return "jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration";
    }
    public boolean isApplicableInstanceNode(    SNode node){
      return SLinkOperations.getTarget(node,"key",false) == SLinkOperations.getTarget(new Rename_S_ActionParameters_MigrationScript.QuotationClass_obtej7_a0a0a0d0a0a0c0a().createNode(),"variableDeclaration",false);
    }
    public void doUpdateInstanceNode(    SNode node){
      SLinkOperations.setTarget(node,"key",SLinkOperations.getTarget(new Rename_S_ActionParameters_MigrationScript.QuotationClass_obtej7_a0a0a0a4a0a0a2a0().createNode(),"variableDeclaration",false),false);
    }
    public boolean isShowAsIntention(){
      return false;
    }
  }
);
}
