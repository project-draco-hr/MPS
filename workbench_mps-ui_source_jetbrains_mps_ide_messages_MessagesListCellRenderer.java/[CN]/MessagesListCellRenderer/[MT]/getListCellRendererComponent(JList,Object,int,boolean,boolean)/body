{
  JLabel component=(JLabel)super.getListCellRendererComponent(list,value,index,isSelected,cellHasFocus);
  final IMessage message=(IMessage)value;
  component.setBackground(isSelected ? myConsoleBackgroundDarker : myConsoleBackground);
  component.setBorder(index == indexUnderMouse ? new LineBorder(myConsoleBackgroundBrighter,1,true) : myEmptyBorder);
  StringBuilder sb=new StringBuilder(120);
  new Formatter(sb).format("%tT\t: ",new Date(message.getCreationTime()));
  if (message.getSender() != null) {
    sb.append('[');
    sb.append(message.getSender());
    sb.append(']');
    sb.append(' ');
  }
  sb.append(message.getText());
  if (message.getException() != null) {
    sb.append(" (right-click to see exception)");
  }
  String text=sb.toString();
  if (message.getHintObject() != null) {
    component.setToolTipText(String.valueOf(message.getHintObject()));
  }
 else {
    component.setToolTipText(null);
  }
switch (message.getKind()) {
case WARNING:
{
      component.setIcon(Icons.WARNING_ICON);
      component.setForeground(myWarningAttributes.getForegroundColor());
      break;
    }
case ERROR:
{
    component.setIcon(Icons.ERROR_ICON);
    component.setForeground(myErrorAttributes.getForegroundColor());
    break;
  }
case INFORMATION:
{
  component.setIcon(Icons.INFORMATION_ICON);
}
default :
{
component.setForeground(myAttributes.getForegroundColor());
break;
}
}
component.setText(text);
return component;
}
