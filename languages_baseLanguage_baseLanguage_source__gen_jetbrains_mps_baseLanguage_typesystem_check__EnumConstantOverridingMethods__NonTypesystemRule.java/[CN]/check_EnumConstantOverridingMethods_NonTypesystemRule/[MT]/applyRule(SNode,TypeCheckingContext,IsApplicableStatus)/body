{
  if ((SNodeOperations.getParent(enumConstant) == null) || !(SNodeOperations.isInstanceOf(SNodeOperations.getParent(enumConstant),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass")))) {
    return;
  }
  OverridingMethodsFinder finder=new OverridingMethodsFinder(SNodeOperations.cast(SNodeOperations.getParent(enumConstant),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass")),enumConstant);
  for (  SNode overridingMethod : SetSequence.fromSet(finder.getOverridingMethods())) {
    Set<Tuples._2<SNode,SNode>> overridenMethods=finder.getOverridenMethods(overridingMethod);
    for (Iterator<Tuples._2<SNode,SNode>> it=SetSequence.fromSet(overridenMethods).iterator(); it.hasNext(); ) {
      SNode overridenMethod=it.next()._0();
      SNode returnType=SLinkOperations.getTarget(overridenMethod,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1fdL,"returnType"));
      SNode ancestor=SNodeOperations.cast(SNodeOperations.getParent(overridenMethod),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x101d9d3ca30L,"jetbrains.mps.baseLanguage.structure.Classifier"));
      SNode overridingMethodParent=SNodeOperations.getParent(overridingMethod);
      SNode resolvedReturnType;
      if (SNodeOperations.isInstanceOf(overridingMethodParent,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367388b3L,"jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration"))) {
        SNode enumClass=SNodeOperations.cast(SNodeOperations.getParent(SNodeOperations.cast(overridingMethodParent,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367388b3L,"jetbrains.mps.baseLanguage.structure.EnumConstantDeclaration"))),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass"));
        SNode dummy=SConceptOperations.createNewNode(SNodeOperations.asInstanceConcept(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x1107e0cb103L,"jetbrains.mps.baseLanguage.structure.AnonymousClass")));
        SLinkOperations.setTarget(dummy,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x1107e0cb103L,0x1107e0fd2a0L,"classifier"),enumClass);
        resolvedReturnType=Classifier_Behavior.call_getWithResolvedTypevars_3305065273710852527(dummy,returnType,ancestor,overridingMethod,overridenMethod);
      }
 else {
{
          MessageTarget errorTarget=new NodeMessageTarget();
          IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(overridingMethodParent,"This node is not supposed to override methods","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","8960718351573012055",null,errorTarget);
        }
        return;
      }
      if (!(TypeChecker.getInstance().getSubtypingManager().isSubtype(SLinkOperations.getTarget(overridingMethod,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1fdL,"returnType")),resolvedReturnType))) {
{
          MessageTarget errorTarget=new NodeMessageTarget();
          IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(SLinkOperations.getTarget(overridingMethod,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8cc56b1fcL,0xf8cc56b1fdL,"returnType")),"method's return type is incompatible with overridden method ","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","8960718351573012062",null,errorTarget);
        }
        break;
      }
    }
  }
}
