{
  ModelAccess.instance().runCommandInEDT(new Runnable(){
    public void run(){
      SModelDescriptor descriptor=BuildGeneratorImpl.this.getSModelDescriptor(new EmptyProgressIndicator());
      descriptor.getModule().getModuleDescriptor().getUsedLanguages().add(ModuleRepositoryFacade.getInstance().getModule("jetbrains.mps.build",Language.class).getModuleReference());
      descriptor.getModule().getModuleDescriptor().getUsedLanguages().add(ModuleRepositoryFacade.getInstance().getModule("jetbrains.mps.build.mps",Language.class).getModuleReference());
      descriptor.getSModel().addLanguage(ModuleRepositoryFacade.getInstance().getModule("jetbrains.mps.build",Language.class).getModuleReference());
      descriptor.getSModel().addLanguage(ModuleRepositoryFacade.getInstance().getModule("jetbrains.mps.build.mps",Language.class).getModuleReference());
      final EditableSModelDescriptor targetModelDescriptor=((EditableSModelDescriptor)descriptor);
      SNode buildProject=createMPSLayout(targetModelDescriptor,BuildGeneratorImpl.this.getProjectName(),BuildGeneratorImpl.this.myProject.getBaseDir().getPath(),BuildGeneratorImpl.this.getModules());
      ModelAccess.instance().runWriteActionInCommand(new Runnable(){
        public void run(){
          targetModelDescriptor.getModule().save();
          targetModelDescriptor.save();
        }
      }
);
      NavigationSupport.getInstance().openNode(myOperationContext,buildProject,true,true);
      MPSProject project=BuildGeneratorImpl.this.myProject.getComponent(MPSProject.class);
      project.addModule(descriptor.getModule().getModuleReference());
    }
  }
,myProject.getComponent(MPSProject.class));
}
