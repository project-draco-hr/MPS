{
  boolean result=ListSequence.fromList(SNodeOperations.getAllSiblings(_context.getNode(),false)).any(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.workflow.structure.BwfJavaModule") && "IntelliJ".equals(SPropertyOperations.getString(SNodeOperations.cast(it,"jetbrains.mps.build.workflow.structure.BwfJavaModule"),"compiler"));
    }
  }
);
  if (result) {
    if (!(ListSequence.fromList(SNodeOperations.getAllSiblings(_context.getNode(),false)).any(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.workflow.structure.BwfMacro") && "idea_home".equals(SPropertyOperations.getString(SNodeOperations.cast(it,"jetbrains.mps.build.workflow.structure.BwfMacro"),"name"));
      }
    }
))) {
      _context.showErrorMessage(ListSequence.fromList(SNodeOperations.getAllSiblings(_context.getNode(),false)).where(new IWhereFilter<SNode>(){
        public boolean accept(        SNode it){
          return SNodeOperations.isInstanceOf(it,"jetbrains.mps.build.workflow.structure.BwfJavaModule") && "IntelliJ".equals(SPropertyOperations.getString(SNodeOperations.cast(it,"jetbrains.mps.build.workflow.structure.BwfJavaModule"),"compiler"));
        }
      }
).first(),"${idea_home} macro is required to use IntelliJ compiler");
    }
  }
  return result;
}
