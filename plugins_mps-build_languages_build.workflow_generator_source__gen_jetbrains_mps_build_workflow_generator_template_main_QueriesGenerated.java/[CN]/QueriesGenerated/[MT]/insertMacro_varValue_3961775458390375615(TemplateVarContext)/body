{
  StringBuilder res=new StringBuilder();
  Set<String> used=new HashSet<String>();
  Iterable<SNode> dependencies=SLinkOperations.getChildren(_context.getNode(),MetaAdapterFactory.getContainmentLink(0x698a8d22a10447a0L,0xba8d10e3ec237f13L,0x2670d5989d5a6273L,0x2670d5989d5ace5eL,"dependencies"));
  for (  SNode part : ((List<SNode>)_context.getVariable("var:taskParts"))) {
    dependencies=Sequence.fromIterable(dependencies).concat(ListSequence.fromList(SLinkOperations.getChildren(part,MetaAdapterFactory.getContainmentLink(0x698a8d22a10447a0L,0xba8d10e3ec237f13L,0x36fb0dc9fd32c1b8L,0x36fb0dc9fd37a1c2L,"additionalDependencies"))));
  }
  for (  SNode dep : dependencies) {
    String d=SPropertyOperations.getString(SLinkOperations.getTarget(dep,MetaAdapterFactory.getReferenceLink(0x698a8d22a10447a0L,0xba8d10e3ec237f13L,0x2670d5989d5ace56L,0x2670d5989d5ace57L,"target")),MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name"));
    if (used.add(d)) {
      if (res.length() > 0) {
        res.append(", ");
      }
      res.append(d);
    }
  }
  return res.toString();
}
