{
  SNode referenceMacro=SNodeOperations.getAncestor(thisNode,"jetbrains.mps.lang.generator.structure.ReferenceMacro",false,false);
  SNode attributedNode=SNodeOperations.getParent(referenceMacro);
  String linkRole=AttributesRolesUtil.getLinkRoleFromLinkAttributeRole(referenceMacro.getRole_());
  ConceptAndSuperConceptsScope linkSearchScope=new ConceptAndSuperConceptsScope(((AbstractConceptDeclaration)SNodeOperations.getAdapter(SNodeOperations.getConceptDeclaration(attributedNode))));
  LinkDeclaration link_=linkSearchScope.getMostSpecificLinkDeclarationByRole(linkRole);
  SNode link=SNodeOperations.cast(BaseAdapter.fromAdapter(link_),"jetbrains.mps.lang.structure.structure.LinkDeclaration");
  SNode targetConcept=SLinkOperations.getTarget(link,"target",false);
  SNode expectedNodeType=new ReferenceMacro_GetReferent_Behavior.QuotationClass_4978_l523emnexk85().createNode(targetConcept);
  if (SConceptOperations.isSubConceptOf(targetConcept,"jetbrains.mps.lang.core.structure.IResolveInfo")) {
    return new ReferenceMacro_GetReferent_Behavior.QuotationClass_4978_l523emnexk9w().createNode(targetConcept);
  }
  return expectedNodeType;
}
