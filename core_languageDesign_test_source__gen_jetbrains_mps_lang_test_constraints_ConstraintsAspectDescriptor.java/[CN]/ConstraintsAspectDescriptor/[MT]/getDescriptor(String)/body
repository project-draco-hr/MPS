{
  if ("jetbrains.mps.lang.test.structure.TestNodeAnnotation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.TestNodeAnnotation"));
  }
  if ("jetbrains.mps.lang.test.structure.TestNodeReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new TestNodeReference_Constraints());
  }
  if ("jetbrains.mps.lang.test.structure.AssertMatch".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.AssertMatch"));
  }
  if ("jetbrains.mps.lang.test.structure.AbstractNodeAssert".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.AbstractNodeAssert"));
  }
  if ("jetbrains.mps.lang.test.structure.CheckNodeForErrors".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.CheckNodeForErrors"));
  }
  if ("jetbrains.mps.lang.test.structure.NodePropertiesContainer".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.NodePropertiesContainer"));
  }
  if ("jetbrains.mps.lang.test.structure.NodeProperty".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.NodeProperty"));
  }
  if ("jetbrains.mps.lang.test.structure.NodeErrorPropety".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.NodeErrorPropety"));
  }
  if ("jetbrains.mps.lang.test.structure.NodeWarningProperty".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.NodeWarningProperty"));
  }
  if ("jetbrains.mps.lang.test.structure.NodeReachable".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.NodeReachable"));
  }
  if ("jetbrains.mps.lang.test.structure.NodeTypeProperty".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.NodeTypeProperty"));
  }
  if ("jetbrains.mps.lang.test.structure.NodeOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.NodeOperation"));
  }
  if ("jetbrains.mps.lang.test.structure.NodeOperationsContainer".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.NodeOperationsContainer"));
  }
  if ("jetbrains.mps.lang.test.structure.TypesCheckOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.TypesCheckOperation"));
  }
  if ("jetbrains.mps.lang.test.structure.CheckDataFlowOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.CheckDataFlowOperation"));
  }
  if ("jetbrains.mps.lang.test.structure.NodeUnreachable".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.NodeUnreachable"));
  }
  if ("jetbrains.mps.lang.test.structure.VariableInialized".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.VariableInialized"));
  }
  if ("jetbrains.mps.lang.test.structure.VariableLive".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.VariableLive"));
  }
  if ("jetbrains.mps.lang.test.structure.NodesTestCase".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.NodesTestCase"));
  }
  if ("jetbrains.mps.lang.test.structure.NodesTestMethod".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.NodesTestMethod"));
  }
  if ("jetbrains.mps.lang.test.structure.TestNode".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.TestNode"));
  }
  if ("jetbrains.mps.lang.test.structure.CheckNodeDataflow".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.CheckNodeDataflow"));
  }
  if ("jetbrains.mps.lang.test.structure.ProjectExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.ProjectExpression"));
  }
  if ("jetbrains.mps.lang.test.structure.ModelExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.ModelExpression"));
  }
  if ("jetbrains.mps.lang.test.structure.SimpleNodeTest".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.SimpleNodeTest"));
  }
  if ("jetbrains.mps.lang.test.structure.EditorExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.EditorExpression"));
  }
  if ("jetbrains.mps.lang.test.structure.InvokeIntentionStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.InvokeIntentionStatement"));
  }
  if ("jetbrains.mps.lang.test.structure.EditorOperation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.EditorOperation"));
  }
  if ("jetbrains.mps.lang.test.structure.INodeAnnotattion".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.INodeAnnotattion"));
  }
  if ("jetbrains.mps.lang.test.structure.TypeKeyStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.TypeKeyStatement"));
  }
  if ("jetbrains.mps.lang.test.structure.PressKeyStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.PressKeyStatement"));
  }
  if ("jetbrains.mps.lang.test.structure.EditorTestCase".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.EditorTestCase"));
  }
  if ("jetbrains.mps.lang.test.structure.AnonymousCellAnnotation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.AnonymousCellAnnotation"));
  }
  if ("jetbrains.mps.lang.test.structure.MockAnnotation".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.MockAnnotation"));
  }
  if ("jetbrains.mps.lang.test.structure.NodeTypeSetProperty".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.NodeTypeSetProperty"));
  }
  if ("jetbrains.mps.lang.test.structure.ExpressionContainer".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.ExpressionContainer"));
  }
  if ("jetbrains.mps.lang.test.structure.SwitchToInspector".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.SwitchToInspector"));
  }
  if ("jetbrains.mps.lang.test.structure.EditorComponentExpression".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.EditorComponentExpression"));
  }
  if ("jetbrains.mps.lang.test.structure.TestInfo".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.TestInfo"));
  }
  if ("jetbrains.mps.lang.test.structure.InvokeActionStatement".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.InvokeActionStatement"));
  }
  if ("jetbrains.mps.lang.test.structure.ActionReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.ActionReference"));
  }
  if ("jetbrains.mps.lang.test.structure.BootstrapActionReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.BootstrapActionReference"));
  }
  if ("jetbrains.mps.lang.test.structure.MPSActionReference".equals(fqName)) {
    return new DataHolderConstraintsDescriptor(new EmptyConstraintsDataHolder("jetbrains.mps.lang.test.structure.MPSActionReference"));
  }
  return null;
}
