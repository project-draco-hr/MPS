{
  Map<Edge,Integer> edgeLengths=MapSequence.<Edge,Integer>fromMap(new HashMap<Edge,Integer>());
  for (  Edge edge : ListSequence.<Edge>fromList(myHorConstraintsGraph.getEdges())) {
    MapSequence.<Edge,Integer>fromMap(edgeLengths).put(edge,myUnitLength);
  }
  for (  Edge edge : ListSequence.<Edge>fromList(myVerConstraintsGraph.getEdges())) {
    MapSequence.<Edge,Integer>fromMap(edgeLengths).put(edge,myUnitLength);
  }
  for (  Edge edge : SetSequence.<Edge>fromSet(MapSequence.fromMap(myEdgeLengths).keySet())) {
    MapSequence.<Edge,Integer>fromMap(edgeLengths).put(MapSequence.<Edge,Edge>fromMap(myEdgeMap).get(edge),MapSequence.<Edge,Integer>fromMap(myEdgeLengths).get(edge));
  }
  for (  Node node : SetSequence.<Node>fromSet(MapSequence.fromMap(nodeDirectionSizes).keySet())) {
    for (    Edge edge : ListSequence.<Edge>fromList(node.getEdges())) {
      Dart sourceDart=myEmbeddedGraph.getSourceDart(edge,node);
      MapSequence.<Edge,Integer>fromMap(edgeLengths).put(MapSequence.<Edge,Edge>fromMap(myEdgeMap).get(edge),MapSequence.<Direction2D,Integer>fromMap(MapSequence.<Node,Map<Direction2D,Integer>>fromMap(nodeDirectionSizes).get(node)).get(MapSequence.<Dart,Direction2D>fromMap(myDirections).get(sourceDart)));
    }
  }
  for (  Edge edge : SetSequence.<Edge>fromSet(MapSequence.fromMap(edgeExtentions).keySet())) {
    Edge curEdge=ListSequence.<Edge>fromList(historyManager.getHistory(edge)).first();
    Edge constraintEdge=MapSequence.<Edge,Edge>fromMap(myEdgeMap).get(curEdge);
    MapSequence.<Edge,Integer>fromMap(edgeLengths).put(constraintEdge,MapSequence.<Edge,Integer>fromMap(edgeLengths).get(constraintEdge) + MapSequence.<Edge,Integer>fromMap(edgeExtentions).get(edge));
  }
  Map<Node,Integer> horNumbering=WeightedTopologicalNumbering.number(myHorConstraintsGraph,edgeLengths);
  Map<Node,Integer> verNjumbering=WeightedTopologicalNumbering.number(myVerConstraintsGraph,edgeLengths);
  Map<Node,Point> coordinates=MapSequence.<Node,Point>fromMap(new HashMap<Node,Point>());
  for (  Node node : ListSequence.<Node>fromList(myGraph.getNodes())) {
    Node horSeg=MapSequence.<Node,Node>fromMap(myHorNodeMap).get(node);
    Node verSeg=MapSequence.<Node,Node>fromMap(myVerNodeMap).get(node);
    MapSequence.<Node,Point>fromMap(coordinates).put(node,new Point(MapSequence.<Node,Integer>fromMap(verNjumbering).get(verSeg),MapSequence.<Node,Integer>fromMap(horNumbering).get(horSeg)));
  }
  return coordinates;
}
