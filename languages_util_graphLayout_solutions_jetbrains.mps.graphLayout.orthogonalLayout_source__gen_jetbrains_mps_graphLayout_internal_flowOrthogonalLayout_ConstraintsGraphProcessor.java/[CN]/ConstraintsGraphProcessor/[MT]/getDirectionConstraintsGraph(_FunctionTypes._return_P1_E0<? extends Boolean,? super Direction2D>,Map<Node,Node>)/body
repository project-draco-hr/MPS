{
  Map<Node,Integer> components=ConnectivityComponents.getComponents(myGraph,new _FunctionTypes._return_P1_E0<Boolean,Edge>(){
    public Boolean invoke(    Edge edge){
      Dart dart=ListSequence.<Dart>fromList(myEmbeddedGraph.getDarts(edge)).getElement(0);
      return directionFilter.invoke(MapSequence.<Dart,Direction2D>fromMap(myDirections).get(dart));
    }
  }
);
  List<List<Node>> componentsList=ConnectivityComponents.getComponentsList(components);
  Graph constraintsCraph=new Graph();
  for (  List<Node> nodeList : ListSequence.<List<Node>>fromList(componentsList)) {
    Node componentNode=constraintsCraph.createNode();
    for (    Node node : ListSequence.<Node>fromList(nodeList)) {
      MapSequence.<Node,Node>fromMap(nodeMap).put(node,componentNode);
    }
  }
  return constraintsCraph;
}
