{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(0x3304fc6e7c6b401eL,0xa016b944934bb21fL,0x11fe0d91491L,0x11fe0d95bdfL),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(0x3304fc6e7c6b401eL,0xa016b944934bb21fL,0x11fe0d91491L,0x11fe0d95bdfL),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          SNode ms=SNodeOperations.getNodeAncestor(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(0x3304fc6e7c6b401eL,0xa016b944934bb21fL,0x11fe0ca1899L,"jetbrains.mps.baseLanguage.math.structure.MathSymbol"),true,false);
          List<SNode> msi=MathSymbol_BehaviorDescriptor.getEmptyIndexList_idi0Okz4g.invoke(ms);
          MathSymbol_BehaviorDescriptor.getVisibleIndices_idhZx_LLY.invoke(ms,_context.getEnclosingNode(),msi);
          return msi;
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_cdbkmw_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
