{
  List<SNode> supertypes=ListSequence.fromList(new ArrayList<SNode>());
  String rtSig=FunctionType_Behavior.call_getRuntimeClassName_1230472987259(ft) + "." + FunctionType_Behavior.call_getRuntimeSignature_1213877404927(ft);
  SNode ice=MapSequence.fromMap(RuntimeUtils.getRuntimeClassifiersMap()).get(rtSig);
  if (SNodeOperations.isInstanceOf(ice,"jetbrains.mps.baseLanguage.structure.Interface")) {
    SNode ct=new supertypesOf_FunctionType_SubtypingRule.QuotationClass_8hodjs_a0a0a3a0().createNode(ice,typeCheckingContext);
    if ((FunctionType_Behavior.call_getResultType_1230475757059(ft) != null)) {
      ListSequence.fromList(SLinkOperations.getTargets(ct,"parameter",true)).addElement(SNodeOperations.copyNode(FunctionType_Behavior.call_getResultType_1230475757059(ft)));
    }
    for (    SNode pt : SLinkOperations.getTargets(ft,"parameterType",true)) {
      ListSequence.fromList(SLinkOperations.getTargets(ct,"parameter",true)).addElement(SNodeOperations.copyNode(pt));
    }
    supertypes=ListSequence.fromList(new ArrayList<SNode>());
  }
  return supertypes;
}
