{
  List<SNode> supertypes=Collections.emptyList();
  String rtSig="_FunctionTypes." + FunctionType_Behavior.call_getRuntimeSignature_1213877404927(ft);
  List<SNode> interfaces=RulesUtil_Closures.getInterfaces();
  for (  SNode ice : interfaces) {
    if (rtSig.equals(SPropertyOperations.getString(ice,"name"))) {
      SNode ct=new _Quotations.QuotationClass_3().createNode(ice);
      if ((SLinkOperations.getTarget(ft,"resultType",true) != null) && !(SNodeOperations.isInstanceOf(SLinkOperations.getTarget(ft,"resultType",true),"jetbrains.mps.baseLanguage.structure.VoidType"))) {
        SLinkOperations.addChild(ct,"parameter",SNodeOperations.copyNode(SLinkOperations.getTarget(ft,"resultType",true)));
      }
      for (      SNode pt : SLinkOperations.getTargets(ft,"parameterType",true)) {
        SLinkOperations.addChild(ct,"parameter",SNodeOperations.copyNode(pt));
      }
      supertypes=Collections.singletonList(ct);
      break;
    }
  }
  return supertypes;
}
