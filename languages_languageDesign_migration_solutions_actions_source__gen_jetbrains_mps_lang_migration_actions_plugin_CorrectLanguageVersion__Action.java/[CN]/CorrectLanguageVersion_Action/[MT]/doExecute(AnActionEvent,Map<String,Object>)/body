{
  try {
    final Language lang=((Language)((SModule)MapSequence.fromMap(_params).get("module")));
    SModel mig=LanguageAspect.MIGRATION.get(lang);
    List<SNode> scripts=SModelOperations.roots(((SModel)mig),MetaAdapterFactory.getConcept(new UUID(-8037690291156860282l,-7505894832713754871l),8352104482584315555l,"jetbrains.mps.lang.migration.structure.MigrationScript"));
    if (ListSequence.fromList(scripts).isNotEmpty()) {
      int maxFrom=SPropertyOperations.getInteger(ListSequence.fromList(scripts).sort(new ISelector<SNode,Integer>(){
        public Integer select(        SNode it){
          return SPropertyOperations.getInteger(it,MetaAdapterFactory.getProperty(new UUID(-8037690291156860282l,-7505894832713754871l),8352104482584315555l,5820409521797704727l,"fromVersion"));
        }
      }
,false).first(),MetaAdapterFactory.getProperty(new UUID(-8037690291156860282l,-7505894832713754871l),8352104482584315555l,5820409521797704727l,"fromVersion"));
      lang.setLanguageVersion(maxFrom + 1);
    }
 else {
      final int v=lang.getLanguageVersion();
      SwingUtilities.invokeLater(new Runnable(){
        public void run(){
          InputValidator validator=new InputValidator(){
            public boolean checkInput(            String s){
              try {
                return Integer.parseInt(s) >= 0;
              }
 catch (              NumberFormatException e) {
                return false;
              }
            }
            public boolean canClose(            String s){
              return checkInput(s);
            }
          }
;
          final String result=Messages.showInputDialog(((Project)MapSequence.fromMap(_params).get("project")),"No scripts found\n" + "Current language version is " + v + "\n"+ "Please enter new version","Set Language Version",null,"0",validator);
          if (result == null) {
            return;
          }
          ModelAccess.instance().runWriteActionInCommand(new Runnable(){
            public void run(){
              lang.setLanguageVersion(Integer.parseInt(result));
            }
          }
);
        }
      }
);
    }
  }
 catch (  Throwable t) {
    if (LOG.isEnabledFor(Level.ERROR)) {
      LOG.error("User's action execute method failed. Action:" + "CorrectLanguageVersion",t);
    }
  }
}
