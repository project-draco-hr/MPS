{
  if (!(((SModule)MapSequence.fromMap(_params).get("module")) instanceof Language)) {
    return false;
  }
  Language lang=((Language)((SModule)MapSequence.fromMap(_params).get("module")));
  SModel mig=LanguageAspect.MIGRATION.get(lang);
  if (mig == null) {
    return true;
  }
  List<SNode> migrations=SModelOperations.roots(((SModel)mig),MetaAdapterFactory.getConcept(0x9074634404fd4286L,0x97d5b46ae6a81709L,0x73e8a2c68b62c6a3L,"jetbrains.mps.lang.migration.structure.MigrationScript"));
  if (lang.getLanguageVersion() == 0) {
    return false;
  }
  if (ListSequence.fromList(migrations).isEmpty() && lang.getLanguageVersion() != 0) {
    return true;
  }
  int maxFrom=SPropertyOperations.getInteger(ListSequence.fromList(migrations).sort(new ISelector<SNode,Integer>(){
    public Integer select(    SNode it){
      return SPropertyOperations.getInteger(it,MetaAdapterFactory.getProperty(0x9074634404fd4286L,0x97d5b46ae6a81709L,0x73e8a2c68b62c6a3L,0x50c63f9f4a0dac17L,"fromVersion"));
    }
  }
,false).first(),MetaAdapterFactory.getProperty(0x9074634404fd4286L,0x97d5b46ae6a81709L,0x73e8a2c68b62c6a3L,0x50c63f9f4a0dac17L,"fromVersion"));
  SLanguageId langId=MetaIdByDeclaration.getLanguageId(lang);
  SLanguage slang=MetaAdapterFactory.getLanguage(langId,lang.getModuleName());
  if (lang.getModuleDescriptor().getLanguageVersions().containsKey(slang)) {
    if (lang.getModuleDescriptor().getLanguageVersions().get(slang) != lang.getLanguageVersion()) {
      return true;
    }
  }
  return lang.getLanguageVersion() != maxFrom + 1;
}
