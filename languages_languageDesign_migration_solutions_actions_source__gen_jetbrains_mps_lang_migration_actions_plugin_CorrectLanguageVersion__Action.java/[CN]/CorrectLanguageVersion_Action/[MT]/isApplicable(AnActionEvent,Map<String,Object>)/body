{
  if (!(((SModule)MapSequence.fromMap(_params).get("module")) instanceof Language)) {
    return false;
  }
  Language lang=((Language)((SModule)MapSequence.fromMap(_params).get("module")));
  SLanguageId langId=MetaIdByDeclaration.getLanguageId(lang);
  SLanguage slang=MetaAdapterFactory.getLanguage(langId,lang.getModuleName());
  SModel mig=LanguageAspect.MIGRATION.get(lang);
  if (mig == null) {
    return slang.getLanguageVersion() != 0;
  }
  List<SNode> migrations=SModelOperations.roots(((SModel)mig),MetaAdapterFactory.getInterfaceConcept(0x9882f4ad195546feL,0x826994189e5dbbf2L,0x47bb811da2acc4d6L,"jetbrains.mps.lang.migration.util.structure.IMigrationUnit"));
  if (lang.getLanguageVersion() == 0) {
    return false;
  }
  if (ListSequence.fromList(migrations).isEmpty() && lang.getLanguageVersion() != 0) {
    return true;
  }
  int maxFrom=IMigrationUnit_BehaviorDescriptor.fromVersion_id4uVwhQyFcnl.invoke(ListSequence.fromList(migrations).sort(new ISelector<SNode,Integer>(){
    public Integer select(    SNode it){
      return IMigrationUnit_BehaviorDescriptor.fromVersion_id4uVwhQyFcnl.invoke(it);
    }
  }
,false).first());
  if (lang.getModuleDescriptor().getLanguageVersions().containsKey(slang)) {
    if (lang.getModuleDescriptor().getLanguageVersions().get(slang) != lang.getLanguageVersion()) {
      return true;
    }
  }
  return lang.getLanguageVersion() != maxFrom + 1;
}
