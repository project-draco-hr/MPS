{
  return new ConceptDescriptorBuilder("jetbrains.mps.lang.traceable.operations.structure.NList_CopyWithTraceOperation",MetaIdFactory.conceptId(0xeba1dbb30bc44ce9L,0xa18405c9135353beL,0x242191b44da0af07L)).super_("jetbrains.mps.baseLanguage.structure.Expression").version(1).super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506fL)).childDescriptors(new ConceptDescriptorBuilder.Link(0x242191b44da0af0cL,"argument",MetaIdFactory.conceptId(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf8c37f506fL),false,false,false,new SNodePointer("r:1e4195e3-e1e5-4a37-8e8b-eab96753b17f(jetbrains.mps.lang.traceable.operations.structure)","2603522263179374348"))).children(new String[]{"argument"},new boolean[]{false}).alias("copy list with trace","copies a list of nodes with trace").staticScope(StaticScope.NONE).sourceNode(new SNodePointer("r:1e4195e3-e1e5-4a37-8e8b-eab96753b17f(jetbrains.mps.lang.traceable.operations.structure)","2603522263179374343")).create();
}
