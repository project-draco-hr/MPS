{
  ModelAccess.instance().runReadAction(new Runnable(){
    public void run(){
synchronized (myDisposedLock) {
        myDisposed=true;
        try {
synchronized (myChangesMessages) {
            SetSequence.fromSet(MapSequence.fromMap(myChangesMessages).keySet()).toListSequence().visitAll(new IVisitor<OldChange>(){
              public void visit(              OldChange ch){
                unhighlightChange(ch);
              }
            }
);
          }
          getHighlightManager().clearForOwner(EditorComponentChangesHighligher.this);
          myEditorComponent.getLeftEditorHighlighter().removeFoldingAreaPainter(myFoldingAreaPainter);
        }
  finally {
          if (myModelChangesManager != null) {
            myModelChangesManager.removeChangeListener(myChangeListener);
            myChangeListener=null;
          }
        }
      }
    }
  }
);
}
