{
  try {
    if (((IModule)MapSequence.fromMap(_params).get("module")).getSModelRoots().size() == 0) {
      int code=JOptionPane.showConfirmDialog(((Frame)MapSequence.fromMap(_params).get("frame")),"There are no model roots. Do you want to create one?","",JOptionPane.YES_NO_OPTION);
      if (code != JOptionPane.YES_OPTION) {
        return;
      }
 else {
        NewModelUtil.ShowModulePropertiesDialog(((IModule)MapSequence.fromMap(_params).get("module")),((IOperationContext)MapSequence.fromMap(_params).get("context")));
      }
    }
    if (((IModule)MapSequence.fromMap(_params).get("module")).getSModelRoots().size() == 0) {
      JOptionPane.showMessageDialog(((Frame)MapSequence.fromMap(_params).get("frame")),"Can't create a model in solution with no model roots","Can't create model",JOptionPane.ERROR_MESSAGE);
      return;
    }
    final Wrappers._T<NewModelDialog> dialog=new Wrappers._T<NewModelDialog>();
    final IOperationContext localContext=((IOperationContext)MapSequence.fromMap(_params).get("context"));
    final IModule localModule=(localContext.getModule() != null ? localContext.getModule() : ((IModule)MapSequence.fromMap(_params).get("module")));
    ModelAccess.instance().runReadAction(new Runnable(){
      public void run(){
        String stereotype=NewModelFromSource_Action.this.getStereotype(_params);
        dialog.value=new NewModelDialog(localModule,NewModelFromSource_Action.this.getNamespace(_params),localContext,stereotype,NewModelFromSource_Action.this.isStrict(_params));
      }
    }
);
    dialog.value.showDialog();
    SModelDescriptor result=dialog.value.getResult();
    if (result != null) {
      TreeFileChooser treeFileChooser=new TreeFileChooser();
      treeFileChooser.setDirectoriesAreAlwaysVisible(true);
      treeFileChooser.setMode(TreeFileChooser.MODE_DIRECTORIES);
      final SModel sModel=result.getSModel();
      treeFileChooser.setFileFilter(new IFileFilter(){
        public boolean accept(        IFile file){
          return JavaCompiler.checkBaseModelMatchesSourceDirectory(sModel,new File(file.getAbsolutePath()));
        }
      }
);
      String generatorOutputPath=((IModule)MapSequence.fromMap(_params).get("module")).getGeneratorOutputPath();
      File initial=null;
      File output=new File(generatorOutputPath);
      if (output.exists()) {
        initial=output;
        File sourceRoot=new File(initial.getParentFile(),"source");
        if (!(sourceRoot.exists())) {
          sourceRoot=new File(initial.getParentFile(),"src");
        }
        initial=sourceRoot;
        if (sourceRoot.exists()) {
          File modelSource=new File(sourceRoot,NameUtil.pathFromNamespace(sModel.getLongName()));
          if (modelSource.exists()) {
            initial=modelSource;
          }
        }
      }
      if (initial != null) {
        treeFileChooser.setInitialFile(FileSystem.getInstance().getFileByPath(initial.getAbsolutePath()));
      }
      IFile resultFile=treeFileChooser.showDialog(((Frame)MapSequence.fromMap(_params).get("frame")));
      if (resultFile != null) {
        JavaCompiler javaCompiler=new JavaCompiler(((IOperationContext)MapSequence.fromMap(_params).get("context")),((IModule)MapSequence.fromMap(_params).get("module")),new File(resultFile.getAbsolutePath()),false,sModel);
        javaCompiler.compile();
      }
      SModelDescriptor modelDescriptor=result;
      ProjectPane.getInstance(((Project)MapSequence.fromMap(_params).get("project"))).selectModel(modelDescriptor,false);
    }
  }
 catch (  Throwable t) {
    if (log.isErrorEnabled()) {
      log.error("User's action execute method failed. Action:" + "NewModelFromSource",t);
    }
  }
}
