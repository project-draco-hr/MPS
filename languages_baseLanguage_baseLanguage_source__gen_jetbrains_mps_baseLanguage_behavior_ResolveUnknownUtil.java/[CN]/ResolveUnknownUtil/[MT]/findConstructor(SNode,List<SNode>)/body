{
  SNode result;
  List<SNode> conss=SLinkOperations.getTargets(claz,"constructor",true);
  if (ListSequence.fromList(conss).isEmpty()) {
    result=null;
  }
 else   if ((int)ListSequence.fromList(conss).count() == 1) {
    result=ListSequence.fromList(conss).first();
  }
 else {
    final int argCount=ListSequence.fromList(args).count();
    Iterable<SNode> subset=ListSequence.fromList(conss).where(new IWhereFilter<SNode>(){
      public boolean accept(      SNode it){
        return (int)ListSequence.fromList(SLinkOperations.getTargets(it,"parameter",true)).count() == argCount;
      }
    }
);
    result=Sequence.fromIterable(subset).first();
  }
  return result;
}
