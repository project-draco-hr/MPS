{
  SNode typ=findClass(x,SPropertyOperations.getString(x,"className"));
  if ((typ == null)) {
    return null;
  }
  if (!(SNodeOperations.isInstanceOf(typ,"jetbrains.mps.baseLanguage.structure.ClassConcept"))) {
    return null;
  }
  final SNode cons=ResolveUnknownUtil.findConstructor(SNodeOperations.cast(typ,"jetbrains.mps.baseLanguage.structure.ClassConcept"),SLinkOperations.getTargets(x,"actualArgument",true));
  if ((cons == null)) {
    return null;
  }
  return new _FunctionTypes._return_P0_E0<SNode>(){
    public SNode invoke(){
      SNode result=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.GenericNewExpression",null);
      SNode create=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ClassCreator",null);
      reattachMethodArguments(x,create);
      for (      SNode arg : ListSequence.fromList(SLinkOperations.getTargets(x,"typeArgument",true))) {
        SNodeOperations.detachNode(arg);
        ListSequence.fromList(SLinkOperations.getTargets(create,"typeParameter",true)).addElement(arg);
      }
      SLinkOperations.setTarget(create,"baseMethodDeclaration",cons,false);
      SLinkOperations.setTarget(result,"creator",create,true);
      return result;
    }
  }
;
}
