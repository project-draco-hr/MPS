{
  SNode enclosingClass=SNodeOperations.getAncestor(x,"jetbrains.mps.baseLanguage.structure.ClassConcept",false,false);
  if ((enclosingClass == null)) {
    return null;
  }
  final SNode foundCons=ResolveUnknownUtil.findConstructor(enclosingClass,SLinkOperations.getTargets(x,"actualArgument",true));
  if ((foundCons == null)) {
    return null;
  }
  return new _FunctionTypes._return_P0_E0<SNode>(){
    public SNode invoke(){
      SNode result=(SPropertyOperations.getBoolean(x,"isSuper") ? SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.SuperConstructorInvocation",null) : SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.ThisConstructorInvocation",null));
      reattachMethodArguments(x,result);
      SLinkOperations.setTarget(result,"baseMethodDeclaration",foundCons,false);
      return result;
    }
  }
;
}
