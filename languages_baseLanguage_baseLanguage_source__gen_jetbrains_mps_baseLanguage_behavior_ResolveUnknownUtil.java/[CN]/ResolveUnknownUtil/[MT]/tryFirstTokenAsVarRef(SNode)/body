{
  Scope scope=Scope.getScope(SNodeOperations.getParent(x),x,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.VariableDeclaration"));
  if (scope == null) {
    return null;
  }
  String name=SPropertyOperations.getString(ListSequence.fromList(SLinkOperations.getTargets(x,"token",true)).first(),"value");
  if (Sequence.fromIterable(scope.getAvailableElements(name)).isNotEmpty()) {
    System.err.println("First token is a variable: " + name + " "+ SPropertyOperations.getString(SNodeOperations.getConceptDeclaration(Sequence.fromIterable(scope.getAvailableElements(name)).first()),"name"));
    jetbrains.mps.smodel.SNode varRef=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.VariableReference",null);
    SReference sref=new DynamicReference("variableDeclaration",varRef,null,name);
    varRef.setReference(sref.getRole(),sref);
    return varRef;
  }
 else {
    return null;
  }
}
