{
  String[] tokens=SPropertyOperations.getString(x,MetaAdapterFactory.getProperty(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x5a98df4004080866L,0x1996ec29712bdd92L,"tokens")).split("\\.");
  SNode operand=null;
  int tokPos=0;
  SNode mbVarRef=ResolveUnknownUtil.tryFirstTokenAsVarRef(x);
  if ((mbVarRef != null)) {
    operand=mbVarRef;
    tokPos=1;
  }
 else {
    Tuples._2<SNode,Integer> classAndPos=ResolveUnknownUtil.tryFindClass(x);
    if (classAndPos == null) {
      return null;
    }
    SNode cls=classAndPos._0();
    tokPos=(int)classAndPos._1();
    if (tokPos == tokens.length) {
      return cls;
    }
 else {
      final String memberName=tokens[tokPos];
      SNode mbEnumConst=null;
      if (SNodeOperations.isInstanceOf(cls,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass"))) {
        mbEnumConst=ListSequence.fromList(SLinkOperations.getChildren(SNodeOperations.cast(cls,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,0xfc367503acL,"enumConstant"))).where(new IWhereFilter<SNode>(){
          public boolean accept(          SNode it){
            return memberName.equals(SPropertyOperations.getString(it,MetaAdapterFactory.getProperty(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x110396eaaa4L,0x110396ec041L,"name")));
          }
        }
).first();
      }
      if (mbEnumConst != null) {
        SNode enumRef=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc37588bc8L,"jetbrains.mps.baseLanguage.structure.EnumConstantReference"));
        SLinkOperations.setTarget(enumRef,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc37588bc8L,0x10a758428feL,"enumClass"),SNodeOperations.cast(cls,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc367070a5L,"jetbrains.mps.baseLanguage.structure.EnumClass")));
        SLinkOperations.setTarget(enumRef,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xfc37588bc8L,0xfc37588bcaL,"enumConstantDeclaration"),mbEnumConst);
        operand=enumRef;
      }
 else {
        SNode statFieldRef=SConceptOperations.createNewNode(MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf940c80846L,"jetbrains.mps.baseLanguage.structure.StaticFieldReference"));
        SLinkOperations.setTarget(statFieldRef,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0xf940c80846L,0x10a75869f9bL,"classifier"),cls);
        SReference fieldRef;
        fieldRef=new DynamicReference("variableDeclaration",statFieldRef,null,memberName);
        statFieldRef.setReference(fieldRef.getRole(),fieldRef);
        operand=statFieldRef;
      }
      tokPos=tokPos + 1;
    }
  }
  if ((operand == null)) {
    return null;
  }
  while (tokPos < tokens.length) {
    SNode dotExpr=ResolveUnknownUtil.makeFieldDotExpression(operand,tokens[tokPos]);
    operand=dotExpr;
    tokPos++;
  }
  return operand;
}
