{
  mySourceNode=sourceNode;
  myLinkDeclaration=linkDeclaration;
  SNode genuineLinkDeclaration=BehaviorReflection.invokeNonVirtual((Class<SNode>)((Class)Object.class),myLinkDeclaration,"jetbrains.mps.lang.structure.structure.LinkDeclaration","call_getGenuineLink_1213877254523",new Object[]{});
  if (genuineLinkDeclaration == null) {
    return;
  }
  if (SPropertyOperations.hasValue(genuineLinkDeclaration,MetaAdapterFactory.getProperty(0xc72da2b97cce4447L,0x8389f407dc1158b7L,0xf979bd086aL,0xf980556927L,"metaClass"),"aggregation","reference")) {
    DefaultReferenceSubstituteInfoActionsFactory.LOG.error("only reference links are allowed here",myLinkDeclaration);
  }
  if (!(BehaviorReflection.invokeNonVirtual(Boolean.TYPE,genuineLinkDeclaration,"jetbrains.mps.lang.structure.structure.LinkDeclaration","call_isSingular_1213877254557",new Object[]{}))) {
    DefaultReferenceSubstituteInfoActionsFactory.LOG.error("cardinalities 1 or 0..1 are allowed here",myLinkDeclaration);
  }
  myCurrentReferent=SLinkOperations.getTargetNode(SNodeOperations.getReference(sourceNode,myLinkDeclaration));
  mySubstituteInfo=substituteInfo;
}
