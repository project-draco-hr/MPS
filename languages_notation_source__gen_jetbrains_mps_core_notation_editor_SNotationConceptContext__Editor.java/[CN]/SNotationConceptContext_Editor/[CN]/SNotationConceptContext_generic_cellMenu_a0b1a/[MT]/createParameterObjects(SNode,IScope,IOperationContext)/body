{
  if (SLinkOperations.getTarget(node,"element",false) == null) {
    return null;
  }
  Scope lscope=Scope.getScope(SLinkOperations.getTarget(node,"element",false),null,SConceptOperations.findConceptDeclaration("jetbrains.mps.core.notation.structure.SNotation"));
  Iterable<String> result=Sequence.fromIterable(lscope.getAvailableElements(null)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.core.notation.structure.SNotation") && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.core.notation.structure.SNotation"),"context",true),"jetbrains.mps.core.notation.structure.SNotationConceptContext") && SAbstractConcept_Behavior.call_isSubConceptOf_5938997310819191538(SLinkOperations.getTarget(node,"element",false),SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.core.notation.structure.SNotation"),"context",true),"jetbrains.mps.core.notation.structure.SNotationConceptContext"),"element",false));
    }
  }
).select(new ISelector<SNode,SNode>(){
    public SNode select(    SNode it){
      return SNodeOperations.cast(SLinkOperations.getTarget(SNodeOperations.cast(it,"jetbrains.mps.core.notation.structure.SNotation"),"context",true),"jetbrains.mps.core.notation.structure.SNotationConceptContext");
    }
  }
).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return SPropertyOperations.getString(it,"id") != null;
    }
  }
).select(new ISelector<SNode,String>(){
    public String select(    SNode it){
      return SPropertyOperations.getString(it,"id");
    }
  }
);
  return Sequence.fromIterable(result).toListSequence();
}
