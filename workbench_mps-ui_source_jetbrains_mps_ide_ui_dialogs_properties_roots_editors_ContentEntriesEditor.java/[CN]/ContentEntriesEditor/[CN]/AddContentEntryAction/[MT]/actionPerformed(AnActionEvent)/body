{
  ModelRoot modelRoot=null;
  if (myType.equals("file_based")) {
    final ModelRoot modelRootBase=PersistenceRegistry.getInstance().getModelRootFactory("default").create();
    modelRoot=new FileBasedModelRoot(){
      @Override public String getType(){
        return "file_based";
      }
      @Override public SModel getModel(      SModelId id){
        return modelRootBase.getModel(id);
      }
      @Override public Iterable<SModel> getModels(){
        return modelRootBase.getModels();
      }
      @Override public boolean canCreateModel(      String modelName){
        return false;
      }
      @Override public SModel createModel(      String modelName){
        return modelRootBase.createModel(modelName);
      }
    }
;
  }
 else   modelRoot=PersistenceRegistry.getInstance().getModelRootFactory(myType).create();
  ModelRootEntry entry=ModelRootEntryPersistence.getInstance().getModelRootEntry(modelRoot);
  ModelRootEntryContainer container=new ModelRootEntryContainer(entry);
  container.addContentEntryEditorListener(myEditorListener);
  myModelRootEntries.add(container);
  myEditorsListPanel.add(container.getComponent());
  selectEntry(container);
  myEditorsListPanel.revalidate();
  myEditorsListPanel.repaint();
}
