{
synchronized (myPluginsLock) {
    myRepository.getModelAccess().runWriteAction(new Runnable(){
      @Override public void run(){
        LOG.debug("Unloading plugins from " + contributors.size() + " contributors");
        final List<T> plugins=new ArrayList<T>();
        for (        PluginContributor contributor : contributors) {
          if (!myContributorToPlugin.containsKey(contributor)) {
            LOG.error("",new IllegalStateException("Contributor " + contributor + " was not registered"));
            continue;
          }
          T plugin=myContributorToPlugin.get(contributor);
          myContributorToPlugin.remove(contributor);
          if (plugin != null) {
            plugins.add(plugin);
          }
        }
        beforePluginsDisposed(plugins);
        disposePlugins(plugins);
        mySortedPlugins.removeAll(plugins);
      }
    }
);
  }
}
