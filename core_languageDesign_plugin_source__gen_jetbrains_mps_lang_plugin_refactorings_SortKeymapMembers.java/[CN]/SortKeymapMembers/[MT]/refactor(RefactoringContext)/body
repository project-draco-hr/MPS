{
  SNode node=refactoringContext.getSelectedNode();
  List<SNode> copy=ListSequence.<SNode>fromListWithValues(new ArrayList<SNode>(),SLinkOperations.getTargets(node,"shortcutChange",true));
  ListSequence.<SNode>fromList(SLinkOperations.getTargets(node,"shortcutChange",true)).clear();
  ListSequence.<SNode>fromList(SLinkOperations.getTargets(node,"shortcutChange",true)).addSequence(ListSequence.<SNode>fromList(copy).sort(new ISelector<SNode,Comparable<?>>(){
    public Comparable<?> select(    SNode it){
      return SNodeOperations.isInstanceOf(it,"jetbrains.mps.lang.plugin.structure.ParameterizedShortcutChange");
    }
  }
,true).alsoSort(new ISelector<SNode,Comparable<?>>(){
    public Comparable<?> select(    SNode it){
      return SPropertyOperations.getString(SLinkOperations.getTarget(it,"action",false),"name");
    }
  }
,true));
}
