{
  JPanel mainPanel=new JPanel(new GridLayout(6,1));
  mainPanel.setPreferredSize(new Dimension(300,100));
  mainPanel.add(new JLabel("Model root:"));
  mainPanel.add(myModelRoots);
  DefaultComboBoxModel model=new DefaultComboBoxModel();
  for (  ModelRoot root : myModule.getModelRoots()) {
    if (!(root.canCreateModels())) {
      model.addElement(root);
    }
 else     if (myModule instanceof Language && root instanceof FileBasedModelRoot) {
      model.addElement(root);
    }
  }
  if (model.getSize() == 0) {
    model.addElement("<NO MODEL ROOTS FOR SELECTED NAMESPACE>");
  }
  myModelRoots.setRenderer(new DefaultListCellRenderer(){
    @Override public Component getListCellRendererComponent(    JList list,    Object object,    int i,    boolean b,    boolean b1){
      if (object instanceof ModelRoot) {
        object=((ModelRoot)object).getPresentation();
      }
      return super.getListCellRendererComponent(list,object,i,b,b1);
    }
  }
);
  myModelRoots.addItemListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent e){
      check();
    }
  }
);
  myModelRoots.setModel(model);
  myModelName.setText((myNamespace.length() == 0 ? myNamespace : myNamespace + "."));
  mainPanel.add(new JLabel("Model name:"));
  mainPanel.add(myModelName);
  myModelName.addKeyListener(new KeyAdapter(){
    @Override public void keyReleased(    KeyEvent event){
      check();
    }
  }
);
  mainPanel.add(new JLabel("Stereotype:"));
  myModelStereotype.setEditable(true);
  myModelStereotype.setModel(new DefaultComboBoxModel(SModelStereotype.values));
  myModelStereotype.addKeyListener(new KeyAdapter(){
    @Override public void keyReleased(    KeyEvent event){
      check();
    }
  }
);
  myModelStereotype.addItemListener(new ItemListener(){
    @Override public void itemStateChanged(    ItemEvent p0){
      check();
    }
  }
);
  mainPanel.add(myModelStereotype);
  myContentPane.add(mainPanel,BorderLayout.CENTER);
}
