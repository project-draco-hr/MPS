{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("constant",new BaseReferenceConstraintsDescriptor("constant",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return SModelOperations.getNodesIncludingImported(_context.getModel(),operationContext.getScope(),"jetbrains.mps.baseLanguage.structure.StaticFieldDeclaration");
        }
        @Override public ISearchScope createSearchScope(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          return new ProviderGeneratedSearchScope(this,operationContext,_context){
            public boolean isInScope(            SNode checkedNode){
              return (SLinkOperations.getTarget(SLinkOperations.getTarget(_context.getReferenceNode(),"constant",false),"initializer",true) != null);
            }
          }
;
        }
        @Override public SNodePointer getSearchScopeValidatorNode(){
          return breakingNode_d5zdlf_a0a2a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
