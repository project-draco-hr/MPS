{
  Map<String,ReferenceConstraintsDescriptor> references=new HashMap();
  references.put("editorOperationDeclaration",new BaseReferenceConstraintsDescriptor("editorOperationDeclaration",this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          SNode instance=SLinkOperations.getTarget(SNodeOperations.cast(_context.getEnclosingNode(),"jetbrains.mps.baseLanguage.structure.DotExpression"),"operand",true);
          SNode editorType=TypeChecker.getInstance().getRuntimeSupport().coerce_(TypeChecker.getInstance().getTypeOf(instance),HUtil.createMatchingPatternByConceptFQName("jetbrains.mps.execution.settings.structure.SettingsEditorType"),false);
          if ((editorType == null) || (SLinkOperations.getTarget(editorType,"configuration",false) == null)) {
            return Sequence.fromIterable(Collections.<SNode>emptyList());
          }
          List<SNode> operations=SettingsEditor_Behavior.call_getDeclaredOperations_946964771156067031(SLinkOperations.getTarget(SLinkOperations.getTarget(editorType,"configuration",false),"editor",true));
          return ListSequence.fromList(operations).where(new IWhereFilter<SNode>(){
            public boolean accept(            SNode it){
              return ((SNodeOperations.getAncestor(_context.getEnclosingNode(),"jetbrains.mps.execution.settings.structure.SettingsEditor",false,false) != null) ? (BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),it,"virtual_getJavaMethod_946964771156066991",new Object[]{}) != null) : (BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),it,"virtual_getPublicJavaMethod_203908296139519011",new Object[]{}) != null));
            }
          }
);
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_ow8wt3_a0a1a0a0a1a0b0a1a1;
        }
      }
;
    }
  }
);
  return references;
}
