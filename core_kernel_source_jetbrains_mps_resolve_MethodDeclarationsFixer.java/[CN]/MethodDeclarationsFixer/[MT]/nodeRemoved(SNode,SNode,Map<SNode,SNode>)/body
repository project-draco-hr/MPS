{
  List<SNode> removedMethodCalls=SNodeOperations.getDescendants(child,IMethodCall.concept,true);
  for (  SNode methodCall : removedMethodCalls) {
  }
  if (myCheckedMethodCalls.contains(formerParent)) {
    testAndFixMethodCall(formerParent,resolveTargets);
  }
  if (SNodeOperations.isInstanceOf(child,ParameterDeclaration.concept)) {
    methodDeclarationSignatureChanged(formerParent,resolveTargets);
  }
 else {
    SNode formalParam=SNodeOperations.getAncestor(formerParent,ParameterDeclaration.concept,true,false);
    if (formalParam != null && formalParam.getParent() != null) {
      methodDeclarationSignatureChanged(formalParam.getParent(),resolveTargets);
    }
  }
}
