{
  ListSequence.fromList(myTargetConcepts).addSequence(ListSequence.fromList(targets).select(new ISelector<NodesDescriptor,NodesDescriptor>(){
    public NodesDescriptor select(    NodesDescriptor it){
      return new NodesDescriptor((it.concept() == null ? MetaAdapterFactory.getConcept(0xceab519525ea4f22L,0x9b92103b95ca8c0cL,0x10802efe25aL,"jetbrains.mps.lang.core.structure.BaseConcept") : it.concept()),it.filter());
    }
  }
));
  Iterable<Language> languages=ListSequence.fromList(myTargetConcepts).select(new ISelector<NodesDescriptor,Language>(){
    public Language select(    final NodesDescriptor it){
      return ModelAccess.instance().runReadAction(new Computable<Language>(){
        public Language compute(){
          return (Language)it.concept().getLanguage().getSourceModule();
        }
      }
);
    }
  }
);
  myScope=new ModulesWithLanguagesScope(GlobalScope.getInstance(),languages);
}
