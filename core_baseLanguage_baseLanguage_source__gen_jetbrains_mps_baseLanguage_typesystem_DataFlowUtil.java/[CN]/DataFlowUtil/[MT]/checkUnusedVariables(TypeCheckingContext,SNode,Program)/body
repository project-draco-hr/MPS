{
  Set<SNode> usedVariables=DataFlow.getUsedVariables(program,statementList);
  for (  SNode var : SNodeOperations.getDescendants(statementList,"jetbrains.mps.baseLanguage.structure.VariableDeclaration",false,new String[]{})) {
    if (!(SNodeOperations.isInstanceOf(SNodeOperations.getParent(var),"jetbrains.mps.baseLanguage.structure.CatchClause")) && SNodeOperations.getAncestor(var,"jetbrains.mps.lang.quotation.structure.Quotation",false,false) == null) {
      if (SLinkOperations.getTarget(var,"initializer",true) == null && SNodeOperations.getConceptDeclaration(var) == SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.VariableDeclaration") && !(SetSequence.fromSet(usedVariables).contains(var))) {
{
          BaseIntentionProvider intentionProvider=null;
          IErrorTarget errorTarget=new NodeErrorTarget();
          IErrorReporter _reporter_2309309498=typeCheckingContext.reportWarning(var,"Unused variable","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","8937659523942275424",intentionProvider,errorTarget);
        }
      }
    }
  }
}
