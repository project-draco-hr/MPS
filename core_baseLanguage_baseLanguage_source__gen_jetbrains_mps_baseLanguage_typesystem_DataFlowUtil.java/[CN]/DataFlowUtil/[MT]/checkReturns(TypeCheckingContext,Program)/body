{
  Set<SNode> expectedReturns=DataFlow.getExpectedReturns(program);
  for (  SNode n : expectedReturns) {
    if (n != null && !(SNodeOperations.isInstanceOf(n,"jetbrains.mps.baseLanguage.structure.TryStatement"))) {
      SNode nodeToSelect;
      SNode sl=SNodeOperations.getAncestor(n,"jetbrains.mps.baseLanguage.structure.StatementList",true,false);
      if ((sl != null) && ListSequence.<SNode>fromList(SLinkOperations.getTargets(sl,"statement",true)).isNotEmpty()) {
        nodeToSelect=SNodeOperations.getAncestor(n,"jetbrains.mps.baseLanguage.structure.Statement",true,false);
      }
 else {
        nodeToSelect=SNodeOperations.getAncestor(n,"jetbrains.mps.baseLanguage.structure.StatementList",true,false);
      }
      if (nodeToSelect != null) {
{
          MessageTarget errorTarget=new NodeMessageTarget();
          IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(nodeToSelect,"Return expected","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1223640343628",null,errorTarget);
        }
      }
 else {
{
          MessageTarget errorTarget=new NodeMessageTarget();
          IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(n,"Return expected","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","1223640343636",null,errorTarget);
        }
      }
    }
  }
}
