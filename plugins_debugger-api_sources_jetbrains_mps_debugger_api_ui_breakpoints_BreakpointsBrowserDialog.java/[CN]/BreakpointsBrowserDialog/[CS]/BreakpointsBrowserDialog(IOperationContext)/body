{
  super(context.getMainFrame(),"Breakpoints");
  setModal(false);
  myContext=context;
  myBreakpointsManager=BreakpointManagerComponent.getInstance(myContext.getIdeaProject());
  myBreakpointsUi=BreakpointsUiComponent.getInstance(myContext.getIdeaProject());
  myProvidersManager=myContext.getComponent(BreakpointProvidersManager.class);
  myCurrentViewIndex=BreakpointViewSettingsComponent.getInstance(myContext.getIdeaProject()).getViewIndex();
  myViews=new BreakpointsView[]{new BreakpointsTable(myContext,myBreakpointsManager),new BreakpointsTree(myContext,myBreakpointsManager)};
  myMainPanel=new JPanel(new BorderLayout());
  myBreakpointsScrollPane=ScrollPaneFactory.createScrollPane(myViews[myCurrentViewIndex].getMainComponent());
  myBreakpointsScrollPane.getViewport().setBackground(UIManager.getColor("Table.background"));
  myMainPanel.add(myBreakpointsScrollPane,BorderLayout.CENTER);
  ActionToolbar actionToolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,createActions(),true);
  myMainPanel.add(actionToolbar.getComponent(),BorderLayout.NORTH);
  registerActionsOnViews();
  addWindowListener(new WindowAdapter(){
    @Override public void windowClosed(    WindowEvent e){
      saveState();
    }
  }
);
  addFocusListener(new FocusAdapter(){
    @Override public void focusLost(    FocusEvent focusEvent){
      saveState();
    }
  }
);
  initPropertiesUi();
}
