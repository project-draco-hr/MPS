{
  if (this.myLocalVariables == null) {
    this.myLocalVariables=new ArrayList<SNode>();
    SNode statementList=SNodeOperations.as(LocalVariablesScope.findThisOrParent(this.myContextNode,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ILocalVariableElementList")),"jetbrains.mps.baseLanguage.structure.ILocalVariableElementList");
    if (statementList != null) {
      SNode currentStatement=SNodeOperations.as(LocalVariablesScope.findThisOrParent(this.myContextNode,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ILocalVariableElement")),"jetbrains.mps.baseLanguage.structure.ILocalVariableElement");
      this._populateLocalVariables(statementList,currentStatement,this.myLocalVariables);
    }
    SNode loopStatement=SNodeOperations.as(LocalVariablesScope.findThisOrParent(this.myContextNode,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.AbstractLoopStatement")),"jetbrains.mps.baseLanguage.structure.AbstractLoopStatement");
    if (loopStatement != null) {
      this._populateLocalVariables(loopStatement,this.myLocalVariables);
    }
    SNode catchClause=SNodeOperations.as(LocalVariablesScope.findThisOrParent(this.myContextNode,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.CatchClause")),"jetbrains.mps.baseLanguage.structure.CatchClause");
    if (catchClause != null) {
      this._populateLocalVariablesForCatch(catchClause,this.myLocalVariables);
    }
    SNode switchCase=SNodeOperations.as(findThisOrParent(myContextNode,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.SwitchCase")),"jetbrains.mps.baseLanguage.structure.SwitchCase");
    while ((switchCase != null)) {
      SNode switchStatement=SNodeOperations.getAncestor(switchCase,"jetbrains.mps.baseLanguage.structure.SwitchStatement",false,false);
      for (      SNode caseClause : ListSequence.fromList(SLinkOperations.getTargets(switchStatement,"case",true))) {
        if (caseClause == switchCase) {
          break;
        }
        _populateLocalVariablesFromList(SLinkOperations.getTarget(caseClause,"body",true),null,myLocalVariables);
      }
      switchCase=SNodeOperations.as(findThisOrParent(switchStatement,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.SwitchCase")),"jetbrains.mps.baseLanguage.structure.SwitchCase");
    }
  }
  if (condition == AbstractSearchScope.TRUE_CONDITION) {
    return this.myLocalVariables;
  }
  List<SNode> result=new ArrayList<SNode>(this.myLocalVariables.size());
  for (  SNode node : this.myLocalVariables) {
    if (condition.met(node)) {
      result.add(node);
    }
  }
  return result;
}
