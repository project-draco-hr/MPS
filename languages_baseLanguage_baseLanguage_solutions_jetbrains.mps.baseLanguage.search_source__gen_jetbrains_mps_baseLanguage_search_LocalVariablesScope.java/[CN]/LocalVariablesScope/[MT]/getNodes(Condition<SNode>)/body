{
  if (this.myLocalVariables == null) {
    this.myLocalVariables=new ArrayList<SNode>();
    SNode statementList=SNodeOperations.as(LocalVariablesScope.findThisOrParent(this.myContextNode,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ILocalVariableElementList")),MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x1206e9046e6L,"jetbrains.mps.baseLanguage.structure.ILocalVariableElementList"));
    if (statementList != null) {
      SNode currentStatement=SNodeOperations.as(LocalVariablesScope.findThisOrParent(this.myContextNode,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.ILocalVariableElement")),MetaAdapterFactory.getInterfaceConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x1206e6cc291L,"jetbrains.mps.baseLanguage.structure.ILocalVariableElement"));
      this._populateLocalVariables(statementList,currentStatement,this.myLocalVariables);
    }
    SNode loopStatement=SNodeOperations.as(LocalVariablesScope.findThisOrParent(this.myContextNode,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.AbstractLoopStatement")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10cb1ac5adeL,"jetbrains.mps.baseLanguage.structure.AbstractLoopStatement"));
    if (loopStatement != null) {
      this._populateLocalVariables(loopStatement,this.myLocalVariables);
    }
    SNode catchClause=SNodeOperations.as(LocalVariablesScope.findThisOrParent(this.myContextNode,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.CatchClause")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10f39a56e2fL,"jetbrains.mps.baseLanguage.structure.CatchClause"));
    if (catchClause != null) {
      this._populateLocalVariablesForCatch(catchClause,this.myLocalVariables);
    }
    SNode switchStatement=SNodeOperations.as(findThisOrParent(myContextNode,SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.SwitchStatement")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10ef02a8c6aL,"jetbrains.mps.baseLanguage.structure.SwitchStatement"));
    while ((switchStatement != null)) {
      SNode caseStatement=getLastSourceNode(this.myContextNode,switchStatement);
      if (caseStatement != SLinkOperations.getTarget(switchStatement,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10ef02a8c6aL,0x10ef02ec241L,"expression")) && caseStatement != switchStatement) {
        for (        SNode caseClause : ListSequence.fromList(SLinkOperations.getChildren(switchStatement,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10ef02a8c6aL,0x10ef02edcafL,"case")))) {
          if (caseClause == caseStatement) {
            break;
          }
          _populateLocalVariablesFromList(SLinkOperations.getTarget(caseClause,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10ef02cdd1bL,0x10ef02d8048L,"body")),null,myLocalVariables);
        }
      }
      switchStatement=SNodeOperations.as(findThisOrParent(SNodeOperations.getParent(switchStatement),SConceptOperations.findConceptDeclaration("jetbrains.mps.baseLanguage.structure.SwitchStatement")),MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x10ef02a8c6aL,"jetbrains.mps.baseLanguage.structure.SwitchStatement"));
    }
    List<SNode> tmp=new ArrayList<SNode>();
    for (    SNode node : myLocalVariables) {
      if (node != null) {
        tmp.add(node);
      }
    }
    myLocalVariables=tmp;
  }
  if (condition == AbstractSearchScope.TRUE_CONDITION) {
    return this.myLocalVariables;
  }
  List<SNode> result=new ArrayList<SNode>(this.myLocalVariables.size());
  for (  SNode node : this.myLocalVariables) {
    if (condition.met(node)) {
      result.add(node);
    }
  }
  return result;
}
