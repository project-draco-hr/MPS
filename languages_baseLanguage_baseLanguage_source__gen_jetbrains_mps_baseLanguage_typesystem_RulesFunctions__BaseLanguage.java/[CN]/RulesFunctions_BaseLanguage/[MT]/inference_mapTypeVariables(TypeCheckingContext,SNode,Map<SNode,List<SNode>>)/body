{
  if (SNodeOperations.isInstanceOf(type,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102467229d8L,"jetbrains.mps.baseLanguage.structure.TypeVariableReference"))) {
    final SNode tvar_typevar_1203431658168=typeCheckingContext.createNewRuntimeTypesVariable();
    SNode tvd=SLinkOperations.getTarget(SNodeOperations.cast(type,MetaAdapterFactory.getConcept(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102467229d8L,"jetbrains.mps.baseLanguage.structure.TypeVariableReference")),MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102467229d8L,0x1024673a581L,"typeVariableDeclaration"));
    inference_mapTypeVariable(tvd,typeCheckingContext.getRepresentative(tvar_typevar_1203431658168),mmap);
    SNodeOperations.replaceWithAnother(type,typeCheckingContext.getRepresentative(tvar_typevar_1203431658168));
  }
 else {
    List<SNode> children=ListSequence.fromListWithValues(new ArrayList<SNode>(),SNodeOperations.getChildren(type));
    for (    SNode chld : children) {
      inference_mapTypeVariables(typeCheckingContext,chld,mmap);
    }
  }
}
