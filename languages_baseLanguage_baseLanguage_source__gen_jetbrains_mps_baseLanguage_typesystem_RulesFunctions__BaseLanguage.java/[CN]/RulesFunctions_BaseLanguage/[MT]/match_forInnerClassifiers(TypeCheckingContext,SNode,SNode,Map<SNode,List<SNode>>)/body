{
  SNode parentFC=SNodeOperations.getAncestor(declClassifier,"jetbrains.mps.baseLanguage.structure.Classifier",false,false);
  if (parentFC == null) {
    return;
  }
  if (!(SNodeOperations.isInstanceOf(instanceType,"jetbrains.mps.baseLanguage.structure.ClassifierType"))) {
    return;
  }
  SNode parentIT=SNodeOperations.getAncestor(SLinkOperations.getTarget(SNodeOperations.cast(instanceType,"jetbrains.mps.baseLanguage.structure.ClassifierType"),"classifier",false),"jetbrains.mps.baseLanguage.structure.Classifier",false,false);
  if (parentIT == null) {
    return;
  }
  SNode constructedType=_quotation_createNode_5ahx9e_a0f0g(parentIT);
  for (  SNode tvd : SLinkOperations.getTargets(parentIT,"typeVariableDeclaration",true)) {
    jetbrains.mps.smodel.SNode tvr=SConceptOperations.createNewNode("jetbrains.mps.baseLanguage.structure.TypeVariableReference",null);
    SLinkOperations.setTarget(tvr,"typeVariableDeclaration",tvd,false);
    ListSequence.fromList(SLinkOperations.getTargets(constructedType,"parameter",true)).addElement(tvr);
  }
  inference_matchConcreteTypesWithTypeVariables(typeCheckingContext,parentFC,constructedType,mmap);
}
