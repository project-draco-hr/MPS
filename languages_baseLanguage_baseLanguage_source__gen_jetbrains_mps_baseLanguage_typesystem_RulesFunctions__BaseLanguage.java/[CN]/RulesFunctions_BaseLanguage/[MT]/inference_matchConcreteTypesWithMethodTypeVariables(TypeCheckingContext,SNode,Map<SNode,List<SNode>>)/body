{
  if (ListSequence.fromList(SLinkOperations.getChildren(methodCall,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0x4500f31eb02a7788L,"typeArgument"))).isNotEmpty() && (SLinkOperations.getTarget(methodCall,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration")) != null) && mmap != null && !(MapSequence.fromMap(mmap).isEmpty())) {
{
      Iterator<SNode> tvd_it=ListSequence.fromList(SLinkOperations.getChildren(SLinkOperations.getTarget(methodCall,MetaAdapterFactory.getReferenceLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0xf8c78301adL,"baseMethodDeclaration")),MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x102463b447aL,0x102463bb98eL,"typeVariableDeclaration"))).iterator();
      Iterator<SNode> arg_it=ListSequence.fromList(SLinkOperations.getChildren(methodCall,MetaAdapterFactory.getContainmentLink(0xf3061a5392264cc5L,0xa443f952ceaf5816L,0x11857355952L,0x4500f31eb02a7788L,"typeArgument"))).iterator();
      SNode tvd_var;
      SNode arg_var;
      while (tvd_it.hasNext() && arg_it.hasNext()) {
        tvd_var=tvd_it.next();
        arg_var=arg_it.next();
        List<SNode> nodes=MapSequence.fromMap(mmap).get(tvd_var);
        if (nodes != null) {
          SNode tvar=ListSequence.fromList(nodes).first();
{
            SNode _nodeToCheck_1029348928467=null;
            EquationInfo _info_12389875345=new EquationInfo(_nodeToCheck_1029348928467,null,"r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","4293892367838067595",0,null);
            typeCheckingContext.createEquation((SNode)tvar,(SNode)arg_var,_info_12389875345);
          }
        }
      }
    }
  }
}
