{
  String erasureSignature=null;
  for (  SNode namesake : namesakes) {
    if (namesake == ownMethod) {
      continue;
    }
    if (SNodeOperations.getParent(namesake) != classifier) {
      continue;
    }
    if (ListSequence.fromList(SLinkOperations.getTargets(namesake,"parameter",true)).count() != ListSequence.fromList(SLinkOperations.getTargets(ownMethod,"parameter",true)).count()) {
      continue;
    }
    if (erasureSignature == null) {
      erasureSignature=BaseMethodDeclaration_Behavior.call_getErasureSignature_2830572026628006618(ownMethod);
    }
    String namesakeErasureSignature=BaseMethodDeclaration_Behavior.call_getErasureSignature_2830572026628006618(namesake);
    if (namesakeErasureSignature.equals(erasureSignature)) {
{
        MessageTarget errorTarget=new NodeMessageTarget();
        errorTarget=new PropertyMessageTarget("name");
        IErrorReporter _reporter_2309309498=typeCheckingContext.reportTypeError(ownMethod,"method has duplicate erasure with " + BehaviorReflection.invokeVirtual(String.class,SNodeOperations.getAncestor(namesake,"jetbrains.mps.baseLanguage.structure.Classifier",false,false),"virtual_getFqName_1213877404258",new Object[]{}) + "."+ SPropertyOperations.getString(ownMethod,"name")+ "("+ namesakeErasureSignature+ ")","r:00000000-0000-4000-0000-011c895902c5(jetbrains.mps.baseLanguage.typesystem)","3115327157609989939",null,errorTarget);
      }
      break;
    }
  }
}
