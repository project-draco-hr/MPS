{
  Map<SReferenceLinkId,ReferenceConstraintsDescriptor> references=new HashMap<SReferenceLinkId,ReferenceConstraintsDescriptor>();
  references.put(MetaIdFactory.refId(new UUID(-8968771020793164004l,-7182180101671965361l),1576845966386891367l,1576845966386891370l),new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(-8968771020793164004l,-7182180101671965361l),1576845966386891367l,1576845966386891370l),this){
    @Override public boolean hasOwnScopeProvider(){
      return true;
    }
    @Nullable @Override public ReferenceScopeProvider getScopeProvider(){
      return new BaseReferenceScopeProvider(){
        @Override public Object createSearchScopeOrListOfNodes(        final IOperationContext operationContext,        final ReferenceConstraintsContext _context){
          SNode expr=SNodeOperations.as(_context.getEnclosingNode(),MetaAdapterFactory.getConcept(new UUID(-935030926396207931l,-6610165693999523818l),1068431790191l,"jetbrains.mps.baseLanguage.structure.Expression"));
          return ((expr != null) ? CustomContainersUtil.containerDeclarations(SNodeOperations.getModel(expr),BehaviorReflection.invokeVirtual((Class<SNode>)((Class)Object.class),SNodeOperations.as(SNodeOperations.getParent(expr),MetaAdapterFactory.getInterfaceConcept(new UUID(-935030926396207931l,-6610165693999523818l),1201183863028l,"jetbrains.mps.baseLanguage.structure.TypeDerivable")),"virtual_deriveType_1213877435747",new Object[]{expr})) : Sequence.fromIterable(Collections.<SNode>emptyList()));
        }
        @Override public SNodeReference getSearchScopeValidatorNode(){
          return breakingNode_rduypo_a0a1a0a0a1a0b0a1a2;
        }
      }
;
    }
  }
);
  return references;
}
