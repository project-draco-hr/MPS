{
  BufferedImage image=new BufferedImage(DEFAULT_ICON_SIZE,DEFAULT_ICON_SIZE,BufferedImage.TYPE_INT_ARGB);
  Graphics2D g=image.createGraphics();
  RenderingHints rh=new RenderingHints(new HashMap());
  rh.put(RenderingHints.KEY_ALPHA_INTERPOLATION,RenderingHints.VALUE_ALPHA_INTERPOLATION_QUALITY);
  rh.put(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
  rh.put(RenderingHints.KEY_COLOR_RENDERING,RenderingHints.VALUE_COLOR_RENDER_QUALITY);
  rh.put(RenderingHints.KEY_INTERPOLATION,RenderingHints.VALUE_INTERPOLATION_BICUBIC);
  rh.put(RenderingHints.KEY_FRACTIONALMETRICS,RenderingHints.VALUE_FRACTIONALMETRICS_ON);
  rh.put(RenderingHints.KEY_RENDERING,RenderingHints.VALUE_RENDER_QUALITY);
  rh.put(RenderingHints.KEY_TEXT_ANTIALIASING,RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
  g.setRenderingHints(rh);
  drawer.consume(new DrawContext(g,DEFAULT_ICON_SIZE,DEFAULT_ICON_SIZE));
  g.dispose();
  try {
    ByteArrayOutputStream baos=new ByteArrayOutputStream();
    try (ImageOutputStream ios=ImageIO.createImageOutputStream(baos)){
      ImageIO.write(image,"png",ios);
    }
     return baos.toByteArray();
  }
 catch (  IOException ex) {
    LOG.error("Can't produce icon",ex);
    return null;
  }
}
