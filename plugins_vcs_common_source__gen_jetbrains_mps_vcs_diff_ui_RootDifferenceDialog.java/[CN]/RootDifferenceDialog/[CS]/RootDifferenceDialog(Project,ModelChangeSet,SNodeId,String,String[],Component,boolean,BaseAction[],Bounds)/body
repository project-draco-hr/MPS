{
  super(parent,true);
  setTitle("Difference for " + rootName);
  myChangeSet=changeSet;
  myRootId=rootId;
  myProject=project;
  myTitles=titles;
  myOldEditor=addEditor(0,myChangeSet.getOldModel());
  myNewEditor=addEditor(1,myChangeSet.getNewModel());
  linkEditors(true);
  linkEditors(false);
  JSplitPane splitPane=new JSplitPane(JSplitPane.VERTICAL_SPLIT,myTopPanel,myBottomPanel);
  splitPane.setResizeWeight(0.7);
  myActionGroup=new DefaultActionGroup();
  if (actions != null) {
    myActionGroup.addAll(actions);
    myActionGroup.addSeparator();
  }
  myTraverser=new NextPreviousTraverser(myChangeGroupLayouts,myNewEditor.getMainEditor());
  myActionGroup.addAll(myTraverser.previousAction(),myTraverser.nextAction());
  myActionGroup.addSeparator();
  if (isEditable) {
    myActionGroup.add(new RevertRootsAction(rootName){
      protected Iterable<ModelChange> getChanges(){
        return myChangeSet.getChangesForRoot(myRootId);
      }
      protected void after(){
        rehighlight();
      }
    }
);
  }
  myActionToolbar=ActionManager.getInstance().createActionToolbar(ActionPlaces.UNKNOWN,myActionGroup,true);
  myTraverser.setActionToolbar(myActionToolbar);
  myContainer.add(myActionToolbar.getComponent(),BorderLayout.NORTH);
  myContainer.add(splitPane,BorderLayout.CENTER);
  myContainer.add(myStatusBar,BorderLayout.SOUTH);
  highlightAllChanges();
  if (firstChange != null) {
    SwingUtilities.invokeLater(new Runnable(){
      public void run(){
        myTraverser.goToBounds(firstChange);
      }
    }
);
  }
 else {
    myTraverser.goToFirstChangeLater();
  }
  DisplayMode displayMode=check_vu2gar_a0jb0a(check_vu2gar_a0a53a0(GraphicsEnvironment.getLocalGraphicsEnvironment()));
  int width=(displayMode == null ? 800 : displayMode.getWidth() - 100);
  int height=(displayMode == null ? 600 : displayMode.getHeight() - 100);
  myContainer.setPreferredSize(new Dimension(width,height));
  Dimension size=DimensionService.getInstance().getSize(getDimensionServiceKey());
  if (size == null) {
    myContainer.setPreferredSize(new Dimension(width,height));
  }
  init();
}
