{
  SNode property=SNodeFactoryOperations.createNewNode(MetaAdapterFactory.getConcept(new UUID(1782411230332735017l,-6324602048325217350l),1073389658414l,"jetbrains.mps.lang.editor.structure.CellModel_Property"),null);
  SLinkOperations.setTarget(property,MetaAdapterFactory.getReferenceLink(new UUID(1782411230332735017l,-6324602048325217350l),1139848536355l,1140103550593l,"relationDeclaration"),SLinkOperations.getTarget(node,MetaAdapterFactory.getReferenceLink(new UUID(1782411230332735017l,-6324602048325217350l),1139848536355l,1140103550593l,"relationDeclaration")));
  SLinkOperations.setTarget(node,MetaAdapterFactory.getReferenceLink(new UUID(1782411230332735017l,-6324602048325217350l),1139848536355l,1140103550593l,"relationDeclaration"),null);
  for (  SNode child : ListSequence.fromList(SNodeOperations.getChildren(node))) {
    String role=child.getRoleInParent();
    node.removeChild(child);
    property.addChild(role,child);
  }
  for (  Map.Entry<String,String> propertyEntry : SetSequence.fromSet(SNodeOperations.getProperties(node).entrySet())) {
    SNodeAccessUtil.setProperty(property,propertyEntry.getKey(),propertyEntry.getValue());
  }
  for (  SReference reference : Sequence.fromIterable(node.getReferences())) {
    property.setReference(reference.getRole(),reference);
  }
  jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations.replaceWithAnother(node,property);
}
