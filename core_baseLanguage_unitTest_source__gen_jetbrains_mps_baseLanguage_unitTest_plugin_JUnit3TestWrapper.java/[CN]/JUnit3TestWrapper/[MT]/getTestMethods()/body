{
  return ListSequence.fromList(SLinkOperations.getTargets(myNode,"method",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return JUnit3MethodWrapper.isTestMethod(it);
    }
  }
).select(new ISelector<SNode,ITestNodeWrapper>(){
    public ITestNodeWrapper select(    SNode it){
      return TestNodeWrapperFactory.tryToWrap(it);
    }
  }
).where(new IWhereFilter<ITestNodeWrapper>(){
    public boolean accept(    ITestNodeWrapper it){
      return it != null;
    }
  }
);
}
