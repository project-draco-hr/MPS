{
  return ListSequence.fromList(SLinkOperations.getTargets(myNode,"method",true)).where(new IWhereFilter<SNode>(){
    public boolean accept(    SNode it){
      return !(BaseMethodDeclaration_Behavior.call_isAbstract_1232982539764(it)) && SNodeOperations.isInstanceOf(SLinkOperations.getTarget(it,"visibility",true),"jetbrains.mps.baseLanguage.structure.PublicVisibility") && SPropertyOperations.getString(it,"name").startsWith("test");
    }
  }
).select(new ISelector<SNode,ITestNodeWrapper>(){
    public ITestNodeWrapper select(    SNode it){
      return TestNodeWrapperFactory.tryToWrap(it);
    }
  }
);
}
